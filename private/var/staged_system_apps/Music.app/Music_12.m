void *sub_100886E9C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _OWORD v27[2];
  void *v28;
  uint64_t v29;
  long long v30;
  long long v31;
  uint64_t v32;
  uint64_t v33;
  long long v34;
  long long v35;
  uint64_t v36;
  char v37;
  uint64_t (*v38)(uint64_t (**)(void));
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;

  v6 = sub_100063814(&qword_1010BCFB8);
  __chkstk_darwin(v6 - 8);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  v11 = sub_100068990(a1, v9);
  v12 = a2[3];
  v13 = a2[4];
  v14 = sub_100068990(a2, v12);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (*(uint64_t (**)(char *, void *, uint64_t, __n128))(v18 + 16))(v17, v11, v9, v15);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void *, uint64_t, __n128))(v23 + 16))(v22, v14, v12, v20);
  sub_10006CAB8(a3, (uint64_t)v8, &qword_1010BCFB8);
  if (qword_1010BBCC8 != -1) {
    swift_once();
  }
  v24 = static ApplicationCapabilities.Controller.shared;
  swift_retain();
  Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)(v17, v24, (uint64_t)v22, (uint64_t)v8, v9, v12, v10, v13, &v29);
  v33 = v29;
  v27[1] = v30;
  v27[0] = v31;
  v34 = v30;
  v35 = v31;
  v36 = v32;
  v37 = 4;
  v38 = sub_1008A4BF8;
  v39 = 0;
  v40 = 0x4014000000000000;
  v41 = &unk_1010BE308;
  v42 = 0;
  v43 = &unk_1010BE310;
  v44 = 0;
  v25 = (void *)sub_100881668((uint64_t)&v33);
  swift_release();
  swift_release();
  swift_release();
  v28 = _swiftEmptyArrayStorage;
  sub_1008E55A8(v25);
  return v28;
}

void *sub_1008871B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v50 = a3;
  uint64_t v57 = a2;
  uint64_t v4 = sub_100063814(&qword_1010BCFB8);
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v53 = *(void *)(v54 + 64);
  __chkstk_darwin(v4 - 8);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v6;
  uint64_t v7 = type metadata accessor for Playlist();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  v55 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v49 = (char *)&v42 - v11;
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - v13;
  uint64_t v15 = type metadata accessor for Playlist.Entry();
  uint64_t v48 = *(void *)(v15 - 8);
  uint64_t v16 = v48;
  uint64_t v56 = *(void *)(v48 + 64);
  __chkstk_darwin(v15);
  v52 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v47 = (char *)&v42 - v19;
  __n128 v21 = __chkstk_darwin(v20);
  v23 = (char *)&v42 - v22;
  v46 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16);
  v45 = (char *)&v42 - v22;
  v46((char *)&v42 - v22, a1, v15, v21);
  uint64_t v24 = a1 + *(int *)(type metadata accessor for PlaylistContext() + 20);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v44 = v14;
  v25(v14, v24, v7);
  sub_10006CAB8(v50, (uint64_t)v6, &qword_1010BCFB8);
  v26 = v49;
  v25(v49, (uint64_t)v14, v7);
  uint64_t v27 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v50 = swift_allocObject();
  v28 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v43 = v7;
  v28(v50 + ((v27 + 16) & ~v27), v26, v7);
  uint64_t v42 = v8 + 32;
  v29 = v47;
  ((void (*)(char *, char *, uint64_t))v46)(v47, v23, v15);
  v28((uint64_t)v55, v44, v7);
  uint64_t v30 = v48;
  uint64_t v31 = *(unsigned __int8 *)(v48 + 80);
  uint64_t v32 = (v31 + 24) & ~v31;
  uint64_t v33 = (v56 + v27 + v32) & ~v27;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v57;
  v35 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 32);
  v35(v34 + v32, v29, v15);
  v28(v34 + v33, v55, v43);
  v36 = v52;
  v35((uint64_t)v52, v45, v15);
  unint64_t v37 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  unint64_t v38 = (v53 + v31 + v37) & ~v31;
  uint64_t v39 = swift_allocObject();
  sub_10003CABC((uint64_t)v51, v39 + v37, &qword_1010BCFB8);
  v35(v39 + v38, v36, v15);
  v59[0] = sub_1008631F4;
  v59[1] = v50;
  v59[2] = &unk_1010BD590;
  v59[3] = v34;
  v59[4] = &unk_1010BD5A0;
  v59[5] = v39;
  char v60 = 38;
  v61 = sub_100842DF8;
  uint64_t v62 = 0;
  uint64_t v63 = 0x4014000000000000;
  v64 = &unk_1010BD578;
  uint64_t v65 = 0;
  v66 = &unk_1010BD580;
  uint64_t v67 = 0;
  swift_retain();
  v40 = (void *)sub_1008817C8((uint64_t)v59);
  swift_release();
  swift_release();
  swift_release();
  v58 = _swiftEmptyArrayStorage;
  sub_1008E55A8(v40);
  return v58;
}

__n128 static MusicActions.libraryActions(item:library:alertPresenter:noticePresenter:presentationSource:playlistPickerPresenter:metricsReportingContext:)@<Q0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  sub_100895688(a1, a2, a3, a4, a5, a6, a7, (uint64_t)v11);
  long long v9 = v11[3];
  *(_OWORD *)(a8 + 32) = v11[2];
  *(_OWORD *)(a8 + 48) = v9;
  *(_OWORD *)(a8 + 64) = v11[4];
  __n128 result = (__n128)v11[1];
  *(_OWORD *)a8 = v11[0];
  *(__n128 *)(a8 + 16) = result;
  return result;
}

uint64_t sub_10088778C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)&long long v94 = a8;
  *(void *)&long long v93 = a7;
  uint64_t v96 = a5;
  uint64_t v92 = a11;
  v91 = (void *)a10;
  v95 = (char *)a9;
  uint64_t v16 = v106;
  uint64_t v17 = sub_100063814(&qword_1010BCFB8);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000688E4(a1, (uint64_t)v107);
  sub_100063814(&qword_1010C2AC0);
  sub_100063814(&qword_1010BE258);
  uint64_t v20 = _swiftEmptyArrayStorage;
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v110 = 0;
    long long v108 = 0u;
    long long v109 = 0u;
    sub_1000637B8((uint64_t)&v108, &qword_1010BE260);
    v90 = (unint64_t (**)())_swiftEmptyArrayStorage;
    goto LABEL_5;
  }
  sub_100068978(&v108, (uint64_t)v98);
  sub_1000688E4((uint64_t)v98, (uint64_t)v121);
  sub_1000688E4(a2, (uint64_t)v112);
  sub_10006CAB8(a3, (uint64_t)v19, &qword_1010BCFB8);
  if (qword_1010BBCC8 != -1) {
    goto LABEL_47;
  }
  while (1)
  {
    uint64_t v21 = static ApplicationCapabilities.Controller.shared;
    swift_retain();
    sub_1008CD850((uint64_t)v121, v21, (uint64_t)v112, (uint64_t)v19, v106);
    uint64_t v22 = v106[6];
    v23 = v106[7];
    long long v24 = *((_OWORD *)v16 + 1);
    *((_OWORD *)v16 + 11) = *(_OWORD *)v16;
    *((_OWORD *)v16 + 12) = v24;
    *((_OWORD *)v16 + 13) = *((_OWORD *)v16 + 2);
    v112[6] = v22;
    v112[7] = v23;
    char v113 = 39;
    v114 = sub_100842DF8;
    uint64_t v115 = 0;
    uint64_t v116 = 0x4014000000000000;
    v117 = &unk_1010BE878;
    uint64_t v118 = 0;
    v119 = &unk_1010BE880;
    uint64_t v120 = 0;
    long long v25 = *((_OWORD *)v16 + 16);
    *((_OWORD *)v16 + 23) = *((_OWORD *)v16 + 15);
    *((_OWORD *)v16 + 24) = v25;
    long long v26 = *((_OWORD *)v16 + 12);
    *((_OWORD *)v16 + 19) = *((_OWORD *)v16 + 11);
    *((_OWORD *)v16 + 20) = v26;
    long long v27 = *((_OWORD *)v16 + 14);
    *((_OWORD *)v16 + 21) = *((_OWORD *)v16 + 13);
    *((_OWORD *)v16 + 22) = v27;
    long long v28 = *((_OWORD *)v16 + 18);
    *((_OWORD *)v16 + 25) = *((_OWORD *)v16 + 17);
    *((_OWORD *)v16 + 26) = v28;
    v29 = (void *)sub_100881928((uint64_t)v121);
    sub_10089ADF0((uint64_t)v112, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(void *)&long long v104 = v20;
    sub_1008E55A8(v29);
    v90 = (unint64_t (**)())v104;
    sub_1000760E4((uint64_t)v98);
LABEL_5:
    v88 = v19;
    sub_10006CAB8((uint64_t)a4, (uint64_t)&v104, &qword_1010BDF80);
    uint64_t v89 = a3;
    if (v105)
    {
      sub_100068978(&v104, (uint64_t)&v108);
      uint64_t v30 = *(void *)(a1 + 24);
      uint64_t v86 = *(void *)(a1 + 32);
      uint64_t v31 = sub_100068990((void *)a1, v30);
      int64_t v87 = a6;
      uint64_t v32 = v31;
      uint64_t v33 = *((void *)&v109 + 1);
      uint64_t v84 = v110;
      uint64_t v34 = (void *)a1;
      v35 = sub_100068990(&v108, *((uint64_t *)&v109 + 1));
      v85 = &v83;
      __n128 v36 = __chkstk_darwin(v35);
      unint64_t v38 = (char *)&v83 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v40 = (*(uint64_t (**)(char *, void *, uint64_t, __n128))(v39 + 16))(v38, v32, v30, v36);
      __n128 v41 = __chkstk_darwin(v40);
      uint64_t v43 = (char *)&v83 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, void *, uint64_t, __n128))(v44 + 16))(v43, v35, v33, v41);
      uint64_t v45 = (uint64_t)v88;
      sub_10006CAB8(a3, (uint64_t)v88, &qword_1010BCFB8);
      uint64_t v46 = (uint64_t)v43;
      a6 = v87;
      Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)(v38, v46, v45, v30, v33, v86, v84, v107);
      long long v47 = *((_OWORD *)v16 + 6);
      long long v48 = *((_OWORD *)v16 + 7);
      long long v49 = *((_OWORD *)v16 + 5);
      v98[0] = *((_OWORD *)v16 + 4);
      v98[1] = v49;
      v98[2] = v47;
      long long v99 = v48;
      LOBYTE(v100) = 14;
      *((void *)&v100 + 1) = sub_1008A4BE4;
      *(void *)&long long v101 = 0;
      *((void *)&v101 + 1) = 0x4014000000000000;
      *(void *)&long long v102 = &unk_1010BE328;
      *((void *)&v102 + 1) = 0;
      *(void *)&long long v103 = &unk_1010BE330;
      *((void *)&v103 + 1) = 0;
      long long v50 = v101;
      *((_OWORD *)v16 + 15) = v100;
      *((_OWORD *)v16 + 16) = v50;
      long long v51 = v103;
      *((_OWORD *)v16 + 17) = v102;
      *((_OWORD *)v16 + 18) = v51;
      long long v52 = v98[1];
      *((_OWORD *)v16 + 11) = v98[0];
      *((_OWORD *)v16 + 12) = v52;
      long long v53 = v99;
      *((_OWORD *)v16 + 13) = v98[2];
      *((_OWORD *)v16 + 14) = v53;
      uint64_t v54 = (void *)sub_100881A88((uint64_t)v112);
      sub_1001ECE7C((uint64_t)v98);
      v97 = _swiftEmptyArrayStorage;
      sub_1008E55A8(v54);
      v55 = v97;
      sub_1000760E4((uint64_t)&v108);
    }
    else
    {
      sub_1000637B8((uint64_t)&v104, &qword_1010BDF80);
      v55 = _swiftEmptyArrayStorage;
      uint64_t v34 = (void *)a1;
      uint64_t v45 = (uint64_t)v88;
    }
    uint64_t v56 = v34[3];
    uint64_t v57 = v34[4];
    v58 = sub_100068990(v34, v56);
    __n128 v59 = __chkstk_darwin(v58);
    v61 = (char *)&v83 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v62 + 16))(v61, v59);
    sub_1000688E4(v93, (uint64_t)v98);
    sub_10006CAB8(v89, v45, &qword_1010BCFB8);
    uint64_t v82 = v57;
    uint64_t v81 = v45;
    uint64_t v19 = v95;
    uint64_t v20 = v91;
    a1 = v92;
    Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v61, v96, (void *)a6, (uint64_t)v98, v94, (uint64_t)v95, (uint64_t)v91, v92, (unint64_t (**)())&v108, v81, v56, v82);
    long long v63 = *(_OWORD *)(v16 + 17);
    long long v93 = *(_OWORD *)(v16 + 19);
    long long v94 = v63;
    *(void *)&v98[0] = v108;
    *(_OWORD *)((char *)v98 + 8) = v63;
    *(_OWORD *)((char *)&v98[1] + 8) = v93;
    *((void *)&v98[2] + 1) = v111;
    LOBYTE(v99) = 5;
    *((void *)&v99 + 1) = sub_100842DF8;
    *(void *)&long long v100 = 0;
    *((void *)&v100 + 1) = 0x4014000000000000;
    *(void *)&long long v101 = &unk_1010BE6B0;
    *((void *)&v101 + 1) = 0;
    *(void *)&long long v102 = &unk_1010BE6B8;
    *((void *)&v102 + 1) = 0;
    swift_retain();
    id v64 = (id)a6;
    swift_bridgeObjectRetain();
    sub_100369804((uint64_t)v20, a1);
    uint64_t v65 = sub_100881BE8((uint64_t)v98);
    swift_release();
    swift_release();
    swift_release();
    sub_100063814(&qword_1010BE038);
    v66 = (void *)swift_allocObject();
    uint64_t v16 = v90;
    v66[4] = v90;
    a3 = (uint64_t)(v66 + 4);
    v66[5] = v55;
    v66[6] = v65;
    int64_t v67 = (int64_t)v16[2];
    swift_bridgeObjectRetain();
    v68 = sub_10087EAC8(0, v67, 1, _swiftEmptyArrayStorage);
    a4 = v68;
    if (v16[2])
    {
      if ((v68[3] >> 1) - v68[2] < v67) {
        goto LABEL_44;
      }
      sub_100063814(&qword_1010BDF50);
      uint64_t result = swift_arrayInitWithCopy();
      if (v67)
      {
        uint64_t v70 = a4[2];
        BOOL v71 = __OFADD__(v70, v67);
        uint64_t v72 = v70 + v67;
        if (v71)
        {
          __break(1u);
LABEL_49:
          __break(1u);
          goto LABEL_50;
        }
        a4[2] = v72;
      }
    }
    else if (v67)
    {
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    swift_bridgeObjectRelease();
    uint64_t v73 = v66[5];
    uint64_t v19 = *(char **)(v73 + 16);
    a6 = a4[2];
    uint64_t v16 = (unint64_t (**)())&v19[a6];
    if (__OFADD__(a6, v19))
    {
      __break(1u);
    }
    else
    {
      a1 = a4[3];
      swift_bridgeObjectRetain();
      if ((uint64_t)v16 <= (uint64_t)(a1 >> 1))
      {
        if (v19) {
          goto LABEL_17;
        }
        goto LABEL_26;
      }
    }
    if (a6 <= (uint64_t)v16) {
      int64_t v76 = (int64_t)&v19[a6];
    }
    else {
      int64_t v76 = a6;
    }
    a4 = sub_10087EAC8((void *)1, v76, 1, a4);
    a6 = a4[2];
    if (*(void *)(v73 + 16))
    {
LABEL_17:
      if ((a4[3] >> 1) - a6 < (uint64_t)v19) {
        goto LABEL_45;
      }
      sub_100063814(&qword_1010BDF50);
      uint64_t result = swift_arrayInitWithCopy();
      if (v19)
      {
        uint64_t v74 = a4[2];
        BOOL v71 = __OFADD__(v74, v19);
        v75 = &v19[v74];
        if (v71) {
          goto LABEL_49;
        }
        a4[2] = v75;
      }
      goto LABEL_27;
    }
LABEL_26:
    if (v19) {
      goto LABEL_42;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v77 = v66[6];
    uint64_t v19 = *(char **)(v77 + 16);
    a6 = a4[2];
    uint64_t v16 = (unint64_t (**)())&v19[a6];
    if (__OFADD__(a6, v19))
    {
      __break(1u);
    }
    else
    {
      a1 = a4[3];
      swift_bridgeObjectRetain();
      if ((uint64_t)v16 <= (uint64_t)(a1 >> 1))
      {
        if (!v19) {
          goto LABEL_39;
        }
        goto LABEL_30;
      }
    }
    if (a6 <= (uint64_t)v16) {
      int64_t v80 = (int64_t)&v19[a6];
    }
    else {
      int64_t v80 = a6;
    }
    a4 = sub_10087EAC8((void *)1, v80, 1, a4);
    a6 = a4[2];
    if (!*(void *)(v77 + 16))
    {
LABEL_39:
      if (!v19) {
        goto LABEL_40;
      }
      goto LABEL_43;
    }
LABEL_30:
    if ((a4[3] >> 1) - a6 >= (uint64_t)v19) {
      break;
    }
LABEL_46:
    __break(1u);
LABEL_47:
    swift_once();
  }
  sub_100063814(&qword_1010BDF50);
  uint64_t result = swift_arrayInitWithCopy();
  if (!v19)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_100063814(&qword_1010BE040);
    swift_arrayDestroy();
    swift_deallocClassInstance();
    return (uint64_t)a4;
  }
  uint64_t v78 = a4[2];
  BOOL v71 = __OFADD__(v78, v19);
  v79 = &v19[v78];
  if (!v71)
  {
    a4[2] = v79;
    goto LABEL_40;
  }
LABEL_50:
  __break(1u);
  return result;
}

__n128 static MusicActions.favoritingActions(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  sub_100895F4C(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)v12);
  long long v10 = v12[3];
  *(_OWORD *)(a9 + 32) = v12[2];
  *(_OWORD *)(a9 + 48) = v10;
  *(_OWORD *)(a9 + 64) = v12[4];
  __n128 result = (__n128)v12[1];
  *(_OWORD *)a9 = v12[0];
  *(__n128 *)(a9 + 16) = result;
  return result;
}

void *sub_100888190(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v90 = a7;
  uint64_t v91 = a8;
  uint64_t v88 = a6;
  long long v93 = (void *)a4;
  uint64_t v92 = a9;
  uint64_t v14 = sub_100063814(&qword_1010BCFB8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v87 = a1[4];
  uint64_t v18 = sub_100068990(a1, v17);
  __n128 v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v22 + 16))(v21, v19);
  uint64_t v23 = a8;
  uint64_t v24 = (uint64_t)v16;
  sub_10006CAB8(v23, (uint64_t)v16, &qword_1010BCFB8);
  id v25 = a2;
  id v26 = a3;
  uint64_t v27 = a5;
  swift_bridgeObjectRetain();
  uint64_t v28 = v88;
  uint64_t v29 = v90;
  sub_100369804(v88, v90);
  Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((unint64_t)v21, (uint64_t)v25, (uint64_t)v26, (uint64_t)v93, v27, v28, v29, v24, &v94, v17, v87);
  long long v86 = v95;
  long long v114 = v95;
  long long v85 = v96;
  long long v115 = v96;
  char v113 = v94;
  uint64_t v116 = v97;
  char v117 = 20;
  uint64_t v118 = sub_1008A4BF8;
  uint64_t v119 = 0;
  uint64_t v120 = 0x4014000000000000;
  v121 = &unk_1010BE6E8;
  uint64_t v122 = 0;
  v123 = &unk_1010BE6F0;
  uint64_t v124 = 0;
  uint64_t v87 = sub_100881D48((uint64_t)&v113);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v30 = a1[3];
  *(void *)&long long v86 = a1[4];
  uint64_t v31 = sub_100068990(a1, v30);
  __n128 v32 = __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v81 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v35 + 16))(v34, v32);
  sub_1000688E4(v92, (uint64_t)v106);
  sub_10006CAB8(v91, v24, &qword_1010BCFB8);
  id v36 = v25;
  id v37 = v26;
  uint64_t v38 = v27;
  uint64_t v89 = v27;
  swift_bridgeObjectRetain();
  uint64_t v39 = v88;
  unint64_t v40 = v90;
  sub_100369804(v88, v90);
  uint64_t v80 = v40;
  uint64_t v41 = v39;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v34, v36, (uint64_t)v37, (uint64_t)v106, (uint64_t)v93, v38, v39, &v98, v80, v24, v30, v86);
  sub_1008B0D80((uint64_t)&v98, (uint64_t)v100);
  sub_100897A8C((uint64_t)&v98, (uint64_t)&v112);
  sub_100897AE8(&v112);
  sub_10003CABC((uint64_t)&v99, (uint64_t)v111, (uint64_t *)&unk_1010C28C0);
  sub_1001ECE50((uint64_t)v111);
  swift_release();
  swift_release();
  swift_release();
  *(void *)&long long v86 = sub_100881EA8((uint64_t)v100);
  sub_100897B14(v100);
  uint64_t v42 = a1[3];
  *(void *)&long long v85 = a1[4];
  uint64_t v43 = sub_100068990(a1, v42);
  __n128 v44 = __chkstk_darwin(v43);
  uint64_t v46 = (char *)&v81 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v47 + 16))(v46, v44);
  sub_1000688E4(v92, (uint64_t)v106);
  uint64_t v48 = v24;
  uint64_t v82 = v24;
  sub_10006CAB8(v91, v24, &qword_1010BCFB8);
  id v49 = v36;
  id v83 = v49;
  id v50 = v37;
  id v84 = v50;
  uint64_t v51 = v89;
  swift_bridgeObjectRetain();
  unint64_t v52 = v90;
  sub_100369804(v41, v90);
  long long v53 = v49;
  uint64_t v54 = v41;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v46, v53, (uint64_t)v50, (uint64_t)v106, (uint64_t)v93, v51, v41, &v101, v52, v48, v42, v85);
  sub_1008B0D80((uint64_t)&v101, (uint64_t)v103);
  sub_100897A8C((uint64_t)&v101, (uint64_t)&v110);
  sub_100897AE8(&v110);
  sub_10003CABC((uint64_t)&v102, (uint64_t)v109, (uint64_t *)&unk_1010C28C0);
  sub_1001ECE50((uint64_t)v109);
  swift_release();
  swift_release();
  swift_release();
  *(void *)&long long v85 = sub_100881EA8((uint64_t)v103);
  sub_100897B14(v103);
  uint64_t v56 = a1[3];
  uint64_t v55 = a1[4];
  uint64_t v57 = sub_100068990(a1, v56);
  __n128 v58 = __chkstk_darwin(v57);
  uint64_t v60 = (char *)&v81 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v61 + 16))(v60, v58);
  sub_1000688E4(v92, (uint64_t)v106);
  uint64_t v62 = v82;
  sub_10006CAB8(v91, v82, &qword_1010BCFB8);
  id v63 = v83;
  id v64 = v84;
  uint64_t v65 = v89;
  swift_bridgeObjectRetain();
  sub_100369804(v54, v52);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v60, v63, (uint64_t)v64, (uint64_t)v106, (uint64_t)v93, v65, v54, &v104, v52, v62, v56, v55);
  sub_1008B0D80((uint64_t)&v104, (uint64_t)v106);
  sub_100897A8C((uint64_t)&v104, (uint64_t)&v108);
  sub_100897AE8(&v108);
  sub_10003CABC((uint64_t)&v105, (uint64_t)v107, (uint64_t *)&unk_1010C28C0);
  sub_1001ECE50((uint64_t)v107);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v66 = sub_100881EA8((uint64_t)v106);
  sub_100897B14(v106);
  sub_100063814(&qword_1010BE038);
  __n128 result = (void *)swift_allocObject();
  v68 = result;
  result[4] = v87;
  long long v93 = result + 4;
  uint64_t v69 = v85;
  result[5] = v86;
  result[6] = v69;
  result[7] = v66;
  uint64_t v70 = _swiftEmptyArrayStorage;
  uint64_t v71 = 4;
  while (1)
  {
    uint64_t v72 = v68[v71];
    uint64_t v73 = *(void *)(v72 + 16);
    int64_t v74 = v70[2];
    int64_t v75 = v74 + v73;
    if (__OFADD__(v74, v73)) {
      break;
    }
    swift_bridgeObjectRetain();
    __n128 result = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (result && v75 <= v70[3] >> 1)
    {
      if (*(void *)(v72 + 16)) {
        goto LABEL_13;
      }
    }
    else
    {
      if (v74 <= v75) {
        int64_t v76 = v74 + v73;
      }
      else {
        int64_t v76 = v74;
      }
      __n128 result = sub_10087EAC8(result, v76, 1, v70);
      uint64_t v70 = result;
      if (*(void *)(v72 + 16))
      {
LABEL_13:
        if ((v70[3] >> 1) - v70[2] < v73) {
          goto LABEL_20;
        }
        sub_100063814(&qword_1010BDF50);
        __n128 result = (void *)swift_arrayInitWithCopy();
        if (v73)
        {
          uint64_t v77 = v70[2];
          BOOL v78 = __OFADD__(v77, v73);
          uint64_t v79 = v77 + v73;
          if (v78) {
            goto LABEL_21;
          }
          v70[2] = v79;
        }
        goto LABEL_3;
      }
    }
    if (v73) {
      goto LABEL_19;
    }
LABEL_3:
    __n128 result = (void *)swift_bridgeObjectRelease();
    if (++v71 == 8)
    {
      swift_setDeallocating();
      sub_100063814(&qword_1010BE040);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      return v70;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t static MusicActions.queueActions(item:playbackIntent:playbackController:library:alertPresenter:noticePresenter:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, unint64_t a9, uint64_t a10)
{
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v38 = a2;
  unint64_t v43 = a9;
  uint64_t v41 = a3;
  uint64_t v42 = a8;
  uint64_t v46 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100063814(&qword_1010BCFB8);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v16 - 8);
  __n128 v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000688E4(a1, (uint64_t)v48);
  sub_100063814(&qword_1010BDF88);
  uint64_t v20 = String.init<A>(describing:)();
  uint64_t v39 = v21;
  uint64_t v40 = v20;
  sub_1000688E4(a1, (uint64_t)v48);
  sub_10006CAB8(a4, (uint64_t)v47, &qword_1010BD028);
  sub_10006CAB8(a10, (uint64_t)v19, &qword_1010BCFB8);
  unint64_t v22 = (*(unsigned __int8 *)(v17 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v23 = (void *)swift_allocObject();
  sub_100068978(v48, (uint64_t)(v23 + 2));
  uint64_t v24 = v38;
  id v25 = v41;
  v23[7] = v38;
  v23[8] = v25;
  sub_10003CABC((uint64_t)v47, (uint64_t)(v23 + 9), &qword_1010BD028);
  uint64_t v26 = v45;
  v23[14] = v44;
  v23[15] = v26;
  uint64_t v27 = (uint64_t)v23 + v22;
  uint64_t v29 = v42;
  unint64_t v28 = v43;
  v23[16] = v42;
  v23[17] = v28;
  sub_10003CABC((uint64_t)v19, v27, &qword_1010BCFB8);
  id v30 = v24;
  id v31 = v25;
  swift_bridgeObjectRetain();
  sub_100369804(v29, v28);
  UUID.init()();
  uint64_t v32 = UUID.uuidString.getter();
  uint64_t v34 = v33;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v46);
  strcpy((char *)v48, "ActionMenu: ");
  BYTE13(v48[0]) = 0;
  HIWORD(v48[0]) = -5120;
  v35._countAndFlagsBits = v40;
  v35._object = v39;
  String.append(_:)(v35);
  uint64_t result = swift_bridgeObjectRelease();
  long long v37 = v48[0];
  *(void *)a7 = v32;
  *(void *)(a7 + 8) = v34;
  *(_OWORD *)(a7 + 16) = v37;
  *(void *)(a7 + 32) = 0;
  *(void *)(a7 + 40) = 0xE000000000000000;
  *(void *)(a7 + 48) = 0;
  *(unsigned char *)(a7 + 56) = 0;
  *(void *)(a7 + 64) = sub_100896554;
  *(void *)(a7 + 72) = v23;
  return result;
}

void *sub_100888D18(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  unint64_t v81 = a8;
  uint64_t v82 = a4;
  uint64_t v84 = a7;
  long long v85 = (void *)a5;
  uint64_t v75 = a6;
  uint64_t v83 = a9;
  uint64_t v13 = sub_100063814(&qword_1010BCFB8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v80 = a1[4];
  uint64_t v17 = sub_100068990(a1, v16);
  __chkstk_darwin(v17);
  __n128 v19 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  sub_10006CAB8(a4, (uint64_t)v97, &qword_1010BD028);
  sub_10006CAB8(a9, (uint64_t)v15, &qword_1010BCFB8);
  id v21 = a2;
  id v22 = a3;
  uint64_t v23 = v75;
  swift_bridgeObjectRetain();
  uint64_t v24 = v84;
  unint64_t v25 = v81;
  sub_100369804(v84, v81);
  uint64_t v73 = v25;
  uint64_t v26 = v22;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v19, v21, (uint64_t)v22, (uint64_t)v97, (uint64_t)v85, v23, v24, &v86, v73, (uint64_t)v15, v16, v80);
  sub_1008B0D80((uint64_t)&v86, (uint64_t)v88);
  sub_100897A8C((uint64_t)&v86, (uint64_t)v105);
  sub_100897AE8(v105);
  sub_10003CABC((uint64_t)&v87, (uint64_t)v104, (uint64_t *)&unk_1010C28C0);
  sub_1001ECE50((uint64_t)v104);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v80 = sub_100881EA8((uint64_t)v88);
  sub_100897B14(v88);
  uint64_t v27 = a1[3];
  uint64_t v79 = a1[4];
  unint64_t v28 = sub_100068990(a1, v27);
  __chkstk_darwin(v28);
  id v30 = (char *)&v75 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v31 + 16))(v30);
  sub_10006CAB8(v82, (uint64_t)v97, &qword_1010BD028);
  uint64_t v32 = (uint64_t)v15;
  sub_10006CAB8(v83, (uint64_t)v15, &qword_1010BCFB8);
  id v33 = v21;
  id v34 = v26;
  uint64_t v35 = v23;
  swift_bridgeObjectRetain();
  uint64_t v36 = v84;
  unint64_t v37 = v81;
  sub_100369804(v84, v81);
  uint64_t v74 = v37;
  uint64_t v38 = v33;
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v30, v33, (uint64_t)v34, (uint64_t)v97, (uint64_t)v85, v35, v36, &v89, v74, v32, v27, v79);
  sub_1008B0D80((uint64_t)&v89, (uint64_t)v91);
  sub_100897A8C((uint64_t)&v89, (uint64_t)&v103);
  sub_100897AE8(&v103);
  sub_10003CABC((uint64_t)&v90, (uint64_t)v102, (uint64_t *)&unk_1010C28C0);
  sub_1001ECE50((uint64_t)v102);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v79 = sub_100881EA8((uint64_t)v91);
  sub_100897B14(v91);
  uint64_t v39 = a1[3];
  uint64_t v78 = a1[4];
  uint64_t v40 = sub_100068990(a1, v39);
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v75 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v43 + 16))(v42);
  sub_10006CAB8(v82, (uint64_t)v97, &qword_1010BD028);
  uint64_t v44 = v32;
  sub_10006CAB8(v83, v32, &qword_1010BCFB8);
  id v45 = v38;
  id v76 = v45;
  id v46 = v34;
  id v77 = v46;
  uint64_t v47 = v35;
  swift_bridgeObjectRetain();
  uint64_t v48 = v84;
  unint64_t v49 = v81;
  sub_100369804(v84, v81);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v42, v45, (uint64_t)v46, (uint64_t)v97, (uint64_t)v85, v47, v48, &v92, v49, v44, v39, v78);
  sub_1008B0D80((uint64_t)&v92, (uint64_t)v94);
  sub_100897A8C((uint64_t)&v92, (uint64_t)&v101);
  sub_100897AE8(&v101);
  sub_10003CABC((uint64_t)&v93, (uint64_t)v100, (uint64_t *)&unk_1010C28C0);
  sub_1001ECE50((uint64_t)v100);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v78 = sub_100881EA8((uint64_t)v94);
  sub_100897B14(v94);
  uint64_t v51 = a1[3];
  uint64_t v50 = a1[4];
  unint64_t v52 = sub_100068990(a1, v51);
  __chkstk_darwin(v52);
  uint64_t v54 = (char *)&v75 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v55 + 16))(v54);
  sub_10006CAB8(v82, (uint64_t)v97, &qword_1010BD028);
  sub_10006CAB8(v83, v44, &qword_1010BCFB8);
  id v56 = v76;
  id v57 = v77;
  swift_bridgeObjectRetain();
  uint64_t v58 = v84;
  sub_100369804(v84, v49);
  Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)((uint64_t)v54, v56, (uint64_t)v57, (uint64_t)v97, (uint64_t)v85, v47, v58, &v95, v49, v44, v51, v50);
  sub_1008B0D80((uint64_t)&v95, (uint64_t)v97);
  sub_100897A8C((uint64_t)&v95, (uint64_t)&v99);
  sub_100897AE8(&v99);
  sub_10003CABC((uint64_t)&v96, (uint64_t)v98, (uint64_t *)&unk_1010C28C0);
  sub_1001ECE50((uint64_t)v98);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v59 = sub_100881EA8((uint64_t)v97);
  sub_100897B14(v97);
  sub_100063814(&qword_1010BE038);
  uint64_t result = (void *)swift_allocObject();
  uint64_t v61 = result;
  result[4] = v80;
  long long v85 = result + 4;
  uint64_t v62 = v78;
  result[5] = v79;
  result[6] = v62;
  result[7] = v59;
  id v63 = _swiftEmptyArrayStorage;
  uint64_t v64 = 4;
  while (1)
  {
    uint64_t v65 = v61[v64];
    uint64_t v66 = *(void *)(v65 + 16);
    int64_t v67 = v63[2];
    int64_t v68 = v67 + v66;
    if (__OFADD__(v67, v66)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (result && v68 <= v63[3] >> 1)
    {
      if (*(void *)(v65 + 16)) {
        goto LABEL_13;
      }
    }
    else
    {
      if (v67 <= v68) {
        int64_t v69 = v67 + v66;
      }
      else {
        int64_t v69 = v67;
      }
      uint64_t result = sub_10087EAC8(result, v69, 1, v63);
      id v63 = result;
      if (*(void *)(v65 + 16))
      {
LABEL_13:
        if ((v63[3] >> 1) - v63[2] < v66) {
          goto LABEL_20;
        }
        sub_100063814(&qword_1010BDF50);
        uint64_t result = (void *)swift_arrayInitWithCopy();
        if (v66)
        {
          uint64_t v70 = v63[2];
          BOOL v71 = __OFADD__(v70, v66);
          uint64_t v72 = v70 + v66;
          if (v71) {
            goto LABEL_21;
          }
          v63[2] = v72;
        }
        goto LABEL_3;
      }
    }
    if (v66) {
      goto LABEL_19;
    }
LABEL_3:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (++v64 == 8)
    {
      swift_setDeallocating();
      sub_100063814(&qword_1010BE040);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      return v63;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1008895B8(uint64_t a1, char a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)&long long v146 = a6;
  *(void *)&long long v147 = a5;
  v144 = a4;
  uint64_t v13 = sub_100063814(&qword_1010BCFB8);
  __chkstk_darwin(v13 - 8);
  uint64_t v145 = (uint64_t)&v135 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100882020(a1);
  uint64_t v16 = v15;
  uint64_t v17 = _swiftEmptyArrayStorage;
  if (a2)
  {
    uint64_t v136 = a7;
    uint64_t v137 = a8;
    uint64_t v138 = v15;
    uint64_t v18 = a3[3];
    *(void *)&long long v142 = a3[4];
    *(void *)&long long v141 = a3[5];
    __n128 v19 = sub_100068990(a3, v18);
    uint64_t v20 = v144[3];
    *(void *)&long long v140 = v144[4];
    id v21 = sub_100068990(v144, v20);
    *(void *)&long long v139 = &v135;
    __chkstk_darwin(v21);
    v143 = a3;
    uint64_t v23 = (char *)&v135 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v25 = (*(uint64_t (**)(char *, void *, uint64_t))(v24 + 16))(v23, v19, v18);
    __chkstk_darwin(v25);
    uint64_t v27 = (char *)&v135 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, void *, uint64_t))(v28 + 16))(v27, v21, v20);
    uint64_t v29 = v145;
    sub_10006CAB8(v146, v145, &qword_1010BCFB8);
    Actions.DeleteFromLibrary.Context.init<A, B>(item:library:alertPresenter:metricsReportingContext:)(v23, v147, (uint64_t)v27, v29, v18, v20, v142, v141, (uint64_t (**)())v196, v140);
    uint64_t v30 = *(void *)&v196[0];
    uint64_t v31 = *((void *)&v196[3] + 1);
    long long v140 = *(_OWORD *)((char *)v196 + 8);
    long long v141 = *(_OWORD *)((char *)&v196[1] + 8);
    long long v142 = *(_OWORD *)((char *)&v196[2] + 8);
    uint64_t v32 = (_OWORD *)swift_allocObject();
    long long v33 = v196[1];
    v32[1] = v196[0];
    v32[2] = v33;
    long long v34 = v196[3];
    v32[3] = v196[2];
    v32[4] = v34;
    *(_OWORD *)((char *)v182 + 8) = v140;
    *(_OWORD *)((char *)&v182[1] + 8) = v141;
    *(_OWORD *)((char *)&v182[2] + 8) = v142;
    *(void *)&v182[0] = v30;
    *((void *)&v182[3] + 1) = v31;
    LOBYTE(v183) = 8;
    *((void *)&v183 + 1) = sub_1008527BC;
    *(void *)&long long v184 = v32;
    *((void *)&v184 + 1) = 0x4014000000000000;
    *(void *)&long long v185 = &unk_1010BD2A8;
    *((void *)&v185 + 1) = 0;
    *(void *)&long long v186 = &unk_1010BD2B0;
    *((void *)&v186 + 1) = 0;
    v202[2] = v182[2];
    v202[3] = v182[3];
    v202[0] = v182[0];
    v202[1] = v182[1];
    v202[4] = v183;
    v202[5] = v184;
    v202[6] = v185;
    v202[7] = v186;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    *(void *)&long long v142 = sub_100882180((uint64_t)v202);
    sub_10089ADF0((uint64_t)v182, (void (*)(uint64_t))&_swift_release);
    uint64_t v35 = v143[3];
    uint64_t v36 = v143[4];
    uint64_t v37 = v143[5];
    uint64_t v38 = sub_100068990(v143, v35);
    __chkstk_darwin(v38);
    uint64_t v40 = (char *)&v135 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v41 + 16))(v40);
    uint64_t v42 = v145;
    sub_10006CAB8(v146, v145, &qword_1010BCFB8);
    Actions.RemoveDownload.Context.init<A>(item:library:metricsReportingContext:)((uint64_t)v40, v147, v42, v35, v36, v37, (uint64_t (**)())&v197);
    long long v187 = v197;
    long long v188 = v198;
    long long v189 = v199;
    long long v190 = v200;
    LOBYTE(v191) = 37;
    *((void *)&v191 + 1) = sub_10086081C;
    *(void *)&long long v192 = 0;
    *((void *)&v192 + 1) = 0x4014000000000000;
    *(void *)&long long v193 = &unk_1010BD510;
    *((void *)&v193 + 1) = 0;
    *(void *)&long long v194 = &unk_1010BD518;
    *((void *)&v194 + 1) = 0;
    v201[4] = v191;
    v201[5] = v192;
    v201[6] = v193;
    v201[7] = v194;
    v201[0] = v197;
    v201[1] = v198;
    v201[2] = v199;
    v201[3] = v200;
    swift_retain();
    *(void *)&long long v141 = sub_1008822E0((uint64_t)v201);
    sub_10089ADF0((uint64_t)&v187, (void (*)(uint64_t))&_swift_release);
    uint64_t v43 = v143[3];
    *(void *)&long long v140 = v143[4];
    *(void *)&long long v139 = v143[5];
    uint64_t v44 = sub_100068990(v143, v43);
    uint64_t v46 = v144[3];
    uint64_t v45 = v144[4];
    uint64_t v47 = sub_100068990(v144, v46);
    __chkstk_darwin(v47);
    unint64_t v49 = (char *)&v135 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v51 = (*(uint64_t (**)(char *, void *, uint64_t))(v50 + 16))(v49, v44, v43);
    __chkstk_darwin(v51);
    uint64_t v53 = (char *)&v135 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, void *, uint64_t))(v54 + 16))(v53, v47, v46);
    uint64_t v55 = v145;
    sub_10006CAB8(v146, v145, &qword_1010BCFB8);
    uint64_t v56 = v147;
    swift_retain();
    Actions.DeleteOrRemoveDownload.Context.init<A, B>(item:alertPresenter:library:metricsReportingContext:)((uint64_t)v49, (uint64_t)v53, v56, v55, v43, v46, (uint64_t (*)())v140, v139, (uint64_t (**)())v157, v45);
    sub_10085933C((uint64_t)v157, (uint64_t)v150);
    uint64_t v57 = 4;
    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = &unk_1010BD310;
    *(void *)(v58 + 24) = 0;
    char v174 = 36;
    long long v171 = v153;
    long long v172 = v154;
    *(_OWORD *)v173 = v155[0];
    *(_OWORD *)&v173[9] = *(_OWORD *)((char *)v155 + 9);
    v168[2] = v150[2];
    long long v169 = v151;
    long long v170 = v152;
    v168[0] = v150[0];
    v168[1] = v150[1];
    uint64_t v177 = 0x403E000000000000;
    v175 = sub_100854F5C;
    uint64_t v176 = 0;
    v178 = &unk_1010BD328;
    uint64_t v179 = v58;
    v180 = &unk_1010BD318;
    uint64_t v181 = 0;
    sub_10085A5D8((uint64_t)v157);
    sub_100063814(&qword_1010BDF48);
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_100E251D0;
    LOBYTE(v53) = v174;
    sub_10006CAB8((uint64_t)v168, (uint64_t)v157, &qword_1010BD3C0);
    uint64_t v60 = swift_allocObject();
    long long v61 = v166;
    *(_OWORD *)(v60 + 176) = v165;
    *(_OWORD *)(v60 + 192) = v61;
    *(void *)(v60 + 208) = v167;
    long long v62 = v162;
    *(_OWORD *)(v60 + 112) = v161;
    *(_OWORD *)(v60 + 128) = v62;
    long long v63 = v164;
    *(_OWORD *)(v60 + 144) = v163;
    *(_OWORD *)(v60 + 160) = v63;
    long long v64 = v158;
    *(_OWORD *)(v60 + 48) = v157[2];
    *(_OWORD *)(v60 + 64) = v64;
    long long v65 = v160;
    *(_OWORD *)(v60 + 80) = v159;
    *(_OWORD *)(v60 + 96) = v65;
    long long v66 = v157[1];
    *(_OWORD *)(v60 + 16) = v157[0];
    *(_OWORD *)(v60 + 32) = v66;
    sub_10006CAB8((uint64_t)v168, (uint64_t)v150, &qword_1010BD3C0);
    uint64_t v67 = swift_allocObject();
    long long v68 = v155[4];
    *(_OWORD *)(v67 + 176) = v155[3];
    *(_OWORD *)(v67 + 192) = v68;
    *(void *)(v67 + 208) = v156;
    long long v69 = v155[0];
    *(_OWORD *)(v67 + 112) = v154;
    *(_OWORD *)(v67 + 128) = v69;
    long long v70 = v155[2];
    *(_OWORD *)(v67 + 144) = v155[1];
    *(_OWORD *)(v67 + 160) = v70;
    long long v71 = v151;
    *(_OWORD *)(v67 + 48) = v150[2];
    *(_OWORD *)(v67 + 64) = v71;
    long long v72 = v153;
    *(_OWORD *)(v67 + 80) = v152;
    *(_OWORD *)(v67 + 96) = v72;
    long long v73 = v150[1];
    *(_OWORD *)(v67 + 16) = v150[0];
    *(_OWORD *)(v67 + 32) = v73;
    sub_10006CAB8((uint64_t)v168, (uint64_t)v148, &qword_1010BD3C0);
    uint64_t v74 = swift_allocObject();
    long long v75 = v148[11];
    *(_OWORD *)(v74 + 176) = v148[10];
    *(_OWORD *)(v74 + 192) = v75;
    *(void *)(v74 + 208) = v149;
    long long v76 = v148[7];
    *(_OWORD *)(v74 + 112) = v148[6];
    *(_OWORD *)(v74 + 128) = v76;
    long long v77 = v148[9];
    *(_OWORD *)(v74 + 144) = v148[8];
    *(_OWORD *)(v74 + 160) = v77;
    long long v78 = v148[3];
    *(_OWORD *)(v74 + 48) = v148[2];
    *(_OWORD *)(v74 + 64) = v78;
    long long v79 = v148[5];
    *(_OWORD *)(v74 + 80) = v148[4];
    *(_OWORD *)(v74 + 96) = v79;
    long long v80 = v148[1];
    *(_OWORD *)(v74 + 16) = v148[0];
    *(_OWORD *)(v74 + 32) = v80;
    *(unsigned char *)(v59 + 32) = (_BYTE)v53;
    *(void *)(v59 + 40) = sub_1008986F0;
    *(void *)(v59 + 48) = v60;
    *(void *)(v59 + 56) = sub_1008987DC;
    *(void *)(v59 + 64) = v67;
    *(void *)(v59 + 72) = &unk_1010BE128;
    *(void *)(v59 + 80) = v74;
    *(unsigned char *)(v59 + 112) = 0;
    sub_1000637B8((uint64_t)v168, &qword_1010BD3C0);
    uint64_t v81 = v143[3];
    uint64_t v82 = v143[4];
    uint64_t v83 = v143[5];
    uint64_t v84 = sub_100068990(v143, v81);
    __chkstk_darwin(v84);
    uint64_t v86 = (char *)&v135 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v87 + 16))(v86);
    sub_1000688E4((uint64_t)v144, (uint64_t)v168);
    sub_10006CAB8(v146, v55, &qword_1010BCFB8);
    uint64_t v88 = v147;
    swift_retain();
    Actions.Download.Context.init<A>(item:library:alertPresenter:metricsReportingContext:)((uint64_t)v86, v88, v168, v55, v81, v82, v83, (unint64_t (**)())v148);
    long long v139 = *(_OWORD *)((char *)&v148[1] + 8);
    long long v140 = *(_OWORD *)((char *)v148 + 8);
    *(long long *)((char *)v168 + 8) = *(_OWORD *)((char *)v148 + 8);
    *(long long *)((char *)&v168[1] + 8) = *(_OWORD *)((char *)&v148[1] + 8);
    *(void *)&v168[0] = *(void *)&v148[0];
    *((void *)&v168[2] + 1) = *((void *)&v148[2] + 1);
    LOBYTE(v169) = 9;
    *((void *)&v169 + 1) = sub_100842DF8;
    *(void *)&long long v170 = 0;
    *((void *)&v170 + 1) = 0x4014000000000000;
    *(void *)&long long v171 = &unk_1010BD400;
    *((void *)&v171 + 1) = 0;
    *(void *)&long long v172 = &unk_1010BD408;
    *((void *)&v172 + 1) = 0;
    uint64_t v89 = sub_100882440((uint64_t)v168);
    swift_release();
    swift_release();
    swift_release();
    sub_100063814(&qword_1010BE038);
    uint64_t v90 = (void *)swift_allocObject();
    v90[4] = v142;
    *(void *)&long long v140 = v90 + 4;
    v90[5] = v141;
    v90[6] = v59;
    v90[7] = v89;
    uint64_t v17 = _swiftEmptyArrayStorage;
    uint64_t v91 = &qword_1010BDF50;
    while (1)
    {
      uint64_t v92 = (char *)v90[v57];
      uint64_t v93 = *((void *)v92 + 2);
      long long v94 = (void *)v17[2];
      uint64_t v95 = (void *)((char *)v94 + v93);
      if (__OFADD__(v94, v93))
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (isUniquelyReferenced_nonNull_native && (uint64_t)v95 <= v17[3] >> 1)
      {
        if (*((void *)v92 + 2)) {
          goto LABEL_14;
        }
      }
      else
      {
        if ((uint64_t)v94 <= (uint64_t)v95) {
          int64_t v97 = (int64_t)v94 + v93;
        }
        else {
          int64_t v97 = (int64_t)v94;
        }
        uint64_t v17 = sub_10087EAC8(isUniquelyReferenced_nonNull_native, v97, 1, v17);
        if (*((void *)v92 + 2))
        {
LABEL_14:
          uint64_t v98 = v17[2];
          if ((v17[3] >> 1) - v98 < v93) {
            goto LABEL_40;
          }
          long long v94 = &v17[11 * v98 + 4];
          uint64_t v95 = v92 + 32;
          sub_100063814(&qword_1010BDF50);
          swift_arrayInitWithCopy();
          if (v93)
          {
            uint64_t v99 = v17[2];
            BOOL v100 = __OFADD__(v99, v93);
            uint64_t v101 = v99 + v93;
            if (v100) {
              goto LABEL_41;
            }
            v17[2] = v101;
          }
          goto LABEL_4;
        }
      }
      if (v93) {
        goto LABEL_39;
      }
LABEL_4:
      swift_bridgeObjectRelease();
      if (++v57 == 8)
      {
        swift_setDeallocating();
        sub_100063814(&qword_1010BE040);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        a8 = v137;
        uint64_t v16 = v138;
        a7 = v136;
        a3 = v143;
        break;
      }
    }
  }
  sub_100180E30((uint64_t)a3, (uint64_t)v157);
  sub_100063814(&qword_1010BE108);
  sub_100063814(&qword_1010BE110);
  if (swift_dynamicCast())
  {
    sub_10017C674(v150, &v187);
    sub_10006CAB8(a7, (uint64_t)v157, &qword_1010BDF78);
    if (*((void *)&v157[1] + 1))
    {
      sub_100068978(v157, (uint64_t)v182);
      uint64_t v102 = *((void *)&v188 + 1);
      *(void *)&long long v142 = *((void *)&v189 + 1);
      v143 = (void *)v189;
      id v103 = sub_100068990(&v187, *((uint64_t *)&v188 + 1));
      uint64_t v104 = *((void *)&v182[1] + 1);
      *(void *)&long long v140 = *(void *)&v182[2];
      uint64_t v105 = sub_100068990(v182, *((uint64_t *)&v182[1] + 1));
      *(void *)&long long v141 = &v135;
      __chkstk_darwin(v105);
      v107 = (char *)&v135 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v109 = (*(uint64_t (**)(char *, void *, uint64_t))(v108 + 16))(v107, v103, v102);
      __chkstk_darwin(v109);
      uint64_t v111 = (char *)&v135 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, void *, uint64_t))(v112 + 16))(v111, v105, v104);
      sub_1000688E4((uint64_t)v144, (uint64_t)v195);
      sub_10006CAB8(a8, (uint64_t)v157, &qword_1010BD020);
      uint64_t v113 = v145;
      sub_10006CAB8(v146, v145, &qword_1010BCFB8);
      uint64_t v114 = v147;
      swift_retain();
      sub_10084FD48(v107, v114, (uint64_t)v111, v195, (uint64_t)v157, v113, v102, v104, (unint64_t (**)())v150, (uint64_t)v143, v142, v140);
      uint64_t v115 = *(void *)&v150[0];
      uint64_t v116 = *((void *)&v150[2] + 1);
      swift_release();
      long long v146 = *(long long *)((char *)&v150[1] + 8);
      long long v147 = *(long long *)((char *)v150 + 8);
      *(long long *)((char *)v157 + 8) = *(long long *)((char *)v150 + 8);
      *(long long *)((char *)&v157[1] + 8) = *(long long *)((char *)&v150[1] + 8);
      *(void *)&v157[0] = v115;
      *((void *)&v157[2] + 1) = v116;
      LOBYTE(v158) = 2;
      *((void *)&v158 + 1) = sub_100842DF8;
      *(void *)&long long v159 = 0;
      *((void *)&v159 + 1) = 0x4014000000000000;
      *(void *)&long long v160 = &unk_1010BD0E8;
      *((void *)&v160 + 1) = 0;
      *(void *)&long long v161 = &unk_1010BD0F0;
      *((void *)&v161 + 1) = 0;
      char v117 = (void *)sub_1008825A0((uint64_t)v157);
      swift_release();
      swift_release();
      swift_release();
      *(void *)&v195[0] = _swiftEmptyArrayStorage;
      sub_1008E55A8(v117);
      uint64_t v118 = *(void **)&v195[0];
      sub_1000760E4((uint64_t)v182);
      sub_1000760E4((uint64_t)&v187);
      goto LABEL_25;
    }
    sub_1000637B8((uint64_t)v157, &qword_1010BDF78);
    sub_1000760E4((uint64_t)&v187);
  }
  else
  {
    memset(v150, 0, sizeof(v150));
    sub_1000637B8((uint64_t)v150, &qword_1010BE118);
  }
  uint64_t v118 = _swiftEmptyArrayStorage;
LABEL_25:
  sub_100063814(&qword_1010BE038);
  long long v94 = (void *)swift_allocObject();
  v94[4] = v16;
  v94[5] = v17;
  v94[6] = v118;
  int64_t v119 = *(void *)(v16 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = (uint64_t)sub_10087EAC8(0, v119, 1, _swiftEmptyArrayStorage);
  uint64_t v95 = (void *)result;
  if (*(void *)(v16 + 16))
  {
    if ((*(void *)(result + 24) >> 1) - *(void *)(result + 16) < v119)
    {
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
    sub_100063814(&qword_1010BDF50);
    uint64_t result = swift_arrayInitWithCopy();
    if (v119)
    {
      uint64_t v121 = v95[2];
      BOOL v100 = __OFADD__(v121, v119);
      uint64_t v122 = v121 + v119;
      if (v100)
      {
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      v95[2] = v122;
    }
  }
  else if (v119)
  {
    __break(1u);
    goto LABEL_63;
  }
  swift_bridgeObjectRelease();
  uint64_t v93 = v17[2];
  uint64_t v91 = (uint64_t *)v95[2];
  uint64_t v92 = (char *)v91 + v93;
  if (__OFADD__(v91, v93)) {
    goto LABEL_42;
  }
  unint64_t v123 = v95[3];
  uint64_t result = swift_bridgeObjectRetain();
  if ((uint64_t)v92 > (uint64_t)(v123 >> 1))
  {
LABEL_43:
    if ((uint64_t)v91 <= (uint64_t)v92) {
      int64_t v126 = (int64_t)v92;
    }
    else {
      int64_t v126 = (int64_t)v91;
    }
    uint64_t result = (uint64_t)sub_10087EAC8((void *)1, v126, 1, v95);
    uint64_t v95 = (void *)result;
    uint64_t v91 = *(uint64_t **)(result + 16);
    if (v17[2]) {
      goto LABEL_34;
    }
    goto LABEL_47;
  }
  if (!v93)
  {
LABEL_47:
    if (!v93) {
      goto LABEL_48;
    }
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_34:
  if ((v95[3] >> 1) - (void)v91 < v93)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  sub_100063814(&qword_1010BDF50);
  uint64_t result = swift_arrayInitWithCopy();
  if (v93)
  {
    uint64_t v124 = v95[2];
    BOOL v100 = __OFADD__(v124, v93);
    uint64_t v125 = v124 + v93;
    if (v100)
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    v95[2] = v125;
  }
LABEL_48:
  swift_bridgeObjectRelease();
  uint64_t v127 = v94[6];
  int64_t v128 = *(void *)(v127 + 16);
  int64_t v129 = v95[2];
  int64_t v130 = v129 + v128;
  if (__OFADD__(v129, v128))
  {
    __break(1u);
  }
  else
  {
    unint64_t v131 = v95[3];
    uint64_t result = swift_bridgeObjectRetain();
    if (v130 <= (uint64_t)(v131 >> 1))
    {
      if (v128) {
        goto LABEL_51;
      }
      goto LABEL_60;
    }
  }
  if (v129 <= v130) {
    int64_t v134 = v129 + v128;
  }
  else {
    int64_t v134 = v129;
  }
  uint64_t result = (uint64_t)sub_10087EAC8((void *)1, v134, 1, v95);
  uint64_t v95 = (void *)result;
  int64_t v129 = *(void *)(result + 16);
  if (!*(void *)(v127 + 16))
  {
LABEL_60:
    if (!v128) {
      goto LABEL_61;
    }
    goto LABEL_64;
  }
LABEL_51:
  if ((v95[3] >> 1) - v129 < v128)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  sub_100063814(&qword_1010BDF50);
  uint64_t result = swift_arrayInitWithCopy();
  if (!v128)
  {
LABEL_61:
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_100063814(&qword_1010BE040);
    swift_arrayDestroy();
    swift_deallocClassInstance();
    return (uint64_t)v95;
  }
  uint64_t v132 = v95[2];
  BOOL v100 = __OFADD__(v132, v128);
  uint64_t v133 = v132 + v128;
  if (!v100)
  {
    v95[2] = v133;
    goto LABEL_61;
  }
LABEL_70:
  __break(1u);
  return result;
}

void *sub_10088A8BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v66 = a7;
  *(void *)&long long v67 = a8;
  uint64_t v68 = a6;
  *(void *)&long long v69 = a5;
  uint64_t v70 = a3;
  *(void *)&long long v72 = a2;
  uint64_t v13 = sub_100063814(&qword_1010BCFB8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  uint64_t v18 = sub_100068990(a1, v16);
  __n128 v19 = __chkstk_darwin(v18);
  id v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v22 + 16))(v21, v19);
  sub_1000688E4(a3, (uint64_t)&v113);
  uint64_t v23 = a4;
  sub_10006CAB8(a4, (uint64_t)&v101, &qword_1010BD028);
  sub_10006CAB8(a5, (uint64_t)&v125, &qword_1010BD020);
  sub_10006CAB8(a6, (uint64_t)v15, &qword_1010BCFB8);
  uint64_t v24 = v66;
  uint64_t v25 = v67;
  Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v21, v72, (long long *)&v113, (uint64_t)&v101, (uint64_t)&v125, (uint64_t)v15, v66, v67, &v73, v16, v17);
  long long v65 = v74;
  long long v126 = v74;
  long long v64 = v75;
  long long v127 = v75;
  uint64_t v125 = v73;
  uint64_t v128 = v76;
  char v129 = 10;
  int64_t v130 = sub_1008A4BF8;
  uint64_t v131 = 0;
  uint64_t v132 = 0x4014000000000000;
  uint64_t v133 = &unk_1010BED48;
  uint64_t v134 = 0;
  uint64_t v135 = &unk_1010BED50;
  uint64_t v136 = 0;
  swift_retain();
  sub_10007B674(v24);
  uint64_t v71 = sub_100882700((uint64_t)&v125);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  uint64_t v28 = sub_100068990(a1, v26);
  __n128 v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v64 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v32 + 16))(v31, v29);
  sub_1000688E4(v70, (uint64_t)&v101);
  sub_10006CAB8(v23, (uint64_t)&v89, &qword_1010BD028);
  sub_10006CAB8(v69, (uint64_t)&v113, &qword_1010BD020);
  uint64_t v33 = v68;
  sub_10006CAB8(v68, (uint64_t)v15, &qword_1010BCFB8);
  Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v31, v72, (long long *)&v101, (uint64_t)&v89, (uint64_t)&v113, (uint64_t)v15, v24, v25, &v77, v26, v27);
  long long v69 = v78;
  long long v114 = v78;
  long long v65 = v79;
  long long v115 = v79;
  uint64_t v113 = v77;
  uint64_t v116 = v80;
  char v117 = 52;
  uint64_t v118 = sub_1008A4BF8;
  uint64_t v119 = 0;
  uint64_t v120 = 0x4014000000000000;
  uint64_t v121 = &unk_1010BED78;
  uint64_t v122 = 0;
  unint64_t v123 = &unk_1010BED80;
  uint64_t v124 = 0;
  swift_retain();
  sub_10007B674(v24);
  uint64_t v70 = sub_100882860((uint64_t)&v113);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v34 = a1[3];
  uint64_t v35 = a1[4];
  uint64_t v36 = sub_100068990(a1, v34);
  __n128 v37 = __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v64 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v40 + 16))(v39, v37);
  sub_10006CAB8(v23, (uint64_t)&v101, &qword_1010BD028);
  uint64_t v41 = v33;
  sub_10006CAB8(v33, (uint64_t)v15, &qword_1010BCFB8);
  uint64_t v42 = v72;
  Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v39, v72, (uint64_t)&v101, (uint64_t)v15, v34, v35, &v81);
  long long v69 = v82;
  long long v102 = v82;
  long long v67 = v83;
  long long v103 = v83;
  uint64_t v101 = v81;
  uint64_t v104 = v84;
  char v105 = 51;
  uint64_t v106 = sub_100842DF8;
  uint64_t v107 = 0;
  uint64_t v108 = 0x4014000000000000;
  uint64_t v109 = &unk_1010BEDA8;
  uint64_t v110 = 0;
  uint64_t v111 = &unk_1010BEDB0;
  uint64_t v112 = 0;
  swift_retain();
  uint64_t v43 = sub_1008829C0((uint64_t)&v101);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v44 = a1[3];
  uint64_t v45 = a1[4];
  uint64_t v46 = sub_100068990(a1, v44);
  __n128 v47 = __chkstk_darwin(v46);
  unint64_t v49 = (char *)&v64 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v50 + 16))(v49, v47);
  sub_10006CAB8(v23, (uint64_t)&v89, &qword_1010BD028);
  sub_10006CAB8(v41, (uint64_t)v15, &qword_1010BCFB8);
  swift_retain();
  Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v49, v42, (uint64_t)v15, v44, v45, &v85);
  long long v72 = v86;
  long long v90 = v86;
  long long v69 = v87;
  long long v91 = v87;
  uint64_t v89 = v85;
  uint64_t v92 = v88;
  char v93 = 53;
  long long v94 = sub_1008A4BF8;
  uint64_t v95 = 0;
  uint64_t v96 = 0x4014000000000000;
  int64_t v97 = &unk_1010BEDD8;
  uint64_t v98 = 0;
  uint64_t v99 = &unk_1010BEDE0;
  uint64_t v100 = 0;
  uint64_t v51 = sub_100882B20((uint64_t)&v89);
  swift_release();
  swift_release();
  swift_release();
  sub_100063814(&qword_1010BE038);
  uint64_t result = (void *)swift_allocObject();
  uint64_t v53 = result;
  result[4] = v71;
  *(void *)&long long v72 = result + 4;
  result[5] = v70;
  result[6] = v43;
  result[7] = v51;
  uint64_t v54 = _swiftEmptyArrayStorage;
  uint64_t v55 = 4;
  while (1)
  {
    uint64_t v56 = v53[v55];
    uint64_t v57 = *(void *)(v56 + 16);
    int64_t v58 = v54[2];
    int64_t v59 = v58 + v57;
    if (__OFADD__(v58, v57)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (result && v59 <= v54[3] >> 1)
    {
      if (*(void *)(v56 + 16)) {
        goto LABEL_13;
      }
    }
    else
    {
      if (v58 <= v59) {
        int64_t v60 = v58 + v57;
      }
      else {
        int64_t v60 = v58;
      }
      uint64_t result = sub_10087EAC8(result, v60, 1, v54);
      uint64_t v54 = result;
      if (*(void *)(v56 + 16))
      {
LABEL_13:
        if ((v54[3] >> 1) - v54[2] < v57) {
          goto LABEL_20;
        }
        sub_100063814(&qword_1010BDF50);
        uint64_t result = (void *)swift_arrayInitWithCopy();
        if (v57)
        {
          uint64_t v61 = v54[2];
          BOOL v62 = __OFADD__(v61, v57);
          uint64_t v63 = v61 + v57;
          if (v62) {
            goto LABEL_21;
          }
          v54[2] = v63;
        }
        goto LABEL_3;
      }
    }
    if (v57) {
      goto LABEL_19;
    }
LABEL_3:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (++v55 == 8)
    {
      swift_setDeallocating();
      sub_100063814(&qword_1010BE040);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      return v54;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t static MusicActions.tasteActions(item:library:alertPresenter:noticePresenting:ratingViewController:presentationSource:metricsReportingContext:onFinish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v40 = a8;
  uint64_t v47 = a6;
  uint64_t v46 = a5;
  uint64_t v41 = a2;
  uint64_t v45 = a11;
  uint64_t v44 = a10;
  uint64_t v48 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100063814(&qword_1010BCFB8);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  __chkstk_darwin(v19 - 8);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000688E4(a1, (uint64_t)v49);
  sub_100063814(&qword_1010BDF90);
  uint64_t v43 = String.init<A>(describing:)();
  uint64_t v42 = v23;
  sub_1000688E4(a1, (uint64_t)v52);
  sub_1000688E4(a3, (uint64_t)v51);
  sub_10006CAB8(a4, (uint64_t)v50, &qword_1010BD028);
  sub_1000DFFF8(a7, (uint64_t)v49);
  sub_10006CAB8(v40, (uint64_t)v22, &qword_1010BCFB8);
  unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v25 = (v21 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  sub_100068978(v52, v27 + 16);
  *(void *)(v27 + 56) = v41;
  sub_100068978(v51, v27 + 64);
  sub_10003CABC((uint64_t)v50, v27 + 104, &qword_1010BD028);
  sub_1000E08E4((uint64_t)v49, v27 + 144);
  sub_10003CABC((uint64_t)v22, v27 + v24, &qword_1010BCFB8);
  uint64_t v28 = (uint64_t *)(v27 + v25);
  uint64_t v29 = v44;
  uint64_t v30 = v45;
  *uint64_t v28 = v44;
  v28[1] = v30;
  uint64_t v31 = (void *)(v27 + v26);
  uint64_t v32 = v47;
  *uint64_t v31 = v46;
  v31[1] = v32;
  swift_retain();
  sub_10007B674(v29);
  swift_retain();
  UUID.init()();
  uint64_t v33 = UUID.uuidString.getter();
  uint64_t v35 = v34;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v48);
  strcpy((char *)v49, "ActionMenu: ");
  BYTE5(v49[1]) = 0;
  HIWORD(v49[1]) = -5120;
  v36._countAndFlagsBits = v43;
  v36._object = v42;
  String.append(_:)(v36);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v38 = v49[0];
  uint64_t v39 = v49[1];
  *(void *)a9 = v33;
  *(void *)(a9 + 8) = v35;
  *(void *)(a9 + 16) = v38;
  *(void *)(a9 + 24) = v39;
  *(void *)(a9 + 32) = 0;
  *(void *)(a9 + 40) = 0xE000000000000000;
  *(void *)(a9 + 48) = 0;
  *(unsigned char *)(a9 + 56) = 0;
  *(void *)(a9 + 64) = sub_100896898;
  *(void *)(a9 + 72) = v27;
  return result;
}

void *sub_10088B558(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v78 = a8;
  uint64_t v79 = a3;
  *(void *)&long long v76 = a7;
  uint64_t v82 = a5;
  *(void *)&long long v83 = a4;
  uint64_t v81 = a2;
  uint64_t v15 = sub_100063814(&qword_1010BCFB8);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[3];
  uint64_t v18 = a1[4];
  uint64_t v20 = sub_100068990(a1, v19);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v23 + 16))(v22);
  sub_1000688E4(a3, (uint64_t)&v138);
  sub_10006CAB8(a4, (uint64_t)&v126, &qword_1010BD028);
  sub_1000DFFF8(a5, (uint64_t)&v150);
  *(void *)&long long v77 = a6;
  uint64_t v24 = v81;
  sub_10006CAB8(a6, (uint64_t)v17, &qword_1010BCFB8);
  uint64_t v25 = v76;
  uint64_t v26 = v78;
  Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v22, v24, (long long *)&v138, (uint64_t)&v126, (uint64_t)&v150, (uint64_t)v17, v76, v78, &v89, v19, v18);
  long long v75 = v90;
  long long v151 = v90;
  long long v74 = v91;
  long long v152 = v91;
  v150 = v89;
  uint64_t v153 = v92;
  char v154 = 10;
  v155 = sub_1008A4BF8;
  uint64_t v156 = 0;
  uint64_t v157 = 0x4014000000000000;
  long long v158 = &unk_1010BED48;
  uint64_t v159 = 0;
  long long v160 = &unk_1010BED50;
  uint64_t v161 = 0;
  swift_retain();
  sub_10007B674(v25);
  uint64_t v80 = sub_100882700((uint64_t)&v150);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v28 = a1[3];
  uint64_t v27 = a1[4];
  uint64_t v29 = sub_100068990(a1, v28);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v74 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v32 + 16))(v31);
  sub_1000688E4(v79, (uint64_t)&v126);
  sub_10006CAB8(v83, (uint64_t)&v114, &qword_1010BD028);
  sub_1000DFFF8(v82, (uint64_t)&v138);
  sub_10006CAB8(a6, (uint64_t)v17, &qword_1010BCFB8);
  Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)((uint64_t)v31, v24, (long long *)&v126, (uint64_t)&v114, (uint64_t)&v138, (uint64_t)v17, v25, v26, &v93, v28, v27);
  long long v75 = v94;
  long long v139 = v94;
  long long v74 = v95;
  long long v140 = v95;
  uint64_t v138 = v93;
  uint64_t v141 = v96;
  char v142 = 52;
  v143 = sub_1008A4BF8;
  uint64_t v144 = 0;
  uint64_t v145 = 0x4014000000000000;
  long long v146 = &unk_1010BED78;
  uint64_t v147 = 0;
  v148 = &unk_1010BED80;
  uint64_t v149 = 0;
  swift_retain();
  sub_10007B674(v25);
  uint64_t v79 = sub_100882860((uint64_t)&v138);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v33 = a1[3];
  uint64_t v34 = a1[4];
  uint64_t v35 = sub_100068990(a1, v33);
  __chkstk_darwin(v35);
  __n128 v37 = (char *)&v74 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v38 + 16))(v37);
  uint64_t v39 = v83;
  sub_10006CAB8(v83, (uint64_t)&v126, &qword_1010BD028);
  uint64_t v40 = v77;
  sub_10006CAB8(v77, (uint64_t)v17, &qword_1010BCFB8);
  Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v37, v24, (uint64_t)&v126, (uint64_t)v17, v33, v34, &v97);
  long long v76 = v98;
  long long v127 = v98;
  long long v75 = v99;
  long long v128 = v99;
  long long v126 = v97;
  uint64_t v129 = v100;
  char v130 = 51;
  uint64_t v131 = sub_100842DF8;
  uint64_t v132 = 0;
  uint64_t v133 = 0x4014000000000000;
  uint64_t v134 = &unk_1010BEDA8;
  uint64_t v135 = 0;
  uint64_t v136 = &unk_1010BEDB0;
  uint64_t v137 = 0;
  swift_retain();
  uint64_t v78 = sub_1008829C0((uint64_t)&v126);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v41 = a1[3];
  uint64_t v42 = a1[4];
  uint64_t v43 = sub_100068990(a1, v41);
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v74 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v46 + 16))(v45);
  sub_10006CAB8(v39, (uint64_t)&v114, &qword_1010BD028);
  sub_10006CAB8(v40, (uint64_t)v17, &qword_1010BCFB8);
  swift_retain();
  Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)(v45, v24, (uint64_t)v17, v41, v42, &v101);
  long long v83 = v102;
  long long v115 = v102;
  long long v77 = v103;
  long long v116 = v103;
  long long v114 = v101;
  uint64_t v117 = v104;
  char v118 = 53;
  uint64_t v119 = sub_1008A4BF8;
  uint64_t v120 = 0;
  uint64_t v121 = 0x4014000000000000;
  uint64_t v122 = &unk_1010BEDD8;
  uint64_t v123 = 0;
  uint64_t v124 = &unk_1010BEDE0;
  uint64_t v125 = 0;
  uint64_t v47 = sub_100882B20((uint64_t)&v114);
  swift_release();
  swift_release();
  swift_release();
  sub_1000688E4((uint64_t)a1, (uint64_t)&v84);
  sub_100063814(&qword_1010BDF90);
  sub_100063814(&qword_1010BE028);
  if (swift_dynamicCast())
  {
    sub_10017C674(&v105, &v85);
    uint64_t v48 = v86;
    uint64_t v49 = v87;
    uint64_t v50 = v88;
    uint64_t v51 = sub_100068990(&v85, v86);
    __chkstk_darwin(v51);
    uint64_t v53 = (char *)&v74 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v54 + 16))(v53);
    sub_1000DFFF8(v82, (uint64_t)&v105);
    uint64_t v55 = (void *)swift_allocObject();
    v55[2] = v48;
    v55[3] = v49;
    v55[4] = v50;
    v55[5] = a9;
    v55[6] = a10;
    *(void *)&long long v105 = Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)((uint64_t)v53, v81, (uint64_t)sub_100897124, (uint64_t)v55, (uint64_t)&v105, v48, v49, v50);
    *((void *)&v105 + 1) = v56;
    *(void *)&long long v106 = v57;
    *((void *)&v106 + 1) = v58;
    LOBYTE(v107) = 35;
    *((void *)&v107 + 1) = sub_100842DF8;
    uint64_t v108 = 0;
    uint64_t v109 = 0x4014000000000000;
    uint64_t v110 = &unk_1010BEED8;
    uint64_t v111 = 0;
    uint64_t v112 = &unk_1010BEEE0;
    uint64_t v113 = 0;
    swift_retain();
    swift_retain();
    int64_t v59 = (void *)sub_100882C80((uint64_t)&v105);
    swift_release();
    swift_release();
    uint64_t v84 = _swiftEmptyArrayStorage;
    sub_1008E55A8(v59);
    int64_t v60 = v84;
    sub_1000760E4((uint64_t)&v85);
  }
  else
  {
    long long v106 = 0u;
    long long v107 = 0u;
    long long v105 = 0u;
    sub_1000637B8((uint64_t)&v105, &qword_1010BE030);
    int64_t v60 = _swiftEmptyArrayStorage;
  }
  sub_100063814(&qword_1010BE038);
  uint64_t result = (void *)swift_allocObject();
  BOOL v62 = result;
  result[4] = v80;
  *(void *)&long long v83 = result + 4;
  uint64_t v63 = v78;
  result[5] = v79;
  result[6] = v63;
  result[7] = v47;
  result[8] = v60;
  long long v64 = _swiftEmptyArrayStorage;
  uint64_t v65 = 4;
  while (1)
  {
    uint64_t v66 = v62[v65];
    uint64_t v67 = *(void *)(v66 + 16);
    int64_t v68 = v64[2];
    int64_t v69 = v68 + v67;
    if (__OFADD__(v68, v67)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (result && v69 <= v64[3] >> 1)
    {
      if (*(void *)(v66 + 16)) {
        goto LABEL_16;
      }
    }
    else
    {
      if (v68 <= v69) {
        int64_t v70 = v68 + v67;
      }
      else {
        int64_t v70 = v68;
      }
      uint64_t result = sub_10087EAC8(result, v70, 1, v64);
      long long v64 = result;
      if (*(void *)(v66 + 16))
      {
LABEL_16:
        if ((v64[3] >> 1) - v64[2] < v67) {
          goto LABEL_23;
        }
        sub_100063814(&qword_1010BDF50);
        uint64_t result = (void *)swift_arrayInitWithCopy();
        if (v67)
        {
          uint64_t v71 = v64[2];
          BOOL v72 = __OFADD__(v71, v67);
          uint64_t v73 = v71 + v67;
          if (v72) {
            goto LABEL_24;
          }
          v64[2] = v73;
        }
        goto LABEL_6;
      }
    }
    if (v67) {
      goto LABEL_22;
    }
LABEL_6:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (++v65 == 9)
    {
      swift_setDeallocating();
      sub_100063814(&qword_1010BE040);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      return v64;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_10088C080(uint64_t a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v12[3] = a4;
  v12[4] = a6;
  long long v9 = sub_100068018(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v9, a1, a4);
  uint64_t v10 = a2(v12);
  sub_1000760E4((uint64_t)v12);
  return v10;
}

uint64_t sub_10088C11C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010BDF68);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BCFB8);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Album();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for Album;
  uint64_t v25 = sub_100068018(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v25, a1, v24);
  sub_1000688E4((uint64_t)v88, (uint64_t)v83);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  sub_10006CAB8(a11, (uint64_t)v87, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v88, (uint64_t)v86);
  sub_10006CAB8(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v63, (uint64_t)v85);
  sub_1000688E4(v65, (uint64_t)v84);
  sub_10006CAB8(v64, (uint64_t)v83, &qword_1010BD020);
  sub_10006CAB8(v66, (uint64_t)v82, &qword_1010BDF78);
  sub_1000688E4(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10003CABC((uint64_t)v87, v36 + 16, &qword_1010BDF80);
  sub_100068978(v86, v36 + 56);
  sub_10003CABC(v57, v36 + v28, &qword_1010BCFB8);
  sub_10003CABC(v58, v36 + v29, &qword_1010BDF68);
  *(void *)(v36 + v30) = v70;
  sub_100068978(v85, v36 + v31);
  sub_100068978(v84, v36 + v32);
  sub_10003CABC((uint64_t)v83, v36 + v33, &qword_1010BD020);
  sub_10003CABC((uint64_t)v82, v36 + v34, &qword_1010BDF78);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  *uint64_t v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  sub_100068978(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = sub_1000760E4((uint64_t)v88);
  uint64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)sub_100899554;
  v55[9] = v36;
  return result;
}

uint64_t sub_10088C674@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010BDF68);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BCFB8);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Artist();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for Artist;
  uint64_t v25 = sub_100068018(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v25, a1, v24);
  sub_1000688E4((uint64_t)v88, (uint64_t)v83);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  sub_10006CAB8(a11, (uint64_t)v87, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v88, (uint64_t)v86);
  sub_10006CAB8(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v63, (uint64_t)v85);
  sub_1000688E4(v65, (uint64_t)v84);
  sub_10006CAB8(v64, (uint64_t)v83, &qword_1010BD020);
  sub_10006CAB8(v66, (uint64_t)v82, &qword_1010BDF78);
  sub_1000688E4(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10003CABC((uint64_t)v87, v36 + 16, &qword_1010BDF80);
  sub_100068978(v86, v36 + 56);
  sub_10003CABC(v57, v36 + v28, &qword_1010BCFB8);
  sub_10003CABC(v58, v36 + v29, &qword_1010BDF68);
  *(void *)(v36 + v30) = v70;
  sub_100068978(v85, v36 + v31);
  sub_100068978(v84, v36 + v32);
  sub_10003CABC((uint64_t)v83, v36 + v33, &qword_1010BD020);
  sub_10003CABC((uint64_t)v82, v36 + v34, &qword_1010BDF78);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  *uint64_t v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  sub_100068978(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = sub_1000760E4((uint64_t)v88);
  uint64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)sub_100899554;
  v55[9] = v36;
  return result;
}

uint64_t sub_10088CBCC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010BDF68);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BCFB8);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Curator();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for Curator;
  uint64_t v25 = sub_100068018(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v25, a1, v24);
  sub_1000688E4((uint64_t)v88, (uint64_t)v83);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  sub_10006CAB8(a11, (uint64_t)v87, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v88, (uint64_t)v86);
  sub_10006CAB8(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v63, (uint64_t)v85);
  sub_1000688E4(v65, (uint64_t)v84);
  sub_10006CAB8(v64, (uint64_t)v83, &qword_1010BD020);
  sub_10006CAB8(v66, (uint64_t)v82, &qword_1010BDF78);
  sub_1000688E4(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10003CABC((uint64_t)v87, v36 + 16, &qword_1010BDF80);
  sub_100068978(v86, v36 + 56);
  sub_10003CABC(v57, v36 + v28, &qword_1010BCFB8);
  sub_10003CABC(v58, v36 + v29, &qword_1010BDF68);
  *(void *)(v36 + v30) = v70;
  sub_100068978(v85, v36 + v31);
  sub_100068978(v84, v36 + v32);
  sub_10003CABC((uint64_t)v83, v36 + v33, &qword_1010BD020);
  sub_10003CABC((uint64_t)v82, v36 + v34, &qword_1010BDF78);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  *uint64_t v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  sub_100068978(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = sub_1000760E4((uint64_t)v88);
  uint64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)sub_100899554;
  v55[9] = v36;
  return result;
}

uint64_t sub_10088D124@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010BDF68);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BCFB8);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for EditorialItem();
  v88[3] = v24;
  v88[4] = sub_10089BCAC(&qword_1010BE2C8, (void (*)(uint64_t))&type metadata accessor for EditorialItem);
  uint64_t v25 = sub_100068018(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v25, a1, v24);
  sub_1000688E4((uint64_t)v88, (uint64_t)v83);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  sub_10006CAB8(a11, (uint64_t)v87, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v88, (uint64_t)v86);
  sub_10006CAB8(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v63, (uint64_t)v85);
  sub_1000688E4(v65, (uint64_t)v84);
  sub_10006CAB8(v64, (uint64_t)v83, &qword_1010BD020);
  sub_10006CAB8(v66, (uint64_t)v82, &qword_1010BDF78);
  sub_1000688E4(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10003CABC((uint64_t)v87, v36 + 16, &qword_1010BDF80);
  sub_100068978(v86, v36 + 56);
  sub_10003CABC(v57, v36 + v28, &qword_1010BCFB8);
  sub_10003CABC(v58, v36 + v29, &qword_1010BDF68);
  *(void *)(v36 + v30) = v70;
  sub_100068978(v85, v36 + v31);
  sub_100068978(v84, v36 + v32);
  sub_10003CABC((uint64_t)v83, v36 + v33, &qword_1010BD020);
  sub_10003CABC((uint64_t)v82, v36 + v34, &qword_1010BDF78);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  *uint64_t v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  sub_100068978(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = sub_1000760E4((uint64_t)v88);
  uint64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)sub_100899554;
  v55[9] = v36;
  return result;
}

uint64_t sub_10088D6AC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010BDF68);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BCFB8);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Genre();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for Genre;
  uint64_t v25 = sub_100068018(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v25, a1, v24);
  sub_1000688E4((uint64_t)v88, (uint64_t)v83);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  sub_10006CAB8(a11, (uint64_t)v87, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v88, (uint64_t)v86);
  sub_10006CAB8(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v63, (uint64_t)v85);
  sub_1000688E4(v65, (uint64_t)v84);
  sub_10006CAB8(v64, (uint64_t)v83, &qword_1010BD020);
  sub_10006CAB8(v66, (uint64_t)v82, &qword_1010BDF78);
  sub_1000688E4(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10003CABC((uint64_t)v87, v36 + 16, &qword_1010BDF80);
  sub_100068978(v86, v36 + 56);
  sub_10003CABC(v57, v36 + v28, &qword_1010BCFB8);
  sub_10003CABC(v58, v36 + v29, &qword_1010BDF68);
  *(void *)(v36 + v30) = v70;
  sub_100068978(v85, v36 + v31);
  sub_100068978(v84, v36 + v32);
  sub_10003CABC((uint64_t)v83, v36 + v33, &qword_1010BD020);
  sub_10003CABC((uint64_t)v82, v36 + v34, &qword_1010BDF78);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  *uint64_t v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  sub_100068978(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = sub_1000760E4((uint64_t)v88);
  uint64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)sub_100899554;
  v55[9] = v36;
  return result;
}

uint64_t sub_10088DC04@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010BDF68);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BCFB8);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for MusicMovie();
  v88[3] = v24;
  v88[4] = sub_10089BCAC(&qword_1010BE2D0, (void (*)(uint64_t))&type metadata accessor for MusicMovie);
  uint64_t v25 = sub_100068018(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v25, a1, v24);
  sub_1000688E4((uint64_t)v88, (uint64_t)v83);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  sub_10006CAB8(a11, (uint64_t)v87, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v88, (uint64_t)v86);
  sub_10006CAB8(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v63, (uint64_t)v85);
  sub_1000688E4(v65, (uint64_t)v84);
  sub_10006CAB8(v64, (uint64_t)v83, &qword_1010BD020);
  sub_10006CAB8(v66, (uint64_t)v82, &qword_1010BDF78);
  sub_1000688E4(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10003CABC((uint64_t)v87, v36 + 16, &qword_1010BDF80);
  sub_100068978(v86, v36 + 56);
  sub_10003CABC(v57, v36 + v28, &qword_1010BCFB8);
  sub_10003CABC(v58, v36 + v29, &qword_1010BDF68);
  *(void *)(v36 + v30) = v70;
  sub_100068978(v85, v36 + v31);
  sub_100068978(v84, v36 + v32);
  sub_10003CABC((uint64_t)v83, v36 + v33, &qword_1010BD020);
  sub_10003CABC((uint64_t)v82, v36 + v34, &qword_1010BDF78);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  *uint64_t v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  sub_100068978(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = sub_1000760E4((uint64_t)v88);
  uint64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)sub_100899554;
  v55[9] = v36;
  return result;
}

uint64_t sub_10088E18C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010BDF68);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BCFB8);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for MusicVideo();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for MusicVideo;
  uint64_t v25 = sub_100068018(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v25, a1, v24);
  sub_1000688E4((uint64_t)v88, (uint64_t)v83);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  sub_10006CAB8(a11, (uint64_t)v87, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v88, (uint64_t)v86);
  sub_10006CAB8(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v63, (uint64_t)v85);
  sub_1000688E4(v65, (uint64_t)v84);
  sub_10006CAB8(v64, (uint64_t)v83, &qword_1010BD020);
  sub_10006CAB8(v66, (uint64_t)v82, &qword_1010BDF78);
  sub_1000688E4(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10003CABC((uint64_t)v87, v36 + 16, &qword_1010BDF80);
  sub_100068978(v86, v36 + 56);
  sub_10003CABC(v57, v36 + v28, &qword_1010BCFB8);
  sub_10003CABC(v58, v36 + v29, &qword_1010BDF68);
  *(void *)(v36 + v30) = v70;
  sub_100068978(v85, v36 + v31);
  sub_100068978(v84, v36 + v32);
  sub_10003CABC((uint64_t)v83, v36 + v33, &qword_1010BD020);
  sub_10003CABC((uint64_t)v82, v36 + v34, &qword_1010BDF78);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  *uint64_t v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  sub_100068978(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = sub_1000760E4((uint64_t)v88);
  uint64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)sub_100899554;
  v55[9] = v36;
  return result;
}

uint64_t sub_10088E6E4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010BDF68);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BCFB8);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Playlist();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for Playlist;
  uint64_t v25 = sub_100068018(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v25, a1, v24);
  sub_1000688E4((uint64_t)v88, (uint64_t)v83);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  sub_10006CAB8(a11, (uint64_t)v87, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v88, (uint64_t)v86);
  sub_10006CAB8(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v63, (uint64_t)v85);
  sub_1000688E4(v65, (uint64_t)v84);
  sub_10006CAB8(v64, (uint64_t)v83, &qword_1010BD020);
  sub_10006CAB8(v66, (uint64_t)v82, &qword_1010BDF78);
  sub_1000688E4(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10003CABC((uint64_t)v87, v36 + 16, &qword_1010BDF80);
  sub_100068978(v86, v36 + 56);
  sub_10003CABC(v57, v36 + v28, &qword_1010BCFB8);
  sub_10003CABC(v58, v36 + v29, &qword_1010BDF68);
  *(void *)(v36 + v30) = v70;
  sub_100068978(v85, v36 + v31);
  sub_100068978(v84, v36 + v32);
  sub_10003CABC((uint64_t)v83, v36 + v33, &qword_1010BD020);
  sub_10003CABC((uint64_t)v82, v36 + v34, &qword_1010BDF78);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  *uint64_t v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  sub_100068978(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = sub_1000760E4((uint64_t)v88);
  uint64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)sub_100899554;
  v55[9] = v36;
  return result;
}

uint64_t sub_10088EC3C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010BDF68);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BCFB8);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for RadioShow();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for RadioShow;
  uint64_t v25 = sub_100068018(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v25, a1, v24);
  sub_1000688E4((uint64_t)v88, (uint64_t)v83);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  sub_10006CAB8(a11, (uint64_t)v87, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v88, (uint64_t)v86);
  sub_10006CAB8(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v63, (uint64_t)v85);
  sub_1000688E4(v65, (uint64_t)v84);
  sub_10006CAB8(v64, (uint64_t)v83, &qword_1010BD020);
  sub_10006CAB8(v66, (uint64_t)v82, &qword_1010BDF78);
  sub_1000688E4(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10003CABC((uint64_t)v87, v36 + 16, &qword_1010BDF80);
  sub_100068978(v86, v36 + 56);
  sub_10003CABC(v57, v36 + v28, &qword_1010BCFB8);
  sub_10003CABC(v58, v36 + v29, &qword_1010BDF68);
  *(void *)(v36 + v30) = v70;
  sub_100068978(v85, v36 + v31);
  sub_100068978(v84, v36 + v32);
  sub_10003CABC((uint64_t)v83, v36 + v33, &qword_1010BD020);
  sub_10003CABC((uint64_t)v82, v36 + v34, &qword_1010BDF78);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  *uint64_t v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  sub_100068978(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = sub_1000760E4((uint64_t)v88);
  uint64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)sub_100899554;
  v55[9] = v36;
  return result;
}

uint64_t sub_10088F194@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010BDF68);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BCFB8);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Song();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for Song;
  uint64_t v25 = sub_100068018(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v25, a1, v24);
  sub_1000688E4((uint64_t)v88, (uint64_t)v83);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  sub_10006CAB8(a11, (uint64_t)v87, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v88, (uint64_t)v86);
  sub_10006CAB8(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v63, (uint64_t)v85);
  sub_1000688E4(v65, (uint64_t)v84);
  sub_10006CAB8(v64, (uint64_t)v83, &qword_1010BD020);
  sub_10006CAB8(v66, (uint64_t)v82, &qword_1010BDF78);
  sub_1000688E4(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10003CABC((uint64_t)v87, v36 + 16, &qword_1010BDF80);
  sub_100068978(v86, v36 + 56);
  sub_10003CABC(v57, v36 + v28, &qword_1010BCFB8);
  sub_10003CABC(v58, v36 + v29, &qword_1010BDF68);
  *(void *)(v36 + v30) = v70;
  sub_100068978(v85, v36 + v31);
  sub_100068978(v84, v36 + v32);
  sub_10003CABC((uint64_t)v83, v36 + v33, &qword_1010BD020);
  sub_10003CABC((uint64_t)v82, v36 + v34, &qword_1010BDF78);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  *uint64_t v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  sub_100068978(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = sub_1000760E4((uint64_t)v88);
  uint64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)sub_100899554;
  v55[9] = v36;
  return result;
}

uint64_t sub_10088F6EC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010BDF68);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BCFB8);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Station();
  v88[3] = v24;
  v88[4] = (uint64_t)&protocol witness table for Station;
  uint64_t v25 = sub_100068018(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v25, a1, v24);
  sub_1000688E4((uint64_t)v88, (uint64_t)v83);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  sub_10006CAB8(a11, (uint64_t)v87, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v88, (uint64_t)v86);
  sub_10006CAB8(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v63, (uint64_t)v85);
  sub_1000688E4(v65, (uint64_t)v84);
  sub_10006CAB8(v64, (uint64_t)v83, &qword_1010BD020);
  sub_10006CAB8(v66, (uint64_t)v82, &qword_1010BDF78);
  sub_1000688E4(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10003CABC((uint64_t)v87, v36 + 16, &qword_1010BDF80);
  sub_100068978(v86, v36 + 56);
  sub_10003CABC(v57, v36 + v28, &qword_1010BCFB8);
  sub_10003CABC(v58, v36 + v29, &qword_1010BDF68);
  *(void *)(v36 + v30) = v70;
  sub_100068978(v85, v36 + v31);
  sub_100068978(v84, v36 + v32);
  sub_10003CABC((uint64_t)v83, v36 + v33, &qword_1010BD020);
  sub_10003CABC((uint64_t)v82, v36 + v34, &qword_1010BDF78);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  *uint64_t v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  sub_100068978(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = sub_1000760E4((uint64_t)v88);
  uint64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)sub_100899554;
  v55[9] = v36;
  return result;
}

uint64_t sub_10088FC44@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010BDF68);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BCFB8);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for TVEpisode();
  v88[3] = v24;
  v88[4] = sub_10089BCAC(&qword_1010BE2D8, (void (*)(uint64_t))&type metadata accessor for TVEpisode);
  uint64_t v25 = sub_100068018(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v25, a1, v24);
  sub_1000688E4((uint64_t)v88, (uint64_t)v83);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  sub_10006CAB8(a11, (uint64_t)v87, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v88, (uint64_t)v86);
  sub_10006CAB8(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v63, (uint64_t)v85);
  sub_1000688E4(v65, (uint64_t)v84);
  sub_10006CAB8(v64, (uint64_t)v83, &qword_1010BD020);
  sub_10006CAB8(v66, (uint64_t)v82, &qword_1010BDF78);
  sub_1000688E4(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10003CABC((uint64_t)v87, v36 + 16, &qword_1010BDF80);
  sub_100068978(v86, v36 + 56);
  sub_10003CABC(v57, v36 + v28, &qword_1010BCFB8);
  sub_10003CABC(v58, v36 + v29, &qword_1010BDF68);
  *(void *)(v36 + v30) = v70;
  sub_100068978(v85, v36 + v31);
  sub_100068978(v84, v36 + v32);
  sub_10003CABC((uint64_t)v83, v36 + v33, &qword_1010BD020);
  sub_10003CABC((uint64_t)v82, v36 + v34, &qword_1010BDF78);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  *uint64_t v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  sub_100068978(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = sub_1000760E4((uint64_t)v88);
  uint64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)sub_100899554;
  v55[9] = v36;
  return result;
}

uint64_t sub_1008901CC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010BDF68);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BCFB8);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for TVSeason();
  v88[3] = v24;
  v88[4] = sub_10089BCAC(&qword_1010BE2E0, (void (*)(uint64_t))&type metadata accessor for TVSeason);
  uint64_t v25 = sub_100068018(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v25, a1, v24);
  sub_1000688E4((uint64_t)v88, (uint64_t)v83);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  sub_10006CAB8(a11, (uint64_t)v87, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v88, (uint64_t)v86);
  sub_10006CAB8(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v63, (uint64_t)v85);
  sub_1000688E4(v65, (uint64_t)v84);
  sub_10006CAB8(v64, (uint64_t)v83, &qword_1010BD020);
  sub_10006CAB8(v66, (uint64_t)v82, &qword_1010BDF78);
  sub_1000688E4(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10003CABC((uint64_t)v87, v36 + 16, &qword_1010BDF80);
  sub_100068978(v86, v36 + 56);
  sub_10003CABC(v57, v36 + v28, &qword_1010BCFB8);
  sub_10003CABC(v58, v36 + v29, &qword_1010BDF68);
  *(void *)(v36 + v30) = v70;
  sub_100068978(v85, v36 + v31);
  sub_100068978(v84, v36 + v32);
  sub_10003CABC((uint64_t)v83, v36 + v33, &qword_1010BD020);
  sub_10003CABC((uint64_t)v82, v36 + v34, &qword_1010BDF78);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  *uint64_t v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  sub_100068978(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = sub_1000760E4((uint64_t)v88);
  uint64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)sub_100899554;
  v55[9] = v36;
  return result;
}

uint64_t sub_100890754@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010BDF68);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BCFB8);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for TVShow();
  v88[3] = v24;
  v88[4] = sub_10089BCAC(&qword_1010BE2E8, (void (*)(uint64_t))&type metadata accessor for TVShow);
  uint64_t v25 = sub_100068018(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v25, a1, v24);
  sub_1000688E4((uint64_t)v88, (uint64_t)v83);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  sub_10006CAB8(a11, (uint64_t)v87, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v88, (uint64_t)v86);
  sub_10006CAB8(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v63, (uint64_t)v85);
  sub_1000688E4(v65, (uint64_t)v84);
  sub_10006CAB8(v64, (uint64_t)v83, &qword_1010BD020);
  sub_10006CAB8(v66, (uint64_t)v82, &qword_1010BDF78);
  sub_1000688E4(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10003CABC((uint64_t)v87, v36 + 16, &qword_1010BDF80);
  sub_100068978(v86, v36 + 56);
  sub_10003CABC(v57, v36 + v28, &qword_1010BCFB8);
  sub_10003CABC(v58, v36 + v29, &qword_1010BDF68);
  *(void *)(v36 + v30) = v70;
  sub_100068978(v85, v36 + v31);
  sub_100068978(v84, v36 + v32);
  sub_10003CABC((uint64_t)v83, v36 + v33, &qword_1010BD020);
  sub_10003CABC((uint64_t)v82, v36 + v34, &qword_1010BDF78);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  *uint64_t v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  sub_100068978(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = sub_1000760E4((uint64_t)v88);
  uint64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)sub_100899554;
  v55[9] = v36;
  return result;
}

uint64_t sub_100890CDC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17)
{
  unint64_t v64 = a8;
  unint64_t v65 = a7;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v70 = a4;
  long long v75 = a3;
  uint64_t v73 = a2;
  uint64_t v80 = a9;
  uint64_t v77 = a15;
  uint64_t v72 = a14;
  uint64_t v71 = a13;
  unint64_t v66 = a12;
  unint64_t v74 = a16;
  uint64_t v60 = a17;
  unint64_t v67 = a10;
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v78 = *(void *)(v18 - 8);
  uint64_t v79 = v18;
  __chkstk_darwin(v18);
  long long v76 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010BDF68);
  uint64_t v61 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v61 + 64);
  __chkstk_darwin(v20 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BCFB8);
  uint64_t v59 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v59 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for UploadedVideo();
  v88[3] = v24;
  v88[4] = sub_10089BCAC(&qword_1010BE2F0, (void (*)(uint64_t))&type metadata accessor for UploadedVideo);
  uint64_t v25 = sub_100068018(v88);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v25, a1, v24);
  sub_1000688E4((uint64_t)v88, (uint64_t)v83);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v26 = String.init<A>(describing:)();
  int64_t v68 = v27;
  uint64_t v69 = v26;
  sub_10006CAB8(a11, (uint64_t)v87, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v88, (uint64_t)v86);
  sub_10006CAB8(v60, (uint64_t)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v62, (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v63, (uint64_t)v85);
  sub_1000688E4(v65, (uint64_t)v84);
  sub_10006CAB8(v64, (uint64_t)v83, &qword_1010BD020);
  sub_10006CAB8(v66, (uint64_t)v82, &qword_1010BDF78);
  sub_1000688E4(v67, (uint64_t)v81);
  unint64_t v28 = (*(unsigned __int8 *)(v59 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  unint64_t v29 = (v23 + *(unsigned __int8 *)(v61 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v30 = (v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v64 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  sub_10003CABC((uint64_t)v87, v36 + 16, &qword_1010BDF80);
  sub_100068978(v86, v36 + 56);
  sub_10003CABC(v57, v36 + v28, &qword_1010BCFB8);
  sub_10003CABC(v58, v36 + v29, &qword_1010BDF68);
  *(void *)(v36 + v30) = v70;
  sub_100068978(v85, v36 + v31);
  sub_100068978(v84, v36 + v32);
  sub_10003CABC((uint64_t)v83, v36 + v33, &qword_1010BD020);
  sub_10003CABC((uint64_t)v82, v36 + v34, &qword_1010BDF78);
  uint64_t v37 = v72;
  uint64_t v38 = v73;
  *(void *)(v36 + v67) = v73;
  unint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v36 + v65) = v75;
  uint64_t v41 = (void *)(v36 + v35);
  *uint64_t v41 = v71;
  v41[1] = v37;
  uint64_t v42 = (uint64_t *)(v36 + v64);
  uint64_t v43 = v36 + v66;
  uint64_t v44 = v77;
  *uint64_t v42 = v77;
  v42[1] = v39;
  sub_100068978(v81, v43);
  id v45 = v38;
  id v46 = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v44, v39);
  uint64_t v47 = v76;
  UUID.init()();
  uint64_t v48 = UUID.uuidString.getter();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v47, v79);
  strcpy((char *)v83, "ActionMenu: ");
  BYTE5(v83[1]) = 0;
  HIWORD(v83[1]) = -5120;
  v51._countAndFlagsBits = v69;
  v51._object = v68;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  uint64_t v52 = v83[0];
  uint64_t v53 = v83[1];
  uint64_t result = sub_1000760E4((uint64_t)v88);
  uint64_t v55 = v80;
  *uint64_t v80 = v48;
  v55[1] = v50;
  v55[2] = v52;
  v55[3] = v53;
  v55[4] = 0;
  v55[5] = 0xE000000000000000;
  v55[6] = 0;
  *((unsigned char *)v55 + 56) = 0;
  v55[8] = (uint64_t)sub_100899554;
  v55[9] = v36;
  return result;
}

uint64_t sub_100891264@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unint64_t v69 = a8;
  uint64_t v65 = a6;
  unint64_t v66 = a7;
  uint64_t v64 = a5;
  uint64_t v72 = a4;
  uint64_t v77 = a3;
  long long v75 = a2;
  uint64_t v82 = a9;
  uint64_t v79 = a15;
  uint64_t v74 = a14;
  uint64_t v73 = a13;
  unint64_t v67 = a12;
  unint64_t v76 = a16;
  uint64_t v62 = a17;
  unint64_t v68 = a10;
  uint64_t v61 = a11;
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v80 = *(void *)(v20 - 8);
  uint64_t v81 = v20;
  __chkstk_darwin(v20);
  uint64_t v78 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010BDF68);
  uint64_t v63 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v63 + 64);
  __chkstk_darwin(v22 - 8);
  uint64_t v60 = (uint64_t)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100063814(&qword_1010BCFB8);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  __chkstk_darwin(v24 - 8);
  uint64_t v59 = (uint64_t)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90[3] = a18;
  v90[4] = a19;
  uint64_t v27 = sub_100068018(v90);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a18 - 8) + 16))(v27, a1, a18);
  sub_1000688E4((uint64_t)v90, (uint64_t)v85);
  sub_100063814(&qword_1010C2AC0);
  uint64_t v28 = String.init<A>(describing:)();
  uint64_t v70 = v29;
  uint64_t v71 = v28;
  sub_10006CAB8(v61, (uint64_t)v89, &qword_1010BDF80);
  sub_1000688E4((uint64_t)v90, (uint64_t)v88);
  sub_10006CAB8(v62, (uint64_t)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_10006CAB8(v64, (uint64_t)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BDF68);
  sub_1000688E4(v65, (uint64_t)v87);
  sub_1000688E4(v66, (uint64_t)v86);
  sub_10006CAB8(v69, (uint64_t)v85, &qword_1010BD020);
  sub_10006CAB8(v67, (uint64_t)v84, &qword_1010BDF78);
  sub_1000688E4(v68, (uint64_t)v83);
  unint64_t v30 = (*(unsigned __int8 *)(v25 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v31 = (v26 + *(unsigned __int8 *)(v63 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  unint64_t v32 = (v23 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v34 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = (v35 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v69 = (v36 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = (v37 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v68 = (v66 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = swift_allocObject();
  sub_10003CABC((uint64_t)v89, v38 + 16, &qword_1010BDF80);
  sub_100068978(v88, v38 + 56);
  sub_10003CABC(v59, v38 + v30, &qword_1010BCFB8);
  sub_10003CABC(v60, v38 + v31, &qword_1010BDF68);
  *(void *)(v38 + v32) = v72;
  sub_100068978(v87, v38 + v33);
  sub_100068978(v86, v38 + v34);
  sub_10003CABC((uint64_t)v85, v38 + v35, &qword_1010BD020);
  sub_10003CABC((uint64_t)v84, v38 + v36, &qword_1010BDF78);
  uint64_t v39 = v74;
  uint64_t v40 = v75;
  *(void *)(v38 + v69) = v75;
  unint64_t v41 = v76;
  uint64_t v42 = v77;
  *(void *)(v38 + v67) = v77;
  uint64_t v43 = (void *)(v38 + v37);
  *uint64_t v43 = v73;
  v43[1] = v39;
  uint64_t v44 = (uint64_t *)(v38 + v66);
  uint64_t v45 = v38 + v68;
  uint64_t v46 = v79;
  uint64_t *v44 = v79;
  v44[1] = v41;
  sub_100068978(v83, v45);
  id v47 = v40;
  id v48 = v42;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100369804(v46, v41);
  uint64_t v49 = v78;
  UUID.init()();
  uint64_t v50 = UUID.uuidString.getter();
  uint64_t v52 = v51;
  (*(void (**)(char *, uint64_t))(v80 + 8))(v49, v81);
  strcpy((char *)v85, "ActionMenu: ");
  BYTE5(v85[1]) = 0;
  HIWORD(v85[1]) = -5120;
  v53._countAndFlagsBits = v71;
  v53._object = v70;
  String.append(_:)(v53);
  swift_bridgeObjectRelease();
  uint64_t v54 = v85[0];
  uint64_t v55 = v85[1];
  uint64_t result = sub_1000760E4((uint64_t)v90);
  uint64_t v57 = v82;
  *uint64_t v82 = v50;
  v57[1] = v52;
  v57[2] = v54;
  v57[3] = v55;
  v57[4] = 0;
  v57[5] = 0xE000000000000000;
  v57[6] = 0;
  *((unsigned char *)v57 + 56) = 0;
  v57[8] = (uint64_t)sub_100899554;
  v57[9] = v38;
  return result;
}

uint64_t sub_1008917B0(uint64_t a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 16) = swift_task_alloc();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  long long v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(sub_100891878, 0, 0);
}

uint64_t sub_100891878()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  char v6 = *(unsigned char *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  long long v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100A27F94(v8, (uint64_t)&unk_1010BE210, v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100891A1C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&dword_1010C1AF8 + dword_1010C1AF8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_10089BE84;
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

uint64_t sub_100891AF4(uint64_t a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 16) = swift_task_alloc();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  long long v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(sub_100891BBC, 0, 0);
}

uint64_t sub_100891BBC()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  char v6 = *(unsigned char *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  long long v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100A27F94(v8, (uint64_t)&unk_1010BE230, v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100891D60(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&dword_1010C1B18 + dword_1010C1B18;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_10089BE84;
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

uint64_t sub_100891E38(uint64_t a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 16) = swift_task_alloc();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  long long v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(sub_100891F00, 0, 0);
}

uint64_t sub_100891F00()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  char v6 = *(unsigned char *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  long long v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100A27F94(v8, (uint64_t)&unk_1010BE2C0, v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1008920A4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&dword_1010C1B98 + dword_1010C1B98;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_10089BE84;
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

uint64_t sub_10089217C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = a1[7];
  a2[3] = (uint64_t)&type metadata for Actions.GoToAlbum.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.GoToAlbum.Context;
  uint64_t v8 = swift_allocObject();
  *a2 = v8;
  *(void *)(v8 + 16) = v5;
  *(void *)(v8 + 24) = v4;
  *(void *)(v8 + 32) = v6;
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a1 + 5);
  *(void *)(v8 + 72) = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_100892248(_OWORD *a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 144) = swift_task_alloc();
  long long v3 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v3;
  long long v4 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v4;
  long long v5 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v5;
  long long v6 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v6;
  return _swift_task_switch(sub_1008922FC, 0, 0);
}

uint64_t sub_1008922FC()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  long long v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  long long v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  long long v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  long long v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_1004605D8(v0 + 16);
  sub_100A27F94(v1, (uint64_t)&unk_1010BE2A0, v3);
  swift_release();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100892418(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  long long v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  long long v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  long long v9 = a4[3];
  uint64_t v12 = (char *)&dword_1010C1B78 + dword_1010C1B78;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 144) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_10089BE88;
  return ((uint64_t (*)(uint64_t, void))v12)(a1, 0);
}

uint64_t sub_1008924F0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v7 = a1[7];
  a2[3] = (uint64_t)&type metadata for Actions.Share.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.Share.Context;
  uint64_t v8 = swift_allocObject();
  *a2 = v8;
  *(void *)(v8 + 16) = v4;
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(a1 + 3);
  *(void *)(v8 + 56) = v5;
  *(void *)(v8 + 64) = v6;
  *(void *)(v8 + 72) = v7;
  swift_retain();
  swift_retain();
  swift_retain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1008925B4(_OWORD *a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 144) = swift_task_alloc();
  long long v3 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v3;
  long long v4 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v4;
  long long v5 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v5;
  long long v6 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v6;
  return _swift_task_switch(sub_100892668, 0, 0);
}

uint64_t sub_100892668()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  long long v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  long long v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  long long v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  long long v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_10036A3C8(v0 + 16);
  sub_100A27F94(v1, (uint64_t)&unk_1010BE280, v3);
  swift_release();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100892784(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  long long v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  long long v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  long long v9 = a4[3];
  uint64_t v12 = (char *)&dword_1010C1B58 + dword_1010C1B58;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 144) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_10089BE88;
  return ((uint64_t (*)(uint64_t, void))v12)(a1, 0);
}

uint64_t sub_10089285C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 64);
  a2[3] = (uint64_t)&type metadata for Actions.Queue.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.Queue.Context;
  uint64_t v9 = swift_allocObject();
  *a2 = v9;
  *(void *)(v9 + 16) = v4;
  *(void *)(v9 + 24) = v5;
  *(void *)(v9 + 32) = v6;
  *(void *)(v9 + 40) = v7;
  long long v11 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v9 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v9 + 64) = v11;
  *(void *)(v9 + 80) = v8;
  sub_1001820E4(v4);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_10089292C(uint64_t a1)
{
  sub_100063814(&qword_1010C0040);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 112) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 128) = v4;
  *(void *)(v1 + 144) = *(void *)(a1 + 128);
  *(void *)(v1 + 152) = v3;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 64) = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 96) = v6;
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v7;
  return _swift_task_switch(sub_1008929E4, 0, 0);
}

uint64_t sub_1008929E4()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  long long v4 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v4;
  *(void *)(v3 + 160) = *(void *)(v0 + 144);
  long long v5 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v5;
  long long v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v6;
  long long v7 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v7;
  sub_100897D3C((id *)(v0 + 16));
  sub_100A27F94(v1, (uint64_t)&unk_1010BE100, v3);
  swift_release();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100892B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v6 = *(_OWORD *)(a4 + 112);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a4 + 96);
  *(_OWORD *)(v4 + 128) = v6;
  *(void *)(v4 + 144) = *(void *)(a4 + 128);
  long long v7 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v4 + 64) = v7;
  long long v8 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(v4 + 96) = v8;
  long long v9 = *(_OWORD *)(a4 + 16);
  uint64_t v12 = (char *)&dword_1010C1A58 + dword_1010C1A58;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(v4 + 32) = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 152) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_100892BE8;
  return ((uint64_t (*)(uint64_t, void))v12)(a1, 0);
}

uint64_t sub_100892BE8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100892CDC(uint64_t a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 16) = swift_task_alloc();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  long long v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(sub_100892DA4, 0, 0);
}

uint64_t sub_100892DA4()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  char v6 = *(unsigned char *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  long long v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100A27F94(v8, (uint64_t)&unk_1010BE250, v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100892F48(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&dword_1010C1B38 + dword_1010C1B38;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_10089BE84;
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

uint64_t sub_100893020(uint64_t a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 16) = swift_task_alloc();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  long long v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(sub_1008930E8, 0, 0);
}

uint64_t sub_1008930E8()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  char v6 = *(unsigned char *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  long long v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100A27F94(v8, (uint64_t)&unk_1010BE1B8, v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_10089328C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&dword_1010C1AB8 + dword_1010C1AB8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_10089BE84;
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

uint64_t sub_100893364(uint64_t a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 16) = swift_task_alloc();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  long long v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(sub_10089342C, 0, 0);
}

uint64_t sub_10089342C()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  char v6 = *(unsigned char *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  long long v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100A27F94(v8, (uint64_t)&unk_1010BE148, v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1008935D0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&dword_1010C18C0 + dword_1010C18C0;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_10089BE84;
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

uint64_t sub_1008936A8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v4 = (uint64_t (*)(char))((char *)&dword_1010C18B0 + dword_1010C18B0);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100893754;
  return v4(0);
}

uint64_t sub_100893754(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(unsigned char **)(v4 + 16) = a1;
  }
  long long v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_100893864(_OWORD *a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 144) = swift_task_alloc();
  long long v3 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v3;
  long long v4 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v4;
  long long v5 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v5;
  long long v6 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v6;
  return _swift_task_switch(sub_100893918, 0, 0);
}

uint64_t sub_100893918()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  long long v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  long long v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  long long v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  long long v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_100899044(v0 + 16);
  sub_100A27F94(v1, (uint64_t)&unk_1010BE178, v3);
  swift_release();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100893A34(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  long long v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  long long v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  long long v9 = a4[3];
  uint64_t v12 = (char *)&dword_1010C1A78 + dword_1010C1A78;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 144) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_100893B0C;
  return ((uint64_t (*)(uint64_t, void))v12)(a1, 0);
}

uint64_t sub_100893B0C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100893C00@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[7];
  a4[3] = a2;
  a4[4] = a3;
  uint64_t v8 = swift_allocObject();
  *a4 = v8;
  *(void *)(v8 + 16) = v6;
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(a1 + 5);
  *(void *)(v8 + 72) = v7;
  swift_retain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_100893CB0(_OWORD *a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 144) = swift_task_alloc();
  long long v3 = a1[5];
  *(_OWORD *)(v1 + 80) = a1[4];
  *(_OWORD *)(v1 + 96) = v3;
  long long v4 = a1[7];
  *(_OWORD *)(v1 + 112) = a1[6];
  *(_OWORD *)(v1 + 128) = v4;
  long long v5 = a1[1];
  *(_OWORD *)(v1 + 16) = *a1;
  *(_OWORD *)(v1 + 32) = v5;
  long long v6 = a1[3];
  *(_OWORD *)(v1 + 48) = a1[2];
  *(_OWORD *)(v1 + 64) = v6;
  return _swift_task_switch(sub_100893D64, 0, 0);
}

uint64_t sub_100893D64()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  long long v4 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 112) = v4;
  long long v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 144) = v5;
  long long v6 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 48) = v6;
  long long v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 80) = v7;
  sub_100899044(v0 + 16);
  sub_100A27F94(v1, (uint64_t)&unk_1010BE198, v3);
  swift_release();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100893E80(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  long long v7 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v7;
  long long v8 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  long long v9 = a4[3];
  uint64_t v12 = (char *)&dword_1010C1A98 + dword_1010C1A98;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 144) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_10089BE88;
  return ((uint64_t (*)(uint64_t, void))v12)(a1, 0);
}

uint64_t sub_100893F58(uint64_t a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 16) = swift_task_alloc();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  long long v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(sub_100894020, 0, 0);
}

uint64_t sub_100894020()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  char v6 = *(unsigned char *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  long long v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100A27F94(v8, (uint64_t)&unk_1010BE1D8, v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1008941C4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&dword_1010C1AD8 + dword_1010C1AD8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_10089BE84;
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

uint64_t sub_10089429C(uint64_t a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 16) = swift_task_alloc();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  long long v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(sub_100894364, 0, 0);
}

uint64_t sub_100894364()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  char v6 = *(unsigned char *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  long long v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100A27F94(v8, (uint64_t)&unk_1010BE080, v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100894508(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&dword_1010C19D8 + dword_1010C19D8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_10089BE84;
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

uint64_t sub_1008945E0(uint64_t a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 16) = swift_task_alloc();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  long long v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(sub_1008946A8, 0, 0);
}

uint64_t sub_1008946A8()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  char v6 = *(unsigned char *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  long long v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100A27F94(v8, (uint64_t)&unk_1010BE0A0, v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_10089484C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&dword_1010C19F8 + dword_1010C19F8;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_100894924;
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

uint64_t sub_100894924()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100894A18(uint64_t a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 16) = swift_task_alloc();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  long long v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(sub_100894AE0, 0, 0);
}

uint64_t sub_100894AE0()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  char v6 = *(unsigned char *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  long long v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100A27F94(v8, (uint64_t)&unk_1010BE0C0, v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100894C84(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&dword_1010C1A18 + dword_1010C1A18;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_10089BE84;
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

uint64_t sub_100894D5C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[5];
  a4[3] = a2;
  a4[4] = a3;
  uint64_t v8 = swift_allocObject();
  *a4 = v8;
  *(void *)(v8 + 16) = v6;
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(a1 + 3);
  *(void *)(v8 + 56) = v7;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_100894DF4(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 48);
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  long long v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  v8[2] = *(_OWORD *)(a1 + 32);
  char v9 = v1;
  uint64_t v10 = v2;
  uint64_t v11 = v3;
  uint64_t v12 = v4;
  long long v6 = *(_OWORD *)(a1 + 96);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = v6;
  return v2(v8);
}

uint64_t sub_100894E54(uint64_t a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 16) = swift_task_alloc();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 32);
  *(unsigned char *)(v1 + 128) = *(unsigned char *)(a1 + 48);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 56);
  *(void *)(v1 + 88) = *(void *)(a1 + 72);
  long long v4 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 112) = v4;
  return _swift_task_switch(sub_100894F1C, 0, 0);
}

uint64_t sub_100894F1C()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  char v6 = *(unsigned char *)(v0 + 128);
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 48);
  long long v16 = *(_OWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(_OWORD *)(v11 + 56) = v15;
  *(void *)(v11 + 72) = v7;
  *(unsigned char *)(v11 + 80) = v6;
  *(void *)(v11 + 88) = v5;
  *(void *)(v11 + 96) = v4;
  *(void *)(v11 + 104) = v3;
  *(void *)(v11 + 112) = v2;
  *(_OWORD *)(v11 + 120) = v16;
  *(void *)(v11 + 136) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100A27F94(v8, (uint64_t)&unk_1010BE0E0, v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1008950C0(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v6;
  *(_OWORD *)(v4 + 112) = a4[6];
  long long v7 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v7;
  long long v8 = a4[3];
  uint64_t v11 = (char *)&dword_1010C1A38 + dword_1010C1A38;
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 128) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_10089BE84;
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

uint64_t sub_100895198@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[3];
  a2[3] = (uint64_t)&type metadata for Actions.RateSong.Context;
  a2[4] = (uint64_t)&protocol witness table for Actions.RateSong.Context;
  uint64_t v6 = swift_allocObject();
  *a2 = v6;
  *(void *)(v6 + 16) = v4;
  *(_OWORD *)(v6 + 24) = *(_OWORD *)(a1 + 1);
  *(void *)(v6 + 40) = v5;
  swift_retain();

  return swift_retain();
}

uint64_t sub_100895224(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 32);
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  long long v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  char v9 = v1;
  uint64_t v10 = v2;
  uint64_t v11 = v3;
  uint64_t v12 = v4;
  long long v6 = *(_OWORD *)(a1 + 80);
  long long v13 = *(_OWORD *)(a1 + 64);
  long long v14 = v6;
  return v2(v8);
}

uint64_t sub_10089527C(uint64_t a1)
{
  sub_100063814(&qword_1010C0040);
  *(void *)(v1 + 16) = swift_task_alloc();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(unsigned char *)(v1 + 112) = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)(a1 + 40);
  *(void *)(v1 + 72) = *(void *)(a1 + 56);
  long long v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 96) = v4;
  return _swift_task_switch(sub_10089533C, 0, 0);
}

uint64_t sub_10089533C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  char v6 = *(unsigned char *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v0 + 24);
  uint64_t v10 = type metadata accessor for TaskPriority();
  long long v14 = *(_OWORD *)(v0 + 32);
  long long v15 = *(_OWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  *(void *)(v11 + 32) = v9;
  *(_OWORD *)(v11 + 40) = v14;
  *(void *)(v11 + 56) = v7;
  *(unsigned char *)(v11 + 64) = v6;
  *(void *)(v11 + 72) = v5;
  *(void *)(v11 + 80) = v4;
  *(void *)(v11 + 88) = v3;
  *(void *)(v11 + 96) = v2;
  *(_OWORD *)(v11 + 104) = v15;
  *(void *)(v11 + 120) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100A27F94(v8, (uint64_t)&unk_1010BE060, v11);
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1008954C4(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v6 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v6;
  long long v7 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v7;
  long long v8 = a4[1];
  uint64_t v11 = (char *)&dword_1010C19B8 + dword_1010C19B8;
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v8;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 112) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_100895594;
  return ((uint64_t (*)(uint64_t, void))v11)(a1, 0);
}

uint64_t sub_100895594()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100895688@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v56 = a7;
  uint64_t v57 = a5;
  uint64_t v50 = a6;
  *(void *)&long long v55 = a4;
  uint64_t v58 = a2;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v52 = *(void *)(v11 - 8);
  uint64_t v53 = v11;
  __chkstk_darwin(v11);
  uint64_t v51 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Album();
  uint64_t v46 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  long long v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100063814(&qword_1010BCFB8);
  uint64_t v47 = *(void *)(v16 - 8);
  __chkstk_darwin(v16 - 8);
  uint64_t v48 = v17;
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[3];
  *(void *)&long long v54 = a1[4];
  uint64_t v20 = a1[5];
  uint64_t v21 = sub_100068990(a1, v19);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v24 + 16))(v23);
  uint64_t v49 = a3;
  sub_1000688E4(a3, (uint64_t)v60);
  sub_10006CAB8(v55, (uint64_t)v62, &qword_1010BD028);
  sub_10006CAB8(v57, (uint64_t)v61, &qword_1010BD020);
  sub_10006CAB8(v56, (uint64_t)v18, &qword_1010BCFB8);
  Actions.AddToLibrary.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:observer:metricsReportingContext:)((unint64_t)v23, v58, v60, (uint64_t)v62, (uint64_t)v61, 0, 0, (uint64_t)v18, &v63, v19, v54, v20);
  long long v54 = v64;
  long long v55 = v65;
  uint64_t v45 = v63;
  uint64_t v25 = v66;
  sub_100180E30((uint64_t)a1, (uint64_t)v61);
  swift_retain();
  sub_100063814(&qword_1010BE108);
  if (swift_dynamicCast())
  {
    uint64_t v26 = v63;
    uint64_t v27 = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v15, v13);
    uint64_t v28 = ((uint64_t (*)(uint64_t))v26)(v27);
    BOOL v30 = v29 != 1;
    sub_100313EE8(v28, v29);
  }
  else
  {
    BOOL v30 = 1;
  }
  sub_100180E30((uint64_t)a1, (uint64_t)v61);
  uint64_t v46 = String.init<A>(describing:)();
  unint64_t v32 = v31;
  sub_100180E30((uint64_t)a1, (uint64_t)v60);
  sub_1000688E4(v49, (uint64_t)v62);
  sub_10006CAB8(v56, (uint64_t)v18, &qword_1010BCFB8);
  sub_10006CAB8(v50, (uint64_t)v59, &qword_1010BDF78);
  sub_10006CAB8(v57, (uint64_t)v61, &qword_1010BD020);
  unint64_t v33 = (*(unsigned __int8 *)(v47 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  unint64_t v34 = (v48 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v45;
  *(_OWORD *)(v35 + 24) = v54;
  *(_OWORD *)(v35 + 40) = v55;
  *(void *)(v35 + 56) = v25;
  *(unsigned char *)(v35 + 64) = 0;
  *(_DWORD *)(v35 + 65) = v67[0];
  *(_DWORD *)(v35 + 68) = *(_DWORD *)((char *)v67 + 3);
  *(void *)(v35 + 72) = sub_100842DF8;
  *(void *)(v35 + 80) = 0;
  *(void *)(v35 + 88) = 0x4014000000000000;
  *(void *)(v35 + 96) = &unk_1010BD008;
  *(void *)(v35 + 104) = 0;
  *(void *)(v35 + 112) = &unk_1010BD010;
  *(void *)(v35 + 120) = 0;
  *(unsigned char *)(v35 + 128) = v30;
  sub_10017C674(v60, (_OWORD *)(v35 + 136));
  sub_100068978(v62, v35 + 184);
  *(void *)(v35 + 224) = v58;
  sub_10003CABC((uint64_t)v18, v35 + v33, &qword_1010BCFB8);
  sub_10003CABC((uint64_t)v59, v35 + v34, &qword_1010BDF78);
  sub_10003CABC((uint64_t)v61, v35 + ((v34 + 47) & 0xFFFFFFFFFFFFFFF8), &qword_1010BD020);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v36 = v51;
  UUID.init()();
  uint64_t v37 = UUID.uuidString.getter();
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v53);
  strcpy((char *)v61, "ActionMenu: ");
  BYTE5(v61[1]) = 0;
  HIWORD(v61[1]) = -5120;
  v40._countAndFlagsBits = v46;
  v40._object = v32;
  String.append(_:)(v40);
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v42 = v61[0];
  uint64_t v43 = v61[1];
  *(void *)a8 = v37;
  *(void *)(a8 + 8) = v39;
  *(void *)(a8 + 16) = v42;
  *(void *)(a8 + 24) = v43;
  *(void *)(a8 + 32) = 0;
  *(void *)(a8 + 40) = 0xE000000000000000;
  *(void *)(a8 + 48) = 0;
  *(unsigned char *)(a8 + 56) = 0;
  *(void *)(a8 + 64) = sub_1008985D8;
  *(void *)(a8 + 72) = v35;
  return result;
}

uint64_t sub_100895C84@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, unint64_t a9, uint64_t a10)
{
  uint64_t v38 = a4;
  uint64_t v39 = a7;
  uint64_t v43 = a5;
  uint64_t v44 = a6;
  unint64_t v42 = a9;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v45 = *(void *)(v14 - 8);
  uint64_t v46 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100063814(&qword_1010BCFB8);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000688E4(a1, (uint64_t)v48);
  sub_100063814(&qword_1010BDF88);
  uint64_t v21 = String.init<A>(describing:)();
  Swift::String v40 = v22;
  uint64_t v41 = v21;
  sub_1000688E4(a1, (uint64_t)v48);
  sub_10006CAB8(a10, (uint64_t)v20, &qword_1010BCFB8);
  sub_1000688E4(v38, (uint64_t)v47);
  unint64_t v23 = (*(unsigned __int8 *)(v18 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v24 = (v19 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = (void *)swift_allocObject();
  sub_100068978(v48, (uint64_t)(v25 + 2));
  v25[7] = a2;
  v25[8] = a3;
  uint64_t v26 = v44;
  v25[9] = v43;
  v25[10] = v26;
  uint64_t v27 = (uint64_t)v25 + v23;
  uint64_t v28 = v39;
  unint64_t v29 = v42;
  v25[11] = v39;
  v25[12] = v29;
  sub_10003CABC((uint64_t)v20, v27, &qword_1010BCFB8);
  sub_100068978(v47, (uint64_t)v25 + v24);
  id v30 = a2;
  id v31 = a3;
  swift_bridgeObjectRetain();
  sub_100369804(v28, v29);
  UUID.init()();
  uint64_t v32 = UUID.uuidString.getter();
  uint64_t v34 = v33;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v46);
  strcpy((char *)v48, "ActionMenu: ");
  BYTE13(v48[0]) = 0;
  HIWORD(v48[0]) = -5120;
  v35._countAndFlagsBits = v41;
  v35._object = v40;
  String.append(_:)(v35);
  uint64_t result = swift_bridgeObjectRelease();
  long long v37 = v48[0];
  *(void *)a8 = v32;
  *(void *)(a8 + 8) = v34;
  *(_OWORD *)(a8 + 16) = v37;
  *(void *)(a8 + 32) = 0;
  *(void *)(a8 + 40) = 0xE000000000000000;
  *(void *)(a8 + 48) = 0;
  *(unsigned char *)(a8 + 56) = 0;
  *(void *)(a8 + 64) = sub_10089ABA0;
  *(void *)(a8 + 72) = v25;
  return result;
}

uint64_t sub_100895F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v41 = a8;
  uint64_t v40 = a7;
  uint64_t v36 = a6;
  uint64_t v35 = a5;
  uint64_t v37 = a2;
  uint64_t v42 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100063814(&qword_1010BCFB8);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000688E4(a1, (uint64_t)v43);
  sub_100063814(&qword_1010BDF90);
  uint64_t v39 = String.init<A>(describing:)();
  uint64_t v38 = v20;
  sub_1000688E4(a1, (uint64_t)v46);
  sub_1000688E4(a3, (uint64_t)v45);
  sub_10006CAB8(a4, (uint64_t)v44, &qword_1010BD028);
  sub_10006CAB8(v35, (uint64_t)v43, &qword_1010BD020);
  sub_10006CAB8(v36, (uint64_t)v19, &qword_1010BCFB8);
  unint64_t v21 = (*(unsigned __int8 *)(v17 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v22 = (v18 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  sub_100068978(v46, v23 + 16);
  *(void *)(v23 + 56) = v37;
  sub_100068978(v45, v23 + 64);
  sub_10003CABC((uint64_t)v44, v23 + 104, &qword_1010BD028);
  sub_10003CABC((uint64_t)v43, v23 + 144, &qword_1010BD020);
  sub_10003CABC((uint64_t)v19, v23 + v21, &qword_1010BCFB8);
  unint64_t v24 = (uint64_t *)(v23 + v22);
  uint64_t v25 = v40;
  uint64_t v26 = v41;
  *unint64_t v24 = v40;
  v24[1] = v26;
  swift_retain();
  sub_10007B674(v25);
  UUID.init()();
  uint64_t v27 = UUID.uuidString.getter();
  uint64_t v29 = v28;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v42);
  strcpy((char *)v43, "ActionMenu: ");
  BYTE5(v43[1]) = 0;
  HIWORD(v43[1]) = -5120;
  v30._countAndFlagsBits = v39;
  v30._object = v38;
  String.append(_:)(v30);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v32 = v43[0];
  uint64_t v33 = v43[1];
  *(void *)a9 = v27;
  *(void *)(a9 + 8) = v29;
  *(void *)(a9 + 16) = v32;
  *(void *)(a9 + 24) = v33;
  *(void *)(a9 + 32) = 0;
  *(void *)(a9 + 40) = 0xE000000000000000;
  *(void *)(a9 + 48) = 0;
  *(unsigned char *)(a9 + 56) = 0;
  *(void *)(a9 + 64) = sub_100898238;
  *(void *)(a9 + 72) = v23;
  return result;
}

uint64_t sub_1008962C4()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(sub_100063814(&qword_1010BCFB8) - 8) + 80);
  sub_1000760E4(v0 + 16);

  if (*(void *)(v0 + 96)) {
    sub_1000760E4(v0 + 72);
  }
  uint64_t v2 = (v1 + 144) & ~v1;
  swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(v0 + 136);
  if (v3 >> 60 != 15) {
    sub_10007A5C4(*(void *)(v0 + 128), v3);
  }
  uint64_t v4 = v0 + v2;
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v2, 1, v5))
  {
    if (*(void *)(v4 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v6 + *(int *)(v7 + 24);
      uint64_t v9 = type metadata accessor for URL();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

void *sub_100896554()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  return sub_100888D18((void *)(v0 + 16), *(void **)(v0 + 56), *(void **)(v0 + 64), v0 + 72, *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), v0 + ((*(unsigned __int8 *)(v1 + 80) + 144) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_1008965CC()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  sub_1000760E4(v0 + 16);
  swift_release();
  sub_1000760E4(v0 + 64);
  if (*(void *)(v0 + 128)) {
    sub_1000760E4(v0 + 104);
  }
  uint64_t v4 = v3 + v2;
  swift_unknownObjectWeakDestroy();
  int v5 = *(unsigned __int8 *)(v0 + 192);
  if (v5 != 255) {
    sub_1000E0DB0(*(id *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), v5);
  }
  uint64_t v6 = v4 + 7;
  if (*(void *)(v0 + 200)) {
    swift_release();
  }
  unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v0 + v2;
  uint64_t v9 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    if (*(void *)(v8 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    uint64_t v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v10 + *(int *)(v11 + 24);
      uint64_t v13 = type metadata accessor for URL();
      uint64_t v14 = *(void *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + v7)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

void *sub_100896898()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10088B558((void *)(v0 + 16), *(void *)(v0 + 56), v0 + 64, v0 + 104, v0 + 144, v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

ValueMetadata *type metadata accessor for Actions()
{
  return &type metadata for Actions;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Playlist.Entry();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Playlist();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for PlaylistContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Playlist.Entry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Playlist();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Entry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Entry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Entry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Entry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100896E04);
}

uint64_t sub_100896E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Entry();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for Playlist();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for PlaylistContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100896F10);
}

uint64_t sub_100896F10(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Playlist.Entry();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for Playlist();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_100897014()
{
  uint64_t result = type metadata accessor for Playlist.Entry();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Playlist();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicActions()
{
  return &type metadata for MusicActions;
}

uint64_t sub_1008970EC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100897124(uint64_t a1)
{
  return sub_10088C080(a1, *(uint64_t (**)(uint64_t *))(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100897138@<X0>(uint64_t *a1@<X8>)
{
  return sub_100895198((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_100897144()
{
  return sub_100895224(v0 + 16);
}

uint64_t sub_100897150()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008971A8()
{
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_100081D08;
  unint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_1010BE048 + dword_1010BE048);
  return v3(v0 + 16);
}

uint64_t sub_100897248()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008972A8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE058 + dword_1010BE058);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100897370()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008973B4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100894D5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.UndoSuggestLess.Context, (uint64_t)&protocol witness table for Actions.UndoSuggestLess.Context, a1);
}

uint64_t sub_1008973F0()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100081D08;
  unint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_1010BE068 + dword_1010BE068);
  return v3(v0 + 16);
}

uint64_t sub_100897494(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE078 + dword_1010BE078);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100897564@<X0>(uint64_t *a1@<X8>)
{
  return sub_100894D5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.SuggestLess.Context, (uint64_t)&protocol witness table for Actions.SuggestLess.Context, a1);
}

uint64_t sub_10089759C()
{
  return sub_100894DF4(v0 + 16);
}

uint64_t sub_1008975BC()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000154F4;
  unint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_1010BE088 + dword_1010BE088);
  return v3(v0 + 16);
}

uint64_t sub_100897660(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE098 + dword_1010BE098);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100897730@<X0>(uint64_t *a1@<X8>)
{
  return sub_100894D5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.UndoFavorite.Context, (uint64_t)&protocol witness table for Actions.UndoFavorite.Context, a1);
}

uint64_t sub_10089776C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100081D08;
  unint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_1010BE0A8 + dword_1010BE0A8);
  return v3(v0 + 16);
}

uint64_t sub_100897810(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE0B8 + dword_1010BE0B8);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1008978E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100894D5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Favorite.Context, (uint64_t)&protocol witness table for Actions.Favorite.Context, a1);
}

uint64_t sub_10089791C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100081D08;
  unint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_1010BE0C8 + dword_1010BE0C8);
  return v3(v0 + 16);
}

uint64_t sub_1008979C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE0D8 + dword_1010BE0D8);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100897A8C(uint64_t a1, uint64_t a2)
{
  return a2;
}

id *sub_100897AE8(id *a1)
{
  return a1;
}

id *sub_100897B14(id *a1)
{
  return a1;
}

uint64_t sub_100897BB0@<X0>(uint64_t *a1@<X8>)
{
  return sub_10089285C(v1 + 16, a1);
}

uint64_t sub_100897BBC()
{
  long long v1 = *(_OWORD *)(v0 + 64);
  v7[2] = *(_OWORD *)(v0 + 48);
  v7[3] = v1;
  v7[4] = *(_OWORD *)(v0 + 80);
  long long v2 = *(_OWORD *)(v0 + 32);
  v7[0] = *(_OWORD *)(v0 + 16);
  v7[1] = v2;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  long long v5 = *(_OWORD *)(v0 + 128);
  long long v10 = *(_OWORD *)(v0 + 112);
  long long v11 = v5;
  uint64_t v12 = *(void *)(v0 + 144);
  uint64_t v8 = v4;
  uint64_t v9 = v3;
  return v4(v7);
}

uint64_t sub_100897C24()
{
  long long v1 = *(void **)(v0 + 16);
  if ((unint64_t)v1 >= 4) {

  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100897C9C()
{
  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = sub_100081D08;
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_1010BE0E8 + dword_1010BE0E8);
  return v3(v0 + 16);
}

id *sub_100897D3C(id *a1)
{
  return a1;
}

uint64_t sub_100897DD4()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void **)(v0 + 32);
  if ((unint64_t)v1 >= 4) {

  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100897E54(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1010BE0F8 + dword_1010BE0F8);
  return v7(a1, v4, v5, v1 + 32);
}

uint64_t sub_100897F1C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if ((unint64_t)v1 >= 4) {

  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100897F7C()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = *(void *)(v1 + 64) + v2;
  sub_1000760E4(v0 + 16);
  swift_release();
  sub_1000760E4(v0 + 64);
  if (*(void *)(v0 + 128)) {
    sub_1000760E4(v0 + 104);
  }
  unint64_t v4 = v3 + 7;
  if (*(void *)(v0 + 200) != 1)
  {
    swift_unknownObjectWeakDestroy();
    int v5 = *(unsigned __int8 *)(v0 + 192);
    if (v5 != 255) {
      sub_1000E0DB0(*(id *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), v5);
    }
    if (*(void *)(v0 + 200)) {
      swift_release();
    }
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0 + v2;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v9 + *(int *)(v10 + 24);
      uint64_t v12 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v12 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + v6)) {
    swift_release();
  }

  return swift_deallocObject();
}

void *sub_100898238()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 216) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = v0 + v2;
  int v5 = (uint64_t *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];

  return sub_10088A8BC((void *)(v0 + 16), v3, v0 + 64, v0 + 104, v0 + 144, v4, v6, v7);
}

uint64_t sub_1008982E0()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = v3 + 47;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000760E4(v0 + 136);
  sub_1000760E4(v0 + 184);
  swift_release();
  uint64_t v5 = v0 + v2;
  uint64_t v6 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    if (*(void *)(v5 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v7 = v5 + *(int *)(v6 + 20);
    uint64_t v8 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = v7 + *(int *)(v8 + 24);
      uint64_t v10 = type metadata accessor for URL();
      uint64_t v11 = *(void *)(v10 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v4 = v3 + 47;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v12 = v4 & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v0 + v3 + 24)) {
    sub_1000760E4(v0 + v3);
  }
  uint64_t v13 = v0 + v12;
  if (*(void *)(v0 + v12 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy();
    int v14 = *(unsigned __int8 *)(v13 + 48);
    if (v14 != 255) {
      sub_1000E0DB0(*(id *)(v13 + 8), *(void *)(v13 + 16), *(void *)(v13 + 24), *(void *)(v13 + 32), *(void *)(v13 + 40), v14);
    }
    if (*(void *)(v13 + 56)) {
      swift_release();
    }
  }

  return swift_deallocObject();
}

uint64_t sub_1008985D8()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 232) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v4 = *(unsigned char *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 224);

  return sub_1008895B8(v0 + 16, v4, (void *)(v0 + 136), (void *)(v0 + 184), v5, v0 + v2, v0 + v3, v0 + ((v3 + 47) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_100898688()
{
  return sub_10089B42C((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_1008986B4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008986F0@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for Actions.DeleteOrRemoveDownload.Context;
  a1[4] = (uint64_t)&protocol witness table for Actions.DeleteOrRemoveDownload.Context;
  uint64_t v3 = swift_allocObject();
  *a1 = v3;

  return sub_10085933C(v1 + 16, v3 + 16);
}

uint64_t sub_10089875C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000760E4(v0 + 96);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008987DC()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 160))(v0 + 16);
}

uint64_t sub_10089880C()
{
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_100081D08;
  return sub_100882DC8(v0 + 16);
}

uint64_t sub_1008988A4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100894D5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Download.Context, (uint64_t)&protocol witness table for Actions.Download.Context, a1);
}

uint64_t sub_1008988E0()
{
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_100081D08;
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_1010BE130 + dword_1010BE130);
  return v3(v0 + 16);
}

uint64_t sub_100898984(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE140 + dword_1010BE140);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100898A50()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000760E4(v0 + 112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100898AD8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100081D08;
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1010BE150 + dword_1010BE150);
  return v4(a1);
}

uint64_t sub_100898BA0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000760E4(v0 + 96);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100898C08()
{
  return sub_10089B15C((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_100898C34@<X0>(uint64_t *a1@<X8>)
{
  return sub_100893C00((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.RemoveDownload.Context, (uint64_t)&protocol witness table for Actions.RemoveDownload.Context, a1);
}

uint64_t sub_100898C68()
{
  return sub_10089B15C((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_100898C98()
{
  return sub_10089B15C((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_100898CC4()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100081D08;
  uint64_t v3 = (uint64_t (*)(_OWORD *))((char *)&dword_1010BE160 + dword_1010BE160);
  return v3((_OWORD *)(v0 + 16));
}

uint64_t sub_100898D64()
{
  return sub_10089B2A8((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_100898D90(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE170 + dword_1010BE170);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100898E58()
{
  return sub_10089B42C((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_100898E84()
{
  return sub_10089B15C((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_100898EB0@<X0>(uint64_t *a1@<X8>)
{
  return sub_100893C00((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.DeleteFromLibrary.Context, (uint64_t)&protocol witness table for Actions.DeleteFromLibrary.Context, a1);
}

uint64_t sub_100898EE4()
{
  return sub_10089B15C((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_100898F10()
{
  long long v1 = *(_OWORD *)(v0 + 64);
  _OWORD v8[2] = *(_OWORD *)(v0 + 48);
  _OWORD v8[3] = v1;
  long long v2 = *(_OWORD *)(v0 + 32);
  v8[0] = *(_OWORD *)(v0 + 16);
  v8[1] = v2;
  uint64_t v14 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 88);
  long long v12 = *(_OWORD *)(v0 + 104);
  long long v5 = *(_OWORD *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 96);
  long long v13 = v5;
  uint64_t v9 = v3;
  uint64_t v10 = v4;
  uint64_t v11 = v6;
  return v4(v8);
}

uint64_t sub_100898F78()
{
  return sub_10089B15C((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_100898FA4()
{
  long long v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *long long v2 = v1;
  v2[1] = sub_100081D08;
  uint64_t v3 = (uint64_t (*)(_OWORD *))((char *)&dword_1010BE180 + dword_1010BE180);
  return v3((_OWORD *)(v0 + 16));
}

uint64_t sub_100899044(uint64_t a1)
{
  return a1;
}

uint64_t sub_1008990D0()
{
  return sub_10089B2A8((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_1008990FC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE190 + dword_1010BE190);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1008991C4()
{
  return sub_10089B42C((void (*)(void))&_swift_release, (void (*)(void))&_swift_release);
}

uint64_t sub_1008991F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100894D5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.AddToPlaylist.Context, (uint64_t)&protocol witness table for Actions.AddToPlaylist.Context, a1);
}

uint64_t sub_100899230()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100081D08;
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_1010BE1A0 + dword_1010BE1A0);
  return v3(v0 + 16);
}

uint64_t sub_1008992D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE1B0 + dword_1010BE1B0);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_1008993A4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100894D5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.AddToLibrary.Context, (uint64_t)&protocol witness table for Actions.AddToLibrary.Context, a1);
}

uint64_t sub_1008993E0()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100081D08;
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_1010BE1C0 + dword_1010BE1C0);
  return v3(v0 + 16);
}

uint64_t sub_100899484(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE1D0 + dword_1010BE1D0);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_100899558()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (((v3 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = v6 + 23;
  sub_1000760E4(v0 + 16);
  sub_1000760E4(v0 + 56);
  uint64_t v8 = v0 + v2;
  uint64_t v9 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    unint64_t v19 = v6 + 23;
    if (*(void *)(v8 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    uint64_t v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v10 + *(int *)(v11 + 24);
      uint64_t v12 = type metadata accessor for URL();
      uint64_t v16 = *(void *)(v12 - 8);
      uint64_t v17 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v18, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v7 = v19;
  }
  unint64_t v13 = v7 & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v0 + v3 + 24)) {
    sub_1000760E4(v0 + v3);
  }
  swift_release();

  sub_1000760E4(v0 + v5);
  swift_bridgeObjectRelease();
  unint64_t v14 = *(void *)(v0 + v13 + 8);
  if (v14 >> 60 != 15) {
    sub_10007A5C4(*(void *)(v0 + v13), v14);
  }

  return swift_deallocObject();
}

uint64_t sub_100899830()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  return sub_10088778C(v0 + 16, v0 + 56, v0 + v2, (void *)(v0 + v3), *(void *)(v0 + v4), *(void *)(v0 + v5), v0 + v6, *(void *)(v0 + v7), *(void *)(v0 + v7 + 8), *(void *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_100899910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaylistContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100899974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaylistContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008999D8()
{
  uint64_t v1 = (int *)(type metadata accessor for PlaylistContext() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v2;
  uint64_t v7 = type metadata accessor for Playlist.Entry();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v6 + v1[7];
  uint64_t v9 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  uint64_t v10 = v0 + v5;
  uint64_t v11 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v5, 1, v11))
  {
    if (*(void *)(v10 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v12 = v10 + *(int *)(v11 + 20);
    uint64_t v13 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v12 + *(int *)(v13 + 24);
      uint64_t v15 = type metadata accessor for URL();
      uint64_t v17 = *(void *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v15);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

void *sub_100899D0C()
{
  uint64_t v1 = *(void *)(type metadata accessor for PlaylistContext() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  uint64_t v5 = *(void *)(v0 + v3);
  uint64_t v6 = v0 + ((v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_1008871B4(v0 + v2, v5, v6);
}

uint64_t sub_100899DEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PlaylistContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100899E48()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1000760E4(v0 + 16);
  sub_1000760E4(v0 + 56);
  uint64_t v3 = v0 + v2;
  uint64_t v4 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v0 + v2, 1, v4))
  {
    if (*(void *)(v3 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v5 = v3 + *(int *)(v4 + 20);
    uint64_t v6 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = v5 + *(int *)(v6 + 24);
      uint64_t v8 = type metadata accessor for URL();
      uint64_t v10 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v8);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

void *sub_10089A094()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100886E9C((void *)(v0 + 16), (void *)(v0 + 56), v2);
}

uint64_t sub_10089A104@<X0>(uint64_t *a1@<X8>)
{
  return sub_100894D5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.ShowSongCredits.Context, (uint64_t)&protocol witness table for Actions.ShowSongCredits.Context, a1);
}

uint64_t sub_10089A140()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100081D08;
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_1010BE1F8 + dword_1010BE1F8);
  return v3(v0 + 16);
}

uint64_t sub_10089A1E4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE208 + dword_1010BE208);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_10089A2B0()
{
  uint64_t v1 = type metadata accessor for Playlist();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_10089A340()
{
  uint64_t v1 = type metadata accessor for Playlist.Entry();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for Playlist();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_10089A498()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for Playlist.Entry();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v2;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v0 + v2, 1, v8))
  {
    uint64_t v16 = v3;
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v9 + *(int *)(v10 + 24);
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v11 - 8);
      uint64_t v14 = v11;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(v15, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v16;
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + v3 + v6) & ~v6), v4);

  return swift_deallocObject();
}

uint64_t sub_10089A764@<X0>(uint64_t *a1@<X8>)
{
  return sub_100894D5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.RemoveFromPlaylist.Context, (uint64_t)&protocol witness table for Actions.RemoveFromPlaylist.Context, a1);
}

uint64_t sub_10089A7A0()
{
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_100081D08;
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_1010BE218 + dword_1010BE218);
  return v3(v0 + 16);
}

uint64_t sub_10089A844(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE228 + dword_1010BE228);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_10089A910()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  sub_1000760E4(v0 + 16);

  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(v0 + 96);
  if (v4 >> 60 != 15) {
    sub_10007A5C4(*(void *)(v0 + 88), v4);
  }
  uint64_t v5 = v0 + v2;
  uint64_t v6 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v2, 1, v6))
  {
    if (*(void *)(v5 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v7 = v5 + *(int *)(v6 + 20);
    uint64_t v8 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = v7 + *(int *)(v8 + 24);
      uint64_t v10 = type metadata accessor for URL();
      uint64_t v12 = *(void *)(v10 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v9, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v9, v10);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000760E4(v0 + ((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return swift_deallocObject();
}

void *sub_10089ABA0()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100888190((void *)(v0 + 16), *(void **)(v0 + 56), *(void **)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), v0 + v2, v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_10089AC44@<X0>(uint64_t *a1@<X8>)
{
  return sub_100894D5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.Play.Context, (uint64_t)&protocol witness table for Actions.Play.Context, a1);
}

uint64_t sub_10089AC80()
{
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *unint64_t v2 = v1;
  v2[1] = sub_100081D08;
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_1010BE238 + dword_1010BE238);
  return v3(v0 + 16);
}

uint64_t sub_10089AD24(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE248 + dword_1010BE248);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_10089ADF0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 56);
  swift_release();
  swift_release();
  swift_release();
  a2(v4);
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_10089AE84()
{
  return sub_10089B15C((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10089AEB0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1008924F0((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_10089AEB8()
{
  return sub_10089B15C((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10089AEE4()
{
  return sub_10089B15C((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10089AF10()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100081D08;
  uint64_t v3 = (uint64_t (*)(_OWORD *))((char *)&dword_1010BE268 + dword_1010BE268);
  return v3((_OWORD *)(v0 + 16));
}

uint64_t sub_10089AFB0()
{
  return sub_10089B2A8((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10089AFDC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE278 + dword_1010BE278);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_10089B0A4()
{
  return sub_10089B42C((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10089B0D0()
{
  return sub_10089B15C((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_10089B0FC@<X0>(uint64_t *a1@<X8>)
{
  return sub_10089217C((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_10089B104()
{
  return sub_10089B15C((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_10089B130()
{
  return sub_10089B15C((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_10089B15C(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 24));
  swift_release();
  swift_release();
  a2(*(void *)(v2 + 72));
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10089B1DC()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100081D08;
  uint64_t v3 = (uint64_t (*)(_OWORD *))((char *)&dword_1010BE288 + dword_1010BE288);
  return v3((_OWORD *)(v0 + 16));
}

uint64_t sub_10089B27C()
{
  return sub_10089B2A8((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_10089B2A8(void (*a1)(void), void (*a2)(void))
{
  swift_unknownObjectRelease();
  a1(*(void *)(v2 + 40));
  swift_release();
  swift_release();
  a2(*(void *)(v2 + 88));
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10089B338(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE298 + dword_1010BE298);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_10089B400()
{
  return sub_10089B42C((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_10089B42C(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 24));
  swift_release();
  swift_release();
  a2(*(void *)(v2 + 72));

  return swift_deallocObject();
}

uint64_t sub_10089B498@<X0>(uint64_t *a1@<X8>)
{
  return sub_100894D5C((uint64_t *)(v1 + 16), (uint64_t)&type metadata for Actions.CreateStation.Context, (uint64_t)&protocol witness table for Actions.CreateStation.Context, a1);
}

uint64_t sub_10089B4D4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10089B534()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100081D08;
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_1010BE2A8 + dword_1010BE2A8);
  return v3(v0 + 16);
}

uint64_t sub_10089B5D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_10089B650()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10089B6B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BE2B8 + dword_1010BE2B8);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

uint64_t sub_10089B784()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10089B7D0()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BDF68) - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v26 + 47) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v0 + 40)) {
    sub_1000760E4(v0 + 16);
  }
  sub_1000760E4(v0 + 56);
  uint64_t v8 = v0 + v2;
  uint64_t v9 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    if (*(void *)(v8 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    uint64_t v11 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v10 + *(int *)(v11 + 24);
      uint64_t v12 = type metadata accessor for URL();
      uint64_t v22 = *(void *)(v12 - 8);
      uint64_t v23 = v12;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v22 + 48))(v24, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = type metadata accessor for PlaylistContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v0 + v5, 1, v13))
  {
    uint64_t v14 = type metadata accessor for Playlist.Entry();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v0 + v5, v14);
    unint64_t v15 = v0 + v5 + *(int *)(v13 + 20);
    uint64_t v16 = type metadata accessor for Playlist();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  swift_release();
  sub_1000760E4(v0 + v6);
  sub_1000760E4(v0 + v7);
  uint64_t v17 = v0 + v25;
  if (*(void *)(v0 + v25 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy();
    int v18 = *(unsigned __int8 *)(v17 + 48);
    if (v18 != 255) {
      sub_1000E0DB0(*(id *)(v17 + 8), *(void *)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), v18);
    }
    if (*(void *)(v17 + 56)) {
      swift_release();
    }
  }
  unint64_t v19 = (((((v27 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v0 + v26 + 24)) {
    sub_1000760E4(v0 + v26);
  }

  swift_bridgeObjectRelease();
  unint64_t v20 = *(void *)(v0 + v19 + 8);
  if (v20 >> 60 != 15) {
    sub_10007A5C4(*(void *)(v0 + v19), v20);
  }
  sub_1000760E4(v0 + ((v19 + 23) & 0xFFFFFFFFFFFFFFF8));

  return swift_deallocObject();
}

uint64_t sub_10089BCAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10089BCFC()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BDF68) - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 79) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_100886098(v0 + 16, v0 + 56, v0 + v2, v0 + v5, *(void *)(v0 + v6), v0 + v7, v0 + v8, v0 + v9, v0 + v10, *(void **)(v0 + v11), *(void *)(v0 + v12), *(void *)(v0 + v13), *(void *)(v0 + v13 + 8), *(void *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), (void *)(v0 + ((((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10089BE90@<X0>(uint64_t a1@<X8>)
{
  return sub_10089BEE0(&qword_1010BE358, &qword_1010BE620, (uint64_t (*)(void))&type metadata accessor for Album, a1);
}

uint64_t sub_10089BEB8@<X0>(uint64_t a1@<X8>)
{
  return sub_10089BEE0(&qword_1010BE610, &qword_1010BE618, (uint64_t (*)(void))&type metadata accessor for Artist, a1);
}

uint64_t sub_10089BEE0@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  sub_100063814(a1);
  sub_1008A4B94(a2, a1);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (v15[4] == v15[0])
  {
    uint64_t v8 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a4, 1, 1, v8);
  }
  else
  {
    unint64_t v10 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v12 = v11;
    uint64_t v13 = a3(0);
    uint64_t v14 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a4, v12, v13);
    v10(v15, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a4, 0, 1, v13);
  }
}

uint64_t sub_10089C064@<X0>(uint64_t a1@<X8>)
{
  return sub_10089BEE0(&qword_1010BE600, &qword_1010BE608, (uint64_t (*)(void))&type metadata accessor for MusicMovie, a1);
}

uint64_t sub_10089C08C@<X0>(uint64_t a1@<X8>)
{
  return sub_10089BEE0(&qword_1010BE5F0, &qword_1010BE5F8, (uint64_t (*)(void))&type metadata accessor for MusicVideo, a1);
}

uint64_t sub_10089C0B4@<X0>(uint64_t a1@<X8>)
{
  return sub_10089BEE0(&qword_1010BE5E0, &qword_1010BE5E8, (uint64_t (*)(void))&type metadata accessor for Playlist, a1);
}

uint64_t sub_10089C0DC@<X0>(uint64_t a1@<X8>)
{
  return sub_10089BEE0(&qword_1010BE5D0, &qword_1010BE5D8, (uint64_t (*)(void))&type metadata accessor for Song, a1);
}

uint64_t sub_10089C104@<X0>(uint64_t a1@<X8>)
{
  return sub_10089BEE0(&qword_1010BE5B0, &qword_1010BE5B8, (uint64_t (*)(void))&type metadata accessor for TVEpisode, a1);
}

uint64_t sub_10089C12C@<X0>(uint64_t a1@<X8>)
{
  return sub_10089BEE0(&qword_1010BE5A0, &qword_1010BE5A8, (uint64_t (*)(void))&type metadata accessor for TVSeason, a1);
}

uint64_t sub_10089C154@<X0>(uint64_t a1@<X8>)
{
  return sub_10089BEE0(&qword_1010BE590, &qword_1010BE598, (uint64_t (*)(void))&type metadata accessor for TVShow, a1);
}

uint64_t sub_10089C17C@<X0>(uint64_t a1@<X8>)
{
  return sub_10089BEE0(&qword_1010BE580, &qword_1010BE588, (uint64_t (*)(void))&type metadata accessor for UploadedAudio, a1);
}

uint64_t sub_10089C1A4@<X0>(uint64_t a1@<X8>)
{
  return sub_10089BEE0(&qword_1010BE570, &qword_1010BE578, (uint64_t (*)(void))&type metadata accessor for UploadedVideo, a1);
}

uint64_t sub_10089C1CC@<X0>(uint64_t a1@<X8>)
{
  return sub_10089BEE0(&qword_1010BE5C0, &qword_1010BE5C8, (uint64_t (*)(void))&type metadata accessor for Station, a1);
}

double Actions.ShowSongCredits.Context.init<A, B>(item:applicationCapabilities:navigationPusher:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>)
{
  uint64_t v40 = a7;
  uint64_t v41 = a8;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v34 = a2;
  uint64_t v38 = a9;
  uint64_t v12 = *(void *)(a5 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(a1);
  uint64_t v39 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v34 - v15;
  __n128 v18 = __chkstk_darwin(v17);
  uint64_t v35 = (uint64_t)&v34 - v19;
  unint64_t v20 = *(void (**)(__n128))(v12 + 16);
  v20(v18);
  ((void (*)(char *, char *, uint64_t))v20)(v16, a1, a5);
  uint64_t v21 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = a5;
  *((void *)v22 + 3) = a6;
  uint64_t v23 = v41;
  *((void *)v22 + 4) = v40;
  *((void *)v22 + 5) = v23;
  *((void *)v22 + 6) = v34;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v24(&v22[(v21 + 56) & ~v21], v16, a5);
  v24(v39, a1, a5);
  uint64_t v25 = (v21 + 48) & ~v21;
  uint64_t v26 = *(void *)(a6 - 8);
  unint64_t v27 = (v25 + v13 + *(unsigned __int8 *)(v26 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = (char *)swift_allocObject();
  *((void *)v28 + 2) = a5;
  *((void *)v28 + 3) = a6;
  uint64_t v30 = v40;
  uint64_t v29 = v41;
  *((void *)v28 + 4) = v40;
  *((void *)v28 + 5) = v29;
  v24(&v28[v25], v39, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(&v28[v27], v36, a6);
  Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)(v35, (uint64_t)sub_1008A0AA0, (uint64_t)v22, (uint64_t)&unk_1010BE300, (uint64_t)v28, v37, a5, v30, v42);
  long long v31 = v42[1];
  uint64_t v32 = v38;
  *uint64_t v38 = v42[0];
  v32[1] = v31;
  double result = *(double *)&v43;
  v32[2] = v43;
  return result;
}

uint64_t static Actions.ShowSongCredits.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A302C(a1, 4, (uint64_t)sub_1008A4BF8, (uint64_t)&unk_1010BE308, (uint64_t)&unk_1010BE310, a2);
}

double Actions.GoToAlbum.Context.init<A, B>(item:navigationPusher:metricsReportingContext:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v36 = a7;
  uint64_t v42 = a6;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v40 = a8;
  uint64_t v12 = *(void *)(a4 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(a1);
  uint64_t v41 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v35 - v15;
  __n128 v18 = __chkstk_darwin(v17);
  uint64_t v37 = (uint64_t)&v35 - v19;
  unint64_t v20 = *(void (**)(__n128))(v12 + 16);
  v20(v18);
  ((void (*)(char *, char *, uint64_t))v20)(v16, a1, a4);
  unint64_t v21 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v22 = v21 + v13;
  uint64_t v23 = (char *)swift_allocObject();
  *((void *)v23 + 2) = a4;
  *((void *)v23 + 3) = a5;
  *((void *)v23 + 4) = v42;
  *((void *)v23 + 5) = a7;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v24(&v23[v21], v16, a4);
  v24(v41, a1, a4);
  uint64_t v25 = *(void *)(a5 - 8);
  unint64_t v26 = (v22 + *(unsigned __int8 *)(v25 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v27 = (char *)swift_allocObject();
  *((void *)v27 + 2) = a4;
  *((void *)v27 + 3) = a5;
  uint64_t v28 = v41;
  uint64_t v29 = v42;
  uint64_t v30 = v36;
  *((void *)v27 + 4) = v42;
  *((void *)v27 + 5) = v30;
  v24(&v27[v21], v28, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(&v27[v26], v38, a5);
  Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)(v37, 0, 0, (uint64_t)sub_1008A1BE0, (uint64_t)v23, (uint64_t)&unk_1010BE320, (uint64_t)v27, v39, v43, a4, v29);
  long long v31 = v43[1];
  uint64_t v32 = v40;
  _OWORD *v40 = v43[0];
  v32[1] = v31;
  double result = *(double *)&v44;
  long long v34 = v45;
  v32[2] = v44;
  v32[3] = v34;
  return result;
}

double static Actions.GoToAlbum.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = sub_10089F358(a1, 14, (uint64_t)sub_1008A4BE4, (uint64_t)&unk_1010BE328, (uint64_t)&unk_1010BE330, a2).n128_u64[0];
  return result;
}

uint64_t sub_10089C80C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A2478(a1, 14, (uint64_t)sub_1008A4BE4, (uint64_t)&unk_1010BE328, (uint64_t)&unk_1010BE330, a2);
}

uint64_t Actions.GoToAlbum.Context.init<A>(item:subtitle:canGoToAlbum:goToAlbum:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = *(void *)(a10 - 8);
  unint64_t v18 = (v16 + *(void *)(v15 + 64) + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a10;
  *(void *)(v19 + 24) = a11;
  sub_10003CABC(a8, v19 + v16, &qword_1010BCFB8);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v19 + v18, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_1010BE340;
  a9[7] = v19;
  return result;
}

uint64_t sub_10089C9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  sub_100063814(&qword_1010BCBE0);
  v4[16] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v4[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return _swift_task_switch(sub_10089CB08, 0, 0);
}

uint64_t sub_10089CB08()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  sub_10006CAB8(*(void *)(v0 + 96), v3, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 136), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 112);
    sub_100706008(*(void *)(v0 + 136), *(void *)(v0 + 160));
    *(void *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 176) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    sub_100063814(&qword_1010BD000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251B0;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    *(void *)(inited + 64) = 0;
    *(unsigned char *)(inited + 72) = 3;
    *(void *)(v0 + 184) = sub_100872094(inited);
    *(void *)(v0 + 192) = v12;
    *(void *)(v0 + 200) = v13;
    *(_WORD *)(v0 + 216) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 208) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_10089CD38, v16, v15);
  }
}

uint64_t sub_10089CD38()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v6 = *(uint64_t **)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  sub_1008724B8(v5, v4, 5, 42, v7, v3, v2, v1, v8, v6);
  sub_1004CF644(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_1000637B8(v7, &qword_1010BCBE0);
  return _swift_task_switch(sub_1008A4C04, 0, 0);
}

unint64_t sub_10089CE34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010BD108);
  __chkstk_darwin(v4 - 8);
  uint64_t v56 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MusicVideo();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  __chkstk_darwin(v6);
  uint64_t v51 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814(&qword_1010BD110);
  __chkstk_darwin(v8 - 8);
  uint64_t v58 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for Song();
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v52 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100063814(&qword_1010BD100);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a2 - 8);
  __chkstk_darwin(v15);
  uint64_t v53 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v51 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v51 - v21;
  uint64_t v23 = type metadata accessor for Track();
  uint64_t v24 = *(void *)(v23 - 8);
  __n128 v25 = __chkstk_darwin(v23);
  unint64_t v27 = (char *)&v51 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16);
  uint64_t v60 = a1;
  v28(v22, a1, a2, v25);
  char v29 = swift_dynamicCast();
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  if (v29)
  {
    v30(v13, 0, 1, v23);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v27, v13, v23);
    Track.albumTitle.getter();
    uint64_t v32 = v31;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
    swift_bridgeObjectRelease();
    if (v32) {
      return 0;
    }
  }
  else
  {
    v30(v13, 1, 1, v23);
    sub_1000637B8((uint64_t)v13, &qword_1010BD100);
  }
  uint64_t v33 = v60;
  ((void (*)(char *, uint64_t, uint64_t))v28)(v19, v60, a2);
  uint64_t v34 = (uint64_t)v58;
  uint64_t v35 = v59;
  char v36 = swift_dynamicCast();
  uint64_t v37 = v57;
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56);
  if ((v36 & 1) == 0)
  {
    v38(v34, 1, 1, v35);
    sub_1000637B8(v34, &qword_1010BD110);
    goto LABEL_9;
  }
  v38(v34, 0, 1, v35);
  uint64_t v39 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v52, v34, v35);
  Song.albumTitle.getter();
  uint64_t v41 = v40;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v35);
  swift_bridgeObjectRelease();
  if (v41) {
    return 0;
  }
LABEL_9:
  ((void (*)(char *, uint64_t, uint64_t))v28)(v53, v33, a2);
  uint64_t v43 = v55;
  uint64_t v42 = (uint64_t)v56;
  char v44 = swift_dynamicCast();
  uint64_t v45 = v54;
  uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56);
  if (v44)
  {
    v46(v42, 0, 1, v43);
    uint64_t v47 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v51, v42, v43);
    MusicVideo.albumTitle.getter();
    uint64_t v49 = v48;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v43);
    swift_bridgeObjectRelease();
    if (v49) {
      return 0;
    }
  }
  else
  {
    v46(v42, 1, 1, v43);
    sub_1000637B8(v42, &qword_1010BD108);
  }
  return 0xD000000000000010;
}

uint64_t sub_10089D458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  sub_100063814(&qword_1010BD108);
  v6[7] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for MusicVideo();
  v6[8] = v8;
  v6[9] = *(void *)(v8 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = type metadata accessor for NavigationItem();
  v6[12] = swift_task_alloc();
  sub_100063814(&qword_1010BD110);
  v6[13] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Song();
  v6[14] = v9;
  v6[15] = *(void *)(v9 - 8);
  v6[16] = swift_task_alloc();
  sub_100063814(&qword_1010BD100);
  v6[17] = swift_task_alloc();
  v6[18] = *(void *)(a3 - 8);
  v6[19] = swift_task_alloc();
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Track();
  v6[22] = v10;
  v6[23] = *(void *)(v10 - 8);
  v6[24] = swift_task_alloc();
  return _swift_task_switch(sub_10089D708, 0, 0);
}

uint64_t sub_10089D708()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[18] + 16);
  v2(v0[21], v0[2], v0[4]);
  char v3 = swift_dynamicCast();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v3)
  {
    uint64_t v6 = v0[23];
    uint64_t v5 = v0[24];
    uint64_t v7 = v0[22];
    uint64_t v8 = v0[17];
    uint64_t v9 = v0[12];
    uint64_t v47 = v0[6];
    v4(v8, 0, 1, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v8, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, v5, v7);
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 + 8) + **(int **)(v47 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[25] = v10;
    *uint64_t v10 = v0;
    uint64_t v11 = sub_10089DD04;
LABEL_7:
    v10[1] = v11;
    uint64_t v40 = v0[12];
    uint64_t v41 = v0[5];
    uint64_t v42 = v0[6];
    return v46(v40, v41, v42);
  }
  uint64_t v12 = v0[20];
  uint64_t v13 = v0[17];
  uint64_t v14 = v0[15];
  uint64_t v15 = v0[4];
  uint64_t v16 = v0[2];
  v4(v13, 1, 1, v0[22]);
  sub_1000637B8(v13, &qword_1010BD100);
  v2(v12, v16, v15);
  char v17 = swift_dynamicCast();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v17)
  {
    uint64_t v19 = v0[22];
    uint64_t v20 = v0[23];
    uint64_t v22 = v0[15];
    uint64_t v21 = v0[16];
    uint64_t v23 = v0[13];
    uint64_t v24 = v0[14];
    uint64_t v25 = v0[12];
    uint64_t v48 = v0[6];
    v18(v23, 0, 1, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v21, v23, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v25, v21, v24);
    (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v25, enum case for Track.song(_:), v19);
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 + 8) + **(int **)(v48 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[26] = v10;
    *uint64_t v10 = v0;
    uint64_t v11 = sub_10089DE30;
    goto LABEL_7;
  }
  uint64_t v26 = v0[19];
  uint64_t v27 = v0[13];
  uint64_t v28 = v0[9];
  uint64_t v29 = v0[4];
  uint64_t v30 = v0[2];
  v18(v27, 1, 1, v0[14]);
  sub_1000637B8(v27, &qword_1010BD110);
  v2(v26, v30, v29);
  char v31 = swift_dynamicCast();
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
  if (v31)
  {
    uint64_t v33 = v0[22];
    uint64_t v34 = v0[23];
    uint64_t v35 = v0[12];
    uint64_t v37 = v0[9];
    uint64_t v36 = v0[10];
    uint64_t v39 = v0[7];
    uint64_t v38 = v0[8];
    uint64_t v49 = v0[6];
    v32(v39, 0, 1, v38);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v36, v39, v38);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v35, v36, v38);
    (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v35, enum case for Track.musicVideo(_:), v33);
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 + 8) + **(int **)(v49 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[27] = v10;
    *uint64_t v10 = v0;
    uint64_t v11 = sub_10089DF5C;
    goto LABEL_7;
  }
  uint64_t v44 = v0[7];
  v32(v44, 1, 1, v0[8]);
  sub_1000637B8(v44, &qword_1010BD108);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = (uint64_t (*)(void))v0[1];
  return v45();
}

uint64_t sub_10089DD04()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  sub_1008A4B34(v1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
  return _swift_task_switch(sub_1008A4BFC, 0, 0);
}

uint64_t sub_10089DE30()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  sub_1008A4B34(v1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
  return _swift_task_switch(sub_1008A4C00, 0, 0);
}

uint64_t sub_10089DF5C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  sub_1008A4B34(v1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
  return _swift_task_switch(sub_1008A4BE8, 0, 0);
}

uint64_t Actions.GoToAlbum.Context.menuItemTitle.getter()
{
  return sub_1008A2BB8();
}

uint64_t (*Actions.GoToAlbum.Context.menuItemImage.getter())()
{
  return sub_10087E670;
}

id sub_10089E0DC()
{
  return sub_1008A3838();
}

uint64_t sub_10089E0FC()
{
  return sub_1008A2E08();
}

uint64_t Song.supportsContainerNavigation(itemState:)(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010BE348);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = (char *)&v10 - v4;
  if (a1)
  {
    sub_10089E268((uint64_t (*)(void))&type metadata accessor for Song, (uint64_t)&protocol witness table for Song, (void (*)(void))&Song.catalogID.getter, (uint64_t)&v10 - v4);
    uint64_t v6 = type metadata accessor for MusicPropertySource();
    uint64_t v7 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) != 1) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for MusicPropertySource();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
  }
  uint64_t v7 = 0;
LABEL_6:
  sub_1000637B8((uint64_t)v5, &qword_1010BE348);
  return v7;
}

uint64_t sub_10089E268@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - v9;
  if (dispatch thunk of MusicLibrary.ItemState.isAdded.getter())
  {
    uint64_t v11 = enum case for MusicPropertySource.library(_:);
    uint64_t v12 = type metadata accessor for MusicPropertySource();
    uint64_t v25 = *(void *)(v12 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 104))(a4, v11, v12);
    uint64_t v13 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56);
    return v13(a4, 0, 1, v12);
  }
  else
  {
    dispatch thunk of MusicLibrary.ItemState.item.getter();
    uint64_t v29 = v7;
    uint64_t v30 = a2;
    uint64_t v15 = sub_100068018(v28);
    (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 32))(v15, v10, v7);
    sub_100068990(v28, v29);
    a3();
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    if (!v17) {
      goto LABEL_10;
    }
    if (qword_1010BBCC8 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    int v18 = v26;
    uint64_t v19 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v18 == 1)
    {
      uint64_t v20 = enum case for MusicPropertySource.catalog(_:);
      uint64_t v21 = type metadata accessor for MusicPropertySource();
      uint64_t v22 = *(void *)(v21 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 104))(a4, v20, v21);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(a4, 0, 1, v21);
      return sub_1000760E4((uint64_t)v28);
    }
    else
    {
LABEL_10:
      sub_1000760E4((uint64_t)v28);
      uint64_t v23 = type metadata accessor for MusicPropertySource();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a4, 1, 1, v23);
    }
  }
}

uint64_t MusicLibrary.ItemState.containerLoadingSource.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __chkstk_darwin(a1);
  if (dispatch thunk of MusicLibrary.ItemState.isAdded.getter())
  {
    uint64_t v3 = enum case for MusicPropertySource.library(_:);
    uint64_t v4 = type metadata accessor for MusicPropertySource();
    uint64_t v17 = *(void *)(v4 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 104))(a2, v3, v4);
    uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56);
    return v5(a2, 0, 1, v4);
  }
  else
  {
    dispatch thunk of MusicLibrary.ItemState.item.getter();
    sub_100063814(&qword_1010BD978);
    if (swift_dynamicCast())
    {
      sub_100068978(v18, (uint64_t)v21);
      uint64_t v7 = v22;
      uint64_t v8 = v23;
      sub_100068990(v21, v22);
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      if (v10)
      {
        if (qword_1010BBCC8 != -1) {
          swift_once();
        }
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.getter();
        swift_release();
        swift_release();
        int v11 = BYTE1(v18[0]);
        uint64_t v12 = v20;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if (v11 == 1)
        {
          uint64_t v13 = enum case for MusicPropertySource.catalog(_:);
          uint64_t v14 = type metadata accessor for MusicPropertySource();
          uint64_t v15 = *(void *)(v14 - 8);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 104))(a2, v13, v14);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
          return sub_1000760E4((uint64_t)v21);
        }
      }
      sub_1000760E4((uint64_t)v21);
    }
    else
    {
      uint64_t v19 = 0;
      memset(v18, 0, sizeof(v18));
      sub_1000637B8((uint64_t)v18, (uint64_t *)&unk_1010C36E0);
    }
    uint64_t v16 = type metadata accessor for MusicPropertySource();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

BOOL MusicVideo.supportsContainerNavigation(itemState:)(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010BE350);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100063814(&qword_1010BD0C8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Album();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  int v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100063814(&qword_1010BE348);
  __chkstk_darwin(v12 - 8);
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v15 = (char *)&v24 - v14;
  if (!a1)
  {
    uint64_t v19 = type metadata accessor for MusicPropertySource();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v15, 1, 1, v19);
    goto LABEL_6;
  }
  sub_10089E268((uint64_t (*)(void))&type metadata accessor for MusicVideo, (uint64_t)&protocol witness table for MusicVideo, (void (*)(void))&MusicVideo.catalogID.getter, (uint64_t)&v24 - v14);
  uint64_t v16 = type metadata accessor for MusicPropertySource();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
LABEL_6:
    uint64_t v20 = &qword_1010BE348;
    uint64_t v21 = (uint64_t)v15;
LABEL_9:
    sub_1000637B8(v21, v20);
    return 0;
  }
  sub_1000637B8((uint64_t)v15, &qword_1010BE348);
  MusicVideo.albums.getter();
  uint64_t v17 = sub_100063814(&qword_1010BE358);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v4, 1, v17) == 1)
  {
    sub_1000637B8((uint64_t)v4, &qword_1010BE350);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_8:
    uint64_t v20 = &qword_1010BD0C8;
    uint64_t v21 = (uint64_t)v7;
    goto LABEL_9;
  }
  sub_10089BEE0(&qword_1010BE358, &qword_1010BE620, (uint64_t (*)(void))&type metadata accessor for Album, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    goto LABEL_8;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  char v23 = Album.isSingleMusicVideo.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v23 == 2) {
    return 0;
  }
  return (v23 & 1) == 0;
}

uint64_t Track.supportsContainerNavigation(itemState:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Track();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_1010BE348);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10089E268((uint64_t (*)(void))&type metadata accessor for Track, (uint64_t)&protocol witness table for Track, (void (*)(void))&Track.catalogID.getter, (uint64_t)v8);
  uint64_t v9 = type metadata accessor for MusicPropertySource();
  int v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  sub_1000637B8((uint64_t)v8, &qword_1010BE348);
  if (v10 != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
    (*(void (**)(char *, uint64_t))(v3 + 88))(v5, v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return 0;
}

BOOL Playlist.supportsContainerNavigation(itemState:)()
{
  uint64_t v0 = sub_100063814(&qword_1010BE348);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10089E268((uint64_t (*)(void))&type metadata accessor for Playlist, (uint64_t)&protocol witness table for Playlist, (void (*)(void))&Playlist.catalogID.getter, (uint64_t)v2);
  uint64_t v3 = type metadata accessor for MusicPropertySource();
  BOOL v4 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) != 1;
  sub_1000637B8((uint64_t)v2, &qword_1010BE348);
  return v4;
}

uint64_t Playlist.Entry.supportsContainerNavigation(itemState:)()
{
  uint64_t v0 = sub_100063814(&qword_1010BE360);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v14 - v4;
  uint64_t v6 = sub_100063814(&qword_1010BE348);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10089E268((uint64_t (*)(void))&type metadata accessor for Playlist.Entry, (uint64_t)&protocol witness table for Playlist.Entry, (void (*)(void))&Playlist.Entry.catalogID.getter, (uint64_t)v8);
  uint64_t v9 = type metadata accessor for MusicPropertySource();
  int v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  sub_1000637B8((uint64_t)v8, &qword_1010BE348);
  if (v10 != 1)
  {
    Playlist.Entry.item.getter();
    uint64_t v11 = type metadata accessor for Playlist.Entry.Item();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11) != 1)
    {
      sub_10006CAB8((uint64_t)v5, (uint64_t)v2, &qword_1010BE360);
      (*(void (**)(char *, uint64_t))(v12 + 88))(v2, v11);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v2, v11);
    }
    sub_1000637B8((uint64_t)v5, &qword_1010BE360);
  }
  return 0;
}

double static Actions.GoToPlaylist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = sub_10089F358(a1, 12, (uint64_t)sub_1008A4BE4, (uint64_t)&unk_1010BE368, (uint64_t)&unk_1010BE370, a2).n128_u64[0];
  return result;
}

__n128 sub_10089F358@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  long long v15 = *(_OWORD *)(a1 + 32);
  long long v16 = *(_OWORD *)(a1 + 16);
  __n128 v14 = *(__n128 *)(a1 + 48);
  sub_10003CABC(a1, (uint64_t)v17, (uint64_t *)&unk_1010C28C0);
  sub_1000D230C((uint64_t)v17);
  swift_retain();
  swift_retain();
  swift_retain();
  *(void *)a6 = v11;
  *(void *)(a6 + 8) = v12;
  *(_OWORD *)(a6 + 16) = v16;
  *(_OWORD *)(a6 + 32) = v15;
  __n128 result = v14;
  *(__n128 *)(a6 + 48) = v14;
  *(unsigned char *)(a6 + 64) = a2;
  *(void *)(a6 + 72) = a3;
  *(void *)(a6 + 80) = 0;
  *(void *)(a6 + 88) = 0x4014000000000000;
  *(void *)(a6 + 96) = a4;
  *(void *)(a6 + 104) = 0;
  *(void *)(a6 + 112) = a5;
  *(void *)(a6 + 120) = 0;
  return result;
}

uint64_t sub_10089F438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A2478(a1, 12, (uint64_t)sub_1008A4BE4, (uint64_t)&unk_1010BE368, (uint64_t)&unk_1010BE370, a2);
}

uint64_t Actions.GoToPlaylist.Context.init<A>(item:subtitle:canGoToPlaylist:goToPlaylist:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = *(void *)(a10 - 8);
  unint64_t v18 = (v16 + *(void *)(v15 + 64) + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a10;
  *(void *)(v19 + 24) = a11;
  sub_10003CABC(a8, v19 + v16, &qword_1010BCFB8);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v19 + v18, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_1010BE380;
  a9[7] = v19;
  return result;
}

uint64_t sub_10089F610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  sub_100063814(&qword_1010BCBE0);
  v4[16] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v4[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return _swift_task_switch(sub_10089F734, 0, 0);
}

uint64_t sub_10089F734()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  sub_10006CAB8(*(void *)(v0 + 96), v3, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 136), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 112);
    sub_100706008(*(void *)(v0 + 136), *(void *)(v0 + 160));
    *(void *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 176) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    sub_100063814(&qword_1010BD000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251B0;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100E35750;
    *(unsigned char *)(inited + 72) = 3;
    *(void *)(v0 + 184) = sub_100872094(inited);
    *(void *)(v0 + 192) = v12;
    *(void *)(v0 + 200) = v13;
    *(_WORD *)(v0 + 216) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 208) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_10089F96C, v16, v15);
  }
}

uint64_t sub_10089F96C()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v6 = *(uint64_t **)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  sub_1008724B8(v5, v4, 5, 45, v7, v3, v2, v1, v8, v6);
  sub_1004CF644(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_1000637B8(v7, &qword_1010BCBE0);
  return _swift_task_switch(sub_1008A4C04, 0, 0);
}

uint64_t Actions.GoToPlaylist.Context.menuItemTitle.getter()
{
  return sub_1008A2BB8();
}

uint64_t (*Actions.GoToPlaylist.Context.menuItemImage.getter())()
{
  return sub_10087E61C;
}

id sub_10089FAC0()
{
  return sub_1008A3838();
}

uint64_t sub_10089FAE4()
{
  return sub_1008A2E08();
}

uint64_t sub_10089FB08(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t (*)(void))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100081D08;
  return v5();
}

uint64_t sub_10089FBD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A30F8(a1, 4, (uint64_t)sub_1008A4BF8, (uint64_t)&unk_1010BE308, (uint64_t)&unk_1010BE310, a2);
}

uint64_t Actions.ShowSongCredits.Context.init<A>(item:canShowSongCredits:showSongCredits:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v15 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = *(void *)(a7 - 8);
  unint64_t v18 = (v16 + *(void *)(v15 + 64) + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a7;
  *(void *)(v19 + 24) = a8;
  sub_10003CABC(a6, v19 + v16, &qword_1010BCFB8);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v19 + v18, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = &unk_1010BE390;
  a9[5] = v19;
  return result;
}

uint64_t sub_10089FD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  sub_100063814(&qword_1010BCBE0);
  v4[13] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(sub_10089FEC0, 0, 0);
}

uint64_t sub_10089FEC0()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  sub_10006CAB8(*(void *)(v0 + 72), v3, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 112), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    sub_100706008(*(void *)(v0 + 112), *(void *)(v0 + 136));
    *(void *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 152) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    sub_100063814(&qword_1010BD000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 160) = sub_100872094(inited);
    *(void *)(v0 + 168) = v12;
    *(void *)(v0 + 176) = v13;
    *(_WORD *)(v0 + 192) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 184) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008A00E4, v16, v15);
  }
}

uint64_t sub_1008A00E4()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(uint64_t **)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_1008724B8(v5, v4, 5, 44, v7, v3, v2, v1, v8, v6);
  sub_1004CF644(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_1000637B8(v7, &qword_1010BCBE0);
  return _swift_task_switch(sub_1008A4C08, 0, 0);
}

unint64_t sub_1008A01E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v66 = a2;
  uint64_t v4 = sub_100063814(&qword_1010BD108);
  __chkstk_darwin(v4 - 8);
  uint64_t v57 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for MusicVideo();
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v52 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010BD110);
  __chkstk_darwin(v7 - 8);
  uint64_t v60 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for Song();
  uint64_t v65 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v53 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100063814(&qword_1010BD100);
  __chkstk_darwin(v10 - 8);
  uint64_t v63 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = a3;
  uint64_t v64 = *(void *)(a3 - 8);
  __chkstk_darwin(v12);
  uint64_t v54 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v59 = (char *)&v52 - v15;
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)&v52 - v17;
  uint64_t v19 = type metadata accessor for Track();
  uint64_t v62 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v58 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v21 = v69;
  uint64_t v22 = v70;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if ((v21 & 1) == 0) {
    return 0xD00000000000003CLL;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  int v24 = v68;
  uint64_t v25 = v70;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v24 != 1) {
    return 0xD000000000000016;
  }
  unsigned __int8 v26 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
  uint64_t v28 = v66;
  uint64_t v27 = v67;
  v26(v18, v66, v67);
  uint64_t v29 = (uint64_t)v63;
  char v30 = swift_dynamicCast();
  uint64_t v31 = v62;
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56);
  if (v30)
  {
    v32(v29, 0, 1, v19);
    uint64_t v33 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v58, v29, v19);
    Track.catalogID.getter();
    uint64_t v35 = v34;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v19);
    swift_bridgeObjectRelease();
    uint64_t v36 = v65;
    if (v35) {
      return 0;
    }
  }
  else
  {
    v32(v29, 1, 1, v19);
    sub_1000637B8(v29, &qword_1010BD100);
    uint64_t v36 = v65;
  }
  v26(v59, v28, v27);
  uint64_t v37 = (uint64_t)v60;
  uint64_t v38 = v61;
  char v39 = swift_dynamicCast();
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
  if ((v39 & 1) == 0)
  {
    v40(v37, 1, 1, v38);
    sub_1000637B8(v37, &qword_1010BD110);
    goto LABEL_13;
  }
  v40(v37, 0, 1, v38);
  uint64_t v41 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v53, v37, v38);
  Song.catalogID.getter();
  uint64_t v43 = v42;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v41, v38);
  swift_bridgeObjectRelease();
  if (v43) {
    return 0;
  }
LABEL_13:
  v26(v54, v28, v27);
  uint64_t v44 = (uint64_t)v57;
  uint64_t v45 = v56;
  char v46 = swift_dynamicCast();
  uint64_t v47 = v55;
  uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
  if (v46)
  {
    v48(v44, 0, 1, v45);
    uint64_t v49 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v52, v44, v45);
    MusicVideo.catalogID.getter();
    uint64_t v51 = v50;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v45);
    swift_bridgeObjectRelease();
    if (v51) {
      return 0;
    }
  }
  else
  {
    v48(v44, 1, 1, v45);
    sub_1000637B8(v44, &qword_1010BD108);
  }
  return 0xD000000000000010;
}

uint64_t sub_1008A09DC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

unint64_t sub_1008A0AA0()
{
  return sub_1008A01E0(*(void *)(v0 + 48), v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)), *(void *)(v0 + 16));
}

uint64_t sub_1008A0AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  sub_100063814(&qword_1010BD108);
  v6[7] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for MusicVideo();
  v6[8] = v8;
  v6[9] = *(void *)(v8 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = type metadata accessor for NavigationItem();
  v6[12] = swift_task_alloc();
  sub_100063814(&qword_1010BD110);
  v6[13] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Song();
  v6[14] = v9;
  v6[15] = *(void *)(v9 - 8);
  v6[16] = swift_task_alloc();
  sub_100063814(&qword_1010BD100);
  v6[17] = swift_task_alloc();
  v6[18] = *(void *)(a3 - 8);
  v6[19] = swift_task_alloc();
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Track();
  v6[22] = v10;
  v6[23] = *(void *)(v10 - 8);
  v6[24] = swift_task_alloc();
  return _swift_task_switch(sub_1008A0D98, 0, 0);
}

uint64_t sub_1008A0D98()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[18] + 16);
  v2(v0[21], v0[2], v0[4]);
  char v3 = swift_dynamicCast();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v3)
  {
    uint64_t v6 = v0[23];
    uint64_t v5 = v0[24];
    uint64_t v7 = v0[22];
    uint64_t v8 = v0[17];
    uint64_t v9 = v0[12];
    uint64_t v47 = v0[6];
    v4(v8, 0, 1, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v8, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, v5, v7);
    swift_storeEnumTagMultiPayload();
    char v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 + 8) + **(int **)(v47 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[25] = v10;
    *uint64_t v10 = v0;
    uint64_t v11 = sub_1008A1394;
LABEL_7:
    v10[1] = v11;
    uint64_t v40 = v0[12];
    uint64_t v41 = v0[5];
    uint64_t v42 = v0[6];
    return v46(v40, v41, v42);
  }
  uint64_t v12 = v0[20];
  uint64_t v13 = v0[17];
  uint64_t v14 = v0[15];
  uint64_t v15 = v0[4];
  uint64_t v16 = v0[2];
  v4(v13, 1, 1, v0[22]);
  sub_1000637B8(v13, &qword_1010BD100);
  v2(v12, v16, v15);
  char v17 = swift_dynamicCast();
  unint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v17)
  {
    uint64_t v19 = v0[22];
    uint64_t v20 = v0[23];
    uint64_t v22 = v0[15];
    uint64_t v21 = v0[16];
    uint64_t v23 = v0[13];
    uint64_t v24 = v0[14];
    uint64_t v25 = v0[12];
    uint64_t v48 = v0[6];
    v18(v23, 0, 1, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v21, v23, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v25, v21, v24);
    (*(void (**)(uint64_t, void, uint64_t))(v20 + 104))(v25, enum case for Track.song(_:), v19);
    swift_storeEnumTagMultiPayload();
    char v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 + 8) + **(int **)(v48 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[26] = v10;
    *uint64_t v10 = v0;
    uint64_t v11 = sub_1008A15BC;
    goto LABEL_7;
  }
  uint64_t v26 = v0[19];
  uint64_t v27 = v0[13];
  uint64_t v28 = v0[9];
  uint64_t v29 = v0[4];
  uint64_t v30 = v0[2];
  v18(v27, 1, 1, v0[14]);
  sub_1000637B8(v27, &qword_1010BD110);
  v2(v26, v30, v29);
  char v31 = swift_dynamicCast();
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
  if (v31)
  {
    uint64_t v33 = v0[22];
    uint64_t v34 = v0[23];
    uint64_t v35 = v0[12];
    uint64_t v37 = v0[9];
    uint64_t v36 = v0[10];
    uint64_t v39 = v0[7];
    uint64_t v38 = v0[8];
    uint64_t v49 = v0[6];
    v32(v39, 0, 1, v38);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v36, v39, v38);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v35, v36, v38);
    (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v35, enum case for Track.musicVideo(_:), v33);
    swift_storeEnumTagMultiPayload();
    char v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 + 8) + **(int **)(v49 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[27] = v10;
    *uint64_t v10 = v0;
    uint64_t v11 = sub_1008A17E4;
    goto LABEL_7;
  }
  uint64_t v44 = v0[7];
  v32(v44, 1, 1, v0[8]);
  sub_1000637B8(v44, &qword_1010BD108);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = (uint64_t (*)(void))v0[1];
  return v45();
}

uint64_t sub_1008A1394()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  sub_1008A4B34(v1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
  return _swift_task_switch(sub_1008A14C0, 0, 0);
}

uint64_t sub_1008A14C0()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008A15BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  sub_1008A4B34(v1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
  return _swift_task_switch(sub_1008A16E8, 0, 0);
}

uint64_t sub_1008A16E8()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008A17E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  sub_1008A4B34(v1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
  return _swift_task_switch(sub_1008A1910, 0, 0);
}

uint64_t sub_1008A1910()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008A1A10()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v7 = (v6 + 48) & ~v6;
  uint64_t v8 = (uint64_t)v0 + v7;
  uint64_t v9 = (uint64_t)v0
     + ((v7 + *(void *)(*(void *)(v2 - 8) + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_100081D08;
  return sub_1008A0AE8(v8, v9, v2, v3, v4, v5);
}

uint64_t sub_1008A1B58()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

unint64_t sub_1008A1BE0()
{
  return sub_10089CE34(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)), *(void *)(v0 + 16));
}

uint64_t sub_1008A1C28()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 - 8);
  unint64_t v5 = (v3 + *(void *)(v2 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v2 + 8))(v0 + v3);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v1);

  return swift_deallocObject();
}

uint64_t sub_1008A1D28()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v7 = (v6 + 48) & ~v6;
  uint64_t v8 = (uint64_t)v0 + v7;
  uint64_t v9 = (uint64_t)v0
     + ((v7 + *(void *)(*(void *)(v2 - 8) + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_100081D08;
  return sub_10089D458(v8, v9, v2, v3, v4, v5);
}

uint64_t sub_1008A1E74()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_100081D08;
  return sub_10089C9E4(v6, v7, v2, v3);
}

uint64_t Actions.ShowSongCredits.Context.menuItemTitle.getter()
{
  return sub_1008A2BB8();
}

uint64_t (*Actions.ShowSongCredits.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x7269632E6F666E69;
  *(void *)(v0 + 24) = 0xEB00000000656C63;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x7269632E6F666E69;
  *(void *)(v1 + 24) = 0xEB00000000656C63;
  return sub_100842598;
}

uint64_t sub_1008A2078()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*sub_1008A225C())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x7269632E6F666E69;
  *(void *)(v0 + 24) = 0xEB00000000656C63;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x7269632E6F666E69;
  *(void *)(v1 + 24) = 0xEB00000000656C63;
  return sub_100842D2C;
}

double static Actions.GoToArtist.action(context:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = sub_10089F358(a1, 13, (uint64_t)sub_1008A2344, (uint64_t)&unk_1010BE398, (uint64_t)&unk_1010BE3A0, a2).n128_u64[0];
  return result;
}

uint64_t sub_1008A2344(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_1008A236C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t (*)(void))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1000154F4;
  return v5();
}

uint64_t sub_1008A2434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A2478(a1, 13, (uint64_t)sub_1008A2344, (uint64_t)&unk_1010BE398, (uint64_t)&unk_1010BE3A0, a2);
}

uint64_t sub_1008A2478@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 56);
  *(void *)a6 = *(void *)a1;
  *(void *)(a6 + 8) = v6;
  *(void *)(a6 + 16) = v7;
  *(_OWORD *)(a6 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a6 + 40) = *(_OWORD *)(a1 + 40);
  *(void *)(a6 + 56) = v8;
  *(unsigned char *)(a6 + 64) = a2;
  *(void *)(a6 + 72) = a3;
  *(void *)(a6 + 80) = 0;
  *(void *)(a6 + 88) = 0x4014000000000000;
  *(void *)(a6 + 96) = a4;
  *(void *)(a6 + 104) = 0;
  *(void *)(a6 + 112) = a5;
  *(void *)(a6 + 120) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t Actions.GoToArtist.Context.init<A>(item:subtitle:canGoToArtist:goToArtist:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = *(void *)(a10 - 8);
  unint64_t v18 = (v16 + *(void *)(v15 + 64) + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a10;
  *(void *)(v19 + 24) = a11;
  sub_10003CABC(a8, v19 + v16, &qword_1010BCFB8);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v19 + v18, a1, a10);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = a6;
  a9[5] = a7;
  a9[6] = &unk_1010BE3B0;
  a9[7] = v19;
  return result;
}

uint64_t sub_1008A26AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  sub_100063814(&qword_1010BCBE0);
  v4[16] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v4[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return _swift_task_switch(sub_1008A27D0, 0, 0);
}

uint64_t sub_1008A27D0()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  sub_10006CAB8(*(void *)(v0 + 96), v3, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 136), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 112);
    sub_100706008(*(void *)(v0 + 136), *(void *)(v0 + 160));
    *(void *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 176) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    sub_100063814(&qword_1010BD000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251B0;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(_OWORD *)(inited + 56) = xmmword_100E26B60;
    *(unsigned char *)(inited + 72) = 3;
    *(void *)(v0 + 184) = sub_100872094(inited);
    *(void *)(v0 + 192) = v12;
    *(void *)(v0 + 200) = v13;
    *(_WORD *)(v0 + 216) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 208) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008A2A08, v16, v15);
  }
}

uint64_t sub_1008A2A08()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v6 = *(uint64_t **)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  sub_1008724B8(v5, v4, 5, 43, v7, v3, v2, v1, v8, v6);
  sub_1004CF644(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_1000637B8(v7, &qword_1010BCBE0);
  return _swift_task_switch(sub_1008A2B04, 0, 0);
}

uint64_t sub_1008A2B04()
{
  sub_1008A4B34(*(void *)(v0 + 160), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Actions.GoToArtist.Context.menuItemTitle.getter()
{
  return sub_1008A2BB8();
}

uint64_t sub_1008A2BB8()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*Actions.GoToArtist.Context.menuItemImage.getter())()
{
  return sub_10087E5D4;
}

id sub_1008A2DCC()
{
  return sub_1008A3838();
}

uint64_t sub_1008A2DE8()
{
  return sub_1008A2E08();
}

uint64_t sub_1008A2E08()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t static Actions.ViewFullLyrics.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A302C(a1, 54, (uint64_t)sub_100842DF8, (uint64_t)&unk_1010BE3B8, (uint64_t)&unk_1010BE3C0, a2);
}

uint64_t sub_1008A302C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 40);
  *(void *)a6 = *(void *)a1;
  *(_OWORD *)(a6 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a6 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a6 + 40) = v6;
  *(unsigned char *)(a6 + 48) = a2;
  *(void *)(a6 + 56) = a3;
  *(void *)(a6 + 64) = 0;
  *(void *)(a6 + 72) = 0x4014000000000000;
  *(void *)(a6 + 80) = a4;
  *(void *)(a6 + 88) = 0;
  *(void *)(a6 + 96) = a5;
  *(void *)(a6 + 104) = 0;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_1008A30B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A30F8(a1, 54, (uint64_t)sub_100842DF8, (uint64_t)&unk_1010BE3B8, (uint64_t)&unk_1010BE3C0, a2);
}

uint64_t sub_1008A30F8@<X0>(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 40);
  *(void *)a6 = *(void *)a1;
  *(_OWORD *)(a6 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a6 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a6 + 40) = v6;
  *(unsigned char *)(a6 + 48) = a2;
  *(void *)(a6 + 56) = a3;
  *(void *)(a6 + 64) = 0;
  *(void *)(a6 + 72) = 0x4014000000000000;
  *(void *)(a6 + 80) = a4;
  *(void *)(a6 + 88) = 0;
  *(void *)(a6 + 96) = a5;
  *(void *)(a6 + 104) = 0;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t Actions.ViewFullLyrics.Context.init<A>(item:canViewFullLyrics:viewFullLyrics:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v15 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = *(void *)(a7 - 8);
  unint64_t v18 = (v16 + *(void *)(v15 + 64) + *(unsigned __int8 *)(v17 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a7;
  *(void *)(v19 + 24) = a8;
  sub_10003CABC(a6, v19 + v16, &qword_1010BCFB8);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v19 + v18, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = a4;
  a9[3] = a5;
  a9[4] = &unk_1010BE3D0;
  a9[5] = v19;
  return result;
}

uint64_t sub_1008A3308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  sub_100063814(&qword_1010BCBE0);
  v4[13] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(sub_1008A342C, 0, 0);
}

uint64_t sub_1008A342C()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  sub_10006CAB8(*(void *)(v0 + 72), v3, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 112), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    sub_100706008(*(void *)(v0 + 112), *(void *)(v0 + 136));
    *(void *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 152) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    sub_100063814(&qword_1010BD000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 160) = sub_100872094(inited);
    *(void *)(v0 + 168) = v12;
    *(void *)(v0 + 176) = v13;
    *(_WORD *)(v0 + 192) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 184) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008A3650, v16, v15);
  }
}

uint64_t sub_1008A3650()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(uint64_t **)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_1008724B8(v5, v4, 5, 39, v7, v3, v2, v1, v8, v6);
  sub_1004CF644(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_1000637B8(v7, &qword_1010BCBE0);
  return _swift_task_switch(sub_1008A374C, 0, 0);
}

uint64_t sub_1008A374C()
{
  sub_1008A4B34(*(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t (*Actions.ViewFullLyrics.Context.menuItemImage.getter())()
{
  return sub_10087E648;
}

id sub_1008A3818()
{
  return sub_1008A3838();
}

id sub_1008A3838()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self _systemImageNamed:v0];

  return v1;
}

uint64_t sub_1008A3898()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_100081D08;
  return sub_10089F610(v6, v7, v2, v3);
}

uint64_t sub_1008A39DC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_100081D08;
  return sub_10089FD9C(v6, v7, v2, v3);
}

uint64_t sub_1008A3B1C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008A3B58()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_1000154F4;
  return sub_1008A26AC(v6, v7, v2, v3);
}

uint64_t sub_1008A3C9C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v3;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v0 + v3, 1, v8))
  {
    uint64_t v16 = v4;
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v9 + *(int *)(v10 + 24);
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v11 - 8);
      uint64_t v14 = v11;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(v15, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v16;
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v4 + v6) & ~v6), v1);

  return swift_deallocObject();
}

uint64_t sub_1008A3F5C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_100081D08;
  return sub_1008A3308(v6, v7, v2, v3);
}

uint64_t _s9MusicCore7ActionsO14ViewFullLyricsO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t *initializeBufferWithCopyOfBuffer for NavigationItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2) {
      uint64_t v6 = type metadata accessor for Playlist();
    }
    else {
      uint64_t v6 = type metadata accessor for Track();
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for NavigationItem(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = type metadata accessor for Playlist();
  }
  else
  {
    if (result > 1) {
      return result;
    }
    uint64_t v3 = type metadata accessor for Track();
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

uint64_t initializeWithCopy for NavigationItem(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 2) {
    uint64_t v4 = type metadata accessor for Playlist();
  }
  else {
    uint64_t v4 = type metadata accessor for Track();
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for NavigationItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1008A4B34(a1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
    if (swift_getEnumCaseMultiPayload() == 2) {
      uint64_t v4 = type metadata accessor for Playlist();
    }
    else {
      uint64_t v4 = type metadata accessor for Track();
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for NavigationItem()
{
  uint64_t result = qword_1010BE538;
  if (!qword_1010BE538) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t initializeWithTake for NavigationItem(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 2) {
    uint64_t v4 = type metadata accessor for Playlist();
  }
  else {
    uint64_t v4 = type metadata accessor for Track();
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for NavigationItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1008A4B34(a1, (uint64_t (*)(void))type metadata accessor for NavigationItem);
    if (swift_getEnumCaseMultiPayload() == 2) {
      uint64_t v4 = type metadata accessor for Playlist();
    }
    else {
      uint64_t v4 = type metadata accessor for Track();
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1008A47C8()
{
  uint64_t result = type metadata accessor for Track();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Playlist();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.GoToAlbum()
{
  return &type metadata for Actions.GoToAlbum;
}

ValueMetadata *type metadata accessor for Actions.GoToAlbum.Context()
{
  return &type metadata for Actions.GoToAlbum.Context;
}

ValueMetadata *type metadata accessor for Actions.GoToPlaylist()
{
  return &type metadata for Actions.GoToPlaylist;
}

ValueMetadata *type metadata accessor for Actions.GoToPlaylist.Context()
{
  return &type metadata for Actions.GoToPlaylist.Context;
}

ValueMetadata *type metadata accessor for Actions.ShowSongCredits()
{
  return &type metadata for Actions.ShowSongCredits;
}

ValueMetadata *type metadata accessor for Actions.ShowSongCredits.Context()
{
  return &type metadata for Actions.ShowSongCredits.Context;
}

ValueMetadata *type metadata accessor for Actions.GoToArtist()
{
  return &type metadata for Actions.GoToArtist;
}

uint64_t _s9GoToAlbumO7ContextVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t _s9GoToAlbumO7ContextVwcp_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *_s9GoToAlbumO7ContextVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s9GoToAlbumO7ContextVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for Actions.GoToArtist.Context()
{
  return &type metadata for Actions.GoToArtist.Context;
}

ValueMetadata *type metadata accessor for Actions.ViewFullLyrics()
{
  return &type metadata for Actions.ViewFullLyrics;
}

ValueMetadata *type metadata accessor for Actions.ViewFullLyrics.Context()
{
  return &type metadata for Actions.ViewFullLyrics.Context;
}

uint64_t sub_1008A4B34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1008A4B94(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Actions.OpenInClassical.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 40);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = v2;
  *(unsigned char *)(a2 + 48) = 9;
  *(void *)(a2 + 56) = sub_100842DF8;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0x4014000000000000;
  *(void *)(a2 + 80) = &unk_1010BE628;
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = &unk_1010BE630;
  *(void *)(a2 + 104) = 0;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t Actions.OpenInClassical.Context.init(album:presentationSource:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t (**a4)()@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v7 = type metadata accessor for Album();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unsigned __int8 v68 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = v10;
  __chkstk_darwin(v9);
  uint64_t v62 = (char *)&v58 - v11;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v59 = *(uint64_t **)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100063814(&qword_1010BE638);
  uint64_t v64 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v66 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v65 = (uint64_t)&v58 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v58 - v21;
  uint64_t v63 = v23;
  __chkstk_darwin(v20);
  uint64_t v25 = (uint64_t *)((char *)&v58 - v24);
  uint64_t v71 = a1;
  uint64_t v26 = Album.catalogID.getter();
  uint64_t v69 = a3;
  uint64_t v70 = a4;
  if (v27)
  {
    static ClassicalBridge.generatePrestoURL(type:storeAdamID:)(1, v26, v27, (uint64_t)v14);
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t *, char *, uint64_t))v59[4])(v25, v14, v12);
    uint64_t v30 = v62;
  }
  else
  {
    sub_1008A526C();
    uint64_t v28 = swift_allocError();
    *(void *)uint64_t v29 = 2;
    *(void *)(v29 + 8) = 0;
    *(void *)(v29 + 16) = 0;
    *(void *)(v29 + 24) = 0;
    *(unsigned char *)(v29 + 32) = 2;
    swift_willThrow();
    uint64_t v30 = v62;
    *uint64_t v25 = v28;
  }
  uint64_t v61 = v22;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v30, v71, v7);
  sub_10006CAB8((uint64_t)v25, (uint64_t)v22, &qword_1010BE638);
  uint64_t v31 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v32 = (v31 + 16) & ~v31;
  uint64_t v33 = v7;
  uint64_t v59 = v25;
  uint64_t v60 = v7;
  uint64_t v34 = v63;
  uint64_t v35 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v36 = v8;
  uint64_t v37 = (v72 + v35 + v32) & ~v35;
  uint64_t v62 = (char *)(v35 | 7 | v31);
  uint64_t v38 = swift_allocObject();
  uint64_t v39 = v38 + v32;
  uint64_t v40 = v38;
  uint64_t v64 = v38;
  uint64_t v41 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
  v41(v39, v30, v33);
  sub_10003CABC((uint64_t)v61, v40 + v37, &qword_1010BE638);
  uint64_t v42 = (uint64_t)v59;
  uint64_t v43 = v65;
  sub_10006CAB8((uint64_t)v59, v65, &qword_1010BE638);
  uint64_t v44 = (v35 + 16) & ~v35;
  uint64_t v45 = swift_allocObject();
  uint64_t v61 = (char *)v45;
  sub_10003CABC(v43, v45 + v44, &qword_1010BE638);
  sub_1000E08E4(v67, v45 + ((v34 + v44 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v46 = v66;
  sub_10003CABC(v42, v66, &qword_1010BE638);
  uint64_t v47 = v68;
  uint64_t v48 = v60;
  v41((uint64_t)v68, v71, v60);
  uint64_t v49 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v50 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  unint64_t v51 = (*(void *)(v49 + 64) + v35 + v50) & ~v35;
  unint64_t v52 = (v34 + v31 + v51) & ~v31;
  uint64_t v53 = swift_allocObject();
  sub_10003CABC(v69, v53 + v50, &qword_1010BCFB8);
  sub_10003CABC(v46, v53 + v51, &qword_1010BE638);
  uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(v53 + v52, v47, v48);
  uint64_t v55 = v70;
  uint64_t v56 = v64;
  *uint64_t v70 = sub_1008A55C8;
  v55[1] = (unint64_t (*)())v56;
  uint64_t v57 = (uint64_t)v61;
  v55[2] = (unint64_t (*)())&unk_1010BE648;
  v55[3] = (unint64_t (*)())v57;
  v55[4] = (unint64_t (*)())&unk_1010BE658;
  v55[5] = (unint64_t (*)())v53;
  return result;
}

unint64_t sub_1008A526C()
{
  unint64_t result = qword_1010C5CF0;
  if (!qword_1010C5CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C5CF0);
  }
  return result;
}

unint64_t sub_1008A52C0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = 0xD000000000000021;
  uint64_t v4 = sub_100063814(&qword_1010BE638);
  __chkstk_darwin(v4);
  uint64_t v6 = (void *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (Album.isClassicalExperienceAvailable.getter())
  {
    sub_10006CAB8(a2, (uint64_t)v6, &qword_1010BE638);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = *v6;
      uint64_t v12 = 0;
      unint64_t v13 = 0xE000000000000000;
      _StringGuts.grow(_:)(43);
      v8._countAndFlagsBits = 0xD000000000000028;
      v8._object = (void *)0x8000000100DC9A40;
      String.append(_:)(v8);
      v11[1] = v7;
      sub_100063814((uint64_t *)&unk_1010C0920);
      _print_unlocked<A, B>(_:_:)();
      v9._countAndFlagsBits = 41;
      v9._object = (void *)0xE100000000000000;
      String.append(_:)(v9);
      swift_errorRelease();
      return v12;
    }
    else
    {
      sub_1000637B8((uint64_t)v6, &qword_1010BE638);
      return 0;
    }
  }
  return v3;
}

uint64_t sub_1008A5438()
{
  uint64_t v1 = type metadata accessor for Album();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(sub_100063814(&qword_1010BE638) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v6, v7);
  }

  return swift_deallocObject();
}

unint64_t sub_1008A55C8()
{
  uint64_t v1 = *(void *)(type metadata accessor for Album() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BE638) - 8);
  uint64_t v5 = v0 + ((v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_1008A52C0(v0 + v2, v5);
}

uint64_t sub_1008A5698(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = sub_100063814(&qword_1010BE638);
  v2[5] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[9] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[10] = v5;
  v2[11] = v4;
  return _swift_task_switch(sub_1008A57C0, v5, v4);
}

uint64_t sub_1008A57C0()
{
  sub_10006CAB8(v0[2], v0[5], &qword_1010BE638);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = v0[5];
    swift_release();
    sub_1000637B8(v1, &qword_1010BE638);
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[7] + 32))(v0[8], v0[5], v0[6]);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    v0[12] = Strong;
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1010C5D00 + dword_1010C5D00);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[13] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1008A5930;
    uint64_t v6 = v0[8];
    return v7(v6, Strong);
  }
}

uint64_t sub_1008A5930()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 96);
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();

  uint64_t v4 = *(void *)(v2 + 88);
  uint64_t v5 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v6 = sub_1008A5B20;
  }
  else {
    uint64_t v6 = sub_1008A5A84;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_1008A5A84()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1008A5B20()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1008A5BBC()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BE638) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    uint64_t v5 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  uint64_t v6 = v0 + v3;
  swift_unknownObjectWeakDestroy();
  int v7 = *(unsigned __int8 *)(v0 + v3 + 48);
  if (v7 != 255) {
    sub_1000E0DB0(*(id *)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), v7);
  }
  if (*(void *)(v6 + 56)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1008A5CF8()
{
  uint64_t v2 = *(void *)(sub_100063814(&qword_1010BE638) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_1000154F4;
  return sub_1008A5698(v4, v5);
}

uint64_t sub_1008A5DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  v3[12] = sub_100063814(&qword_1010BE638);
  v3[13] = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  v3[14] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v3[15] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Actions.MetricsReportingContext();
  v3[16] = v4;
  v3[17] = *(void *)(v4 - 8);
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_1008A5F50, 0, 0);
}

uint64_t sub_1008A5F50()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  sub_10006CAB8(*(void *)(v0 + 72), v3, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 120), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 80);
    sub_100706008(*(void *)(v0 + 120), *(void *)(v0 + 144));
    sub_10006CAB8(v7, v6, &qword_1010BE638);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1000637B8(*(void *)(v0 + 104), &qword_1010BE638);
      uint64_t v8 = type metadata accessor for URL();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = 1;
    }
    else
    {
      uint64_t v12 = *(void *)(v0 + 104);
      uint64_t v11 = *(void *)(v0 + 112);
      uint64_t v8 = type metadata accessor for URL();
      uint64_t v9 = *(void *)(v8 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v11, v12, v8);
      uint64_t v10 = 0;
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v9 + 56))(*(void *)(v0 + 112), v10, 1, v8);
    sub_100063814(&qword_1010BD000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    *(void *)(inited + 32) = sub_100870628();
    *(void *)(inited + 40) = v14;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 152) = sub_100872094(inited);
    *(void *)(v0 + 160) = v15;
    *(void *)(v0 + 168) = v16;
    *(_WORD *)(v0 + 184) = v17;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 176) = static MainActor.shared.getter();
    uint64_t v19 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008A6234, v19, v18);
  }
}

uint64_t sub_1008A6234()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v3 = *(void **)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v4 = *(uint64_t **)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = *(unsigned __int16 *)(v0 + 184);
  swift_release();
  sub_1008724B8(0xD000000000000014, 0x8000000100DBCDE0, 5, 23, v5, v3, v2, v1, v6, v4);
  sub_1004CF644(v3, v2, v1, v6, SBYTE1(v6));
  return _swift_task_switch(sub_1008A631C, 0, 0);
}

uint64_t sub_1008A631C()
{
  uint64_t v1 = v0[18];
  sub_1000637B8(v0[14], &qword_1010BCBE0);
  sub_100842CD0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1008A63C4()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BE638) - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v21 = *(void *)(v4 + 64);
  uint64_t v6 = type metadata accessor for Album();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v0 + v2;
  uint64_t v10 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    unint64_t v19 = v5;
    uint64_t v20 = v6;
    if (*(void *)(v9 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v11 = v9 + *(int *)(v10 + 20);
    uint64_t v12 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v11 + *(int *)(v12 + 24);
      uint64_t v13 = type metadata accessor for URL();
      uint64_t v16 = *(void *)(v13 - 8);
      uint64_t v17 = v13;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(v18, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v5 = v19;
    uint64_t v6 = v20;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_errorRelease();
  }
  else
  {
    uint64_t v14 = type metadata accessor for URL();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v0 + v5, v14);
  }
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + ((v5 + v21 + v8) & ~v8), v6);

  return swift_deallocObject();
}

uint64_t sub_1008A675C()
{
  uint64_t v2 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(sub_100063814(&qword_1010BE638) - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Album() - 8) + 80);
  unint64_t v9 = v6 + v7 + v8;
  uint64_t v10 = v0 + v3;
  uint64_t v11 = v0 + v6;
  uint64_t v12 = v0 + (v9 & ~v8);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v13;
  *uint64_t v13 = v1;
  v13[1] = sub_100081D08;
  return sub_1008A5DF8(v10, v11, v12);
}

uint64_t (*Actions.OpenInClassical.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  strcpy((char *)(v0 + 16), "arrow.up.right");
  *(unsigned char *)(v0 + 31) = -18;
  uint64_t v1 = swift_allocObject();
  strcpy((char *)(v1 + 16), "arrow.up.right");
  *(unsigned char *)(v1 + 31) = -18;
  return sub_100842598;
}

uint64_t (*sub_1008A69A4())()
{
  uint64_t v0 = swift_allocObject();
  strcpy((char *)(v0 + 16), "arrow.up.right");
  *(unsigned char *)(v0 + 31) = -18;
  uint64_t v1 = swift_allocObject();
  strcpy((char *)(v1 + 16), "arrow.up.right");
  *(unsigned char *)(v1 + 31) = -18;
  return sub_100842D2C;
}

uint64_t _s9MusicCore7ActionsO15OpenInClassicalO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_1008A6C2C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for Actions.OpenInClassical()
{
  return &type metadata for Actions.OpenInClassical;
}

ValueMetadata *type metadata accessor for Actions.OpenInClassical.Context()
{
  return &type metadata for Actions.OpenInClassical.Context;
}

id Actions.CreateStation.Context.init<A>(item:library:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v56 = a7;
  uint64_t v57 = a8;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v55 = a4;
  id v62 = a3;
  uint64_t v50 = a2;
  uint64_t v59 = a9;
  uint64_t v58 = a10;
  uint64_t v13 = *(void *)(a11 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v61 = a12;
  uint64_t v15 = __chkstk_darwin(a1);
  unint64_t v51 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v48 = (char *)&v47 - v17;
  __chkstk_darwin(v16);
  unint64_t v19 = (char *)&v47 - v18;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v49 = a1;
  v20((char *)&v47 - v18, a1, a11);
  uint64_t v21 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v60 = v21 | 7;
  uint64_t v22 = (unint64_t (*)())swift_allocObject();
  uint64_t v54 = v22;
  *((void *)v22 + 2) = a11;
  *((void *)v22 + 3) = a12;
  id v23 = v62;
  *((void *)v22 + 4) = v50;
  *((void *)v22 + 5) = v23;
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v50 = v13 + 32;
  v47((char *)v22 + ((v21 + 48) & ~v21), v19, a11);
  uint64_t v24 = v48;
  v20(v48, a1, a11);
  uint64_t v25 = (v21 + 32) & ~v21;
  unint64_t v26 = (v14 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v61;
  *(void *)(v29 + 16) = a11;
  *(void *)(v29 + 24) = v30;
  uint64_t v31 = v29 + v25;
  uint64_t v32 = (void (*)(char *, uint64_t, uint64_t))v47;
  v47((char *)v31, v24, a11);
  *(void *)(v29 + v26) = v62;
  uint64_t v33 = (void *)(v29 + v27);
  uint64_t v34 = v53;
  *uint64_t v33 = v52;
  v33[1] = v34;
  uint64_t v35 = (void *)(v29 + v28);
  uint64_t v36 = v55;
  uint64_t v37 = v57;
  void *v35 = v56;
  v35[1] = v37;
  sub_10003CABC(v36, v29 + ((v28 + 23) & 0xFFFFFFFFFFFFFFF8), &qword_1010BD028);
  uint64_t v38 = v51;
  v32(v51, v49, a11);
  uint64_t v39 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v41 = (*(void *)(v39 + 64) + v21 + v40) & ~v21;
  uint64_t v42 = swift_allocObject();
  uint64_t v43 = v61;
  *(void *)(v42 + 16) = a11;
  *(void *)(v42 + 24) = v43;
  sub_10003CABC(v58, v42 + v40, &qword_1010BCFB8);
  v32((char *)(v42 + v41), (uint64_t)v38, a11);
  id result = v62;
  uint64_t v45 = v59;
  uint64_t v46 = v54;
  *uint64_t v59 = sub_1008A90EC;
  v45[1] = v46;
  long long v45[2] = (unint64_t (*)())&unk_1010BE698;
  v45[3] = (unint64_t (*)())v29;
  v45[4] = (unint64_t (*)())&unk_1010BE6A8;
  v45[5] = (unint64_t (*)())v42;
  return result;
}

uint64_t static Actions.CreateStation.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A302C(a1, 5, (uint64_t)sub_100842DF8, (uint64_t)&unk_1010BE6B0, (uint64_t)&unk_1010BE6B8, a2);
}

uint64_t Actions.Play.Context.init<A>(item:playbackIntent:playbackController:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v84 = a8;
  long long v85 = a9;
  uint64_t v81 = a6;
  uint64_t v82 = a7;
  uint64_t v78 = a4;
  uint64_t v79 = a5;
  uint64_t v77 = a2;
  uint64_t v13 = *(void *)(a10 - 8);
  uint64_t v87 = a11;
  uint64_t v14 = __chkstk_darwin(a1);
  long long v83 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v76 = (char *)&v66 - v17;
  uint64_t v86 = v18;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v66 - v19;
  uint64_t v21 = sub_100063814(&qword_1010BE6C0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  uint64_t v24 = __chkstk_darwin(v21 - 8);
  uint64_t v75 = (uint64_t)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v24);
  unint64_t v27 = (void (*)(uint64_t, char *, uint64_t))((char *)&v66 - v26);
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v66 - v28;
  uint64_t v80 = a3;
  uint64_t v30 = (void *)(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess();
  if (*v30)
  {
    swift_retain();
    Player.state<A>(for:)(a1);
    swift_release();
    MusicItemState.playabilityStatus.getter();
    swift_release();
    uint64_t v31 = type metadata accessor for MusicPlayer.PlayabilityStatus();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v29, 0, 1, v31);
  }
  else
  {
    uint64_t v32 = type metadata accessor for MusicPlayer.PlayabilityStatus();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v29, 1, 1, v32);
  }
  sub_10006CAB8((uint64_t)v29, (uint64_t)v27, &qword_1010BE6C0);
  unsigned __int8 v68 = v27;
  uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  v33(v20, a1, a10);
  uint64_t v34 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v67 = v29;
  uint64_t v66 = v20;
  uint64_t v35 = (v34 + 32) & ~v34;
  uint64_t v36 = *(unsigned __int8 *)(v13 + 80);
  unint64_t v70 = a1;
  uint64_t v71 = v35;
  unint64_t v37 = a1;
  uint64_t v38 = (v23 + v36 + v35) & ~v36;
  uint64_t v39 = v38 + v86;
  uint64_t v40 = v38;
  uint64_t v72 = v38;
  uint64_t v73 = v36;
  uint64_t v69 = v36 | v34 | 7;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = a10;
  uint64_t v42 = v87;
  *(void *)(v41 + 24) = v87;
  uint64_t v43 = v41;
  uint64_t v74 = v41;
  sub_10003CABC((uint64_t)v68, v41 + v35, &qword_1010BE6C0);
  unsigned __int8 v68 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  v68(v43 + v40, v66, a10);
  uint64_t v44 = v75;
  sub_10003CABC((uint64_t)v67, v75, &qword_1010BE6C0);
  uint64_t v45 = v76;
  v33(v76, v37, a10);
  unint64_t v46 = (v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = (v47 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = a10;
  *(void *)(v49 + 24) = v42;
  sub_10003CABC(v44, v49 + v71, &qword_1010BE6C0);
  uint64_t v50 = (void (*)(char *, unint64_t, uint64_t))v68;
  v68(v49 + v72, v45, a10);
  uint64_t v51 = v78;
  *(void *)(v49 + v46) = v77;
  uint64_t v52 = (void *)(v49 + v47);
  uint64_t v53 = v79;
  void *v52 = v51;
  v52[1] = v53;
  uint64_t v54 = (void *)(v49 + v48);
  uint64_t v55 = v82;
  uint64_t v56 = v83;
  *uint64_t v54 = v81;
  v54[1] = v55;
  *(void *)(v49 + ((v48 + 23) & 0xFFFFFFFFFFFFFFF8)) = v80;
  v50(v56, v70, a10);
  uint64_t v57 = (uint64_t (*)(unint64_t, char *, uint64_t))v50;
  uint64_t v58 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  unint64_t v60 = (*(void *)(v58 + 64) + v73 + v59) & ~v73;
  uint64_t v61 = swift_allocObject();
  uint64_t v62 = v87;
  *(void *)(v61 + 16) = a10;
  *(void *)(v61 + 24) = v62;
  sub_10003CABC(v84, v61 + v59, &qword_1010BCFB8);
  uint64_t result = v57(v61 + v60, v56, a10);
  uint64_t v64 = v85;
  uint64_t v65 = v74;
  void *v85 = sub_1008AFC50;
  v64[1] = (unint64_t (*)())v65;
  v64[2] = (unint64_t (*)())&unk_1010BE6D0;
  v64[3] = (unint64_t (*)())v49;
  v64[4] = (unint64_t (*)())&unk_1010BE6E0;
  v64[5] = (unint64_t (*)())v61;
  return result;
}

uint64_t static Actions.Play.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A302C(a1, 20, (uint64_t)sub_1008A4BF8, (uint64_t)&unk_1010BE6E8, (uint64_t)&unk_1010BE6F0, a2);
}

id Actions.Queue.Context.init<A>(item:playbackIntent:location:playbackController:noticePresenting:playActivityFeatureName:playActivityRecommendationData:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v74 = a6;
  uint64_t v75 = a7;
  uint64_t v73 = a5;
  uint64_t v76 = a4;
  id v83 = a2;
  uint64_t v13 = a1;
  uint64_t v15 = *(void *)(a11 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v77 = a10;
  uint64_t v72 = a9;
  uint64_t v17 = __chkstk_darwin(a1);
  uint64_t v81 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v67 - v19;
  uint64_t v71 = v21;
  uint64_t v78 = a8;
  uint64_t v79 = v18;
  id v82 = v22;
  uint64_t v80 = a12;
  if (v21 == (void *)3
    && (uint64_t v23 = (void *)(a3 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player), swift_beginAccess(), *v23))
  {
    uint64_t v24 = v20;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    id v25 = v84;
    if (v84)
    {
      id v26 = [v84 tracklist];

      id v27 = [v26 insertCommand];
      if (v27)
      {
        id v28 = [v27 insertAfterLastSection];
        swift_unknownObjectRelease();
        if (v28)
        {
          id v29 = [v28 section];
          swift_unknownObjectRelease();
          id v30 = [v29 metadataObject];

          if (v30)
          {
            id v31 = [v30 flattenedGenericObject];

            uint64_t v20 = v24;
            if (!v31) {
              goto LABEL_20;
            }
            id v32 = [v31 anyObject];

            if (!v32) {
              goto LABEL_20;
            }
            self;
            uint64_t v33 = swift_dynamicCastObjCClass();
            if (v33)
            {
              uint64_t v34 = (void *)v33;
              id v35 = v32;
              id v36 = [v34 title];
            }
            else
            {
              self;
              uint64_t v61 = swift_dynamicCastObjCClass();
              if (!v61)
              {

                goto LABEL_20;
              }
              uint64_t v62 = (void *)v61;
              id v35 = v32;
              id v36 = [v62 name];
            }
            id v63 = v36;
            if (v63)
            {
              uint64_t v64 = v63;
              uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v68 = v66;
              uint64_t v69 = v65;

LABEL_21:
              uint64_t v13 = v79;
              goto LABEL_13;
            }

LABEL_20:
            uint64_t v68 = 0;
            uint64_t v69 = 0;
            goto LABEL_21;
          }
        }
      }
    }
    uint64_t v68 = 0;
    uint64_t v69 = 0;
    uint64_t v13 = v79;
    uint64_t v20 = v24;
  }
  else
  {
    uint64_t v68 = 0;
    uint64_t v69 = 0;
  }
LABEL_13:
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v20, v13, a11);
  uint64_t v37 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v38 = v20;
  uint64_t v39 = (v37 + 40) & ~v37;
  uint64_t v70 = v16 + 7;
  unint64_t v40 = (v16 + 7 + v39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = (char *)swift_allocObject();
  uint64_t v43 = v80;
  *((void *)v42 + 2) = a11;
  *((void *)v42 + 3) = v43;
  id v44 = v82;
  *((void *)v42 + 4) = v82;
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v45(&v42[v39], v38, a11);
  unint64_t v46 = v71;
  *(void *)&v42[v40] = v71;
  id v47 = v83;
  *(void *)&v42[v41] = v83;
  unint64_t v48 = (void *)swift_allocObject();
  uint64_t v49 = v73;
  v48[2] = v47;
  long long v48[3] = v49;
  uint64_t v50 = v75;
  v48[4] = v74;
  v48[5] = v50;
  v48[6] = v72;
  v48[7] = v44;
  v48[8] = v46;
  sub_10003CABC(v76, (uint64_t)(v48 + 9), &qword_1010BD028);
  v45(v81, (char *)v79, a11);
  uint64_t v51 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v52 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  unint64_t v53 = (*(void *)(v51 + 64) + v37 + v52) & ~v37;
  unint64_t v54 = (v70 + v53) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = swift_allocObject();
  uint64_t v56 = v80;
  *(void *)(v55 + 16) = a11;
  *(void *)(v55 + 24) = v56;
  sub_10003CABC(v77, v55 + v52, &qword_1010BCFB8);
  v45((char *)(v55 + v53), v81, a11);
  *(void *)(v55 + v54) = v46;
  sub_1001820E4(v46);
  sub_1001820E4(v46);
  sub_1001820E4(v46);
  id v57 = v82;
  id result = v83;
  unint64_t v59 = v78;
  uint64_t v60 = v69;
  *uint64_t v78 = v46;
  v59[1] = v60;
  v59[2] = v68;
  v59[3] = sub_1008B0340;
  v59[4] = v42;
  v59[5] = &unk_1010BE700;
  void v59[6] = v48;
  v59[7] = &unk_1010BE710;
  v59[8] = v55;
  return result;
}

__n128 static Actions.Queue.action(context:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1008B0D80(a1, (uint64_t)v7);
  long long v3 = v7[7];
  *(_OWORD *)(a2 + 96) = v7[6];
  *(_OWORD *)(a2 + 112) = v3;
  *(void *)(a2 + 128) = v8;
  long long v4 = v7[3];
  *(_OWORD *)(a2 + 32) = v7[2];
  *(_OWORD *)(a2 + 48) = v4;
  long long v5 = v7[5];
  *(_OWORD *)(a2 + 64) = v7[4];
  *(_OWORD *)(a2 + 80) = v5;
  __n128 result = (__n128)v7[1];
  *(_OWORD *)a2 = v7[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t Actions.Preview.Context.init<A>(item:canPreview:preview:metricsReportingContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a4;
  *(void *)(v15 + 24) = a5;
  uint64_t v16 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = *(void *)(a7 - 8);
  unint64_t v19 = (v17 + *(void *)(v16 + 64) + *(unsigned __int8 *)(v18 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a7;
  *(void *)(v20 + 24) = a8;
  sub_10003CABC(a6, v20 + v17, &qword_1010BCFB8);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))(v20 + v19, a1, a7);
  *a9 = a2;
  a9[1] = a3;
  a9[2] = &unk_1010BD1B0;
  a9[3] = v15;
  a9[4] = &unk_1010BE720;
  a9[5] = v20;
  return result;
}

uint64_t sub_1008A7E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  sub_100063814(&qword_1010BCBE0);
  v4[13] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(sub_1008A7F3C, 0, 0);
}

uint64_t sub_1008A7F3C()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  sub_10006CAB8(*(void *)(v0 + 72), v3, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 112), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    sub_100593CCC(*(void *)(v0 + 112), *(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
    *(void *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 152) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    sub_100063814(&qword_1010BD000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 160) = sub_100872094(inited);
    *(void *)(v0 + 168) = v12;
    *(void *)(v0 + 176) = v13;
    *(_WORD *)(v0 + 192) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 184) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008A8174, v16, v15);
  }
}

uint64_t sub_1008A8174()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(uint64_t **)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_1008724B8(v5, v4, 5, 46, v7, v3, v2, v1, v8, v6);
  sub_1004CF644(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_1000637B8(v7, &qword_1010BCBE0);
  return _swift_task_switch(sub_1008B237C, 0, 0);
}

uint64_t static Actions.Preview.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A302C(a1, 33, (uint64_t)sub_1008A4BF8, (uint64_t)&unk_1010BE728, (uint64_t)&unk_1010BE730, a2);
}

uint64_t sub_1008A82B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A30F8(a1, 33, (uint64_t)sub_1008A4BF8, (uint64_t)&unk_1010BE728, (uint64_t)&unk_1010BE730, a2);
}

uint64_t (*Actions.Preview.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x7269632E79616C70;
  *(void *)(v0 + 24) = 0xEB00000000656C63;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x7269632E79616C70;
  *(void *)(v1 + 24) = 0xEB00000000656C63;
  return sub_100842598;
}

uint64_t (*sub_1008A83A0())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x7269632E79616C70;
  *(void *)(v0 + 24) = 0xEB00000000656C63;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x7269632E79616C70;
  *(void *)(v1 + 24) = 0xEB00000000656C63;
  return sub_100842D2C;
}

uint64_t sub_1008A8444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A30F8(a1, 5, (uint64_t)sub_100842DF8, (uint64_t)&unk_1010BE6B0, (uint64_t)&unk_1010BE6B8, a2);
}

unint64_t sub_1008A8488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v59 = a3;
  uint64_t v6 = type metadata accessor for Artist();
  uint64_t v50 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v54 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  unint64_t v53 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for Song();
  uint64_t v52 = *(void *)(v56 - 8);
  uint64_t v10 = __chkstk_darwin(v56);
  uint64_t v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v51 = (char *)v46 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v46 - v16;
  uint64_t v58 = *(void *)(a4 - 8);
  uint64_t v18 = __chkstk_darwin(v15);
  id v57 = (char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v46 - v20;
  type metadata accessor for MusicLibrary();
  static MusicLibrary.shared.getter();
  char v22 = static MusicLibrary.== infix(_:_:)();
  swift_release();
  if ((v22 & 1) == 0) {
    return 0xD000000000000016;
  }
  uint64_t v23 = (uint64_t *)(a2 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess();
  uint64_t v24 = *v23;
  if (!v24)
  {
    *(void *)&long long v60 = 0;
    *((void *)&v60 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v32._countAndFlagsBits = 0xD000000000000020;
    v32._object = (void *)0x8000000100DC9BF0;
    String.append(_:)(v32);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    return v60;
  }
  id v25 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
  v25(v21, v59, a4);
  swift_retain();
  sub_100063814(&qword_1010BD978);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v62 = 0;
    long long v61 = 0u;
    long long v60 = 0u;
    sub_1000637B8((uint64_t)&v60, (uint64_t *)&unk_1010C36E0);
LABEL_12:
    swift_release();
    return 0xD00000000000001DLL;
  }
  uint64_t v49 = v24;
  sub_100068978(&v60, (uint64_t)&v69);
  uint64_t v26 = v70;
  uint64_t v27 = v71;
  sub_100068990(&v69, v70);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27);
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  if (!v29)
  {
    sub_1000760E4((uint64_t)&v69);
    goto LABEL_12;
  }
  if (qword_1010BBCC8 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  int v30 = BYTE1(v60);
  long long v46[2] = v62;
  v46[3] = v63;
  v46[4] = v64;
  id v47 = v65;
  v46[1] = v67;
  v46[0] = v68;
  uint64_t v48 = *((void *)&v61 + 1);
  switch(v66)
  {
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_16;
    default:
      char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v34 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_1000760E4((uint64_t)&v69);
        return 0xD000000000000015;
      }
LABEL_16:
      char v35 = sub_100921CEC(4u, v48);
      uint64_t v36 = v49;
      if ((v35 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_1000760E4((uint64_t)&v69);
        return 0xD000000000000016;
      }
      if (v30)
      {
        uint64_t v37 = v57;
        v25(v57, v59, a4);
        uint64_t v38 = v56;
        if (swift_dynamicCast())
        {
          uint64_t v39 = v52;
          unint64_t v40 = v51;
          (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v51, v17, v38);
          uint64_t v41 = MPCPlaybackEngine.state<A>(for:)();
          (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v12, v40, v38);
          sub_100063814(&qword_1010BE830);
          swift_allocObject();
          swift_retain();
          sub_1008B15B0((uint64_t)v12, v41, v36);
          swift_release();
          uint64_t v42 = swift_release();
          __chkstk_darwin(v42);
          v46[-2] = v38;
          v46[-1] = &protocol witness table for Song;
          uint64_t KeyPath = swift_getKeyPath();
          __chkstk_darwin(KeyPath);
          v46[-2] = v38;
          v46[-1] = &protocol witness table for Song;
          swift_getKeyPath();
          id v44 = v53;
          static Published.subscript.getter();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v31 = sub_1008A9130();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          (*(void (**)(char *, uint64_t))(v54 + 8))(v44, v55);
          (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v38);
          (*(void (**)(char *, uint64_t))(v58 + 8))(v37, a4);
          sub_1000760E4((uint64_t)&v69);
        }
        else
        {
          int v45 = swift_dynamicCast();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (v45)
          {
            (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v6);
            (*(void (**)(char *, uint64_t))(v58 + 8))(v37, a4);
            sub_1000760E4((uint64_t)&v69);
            uint64_t v31 = 0;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v58 + 8))(v37, a4);
            sub_1000760E4((uint64_t)&v69);
            uint64_t v31 = 0xD000000000000010;
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_1000760E4((uint64_t)&v69);
        uint64_t v31 = 0xD000000000000017;
      }
      break;
  }
  return v31;
}

uint64_t sub_1008A9020()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

unint64_t sub_1008A90EC()
{
  return sub_1008A8488(v0[4], v0[5], (uint64_t)v0+ ((*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80)), v0[2]);
}

uint64_t sub_1008A9130()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    uint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)();
    uint64_t v11 = v17;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else if (v10 == enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    return 0;
  }
  else
  {
    if (qword_1010BBC00 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100050A90(v12, (uint64_t)static Logger.actions);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Unknown playability status", v15, 2u);
      swift_slowDealloc();
    }

    uint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)();
    uint64_t v11 = v17;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return v11;
}

uint64_t sub_1008A9450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[44] = a7;
  v8[45] = a8;
  v8[42] = a5;
  v8[43] = a6;
  v8[40] = a3;
  v8[41] = a4;
  v8[38] = a1;
  v8[39] = a2;
  v8[46] = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v8[47] = swift_task_alloc();
  v8[48] = type metadata accessor for PlaybackIntentDescriptor(0);
  v8[49] = swift_task_alloc();
  v8[50] = swift_task_alloc();
  sub_100063814(&qword_1010BE818);
  v8[51] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MusicPlaybackIntentDescriptor();
  v8[52] = v10;
  v8[53] = *(void *)(v10 - 8);
  v8[54] = swift_task_alloc();
  v8[55] = type metadata accessor for Notice.Variant(0);
  v8[56] = swift_task_alloc();
  type metadata accessor for Notice(0);
  v8[57] = swift_task_alloc();
  sub_100063814(&qword_1010BD110);
  v8[58] = swift_task_alloc();
  v8[59] = *(void *)(a8 - 8);
  v8[60] = swift_task_alloc();
  v8[61] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Song();
  v8[62] = v11;
  v8[63] = *(void *)(v11 - 8);
  v8[64] = swift_task_alloc();
  return _swift_task_switch(sub_1008A970C, 0, 0);
}

uint64_t sub_1008A970C()
{
  uint64_t v1 = *(void *)(v0 + 504);
  uint64_t v2 = *(void (**)(void, void, void))(*(void *)(v0 + 472) + 16);
  v2(*(void *)(v0 + 488), *(void *)(v0 + 304), *(void *)(v0 + 360));
  char v3 = swift_dynamicCast();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if ((v3 & 1) == 0)
  {
    uint64_t v25 = *(void *)(v0 + 464);
    v4(v25, 1, 1, *(void *)(v0 + 496));
    sub_1000637B8(v25, &qword_1010BD110);
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)(v0 + 504);
  uint64_t v5 = *(void *)(v0 + 512);
  uint64_t v7 = *(void *)(v0 + 496);
  uint64_t v8 = *(void *)(v0 + 464);
  uint64_t v9 = *(void *)(v0 + 312);
  v4(v8, 0, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v8, v7);
  uint64_t v10 = (void *)(v9 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess();
  if (!*v10) {
    goto LABEL_15;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = *(void **)(v0 + 280);
  if (!v11) {
    goto LABEL_15;
  }
  MPCPlayerResponse.playState(for:)();
  char v13 = v12;

  if (v13) {
    goto LABEL_15;
  }
  if (!*v10) {
    goto LABEL_15;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  os_log_type_t v14 = *(void **)(v0 + 288);
  if (!v14) {
    goto LABEL_15;
  }
  id v15 = [*(id *)(v0 + 288) tracklist];

  id v16 = [v15 playingItem];
  if (!v16) {
    goto LABEL_15;
  }
  id v17 = [v16 metadataObject];

  if (!v17) {
    goto LABEL_15;
  }
  id v18 = [v17 innermostModelObject];
  *(void *)(v0 + 520) = v18;

  self;
  uint64_t v19 = swift_dynamicCastObjCClass();
  if (!v19)
  {

LABEL_15:
    (*(void (**)(void, void))(*(void *)(v0 + 504) + 8))(*(void *)(v0 + 512), *(void *)(v0 + 496));
    goto LABEL_16;
  }
  id v20 = [self radioPlaybackIntentFromSong:v19];
  *(void *)(v0 + 528) = v20;
  if (v20)
  {
    uint64_t v21 = v20;
    unint64_t v22 = *(void *)(v0 + 344);
    NSString v23 = String._bridgeToObjectiveC()();
    [v21 setPlayActivityFeatureName:v23];

    if (v22 >> 60 == 15) {
      Class isa = 0;
    }
    else {
      Class isa = Data._bridgeToObjectiveC()().super.isa;
    }
    [v21 setPlayActivityRecommendationData:isa];

    uint64_t v50 = (void *)swift_task_alloc();
    *(void *)(v0 + 536) = v50;
    *uint64_t v50 = v0;
    v50[1] = sub_1008A9F44;
    return PlaybackController.insert(_:location:)((uint64_t)v21, 0);
  }
  (*(void (**)(void, void))(*(void *)(v0 + 504) + 8))(*(void *)(v0 + 512), *(void *)(v0 + 496));

LABEL_16:
  v2(*(void *)(v0 + 480), *(void *)(v0 + 304), *(void *)(v0 + 360));
  sub_100063814(&qword_1010BE820);
  if (swift_dynamicCast())
  {
    sub_100068978((long long *)(v0 + 56), v0 + 16);
    sub_1000688E4(v0 + 16, v0 + 96);
    MusicPlaybackIntentDescriptor.init(stationSeed:)();
    uint64_t v29 = *(void *)(v0 + 424);
    uint64_t v28 = *(void *)(v0 + 432);
    uint64_t v31 = *(void *)(v0 + 408);
    uint64_t v30 = *(void *)(v0 + 416);
    uint64_t v33 = *(void *)(v0 + 336);
    unint64_t v32 = *(void *)(v0 + 344);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v30);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v28, v31, v30);
    swift_bridgeObjectRetain();
    char v34 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter();
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v34 setPlayActivityFeatureName:v35];

    sub_100369804(v33, v32);
    uint64_t v36 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter();
    if (v32 >> 60 == 15)
    {
      Class v37 = 0;
    }
    else
    {
      uint64_t v38 = *(void *)(v0 + 336);
      unint64_t v39 = *(void *)(v0 + 344);
      sub_10007AA40(v38, v39);
      Class v37 = Data._bridgeToObjectiveC()().super.isa;
      sub_10007A748(v38, v39);
    }
    uint64_t v40 = *(void *)(v0 + 424);
    uint64_t v41 = *(void *)(v0 + 416);
    uint64_t v42 = *(void *)(v0 + 392);
    uint64_t v51 = *(void *)(v0 + 432);
    uint64_t v52 = *(void *)(v0 + 400);
    uint64_t v43 = *(void *)(v0 + 376);
    id v44 = *(int **)(v0 + 384);
    uint64_t v45 = *(void *)(v0 + 336);
    unint64_t v46 = *(void *)(v0 + 344);
    [v36 setPlayActivityRecommendationData:v37];
    sub_10007A748(v45, v46);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v43, v51, v41);
    swift_storeEnumTagMultiPayload();
    *(void *)(v0 + 168) = 0;
    *(_OWORD *)(v0 + 136) = 0u;
    *(_OWORD *)(v0 + 152) = 0u;
    uint64_t v47 = v42 + v44[7];
    *(void *)(v47 + 32) = 0;
    *(_OWORD *)uint64_t v47 = 0u;
    *(_OWORD *)(v47 + 16) = 0u;
    *(unsigned char *)(v42 + v44[8]) = 0;
    *(unsigned char *)(v42 + v44[9]) = 0;
    sub_1008B147C(v43, v42);
    sub_1008B14E0(v0 + 136, v47);
    *(void *)(v42 + v44[5]) = 2;
    *(void *)(v42 + v44[6]) = 1;
    sub_1000637B8(v0 + 136, &qword_1010C2AB0);
    sub_1008B1548(v43, type metadata accessor for PlaybackIntentDescriptor.IntentType);
    sub_100593CCC(v42, v52, type metadata accessor for PlaybackIntentDescriptor);
    uint64_t v48 = (void *)swift_task_alloc();
    *(void *)(v0 + 584) = v48;
    *uint64_t v48 = v0;
    v48[1] = sub_1008AA458;
    uint64_t v49 = *(void *)(v0 + 400);
    return PlaybackController.add(_:route:)(v49, 0);
  }
  else
  {
    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    sub_1000637B8(v0 + 56, &qword_1010BE828);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
    return v26();
  }
}

uint64_t sub_1008A9F44()
{
  *(void *)(*(void *)v1 + 544) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1008AA9A4;
  }
  else {
    uint64_t v2 = sub_1008AA058;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008AA058()
{
  sub_10006CAB8(v0[44], (uint64_t)(v0 + 22), &qword_1010BD028);
  uint64_t v1 = v0[25];
  v0[69] = v1;
  if (v1)
  {
    uint64_t v3 = v0[56];
    uint64_t v2 = (unint64_t *)v0[57];
    v0[70] = v0[26];
    v0[71] = sub_100068990(v0 + 22, v1);
    swift_storeEnumTagMultiPayload();
    static Notice.variant(_:)(v3, v2);
    sub_1008B1548(v3, type metadata accessor for Notice.Variant);
    type metadata accessor for MainActor();
    v0[72] = static MainActor.shared.getter();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008AA278, v5, v4);
  }
  else
  {
    uint64_t v6 = (void *)v0[66];
    uint64_t v7 = (void *)v0[65];
    (*(void (**)(void, void))(v0[63] + 8))(v0[64], v0[62]);

    sub_1000637B8((uint64_t)(v0 + 22), &qword_1010BD028);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_1008AA278()
{
  uint64_t v1 = v0[70];
  uint64_t v2 = v0[69];
  uint64_t v3 = v0[57];
  swift_release();
  sub_1008DE9C4(v3, 0, v2, v1);
  sub_1008B1548(v3, type metadata accessor for Notice);
  return _swift_task_switch(sub_1008AA328, 0, 0);
}

uint64_t sub_1008AA328()
{
  uint64_t v1 = *(void **)(v0 + 528);
  uint64_t v3 = *(void *)(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 512);
  uint64_t v4 = *(void *)(v0 + 496);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1000760E4(v0 + 176);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1008AA458()
{
  *(void *)(*(void *)v1 + 592) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1008AAC4C;
  }
  else {
    uint64_t v2 = sub_1008AA56C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008AA56C()
{
  sub_10006CAB8(v0[44], (uint64_t)(v0 + 27), &qword_1010BD028);
  uint64_t v1 = v0[30];
  v0[75] = v1;
  if (v1)
  {
    uint64_t v3 = v0[56];
    uint64_t v2 = (unint64_t *)v0[57];
    v0[76] = v0[31];
    v0[77] = sub_100068990(v0 + 27, v1);
    swift_storeEnumTagMultiPayload();
    static Notice.variant(_:)(v3, v2);
    sub_1008B1548(v3, type metadata accessor for Notice.Variant);
    type metadata accessor for MainActor();
    v0[78] = static MainActor.shared.getter();
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008AA7AC, v5, v4);
  }
  else
  {
    uint64_t v7 = v0[53];
    uint64_t v6 = v0[54];
    uint64_t v8 = v0[52];
    sub_1008B1548(v0[50], type metadata accessor for PlaybackIntentDescriptor);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    sub_1000760E4((uint64_t)(v0 + 2));
    sub_1000637B8((uint64_t)(v0 + 27), &qword_1010BD028);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_1008AA7AC()
{
  uint64_t v1 = v0[76];
  uint64_t v2 = v0[75];
  uint64_t v3 = v0[57];
  swift_release();
  sub_1008DE9C4(v3, 0, v2, v1);
  sub_1008B1548(v3, type metadata accessor for Notice);
  return _swift_task_switch(sub_1008AA85C, 0, 0);
}

uint64_t sub_1008AA85C()
{
  uint64_t v2 = v0[53];
  uint64_t v1 = v0[54];
  uint64_t v3 = v0[52];
  sub_1008B1548(v0[50], type metadata accessor for PlaybackIntentDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_1000760E4((uint64_t)(v0 + 2));
  sub_1000760E4((uint64_t)(v0 + 27));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1008AA9A4()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void **)(v0 + 528);
  uint64_t v3 = *(void *)(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 512);
  uint64_t v4 = *(void *)(v0 + 496);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v0 + 544);
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100050A90(v6, (uint64_t)static Logger.actions);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446210;
    *(void *)(v0 + 296) = v5;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v10 = String.init<A>(describing:)();
    *(void *)(v9 + 4) = sub_100075E68(v10, v11, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to Create Station with error=%{public}s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1008AAC4C()
{
  uint64_t v14 = v0;
  uint64_t v2 = v0[53];
  uint64_t v1 = v0[54];
  uint64_t v3 = v0[52];
  sub_1008B1548(v0[50], type metadata accessor for PlaybackIntentDescriptor);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_1000760E4((uint64_t)(v0 + 2));
  uint64_t v4 = v0[74];
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100050A90(v5, (uint64_t)static Logger.actions);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    v0[37] = v4;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v9 = String.init<A>(describing:)();
    *(void *)(v8 + 4) = sub_100075E68(v9, v10, &v13);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to Create Station with error=%{public}s", (uint8_t *)v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1008AAF0C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(v0 + v4 + 8);
  if (v6 >> 60 != 15) {
    sub_10007A5C4(*(void *)(v0 + v4), v6);
  }
  if (*(void *)(v0 + v5 + 24)) {
    sub_1000760E4(v0 + v5);
  }

  return swift_deallocObject();
}

uint64_t sub_1008AAFF8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  unint64_t v4 = (*(void *)(*(void *)(v2 - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0 + v3;
  uint64_t v8 = *(void *)(v0 + v4);
  uint64_t v9 = *(void *)(v0 + v5);
  uint64_t v10 = *(void *)(v0 + v5 + 8);
  uint64_t v11 = *(void *)(v0 + v6);
  uint64_t v12 = *(void *)(v0 + v6 + 8);
  uint64_t v13 = v0 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v14;
  void *v14 = v1;
  v14[1] = sub_1000154F4;
  return sub_1008A9450(v7, v8, v9, v10, v11, v12, v13, v2);
}

uint64_t sub_1008AB15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  sub_100063814(&qword_1010BCBE0);
  v4[16] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v4[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  return _swift_task_switch(sub_1008AB280, 0, 0);
}

uint64_t sub_1008AB280()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 136);
  sub_10006CAB8(*(void *)(v0 + 96), v3, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 136), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 112);
    sub_100593CCC(*(void *)(v0 + 136), *(void *)(v0 + 160), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
    *(void *)(v0 + 168) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 176) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    sub_100063814(&qword_1010BD000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251B0;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(inited + 56) = 0;
    *(void *)(inited + 64) = 0;
    *(unsigned char *)(inited + 72) = 4;
    *(void *)(v0 + 184) = sub_100872094(inited);
    *(void *)(v0 + 192) = v12;
    *(void *)(v0 + 200) = v13;
    *(_WORD *)(v0 + 216) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 208) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008AB4C4, v16, v15);
  }
}

uint64_t sub_1008AB4C4()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v6 = *(uint64_t **)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 216);
  swift_release();
  sub_1008724B8(v5, v4, 5, 10, v7, v3, v2, v1, v8, v6);
  sub_1004CF644(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_1000637B8(v7, &qword_1010BCBE0);
  return _swift_task_switch(sub_1008AB5C0, 0, 0);
}

uint64_t sub_1008AB5C0()
{
  sub_1008B1548(*(void *)(v0 + 160), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008AB658()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_100081D08;
  return sub_1008AB15C(v6, v7, v2, v3);
}

uint64_t Actions.CreateStation.Context.menuItemTitle.getter()
{
  return sub_1008AE448();
}

uint64_t (*Actions.CreateStation.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD00000000000001BLL;
  *(void *)(v0 + 24) = 0x8000000100DC9A70;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD00000000000001BLL;
  *(void *)(v1 + 24) = 0x8000000100DC9A70;
  return sub_100842D2C;
}

uint64_t sub_1008AB85C()
{
  return sub_1008AE6CC();
}

uint64_t (*sub_1008AB880())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD00000000000001BLL;
  *(void *)(v0 + 24) = 0x8000000100DC9A70;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD00000000000001BLL;
  *(void *)(v1 + 24) = 0x8000000100DC9A70;
  return sub_100842D2C;
}

uint64_t sub_1008AB920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A30F8(a1, 20, (uint64_t)sub_1008A4BF8, (uint64_t)&unk_1010BE6E8, (uint64_t)&unk_1010BE6F0, a2);
}

uint64_t sub_1008AB964(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 24))();
}

uint64_t sub_1008AB98C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (uint64_t (*)(void))(*(void *)(a2 + 40) + **(int **)(a2 + 40));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100081D08;
  return v5();
}

uint64_t sub_1008ABA54(uint64_t a1)
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(a1 + 56) + **(int **)(a1 + 56));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100081D08;
  return v4();
}

__n128 sub_1008ABB1C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 48);
  void v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v3;
  uint64_t v12 = *(void *)(a1 + 64);
  long long v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  sub_1008B0D80((uint64_t)v11, (uint64_t)v9);
  long long v5 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v5;
  *(void *)(a2 + 128) = v10;
  long long v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  long long v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  __n128 result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

unint64_t sub_1008ABBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v53 = a4;
  uint64_t v54 = a2;
  uint64_t v6 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v48 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v50 = (char *)&v47 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v49 = (char *)&v47 - v12;
  uint64_t v13 = *(void *)(a3 - 8);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100063814(&qword_1010BE6C0);
  __chkstk_darwin(v16 - 8);
  id v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v47 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v47 - v24;
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v47 - v26;
  sub_10006CAB8(a1, (uint64_t)v18, &qword_1010BE6C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1000637B8((uint64_t)v18, &qword_1010BE6C0);
    unint64_t v55 = 0;
    unint64_t v56 = 0xE000000000000000;
    _StringGuts.grow(_:)(36);
    swift_bridgeObjectRelease();
    unint64_t v55 = 0xD000000000000022;
    unint64_t v56 = 0x8000000100DC9B60;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v54, a3);
    v28._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    return v55;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v27, v18, v19);
  if ((sub_1008AC2C0(v54, a3) & 1) == 0)
  {
    unint64_t v29 = 0xD000000000000010;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    return v29;
  }
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v30(v25, v27, v19);
  int v31 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v25, v19);
  if (v31 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v25, v19);
    uint64_t v33 = v51;
    uint64_t v32 = v52;
    char v34 = v49;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v49, v25, v52);
    NSString v35 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    uint64_t v36 = v50;
    v35(v50, v34, v32);
    int v37 = (*(uint64_t (**)(char *, uint64_t))(v33 + 88))(v36, v32);
    if (v37 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.ageVerificationRequired(_:)
      && v37 != enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:))
    {
      unint64_t v55 = 0;
      unint64_t v56 = 0xE000000000000000;
      _StringGuts.grow(_:)(26);
      swift_bridgeObjectRelease();
      unint64_t v55 = 0xD000000000000018;
      unint64_t v56 = 0x8000000100DC9BB0;
      v35(v48, v34, v32);
      v38._countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v38);
      swift_bridgeObjectRelease();
      unint64_t v29 = v55;
      unint64_t v39 = *(void (**)(char *, uint64_t))(v33 + 8);
      v39(v34, v32);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
      v39(v36, v32);
      return v29;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
LABEL_16:
    (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    return 0;
  }
  if (v31 == enum case for MusicPlayer.PlayabilityStatus.playable(_:)) {
    goto LABEL_16;
  }
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for Logger();
  sub_100050A90(v40, (uint64_t)static Logger.actions);
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v43 = 0;
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Unknown playability status", v43, 2u);
    swift_slowDealloc();
  }

  unint64_t v55 = 0;
  unint64_t v56 = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  unint64_t v55 = 0xD000000000000010;
  unint64_t v56 = 0x8000000100DC9B90;
  v30(v47, v27, v19);
  v44._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v44);
  swift_bridgeObjectRelease();
  unint64_t v29 = v55;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v20 + 8);
  v45(v27, v19);
  v45(v25, v19);
  return v29;
}

uint64_t sub_1008AC2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = type metadata accessor for Station();
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  long long v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Playlist();
  uint64_t v22 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Album();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a2 - 8);
  __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, a2);
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  else if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
  }
  else
  {
    uint64_t v17 = v23;
    if (!swift_dynamicCast())
    {
      uint64_t v18 = 0;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v17);
  }
  uint64_t v18 = 1;
LABEL_8:
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, a2);
  return v18;
}

uint64_t sub_1008AC5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = v12;
  v8[22] = v13;
  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[15] = a3;
  v8[16] = a4;
  v8[13] = a1;
  v8[14] = a2;
  v8[23] = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  v8[24] = swift_task_alloc();
  v8[25] = type metadata accessor for PlaybackIntentDescriptor(0);
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  v8[28] = v9;
  v8[29] = *(void *)(v9 - 8);
  v8[30] = swift_task_alloc();
  v8[31] = sub_100063814(&qword_1010BE808);
  v8[32] = swift_task_alloc();
  sub_100063814(&qword_1010BE6C0);
  v8[33] = swift_task_alloc();
  v8[34] = swift_task_alloc();
  return _swift_task_switch(sub_1008AC788, 0, 0);
}

uint64_t sub_1008AC788()
{
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v1, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(v1, 0, 1, v4);
  uint64_t v7 = v3 + *(int *)(v2 + 48);
  sub_10006CAB8(v6, v3, &qword_1010BE6C0);
  sub_10006CAB8(v1, v7, &qword_1010BE6C0);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v8(v3, 1, v4) == 1)
  {
    uint64_t v9 = *(void *)(v0 + 224);
    sub_1000637B8(*(void *)(v0 + 272), &qword_1010BE6C0);
    if (v8(v7, 1, v9) == 1)
    {
      sub_1000637B8(*(void *)(v0 + 256), &qword_1010BE6C0);
LABEL_11:
      unint64_t v28 = *(void *)(v0 + 152);
      unint64_t v29 = *(void **)(v0 + 120);
      [v29 setShuffleMode:0];
      [v29 setRepeatMode:0];
      NSString v30 = String._bridgeToObjectiveC()();
      [v29 setPlayActivityFeatureName:v30];

      Class isa = 0;
      if (v28 >> 60 != 15) {
        Class isa = Data._bridgeToObjectiveC()().super.isa;
      }
      uint64_t v32 = *(void *)(v0 + 208);
      char v34 = *(void **)(v0 + 192);
      uint64_t v33 = *(int **)(v0 + 200);
      uint64_t v35 = *(void *)(v0 + 176);
      uint64_t v36 = *(void *)(v0 + 168);
      int v37 = *(void **)(v0 + 120);
      uint64_t v43 = *(void *)(v0 + 112);
      uint64_t v44 = *(void *)(v0 + 216);
      [v37 setPlayActivityRecommendationData:isa];

      *char v34 = v37;
      swift_storeEnumTagMultiPayload();
      *(void *)(v0 + 88) = v36;
      *(void *)(v0 + 96) = *(void *)(v35 + 8);
      Swift::String v38 = sub_100068018((uint64_t *)(v0 + 64));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v38, v43, v36);
      uint64_t v39 = v32 + v33[7];
      *(void *)(v39 + 32) = 0;
      *(_OWORD *)uint64_t v39 = 0u;
      *(_OWORD *)(v39 + 16) = 0u;
      *(unsigned char *)(v32 + v33[8]) = 0;
      *(unsigned char *)(v32 + v33[9]) = 0;
      sub_1008B147C((uint64_t)v34, v32);
      id v40 = v37;
      sub_1008B14E0(v0 + 64, v39);
      *(void *)(v32 + v33[5]) = 2;
      *(void *)(v32 + v33[6]) = 0;
      sub_1000637B8(v0 + 64, &qword_1010C2AB0);
      sub_1008B1548((uint64_t)v34, type metadata accessor for PlaybackIntentDescriptor.IntentType);
      sub_100593CCC(v32, v44, type metadata accessor for PlaybackIntentDescriptor);
      uint64_t v41 = (void *)swift_task_alloc();
      *(void *)(v0 + 280) = v41;
      *uint64_t v41 = v0;
      v41[1] = sub_1008ACD14;
      uint64_t v42 = *(void *)(v0 + 216);
      return PlaybackController.add(_:route:)(v42, 0);
    }
    goto LABEL_6;
  }
  uint64_t v10 = *(void *)(v0 + 224);
  sub_10006CAB8(*(void *)(v0 + 256), *(void *)(v0 + 264), &qword_1010BE6C0);
  unsigned int v11 = v8(v7, 1, v10);
  uint64_t v12 = *(void *)(v0 + 264);
  uint64_t v13 = *(void *)(v0 + 272);
  if (v11 == 1)
  {
    uint64_t v14 = *(void *)(v0 + 224);
    uint64_t v15 = *(void *)(v0 + 232);
    sub_1000637B8(*(void *)(v0 + 272), &qword_1010BE6C0);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    sub_1000637B8(*(void *)(v0 + 256), &qword_1010BE808);
    goto LABEL_7;
  }
  uint64_t v22 = *(void *)(v0 + 256);
  uint64_t v24 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 224);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v23, v7, v25);
  sub_1008B225C(&qword_1010BE810, (void (*)(uint64_t))&type metadata accessor for MusicPlayer.PlayabilityStatus);
  char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v27(v23, v25);
  sub_1000637B8(v13, &qword_1010BE6C0);
  v27(v12, v25);
  sub_1000637B8(v22, &qword_1010BE6C0);
  if (v26) {
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v17 = *(void *)(v0 + 168);
  uint64_t v16 = *(void *)(v0 + 176);
  uint64_t v18 = *(void *)(v0 + 112);
  *(void *)(v0 + 40) = v17;
  *(void *)(v0 + 48) = *(void *)(v16 + 8);
  uint64_t v19 = sub_100068018((uint64_t *)(v0 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v19, v18, v17);
  *(unsigned char *)(v0 + 56) = 0;
  _s9MusicCore27SubscriptionUpsellPresenterV7present3foryAC9PlacementO_tFZ_0(v0 + 16);
  sub_1002C4030(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_1008ACD14()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_1008B233C;
  }
  else
  {
    uint64_t v1 = sub_1008ACE2C;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1008ACE2C()
{
  sub_1008B1548(*(void *)(v0 + 216), type metadata accessor for PlaybackIntentDescriptor);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008ACEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  sub_100063814(&qword_1010BCBE0);
  v4[13] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(sub_1008AD020, 0, 0);
}

uint64_t sub_1008AD020()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  sub_10006CAB8(*(void *)(v0 + 72), v3, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 112), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    sub_100593CCC(*(void *)(v0 + 112), *(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
    *(void *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 152) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    sub_100063814(&qword_1010BD000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 160) = sub_100872094(inited);
    *(void *)(v0 + 168) = v12;
    *(void *)(v0 + 176) = v13;
    *(_WORD *)(v0 + 192) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 184) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008AD25C, v16, v15);
  }
}

uint64_t sub_1008AD25C()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(uint64_t **)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_1008724B8(v5, v4, 5, 24, v7, v3, v2, v1, v8, v6);
  sub_1004CF644(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_1000637B8(v7, &qword_1010BCBE0);
  return _swift_task_switch(sub_1008AD358, 0, 0);
}

uint64_t sub_1008AD358()
{
  sub_1008B1548(*(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008AD3EC(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void *)(a1 + OBJC_IVAR____TtC9MusicCore18PlaybackController_player);
  swift_beginAccess();
  if (!*v16)
  {
    NSString v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(39);
    v26._countAndFlagsBits = 0xD000000000000025;
    v26._object = (void *)0x8000000100DC9B00;
    String.append(_:)(v26);
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    return (uint64_t)v30;
  }
  v29[1] = a6;
  v29[2] = a5;
  uint64_t v32 = &type metadata for Player.InsertCommand;
  uint64_t v33 = &protocol witness table for Player.InsertCommand;
  NSString v30 = a4;
  unint64_t v31 = (unint64_t)a3;
  sub_100068990(&v30, (uint64_t)&type metadata for Player.InsertCommand);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v18 = (uint64_t)v33;
  id v19 = a4;
  sub_1001820E4(a3);
  id v20 = v19;
  sub_1001820E4(a3);
  id v21 = v20;
  sub_1001820E4(a3);
  swift_retain();
  uint64_t v22 = sub_1009ED838(DynamicType, v18);
  if (!v22)
  {
    sub_1000760E4((uint64_t)&v30);

    sub_100726930(a3);
    goto LABEL_7;
  }
  uint64_t v23 = (void *)v22;
  BOOL v24 = MPCPlayerResponse.canPerform(_:)((uint64_t)&v30);

  sub_1000760E4((uint64_t)&v30);
  sub_100726930(a3);
  if (!v24)
  {
LABEL_7:
    NSString v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v27._object = (void *)0x8000000100DC9B30;
    v27._countAndFlagsBits = 0xD000000000000020;
    String.append(_:)(v27);
    v29[3] = a3;
    _print_unlocked<A, B>(_:_:)();

    sub_100726930(a3);
    swift_release();
    return (uint64_t)v30;
  }
  Player.state<A>(for:)(a2);
  MusicItemState.playabilityStatus.getter();
  swift_release();
  uint64_t v25 = sub_1008A9130();

  swift_release();
  sub_100726930(a3);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v25;
}

uint64_t sub_1008AD6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[8] = a1;
  v8[9] = a2;
  type metadata accessor for Notice(0);
  v8[16] = swift_task_alloc();
  return _swift_task_switch(sub_1008AD784, 0, 0);
}

uint64_t sub_1008AD784()
{
  unint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void **)(v0 + 64);
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setPlayActivityFeatureName:v3];

  if (v1 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
  }
  [*(id *)(v0 + 64) setPlayActivityRecommendationData:isa];

  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1008AD88C;
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 64);
  return PlaybackController.insert(_:location:)(v7, v6);
}

uint64_t sub_1008AD88C()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1008ADBEC;
  }
  else {
    uint64_t v2 = sub_1008AD9A0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008AD9A0()
{
  sub_10006CAB8(v0[15], (uint64_t)(v0 + 2), &qword_1010BD028);
  uint64_t v1 = v0[5];
  v0[19] = v1;
  if (v1)
  {
    uint64_t v2 = (unint64_t *)v0[16];
    v0[20] = v0[6];
    v0[21] = sub_100068990(v0 + 2, v1);
    Player.InsertCommand.Location.notice.getter(v2);
    type metadata accessor for MainActor();
    v0[22] = static MainActor.shared.getter();
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008ADAD8, v4, v3);
  }
  else
  {
    sub_1000637B8((uint64_t)(v0 + 2), &qword_1010BD028);
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1008ADAD8()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[16];
  swift_release();
  sub_1008DE9C4(v3, 0, v2, v1);
  sub_1008B1548(v3, type metadata accessor for Notice);
  return _swift_task_switch(sub_1008ADB80, 0, 0);
}

uint64_t sub_1008ADB80()
{
  sub_1000760E4(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008ADBEC()
{
  uint64_t v12 = v0;
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)static Logger.actions);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[18];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    v0[7] = v5;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v7 = String.init<A>(describing:)();
    *(void *)(v6 + 4) = sub_100075E68(v7, v8, &v11);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to perform add to queue with error=%{public}s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t Player.InsertCommand.Location.notice.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Notice.Variant(0);
  __chkstk_darwin(v2);
  BOOL v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  static Notice.variant(_:)((uint64_t)v4, a1);
  return sub_1008B1548((uint64_t)v4, type metadata accessor for Notice.Variant);
}

uint64_t sub_1008ADEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  sub_100063814(&qword_1010BCBE0);
  v5[14] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v5[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Actions.MetricsReportingContext();
  v5[16] = v6;
  v5[17] = *(void *)(v6 - 8);
  v5[18] = swift_task_alloc();
  return _swift_task_switch(sub_1008ADFDC, 0, 0);
}

uint64_t sub_1008ADFDC()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 120);
  sub_10006CAB8(*(void *)(v0 + 72), v3, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 120), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    BOOL v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 96);
    unint64_t v7 = *(void *)(v0 + 88);
    sub_100593CCC(*(void *)(v0 + 120), *(void *)(v0 + 144), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
    *(void *)(v0 + 152) = MusicItem.metricsTargetIdentifier.getter(v6);
    *(void *)(v0 + 160) = v8;
    if (v7 >= 4)
    {
      return _assertionFailure(_:_:file:line:flags:)();
    }
    else
    {
      *(unsigned char *)(v0 + 202) = 0x19041A1Bu >> (8 * v7);
      uint64_t v9 = *(void *)(v0 + 112);
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
      sub_100063814(&qword_1010BD000);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100E251D0;
      *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
      *(void *)(inited + 40) = v12;
      *(unsigned char *)(inited + 48) = 0;
      *(void *)(v0 + 168) = sub_100872094(inited);
      *(void *)(v0 + 176) = v13;
      *(void *)(v0 + 184) = v14;
      *(_WORD *)(v0 + 200) = v15;
      swift_setDeallocating();
      swift_arrayDestroy();
      type metadata accessor for MainActor();
      *(void *)(v0 + 192) = static MainActor.shared.getter();
      uint64_t v17 = dispatch thunk of Actor.unownedExecutor.getter();
      return _swift_task_switch(sub_1008AE2A0, v17, v16);
    }
  }
}

uint64_t sub_1008AE2A0()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void **)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v6 = *(uint64_t **)(v0 + 144);
  uint64_t v7 = *(void *)(v0 + 112);
  int v8 = *(unsigned __int8 *)(v0 + 202);
  uint64_t v9 = *(unsigned __int16 *)(v0 + 200);
  swift_release();
  sub_1008724B8(v5, v4, 5, v8, v7, v3, v2, v1, v9, v6);
  sub_1004CF644(v3, v2, v1, v9, SBYTE1(v9));
  swift_bridgeObjectRelease();
  sub_1000637B8(v7, &qword_1010BCBE0);
  return _swift_task_switch(sub_1008AE3A4, 0, 0);
}

uint64_t sub_1008AE3A4()
{
  sub_1008B1548(*(void *)(v0 + 144), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Actions.Play.Context.menuItemTitle.getter()
{
  return sub_1008AE448();
}

uint64_t sub_1008AE448()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*Actions.Play.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 2036427888;
  *(void *)(v0 + 24) = 0xE400000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 2036427888;
  *(void *)(v1 + 24) = 0xE400000000000000;
  return sub_100842D2C;
}

uint64_t sub_1008AE6BC()
{
  return sub_1008AE6CC();
}

uint64_t sub_1008AE6CC()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*sub_1008AE8AC())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 2036427888;
  *(void *)(v0 + 24) = 0xE400000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 2036427888;
  *(void *)(v1 + 24) = 0xE400000000000000;
  return sub_100842D2C;
}

uint64_t Actions.Queue.Context.menuItemTitle.getter()
{
  return sub_1008B0958();
}

uint64_t Actions.Queue.Context.menuItemSubtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*Actions.Queue.Context.menuItemImage.getter())()
{
  sub_100897A8C(v0, (uint64_t)&v6);
  sub_100897A8C((uint64_t)&v6, (uint64_t)&v7);
  if (v7) {
    unint64_t v1 = 0xD000000000000028;
  }
  else {
    unint64_t v1 = 0xD000000000000029;
  }
  if (v7) {
    unint64_t v2 = 0x8000000100DC8070;
  }
  else {
    unint64_t v2 = 0x8000000100DC80C0;
  }
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return sub_100842D2C;
}

uint64_t (*sub_1008AEA68())()
{
  if (*v0) {
    unint64_t v1 = 0xD000000000000028;
  }
  else {
    unint64_t v1 = 0xD000000000000029;
  }
  if (*v0) {
    unint64_t v2 = 0x8000000100DC8070;
  }
  else {
    unint64_t v2 = 0x8000000100DC80C0;
  }
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return sub_100842D2C;
}

uint64_t sub_1008AEB48@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1008AEBC8(void **a1)
{
  unint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_1008AEC40()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1008AEE98();
    return swift_release();
  }
  return result;
}

uint64_t sub_1008AEC98()
{
  uint64_t v0 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - v5;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter();
    __chkstk_darwin(v8);
    uint64_t v9 = type metadata accessor for Song();
    *(&v11 - 2) = v9;
    *(&v11 - 1) = (uint64_t)&protocol witness table for Song;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v11 - 2) = v9;
    *(&v11 - 1) = (uint64_t)&protocol witness table for Song;
    swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
    swift_retain();
    static Published.subscript.setter();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1008AEE98()
{
  uint64_t v80 = type metadata accessor for Song();
  uint64_t v77 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v76 = (char *)&v74 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v74 - v7;
  uint64_t v9 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v81 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v79 = (char *)&v74 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v74 - v16;
  __chkstk_darwin(v15);
  id v19 = (char *)&v74 - v18;
  uint64_t v84 = v0;
  swift_retain();
  dispatch thunk of MusicPlayer.ItemState.playabilityStatus.getter();
  swift_release();
  id v20 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  id v82 = v19;
  uint64_t v78 = v20;
  v20(v17, v19, v9);
  uint64_t v83 = v10;
  uint64_t v21 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v17, v9);
  uint64_t v22 = enum case for MusicPlayer.PlayabilityStatus.unplayable(_:);
  if (v21 == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v83 + 96))(v17, v9);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v17, v2);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v6, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:), v2);
    char v23 = static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)();
    uint64_t v77 = *(void *)(v3 + 8);
    ((void (*)(char *, uint64_t))v77)(v6, v2);
    BOOL v24 = v8;
    uint64_t v75 = v2;
    uint64_t v76 = (char *)(v3 + 8);
    if ((v23 & 1) == 0) {
      goto LABEL_10;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    id v25 = v85;

    if (v25)
    {
      uint64_t v26 = v83;
      Swift::String v27 = v79;
      uint64_t v28 = (*(uint64_t (**)(char *, void, uint64_t))(v83 + 104))(v79, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v9);
      __chkstk_darwin(v28);
      uint64_t v29 = v80;
      *(&v74 - 2) = (char *)v80;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      *(&v74 - 2) = (char *)v29;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      swift_getKeyPath();
      v78(v81, v27, v9);
      swift_retain();
      static Published.subscript.setter();
      unint64_t v31 = *(void (**)(char *, uint64_t))(v26 + 8);
      v31(v27, v9);
      uint64_t v32 = v24;
    }
    else
    {
LABEL_10:
      uint64_t v45 = v78;
      uint64_t v44 = v79;
      uint64_t v46 = ((uint64_t (*)(char *, char *, uint64_t))v78)(v79, v82, v9);
      __chkstk_darwin(v46);
      uint64_t v47 = v83;
      uint64_t v48 = v80;
      *(&v74 - 2) = (char *)v80;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      uint64_t v49 = swift_getKeyPath();
      uint64_t v74 = v24;
      __chkstk_darwin(v49);
      *(&v74 - 2) = (char *)v48;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      swift_getKeyPath();
      v45(v81, v44, v9);
      swift_retain();
      static Published.subscript.setter();
      unint64_t v31 = *(void (**)(char *, uint64_t))(v47 + 8);
      v31(v44, v9);
      uint64_t v32 = v74;
    }
    ((void (*)(char *, uint64_t))v77)(v32, v75);
    return ((uint64_t (*)(char *, uint64_t))v31)(v82, v9);
  }
  uint64_t v33 = v21;
  if (v21 == enum case for MusicPlayer.PlayabilityStatus.playable(_:))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    id v34 = v85;

    if (!v34) {
      goto LABEL_9;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if ((v85 & 1) != 0
      || (swift_retain(), unsigned __int8 v35 = Player.supportsDelegation.getter(), swift_release(), (v35 & 1) != 0))
    {
LABEL_9:
      uint64_t v36 = v78;
      int v37 = v79;
      Swift::String v38 = v82;
      uint64_t v39 = ((uint64_t (*)(char *, char *, uint64_t))v78)(v79, v82, v9);
      __chkstk_darwin(v39);
      uint64_t v40 = v80;
      *(&v74 - 2) = (char *)v80;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      uint64_t v41 = swift_getKeyPath();
      __chkstk_darwin(v41);
      *(&v74 - 2) = (char *)v40;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      swift_getKeyPath();
      v36(v81, v37, v9);
      swift_retain();
      static Published.subscript.setter();
      uint64_t v42 = *(void (**)(char *, uint64_t))(v83 + 8);
      v42(v37, v9);
      return ((uint64_t (*)(char *, uint64_t))v42)(v38, v9);
    }
    uint64_t v57 = v84 + *(void *)(*(void *)v84 + 120);
    swift_beginAccess();
    uint64_t v59 = v76;
    uint64_t v58 = v77;
    uint64_t v60 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, v57, v80);
    Song.catalogID.getter();
    uint64_t v62 = v61;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
    if (!v62)
    {
      uint64_t v69 = v79;
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v79, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.contentUnavailable(_:), v2);
      uint64_t v70 = v83;
      uint64_t v71 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 104))(v69, v22, v9);
      __chkstk_darwin(v71);
      *(&v74 - 2) = (char *)v60;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      uint64_t v72 = swift_getKeyPath();
      __chkstk_darwin(v72);
      *(&v74 - 2) = v73;
      *(&v74 - 1) = (char *)&protocol witness table for Song;
      swift_getKeyPath();
      v78(v81, v69, v9);
      swift_retain();
      static Published.subscript.setter();
      unint64_t v31 = *(void (**)(char *, uint64_t))(v70 + 8);
      v31(v69, v9);
      return ((uint64_t (*)(char *, uint64_t))v31)(v82, v9);
    }
    swift_bridgeObjectRelease();
    uint64_t v63 = v83;
    uint64_t v64 = v79;
    uint64_t v65 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 104))(v79, v33, v9);
    __chkstk_darwin(v65);
    *(&v74 - 2) = (char *)v60;
    *(&v74 - 1) = (char *)&protocol witness table for Song;
    uint64_t v66 = swift_getKeyPath();
    __chkstk_darwin(v66);
    *(&v74 - 2) = v67;
    *(&v74 - 1) = (char *)&protocol witness table for Song;
    swift_getKeyPath();
    v78(v81, v64, v9);
    swift_retain();
    static Published.subscript.setter();
    uint64_t v68 = *(void (**)(char *, uint64_t))(v63 + 8);
    v68(v64, v9);
    return ((uint64_t (*)(char *, uint64_t))v68)(v82, v9);
  }
  else
  {
    uint64_t v50 = v78;
    uint64_t v51 = v79;
    uint64_t v52 = v82;
    uint64_t v53 = ((uint64_t (*)(char *, char *, uint64_t))v78)(v79, v82, v9);
    __chkstk_darwin(v53);
    uint64_t v54 = v80;
    *(&v74 - 2) = (char *)v80;
    *(&v74 - 1) = (char *)&protocol witness table for Song;
    uint64_t v55 = swift_getKeyPath();
    __chkstk_darwin(v55);
    *(&v74 - 2) = (char *)v54;
    *(&v74 - 1) = (char *)&protocol witness table for Song;
    swift_getKeyPath();
    v50(v81, v51, v9);
    swift_retain();
    static Published.subscript.setter();
    unint64_t v56 = *(void (**)(char *, uint64_t))(v83 + 8);
    v56(v51, v9);
    v56(v52, v9);
    return ((uint64_t (*)(char *, uint64_t))v56)(v17, v9);
  }
}

uint64_t sub_1008AFA9C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_100063814(&qword_1010BE6C0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v1 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v3 + v9 + v5) & ~v5), v1);

  return swift_deallocObject();
}

unint64_t sub_1008AFC50()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(sub_100063814(&qword_1010BE6C0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v0
     + ((v4 + *(void *)(v3 + 64) + *(unsigned __int8 *)(*(void *)(v1 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));

  return sub_1008ABBA4(v0 + v4, v5, v1, v2);
}

uint64_t sub_1008AFD28()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_100063814(&qword_1010BE6C0) - 8);
  uint64_t v14 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = v3;
  unint64_t v6 = (v4 + *(void *)(v2 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v3 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v0 + v4;
  uint64_t v10 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v14);

  swift_bridgeObjectRelease();
  unint64_t v12 = *(void *)(v0 + v8 + 8);
  if (v12 >> 60 != 15) {
    sub_10007A5C4(*(void *)(v0 + v8), v12);
  }

  return swift_deallocObject();
}

uint64_t sub_1008AFF38()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(sub_100063814(&qword_1010BE6C0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (v4 + *(void *)(v3 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  unint64_t v6 = (*(void *)(*(void *)(v2 - 8) + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v0 + v4;
  uint64_t v10 = v0 + v5;
  uint64_t v11 = *(void *)(v0 + v6);
  uint64_t v12 = *(void *)(v0 + v7);
  uint64_t v13 = *(void *)(v0 + v7 + 8);
  uint64_t v14 = *(void *)(v0 + v8);
  uint64_t v15 = *(void *)(v0 + v8 + 8);
  uint64_t v16 = *(void *)(v0 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v17;
  *uint64_t v17 = v1;
  v17[1] = sub_100081D08;
  return sub_1008AC5CC(v9, v10, v11, v12, v13, v14, v15, v16);
}

uint64_t sub_1008B0108()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *unint64_t v8 = v1;
  v8[1] = sub_100081D08;
  return sub_1008ACEFC(v6, v7, v2, v3);
}

uint64_t sub_1008B0250()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  unint64_t v5 = *(void **)(v0 + v4);
  if ((unint64_t)v5 >= 4) {

  }
  return swift_deallocObject();
}

uint64_t sub_1008B0340()
{
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80);
  unint64_t v2 = (*(void *)(*(void *)(v0[2] - 8) + 64) + v1 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1008AD3EC(v0[4], (unint64_t)v0 + v1, *(void **)((char *)v0 + v2), *(void **)((char *)v0 + ((v2 + 15) & 0xFFFFFFFFFFFFFFF8)), v0[2], v0[3]);
}

uint64_t sub_1008B03B8()
{
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 48);
  if (v1 >> 60 != 15) {
    sub_10007A5C4(*(void *)(v0 + 40), v1);
  }

  unint64_t v2 = *(void **)(v0 + 64);
  if ((unint64_t)v2 >= 4) {

  }
  if (*(void *)(v0 + 96)) {
    sub_1000760E4(v0 + 72);
  }

  return swift_deallocObject();
}

uint64_t sub_1008B0438()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v8 = v0[8];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_100081D08;
  return sub_1008AD6E8(v2, v3, v4, v5, v6, v7, v8, (uint64_t)(v0 + 9));
}

uint64_t sub_1008B0510()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 - 8);
  unint64_t v5 = (v3 + *(void *)(v2 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0 + v3;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    uint64_t v17 = v1;
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v9 + *(int *)(v10 + 24);
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v14 = *(void *)(v11 - 8);
      uint64_t v15 = v11;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(v16, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1 = v17;
  }
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v1);
  uint64_t v12 = *(void **)(v0 + v6);
  if ((unint64_t)v12 >= 4) {

  }
  return swift_deallocObject();
}

uint64_t sub_1008B07E4()
{
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v7 = v0 + v5;
  uint64_t v8 = v0 + v6;
  uint64_t v9 = *(void *)(v0 + ((*(void *)(*(void *)(v3 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_100081D08;
  return sub_1008ADEB4(v7, v8, v9, v3, v2);
}

uint64_t sub_1008B0958()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t _s9MusicCore7ActionsO7PreviewO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_1008B0D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = a1 + 8;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  long long v10 = *(_OWORD *)(a1 + 40);
  long long v11 = *(_OWORD *)(a1 + 24);
  long long v9 = *(_OWORD *)(a1 + 56);
  sub_100897A8C(a1, (uint64_t)v13);
  sub_100897A8C((uint64_t)v13, (uint64_t)&v14);
  if (v14 >= 4)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    unsigned int v7 = 0x1F201D1Eu >> (8 * v14);
    sub_10003CABC(v4, (uint64_t)v12, (uint64_t *)&unk_1010C28C0);
    sub_1000D230C((uint64_t)v12);
    *(void *)a2 = v3;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(_OWORD *)(a2 + 24) = v11;
    *(_OWORD *)(a2 + 40) = v10;
    *(_OWORD *)(a2 + 56) = v9;
    *(unsigned char *)(a2 + 72) = v7;
    *(void *)(a2 + 80) = sub_1008AB964;
    *(void *)(a2 + 88) = 0;
    *(void *)(a2 + 96) = 0x4014000000000000;
    *(void *)(a2 + 104) = &unk_1010BE7F8;
    *(void *)(a2 + 112) = 0;
    *(void *)(a2 + 120) = &unk_1010BE800;
    *(void *)(a2 + 128) = 0;
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1008B0F0C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008B0F48()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  id v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *id v8 = v1;
  v8[1] = sub_100081D08;
  return sub_1008A7E18(v6, v7, v2, v3);
}

ValueMetadata *type metadata accessor for Actions.Preview()
{
  return &type metadata for Actions.Preview;
}

ValueMetadata *type metadata accessor for Actions.Preview.Context()
{
  return &type metadata for Actions.Preview.Context;
}

ValueMetadata *type metadata accessor for Actions.CreateStation()
{
  return &type metadata for Actions.CreateStation;
}

ValueMetadata *type metadata accessor for Actions.CreateStation.Context()
{
  return &type metadata for Actions.CreateStation.Context;
}

ValueMetadata *type metadata accessor for Actions.Play()
{
  return &type metadata for Actions.Play;
}

ValueMetadata *type metadata accessor for Actions.Play.Context()
{
  return &type metadata for Actions.Play.Context;
}

ValueMetadata *type metadata accessor for Actions.Queue()
{
  return &type metadata for Actions.Queue;
}

uint64_t _s5QueueO7ContextVwxx(id *a1)
{
  if ((unint64_t)*a1 >= 4) {

  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t _s5QueueO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  if (*(void *)a2 >= 4uLL) {
    id v5 = v4;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v6;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s5QueueO7ContextVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  if (*(void *)a1 >= 4uLL)
  {
    if ((unint64_t)v5 >= 4)
    {
      *(void *)a1 = v5;
      id v7 = v5;

      goto LABEL_8;
    }

    id v5 = *(void **)a2;
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 4)
  {
LABEL_6:
    *(void *)a1 = v5;
    goto LABEL_8;
  }
  *(void *)a1 = v5;
  id v6 = v5;
LABEL_8:
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  swift_retain();
  swift_release();
  return a1;
}

__n128 _s5QueueO7ContextVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s5QueueO7ContextVwta(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  unint64_t v5 = *(void *)a2;
  if (*(void *)a1 >= 4uLL)
  {
    if (v5 >= 4)
    {
      *(void *)a1 = v5;

      goto LABEL_6;
    }
  }
  *(void *)a1 = v5;
LABEL_6:
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  uint64_t v6 = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v6;
  swift_release();
  return a1;
}

uint64_t _s5QueueO7ContextVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5QueueO7ContextVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.Queue.Context()
{
  return &type metadata for Actions.Queue.Context;
}

uint64_t sub_1008B1444()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008B147C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaybackIntentDescriptor.IntentType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008B14E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010C2AB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008B1548(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1008B15B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v74 = a3;
  uint64_t v82 = a2;
  uint64_t v83 = a1;
  uint64_t v5 = sub_100063814(&qword_1010BE838);
  uint64_t v76 = *(void *)(v5 - 8);
  uint64_t v77 = v5;
  __chkstk_darwin(v5);
  uint64_t v75 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814((uint64_t *)&unk_1010C3880);
  uint64_t v79 = *(void *)(v7 - 8);
  uint64_t v80 = v7;
  __chkstk_darwin(v7);
  uint64_t v78 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814((uint64_t *)&unk_1010C5900);
  __chkstk_darwin(v9 - 8);
  uint64_t v81 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100063814(&qword_1010BE840);
  uint64_t v70 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v67 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100063814(&qword_1010BE848);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v71 = v12;
  uint64_t v72 = v13;
  __chkstk_darwin(v12);
  uint64_t v68 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100063814(&qword_1010C2EF0);
  uint64_t v65 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v64 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus();
  uint64_t v62 = *(void *)(v63 - 8);
  uint64_t v16 = __chkstk_darwin(v63);
  uint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v20 = (char *)&v60 - v19;
  uint64_t v61 = (void (*)(char *, char *, uint64_t))sub_100063814((uint64_t *)&unk_1010C2EE0);
  uint64_t v21 = *((void *)v61 - 1);
  __chkstk_darwin(v61);
  char v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  NSString v30 = (char *)&v60 - v29;
  v4[4] = _swiftEmptyArrayStorage;
  uint64_t v66 = v4 + 4;
  unint64_t v31 = (char *)v4 + *(void *)(*v4 + 128);
  (*(void (**)(char *, void, uint64_t))(v25 + 104))((char *)&v60 - v29, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v24);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v24);
  Published.init(initialValue:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
  (*(void (**)(char *, char *, void *))(v21 + 32))(v31, v23, v61);
  uint64_t v32 = (char *)v4 + *(void *)(*v4 + 136);
  uint64_t v33 = enum case for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason.notSupported(_:);
  uint64_t v34 = type metadata accessor for MusicPlayer.PreviewCapabilityStatus.UnpreviewableReason();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v20, v33, v34);
  uint64_t v35 = v62;
  uint64_t v36 = v63;
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v20, enum case for MusicPlayer.PreviewCapabilityStatus.unpreviewable(_:), v63);
  uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v61(v18, v20, v36);
  int v37 = v64;
  Swift::String v38 = v18;
  Published.init(initialValue:)();
  uint64_t v62 = *(void *)(v35 + 8);
  ((void (*)(char *, uint64_t))v62)(v20, v36);
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v32, v37, v73);
  uint64_t v39 = (char *)v4 + *(void *)(*v4 + 120);
  uint64_t v40 = type metadata accessor for Song();
  uint64_t v73 = *(void *)(v40 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v39, v83, v40);
  uint64_t v41 = v74;
  v4[2] = v82;
  v4[3] = v41;
  swift_retain();
  swift_retain();
  sub_1008AEE98();
  dispatch thunk of MusicPlayer.ItemState.previewCapabilityStatus.getter();
  uint64_t v86 = v40;
  uint64_t v87 = &protocol witness table for Song;
  swift_getKeyPath();
  uint64_t v74 = v40;
  uint64_t v84 = v40;
  id v85 = &protocol witness table for Song;
  swift_getKeyPath();
  v61(v38, v20, v36);
  swift_retain();
  static Published.subscript.setter();
  ((void (*)(char *, uint64_t))v62)(v20, v36);
  uint64_t v42 = v67;
  dispatch thunk of MusicPlayer.ItemState.$playabilityStatus.getter();
  sub_10007B23C();
  id v88 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v43 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = v81;
  uint64_t v65 = *(void *)(v44 + 56);
  uint64_t v64 = (char *)(v44 + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v65)(v81, 1, 1, v43);
  sub_100063858((unint64_t *)&unk_1010C3890, &qword_1010BE840);
  sub_1008B225C((unint64_t *)&qword_1010C2E80, (void (*)(uint64_t))sub_10007B23C);
  uint64_t v46 = v68;
  uint64_t v47 = (uint64_t)v45;
  uint64_t v48 = v69;
  Publisher.receive<A>(on:options:)();
  sub_1000637B8(v47, (uint64_t *)&unk_1010C5900);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v42, v48);
  swift_allocObject();
  swift_weakInit();
  sub_100063858(&qword_1010BE850, &qword_1010BE848);
  uint64_t v49 = v71;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  uint64_t v50 = v66;
  (*(void (**)(char *, uint64_t))(v72 + 8))(v46, v49);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  uint64_t v51 = v75;
  uint64_t v52 = v82;
  dispatch thunk of MusicPlayer.ItemState.$previewCapabilityStatus.getter();
  id v88 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v53 = (uint64_t)v81;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v65)(v81, 1, 1, v43);
  sub_100063858(qword_1010C38A0, &qword_1010BE838);
  uint64_t v54 = v77;
  uint64_t v55 = v78;
  Publisher.receive<A>(on:options:)();
  sub_1000637B8(v53, (uint64_t *)&unk_1010C5900);

  (*(void (**)(char *, uint64_t))(v76 + 8))(v51, v54);
  uint64_t v56 = swift_allocObject();
  swift_weakInit();
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = v56;
  *(void *)(v57 + 24) = v52;
  sub_100063858(&qword_1010BE858, (uint64_t *)&unk_1010C3880);
  swift_retain();
  uint64_t v58 = v80;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v55, v58);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v4[4] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v4[4] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v83, v74);
  return v4;
}

uint64_t sub_1008B2224()
{
  return 16;
}

__n128 sub_1008B2230(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1008B2244()
{
  return 16;
}

__n128 sub_1008B2250(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1008B225C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1008B22A4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1008B22DC()
{
  return sub_1008AEC40();
}

uint64_t sub_1008B22E4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008B2324()
{
  return sub_1008AEC98();
}

double Actions.Share.Context.init(item:applicationCapabilities:shareSheetPresenting:metricsReportingContext:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  sub_1008CD850(a1, a2, a3, a4, (unint64_t (**)())v9);
  long long v6 = v9[1];
  *a5 = v9[0];
  a5[1] = v6;
  double result = *(double *)&v10;
  long long v8 = v11;
  a5[2] = v10;
  a5[3] = v8;
  return result;
}

__n128 static Actions.Share.action(context:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[5];
  uint64_t v7 = a1[7];
  long long v10 = *(_OWORD *)(a1 + 1);
  long long v11 = *((_OWORD *)a1 + 3);
  uint64_t v6 = v11;
  swift_retain();
  __n128 v9 = *(__n128 *)(a1 + 3);
  swift_retain();
  swift_retain();
  sub_1000D230C((uint64_t)&v11);
  *(void *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v10;
  __n128 result = v9;
  *(__n128 *)(a2 + 24) = v9;
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  *(unsigned char *)(a2 + 64) = 39;
  *(void *)(a2 + 72) = sub_100842DF8;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0x4014000000000000;
  *(void *)(a2 + 96) = &unk_1010BE878;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = &unk_1010BE880;
  *(void *)(a2 + 120) = 0;
  return result;
}

uint64_t Actions.Share.Context.menuItemTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Actions.Share.Context.menuItemTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

double (*Actions.Share.Context.menuItemTitle.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t sub_1008B252C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = v3;
  *(void *)(a2 + 48) = v2;
  *(void *)(a2 + 56) = v4;
  *(unsigned char *)(a2 + 64) = 39;
  *(void *)(a2 + 72) = sub_100842DF8;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0x4014000000000000;
  *(void *)(a2 + 96) = &unk_1010BE878;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = &unk_1010BE880;
  *(void *)(a2 + 120) = 0;
  swift_retain();
  swift_retain();
  swift_retain();

  return swift_bridgeObjectRetain();
}

uint64_t (*Actions.Share.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000013;
  *(void *)(v0 + 24) = 0x8000000100DB0620;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000013;
  *(void *)(v1 + 24) = 0x8000000100DB0620;
  return sub_100842598;
}

uint64_t (*sub_1008B2698())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000013;
  *(void *)(v0 + 24) = 0x8000000100DB0620;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000013;
  *(void *)(v1 + 24) = 0x8000000100DB0620;
  return sub_100842D2C;
}

uint64_t sub_1008B2738(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_1008B27D0, v4, v3);
}

uint64_t sub_1008B27D0()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100068990(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[7] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1008B28D8;
  uint64_t v5 = v0[3];
  return v7(v5, v2, v3);
}

uint64_t sub_1008B28D8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_1008B29F8, v3, v2);
}

uint64_t sub_1008B29F8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t Actions.Share.Context.init(item:applicationCapabilities:shareAction:metricsReportingContext:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t (**a6)()@<X8>)
{
  uint64_t v27 = a5;
  uint64_t v12 = sub_100063814(&qword_1010BCFB8);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12 - 8);
  sub_1000688E4((uint64_t)a1, (uint64_t)v29);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  sub_100068978(v29, v15 + 24);
  uint64_t v16 = (unint64_t (*)())swift_allocObject();
  uint64_t v28 = sub_1008CDB9C;
  *((void *)v16 + 2) = sub_1008CDB9C;
  *((void *)v16 + 3) = v15;
  *((void *)v16 + 4) = a3;
  *((void *)v16 + 5) = a4;
  sub_10006CAB8(a5, (uint64_t)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010BCFB8);
  sub_1000688E4((uint64_t)a1, (uint64_t)v29);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = swift_allocObject();
  sub_100842818((uint64_t)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  sub_100068978(v29, v18 + ((v14 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  sub_100068990(a1, v19);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 32);
  swift_retain();
  uint64_t v22 = v21(v19, v20);
  uint64_t v24 = v23;
  sub_1000637B8(v27, &qword_1010BCFB8);
  uint64_t result = sub_1000760E4((uint64_t)a1);
  *a6 = v28;
  a6[1] = (unint64_t (*)())v15;
  a6[2] = (unint64_t (*)())&unk_1010BE890;
  a6[3] = v16;
  a6[4] = (unint64_t (*)())&unk_1010BE8A0;
  a6[5] = (unint64_t (*)())v18;
  a6[6] = (unint64_t (*)())v22;
  a6[7] = v24;
  return result;
}

unint64_t sub_1008B2C8C(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100063814(&qword_1010BD118);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for Playlist();
  uint64_t v35 = *(void *)(v36 - 8);
  uint64_t v6 = __chkstk_darwin(v36);
  uint64_t v33 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v34 = (char *)&v32 - v8;
  uint64_t v9 = sub_100063814(&qword_1010BCBE0);
  __chkstk_darwin(v9 - 8);
  long long v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  int v12 = v41[1];
  uint64_t v13 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v12 != 1) {
    return 0xD000000000000016;
  }
  uint64_t v14 = a2[3];
  uint64_t v15 = a2[4];
  sub_100068990(a2, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  uint64_t v16 = type metadata accessor for URL();
  LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v11, 1, v16);
  sub_1000637B8((uint64_t)v11, &qword_1010BCBE0);
  sub_1000688E4((uint64_t)a2, (uint64_t)v41);
  if (v14 != 1)
  {
    sub_1000760E4((uint64_t)v41);
    return 0;
  }
  sub_1000688E4((uint64_t)v41, (uint64_t)v37);
  sub_100063814(&qword_1010BE258);
  sub_100063814(&qword_1010BD978);
  if (swift_dynamicCast())
  {
    uint64_t v17 = *((void *)&v39 + 1);
    uint64_t v18 = v40;
    sub_100068990(&v38, *((uint64_t *)&v39 + 1));
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
    uint64_t v20 = v19;
    sub_1000760E4((uint64_t)v41);
    sub_1000760E4((uint64_t)&v38);
    if (v20)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    uint64_t v40 = 0;
    long long v38 = 0u;
    long long v39 = 0u;
    sub_1000760E4((uint64_t)v41);
    sub_1000637B8((uint64_t)&v38, (uint64_t *)&unk_1010C36E0);
  }
  sub_1000688E4((uint64_t)a2, (uint64_t)&v38);
  uint64_t v22 = v36;
  char v23 = swift_dynamicCast();
  uint64_t v24 = v35;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
  if ((v23 & 1) == 0)
  {
    v25(v5, 1, 1, v22);
    sub_1000637B8((uint64_t)v5, &qword_1010BD118);
    return 0xD000000000000023;
  }
  v25(v5, 0, 1, v22);
  uint64_t v26 = v34;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v34, v5, v22);
  char v27 = Playlist.isShareable.getter();
  uint64_t v28 = v33;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v33, v26, v22);
  if (v27)
  {
    uint64_t v29 = *(void (**)(char *, uint64_t))(v24 + 8);
    v29(v28, v22);
    v29(v26, v22);
    return 0;
  }
  char v30 = Playlist.canMakeShareable.getter();
  unint64_t v31 = *(void (**)(char *, uint64_t))(v24 + 8);
  v31(v28, v22);
  if (v30)
  {
    v31(v26, v22);
    return 0;
  }
  v31(v26, v22);
  return 0xD000000000000021;
}

uint64_t Playlist.isShareable.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Playlist.Variant();
  uint64_t v91 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v85 = &v72[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_100063814(&qword_1010BD740);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v87 = &v72[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v8 = &v72[-v7];
  uint64_t v9 = sub_100063814(&qword_1010BD5E0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v84 = &v72[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v10);
  id v88 = &v72[-v13];
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v89 = &v72[-v15];
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v86 = &v72[-v17];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = &v72[-v19];
  __chkstk_darwin(v18);
  uint64_t v22 = &v72[-v21];
  uint64_t v23 = type metadata accessor for Playlist();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v92 = &v72[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = __chkstk_darwin(v25);
  char v93 = &v72[-v28];
  __chkstk_darwin(v27);
  char v30 = &v72[-v29];
  char v31 = Playlist.isPublic.getter();
  uint64_t v32 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v94 = v24 + 16;
  long long v95 = v32;
  v32(v30, v1, v23);
  if (v31)
  {
    uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v24 + 8);
    v40(v30, v23);
    uint64_t v41 = v23;
    goto LABEL_6;
  }
  uint64_t v82 = v1;
  uint64_t v83 = v23;
  uint64_t v90 = v24;
  Playlist.variant.getter();
  uint64_t v33 = v91;
  uint64_t v34 = *(void (**)(unsigned char *, void, uint64_t))(v91 + 104);
  uint64_t v77 = v91 + 104;
  uint64_t v75 = v34;
  v34(v20, enum case for Playlist.Variant.subscribed(_:), v2);
  uint64_t v35 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56);
  uint64_t v78 = v33 + 56;
  uint64_t v76 = v35;
  v35(v20, 0, 1, v2);
  uint64_t v79 = v4;
  uint64_t v36 = (uint64_t)&v8[*(int *)(v4 + 48)];
  sub_10006CAB8((uint64_t)v22, (uint64_t)v8, &qword_1010BD5E0);
  sub_10006CAB8((uint64_t)v20, v36, &qword_1010BD5E0);
  uint64_t v37 = v33 + 48;
  long long v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  unsigned int v39 = v38((uint64_t)v8, 1, v2);
  uint64_t v80 = v38;
  uint64_t v81 = v8;
  if (v39 == 1)
  {
    sub_1000637B8((uint64_t)v20, &qword_1010BD5E0);
    sub_1000637B8((uint64_t)v22, &qword_1010BD5E0);
    uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v90 + 8);
    uint64_t v41 = v83;
    v40(v30, v83);
    unsigned int v42 = v38(v36, 1, v2);
    uint64_t v43 = (uint64_t)v89;
    if (v42 == 1)
    {
      sub_1000637B8((uint64_t)v81, &qword_1010BD5E0);
      uint64_t v1 = v82;
LABEL_6:
      uint64_t v44 = v93;
      uint64_t v45 = v95;
      v95(v93, v1, v41);
LABEL_7:
      v40(v44, v41);
      uint64_t v46 = v92;
      v45(v92, v1, v41);
LABEL_8:
      v40(v46, v41);
      return 1;
    }
    uint64_t v1 = v82;
    goto LABEL_14;
  }
  uint64_t v48 = v33;
  uint64_t v49 = (uint64_t)v8;
  uint64_t v50 = v86;
  sub_10006CAB8(v49, (uint64_t)v86, &qword_1010BD5E0);
  unsigned int v51 = v38(v36, 1, v2);
  uint64_t v52 = (void (**)(unsigned char *, uint64_t))(v33 + 8);
  uint64_t v41 = v83;
  if (v51 == 1)
  {
    sub_1000637B8((uint64_t)v20, &qword_1010BD5E0);
    sub_1000637B8((uint64_t)v22, &qword_1010BD5E0);
    uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v90 + 8);
    v40(v30, v41);
    (*v52)(v50, v2);
    uint64_t v1 = v82;
    uint64_t v43 = (uint64_t)v89;
LABEL_14:
    uint64_t v53 = v93;
    sub_1000637B8((uint64_t)v81, &qword_1010BD740);
    v95(v53, v1, v41);
    goto LABEL_15;
  }
  uint64_t v60 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v48 + 32);
  uint64_t v74 = v37;
  uint64_t v61 = v50;
  uint64_t v62 = v85;
  v60(v85, v36, v2);
  sub_1008CE350((unint64_t *)&qword_1010BD748, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant);
  int v73 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v63 = *(void (**)(unsigned char *, uint64_t))(v48 + 8);
  v63(v62, v2);
  sub_1000637B8((uint64_t)v20, &qword_1010BD5E0);
  sub_1000637B8((uint64_t)v22, &qword_1010BD5E0);
  uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v90 + 8);
  v40(v30, v41);
  v63(v61, v2);
  sub_1000637B8((uint64_t)v81, &qword_1010BD5E0);
  uint64_t v44 = v93;
  uint64_t v1 = v82;
  uint64_t v45 = v95;
  v95(v93, v82, v41);
  uint64_t v43 = (uint64_t)v89;
  if (v73) {
    goto LABEL_7;
  }
LABEL_15:
  Playlist.variant.getter();
  uint64_t v54 = v88;
  v75(v88, enum case for Playlist.Variant.admin(_:), v2);
  v76(v54, 0, 1, v2);
  uint64_t v55 = v87;
  uint64_t v56 = (uint64_t)&v87[*(int *)(v79 + 48)];
  sub_10006CAB8(v43, (uint64_t)v87, &qword_1010BD5E0);
  sub_10006CAB8((uint64_t)v54, v56, &qword_1010BD5E0);
  uint64_t v57 = v80;
  if (v80((uint64_t)v55, 1, v2) == 1)
  {
    sub_1000637B8((uint64_t)v54, &qword_1010BD5E0);
    sub_1000637B8(v43, &qword_1010BD5E0);
    v40(v93, v41);
    if (v80(v56, 1, v2) == 1)
    {
      sub_1000637B8((uint64_t)v55, &qword_1010BD5E0);
      uint64_t v46 = v92;
      v95(v92, v1, v41);
      goto LABEL_8;
    }
    goto LABEL_20;
  }
  uint64_t v58 = v57;
  uint64_t v59 = v84;
  sub_10006CAB8((uint64_t)v55, (uint64_t)v84, &qword_1010BD5E0);
  if (v58(v56, 1, v2) == 1)
  {
    sub_1000637B8((uint64_t)v88, &qword_1010BD5E0);
    sub_1000637B8(v43, &qword_1010BD5E0);
    v40(v93, v41);
    (*(void (**)(unsigned char *, uint64_t))(v91 + 8))(v59, v2);
LABEL_20:
    sub_1000637B8((uint64_t)v55, &qword_1010BD740);
    uint64_t v46 = v92;
    v95(v92, v1, v41);
    goto LABEL_24;
  }
  uint64_t v64 = v43;
  uint64_t v65 = v91;
  uint64_t v66 = v85;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v91 + 32))(v85, v56, v2);
  sub_1008CE350((unint64_t *)&qword_1010BD748, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant);
  char v67 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v68 = *(void (**)(unsigned char *, uint64_t))(v65 + 8);
  uint64_t v69 = v66;
  uint64_t v41 = v83;
  v68(v69, v2);
  sub_1000637B8((uint64_t)v88, &qword_1010BD5E0);
  sub_1000637B8(v64, &qword_1010BD5E0);
  v40(v93, v41);
  v68(v59, v2);
  sub_1000637B8((uint64_t)v55, &qword_1010BD5E0);
  uint64_t v46 = v92;
  v95(v92, v82, v41);
  if (v67) {
    goto LABEL_8;
  }
LABEL_24:
  Playlist.catalogID.getter();
  uint64_t v71 = v70;
  v40(v46, v41);
  if (!v71) {
    return 0;
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t Playlist.canMakeShareable.getter()
{
  uint64_t v59 = type metadata accessor for Playlist.Variant();
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v53 = (char *)&v51 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100063814(&qword_1010BD740);
  __chkstk_darwin(v56);
  uint64_t v58 = (uint64_t)&v51 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100063814(&qword_1010BD5E0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v54 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v65 = (uint64_t)&v51 - v6;
  __chkstk_darwin(v5);
  uint64_t v63 = (char *)&v51 - v7;
  uint64_t v8 = type metadata accessor for Playlist.EditableComponents();
  uint64_t v61 = *(void *)(v8 - 8);
  uint64_t v62 = v8;
  __chkstk_darwin(v8);
  uint64_t v55 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100063814((uint64_t *)&unk_1010C0D10);
  __chkstk_darwin(v10 - 8);
  uint64_t v60 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Playlist();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v64 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v51 - v16;
  if (qword_1010BBCC8 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v18 = v67;
  uint64_t v19 = v68;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v20(v17, v66, v12);
  uint64_t v21 = v12;
  uint64_t v22 = v13;
  if ((v18 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v21);
LABEL_15:
    char v33 = 0;
    return v33 & 1;
  }
  uint64_t v23 = (uint64_t)v60;
  Playlist.editableComponents.getter();
  uint64_t v25 = v61;
  uint64_t v24 = v62;
  int v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v23, 1, v62);
  uint64_t v52 = v17;
  if (v26 == 1)
  {
    sub_1000637B8(v23, (uint64_t *)&unk_1010C0D10);
    uint64_t v27 = v64;
    v20(v64, (uint64_t)v17, v21);
    uint64_t v28 = (uint64_t)v63;
    uint64_t v29 = v65;
    goto LABEL_9;
  }
  char v30 = v55;
  static Playlist.EditableComponents.tracklist.getter();
  sub_1008CE350((unint64_t *)&qword_1010BD5D8, (void (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents);
  LODWORD(v66) = dispatch thunk of SetAlgebra.isSuperset(of:)();
  char v31 = *(void (**)(char *, uint64_t))(v25 + 8);
  v31(v30, v24);
  v31((char *)v23, v24);
  uint64_t v27 = v64;
  v20(v64, (uint64_t)v17, v21);
  uint64_t v28 = (uint64_t)v63;
  uint64_t v29 = v65;
  if ((v66 & 1) == 0)
  {
LABEL_9:
    uint64_t v66 = v21;
    uint64_t v34 = v27;
    Playlist.variant.getter();
    uint64_t v35 = v57;
    uint64_t v36 = v59;
    (*(void (**)(uint64_t, void, uint64_t))(v57 + 104))(v29, enum case for Playlist.Variant.favoriteSongs(_:), v59);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v29, 0, 1, v36);
    uint64_t v37 = v58;
    uint64_t v38 = v58 + *(int *)(v56 + 48);
    sub_10006CAB8(v28, v58, &qword_1010BD5E0);
    sub_10006CAB8(v29, v38, &qword_1010BD5E0);
    uint64_t v39 = v29;
    uint64_t v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
    if (v40(v37, 1, v36) == 1)
    {
      sub_1000637B8(v39, &qword_1010BD5E0);
      sub_1000637B8(v28, &qword_1010BD5E0);
      uint64_t v41 = *(void (**)(char *, uint64_t))(v22 + 8);
      uint64_t v42 = v66;
      v41(v34, v66);
      v41(v52, v42);
      if (v40(v38, 1, v36) == 1)
      {
        sub_1000637B8(v37, &qword_1010BD5E0);
        char v33 = 1;
        return v33 & 1;
      }
    }
    else
    {
      uint64_t v43 = v54;
      sub_10006CAB8(v37, v54, &qword_1010BD5E0);
      if (v40(v38, 1, v36) != 1)
      {
        uint64_t v47 = v53;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v53, v38, v36);
        sub_1008CE350((unint64_t *)&qword_1010BD748, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant);
        char v33 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v48 = *(void (**)(char *, uint64_t))(v35 + 8);
        v48(v47, v36);
        sub_1000637B8(v65, &qword_1010BD5E0);
        sub_1000637B8(v28, &qword_1010BD5E0);
        uint64_t v49 = *(void (**)(char *, uint64_t))(v22 + 8);
        uint64_t v50 = v66;
        v49(v64, v66);
        v49(v52, v50);
        v48((char *)v43, v36);
        sub_1000637B8(v37, &qword_1010BD5E0);
        return v33 & 1;
      }
      sub_1000637B8(v65, &qword_1010BD5E0);
      sub_1000637B8(v28, &qword_1010BD5E0);
      uint64_t v44 = *(void (**)(char *, uint64_t))(v22 + 8);
      uint64_t v45 = v66;
      v44(v64, v66);
      v44(v52, v45);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v43, v36);
    }
    sub_1000637B8(v37, &qword_1010BD740);
    goto LABEL_15;
  }
  uint64_t v32 = *(void (**)(char *, uint64_t))(v22 + 8);
  v32(v27, v21);
  v32(v52, v21);
  char v33 = 1;
  return v33 & 1;
}

uint64_t sub_1008B4514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  v4[8] = v5;
  return _swift_task_switch(sub_1008B45B0, v6, v5);
}

uint64_t sub_1008B45B0()
{
  uint64_t v1 = (*(uint64_t (**)(void))(v0 + 16))();
  if (v2 == 1)
  {
    uint64_t v9 = (uint64_t (*)(void))(*(void *)(v0 + 32) + **(int **)(v0 + 32));
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1008B4718;
    return v9();
  }
  else
  {
    uint64_t v5 = v1;
    uint64_t v6 = v2;
    swift_release();
    sub_10086C8E8();
    swift_allocError();
    *uint64_t v7 = v5;
    v7[1] = v6;
    swift_willThrow();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_1008B4718()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v5 = sub_1008B48B8;
  }
  else {
    uint64_t v5 = sub_1008B4854;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1008B4854()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008B48B8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008B491C(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  sub_100063814(&qword_1010BCBE0);
  v2[11] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v2[12] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Actions.MetricsReportingContext();
  v2[13] = v3;
  v2[14] = *(void *)(v3 - 8);
  v2[15] = swift_task_alloc();
  return _swift_task_switch(sub_1008B4A3C, 0, 0);
}

uint64_t sub_1008B4A3C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  sub_10006CAB8(*(void *)(v0 + 72), v3, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 96), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v7 = *(void **)(v0 + 80);
    sub_100706008(*(void *)(v0 + 96), *(void *)(v0 + 120));
    uint64_t v8 = v7[3];
    sub_100068990(v7, v8);
    *(void *)(v0 + 128) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(void *)(v0 + 136) = v9;
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    sub_100063814(&qword_1010BD000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    sub_100068990(v7, v7[3]);
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v12;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 144) = sub_100872094(inited);
    *(void *)(v0 + 152) = v13;
    *(void *)(v0 + 160) = v14;
    *(_WORD *)(v0 + 176) = v15;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 168) = static MainActor.shared.getter();
    uint64_t v17 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008B4C8C, v17, v16);
  }
}

uint64_t sub_1008B4C8C()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(void **)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v6 = *(uint64_t **)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 176);
  swift_release();
  sub_1008724B8(v5, v4, 5, 36, v7, v3, v2, v1, v8, v6);
  sub_1004CF644(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_1000637B8(v7, &qword_1010BCBE0);
  return _swift_task_switch(sub_1008CE978, 0, 0);
}

uint64_t static Actions.ShareLyrics.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 40);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)(a2 + 40) = v2;
  *(unsigned char *)(a2 + 48) = 40;
  *(void *)(a2 + 56) = sub_100842DF8;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0x4014000000000000;
  *(void *)(a2 + 80) = &unk_1010BE8A8;
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = &unk_1010BE8B0;
  *(void *)(a2 + 104) = 0;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t Actions.ShareLyrics.Context.init(item:canShareLyrics:shareLyrics:metricsReportingContext:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v14 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v16 = (*(void *)(v14 + 64) + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  sub_100842818(a6, v17 + v15);
  uint64_t result = sub_100068978(a1, v17 + v16);
  *a7 = a2;
  a7[1] = a3;
  a7[2] = a4;
  a7[3] = a5;
  a7[4] = &unk_1010BE8C0;
  a7[5] = v17;
  return result;
}

uint64_t sub_1008B4F4C(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  sub_100063814(&qword_1010BCBE0);
  v2[11] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v2[12] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Actions.MetricsReportingContext();
  v2[13] = v3;
  v2[14] = *(void *)(v3 - 8);
  v2[15] = swift_task_alloc();
  return _swift_task_switch(sub_1008B506C, 0, 0);
}

uint64_t sub_1008B506C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  sub_10006CAB8(*(void *)(v0 + 72), v3, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 96), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v7 = *(void **)(v0 + 80);
    sub_100706008(*(void *)(v0 + 96), *(void *)(v0 + 120));
    uint64_t v8 = v7[3];
    sub_100068990(v7, v8);
    *(void *)(v0 + 128) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(void *)(v0 + 136) = v9;
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    sub_100063814(&qword_1010BD000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    sub_100068990(v7, v7[3]);
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v12;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 144) = sub_100872094(inited);
    *(void *)(v0 + 152) = v13;
    *(void *)(v0 + 160) = v14;
    *(_WORD *)(v0 + 176) = v15;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 168) = static MainActor.shared.getter();
    uint64_t v17 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008B52BC, v17, v16);
  }
}

uint64_t sub_1008B52BC()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(void **)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v6 = *(uint64_t **)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 176);
  swift_release();
  sub_1008724B8(v5, v4, 5, 38, v7, v3, v2, v1, v8, v6);
  sub_1004CF644(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_1000637B8(v7, &qword_1010BCBE0);
  return _swift_task_switch(sub_10085147C, 0, 0);
}

uint64_t Actions.ShareLyrics.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*Actions.ShareLyrics.Context.menuItemImage.getter())()
{
  return sub_10087E5F8;
}

id sub_1008B55D4()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self imageNamed:v0];

  return v1;
}

uint64_t ShareableMusicItem.actionTitle.getter()
{
  return sub_1008B5854();
}

uint64_t sub_1008B5658()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t ShareableMusicItem.failureMessage.getter()
{
  return sub_1008B5854();
}

uint64_t sub_1008B5854()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t ShareableMusicItem.shareURL.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_1008B5A58, 0, 0);
}

uint64_t sub_1008B5A58()
{
  (*(void (**)(void))(v0[4] + 16))(v0[3]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008B5ACC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_100063814(&qword_1010BCBE0);
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_1008B5B60, 0, 0);
}

uint64_t sub_1008B5B60()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = **(void ***)(v0 + 16);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v1, 1, 1, v3);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  uint64_t v7 = 0;
  if (v5 != 1)
  {
    uint64_t v8 = *(void *)(v0 + 24);
    URL._bridgeToObjectiveC()(v6);
    uint64_t v7 = v9;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
  }
  [v2 setOriginalURL:v7];

  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1008B5CB8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008B5D4C, 0, 0);
}

uint64_t sub_1008B5D4C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = **(void ***)(v0 + 16);
  Curator.url.getter();
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    uint64_t v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  [v2 setOriginalURL:v6];

  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1008B5E78(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008B5F0C, 0, 0);
}

uint64_t sub_1008B5F0C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = **(void ***)(v0 + 16);
  EditorialItem.url.getter();
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    uint64_t v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  [v2 setOriginalURL:v6];

  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1008B6038(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008B60CC, 0, 0);
}

uint64_t sub_1008B60CC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = **(void ***)(v0 + 16);
  Genre.url.getter();
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    uint64_t v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  [v2 setOriginalURL:v6];

  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1008B61F8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008B628C, 0, 0);
}

uint64_t sub_1008B628C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = **(void ***)(v0 + 16);
  RadioShow.url.getter();
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    uint64_t v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  [v2 setOriginalURL:v6];

  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1008B63B8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008B644C, 0, 0);
}

uint64_t sub_1008B644C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = **(void ***)(v0 + 16);
  RecordLabel.url.getter();
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    uint64_t v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  [v2 setOriginalURL:v6];

  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1008B6578(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008B660C, 0, 0);
}

uint64_t sub_1008B660C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = **(void ***)(v0 + 16);
  SocialProfile.url.getter();
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 32);
    URL._bridgeToObjectiveC()(v5);
    uint64_t v6 = v8;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  [v2 setOriginalURL:v6];

  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t ShareableMusicItem.augmentMetadata(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  sub_100063814(&qword_1010BCBE0);
  v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_1008B67D0, 0, 0);
}

uint64_t sub_1008B67D0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  *(void *)(v0 + 56) = **(void **)(v0 + 16);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 24) + **(int **)(v1 + 24));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1008B68C4;
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  return v7(v3, v4, v5);
}

uint64_t sub_1008B68C4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008B69C0, 0, 0);
}

uint64_t sub_1008B69C0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v5 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v4);
    uint64_t v5 = v6;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  [*(id *)(v0 + 56) setOriginalURL:v5];

  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t Album.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t Album.failureMessage.getter()
{
  return sub_1008C4974();
}

uint64_t Album.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_100063814(&qword_1010BE358);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_100063814(&qword_1010BD0C8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_100063814(&qword_1010BE8E0);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010BE8E8);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_1008B6D08, 0, 0);
}

uint64_t sub_1008B6D08()
{
  uint64_t v1 = v0[16];
  Album.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000637B8(v0[16], &qword_1010BCBE0);
    uint64_t v4 = Album.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for Album();
      sub_1008CE350(&qword_1010BD148, (void (*)(uint64_t))&type metadata accessor for Album);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      uint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_1008B6FA4;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1008B6FA4()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1008B72D4;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1008B70C0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008B70C0()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  sub_10089BE90(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_1000637B8(v12, &qword_1010BD0C8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    Album.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1008B72D4()
{
  uint64_t v19 = v0;
  if (qword_1010BBBF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_1010BE860);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = sub_100075E68(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for album catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_100063814(&qword_1010C3F50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t Album.augmentMetadata(_:)(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for MusicOffer.Kind();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MusicOffer();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010BE358);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  sub_100063814(&qword_1010BD0C8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  uint64_t v6 = sub_100063814(&qword_1010BE8E0);
  v2[19] = v6;
  v2[20] = *(void *)(v6 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v7 = sub_100063814(&qword_1010BE8E8);
  v2[22] = v7;
  v2[23] = *(void *)(v7 - 8);
  v2[24] = swift_task_alloc();
  return _swift_task_switch(sub_1008B78B4, 0, 0);
}

uint64_t sub_1008B78B4()
{
  uint64_t v1 = Album.catalogID.getter();
  *(void *)(v0 + 200) = v1;
  *(void *)(v0 + 208) = v2;
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    id v5 = [**(id **)(v0 + 32) specialization];
    *(void *)(v0 + 216) = v5;
    if (v5)
    {
      uint64_t v6 = v5;
      self;
      uint64_t v7 = swift_dynamicCastObjCClass();
      *(void *)(v0 + 224) = v7;
      if (v7)
      {
        swift_getKeyPath();
        *(void *)(v0 + 16) = v3;
        *(void *)(v0 + 24) = v4;
        *(void *)(v0 + 232) = type metadata accessor for Album();
        sub_1008CE350(&qword_1010BD148, (void (*)(uint64_t))&type metadata accessor for Album);
        swift_bridgeObjectRetain();
        MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
        sub_100063814(&qword_1010C09B0);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_100E251C0;
        sub_100063814(&qword_1010BD140);
        *(void *)(v8 + 32) = static PartialMusicProperty<A>.offers.getter();
        specialized Array._endMutation()();
        MusicCatalogResourceRequest.properties.setter();
        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 240) = v9;
        *uint64_t v9 = v0;
        v9[1] = sub_1008B7B74;
        uint64_t v10 = *(void *)(v0 + 168);
        uint64_t v11 = *(void *)(v0 + 176);
        return MusicCatalogResourceRequest.response()(v10, v11);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1008B7B74()
{
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1008B81D0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1008B7C90;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008B7C90()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = *(void ***)(v0 + 32);
  MusicCatalogResourceResponse.items.getter();
  sub_10089BE90(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v8 = *v7;
  sub_10006CAB8(v2, v3, &qword_1010BD0C8);
  uint64_t v9 = *(void *)(v1 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v10(v3, 1, v1) == 1)
  {
    uint64_t v11 = *(void *)(v0 + 96);
    sub_1000637B8(*(void *)(v0 + 136), &qword_1010BD0C8);
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    uint64_t v13 = 0;
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 232);
    uint64_t v15 = *(void *)(v0 + 136);
    uint64_t v16 = *(void *)(v0 + 96);
    Album.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v14);
    uint64_t v17 = type metadata accessor for URL();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v13 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      uint64_t v20 = *(void *)(v0 + 96);
      URL._bridgeToObjectiveC()(v19);
      uint64_t v13 = v21;
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  uint64_t v22 = *(void *)(v0 + 232);
  uint64_t v23 = *(void *)(v0 + 144);
  uint64_t v24 = *(void *)(v0 + 128);
  [v8 setOriginalURL:v13];

  sub_10006CAB8(v23, v24, &qword_1010BD0C8);
  if (v10(v24, 1, v22) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 128), &qword_1010BD0C8);
    Class isa = 0;
  }
  else
  {
    uint64_t v26 = *(void *)(v0 + 232);
    uint64_t v27 = *(void *)(v0 + 128);
    uint64_t v28 = Album.offers.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v27, v26);
    if (v28)
    {
      int64_t v29 = *(void *)(v28 + 16);
      if (v29)
      {
        uint64_t v30 = *(void *)(v0 + 80);
        uint64_t v31 = *(void *)(v0 + 56);
        sub_100076F88(0, v29, 0);
        uint64_t v32 = *(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 16);
        v30 += 16;
        uint64_t v54 = v28;
        unint64_t v33 = v28 + ((*(unsigned __int8 *)(v30 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 64));
        uint64_t v57 = *(void *)(v30 + 56);
        uint64_t v58 = v32;
        uint64_t v55 = (void (**)(uint64_t, uint64_t))(v30 - 8);
        uint64_t v56 = (void (**)(uint64_t, uint64_t))(v31 + 8);
        do
        {
          uint64_t v34 = *(void *)(v0 + 88);
          uint64_t v36 = *(void *)(v0 + 64);
          uint64_t v35 = *(void *)(v0 + 72);
          uint64_t v37 = *(void *)(v0 + 48);
          v58(v34, v33, v35);
          MusicOffer.kind.getter();
          uint64_t v38 = MusicOffer.Kind.rawValue.getter();
          uint64_t v40 = v39;
          (*v56)(v36, v37);
          (*v55)(v34, v35);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_100076F88(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v42 = _swiftEmptyArrayStorage[2];
          unint64_t v41 = _swiftEmptyArrayStorage[3];
          if (v42 >= v41 >> 1) {
            sub_100076F88((char *)(v41 > 1), v42 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v42 + 1;
          uint64_t v43 = &_swiftEmptyArrayStorage[2 * v42];
          v43[4] = v38;
          v43[5] = v40;
          v33 += v57;
          --v29;
        }
        while (v29);
      }
      swift_bridgeObjectRelease();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      Class isa = 0;
    }
  }
  uint64_t v44 = *(void **)(v0 + 216);
  uint64_t v46 = *(void *)(v0 + 184);
  uint64_t v45 = *(void *)(v0 + 192);
  uint64_t v48 = *(void *)(v0 + 168);
  uint64_t v47 = *(void *)(v0 + 176);
  uint64_t v49 = *(void *)(v0 + 152);
  uint64_t v50 = *(void *)(v0 + 160);
  uint64_t v51 = *(void *)(v0 + 144);
  [*(id *)(v0 + 224) setOffers:isa v54];

  sub_1000637B8(v51, &qword_1010BD0C8);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v52 = *(uint64_t (**)(void))(v0 + 8);
  return v52();
}

uint64_t sub_1008B81D0()
{
  uint64_t v20 = v0;
  if (qword_1010BBBF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_1010BE860);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = *(void **)(v0 + 216);
    uint64_t v16 = *(void *)(v0 + 184);
    uint64_t v17 = *(void *)(v0 + 176);
    uint64_t v18 = *(void *)(v0 + 192);
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = sub_100075E68(v6, v8, &v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL and offers for album catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_100063814(&qword_1010C3F50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 184);
    uint64_t v10 = *(void *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 176);

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1008B8510(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100081D08;
  return Album.shareURL.getter(a1);
}

uint64_t sub_1008B85A8()
{
  return sub_1008B5854();
}

uint64_t sub_1008B85CC()
{
  return Album.failureMessage.getter();
}

uint64_t sub_1008B85E4(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100081D08;
  return Album.augmentMetadata(_:)(a1);
}

uint64_t Artist.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t Artist.failureMessage.getter()
{
  return sub_1008C4974();
}

uint64_t Artist.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_100063814(&qword_1010BE610);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_100063814(&qword_1010BE900);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_100063814(&qword_1010BE908);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010BE910);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_1008B88A0, 0, 0);
}

uint64_t sub_1008B88A0()
{
  uint64_t v1 = v0[16];
  Artist.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000637B8(v0[16], &qword_1010BCBE0);
    uint64_t v4 = Artist.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for Artist();
      sub_1008CE350(&qword_1010BE918, (void (*)(uint64_t))&type metadata accessor for Artist);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      unint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *unint64_t v8 = v0;
      v8[1] = sub_1008B8B3C;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1008B8B3C()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1008B8E6C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1008B8C58;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008B8C58()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  sub_10089BEB8(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_1000637B8(v12, &qword_1010BE900);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    Artist.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1008B8E6C()
{
  uint64_t v19 = v0;
  if (qword_1010BBBF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_1010BE860);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = sub_100075E68(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for artist catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_100063814(&qword_1010C3F50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1008B9198(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100081D08;
  return Artist.shareURL.getter(a1);
}

uint64_t sub_1008B9230()
{
  return sub_1008B5854();
}

uint64_t sub_1008B9254()
{
  return Artist.failureMessage.getter();
}

uint64_t sub_1008B926C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008B9300, 0, 0);
}

uint64_t sub_1008B9300()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008B93A0;
  uint64_t v2 = *(void *)(v0 + 32);
  return Artist.shareURL.getter(v2);
}

uint64_t sub_1008B93A0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008CE968, 0, 0);
}

uint64_t Composer.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t Composer.failureMessage.getter()
{
  return sub_1008C4974();
}

uint64_t sub_1008B94D8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1008B94F8, 0, 0);
}

uint64_t sub_1008B94F8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  os_log_type_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1008B9594()
{
  return Composer.actionTitle.getter();
}

uint64_t sub_1008B95AC()
{
  return Composer.failureMessage.getter();
}

uint64_t sub_1008B95C4(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1010BED00 + dword_1010BED00);
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100081D08;
  return v5(a1);
}

uint64_t Curator.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t Curator.failureMessage.getter()
{
  return sub_1008C4974();
}

uint64_t sub_1008B96AC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1008B96CC, 0, 0);
}

uint64_t sub_1008B96CC()
{
  Curator.url.getter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008B972C()
{
  return Curator.actionTitle.getter();
}

uint64_t sub_1008B9744()
{
  return Curator.failureMessage.getter();
}

uint64_t sub_1008B975C(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1010BECF8 + dword_1010BECF8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100081D08;
  return v5(a1);
}

uint64_t EditorialItem.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t sub_1008B9824(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1008B9844, 0, 0);
}

uint64_t sub_1008B9844()
{
  EditorialItem.url.getter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008B98A4()
{
  return sub_1008B5658();
}

uint64_t sub_1008B98BC(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1010BECF0 + dword_1010BECF0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100081D08;
  return v5(a1);
}

uint64_t Genre.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t Genre.failureMessage.getter()
{
  return sub_1008C4974();
}

uint64_t sub_1008B99AC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1008B99CC, 0, 0);
}

uint64_t sub_1008B99CC()
{
  Genre.url.getter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008B9A2C()
{
  return sub_1008B5854();
}

uint64_t sub_1008B9A50()
{
  return Genre.failureMessage.getter();
}

uint64_t sub_1008B9A68(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1010BECE8 + dword_1010BECE8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100081D08;
  return v5(a1);
}

uint64_t MusicMovie.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t MusicMovie.failureMessage.getter()
{
  return sub_1008C4974();
}

uint64_t MusicMovie.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_100063814(&qword_1010BE600);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_100063814(&qword_1010BE928);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_100063814(&qword_1010BE930);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010BE938);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_1008B9D38, 0, 0);
}

uint64_t sub_1008B9D38()
{
  uint64_t v1 = v0[16];
  MusicMovie.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000637B8(v0[16], &qword_1010BCBE0);
    uint64_t v4 = MusicMovie.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for MusicMovie();
      sub_1008CE350(&qword_1010BE940, (void (*)(uint64_t))&type metadata accessor for MusicMovie);
      sub_1008CE350(&qword_1010BE948, (void (*)(uint64_t))&type metadata accessor for MusicMovie);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      unint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *unint64_t v8 = v0;
      v8[1] = sub_1008BA008;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1008BA008()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1008BA338;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1008BA124;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008BA124()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  sub_10089C064(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_1000637B8(v12, &qword_1010BE928);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    MusicMovie.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1008BA338()
{
  uint64_t v19 = v0;
  if (qword_1010BBBF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_1010BE860);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = sub_100075E68(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for music movie catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_100063814(&qword_1010C3F50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1008BA664(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100081D08;
  return MusicMovie.shareURL.getter(a1);
}

uint64_t sub_1008BA6FC()
{
  return sub_1008B5854();
}

uint64_t sub_1008BA720()
{
  return MusicMovie.failureMessage.getter();
}

uint64_t sub_1008BA738(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008BA7CC, 0, 0);
}

uint64_t sub_1008BA7CC()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008B93A0;
  uint64_t v2 = *(void *)(v0 + 32);
  return MusicMovie.shareURL.getter(v2);
}

uint64_t MusicVideo.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t MusicVideo.failureMessage.getter()
{
  return sub_1008C4974();
}

uint64_t MusicVideo.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_100063814(&qword_1010BE5F0);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_100063814(&qword_1010BD108);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_100063814(&qword_1010BE958);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010BE960);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_1008BAA94, 0, 0);
}

uint64_t sub_1008BAA94()
{
  uint64_t v1 = v0[16];
  MusicVideo.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000637B8(v0[16], &qword_1010BCBE0);
    uint64_t v4 = MusicVideo.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for MusicVideo();
      sub_1008CE350(&qword_1010BE968, (void (*)(uint64_t))&type metadata accessor for MusicVideo);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      unint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *unint64_t v8 = v0;
      v8[1] = sub_1008BAD30;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1008BAD30()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1008BB060;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1008BAE4C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008BAE4C()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  sub_10089C08C(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_1000637B8(v12, &qword_1010BD108);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    MusicVideo.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1008BB060()
{
  uint64_t v19 = v0;
  if (qword_1010BBBF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_1010BE860);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = sub_100075E68(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for music video catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_100063814(&qword_1010C3F50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1008BB388@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008BDF18(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicVideoFilter.id.getter, a2);
}

uint64_t sub_1008BB3A4(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100081D08;
  return MusicVideo.shareURL.getter(a1);
}

uint64_t sub_1008BB43C()
{
  return sub_1008B5854();
}

uint64_t sub_1008BB460()
{
  return MusicVideo.failureMessage.getter();
}

uint64_t sub_1008BB478(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008BB50C, 0, 0);
}

uint64_t sub_1008BB50C()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008B93A0;
  uint64_t v2 = *(void *)(v0 + 32);
  return MusicVideo.shareURL.getter(v2);
}

uint64_t Playlist.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t Playlist.failureMessage.getter()
{
  return sub_1008C4974();
}

uint64_t Playlist.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_100063814(&qword_1010BE5E0);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_100063814(&qword_1010BD118);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  uint64_t v4 = sub_100063814(&qword_1010BE978);
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010BE980);
  v2[14] = v5;
  v2[15] = *(void *)(v5 - 8);
  v2[16] = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  v2[17] = swift_task_alloc();
  return _swift_task_switch(sub_1008BB7DC, 0, 0);
}

uint64_t sub_1008BB7DC()
{
  uint64_t v1 = v0[17];
  Playlist.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[18] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[19] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000637B8(v0[17], &qword_1010BCBE0);
    uint64_t v4 = Playlist.catalogID.getter();
    v0[20] = v4;
    v0[21] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[22] = type metadata accessor for Playlist();
      sub_1008CE350(&qword_1010BE990, (void (*)(uint64_t))&type metadata accessor for Playlist);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      unint64_t v8 = (void *)swift_task_alloc();
      v0[23] = v8;
      *unint64_t v8 = v0;
      v8[1] = sub_1008BBB30;
      uint64_t v9 = v0[13];
      uint64_t v10 = v0[14];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    char v12 = Playlist.isPublic.getter();
    BOOL v13 = v12 != 2 && (v12 & 1) == 0;
    if (v13 && (Playlist.isShareable.getter() & 1) == 0 && (Playlist.canMakeShareable.getter() & 1) != 0)
    {
      uint64_t v14 = (void *)swift_task_alloc();
      v0[25] = v14;
      void *v14 = v0;
      v14[1] = sub_1008BBE6C;
      uint64_t v15 = v0[9];
      return Playlist.publish()(v15);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[17], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1008BBB30()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1008BC0E0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1008BBC4C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008BBC4C()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  sub_10089C0B4(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[18];
    uint64_t v8 = v0[19];
    uint64_t v10 = v0[15];
    uint64_t v9 = v0[16];
    uint64_t v11 = v0[14];
    uint64_t v12 = v0[10];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_1000637B8(v12, &qword_1010BD118);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[22];
    uint64_t v16 = v0[15];
    uint64_t v15 = v0[16];
    uint64_t v18 = v0[13];
    uint64_t v17 = v0[14];
    uint64_t v19 = v0[11];
    uint64_t v20 = v0[12];
    uint64_t v21 = v0[10];
    Playlist.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1008BBE6C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008BBF68, 0, 0);
}

uint64_t sub_1008BBF68()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = type metadata accessor for Playlist();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[18];
    uint64_t v5 = v0[19];
    uint64_t v6 = v0[4];
    sub_1000637B8(v1, &qword_1010BD118);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, 1, 1, v4);
  }
  else
  {
    Playlist.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1008BC0E0()
{
  uint64_t v19 = v0;
  if (qword_1010BBBF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_1010BE860);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[15];
    uint64_t v16 = v0[14];
    uint64_t v17 = v0[16];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = sub_100075E68(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for playlist catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_100063814(&qword_1010C3F50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[15];
    uint64_t v10 = v0[16];
    uint64_t v12 = v0[14];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[19] + 56))(v0[4], 1, 1, v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t Playlist.publish()(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for Playlist();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MusicLibraryPlaylistResponse();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for MusicLibraryPlaylistRequest.CompletionPolicy();
  v2[11] = v5;
  v2[12] = *(void *)(v5 - 8);
  v2[13] = swift_task_alloc();
  sub_100063814(&qword_1010BE998);
  v2[14] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for MusicLibraryPlaylistRequest();
  v2[15] = v6;
  v2[16] = *(void *)(v6 - 8);
  v2[17] = swift_task_alloc();
  return _swift_task_switch(sub_1008BC618, 0, 0);
}

uint64_t sub_1008BC618()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = type metadata accessor for Curator();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v1, 1, 1, v5);
  static MusicLibraryPlaylistRequest.editing(_:name:description:userImage:isPublic:isVisible:curator:)();
  sub_1000637B8(v1, &qword_1010BE998);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v2, enum case for MusicLibraryPlaylistRequest.CompletionPolicy.afterCloudLibraryChanges(_:), v3);
  MusicLibraryPlaylistRequest.completionPolicy.setter();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[18] = v6;
  void *v6 = v0;
  v6[1] = sub_1008BC784;
  uint64_t v7 = v0[10];
  return MusicLibraryPlaylistRequest.response()(v7);
}

uint64_t sub_1008BC784()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1008BC9B4;
  }
  else {
    uint64_t v2 = sub_1008BC898;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008BC898()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v5 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v6 = v0[8];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v9 = v0[3];
  MusicLibraryPlaylistResponse.playlist.getter();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v9, 0, 1, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1008BC9B4()
{
  uint64_t v25 = v0;
  if (qword_1010BBBF8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100050A90(v5, (uint64_t)qword_1010BE860);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[19];
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[17];
  uint64_t v12 = v0[15];
  uint64_t v14 = v0[6];
  uint64_t v13 = v0[7];
  uint64_t v15 = v0[5];
  if (v8)
  {
    uint64_t v23 = v0[15];
    uint64_t v16 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    sub_1008CE350(&qword_1010BE9A0, (void (*)(uint64_t))&type metadata accessor for Playlist);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v16 + 4) = sub_100075E68(v17, v18, &v24);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    *(_WORD *)(v16 + 12) = 2082;
    v0[2] = v9;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v19 = String.init<A>(describing:)();
    *(void *)(v16 + 14) = sub_100075E68(v19, v20, &v24);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to make playlist=%{public}s public with error=%{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v23);
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[6] + 56))(v0[3], 1, 1, v0[5]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1008BCD08(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100081D08;
  return Playlist.shareURL.getter(a1);
}

uint64_t sub_1008BCDA0()
{
  return Playlist.actionTitle.getter();
}

uint64_t sub_1008BCDB8()
{
  return Playlist.failureMessage.getter();
}

uint64_t sub_1008BCDD0(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008BCE64, 0, 0);
}

uint64_t sub_1008BCE64()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008B93A0;
  uint64_t v2 = *(void *)(v0 + 32);
  return Playlist.shareURL.getter(v2);
}

uint64_t RadioShow.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t RadioShow.failureMessage.getter()
{
  return sub_1008C4974();
}

uint64_t sub_1008BCF50(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1008BCF70, 0, 0);
}

uint64_t sub_1008BCF70()
{
  RadioShow.url.getter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008BCFD0()
{
  return sub_1008B5854();
}

uint64_t sub_1008BCFF4()
{
  return RadioShow.failureMessage.getter();
}

uint64_t sub_1008BD00C(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1010BECE0 + dword_1010BECE0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100081D08;
  return v5(a1);
}

uint64_t RecordLabel.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t RecordLabel.failureMessage.getter()
{
  return sub_1008C4974();
}

uint64_t sub_1008BD0F4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1008BD114, 0, 0);
}

uint64_t sub_1008BD114()
{
  RecordLabel.url.getter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008BD174()
{
  return RecordLabel.actionTitle.getter();
}

uint64_t sub_1008BD18C()
{
  return RecordLabel.failureMessage.getter();
}

uint64_t sub_1008BD1A4(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1010BECD8 + dword_1010BECD8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100081D08;
  return v5(a1);
}

uint64_t SocialProfile.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t SocialProfile.failureMessage.getter()
{
  return sub_1008C4974();
}

uint64_t sub_1008BD28C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1008BD2AC, 0, 0);
}

uint64_t sub_1008BD2AC()
{
  SocialProfile.url.getter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008BD30C()
{
  return SocialProfile.actionTitle.getter();
}

uint64_t sub_1008BD324()
{
  return SocialProfile.failureMessage.getter();
}

uint64_t sub_1008BD33C(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1010BECD0 + dword_1010BECD0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100081D08;
  return v5(a1);
}

uint64_t Song.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t Song.failureMessage.getter()
{
  return sub_1008C4974();
}

uint64_t Song.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_100063814(&qword_1010BE5D0);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_100063814(&qword_1010BD110);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_100063814(&qword_1010BE9B0);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010BE9B8);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_1008BD60C, 0, 0);
}

uint64_t sub_1008BD60C()
{
  uint64_t v1 = v0[16];
  Song.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000637B8(v0[16], &qword_1010BCBE0);
    uint64_t v4 = Song.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for Song();
      sub_1008CE350(&qword_1010BE9C0, (void (*)(uint64_t))&type metadata accessor for Song);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      BOOL v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *BOOL v8 = v0;
      v8[1] = sub_1008BD8A8;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1008BD8A8()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1008BDBD8;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1008BD9C4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008BD9C4()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  sub_10089C0DC(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_1000637B8(v12, &qword_1010BD110);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    Song.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1008BDBD8()
{
  uint64_t v19 = v0;
  if (qword_1010BBBF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_1010BE860);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = sub_100075E68(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for song catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_100063814(&qword_1010C3F50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1008BDF00@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008BDF18(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SongFilter.id.getter, a2);
}

uint64_t sub_1008BDF18@<X0>(void *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_100068990(a1, v5);
  uint64_t result = a2(v5, v6);
  *a3 = result;
  a3[1] = v8;
  return result;
}

uint64_t Song.augmentMetadata(_:)(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  sub_100063814(&qword_1010BE9D0);
  v2[6] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for MusicOffer.Kind();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MusicOffer();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010BE5D0);
  v2[15] = v5;
  v2[16] = *(void *)(v5 - 8);
  v2[17] = swift_task_alloc();
  sub_100063814(&qword_1010BD110);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  uint64_t v6 = sub_100063814(&qword_1010BE9B0);
  v2[22] = v6;
  v2[23] = *(void *)(v6 - 8);
  v2[24] = swift_task_alloc();
  uint64_t v7 = sub_100063814(&qword_1010BE9B8);
  v2[25] = v7;
  v2[26] = *(void *)(v7 - 8);
  v2[27] = swift_task_alloc();
  return _swift_task_switch(sub_1008BE274, 0, 0);
}

uint64_t sub_1008BE274()
{
  uint64_t v1 = Song.catalogID.getter();
  *(void *)(v0 + 224) = v1;
  *(void *)(v0 + 232) = v2;
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v4 = v2;
    id v5 = [**(id **)(v0 + 32) specialization];
    *(void *)(v0 + 240) = v5;
    if (v5)
    {
      uint64_t v6 = v5;
      self;
      uint64_t v7 = swift_dynamicCastObjCClass();
      *(void *)(v0 + 248) = v7;
      if (v7)
      {
        swift_getKeyPath();
        *(void *)(v0 + 16) = v3;
        *(void *)(v0 + 24) = v4;
        *(void *)(v0 + 256) = type metadata accessor for Song();
        sub_1008CE350(&qword_1010BE9C0, (void (*)(uint64_t))&type metadata accessor for Song);
        swift_bridgeObjectRetain();
        MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
        sub_100063814(&qword_1010C09B0);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_100E251C0;
        sub_100063814(&qword_1010BE9D8);
        *(void *)(v8 + 32) = static PartialMusicProperty<A>.offers.getter();
        specialized Array._endMutation()();
        MusicCatalogResourceRequest.properties.setter();
        uint64_t v9 = (void *)swift_task_alloc();
        *(void *)(v0 + 264) = v9;
        *uint64_t v9 = v0;
        v9[1] = sub_1008BE55C;
        uint64_t v10 = *(void *)(v0 + 192);
        uint64_t v11 = *(void *)(v0 + 200);
        return MusicCatalogResourceRequest.response()(v10, v11);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1008BE55C()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1008BEE74;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1008BE678;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008BE678()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v6 = v0[15];
  uint64_t v7 = (void **)v0[4];
  MusicCatalogResourceResponse.items.getter();
  sub_10089C0DC(v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v8 = *v7;
  sub_10006CAB8(v2, v3, &qword_1010BD110);
  uint64_t v9 = *(void *)(v1 - 8);
  uint64_t v80 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v80(v3, 1, v1) == 1)
  {
    uint64_t v10 = v0[14];
    sub_1000637B8(v0[20], &qword_1010BD110);
    uint64_t v11 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
    uint64_t v12 = 0;
    uint64_t v13 = v0;
  }
  else
  {
    uint64_t v14 = v0[32];
    uint64_t v15 = v0[20];
    uint64_t v16 = v0[14];
    Song.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v14);
    uint64_t v17 = type metadata accessor for URL();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v12 = 0;
    uint64_t v13 = v0;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
    {
      uint64_t v20 = v0[14];
      URL._bridgeToObjectiveC()(v19);
      uint64_t v12 = v21;
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v17);
    }
  }
  uint64_t v22 = v13[32];
  uint64_t v23 = v13[21];
  uint64_t v24 = v13[19];
  [v8 setOriginalURL:v12];

  sub_10006CAB8(v23, v24, &qword_1010BD110);
  if (v80(v24, 1, v22) == 1)
  {
    sub_1000637B8(v13[19], &qword_1010BD110);
    Class isa = 0;
  }
  else
  {
    uint64_t v26 = v13[32];
    uint64_t v27 = v13[19];
    Class isa = (void *)Song.offers.getter();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v27, v26);
    if (isa)
    {
      int64_t v28 = isa[2];
      if (v28)
      {
        uint64_t v79 = v9;
        uint64_t v29 = v13[11];
        uint64_t v30 = v13[8];
        sub_100076F88(0, v28, 0);
        uint64_t v31 = *(void (**)(uint64_t, char *, uint64_t))(v29 + 16);
        v29 += 16;
        uint64_t v32 = (char *)isa
            + ((*(unsigned __int8 *)(v29 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 64));
        uint64_t v83 = *(void *)(v29 + 56);
        uint64_t v84 = v31;
        uint64_t v81 = (void (**)(uint64_t, uint64_t))(v29 - 8);
        uint64_t v82 = (void (**)(uint64_t, uint64_t))(v30 + 8);
        do
        {
          uint64_t v33 = v13[12];
          uint64_t v35 = v13[9];
          uint64_t v34 = v13[10];
          uint64_t v36 = v13;
          uint64_t v37 = v13[7];
          v84(v33, v32, v34);
          MusicOffer.kind.getter();
          uint64_t v38 = MusicOffer.Kind.rawValue.getter();
          uint64_t v40 = v39;
          (*v82)(v35, v37);
          (*v81)(v33, v34);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_100076F88(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v42 = _swiftEmptyArrayStorage[2];
          unint64_t v41 = _swiftEmptyArrayStorage[3];
          if (v42 >= v41 >> 1) {
            sub_100076F88((char *)(v41 > 1), v42 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v42 + 1;
          uint64_t v43 = &_swiftEmptyArrayStorage[2 * v42];
          v43[4] = v38;
          v43[5] = v40;
          v32 += v83;
          --v28;
          uint64_t v13 = v36;
        }
        while (v28);
        swift_bridgeObjectRelease();
        uint64_t v9 = v79;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v45 = v13 + 18;
  uint64_t v44 = v13[18];
  uint64_t v46 = v13[32];
  uint64_t v47 = v13[21];
  [(id)v13[31] setOffers:isa];

  uint64_t v48 = &qword_1010BD110;
  sub_10006CAB8(v47, v44, &qword_1010BD110);
  if (v80(v44, 1, v46) == 1) {
    goto LABEL_25;
  }
  uint64_t v49 = v13[32];
  uint64_t v50 = v13[18];
  uint64_t v51 = Song.previewAssets.getter();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v50, v49);
  if (!v51)
  {
LABEL_26:
    uint64_t v57 = v13[13];
    uint64_t v58 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 1, 1, v58);
    uint64_t v59 = 0;
    goto LABEL_27;
  }
  uint64_t v52 = *(void *)(v51 + 16);
  uint64_t v53 = type metadata accessor for PreviewAsset();
  uint64_t v54 = *(void *)(v53 - 8);
  if (v52)
  {
    (*(void (**)(void, unint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v13[6], v51+ ((*(unsigned __int8 *)(*(void *)(v53 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v53 - 8) + 80)), v53);
    uint64_t v55 = 0;
  }
  else
  {
    uint64_t v55 = 1;
  }
  uint64_t v45 = v13 + 6;
  uint64_t v56 = v13[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v56, v55, 1, v53);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v56, 1, v53) == 1)
  {
    uint64_t v48 = (uint64_t *)&unk_1010BE9D0;
LABEL_25:
    sub_1000637B8(*v45, v48);
    goto LABEL_26;
  }
  uint64_t v72 = v13[13];
  uint64_t v73 = v13[6];
  PreviewAsset.url.getter();
  (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v73, v53);
  uint64_t v74 = type metadata accessor for URL();
  uint64_t v75 = *(void *)(v74 - 8);
  uint64_t v59 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v72, 1, v74) != 1)
  {
    uint64_t v77 = v13[13];
    URL._bridgeToObjectiveC()(v76);
    uint64_t v59 = v78;
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v77, v74);
  }
LABEL_27:
  uint64_t v61 = (void *)v13[30];
  uint64_t v60 = (void *)v13[31];
  uint64_t v63 = v13[26];
  uint64_t v62 = v13[27];
  uint64_t v65 = v13[24];
  uint64_t v64 = v13[25];
  uint64_t v66 = v13[22];
  uint64_t v67 = v13[23];
  uint64_t v68 = v13;
  uint64_t v69 = v13[21];
  [v60 setPreviewURL:v59];

  sub_1000637B8(v69, &qword_1010BD110);
  (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v65, v66);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v70 = (uint64_t (*)(void))v68[1];
  return v70();
}

uint64_t sub_1008BEE74()
{
  uint64_t v20 = v0;
  if (qword_1010BBBF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_1010BE860);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = *(void **)(v0 + 240);
    uint64_t v16 = *(void *)(v0 + 208);
    uint64_t v17 = *(void *)(v0 + 200);
    uint64_t v18 = *(void *)(v0 + 216);
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = sub_100075E68(v6, v8, &v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL and offers for song catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_100063814(&qword_1010C3F50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v17);
  }
  else
  {
    uint64_t v11 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v12 = *(void *)(v0 + 200);

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1008BF1DC(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100081D08;
  return Song.shareURL.getter(a1);
}

uint64_t sub_1008BF274()
{
  return sub_1008B5854();
}

uint64_t sub_1008BF298()
{
  return Song.failureMessage.getter();
}

uint64_t sub_1008BF2B0(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100081D08;
  return Song.augmentMetadata(_:)(a1);
}

uint64_t Station.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t Station.failureMessage.getter()
{
  return sub_1008C4974();
}

uint64_t Station.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_100063814(&qword_1010BE5C0);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_100063814(&qword_1010C2900);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_100063814(&qword_1010BE9E8);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010BE9F0);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_1008BF568, 0, 0);
}

uint64_t sub_1008BF568()
{
  uint64_t v1 = v0[16];
  Station.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000637B8(v0[16], &qword_1010BCBE0);
    uint64_t v4 = Station.id.getter();
    uint64_t v6 = v5;
    v0[19] = v4;
    v0[20] = v5;
    swift_getKeyPath();
    v0[2] = v4;
    v0[3] = v6;
    v0[21] = type metadata accessor for Station();
    sub_1008CE350(&qword_1010BE9F8, (void (*)(uint64_t))&type metadata accessor for Station);
    swift_bridgeObjectRetain();
    MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[22] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1008BF7E8;
    uint64_t v8 = v0[12];
    uint64_t v9 = v0[13];
    return MusicCatalogResourceRequest.response()(v8, v9);
  }
  else
  {
    uint64_t v10 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v10, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v10, 0, 1, v2);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1008BF7E8()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1008BFB18;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1008BF904;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008BF904()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  sub_10089C1CC(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_1000637B8(v12, &qword_1010C2900);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    Station.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1008BFB18()
{
  uint64_t v19 = v0;
  if (qword_1010BBBF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_1010BE860);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = sub_100075E68(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for station catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_100063814(&qword_1010C3F50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1008BFE44(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100081D08;
  return Station.shareURL.getter(a1);
}

uint64_t sub_1008BFEDC()
{
  return Station.actionTitle.getter();
}

uint64_t sub_1008BFEF4()
{
  return Station.failureMessage.getter();
}

uint64_t sub_1008BFF0C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008BFFA0, 0, 0);
}

uint64_t sub_1008BFFA0()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008B93A0;
  uint64_t v2 = *(void *)(v0 + 32);
  return Station.shareURL.getter(v2);
}

uint64_t Track.actionTitle.getter()
{
  uint64_t v0 = type metadata accessor for Song();
  uint64_t v32 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  uint64_t v34 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = type metadata accessor for MusicVideo();
  uint64_t v30 = *(void *)(v12 - 8);
  uint64_t v31 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Track();
  uint64_t v16 = *(void *)(v15 - 8);
  __n128 v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v19, v33, v15, v17);
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v19, v15);
  if (v20 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v19, v15);
    uint64_t v21 = v32;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v2, v19, v0);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    uint64_t v22 = v0;
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v23 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v24 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v2, v22);
  }
  else if (v20 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v19, v15);
    uint64_t v26 = v30;
    uint64_t v25 = v31;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v14, v19, v31);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v27 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v24 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v25);
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v28 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v24 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  return v24;
}

uint64_t Track.failureMessage.getter()
{
  uint64_t v31 = type metadata accessor for Song();
  uint64_t v33 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  uint64_t v34 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = type metadata accessor for MusicVideo();
  uint64_t v29 = *(void *)(v12 - 8);
  uint64_t v30 = v12;
  __chkstk_darwin(v12);
  uint64_t v32 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Track();
  uint64_t v15 = *(void *)(v14 - 8);
  __n128 v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v18, v0, v14, v16);
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v18, v14);
  if (v19 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v18, v14);
    uint64_t v20 = v33;
    uint64_t v21 = v31;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v2, v18, v31);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v22 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v23 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v21);
  }
  else if (v19 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v18, v14);
    uint64_t v25 = v29;
    uint64_t v24 = v30;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v32, v18, v30);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v26 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v23 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v32, v24);
  }
  else
  {
    uint64_t v23 = Track.failureMessage.getter();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  return v23;
}

uint64_t Track.shareURL.getter(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for Song();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MusicVideo();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Track();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  return _swift_task_switch(sub_1008C0D60, 0, 0);
}

uint64_t sub_1008C0D60()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[3], v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for Track.song(_:))
  {
    uint64_t v5 = v0[12];
    uint64_t v7 = v0[5];
    uint64_t v6 = v0[6];
    uint64_t v8 = v0[4];
    (*(void (**)(uint64_t, void))(v0[11] + 96))(v5, v0[10]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v5, v8);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[14] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1008C119C;
    uint64_t v10 = v0[2];
    return Song.shareURL.getter(v10);
  }
  else if (v4 == enum case for Track.musicVideo(_:))
  {
    uint64_t v12 = v0[12];
    uint64_t v13 = v0[9];
    uint64_t v14 = v0[7];
    uint64_t v15 = v0[8];
    (*(void (**)(uint64_t, void))(v0[11] + 96))(v12, v0[10]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v13, v12, v14);
    __n128 v16 = (void *)swift_task_alloc();
    v0[13] = v16;
    *__n128 v16 = v0;
    v16[1] = sub_1008C1008;
    uint64_t v17 = v0[2];
    return MusicVideo.shareURL.getter(v17);
  }
  else
  {
    uint64_t v18 = v0[2];
    uint64_t v19 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_1008C1008()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008C1104, 0, 0);
}

uint64_t sub_1008C1104()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008C119C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008C1298, 0, 0);
}

uint64_t sub_1008C1298()
{
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008C1338(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100081D08;
  return Track.shareURL.getter(a1);
}

uint64_t sub_1008C13D8(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008C146C, 0, 0);
}

uint64_t sub_1008C146C()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008B93A0;
  uint64_t v2 = *(void *)(v0 + 32);
  return Track.shareURL.getter(v2);
}

uint64_t TVEpisode.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t TVEpisode.failureMessage.getter()
{
  return sub_1008C4974();
}

uint64_t TVEpisode.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_100063814(&qword_1010BE5B0);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_100063814(&qword_1010BEA10);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_100063814(&qword_1010BEA18);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010BEA20);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_1008C172C, 0, 0);
}

uint64_t sub_1008C172C()
{
  uint64_t v1 = v0[16];
  TVEpisode.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000637B8(v0[16], &qword_1010BCBE0);
    uint64_t v4 = TVEpisode.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for TVEpisode();
      sub_1008CE350(&qword_1010BEA28, (void (*)(uint64_t))&type metadata accessor for TVEpisode);
      sub_1008CE350(&qword_1010BEA30, (void (*)(uint64_t))&type metadata accessor for TVEpisode);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      uint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_1008C19FC;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1008C19FC()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1008C1D2C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1008C1B18;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008C1B18()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  sub_10089C104(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_1000637B8(v12, &qword_1010BEA10);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    TVEpisode.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1008C1D2C()
{
  uint64_t v19 = v0;
  if (qword_1010BBBF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_1010BE860);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = sub_100075E68(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for TVEpisode catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_100063814(&qword_1010C3F50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1008C2058(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100081D08;
  return TVEpisode.shareURL.getter(a1);
}

uint64_t sub_1008C20F0()
{
  return TVEpisode.actionTitle.getter();
}

uint64_t sub_1008C2108()
{
  return TVEpisode.failureMessage.getter();
}

uint64_t sub_1008C2120(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008C21B4, 0, 0);
}

uint64_t sub_1008C21B4()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008B93A0;
  uint64_t v2 = *(void *)(v0 + 32);
  return TVEpisode.shareURL.getter(v2);
}

uint64_t TVSeason.actionTitle.getter()
{
  return sub_1008C4974();
}

uint64_t TVSeason.failureMessage.getter()
{
  return sub_1008C4974();
}

uint64_t TVSeason.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_100063814(&qword_1010BE5A0);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_100063814(&qword_1010BEA40);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_100063814(&qword_1010BEA48);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010BEA50);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_1008C247C, 0, 0);
}

uint64_t sub_1008C247C()
{
  uint64_t v1 = v0[16];
  TVSeason.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000637B8(v0[16], &qword_1010BCBE0);
    uint64_t v4 = TVSeason.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for TVSeason();
      sub_1008CE350(&qword_1010BEA58, (void (*)(uint64_t))&type metadata accessor for TVSeason);
      sub_1008CE350(&qword_1010BEA60, (void (*)(uint64_t))&type metadata accessor for TVSeason);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      unint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *unint64_t v8 = v0;
      v8[1] = sub_1008C274C;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1008C274C()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1008C2A7C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1008C2868;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008C2868()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  sub_10089C12C(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_1000637B8(v12, &qword_1010BEA40);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    TVSeason.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1008C2A7C()
{
  uint64_t v19 = v0;
  if (qword_1010BBBF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_1010BE860);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = sub_100075E68(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for TVSeason catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_100063814(&qword_1010C3F50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1008C2DA8(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100081D08;
  return TVSeason.shareURL.getter(a1);
}

uint64_t sub_1008C2E40()
{
  return sub_1008B5854();
}

uint64_t sub_1008C2E64()
{
  return TVSeason.failureMessage.getter();
}

uint64_t sub_1008C2E7C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008C2F10, 0, 0);
}

uint64_t sub_1008C2F10()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008B93A0;
  uint64_t v2 = *(void *)(v0 + 32);
  return TVSeason.shareURL.getter(v2);
}

uint64_t TVShow.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_100063814(&qword_1010BE590);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_100063814(&qword_1010BEA70);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_100063814(&qword_1010BEA78);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010BEA80);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_1008C3198, 0, 0);
}

uint64_t sub_1008C3198()
{
  uint64_t v1 = v0[16];
  TVShow.url.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000637B8(v0[16], &qword_1010BCBE0);
    uint64_t v4 = TVShow.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for TVShow();
      sub_1008CE350(&qword_1010BEA88, (void (*)(uint64_t))&type metadata accessor for TVShow);
      sub_1008CE350(&qword_1010BEA90, (void (*)(uint64_t))&type metadata accessor for TVShow);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      unint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *unint64_t v8 = v0;
      v8[1] = sub_1008C3468;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1008C3468()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1008C3798;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1008C3584;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008C3584()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  sub_10089C154(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_1000637B8(v12, &qword_1010BEA70);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    TVShow.url.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1008C3798()
{
  uint64_t v19 = v0;
  if (qword_1010BBBF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_1010BE860);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = sub_100075E68(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for TVShow catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_100063814(&qword_1010C3F50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1008C3AC4(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100081D08;
  return TVShow.shareURL.getter(a1);
}

uint64_t sub_1008C3B5C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008C3BF0, 0, 0);
}

uint64_t sub_1008C3BF0()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008B93A0;
  uint64_t v2 = *(void *)(v0 + 32);
  return TVShow.shareURL.getter(v2);
}

uint64_t UploadedAudio.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_100063814(&qword_1010BE580);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_100063814(&qword_1010BEAA0);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_100063814(&qword_1010BEAA8);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010BEAB0);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_1008C3E78, 0, 0);
}

uint64_t sub_1008C3E78()
{
  uint64_t v1 = v0[16];
  UploadedAudio.postURL.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000637B8(v0[16], &qword_1010BCBE0);
    uint64_t v4 = UploadedAudio.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for UploadedAudio();
      sub_1008CE350(&qword_1010BEAB8, (void (*)(uint64_t))&type metadata accessor for UploadedAudio);
      sub_1008CE350(&qword_1010BEAC0, (void (*)(uint64_t))&type metadata accessor for UploadedAudio);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      unint64_t v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *unint64_t v8 = v0;
      v8[1] = sub_1008C4148;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1008C4148()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1008C4478;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1008C4264;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008C4264()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  sub_10089C17C(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_1000637B8(v12, &qword_1010BEAA0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    UploadedAudio.postURL.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1008C4478()
{
  uint64_t v19 = v0;
  if (qword_1010BBBF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_1010BE860);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = sub_100075E68(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for uploaded audio catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_100063814(&qword_1010C3F50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1008C47A4(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100081D08;
  return UploadedAudio.shareURL.getter(a1);
}

uint64_t sub_1008C483C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008C48D0, 0, 0);
}

uint64_t sub_1008C48D0()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008B93A0;
  uint64_t v2 = *(void *)(v0 + 32);
  return UploadedAudio.shareURL.getter(v2);
}

uint64_t sub_1008C4974()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  unint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t UploadedVideo.shareURL.getter(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_100063814(&qword_1010BE570);
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  sub_100063814(&qword_1010BEAD0);
  v2[9] = swift_task_alloc();
  uint64_t v4 = sub_100063814(&qword_1010BEAD8);
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010BEAE0);
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_1008C4D38, 0, 0);
}

uint64_t sub_1008C4D38()
{
  uint64_t v1 = v0[16];
  UploadedVideo.postURL.getter();
  uint64_t v2 = type metadata accessor for URL();
  v0[17] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[18] = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000637B8(v0[16], &qword_1010BCBE0);
    uint64_t v4 = UploadedVideo.catalogID.getter();
    v0[19] = v4;
    v0[20] = v5;
    if (v5)
    {
      uint64_t v6 = v4;
      uint64_t v7 = v5;
      swift_getKeyPath();
      v0[2] = v6;
      v0[3] = v7;
      v0[21] = type metadata accessor for UploadedVideo();
      sub_1008CE350(&qword_1010BEAE8, (void (*)(uint64_t))&type metadata accessor for UploadedVideo);
      sub_1008CE350(&qword_1010BEAF0, (void (*)(uint64_t))&type metadata accessor for UploadedVideo);
      swift_bridgeObjectRetain();
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      id v8 = (void *)swift_task_alloc();
      v0[22] = v8;
      *id v8 = v0;
      v8[1] = sub_1008C5008;
      uint64_t v9 = v0[12];
      uint64_t v10 = v0[13];
      return MusicCatalogResourceRequest.response()(v9, v10);
    }
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v3 + 56))(v0[4], 1, 1, v2);
  }
  else
  {
    uint64_t v11 = v0[4];
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 32))(v11, v0[16], v2);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1008C5008()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1008C5338;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1008C5124;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008C5124()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v5 = v0[6];
  MusicCatalogResourceResponse.items.getter();
  sub_10089C1A4(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v1) == 1)
  {
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    uint64_t v11 = v0[13];
    uint64_t v12 = v0[9];
    uint64_t v13 = v0[4];
    (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    sub_1000637B8(v12, &qword_1010BEAD0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  else
  {
    uint64_t v14 = v0[21];
    uint64_t v16 = v0[14];
    uint64_t v15 = v0[15];
    uint64_t v18 = v0[12];
    uint64_t v17 = v0[13];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[9];
    UploadedVideo.postURL.getter();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1008C5338()
{
  uint64_t v19 = v0;
  if (qword_1010BBBF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_1010BE860);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v15 = v0[14];
    uint64_t v16 = v0[13];
    uint64_t v17 = v0[15];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v4 + 4) = sub_100075E68(v6, v8, &v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v4 + 14) = v9;
    *uint64_t v5 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to get share URL for uploaded video catalogID: %{public}s: %{public}@", (uint8_t *)v4, 0x16u);
    sub_100063814(&qword_1010C3F50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v16);
  }
  else
  {
    uint64_t v11 = v0[14];
    uint64_t v10 = v0[15];
    uint64_t v12 = v0[13];

    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[18] + 56))(v0[4], 1, 1, v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1008C5664(uint64_t a1)
{
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_100081D08;
  return UploadedVideo.shareURL.getter(a1);
}

uint64_t sub_1008C56FC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008C5790, 0, 0);
}

uint64_t sub_1008C5790()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008B93A0;
  uint64_t v2 = *(void *)(v0 + 32);
  return UploadedVideo.shareURL.getter(v2);
}

uint64_t GenericMusicItem.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v100 = a1;
  uint64_t v54 = type metadata accessor for UploadedVideo();
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v52 = (char *)&v52 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for UploadedAudio();
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v55 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for TVShow();
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v58 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for TVSeason();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v61 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for TVEpisode();
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v64 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for Station();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v67 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for Song();
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v70 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for SocialProfile();
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v73 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for RecordLabel();
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v76 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RadioShow();
  uint64_t v80 = *(void *)(v10 - 8);
  uint64_t v81 = v10;
  __chkstk_darwin(v10);
  uint64_t v79 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Playlist();
  uint64_t v83 = *(void *)(v12 - 8);
  uint64_t v84 = v12;
  __chkstk_darwin(v12);
  uint64_t v82 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for MusicVideo();
  uint64_t v86 = *(void *)(v14 - 8);
  uint64_t v87 = v14;
  __chkstk_darwin(v14);
  uint64_t v85 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for MusicMovie();
  uint64_t v89 = *(void *)(v16 - 8);
  uint64_t v90 = v16;
  __chkstk_darwin(v16);
  id v88 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Genre();
  uint64_t v92 = *(void *)(v18 - 8);
  uint64_t v93 = v18;
  __chkstk_darwin(v18);
  uint64_t v91 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for EditorialItem();
  uint64_t v95 = *(void *)(v20 - 8);
  uint64_t v96 = v20;
  __chkstk_darwin(v20);
  uint64_t v94 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Curator();
  uint64_t v97 = *(void *)(v22 - 8);
  uint64_t v98 = v22;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Artist();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v52 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for Album();
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v52 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for GenericMusicItem();
  uint64_t v34 = *(void *)(v33 - 8);
  __n128 v35 = __chkstk_darwin(v33);
  uint64_t v37 = (char *)&v52 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v34 + 16))(v37, v99, v33, v35);
  int v38 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v37, v33);
  if (v38 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v32, v37, v29);
    Album.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  }
  uint64_t v40 = v100;
  if (v38 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v28, v37, v25);
    Artist.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  }
  uint64_t v41 = v100;
  if (v38 == enum case for GenericMusicItem.composer(_:) || v38 == enum case for GenericMusicItem.creditArtist(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v33);
LABEL_8:
    uint64_t v42 = type metadata accessor for URL();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
  }
  if (v38 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v44 = v97;
    uint64_t v43 = v98;
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v24, v37, v98);
    Curator.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v24, v43);
  }
  if (v38 == enum case for GenericMusicItem.editorialItem(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v46 = v94;
    uint64_t v45 = v95;
    uint64_t v47 = v96;
    (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v94, v37, v96);
    EditorialItem.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  }
  if (v38 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v46 = v91;
    uint64_t v45 = v92;
    uint64_t v47 = v93;
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v91, v37, v93);
    Genre.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  }
  if (v38 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v46 = v88;
    uint64_t v45 = v89;
    uint64_t v47 = v90;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v88, v37, v90);
    MusicMovie.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  }
  if (v38 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v46 = v85;
    uint64_t v45 = v86;
    uint64_t v47 = v87;
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v85, v37, v87);
    MusicVideo.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  }
  if (v38 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v46 = v82;
    uint64_t v45 = v83;
    uint64_t v47 = v84;
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v82, v37, v84);
    Playlist.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  }
  if (v38 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v45 = v80;
    uint64_t v47 = v81;
    uint64_t v46 = v79;
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v79, v37, v81);
    RadioShow.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  }
  if (v38 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v45 = v77;
    uint64_t v46 = v76;
    uint64_t v47 = v78;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v76, v37, v78);
    RecordLabel.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  }
  if (v38 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v45 = v74;
    uint64_t v46 = v73;
    uint64_t v47 = v75;
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v73, v37, v75);
    SocialProfile.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  }
  if (v38 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v45 = v71;
    uint64_t v46 = v70;
    uint64_t v47 = v72;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v37, v72);
    Song.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v47);
  }
  if (v38 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v48 = v68;
    uint64_t v49 = v67;
    uint64_t v50 = v69;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v67, v37, v69);
    Station.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  }
  if (v38 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v48 = v65;
    uint64_t v49 = v64;
    uint64_t v50 = v66;
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v64, v37, v66);
    TVEpisode.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  }
  if (v38 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v48 = v62;
    uint64_t v49 = v61;
    uint64_t v50 = v63;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v61, v37, v63);
    TVSeason.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  }
  if (v38 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v48 = v59;
    uint64_t v49 = v58;
    uint64_t v50 = v60;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v58, v37, v60);
    TVShow.url.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  }
  if (v38 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v48 = v56;
    uint64_t v49 = v55;
    uint64_t v50 = v57;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v55, v37, v57);
    UploadedAudio.postURL.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  }
  if (v38 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    uint64_t v48 = v53;
    uint64_t v49 = v52;
    uint64_t v50 = v54;
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v52, v37, v54);
    UploadedVideo.postURL.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  }
  if (v38 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v37, v33);
    swift_bridgeObjectRelease();
    uint64_t v41 = v40;
    goto LABEL_8;
  }
  uint64_t v51 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v40, 1, 1, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v37, v33);
}

uint64_t GenericMusicItem.shareURL.getter(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for UploadedVideo();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UploadedAudio();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for TVShow();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for TVSeason();
  v2[13] = v6;
  v2[14] = *(void *)(v6 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for TVEpisode();
  v2[16] = v7;
  v2[17] = *(void *)(v7 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Song();
  v2[19] = v8;
  v2[20] = *(void *)(v8 - 8);
  v2[21] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Playlist();
  v2[22] = v9;
  v2[23] = *(void *)(v9 - 8);
  v2[24] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MusicVideo();
  v2[25] = v10;
  v2[26] = *(void *)(v10 - 8);
  v2[27] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for MusicMovie();
  v2[28] = v11;
  v2[29] = *(void *)(v11 - 8);
  v2[30] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Artist();
  v2[31] = v12;
  v2[32] = *(void *)(v12 - 8);
  v2[33] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for Album();
  v2[34] = v13;
  v2[35] = *(void *)(v13 - 8);
  v2[36] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for GenericMusicItem();
  v2[37] = v14;
  v2[38] = *(void *)(v14 - 8);
  v2[39] = swift_task_alloc();
  return _swift_task_switch(sub_1008C6FC8, 0, 0);
}

uint64_t sub_1008C6FC8()
{
  uint64_t v2 = v0[38];
  uint64_t v1 = v0[39];
  uint64_t v3 = v0[37];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[3], v3);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for GenericMusicItem.album(_:))
  {
    uint64_t v5 = v0[39];
    uint64_t v6 = v0[36];
    uint64_t v7 = v0[34];
    uint64_t v8 = v0[35];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v5, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v5, v7);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[40] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1008C7B98;
    uint64_t v10 = v0[2];
    return Album.shareURL.getter(v10);
  }
  if (v4 == enum case for GenericMusicItem.artist(_:))
  {
    uint64_t v12 = v0[39];
    uint64_t v14 = v0[32];
    uint64_t v13 = v0[33];
    uint64_t v15 = v0[31];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v12, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v13, v12, v15);
    uint64_t v16 = (void *)swift_task_alloc();
    v0[41] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_1008C7DB4;
    uint64_t v17 = v0[2];
    return Artist.shareURL.getter(v17);
  }
  if (v4 == enum case for GenericMusicItem.composer(_:)) {
    goto LABEL_20;
  }
  if (v4 == enum case for GenericMusicItem.creditArtist(_:))
  {
LABEL_11:
    uint64_t v18 = v0[2];
    (*(void (**)(void, void))(v0[38] + 8))(v0[39], v0[37]);
    uint64_t v19 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
LABEL_21:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  BOOL v20 = v4 == enum case for GenericMusicItem.curator(_:) || v4 == enum case for GenericMusicItem.editorialItem(_:);
  if (v20 || v4 == enum case for GenericMusicItem.genre(_:)) {
    goto LABEL_20;
  }
  if (v4 == enum case for GenericMusicItem.musicMovie(_:))
  {
    uint64_t v24 = v0[39];
    uint64_t v26 = v0[29];
    uint64_t v25 = v0[30];
    uint64_t v27 = v0[28];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v24, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v25, v24, v27);
    uint64_t v28 = (void *)swift_task_alloc();
    v0[42] = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_1008C7FD0;
    uint64_t v29 = v0[2];
    return MusicMovie.shareURL.getter(v29);
  }
  if (v4 == enum case for GenericMusicItem.musicVideo(_:))
  {
    uint64_t v30 = v0[39];
    uint64_t v32 = v0[26];
    uint64_t v31 = v0[27];
    uint64_t v33 = v0[25];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v30, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v31, v30, v33);
    uint64_t v34 = (void *)swift_task_alloc();
    v0[43] = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_1008C81EC;
    uint64_t v35 = v0[2];
    return MusicVideo.shareURL.getter(v35);
  }
  if (v4 == enum case for GenericMusicItem.playlist(_:))
  {
    uint64_t v36 = v0[39];
    uint64_t v38 = v0[23];
    uint64_t v37 = v0[24];
    uint64_t v39 = v0[22];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v36, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v37, v36, v39);
    uint64_t v40 = (void *)swift_task_alloc();
    v0[44] = v40;
    void *v40 = v0;
    v40[1] = sub_1008C8408;
    uint64_t v41 = v0[2];
    return Playlist.shareURL.getter(v41);
  }
  if (v4 == enum case for GenericMusicItem.radioShow(_:)
    || v4 == enum case for GenericMusicItem.recordLabel(_:)
    || v4 == enum case for GenericMusicItem.socialProfile(_:))
  {
    goto LABEL_20;
  }
  if (v4 == enum case for GenericMusicItem.song(_:))
  {
    uint64_t v42 = v0[39];
    uint64_t v44 = v0[20];
    uint64_t v43 = v0[21];
    uint64_t v45 = v0[19];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v42, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v43, v42, v45);
    uint64_t v46 = (void *)swift_task_alloc();
    v0[45] = v46;
    *uint64_t v46 = v0;
    v46[1] = sub_1008C8624;
    uint64_t v47 = v0[2];
    return Song.shareURL.getter(v47);
  }
  if (v4 == enum case for GenericMusicItem.station(_:))
  {
LABEL_20:
    uint64_t v22 = v0[2];
    (*(void (**)(void, void))(v0[38] + 8))(v0[39], v0[37]);
    GenericMusicItem.url.getter(v22);
    goto LABEL_21;
  }
  if (v4 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    uint64_t v48 = v0[39];
    uint64_t v50 = v0[17];
    uint64_t v49 = v0[18];
    uint64_t v51 = v0[16];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v48, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 32))(v49, v48, v51);
    uint64_t v52 = (void *)swift_task_alloc();
    v0[46] = v52;
    void *v52 = v0;
    v52[1] = sub_1008C8840;
    uint64_t v53 = v0[2];
    return TVEpisode.shareURL.getter(v53);
  }
  else if (v4 == enum case for GenericMusicItem.tvSeason(_:))
  {
    uint64_t v54 = v0[39];
    uint64_t v56 = v0[14];
    uint64_t v55 = v0[15];
    uint64_t v57 = v0[13];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v54, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 32))(v55, v54, v57);
    uint64_t v58 = (void *)swift_task_alloc();
    v0[47] = v58;
    void *v58 = v0;
    v58[1] = sub_1008C8A5C;
    uint64_t v59 = v0[2];
    return TVSeason.shareURL.getter(v59);
  }
  else if (v4 == enum case for GenericMusicItem.tvShow(_:))
  {
    uint64_t v60 = v0[39];
    uint64_t v62 = v0[11];
    uint64_t v61 = v0[12];
    uint64_t v63 = v0[10];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v60, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v61, v60, v63);
    uint64_t v64 = (void *)swift_task_alloc();
    v0[48] = v64;
    void *v64 = v0;
    v64[1] = sub_1008C8C78;
    uint64_t v65 = v0[2];
    return TVShow.shareURL.getter(v65);
  }
  else if (v4 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    uint64_t v66 = v0[39];
    uint64_t v68 = v0[8];
    uint64_t v67 = v0[9];
    uint64_t v69 = v0[7];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v66, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v67, v66, v69);
    uint64_t v70 = (void *)swift_task_alloc();
    v0[49] = v70;
    *uint64_t v70 = v0;
    v70[1] = sub_1008C8E94;
    uint64_t v71 = v0[2];
    return UploadedAudio.shareURL.getter(v71);
  }
  else
  {
    if (v4 != enum case for GenericMusicItem.uploadedVideo(_:))
    {
      if (v4 != enum case for GenericMusicItem.other(_:))
      {
        uint64_t v79 = v0[38];
        uint64_t v78 = v0[39];
        uint64_t v80 = v0[37];
        GenericMusicItem.url.getter(v0[2]);
        (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
        goto LABEL_21;
      }
      goto LABEL_11;
    }
    uint64_t v72 = v0[39];
    uint64_t v74 = v0[5];
    uint64_t v73 = v0[6];
    uint64_t v75 = v0[4];
    (*(void (**)(uint64_t, void))(v0[38] + 96))(v72, v0[37]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32))(v73, v72, v75);
    uint64_t v76 = (void *)swift_task_alloc();
    v0[50] = v76;
    *uint64_t v76 = v0;
    v76[1] = sub_1008C90B0;
    uint64_t v77 = v0[2];
    return UploadedVideo.shareURL.getter(v77);
  }
}

uint64_t sub_1008C7B98()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008C7C94, 0, 0);
}

uint64_t sub_1008C7C94()
{
  (*(void (**)(void, void))(v0[35] + 8))(v0[36], v0[34]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008C7DB4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008C7EB0, 0, 0);
}

uint64_t sub_1008C7EB0()
{
  (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008C7FD0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008C80CC, 0, 0);
}

uint64_t sub_1008C80CC()
{
  (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008C81EC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008C82E8, 0, 0);
}

uint64_t sub_1008C82E8()
{
  (*(void (**)(void, void))(v0[26] + 8))(v0[27], v0[25]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008C8408()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008C8504, 0, 0);
}

uint64_t sub_1008C8504()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008C8624()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008C8720, 0, 0);
}

uint64_t sub_1008C8720()
{
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008C8840()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008C893C, 0, 0);
}

uint64_t sub_1008C893C()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008C8A5C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008C8B58, 0, 0);
}

uint64_t sub_1008C8B58()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008C8C78()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008C8D74, 0, 0);
}

uint64_t sub_1008C8D74()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008C8E94()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008C8F90, 0, 0);
}

uint64_t sub_1008C8F90()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008C90B0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008C91AC, 0, 0);
}

uint64_t sub_1008C91AC()
{
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t GenericMusicItem.actionTitle.getter()
{
  uint64_t v67 = type metadata accessor for UploadedVideo();
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v65 = (char *)&v64 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for UploadedAudio();
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v68 = (char *)&v64 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for TVShow();
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v71 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for TVSeason();
  uint64_t v78 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v77 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for TVEpisode();
  uint64_t v75 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v74 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for Station();
  uint64_t v81 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v80 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for Song();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v83 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for SocialProfile();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v86 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for RecordLabel();
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v89 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for RadioShow();
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v92 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for Playlist();
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v95 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for MusicVideo();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v98 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MusicMovie();
  uint64_t v102 = *(void *)(v12 - 8);
  uint64_t v103 = v12;
  __chkstk_darwin(v12);
  uint64_t v101 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Genre();
  uint64_t v105 = *(void *)(v14 - 8);
  uint64_t v106 = v14;
  __chkstk_darwin(v14);
  uint64_t v104 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Curator();
  uint64_t v108 = *(void *)(v16 - 8);
  uint64_t v109 = v16;
  __chkstk_darwin(v16);
  long long v107 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Composer();
  uint64_t v111 = *(void *)(v18 - 8);
  uint64_t v112 = v18;
  __chkstk_darwin(v18);
  uint64_t v110 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Artist();
  uint64_t v114 = *(void *)(v20 - 8);
  uint64_t v115 = v20;
  __chkstk_darwin(v20);
  uint64_t v113 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Locale();
  __chkstk_darwin(v22 - 8);
  uint64_t v117 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for String.LocalizationValue();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v64 - v29;
  uint64_t v31 = type metadata accessor for Album();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v64 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for GenericMusicItem();
  uint64_t v36 = *(void *)(v35 - 8);
  __n128 v37 = __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v64 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v36 + 16))(v39, v116, v35, v37);
  int v40 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v39, v35);
  if (v40 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v39, v31);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v41 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    return v42;
  }
  if (v40 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v44 = v113;
    uint64_t v43 = v114;
    uint64_t v45 = v39;
    uint64_t v46 = v115;
    (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v113, v45, v115);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v47 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    uint64_t v48 = *(void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v49 = v44;
    uint64_t v50 = v46;
    goto LABEL_9;
  }
  if (v40 == enum case for GenericMusicItem.composer(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v52 = v110;
    uint64_t v51 = v111;
    uint64_t v53 = v112;
    (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v110, v39, v112);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1010BBBE0 == -1) {
      goto LABEL_22;
    }
    goto LABEL_47;
  }
  if (v40 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v52 = v107;
    uint64_t v51 = v108;
    uint64_t v53 = v109;
    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v107, v39, v109);
    goto LABEL_21;
  }
  if (v40 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v52 = v104;
    uint64_t v51 = v105;
    uint64_t v53 = v106;
    (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v104, v39, v106);
    goto LABEL_21;
  }
  if (v40 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v52 = v101;
    uint64_t v51 = v102;
    uint64_t v53 = v103;
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v101, v39, v103);
    goto LABEL_21;
  }
  if (v40 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v51 = v99;
    uint64_t v52 = v98;
    uint64_t v53 = v100;
    (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v98, v39, v100);
LABEL_21:
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1010BBBE0 == -1)
    {
LABEL_22:
      id v54 = (id)qword_10112A3A0;
      static Locale.current.getter();
      uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
      return v42;
    }
LABEL_47:
    swift_once();
    goto LABEL_22;
  }
  if (v40 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v56 = v96;
    uint64_t v57 = v95;
    uint64_t v35 = v97;
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v95, v39, v97);
LABEL_38:
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v58 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    uint64_t v48 = *(void (**)(char *, uint64_t))(v56 + 8);
    uint64_t v49 = v57;
LABEL_41:
    uint64_t v50 = v35;
LABEL_9:
    v48(v49, v50);
    return v42;
  }
  if (v40 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v56 = v93;
    uint64_t v57 = v92;
    uint64_t v35 = v94;
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v92, v39, v94);
    goto LABEL_38;
  }
  if (v40 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v56 = v90;
    uint64_t v57 = v89;
    uint64_t v35 = v91;
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v89, v39, v91);
    goto LABEL_38;
  }
  if (v40 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v56 = v87;
    uint64_t v57 = v86;
    uint64_t v35 = v88;
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v86, v39, v88);
    goto LABEL_38;
  }
  if (v40 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v56 = v84;
    uint64_t v57 = v83;
    uint64_t v35 = v85;
    (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v83, v39, v85);
    goto LABEL_38;
  }
  if (v40 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v56 = v81;
    uint64_t v57 = v80;
    uint64_t v35 = v82;
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v80, v39, v82);
    goto LABEL_38;
  }
  if (v40 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v56 = v75;
    uint64_t v57 = v74;
    uint64_t v35 = v76;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v74, v39, v76);
    goto LABEL_38;
  }
  if (v40 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v77, v39, v79);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v59 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v79);
  }
  else if (v40 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v71, v39, v73);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v60 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v73);
  }
  else if (v40 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v68, v39, v70);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v61 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v70);
  }
  else
  {
    if (v40 != enum case for GenericMusicItem.uploadedVideo(_:))
    {
      String.LocalizationValue.init(stringLiteral:)();
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
      if (qword_1010BBBE0 != -1) {
        swift_once();
      }
      id v63 = (id)qword_10112A3A0;
      static Locale.current.getter();
      uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
      uint64_t v48 = *(void (**)(char *, uint64_t))(v36 + 8);
      uint64_t v49 = v39;
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v65, v39, v67);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v62 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
  }
  return v42;
}

uint64_t GenericMusicItem.failureMessage.getter()
{
  uint64_t v75 = type metadata accessor for UploadedVideo();
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v73 = (char *)&v73 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for UploadedAudio();
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v76 = (char *)&v73 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for TVShow();
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v79 = (char *)&v73 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for TVSeason();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v86 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for TVEpisode();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v83 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for Station();
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v89 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = type metadata accessor for Song();
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin(v94);
  uint64_t v92 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for SocialProfile();
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v95 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for RecordLabel();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v98 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for RadioShow();
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v101 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for Playlist();
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v104 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for MusicVideo();
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  long long v107 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MusicMovie();
  uint64_t v111 = *(void *)(v12 - 8);
  uint64_t v112 = v12;
  __chkstk_darwin(v12);
  uint64_t v110 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Genre();
  uint64_t v114 = *(void *)(v14 - 8);
  uint64_t v115 = v14;
  __chkstk_darwin(v14);
  uint64_t v113 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Curator();
  uint64_t v117 = *(void *)(v16 - 8);
  uint64_t v118 = v16;
  __chkstk_darwin(v16);
  uint64_t v116 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Composer();
  uint64_t v120 = *(void *)(v18 - 8);
  uint64_t v121 = v18;
  __chkstk_darwin(v18);
  uint64_t v119 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Artist();
  uint64_t v123 = *(void *)(v20 - 8);
  uint64_t v124 = v20;
  __chkstk_darwin(v20);
  uint64_t v122 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Locale();
  __chkstk_darwin(v22 - 8);
  uint64_t v125 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for String.LocalizationValue();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v73 - v29;
  uint64_t v31 = type metadata accessor for Album();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v73 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for GenericMusicItem();
  uint64_t v36 = *(void *)(v35 - 8);
  __n128 v37 = __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v73 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v36 + 16))(v39, v126, v35, v37);
  uint64_t v40 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v39, v35);
  if (v40 == enum case for GenericMusicItem.album(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v39, v31);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v24);
LABEL_3:
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v41 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v24);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    return v42;
  }
  uint64_t v82 = v24;
  uint64_t v43 = v25;
  if (v40 == enum case for GenericMusicItem.artist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v44 = v122;
    uint64_t v45 = v123;
    uint64_t v46 = v124;
    (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v122, v39, v124);
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v47 = v43;
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
    uint64_t v49 = v82;
    v48(v27, v30, v82);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v50 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v49);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v46);
    return v42;
  }
  if (v40 == enum case for GenericMusicItem.composer(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v53 = v119;
    uint64_t v52 = v120;
    uint64_t v54 = v121;
    (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v119, v39, v121);
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v55 = v82;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v82);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v56 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v55);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
    return v42;
  }
  if (v40 == enum case for GenericMusicItem.curator(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v34 = v116;
    uint64_t v32 = v117;
    uint64_t v31 = v118;
    (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v116, v39, v118);
LABEL_23:
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v24 = v82;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v82);
    goto LABEL_3;
  }
  if (v40 == enum case for GenericMusicItem.genre(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v34 = v113;
    uint64_t v32 = v114;
    uint64_t v31 = v115;
    (*(void (**)(char *, char *, uint64_t))(v114 + 32))(v113, v39, v115);
    goto LABEL_23;
  }
  if (v40 == enum case for GenericMusicItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v34 = v110;
    uint64_t v32 = v111;
    uint64_t v31 = v112;
    (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v110, v39, v112);
    goto LABEL_23;
  }
  if (v40 == enum case for GenericMusicItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v32 = v108;
    uint64_t v34 = v107;
    uint64_t v31 = v109;
    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v107, v39, v109);
    goto LABEL_23;
  }
  if (v40 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v57 = v105;
    id v58 = v104;
    id v59 = v39;
    uint64_t v60 = v106;
    (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v104, v59, v106);
LABEL_38:
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v67 = v82;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v82);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v68 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v67);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v60);
    return v42;
  }
  if (v40 == enum case for GenericMusicItem.radioShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v57 = v102;
    id v58 = v101;
    id v61 = v39;
    uint64_t v60 = v103;
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v101, v61, v103);
    goto LABEL_38;
  }
  if (v40 == enum case for GenericMusicItem.recordLabel(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v57 = v99;
    id v58 = v98;
    id v62 = v39;
    uint64_t v60 = v100;
    (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v98, v62, v100);
    goto LABEL_38;
  }
  if (v40 == enum case for GenericMusicItem.socialProfile(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v57 = v96;
    id v58 = v95;
    id v63 = v39;
    uint64_t v60 = v97;
    (*(void (**)(char *, char *, uint64_t))(v96 + 32))(v95, v63, v97);
    goto LABEL_38;
  }
  if (v40 == enum case for GenericMusicItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v57 = v93;
    id v58 = v92;
    uint64_t v64 = v39;
    uint64_t v60 = v94;
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v92, v64, v94);
    goto LABEL_38;
  }
  if (v40 == enum case for GenericMusicItem.station(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v57 = v90;
    id v58 = v89;
    uint64_t v65 = v39;
    uint64_t v60 = v91;
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v89, v65, v91);
    goto LABEL_38;
  }
  if (v40 == enum case for GenericMusicItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    uint64_t v57 = v84;
    id v58 = v83;
    uint64_t v66 = v39;
    uint64_t v60 = v85;
    (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v83, v66, v85);
    goto LABEL_38;
  }
  if (v40 == enum case for GenericMusicItem.tvSeason(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v86, v39, v88);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v82);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v69 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v82);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v86, v88);
  }
  else if (v40 == enum case for GenericMusicItem.tvShow(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v79, v39, v81);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v82);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v70 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v82);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v81);
  }
  else if (v40 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v76, v39, v78);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v82);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v71 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v82);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v76, v78);
  }
  else if (v40 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v39, v35);
    (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v73, v39, v75);
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v30, v82);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v72 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v30, v82);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v75);
  }
  else
  {
    uint64_t v42 = GenericMusicItem.failureMessage.getter(v40, v35);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v39, v35);
  }
  return v42;
}

uint64_t sub_1008CC8C8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000154F4;
  return GenericMusicItem.shareURL.getter(a1);
}

uint64_t sub_1008CC968(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010BCBE0);
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1008CC9FC, 0, 0);
}

uint64_t sub_1008CC9FC()
{
  *(void *)(v0 + 40) = **(void **)(v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008CCA9C;
  uint64_t v2 = *(void *)(v0 + 32);
  return GenericMusicItem.shareURL.getter(v2);
}

uint64_t sub_1008CCA9C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008CCB98, 0, 0);
}

uint64_t sub_1008CCB98()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v5 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v4);
    uint64_t v5 = v6;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  [*(id *)(v0 + 40) setOriginalURL:v5];

  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1008CCCBC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100014CA4(v0, qword_1010BE860);
  sub_100050A90(v0, (uint64_t)qword_1010BE860);
  return Logger.init(subsystem:category:)();
}

size_t sub_1008CCD34(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_1008CCE34(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1008CCD54(char *a1, int64_t a2, char a3)
{
  size_t result = sub_1008CD010(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1008CCD74(char *a1, int64_t a2, char a3)
{
  size_t result = sub_1008CD108(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_1008CCD94(void *a1, int64_t a2, char a3)
{
  size_t result = sub_1008CD228(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

void *sub_1008CCDB4(void *a1, int64_t a2, char a3)
{
  size_t result = sub_1008CD360(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1008CCDD4(char *a1, int64_t a2, char a3)
{
  size_t result = sub_1008CD484(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

char *sub_1008CCDF4(char *a1, int64_t a2, char a3)
{
  size_t result = sub_1008CD580(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_1008CCE14(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_1008CD67C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_1008CCE34(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100063814(&qword_1010BCBE8);
  uint64_t v10 = *(void *)(sub_100063814(&qword_1010BCBE0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(sub_100063814(&qword_1010BCBE0) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

char *sub_1008CD010(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814(&qword_1010C0280);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8]) {
      memmove(v13, v14, 2 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 2 * v8);
  }
  swift_release();
  return v10;
}

char *sub_1008CD108(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814(&qword_1010C5A50);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_1008CD228(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814((uint64_t *)&unk_1010C3730);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_100063814(&qword_1010C27A0);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void *sub_1008CD360(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814(&qword_1010BDF18);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  if (v5)
  {
    if (v10 != a4 || v10 + 4 >= &a4[v8 + 4]) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
  }
  else
  {
    sub_100063814(&qword_1010C28F0);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_1008CD484(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814(&qword_1010BDE88);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 4 * v8);
  }
  swift_release();
  return v10;
}

char *sub_1008CD580(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814(&qword_1010BDED0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 32 * v8);
  }
  swift_release();
  return v10;
}

size_t sub_1008CD67C(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100063814(&qword_1010BDE80);
  uint64_t v10 = *(void *)(type metadata accessor for SharePlayTogetherSession.Participant(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for SharePlayTogetherSession.Participant(0) - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

uint64_t sub_1008CD850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t (**a5)()@<X8>)
{
  uint64_t v30 = a4;
  uint64_t v33 = a3;
  uint64_t v32 = a1;
  uint64_t v10 = sub_100063814(&qword_1010BCFB8);
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v31 + 64);
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v29 - v14;
  sub_1000688E4(a1, (uint64_t)v37);
  sub_1000688E4(a3, (uint64_t)v36);
  sub_1000688E4(a1, (uint64_t)v35);
  uint64_t v16 = swift_allocObject();
  sub_100068978(v36, v16 + 16);
  sub_100068978(v35, v16 + 56);
  sub_10006CAB8(a4, (uint64_t)v15, &qword_1010BCFB8);
  sub_1000688E4((uint64_t)v37, (uint64_t)v34);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  sub_100068978(v34, v17 + 24);
  uint64_t v18 = (unint64_t (*)())swift_allocObject();
  uint64_t v29 = sub_1008CE97C;
  *((void *)v18 + 2) = sub_1008CE97C;
  *((void *)v18 + 3) = v17;
  *((void *)v18 + 4) = &unk_1010BED10;
  *((void *)v18 + 5) = v16;
  sub_10006CAB8((uint64_t)v15, (uint64_t)v12, &qword_1010BCFB8);
  sub_1000688E4((uint64_t)v37, (uint64_t)v34);
  unint64_t v19 = (*(unsigned __int8 *)(v31 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v20 = (v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  sub_100842818((uint64_t)v12, v21 + v19);
  sub_100068978(v34, v21 + v20);
  uint64_t v23 = v38;
  uint64_t v22 = v39;
  sub_100068990(v37, v38);
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 32);
  swift_retain();
  uint64_t v25 = v24(v23, v22);
  uint64_t v27 = v26;
  sub_1000637B8((uint64_t)v15, &qword_1010BCFB8);
  sub_1000760E4((uint64_t)v37);
  sub_1000637B8(v30, &qword_1010BCFB8);
  sub_1000760E4(v33);
  uint64_t result = sub_1000760E4(v32);
  *a5 = v29;
  a5[1] = (unint64_t (*)())v17;
  a5[2] = (unint64_t (*)())&unk_1010BED18;
  a5[3] = v18;
  a5[4] = (unint64_t (*)())&unk_1010BED20;
  a5[5] = (unint64_t (*)())v21;
  a5[6] = (unint64_t (*)())v25;
  a5[7] = v27;
  return result;
}

uint64_t sub_1008CDB60()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_1008CDB9C()
{
  return sub_1008B2C8C(*(void *)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_1008CDBAC()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_100081D08;
  return sub_1008B4514(v2, v3, v5, v4);
}

uint64_t sub_1008CDC5C()
{
  uint64_t v2 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_100081D08;
  return sub_1008B491C(v4, v5);
}

uint64_t sub_1008CDD68()
{
  uint64_t v2 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_1000154F4;
  return sub_1008B4F4C(v4, v5);
}

uint64_t sub_1008CDE68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008CDF88(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of AlbumFilter.id.getter, a2);
}

uint64_t sub_1008CDE80@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008CDF88(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of ArtistFilter.id.getter, a2);
}

uint64_t sub_1008CDE98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008CDF88(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicMovieFilter.id.getter, a2);
}

uint64_t sub_1008CDEB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008CDF88(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of MusicVideoFilter.id.getter, a2);
}

uint64_t sub_1008CDEC8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008CDF88(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of PlaylistFilter.id.getter, a2);
}

uint64_t sub_1008CDEE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008CDF88(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of SongFilter.id.getter, a2);
}

uint64_t sub_1008CDEF8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008CDF88(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of StationFilter.id.getter, a2);
}

uint64_t sub_1008CDF10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008CDF88(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVEpisodeFilter.id.getter, a2);
}

uint64_t sub_1008CDF28@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008CDF88(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVSeasonFilter.id.getter, a2);
}

uint64_t sub_1008CDF40@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008CDF88(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of TVShowFilter.id.getter, a2);
}

uint64_t sub_1008CDF58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008CDF88(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of UploadedAudioFilter.id.getter, a2);
}

uint64_t sub_1008CDF70@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008CDF88(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of UploadedVideoFilter.id.getter, a2);
}

uint64_t sub_1008CDF88@<X0>(void *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_100068990(a1, v5);
  uint64_t result = a2(v5, v6);
  *a3 = result;
  a3[1] = v8;
  return result;
}

uint64_t sub_1008CDFE0(uint64_t a1)
{
  uint64_t result = sub_1008CE350(&qword_1010BEB90, (void (*)(uint64_t))&type metadata accessor for Composer);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1008CE038(uint64_t a1)
{
  uint64_t result = sub_1008CE350(&qword_1010BE2C8, (void (*)(uint64_t))&type metadata accessor for EditorialItem);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1008CE090(uint64_t a1)
{
  uint64_t result = sub_1008CE350(&qword_1010BE2D0, (void (*)(uint64_t))&type metadata accessor for MusicMovie);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1008CE0E8(uint64_t a1)
{
  uint64_t result = sub_1008CE350(&qword_1010BEC28, (void (*)(uint64_t))&type metadata accessor for SocialProfile);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1008CE140(uint64_t a1)
{
  uint64_t result = sub_1008CE350(&qword_1010BE2D8, (void (*)(uint64_t))&type metadata accessor for TVEpisode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1008CE198(uint64_t a1)
{
  uint64_t result = sub_1008CE350(&qword_1010BE2E0, (void (*)(uint64_t))&type metadata accessor for TVSeason);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1008CE1F0(uint64_t a1)
{
  uint64_t result = sub_1008CE350(&qword_1010BE2E8, (void (*)(uint64_t))&type metadata accessor for TVShow);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1008CE248(uint64_t a1)
{
  uint64_t result = sub_1008CE350(&qword_1010BECA0, (void (*)(uint64_t))&type metadata accessor for UploadedAudio);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1008CE2A0(uint64_t a1)
{
  uint64_t result = sub_1008CE350(&qword_1010BE2F0, (void (*)(uint64_t))&type metadata accessor for UploadedVideo);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1008CE2F8(uint64_t a1)
{
  uint64_t result = sub_1008CE350(&qword_1010BECC8, (void (*)(uint64_t))&type metadata accessor for GenericMusicItem);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1008CE350(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Actions.Share()
{
  return &type metadata for Actions.Share;
}

uint64_t _s5ShareO7ContextVwxx()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t _s5ShareO7ContextVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s5ShareO7ContextVwca(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5ShareO7ContextVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Actions.Share.Context()
{
  return &type metadata for Actions.Share.Context;
}

ValueMetadata *type metadata accessor for Actions.ShareLyrics()
{
  return &type metadata for Actions.ShareLyrics;
}

ValueMetadata *type metadata accessor for Actions.ShareLyrics.Context()
{
  return &type metadata for Actions.ShareLyrics.Context;
}

uint64_t sub_1008CE5A8()
{
  sub_1000760E4(v0 + 16);
  sub_1000760E4(v0 + 56);

  return swift_deallocObject();
}

uint64_t sub_1008CE5E8()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100081D08;
  return sub_1008B2738(v0 + 16, v0 + 56);
}

uint64_t sub_1008CE688()
{
  swift_release();
  sub_1000760E4(v0 + 24);

  return swift_deallocObject();
}

uint64_t sub_1008CE6CC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008CE710()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v0 + v2, 1, v5))
  {
    if (*(void *)(v4 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v6 + *(int *)(v7 + 24);
      uint64_t v9 = type metadata accessor for URL();
      uint64_t v11 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v9);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000760E4(v0 + ((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return swift_deallocObject();
}

uint64_t Actions.Favorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v53 = a7;
  uint64_t v54 = a8;
  uint64_t v55 = a6;
  id v56 = a9;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v51 = a3;
  uint64_t v58 = a2;
  uint64_t v12 = *(void *)(a10 - 8);
  uint64_t v57 = a11;
  uint64_t v13 = __chkstk_darwin(a1);
  uint64_t v48 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v44 = (char *)&v41 - v16;
  uint64_t v18 = v17;
  uint64_t v47 = v17;
  __chkstk_darwin(v15);
  unint64_t v20 = (char *)&v41 - v19;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v45 = a1;
  v43((char *)&v41 - v19, a1, a10);
  uint64_t v46 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = (v46 + 40) & ~v46;
  uint64_t v22 = (uint64_t (*)())swift_allocObject();
  uint64_t v52 = v22;
  *((void *)v22 + 2) = a10;
  *((void *)v22 + 3) = a11;
  uint64_t v23 = v58;
  *((void *)v22 + 4) = v58;
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v42((char *)v22 + v21, v20, a10);
  uint64_t v24 = v44;
  v43(v44, a1, a10);
  unint64_t v25 = (v21 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = (uint64_t (*)())swift_allocObject();
  uint64_t v28 = v57;
  *((void *)v27 + 2) = a10;
  *((void *)v27 + 3) = v28;
  *((void *)v27 + 4) = v23;
  uint64_t v29 = v24;
  uint64_t v30 = (void (*)(char *, uint64_t, uint64_t))v42;
  v42((char *)v27 + v21, v29, a10);
  sub_10003CABC(v49, (uint64_t)v27 + v25, &qword_1010BD028);
  sub_10003CABC(v50, (uint64_t)v27 + v26, &qword_1010BD020);
  sub_100068978(v51, (uint64_t)v27 + ((v26 + 79) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v31 = v48;
  v30(v48, v45, a10);
  uint64_t v32 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v34 = (*(void *)(v32 + 64) + v46 + v33) & ~v46;
  uint64_t v35 = (uint64_t (*)())swift_allocObject();
  uint64_t v36 = v57;
  *((void *)v35 + 2) = a10;
  *((void *)v35 + 3) = v36;
  uint64_t v37 = v54;
  *((void *)v35 + 4) = v53;
  *((void *)v35 + 5) = v37;
  sub_10003CABC(v55, (uint64_t)v35 + v33, &qword_1010BCFB8);
  v30((char *)v35 + v34, (uint64_t)v31, a10);
  uint64_t result = swift_retain();
  uint64_t v39 = v56;
  uint64_t v40 = v52;
  *id v56 = sub_1008CFA0C;
  v39[1] = v40;
  v39[2] = (uint64_t (*)())&unk_1010BED30;
  v39[3] = v27;
  v39[4] = (uint64_t (*)())&unk_1010BED40;
  v39[5] = v35;
  return result;
}

uint64_t static Actions.Favorite.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A302C(a1, 10, (uint64_t)sub_1008A4BF8, (uint64_t)&unk_1010BED48, (uint64_t)&unk_1010BED50, a2);
}

uint64_t Actions.UndoFavorite.Context.init<A>(item:library:alertPresenter:noticePresenting:presentationSource:metricsReportingContext:onFinish:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t (**a9)()@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v53 = a7;
  uint64_t v54 = a8;
  uint64_t v55 = a6;
  id v56 = a9;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v51 = a3;
  uint64_t v58 = a2;
  uint64_t v12 = *(void *)(a10 - 8);
  uint64_t v57 = a11;
  uint64_t v13 = __chkstk_darwin(a1);
  uint64_t v48 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v44 = (char *)&v41 - v16;
  uint64_t v18 = v17;
  uint64_t v47 = v17;
  __chkstk_darwin(v15);
  unint64_t v20 = (char *)&v41 - v19;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v45 = a1;
  v43((char *)&v41 - v19, a1, a10);
  uint64_t v46 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = (v46 + 40) & ~v46;
  uint64_t v22 = (uint64_t (*)())swift_allocObject();
  uint64_t v52 = v22;
  *((void *)v22 + 2) = a10;
  *((void *)v22 + 3) = a11;
  uint64_t v23 = v58;
  *((void *)v22 + 4) = v58;
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v42((char *)v22 + v21, v20, a10);
  uint64_t v24 = v44;
  v43(v44, a1, a10);
  unint64_t v25 = (v21 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = (uint64_t (*)())swift_allocObject();
  uint64_t v28 = v57;
  *((void *)v27 + 2) = a10;
  *((void *)v27 + 3) = v28;
  *((void *)v27 + 4) = v23;
  uint64_t v29 = v24;
  uint64_t v30 = (void (*)(char *, uint64_t, uint64_t))v42;
  v42((char *)v27 + v21, v29, a10);
  sub_10003CABC(v49, (uint64_t)v27 + v25, &qword_1010BD028);
  sub_10003CABC(v50, (uint64_t)v27 + v26, &qword_1010BD020);
  sub_100068978(v51, (uint64_t)v27 + ((v26 + 79) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v31 = v48;
  v30(v48, v45, a10);
  uint64_t v32 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v33 = (*(unsigned __int8 *)(v32 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v34 = (*(void *)(v32 + 64) + v46 + v33) & ~v46;
  uint64_t v35 = (uint64_t (*)())swift_allocObject();
  uint64_t v36 = v57;
  *((void *)v35 + 2) = a10;
  *((void *)v35 + 3) = v36;
  uint64_t v37 = v54;
  *((void *)v35 + 4) = v53;
  *((void *)v35 + 5) = v37;
  sub_10003CABC(v55, (uint64_t)v35 + v33, &qword_1010BCFB8);
  v30((char *)v35 + v34, (uint64_t)v31, a10);
  uint64_t result = swift_retain();
  uint64_t v39 = v56;
  uint64_t v40 = v52;
  *id v56 = sub_1008D2114;
  v39[1] = v40;
  v39[2] = (uint64_t (*)())&unk_1010BED60;
  v39[3] = v27;
  v39[4] = (uint64_t (*)())&unk_1010BED70;
  v39[5] = v35;
  return result;
}

uint64_t static Actions.UndoFavorite.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A302C(a1, 52, (uint64_t)sub_1008A4BF8, (uint64_t)&unk_1010BED78, (uint64_t)&unk_1010BED80, a2);
}

uint64_t Actions.SuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (**a7)()@<X8>)
{
  uint64_t v43 = a4;
  uint64_t v44 = a7;
  uint64_t v41 = a3;
  uint64_t v45 = a1;
  uint64_t v10 = *(void *)(a5 - 8);
  uint64_t v11 = __chkstk_darwin(a1);
  uint64_t v40 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v35 - v14;
  uint64_t v17 = v16;
  uint64_t v39 = v16;
  __chkstk_darwin(v13);
  uint64_t v19 = (char *)v35 - v18;
  uint64_t v36 = *(void (**)(char *))(v10 + 16);
  v36((char *)v35 - v18);
  uint64_t v38 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v20 = v10;
  uint64_t v21 = (v38 + 40) & ~v38;
  v35[1] = v38 | 7;
  uint64_t v22 = (uint64_t (*)())swift_allocObject();
  uint64_t v42 = v22;
  *((void *)v22 + 2) = a5;
  *((void *)v22 + 3) = a6;
  uint64_t v37 = a6;
  *((void *)v22 + 4) = a2;
  uint64_t v23 = v20 + 32;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v35[0] = v23;
  v24((char *)v22 + v21, v19, a5);
  ((void (*)(char *, char *, uint64_t))v36)(v15, v45, a5);
  unint64_t v25 = (uint64_t (*)())swift_allocObject();
  *((void *)v25 + 2) = a5;
  *((void *)v25 + 3) = a6;
  *((void *)v25 + 4) = a2;
  v24((char *)v25 + v21, v15, a5);
  sub_10003CABC(v41, (uint64_t)v25 + ((v21 + v17 + 7) & 0xFFFFFFFFFFFFFFF8), &qword_1010BD028);
  unint64_t v26 = v40;
  v24(v40, v45, a5);
  uint64_t v27 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v29 = (*(void *)(v27 + 64) + v38 + v28) & ~v38;
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v37;
  *(void *)(v30 + 16) = a5;
  *(void *)(v30 + 24) = v31;
  sub_10003CABC(v43, v30 + v28, &qword_1010BCFB8);
  v24((char *)(v30 + v29), v26, a5);
  uint64_t result = swift_retain();
  unint64_t v33 = v44;
  unint64_t v34 = v42;
  char *v44 = sub_1008D4BB0;
  v33[1] = v34;
  v33[2] = (uint64_t (*)())&unk_1010BED90;
  v33[3] = v25;
  v33[4] = (uint64_t (*)())&unk_1010BEDA0;
  v33[5] = (uint64_t (*)())v30;
  return result;
}

uint64_t static Actions.SuggestLess.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A302C(a1, 51, (uint64_t)sub_100842DF8, (uint64_t)&unk_1010BEDA8, (uint64_t)&unk_1010BEDB0, a2);
}

uint64_t Actions.UndoSuggestLess.Context.init<A>(item:library:noticePresenting:metricsReportingContext:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t (**a6)()@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v41 = a6;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v9 = *(void *)(a4 - 8);
  uint64_t v10 = __chkstk_darwin(a1);
  uint64_t v38 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v36 = (char *)v34 - v13;
  uint64_t v37 = v14;
  uint64_t v15 = v14;
  __chkstk_darwin(v12);
  uint64_t v17 = (char *)v34 - v16;
  sub_1000637B8(v18, &qword_1010BD028);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v35(v17, (uint64_t)a1, a4);
  uint64_t v19 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v20 = (v19 + 40) & ~v19;
  long long v34[2] = v20 + v15;
  uint64_t v21 = (uint64_t (*)())swift_allocObject();
  uint64_t v39 = v21;
  *((void *)v21 + 2) = a4;
  *((void *)v21 + 3) = a5;
  uint64_t v22 = v43;
  *((void *)v21 + 4) = v43;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v34[1] = v9 + 32;
  v23((char *)v21 + v20, v17, a4);
  uint64_t v24 = v36;
  v35(v36, (uint64_t)v42, a4);
  unint64_t v25 = (uint64_t (*)())swift_allocObject();
  *((void *)v25 + 2) = a4;
  *((void *)v25 + 3) = a5;
  *((void *)v25 + 4) = v22;
  v23((char *)v25 + v20, v24, a4);
  unint64_t v26 = v38;
  v23(v38, v42, a4);
  uint64_t v27 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v28 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v29 = (*(void *)(v27 + 64) + v19 + v28) & ~v19;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a4;
  *(void *)(v30 + 24) = a5;
  sub_10003CABC(v40, v30 + v28, &qword_1010BCFB8);
  v23((char *)(v30 + v29), v26, a4);
  uint64_t result = swift_retain();
  uint64_t v32 = v41;
  unint64_t v33 = v39;
  *uint64_t v41 = sub_1008D5FC8;
  v32[1] = v33;
  v32[2] = (uint64_t (*)())&unk_1010BEDC0;
  v32[3] = v25;
  v32[4] = (uint64_t (*)())&unk_1010BEDD0;
  v32[5] = (uint64_t (*)())v30;
  return result;
}

uint64_t static Actions.UndoSuggestLess.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A302C(a1, 53, (uint64_t)sub_1008A4BF8, (uint64_t)&unk_1010BEDD8, (uint64_t)&unk_1010BEDE0, a2);
}

uint64_t sub_1008CF7C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A30F8(a1, 10, (uint64_t)sub_1008A4BF8, (uint64_t)&unk_1010BED48, (uint64_t)&unk_1010BED50, a2);
}

uint64_t sub_1008CF80C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A30F8(a1, 52, (uint64_t)sub_1008A4BF8, (uint64_t)&unk_1010BED78, (uint64_t)&unk_1010BED80, a2);
}

uint64_t sub_1008CF850()
{
  uint64_t v0 = type metadata accessor for MusicLibrary.FavoriteAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010BEEC0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.favorite.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v8 = sub_1008CFA24();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t sub_1008CFA0C()
{
  return sub_1008D212C((uint64_t (*)(void, unint64_t))sub_1008CF850);
}

uint64_t sub_1008CFA24()
{
  uint64_t v1 = type metadata accessor for MusicLibrary.FavoriteAction.UnsupportedReason();
  uint64_t v35 = *(void *)(v1 - 8);
  uint64_t v2 = __chkstk_darwin(v1);
  unint64_t v33 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v33 - v5;
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = sub_100063814(&qword_1010BEEC0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v34 = v0;
  v16((char *)&v33 - v14, v0, v9);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v15, v9);
  if (v17 != enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    if (v17 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      unint64_t v36 = 0;
      unint64_t v37 = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease();
      unint64_t v36 = 0xD000000000000019;
      unint64_t v37 = 0x8000000100DCA030;
      v16(v13, v34, v9);
      v25._countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v25);
      swift_bridgeObjectRelease();
      unint64_t v24 = v36;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      return v24;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v10 + 96))(v15, v9);
  uint64_t v18 = v35;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v8, v15, v1);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v19(v6, v8, v1);
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v6, v1);
  uint64_t v21 = v8;
  uint64_t v22 = v1;
  uint64_t v23 = v18;
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.unsupportedType(_:))
  {
LABEL_3:
    unint64_t v24 = 0xD000000000000010;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    return v24;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.alreadyFavorited(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0xD000000000000011;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cannotFavoriteWhenDisliked(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0xD00000000000001DLL;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.subscriptionRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0xD000000000000018;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
  {
    uint64_t v27 = v18;
    if (qword_1010BBCC8 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    __int16 v28 = v37;
    unint64_t v29 = v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if ((v28 & 0x100) != 0) {
      unint64_t v24 = 0;
    }
    else {
      unint64_t v24 = 0xD000000000000016;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v22);
    return v24;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.sharedLibrary(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0x6C20646572616853;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryInitialImport(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0xD00000000000001CLL;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.libraryAddIneligibleContent(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0xD000000000000013;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.invalidContentType(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0xD000000000000014;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.networkRequired(_:)) {
    goto LABEL_3;
  }
  if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.subscriptionAccountLinkingRequired(_:))
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v22);
    return 0xD000000000000025;
  }
  else
  {
    uint64_t v30 = v18;
    if (v20 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.unknown(_:))
    {
      unint64_t v24 = 0x206E776F6E6B6E55;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    }
    else
    {
      unint64_t v36 = 0;
      unint64_t v37 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v36 = 0x206E776F6E6B6E55;
      unint64_t v37 = 0xEF206E6F73616572;
      v19(v33, v21, v22);
      v31._countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      unint64_t v24 = v36;
      uint64_t v32 = *(void (**)(char *, uint64_t))(v30 + 8);
      v32(v21, v22);
      v32(v6, v22);
    }
  }
  return v24;
}

uint64_t sub_1008D026C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[44] = a6;
  v7[45] = a7;
  v7[42] = a4;
  v7[43] = a5;
  v7[40] = a2;
  v7[41] = a3;
  v7[39] = a1;
  uint64_t v8 = type metadata accessor for MusicLibrary.FavoriteAction.UnsupportedReason();
  v7[46] = v8;
  v7[47] = *(void *)(v8 - 8);
  v7[48] = swift_task_alloc();
  v7[49] = swift_task_alloc();
  v7[50] = type metadata accessor for Notice.Variant(0);
  v7[51] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for MusicLibrary.FavoriteAction();
  v7[52] = v9;
  v7[53] = *(void *)(v9 - 8);
  v7[54] = swift_task_alloc();
  uint64_t v10 = sub_100063814(&qword_1010BEEC0);
  v7[55] = v10;
  v7[56] = *(void *)(v10 - 8);
  v7[57] = swift_task_alloc();
  v7[58] = swift_task_alloc();
  return _swift_task_switch(sub_1008D0444, 0, 0);
}

uint64_t sub_1008D0444()
{
  uint64_t v1 = v0[58];
  uint64_t v2 = v0[56];
  uint64_t v42 = v0[55];
  uint64_t v43 = v0[57];
  uint64_t v3 = v0[53];
  uint64_t v4 = v0[54];
  uint64_t v5 = v0[52];
  static MusicLibraryAction<>.favorite.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v43, v1, v42);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v43, v42);
  if (v6 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    uint64_t v7 = v0[57];
    uint64_t v9 = v0[48];
    uint64_t v8 = v0[49];
    uint64_t v10 = v0[46];
    uint64_t v11 = v0[47];
    (*(void (**)(uint64_t, void))(v0[56] + 96))(v7, v0[55]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v8, v7, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v8, v10);
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 88))(v9, v10);
    if (v12 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      sub_10006CAB8(v0[42], (uint64_t)(v0 + 11), &qword_1010BD020);
      if (v0[18] != 1)
      {
        sub_1000E08E4((uint64_t)(v0 + 11), (uint64_t)(v0 + 2));
        v0[71] = type metadata accessor for MainActor();
        v0[72] = static MainActor.shared.getter();
        uint64_t v32 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v28 = v33;
        v0[73] = v32;
        v0[74] = v33;
        unint64_t v26 = sub_1008D10C4;
        uint64_t v27 = v32;
        goto LABEL_14;
      }
      uint64_t v13 = (void *)v0[43];
      sub_1000637B8((uint64_t)(v0 + 11), &qword_1010BD020);
      uint64_t v14 = v13[3];
      v0[66] = v14;
      v0[67] = v13[4];
      v0[68] = sub_100068990(v13, v14);
      type metadata accessor for MainActor();
      v0[69] = static MainActor.shared.getter();
      uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v17 = v16;
      uint64_t v18 = sub_1008D0EA8;
LABEL_11:
      unint64_t v26 = v18;
      uint64_t v27 = v15;
      uint64_t v28 = v17;
LABEL_14:
      return _swift_task_switch(v26, v27, v28);
    }
    if (v12 == enum case for MusicLibrary.FavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      uint64_t v23 = (void *)v0[43];
      uint64_t v24 = v23[3];
      v0[78] = v24;
      v0[79] = v23[4];
      v0[80] = sub_100068990(v23, v24);
      type metadata accessor for MainActor();
      v0[81] = static MainActor.shared.getter();
      uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v17 = v25;
      uint64_t v18 = sub_1008D1494;
      goto LABEL_11;
    }
    uint64_t v34 = v0[58];
    uint64_t v35 = v0[55];
    uint64_t v36 = v0[56];
    uint64_t v37 = v0[48];
    uint64_t v38 = v0[46];
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v0[47] + 8);
    v39(v0[49], v38);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    v39(v37, v38);
    goto LABEL_18;
  }
  if (v6 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    uint64_t v29 = v0[57];
    uint64_t v30 = v0[55];
    Swift::String v31 = *(void (**)(uint64_t, uint64_t))(v0[56] + 8);
    v31(v0[58], v30);
    v31(v29, v30);
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v40 = (uint64_t (*)(void))v0[1];
    return v40();
  }
  uint64_t v19 = (void *)swift_task_alloc();
  v0[59] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1008D0904;
  uint64_t v20 = v0[44];
  uint64_t v21 = v0[45];
  uint64_t v22 = v0[40];
  return MusicLibrary.favorite<A>(_:)(v22, v20, v21);
}

uint64_t sub_1008D0904()
{
  *(void *)(*(void *)v1 + 480) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1008D1790;
  }
  else {
    uint64_t v2 = sub_1008D0A18;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008D0A18()
{
  sub_10006CAB8(v0[41], (uint64_t)(v0 + 34), &qword_1010BD028);
  uint64_t v1 = v0[37];
  v0[61] = v1;
  if (v1)
  {
    v0[62] = v0[38];
    v0[63] = sub_100068990(v0 + 34, v1);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for MainActor();
    v0[64] = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008D0B94, v3, v2);
  }
  else
  {
    sub_1000637B8((uint64_t)(v0 + 34), &qword_1010BD028);
    uint64_t v7 = (uint64_t (*)(uint64_t))((char *)&dword_1010C5C60 + dword_1010C5C60);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[65] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1008D0CEC;
    uint64_t v5 = v0[42];
    return v7(v5);
  }
}

uint64_t sub_1008D0B94()
{
  uint64_t v2 = v0[61];
  uint64_t v1 = v0[62];
  uint64_t v3 = v0[51];
  swift_release();
  sub_1008DE908(v3, 0, v2, v1);
  sub_10084991C(v3, type metadata accessor for Notice.Variant);
  return _swift_task_switch(sub_1008D0C3C, 0, 0);
}

uint64_t sub_1008D0C3C()
{
  sub_1000760E4(v0 + 272);
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)&dword_1010C5C60 + dword_1010C5C60);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 520) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008D0CEC;
  uint64_t v2 = *(void *)(v0 + 336);
  return v4(v2);
}

uint64_t sub_1008D0CEC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1008D0DE8, 0, 0);
}

uint64_t sub_1008D0DE8()
{
  (*(void (**)(void, void))(v0[56] + 8))(v0[58], v0[55]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008D0EA8()
{
  uint64_t v6 = v0[67];
  swift_release();
  sub_1009395C0((uint64_t)(v0 + 27));
  uint64_t v5 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[70] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008D0FBC;
  uint64_t v2 = v0[67];
  uint64_t v3 = v0[66];
  return v5(v0 + 27, v3, v2);
}

uint64_t sub_1008D0FBC()
{
  uint64_t v1 = *v0 + 216;
  swift_task_dealloc();
  sub_1004AA460(v1);
  return _swift_task_switch(sub_1008D7410, 0, 0);
}

uint64_t sub_1008D10C4()
{
  uint64_t v1 = static MainActor.shared.getter();
  v0[75] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[76] = v2;
  *(unsigned char *)(v2 + 16) = 5;
  *(void *)(v2 + 24) = v0 + 2;
  *(void *)(v2 + 32) = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[77] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1008D11DC;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 83, v1, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000100DC9280, sub_1008D7418, v2, &type metadata for Bool);
}

uint64_t sub_1008D11DC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 592);
  uint64_t v3 = *(void *)(v1 + 584);
  return _swift_task_switch(sub_1008D133C, v3, v2);
}

uint64_t sub_1008D133C()
{
  swift_release();
  return _swift_task_switch(sub_1008D13A4, 0, 0);
}

uint64_t sub_1008D13A4()
{
  uint64_t v1 = v0[58];
  uint64_t v2 = v0[55];
  uint64_t v3 = v0[56];
  uint64_t v4 = v0[49];
  uint64_t v5 = v0[46];
  uint64_t v6 = v0[47];
  sub_1000E0890((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1008D1494()
{
  uint64_t v6 = v0[79];
  swift_release();
  sub_100939824((uint64_t)(v0 + 20));
  uint64_t v5 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[82] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008D15A8;
  uint64_t v2 = v0[79];
  uint64_t v3 = v0[78];
  return v5(v0 + 20, v3, v2);
}

uint64_t sub_1008D15A8()
{
  uint64_t v1 = *v0 + 160;
  swift_task_dealloc();
  sub_1004AA460(v1);
  return _swift_task_switch(sub_1008D16B0, 0, 0);
}

uint64_t sub_1008D16B0()
{
  uint64_t v1 = v0[58];
  uint64_t v2 = v0[55];
  uint64_t v3 = v0[56];
  (*(void (**)(void, void))(v0[47] + 8))(v0[49], v0[46]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1008D1790()
{
  (*(void (**)(void, void))(v0[56] + 8))(v0[58], v0[55]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008D1858()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  unint64_t v5 = (*(void *)(*(void *)(v2 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0[4];
  uint64_t v8 = (uint64_t)v0 + v4;
  uint64_t v9 = (uint64_t)v0 + v5;
  uint64_t v10 = (uint64_t)v0 + v6;
  uint64_t v11 = (uint64_t)v0 + ((v6 + 79) & 0xFFFFFFFFFFFFFFF8);
  int v12 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v12;
  *int v12 = v1;
  v12[1] = sub_100081D08;
  return sub_1008D026C(v7, v8, v9, v10, v11, v2, v3);
}

uint64_t sub_1008D1998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  sub_100063814(&qword_1010BCBE0);
  v6[15] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v6[16] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Actions.MetricsReportingContext();
  v6[17] = v7;
  v6[18] = *(void *)(v7 - 8);
  v6[19] = swift_task_alloc();
  return _swift_task_switch(sub_1008D1AC0, 0, 0);
}

uint64_t sub_1008D1AC0()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 72);
  if (v1) {
    v1(10);
  }
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 128);
  sub_10006CAB8(*(void *)(v0 + 88), v4, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 128), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v8 = *(void *)(v0 + 104);
    sub_100706008(*(void *)(v0 + 128), *(void *)(v0 + 152));
    *(void *)(v0 + 160) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(void *)(v0 + 168) = v9;
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
    sub_100063814(&qword_1010BD000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v12;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 176) = sub_100872094(inited);
    *(void *)(v0 + 184) = v13;
    *(void *)(v0 + 192) = v14;
    *(_WORD *)(v0 + 208) = v15;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 200) = static MainActor.shared.getter();
    uint64_t v17 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008D1D04, v17, v16);
  }
}

uint64_t sub_1008D1D04()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void **)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);
  unint64_t v6 = *(uint64_t **)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 208);
  swift_release();
  sub_1008724B8(v5, v4, 5, 17, v7, v3, v2, v1, v8, v6);
  sub_1004CF644(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_1000637B8(v7, &qword_1010BCBE0);
  return _swift_task_switch(sub_1008D7414, 0, 0);
}

uint64_t sub_1008D1E04()
{
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[5];
  uint64_t v8 = (uint64_t)v0 + v5;
  uint64_t v9 = (uint64_t)v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_100081D08;
  return sub_1008D1998(v6, v7, v8, v9, v3, v2);
}

uint64_t sub_1008D1F58()
{
  uint64_t v0 = type metadata accessor for MusicLibrary.UndoFavoriteAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010BEEB8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.undoFavorite.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v8 = sub_1008D2178();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t sub_1008D2114()
{
  return sub_1008D212C((uint64_t (*)(void, unint64_t))sub_1008D1F58);
}

uint64_t sub_1008D212C(uint64_t (*a1)(void, unint64_t))
{
  return a1(*(void *)(v1 + 32), v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)));
}

uint64_t sub_1008D2178()
{
  uint64_t v1 = type metadata accessor for MusicLibrary.UndoFavoriteAction.UnsupportedReason();
  uint64_t v30 = *(void *)(v1 - 8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v28 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v28 - v5;
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_100063814(&qword_1010BEEB8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  __int16 v15 = (char *)&v28 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v29 = v0;
  v16((char *)&v28 - v14, v0, v9);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v15, v9);
  if (v17 != enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    if (v17 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
    {
      unint64_t v31 = 0;
      unint64_t v32 = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease();
      unint64_t v31 = 0xD000000000000019;
      unint64_t v32 = 0x8000000100DCA030;
      v16(v13, v29, v9);
      v22._countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v22);
      swift_bridgeObjectRelease();
      unint64_t v21 = v31;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      return v21;
    }
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v10 + 96))(v15, v9);
  uint64_t v18 = v30;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v8, v15, v1);
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v19(v6, v8, v1);
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v6, v1);
  if (v20 != enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.unsupportedType(_:))
  {
    if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.notFavorited(_:))
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
      return 0x6F76614620746F4ELL;
    }
    if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.subscriptionRequired(_:))
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
      return 0xD000000000000018;
    }
    if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      if (qword_1010BBCC8 != -1) {
        swift_once();
      }
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      __int16 v24 = v32;
      uint64_t v25 = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if ((v24 & 0x100) != 0) {
        unint64_t v21 = 0;
      }
      else {
        unint64_t v21 = 0xD000000000000016;
      }
      goto LABEL_31;
    }
    if (v20 != enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.sharedLibrary(_:))
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
        return 0x6C20646572616853;
      }
      if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryInitialImport(_:))
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
        return 0xD00000000000001CLL;
      }
      if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.libraryAddIneligibleContent(_:))
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
        return 0xD000000000000013;
      }
      if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.invalidContentType(_:))
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
        return 0xD000000000000014;
      }
      if (v20 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.subscriptionAccountLinkingRequired(_:))
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
        return 0xD000000000000025;
      }
      unint64_t v21 = 0x206E776F6E6B6E55;
      if (v20 != enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.unknown(_:))
      {
        unint64_t v31 = 0;
        unint64_t v32 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v31 = 0x206E776F6E6B6E55;
        unint64_t v32 = 0xEF206E6F73616572;
        v19(v28, v8, v1);
        v26._countAndFlagsBits = String.init<A>(describing:)();
        String.append(_:)(v26);
        swift_bridgeObjectRelease();
        unint64_t v21 = v31;
        uint64_t v27 = *(void (**)(char *, uint64_t))(v18 + 8);
        v27(v8, v1);
        v27(v6, v1);
        return v21;
      }
LABEL_31:
      (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
      return v21;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
    return 0;
  }
  unint64_t v21 = 0xD000000000000010;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v1);
  return v21;
}

uint64_t sub_1008D2918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[44] = a6;
  v7[45] = a7;
  v7[42] = a4;
  v7[43] = a5;
  v7[40] = a2;
  v7[41] = a3;
  v7[39] = a1;
  uint64_t v8 = type metadata accessor for MusicLibrary.UndoFavoriteAction.UnsupportedReason();
  v7[46] = v8;
  v7[47] = *(void *)(v8 - 8);
  v7[48] = swift_task_alloc();
  v7[49] = swift_task_alloc();
  v7[50] = type metadata accessor for Notice.Variant(0);
  v7[51] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for MusicLibrary.UndoFavoriteAction();
  v7[52] = v9;
  v7[53] = *(void *)(v9 - 8);
  v7[54] = swift_task_alloc();
  uint64_t v10 = sub_100063814(&qword_1010BEEB8);
  v7[55] = v10;
  v7[56] = *(void *)(v10 - 8);
  v7[57] = swift_task_alloc();
  v7[58] = swift_task_alloc();
  return _swift_task_switch(sub_1008D2AF0, 0, 0);
}

uint64_t sub_1008D2AF0()
{
  uint64_t v1 = v0[58];
  uint64_t v2 = v0[56];
  uint64_t v42 = v0[55];
  uint64_t v43 = v0[57];
  uint64_t v3 = v0[53];
  uint64_t v4 = v0[54];
  uint64_t v5 = v0[52];
  static MusicLibraryAction<>.undoFavorite.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v43, v1, v42);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v43, v42);
  if (v6 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    uint64_t v7 = v0[57];
    uint64_t v9 = v0[48];
    uint64_t v8 = v0[49];
    uint64_t v10 = v0[46];
    uint64_t v11 = v0[47];
    (*(void (**)(uint64_t, void))(v0[56] + 96))(v7, v0[55]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v8, v7, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v8, v10);
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 88))(v9, v10);
    if (v12 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      sub_10006CAB8(v0[42], (uint64_t)(v0 + 11), &qword_1010BD020);
      if (v0[18] != 1)
      {
        sub_1000E08E4((uint64_t)(v0 + 11), (uint64_t)(v0 + 2));
        v0[70] = type metadata accessor for MainActor();
        v0[71] = static MainActor.shared.getter();
        uint64_t v32 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v28 = v33;
        v0[72] = v32;
        v0[73] = v33;
        Swift::String v26 = sub_1008D35E4;
        uint64_t v27 = v32;
        goto LABEL_14;
      }
      uint64_t v13 = (void *)v0[43];
      sub_1000637B8((uint64_t)(v0 + 11), &qword_1010BD020);
      uint64_t v14 = v13[3];
      v0[65] = v14;
      v0[66] = v13[4];
      v0[67] = sub_100068990(v13, v14);
      type metadata accessor for MainActor();
      v0[68] = static MainActor.shared.getter();
      uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v17 = v16;
      uint64_t v18 = sub_1008D33C8;
LABEL_11:
      Swift::String v26 = v18;
      uint64_t v27 = v15;
      uint64_t v28 = v17;
LABEL_14:
      return _swift_task_switch(v26, v27, v28);
    }
    if (v12 == enum case for MusicLibrary.UndoFavoriteAction.UnsupportedReason.explicitContentRestricted(_:))
    {
      uint64_t v23 = (void *)v0[43];
      uint64_t v24 = v23[3];
      v0[77] = v24;
      v0[78] = v23[4];
      v0[79] = sub_100068990(v23, v24);
      type metadata accessor for MainActor();
      v0[80] = static MainActor.shared.getter();
      uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v17 = v25;
      uint64_t v18 = sub_1008D38C4;
      goto LABEL_11;
    }
    uint64_t v34 = v0[58];
    uint64_t v35 = v0[55];
    uint64_t v36 = v0[56];
    uint64_t v37 = v0[48];
    uint64_t v38 = v0[46];
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v0[47] + 8);
    v39(v0[49], v38);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
    v39(v37, v38);
    goto LABEL_18;
  }
  if (v6 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    uint64_t v29 = v0[57];
    uint64_t v30 = v0[55];
    unint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0[56] + 8);
    v31(v0[58], v30);
    v31(v29, v30);
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v40 = (uint64_t (*)(void))v0[1];
    return v40();
  }
  uint64_t v19 = (void *)swift_task_alloc();
  v0[59] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1008D2FB0;
  uint64_t v20 = v0[44];
  uint64_t v21 = v0[45];
  uint64_t v22 = v0[40];
  return MusicLibrary.undoFavorite<A>(_:)(v22, v20, v21);
}

uint64_t sub_1008D2FB0()
{
  *(void *)(*(void *)v1 + 480) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1008D1790;
  }
  else {
    uint64_t v2 = sub_1008D30C4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1008D30C4()
{
  sub_10006CAB8(v0[41], (uint64_t)(v0 + 34), &qword_1010BD028);
  uint64_t v1 = v0[37];
  v0[61] = v1;
  if (v1)
  {
    v0[62] = v0[38];
    v0[63] = sub_100068990(v0 + 34, v1);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for MainActor();
    v0[64] = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008D3254, v3, v2);
  }
  else
  {
    (*(void (**)(void, void))(v0[56] + 8))(v0[58], v0[55]);
    sub_1000637B8((uint64_t)(v0 + 34), &qword_1010BD028);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1008D3254()
{
  uint64_t v2 = v0[61];
  uint64_t v1 = v0[62];
  uint64_t v3 = v0[51];
  swift_release();
  sub_1008DE908(v3, 0, v2, v1);
  sub_10084991C(v3, type metadata accessor for Notice.Variant);
  return _swift_task_switch(sub_1008D32FC, 0, 0);
}

uint64_t sub_1008D32FC()
{
  (*(void (**)(void, void))(v0[56] + 8))(v0[58], v0[55]);
  sub_1000760E4((uint64_t)(v0 + 34));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1008D33C8()
{
  uint64_t v6 = v0[66];
  swift_release();
  sub_1009395C0((uint64_t)(v0 + 27));
  uint64_t v5 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[69] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008D34DC;
  uint64_t v2 = v0[66];
  uint64_t v3 = v0[65];
  return v5(v0 + 27, v3, v2);
}

uint64_t sub_1008D34DC()
{
  uint64_t v1 = *v0 + 216;
  swift_task_dealloc();
  sub_1004AA460(v1);
  return _swift_task_switch(sub_1008D7410, 0, 0);
}

uint64_t sub_1008D35E4()
{
  uint64_t v1 = static MainActor.shared.getter();
  v0[74] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[75] = v2;
  *(unsigned char *)(v2 + 16) = 5;
  *(void *)(v2 + 24) = v0 + 2;
  *(void *)(v2 + 32) = 0;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[76] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1008D36FC;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 82, v1, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x8000000100DC9280, sub_1008499C0, v2, &type metadata for Bool);
}

uint64_t sub_1008D36FC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 584);
  uint64_t v3 = *(void *)(v1 + 576);
  return _swift_task_switch(sub_1008D385C, v3, v2);
}

uint64_t sub_1008D385C()
{
  swift_release();
  return _swift_task_switch(sub_1008D13A4, 0, 0);
}

uint64_t sub_1008D38C4()
{
  uint64_t v6 = v0[78];
  swift_release();
  sub_100939824((uint64_t)(v0 + 20));
  uint64_t v5 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[81] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1008D39D8;
  uint64_t v2 = v0[78];
  uint64_t v3 = v0[77];
  return v5(v0 + 20, v3, v2);
}

uint64_t sub_1008D39D8()
{
  uint64_t v1 = *v0 + 160;
  swift_task_dealloc();
  sub_1004AA460(v1);
  return _swift_task_switch(sub_1008D16B0, 0, 0);
}

uint64_t sub_1008D3AE4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(void *)(v0 + v4 + 24)) {
    sub_1000760E4(v0 + v4);
  }
  uint64_t v6 = v0 + v5;
  if (*(void *)(v0 + v5 + 56) != 1)
  {
    swift_unknownObjectWeakDestroy();
    int v7 = *(unsigned __int8 *)(v6 + 48);
    if (v7 != 255) {
      sub_1000E0DB0(*(id *)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), v7);
    }
    if (*(void *)(v6 + 56)) {
      swift_release();
    }
  }
  sub_1000760E4(v0 + ((v5 + 79) & 0xFFFFFFFFFFFFFFF8));

  return swift_deallocObject();
}

uint64_t sub_1008D3C28()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  unint64_t v5 = (*(void *)(*(void *)(v2 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0[4];
  uint64_t v8 = (uint64_t)v0 + v4;
  uint64_t v9 = (uint64_t)v0 + v5;
  uint64_t v10 = (uint64_t)v0 + v6;
  uint64_t v11 = (uint64_t)v0 + ((v6 + 79) & 0xFFFFFFFFFFFFFFF8);
  int v12 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v12;
  *int v12 = v1;
  v12[1] = sub_100081D08;
  return sub_1008D2918(v7, v8, v9, v10, v11, v2, v3);
}

uint64_t sub_1008D3D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[13] = a5;
  v6[14] = a6;
  v6[11] = a3;
  v6[12] = a4;
  v6[9] = a1;
  v6[10] = a2;
  sub_100063814(&qword_1010BCBE0);
  v6[15] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v6[16] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Actions.MetricsReportingContext();
  v6[17] = v7;
  v6[18] = *(void *)(v7 - 8);
  v6[19] = swift_task_alloc();
  return _swift_task_switch(sub_1008D3E90, 0, 0);
}

uint64_t sub_1008D3E90()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 72);
  if (v1) {
    v1(52);
  }
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 128);
  sub_10006CAB8(*(void *)(v0 + 88), v4, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 128), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v8 = *(void *)(v0 + 104);
    sub_100706008(*(void *)(v0 + 128), *(void *)(v0 + 152));
    *(void *)(v0 + 160) = MusicItem.metricsTargetIdentifier.getter(v8);
    *(void *)(v0 + 168) = v9;
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
    sub_100063814(&qword_1010BD000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v12;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 176) = sub_100872094(inited);
    *(void *)(v0 + 184) = v13;
    *(void *)(v0 + 192) = v14;
    *(_WORD *)(v0 + 208) = v15;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 200) = static MainActor.shared.getter();
    uint64_t v17 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008D40D4, v17, v16);
  }
}

uint64_t sub_1008D40D4()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void **)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);
  unint64_t v6 = *(uint64_t **)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 208);
  swift_release();
  sub_1008724B8(v5, v4, 5, 18, v7, v3, v2, v1, v8, v6);
  sub_1004CF644(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_1000637B8(v7, &qword_1010BCBE0);
  return _swift_task_switch(sub_1008D41D0, 0, 0);
}

uint64_t sub_1008D41D0()
{
  sub_10084991C(*(void *)(v0 + 152), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008D4268()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  uint64_t v7 = v0 + v3;
  uint64_t v8 = type metadata accessor for Actions.MetricsReportingContext();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v0 + v3, 1, v8))
  {
    uint64_t v16 = v4;
    if (*(void *)(v7 + 8) >= 0xBuLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v7 + *(int *)(v8 + 20);
    uint64_t v10 = type metadata accessor for MetricsEvent.Page(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v9 + *(int *)(v10 + 24);
      uint64_t v11 = type metadata accessor for URL();
      uint64_t v13 = *(void *)(v11 - 8);
      uint64_t v14 = v11;
      if (!(*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(v15, 1)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v16;
  }
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v3 + v4 + v6) & ~v6), v1);

  return swift_deallocObject();
}

uint64_t sub_1008D4538()
{
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[5];
  uint64_t v8 = (uint64_t)v0 + v5;
  uint64_t v9 = (uint64_t)v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_100081D08;
  return sub_1008D3D68(v6, v7, v8, v9, v3, v2);
}

uint64_t Actions.Favorite.Context.menuItemTitle.getter()
{
  return sub_1008D6AFC();
}

uint64_t (*Actions.Favorite.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 1918989427;
  *(void *)(v0 + 24) = 0xE400000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 1918989427;
  *(void *)(v1 + 24) = 0xE400000000000000;
  return sub_100842598;
}

uint64_t sub_1008D4738()
{
  return sub_1008D6DA4();
}

uint64_t (*sub_1008D4750())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 1918989427;
  *(void *)(v0 + 24) = 0xE400000000000000;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 1918989427;
  *(void *)(v1 + 24) = 0xE400000000000000;
  return sub_100842D2C;
}

uint64_t Actions.UndoFavorite.Context.menuItemTitle.getter()
{
  return sub_1008D6AFC();
}

uint64_t (*Actions.UndoFavorite.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x616C732E72617473;
  *(void *)(v0 + 24) = 0xEA00000000006873;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x616C732E72617473;
  *(void *)(v1 + 24) = 0xEA00000000006873;
  return sub_100842D2C;
}

uint64_t sub_1008D48A8()
{
  return sub_1008D6DA4();
}

uint64_t (*sub_1008D48CC())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x616C732E72617473;
  *(void *)(v0 + 24) = 0xEA00000000006873;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x616C732E72617473;
  *(void *)(v1 + 24) = 0xEA00000000006873;
  return sub_100842D2C;
}

uint64_t sub_1008D496C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A30F8(a1, 51, (uint64_t)sub_100842DF8, (uint64_t)&unk_1010BEDA8, (uint64_t)&unk_1010BEDB0, a2);
}

uint64_t sub_1008D49B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008A30F8(a1, 53, (uint64_t)sub_1008A4BF8, (uint64_t)&unk_1010BEDD8, (uint64_t)&unk_1010BEDE0, a2);
}

uint64_t sub_1008D49F4()
{
  uint64_t v0 = type metadata accessor for MusicLibrary.DislikeAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010BEEB0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.dislike.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v8 = sub_1008D4BC8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t sub_1008D4BB0()
{
  return sub_1008D212C((uint64_t (*)(void, unint64_t))sub_1008D49F4);
}

uint64_t sub_1008D4BC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MusicLibrary.DislikeAction.UnsupportedReason();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_1010BEEB0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13((char *)&v18 - v11, v1, v6);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v12, v6);
  if (v14 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v12, v6);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v12, v2);
    uint64_t v15 = sub_1008D5B20((uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else if (v14 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    return 0;
  }
  else
  {
    unint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease();
    unint64_t v18 = 0xD000000000000019;
    unint64_t v19 = 0x8000000100DCA030;
    v13(v10, v1, v6);
    v16._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    uint64_t v15 = v18;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  return v15;
}

uint64_t sub_1008D4E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a3;
  v5[8] = type metadata accessor for Notice.Variant(0);
  v5[9] = swift_task_alloc();
  uint64_t v9 = (void *)swift_task_alloc();
  v5[10] = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_1008D4F74;
  return MusicLibrary.new_dislike<A>(_:)(a2, a4, a5);
}

uint64_t sub_1008D4F74()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_1008D50C0, 0, 0);
  }
}

uint64_t sub_1008D50C0()
{
  sub_10006CAB8(v0[7], (uint64_t)(v0 + 2), &qword_1010BD028);
  uint64_t v1 = v0[5];
  v0[11] = v1;
  if (v1)
  {
    v0[12] = v0[6];
    v0[13] = sub_100068990(v0 + 2, v1);
    swift_storeEnumTagMultiPayload();
    type metadata accessor for MainActor();
    v0[14] = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008D51F8, v3, v2);
  }
  else
  {
    sub_1000637B8((uint64_t)(v0 + 2), &qword_1010BD028);
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1008D51F8()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  swift_release();
  sub_1008DE908(v3, 0, v2, v1);
  sub_10084991C(v3, type metadata accessor for Notice.Variant);
  return _swift_task_switch(sub_1008D52A0, 0, 0);
}

uint64_t sub_1008D52A0()
{
  sub_1000760E4(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008D530C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(void *)(v0 + v4 + 24)) {
    sub_1000760E4(v0 + v4);
  }

  return swift_deallocObject();
}

uint64_t sub_1008D53E4()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v5 = v0[4];
  uint64_t v6 = (uint64_t)v0 + v4;
  uint64_t v7 = (uint64_t)v0 + ((*(void *)(*(void *)(v2 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_1000154F4;
  return sub_1008D4E88(v5, v6, v7, v2, v3);
}

uint64_t sub_1008D54FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  sub_100063814(&qword_1010BCBE0);
  v4[13] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(sub_1008D5620, 0, 0);
}

uint64_t sub_1008D5620()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  sub_10006CAB8(*(void *)(v0 + 72), v3, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 112), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    sub_100706008(*(void *)(v0 + 112), *(void *)(v0 + 136));
    *(void *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 152) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    sub_100063814(&qword_1010BD000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 160) = sub_100872094(inited);
    *(void *)(v0 + 168) = v12;
    *(void *)(v0 + 176) = v13;
    *(_WORD *)(v0 + 192) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 184) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008D584C, v16, v15);
  }
}

uint64_t sub_1008D584C()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(uint64_t **)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_1008724B8(v5, v4, 5, 19, v7, v3, v2, v1, v8, v6);
  sub_1004CF644(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_1000637B8(v7, &qword_1010BCBE0);
  return _swift_task_switch(sub_1008D5948, 0, 0);
}

uint64_t sub_1008D5948()
{
  sub_10084991C(*(void *)(v0 + 136), (uint64_t (*)(void))type metadata accessor for Actions.MetricsReportingContext);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008D59E0()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_100081D08;
  return sub_1008D54FC(v6, v7, v2, v3);
}

uint64_t sub_1008D5B20(uint64_t a1)
{
  unint64_t v2 = 0xD000000000000010;
  uint64_t v3 = type metadata accessor for MusicLibrary.DislikeAction.UnsupportedReason();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v14 - v8, a1, v3);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v9, v3);
  if (v11 != enum case for MusicLibrary.DislikeAction.UnsupportedReason.unsupportedType(_:)
    && v11 != enum case for MusicLibrary.DislikeAction.UnsupportedReason.alreadyDisliked(_:))
  {
    if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.cannotDislikeWhenFavorited(_:))
    {
      return 0xD00000000000001DLL;
    }
    else if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.cannotDislikeWhenLiked(_:))
    {
      return 0xD000000000000019;
    }
    else if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.subscriptionRequired(_:))
    {
      return 0xD000000000000015;
    }
    else if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      return 0xD000000000000016;
    }
    else if (v11 != enum case for MusicLibrary.DislikeAction.UnsupportedReason.networkRequired(_:))
    {
      if (v11 == enum case for MusicLibrary.DislikeAction.UnsupportedReason.sharedLibrary(_:))
      {
        return 0x6C20646572616853;
      }
      else
      {
        uint64_t v14 = 0;
        unint64_t v15 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        uint64_t v14 = 0x206E776F6E6B6E55;
        unint64_t v15 = 0xEF206E6F73616572;
        v10(v7, a1, v3);
        v13._countAndFlagsBits = String.init<A>(describing:)();
        String.append(_:)(v13);
        swift_bridgeObjectRelease();
        unint64_t v2 = v14;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      }
    }
  }
  return v2;
}

uint64_t sub_1008D5E0C()
{
  uint64_t v0 = type metadata accessor for MusicLibrary.UndoDislikeAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010BEEA8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MusicLibraryAction<>.undoDislike.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v8 = sub_1008D5FE0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t sub_1008D5FC8()
{
  return sub_1008D212C((uint64_t (*)(void, unint64_t))sub_1008D5E0C);
}

uint64_t sub_1008D5FE0()
{
  uint64_t v1 = type metadata accessor for MusicLibrary.UndoDislikeAction.UnsupportedReason();
  uint64_t v21 = *(void *)(v1 - 8);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t v7 = sub_100063814(&qword_1010BEEA8);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  int v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  Swift::String v13 = (char *)&v20 - v12;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v20 = v0;
  v14((char *)&v20 - v12, v0, v7);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v13, v7);
  if (v15 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v13, v7);
    uint64_t v16 = v21;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v6, v13, v1);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v4, v6, v1);
    uint64_t v17 = String.init<A>(describing:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v1);
  }
  else if (v15 == enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    return 0;
  }
  else
  {
    unint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease();
    unint64_t v22 = 0xD000000000000019;
    unint64_t v23 = 0x8000000100DCA030;
    v14(v11, v20, v7);
    v18._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    uint64_t v17 = v22;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  return v17;
}

uint64_t sub_1008D62E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_100081D08;
  return MusicLibrary.new_undoDislike<A>(_:)(a2, a3, a4);
}

uint64_t sub_1008D63A4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1008D6468()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (uint64_t)v0
     + ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_100081D08;
  return sub_1008D62E8(v4, v5, v2, v3);
}

uint64_t sub_1008D654C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a3;
  v4[12] = a4;
  v4[9] = a1;
  v4[10] = a2;
  sub_100063814(&qword_1010BCBE0);
  v4[13] = swift_task_alloc();
  sub_100063814(&qword_1010BCFB8);
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Actions.MetricsReportingContext();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(sub_1008D6670, 0, 0);
}

uint64_t sub_1008D6670()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  sub_10006CAB8(*(void *)(v0 + 72), v3, &qword_1010BCFB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 112), &qword_1010BCFB8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 88);
    sub_100706008(*(void *)(v0 + 112), *(void *)(v0 + 136));
    *(void *)(v0 + 144) = MusicItem.metricsTargetIdentifier.getter(v7);
    *(void *)(v0 + 152) = v8;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    sub_100063814(&qword_1010BD000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    *(void *)(inited + 32) = MusicItem.metricsContentType.getter();
    *(void *)(inited + 40) = v11;
    *(unsigned char *)(inited + 48) = 0;
    *(void *)(v0 + 160) = sub_100872094(inited);
    *(void *)(v0 + 168) = v12;
    *(void *)(v0 + 176) = v13;
    *(_WORD *)(v0 + 192) = v14;
    swift_setDeallocating();
    swift_arrayDestroy();
    type metadata accessor for MainActor();
    *(void *)(v0 + 184) = static MainActor.shared.getter();
    uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1008D689C, v16, v15);
  }
}

uint64_t sub_1008D689C()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(uint64_t **)(v0 + 136);
  uint64_t v7 = *(void *)(v0 + 104);
  uint64_t v8 = *(unsigned __int16 *)(v0 + 192);
  swift_release();
  sub_1008724B8(v5, v4, 5, 20, v7, v3, v2, v1, v8, v6);
  sub_1004CF644(v3, v2, v1, v8, SBYTE1(v8));
  swift_bridgeObjectRelease();
  sub_1000637B8(v7, &qword_1010BCBE0);
  return _swift_task_switch(sub_1008D7458, 0, 0);
}

uint64_t sub_1008D699C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010BCFB8) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v5;
  uint64_t v7 = v0
     + ((v5 + *(void *)(v4 + 64) + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_100081D08;
  return sub_1008D654C(v6, v7, v2, v3);
}

uint64_t Actions.SuggestLess.Context.menuItemTitle.getter()
{
  return sub_1008D6AFC();
}

uint64_t sub_1008D6AFC()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*Actions.SuggestLess.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x7568742E646E6168;
  *(void *)(v0 + 24) = 0xEF6E776F6473626DLL;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x7568742E646E6168;
  *(void *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return sub_100842D2C;
}

uint64_t sub_1008D6D84()
{
  return sub_1008D6DA4();
}

uint64_t sub_1008D6DA4()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*sub_1008D6F84())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0x7568742E646E6168;
  *(void *)(v0 + 24) = 0xEF6E776F6473626DLL;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0x7568742E646E6168;
  *(void *)(v1 + 24) = 0xEF6E776F6473626DLL;
  return sub_100842D2C;
}

uint64_t (*Actions.UndoSuggestLess.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000015;
  *(void *)(v0 + 24) = 0x8000000100DC9FF0;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000015;
  *(void *)(v1 + 24) = 0x8000000100DC9FF0;
  return sub_100842D2C;
}

uint64_t (*sub_1008D70D0())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000015;
  *(void *)(v0 + 24) = 0x8000000100DC9FF0;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000015;
  *(void *)(v1 + 24) = 0x8000000100DC9FF0;
  return sub_100842D2C;
}

uint64_t _s9MusicCore7ActionsO15UndoSuggestLessO7ContextV13menuItemTitleSSvg_0()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

ValueMetadata *type metadata accessor for Actions.Favorite()
{
  return &type metadata for Actions.Favorite;
}

ValueMetadata *type metadata accessor for Actions.Favorite.Context()
{
  return &type metadata for Actions.Favorite.Context;
}

ValueMetadata *type metadata accessor for Actions.UndoFavorite()
{
  return &type metadata for Actions.UndoFavorite;
}

ValueMetadata *type metadata accessor for Actions.UndoFavorite.Context()
{
  return &type metadata for Actions.UndoFavorite.Context;
}

ValueMetadata *type metadata accessor for Actions.SuggestLess()
{
  return &type metadata for Actions.SuggestLess;
}

ValueMetadata *type metadata accessor for Actions.SuggestLess.Context()
{
  return &type metadata for Actions.SuggestLess.Context;
}

ValueMetadata *type metadata accessor for Actions.UndoSuggestLess()
{
  return &type metadata for Actions.UndoSuggestLess;
}

ValueMetadata *type metadata accessor for Actions.UndoSuggestLess.Context()
{
  return &type metadata for Actions.UndoSuggestLess.Context;
}

uint64_t sub_1008D73D0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t (*Actions.RateSong.Context.init<A>(item:library:ratingViewController:presentationSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))()
{
  uint64_t v30 = a8;
  uint64_t v31 = a3;
  uint64_t v28 = a7;
  uint64_t v29 = a2;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  v27[0] = a1;
  uint64_t v11 = *(void *)(a6 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(a1);
  __int16 v14 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v27 - v15;
  (*(void (**)(char *))(v11 + 16))((char *)v27 - v15);
  uint64_t v17 = *(unsigned __int8 *)(v11 + 80);
  v27[1] = v17 | 7;
  Swift::String v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = a6;
  *((void *)v18 + 3) = a7;
  uint64_t v19 = v30;
  *((void *)v18 + 4) = v30;
  *((void *)v18 + 5) = a2;
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(&v18[(v17 + 48) & ~v17], v16, a6);
  v20(v14, (char *)v27[0], a6);
  uint64_t v21 = (v17 + 56) & ~v17;
  unint64_t v22 = (v12 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (char *)swift_allocObject();
  uint64_t v24 = v28;
  *((void *)v23 + 2) = a6;
  *((void *)v23 + 3) = v24;
  uint64_t v25 = v31;
  *((void *)v23 + 4) = v19;
  *((void *)v23 + 5) = v25;
  *((void *)v23 + 6) = v32;
  v20(&v23[v21], v14, a6);
  *(void *)&v23[v22] = v29;
  sub_1000E08E4(v33, (uint64_t)&v23[(v22 + 15) & 0xFFFFFFFFFFFFFFF8]);
  swift_retain();
  return sub_1008D7F20;
}

uint64_t static Actions.RateSong.action(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(unsigned char *)(a5 + 32) = 35;
  *(void *)(a5 + 40) = sub_100842DF8;
  *(void *)(a5 + 48) = 0;
  *(void *)(a5 + 56) = 0x4014000000000000;
  *(void *)(a5 + 64) = &unk_1010BEED8;
  *(void *)(a5 + 72) = 0;
  *(void *)(a5 + 80) = &unk_1010BEEE0;
  *(void *)(a5 + 88) = 0;
  swift_retain();

  return swift_retain();
}

uint64_t sub_1008D7710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)a2 = *(void *)a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = v2;
  *(unsigned char *)(a2 + 32) = 35;
  *(void *)(a2 + 40) = sub_100842DF8;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0x4014000000000000;
  *(void *)(a2 + 64) = &unk_1010BEED8;
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = &unk_1010BEEE0;
  *(void *)(a2 + 88) = 0;
  swift_retain();

  return swift_retain();
}

uint64_t Actions.RateSong.Context.menuItemTitle.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t (*Actions.RateSong.Context.menuItemImage.getter())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000017;
  *(void *)(v0 + 24) = 0x8000000100DCA1B0;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000017;
  *(void *)(v1 + 24) = 0x8000000100DCA1B0;
  return sub_100842598;
}

uint64_t (*sub_1008D7A30())()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000017;
  *(void *)(v0 + 24) = 0x8000000100DCA1B0;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0xD000000000000017;
  *(void *)(v1 + 24) = 0x8000000100DCA1B0;
  return sub_100842D2C;
}

unint64_t sub_1008D7AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a4;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v4 = type metadata accessor for MusicLibrary.AddAction();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814(&qword_1010BD058);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MusicLibrary();
  static MusicLibrary.shared.getter();
  char v12 = static MusicLibrary.== infix(_:_:)();
  swift_release();
  if ((v12 & 1) == 0) {
    return 0xD00000000000001DLL;
  }
  uint64_t v24 = v4;
  uint64_t v25 = v5;
  uint64_t v26 = v9;
  id v13 = [self standardUserDefaults];
  NSString v14 = String._bridgeToObjectiveC()();
  unsigned int v15 = [v13 BOOLForKey:v14];

  if (!v15) {
    return 0xD000000000000018;
  }
  static MusicLibraryAction<>.add.getter();
  uint64_t v16 = v24;
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v16);
  uint64_t v17 = v26;
  unint64_t v18 = 0xD000000000000011;
  if ((*(unsigned int (**)(char *, uint64_t))(v26 + 88))(v11, v8) == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    (*(void (**)(char *, uint64_t))(v17 + 96))(v11, v8);
    uint64_t v19 = type metadata accessor for MusicLibrary.AddAction.UnsupportedReason();
    uint64_t v20 = *(void *)(v19 - 8);
    int v21 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v11, v19);
    int v22 = enum case for MusicLibrary.AddAction.UnsupportedReason.alreadyAdded(_:);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
    if (v21 == v22) {
      return 0;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v8);
  }
  return v18;
}

uint64_t sub_1008D7E5C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

unint64_t sub_1008D7F20()
{
  return sub_1008D7AD0(v0[5], (uint64_t)v0+ ((*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[2] - 8) + 80)), v0[2], v0[3]);
}

id NSUserDefaults.showStarRatings.getter()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 BOOLForKey:v1];

  return v2;
}

uint64_t sub_1008D7FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[8] = a1;
  v8[9] = a2;
  uint64_t v9 = *(void *)(a6 - 8);
  v8[16] = v9;
  v8[17] = *(void *)(v9 + 64);
  v8[18] = swift_task_alloc();
  type metadata accessor for Locale();
  v8[19] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  v8[20] = v10;
  v8[21] = *(void *)(v10 - 8);
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[24] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1008D8158, v12, v11);
}

uint64_t sub_1008D8158()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 160);
  swift_release();
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 160);
  uint64_t v7 = *(void *)(v0 + 168);
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [self alertControllerWithTitle:v9 message:0 preferredStyle:1];

  if (qword_1010BC4C0 != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)(v0 + 80);
  uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 64);
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v32 = self;
  id v14 = [v32 actionWithTitle:v13 style:1 handler:0];

  uint64_t v33 = v14;
  [v10 addAction:v14];
  unsigned int v15 = (void *)v12(v11);
  uint64_t v31 = v16;
  if (qword_1010BC4B8 != -1) {
    swift_once();
  }
  uint64_t v17 = *(void *)(v0 + 144);
  uint64_t v18 = *(void *)(v0 + 128);
  uint64_t v19 = *(void *)(v0 + 120);
  uint64_t v20 = *(void *)(v0 + 88);
  long long v30 = *(_OWORD *)(v0 + 104);
  uint64_t v21 = *(void *)(v0 + 104);
  (*(void (**)(uint64_t, void, uint64_t))(v18 + 16))(v17, *(void *)(v0 + 80), v21);
  unint64_t v22 = (*(unsigned __int8 *)(v18 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v30;
  *(void *)(v23 + 32) = v19;
  *(void *)(v23 + 40) = v15;
  *(void *)(v23 + 48) = v31;
  *(void *)(v23 + 56) = v20;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))(v23 + v22, v17, v21);
  swift_bridgeObjectRetain();
  id v24 = v15;
  swift_retain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 48) = sub_1008D9248;
  *(void *)(v0 + 56) = v23;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_10023B98C;
  *(void *)(v0 + 40) = &unk_100FF4D38;
  uint64_t v26 = _Block_copy((const void *)(v0 + 16));
  swift_release();
  id v27 = [v32 actionWithTitle:v25 style:0 handler:v26];
  _Block_release(v26);

  [v10 addAction:v27];
  [v10 setPreferredAction:v27];
  [v10 setContentViewController:v24];
  PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v10, 1, (id)0xF, (void **)1, 0, 0);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_1008D8618()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  uint64_t v5 = v0 + v4;
  swift_unknownObjectWeakDestroy();
  int v6 = *(unsigned __int8 *)(v0 + v4 + 48);
  if (v6 != 255) {
    sub_1000E0DB0(*(id *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), v6);
  }
  if (*(void *)(v5 + 56)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1008D8730()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  unint64_t v7 = (*(void *)(*(void *)(v2 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v0[6];
  uint64_t v9 = (uint64_t)v0 + v6;
  uint64_t v10 = *(void *)((char *)v0 + v7);
  uint64_t v11 = (uint64_t)v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v12;
  *uint64_t v12 = v1;
  v12[1] = sub_1000154F4;
  return sub_1008D7FC8(v5, v8, v9, v10, v11, v2, v3, v4);
}

ValueMetadata *type metadata accessor for Actions.RateSong()
{
  return &type metadata for Actions.RateSong;
}

ValueMetadata *type metadata accessor for Actions.RateSong.Context()
{
  return &type metadata for Actions.RateSong.Context;
}

uint64_t sub_1008D888C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008D88C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v26 = a7;
  uint64_t v27 = a8;
  uint64_t v13 = *(void *)(a6 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(a1);
  unsigned int v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100063814(&qword_1010C0040);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, a6);
  type metadata accessor for MainActor();
  id v20 = a2;
  swift_retain();
  uint64_t v21 = static MainActor.shared.getter();
  unint64_t v22 = (*(unsigned __int8 *)(v13 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v23 = (char *)swift_allocObject();
  *((void *)v23 + 2) = v21;
  *((void *)v23 + 3) = &protocol witness table for MainActor;
  uint64_t v24 = v26;
  *((void *)v23 + 4) = a6;
  *((void *)v23 + 5) = v24;
  *((void *)v23 + 6) = v27;
  *((void *)v23 + 7) = v20;
  *((void *)v23 + 8) = a3;
  *((void *)v23 + 9) = a4;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v23[v22], v15, a6);
  sub_100066A68((uint64_t)v18, (uint64_t)&unk_1010BEF20, (uint64_t)v23);
  return swift_release();
}

uint64_t sub_1008D8AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = v13;
  v8[9] = v14;
  v8[6] = a7;
  v8[7] = a8;
  _OWORD v8[4] = a5;
  v8[5] = a6;
  _OWORD v8[3] = a4;
  v8[10] = *(void *)(a8 - 8);
  v8[11] = swift_task_alloc();
  v8[12] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[13] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[14] = v10;
  v8[15] = v9;
  return _swift_task_switch(sub_1008D8BEC, v10, v9);
}

uint64_t sub_1008D8BEC()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[4];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  v0[16] = v4;
  double v5 = (double)v4 / 5.0;
  unint64_t v6 = (void *)swift_task_alloc();
  v0[17] = v6;
  uint64_t v7 = *(void *)(v1 + 8);
  void *v6 = v0;
  v6[1] = sub_1008D8CD4;
  uint64_t v8 = v0[9];
  uint64_t v10 = v0[6];
  uint64_t v9 = v0[7];
  v11.n128_f64[0] = v5;
  return MusicLibrary.setUserRating<A>(_:for:)(v10, v9, v7, v8, v11);
}

uint64_t sub_1008D8CD4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  uint64_t v4 = *(void *)(v2 + 112);
  if (v0) {
    double v5 = sub_1008D8E80;
  }
  else {
    double v5 = sub_1008D8E10;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1008D8E10()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008D8E80()
{
  uint64_t v28 = v0;
  swift_release();
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100050A90(v5, (uint64_t)static Logger.actions);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v6(v1, v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[18];
  if (v9)
  {
    log = v7;
    uint64_t v11 = v0[11];
    uint64_t v12 = v0[12];
    uint64_t v13 = v0[10];
    uint64_t v14 = v0[7];
    double v15 = (double)(uint64_t)v0[16] / 5.0;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 134349570;
    *(double *)(v16 + 4) = v15;
    *(_WORD *)(v16 + 12) = 2082;
    v6(v12, v11, v14);
    uint64_t v17 = String.init<A>(describing:)();
    *(void *)(v16 + 14) = sub_100075E68(v17, v18, &v27);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v14);
    *(_WORD *)(v16 + 22) = 2082;
    v0[2] = v10;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v19 = String.init<A>(describing:)();
    *(void *)(v16 + 24) = sub_100075E68(v19, v20, &v27);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v8, "Failed to set userRating=%{public}f for item=%{public}s with error=%{public}s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v21 = v0[10];
    uint64_t v22 = v0[11];
    uint64_t v23 = v0[7];
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v23);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

uint64_t sub_1008D917C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1008D9248(uint64_t a1)
{
  return sub_1008D88C4(a1, *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1008D9290()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1008D9364(uint64_t a1)
{
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[8];
  uint64_t v8 = v1[9];
  uint64_t v9 = (uint64_t)v1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000154F4;
  return sub_1008D8AE0(a1, v5, v6, v4, v7, v8, v9, v3);
}

uint64_t static Notice.variant(_:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100063814(&qword_1010BEF28);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v120 - v9;
  uint64_t v11 = sub_100063814(&qword_1010BEF30);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (uint64_t *)((char *)&v120 - v16);
  __chkstk_darwin(v15);
  uint64_t v126 = (uint64_t *)((char *)&v120 - v18);
  uint64_t v19 = type metadata accessor for Locale();
  __chkstk_darwin(v19 - 8);
  long long v127 = (char *)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for String.LocalizationValue();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v129 = v21;
  uint64_t v130 = v22;
  uint64_t v23 = __chkstk_darwin(v21);
  long long v128 = (char *)&v120 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v120 - v25;
  uint64_t v27 = type metadata accessor for Notice.Variant(0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char **)((char *)&v120 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1008DBE40(a1, (uint64_t)v29, type metadata accessor for Notice.Variant);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v40 = *v29;
      uint64_t v39 = v29[1];
      unint64_t v41 = Notice.Variant.id.getter();
      unint64_t v124 = v42;
      unint64_t v125 = v41;
      if (v39)
      {
        uint64_t v122 = v39;
        uint64_t v123 = (uint64_t)v40;
        uint64_t v44 = v129;
        uint64_t v43 = v130;
        uint64_t v45 = v128;
      }
      else
      {
        String.LocalizationValue.init(stringLiteral:)();
        uint64_t v44 = v129;
        uint64_t v43 = v130;
        uint64_t v45 = v128;
        (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v128, v26, v129);
        if (qword_1010BBBE0 != -1) {
          swift_once();
        }
        id v99 = (id)qword_10112A3A0;
        static Locale.current.getter();
        uint64_t v100 = String.init(localized:table:bundle:locale:comment:)();
        uint64_t v122 = v101;
        uint64_t v123 = v100;
        (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v44);
      }
      uint64_t v102 = qword_1010BC578;
      swift_bridgeObjectRetain();
      if (v102 != -1) {
        swift_once();
      }
      if (static DeviceCapabilities.isInternalInstall == 1)
      {
        long long v128 = v40;
        String.LocalizationValue.init(stringLiteral:)();
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v45, v26, v44);
        if (qword_1010BBBE0 != -1) {
          swift_once();
        }
        id v103 = (id)qword_10112A3A0;
        static Locale.current.getter();
        uint64_t v129 = String.init(localized:table:bundle:locale:comment:)();
        uint64_t v130 = v104;
        (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v44);
        if (static DeviceCapabilities.isInternalInstall == 1)
        {
          uint64_t v105 = swift_allocObject();
          *(void *)(v105 + 16) = v128;
          *(void *)(v105 + 24) = v39;
          long long v128 = (char *)sub_1008DBA18;
          goto LABEL_41;
        }
      }
      else
      {
        uint64_t v129 = 0;
        uint64_t v130 = 0;
      }
      swift_bridgeObjectRelease();
      long long v128 = 0;
      uint64_t v105 = 0;
LABEL_41:
      uint64_t v106 = Image.init(_internalSystemName:)();
      uint64_t v107 = (uint64_t)v126;
      *uint64_t v126 = v106;
      uint64_t v108 = type metadata accessor for Notice.Thumbnail(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v109 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56);
      v109(v107, 0, 1, v108);
      uint64_t v110 = (int *)type metadata accessor for Notice(0);
      uint64_t v111 = (uint64_t)a2 + v110[5];
      v109(v111, 1, 1, v108);
      uint64_t v112 = (uint64_t *)((char *)a2 + v110[7]);
      *uint64_t v112 = 0;
      v112[1] = 0;
      uint64_t v113 = (uint64_t *)((char *)a2 + v110[8]);
      *uint64_t v113 = 0;
      v113[1] = 0;
      uint64_t v114 = (char *)a2 + v110[9];
      *(void *)uint64_t v114 = 0;
      v114[8] = 1;
      uint64_t v115 = v110[10];
      *((unsigned char *)a2 + v115) = 1;
      unint64_t v116 = v124;
      *a2 = v125;
      a2[1] = v116;
      sub_1008DB978(v107, v111);
      uint64_t v117 = (uint64_t *)((char *)a2 + v110[6]);
      uint64_t v118 = (uint64_t)v122;
      uint64_t *v117 = v123;
      v117[1] = v118;
      swift_bridgeObjectRelease();
      uint64_t v119 = v130;
      *uint64_t v112 = v129;
      v112[1] = v119;
      uint64_t result = sub_10006ADFC(*v113);
      *uint64_t v113 = (uint64_t)v128;
      v113[1] = v105;
      *(void *)uint64_t v114 = 2;
      v114[8] = 0;
      *((unsigned char *)a2 + v115) = 1;
      return result;
    case 2u:
      unint64_t v46 = Notice.Variant.id.getter();
      unint64_t v124 = v47;
      unint64_t v125 = v46;
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v49 = v129;
      uint64_t v48 = v130;
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v128, v26, v129);
      if (qword_1010BBBE0 != -1) {
        goto LABEL_42;
      }
      goto LABEL_21;
    case 3u:
    case 4u:
    case 5u:
      unint64_t v50 = Notice.Variant.id.getter();
      unint64_t v124 = v51;
      unint64_t v125 = v50;
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v49 = v129;
      uint64_t v48 = v130;
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v128, v26, v129);
      if (qword_1010BBBE0 == -1) {
        goto LABEL_21;
      }
      goto LABEL_42;
    case 6u:
      unint64_t v52 = Notice.Variant.id.getter();
      unint64_t v124 = v53;
      unint64_t v125 = v52;
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v49 = v129;
      uint64_t v48 = v130;
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v128, v26, v129);
      if (qword_1010BBBE0 == -1) {
        goto LABEL_21;
      }
      goto LABEL_42;
    case 7u:
      unint64_t v54 = Notice.Variant.id.getter();
      unint64_t v124 = v55;
      unint64_t v125 = v54;
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v49 = v129;
      uint64_t v48 = v130;
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v128, v26, v129);
      if (qword_1010BBBE0 == -1) {
        goto LABEL_21;
      }
      goto LABEL_42;
    case 8u:
      unint64_t v56 = Notice.Variant.id.getter();
      unint64_t v124 = v57;
      unint64_t v125 = v56;
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v49 = v129;
      uint64_t v48 = v130;
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v128, v26, v129);
      if (qword_1010BBBE0 == -1) {
        goto LABEL_21;
      }
      goto LABEL_42;
    case 9u:
      unint64_t v58 = Notice.Variant.id.getter();
      unint64_t v124 = v59;
      unint64_t v125 = v58;
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v49 = v129;
      uint64_t v48 = v130;
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v128, v26, v129);
      if (qword_1010BBBE0 == -1) {
        goto LABEL_21;
      }
      goto LABEL_42;
    case 0xAu:
      unint64_t v60 = Notice.Variant.id.getter();
      unint64_t v124 = v61;
      unint64_t v125 = v60;
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v49 = v129;
      uint64_t v48 = v130;
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v128, v26, v129);
      if (qword_1010BBBE0 == -1) {
        goto LABEL_21;
      }
      goto LABEL_42;
    case 0xBu:
      unint64_t v62 = Notice.Variant.id.getter();
      unint64_t v124 = v63;
      unint64_t v125 = v62;
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v49 = v129;
      uint64_t v48 = v130;
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v128, v26, v129);
      if (qword_1010BBBE0 == -1) {
        goto LABEL_21;
      }
LABEL_42:
      swift_once();
LABEL_21:
      id v64 = (id)qword_10112A3A0;
      static Locale.current.getter();
      long long v128 = (char *)String.init(localized:table:bundle:locale:comment:)();
      uint64_t v66 = v65;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v49);
      uint64_t v67 = Image.init(_internalSystemName:)();
      uint64_t v68 = (uint64_t)v126;
      *uint64_t v126 = v67;
      uint64_t v69 = type metadata accessor for Notice.Thumbnail(0);
      swift_storeEnumTagMultiPayload();
      id v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56);
      v70(v68, 0, 1, v69);
      id v71 = (int *)type metadata accessor for Notice(0);
      uint64_t v72 = (uint64_t)a2 + v71[5];
      v70(v72, 1, 1, v69);
      uint64_t v73 = (unint64_t *)((char *)a2 + v71[7]);
      *uint64_t v73 = 0;
      v73[1] = 0;
      uint64_t v74 = (uint64_t *)((char *)a2 + v71[8]);
      *uint64_t v74 = 0;
      v74[1] = 0;
      uint64_t v75 = (char *)a2 + v71[9];
      *(void *)uint64_t v75 = 0;
      v75[8] = 1;
      uint64_t v76 = v71[10];
      *((unsigned char *)a2 + v76) = 1;
      unint64_t v77 = v124;
      *a2 = v125;
      a2[1] = v77;
      sub_1008DB978(v68, v72);
      uint64_t v78 = (char **)((char *)a2 + v71[6]);
      *uint64_t v78 = v128;
      v78[1] = v66;
      swift_bridgeObjectRelease();
      *uint64_t v73 = 0;
      v73[1] = 0;
      uint64_t result = sub_10006ADFC(*v74);
      *uint64_t v74 = 0;
      v74[1] = 0;
      *(void *)uint64_t v75 = 0;
      v75[8] = 0;
      *((unsigned char *)a2 + v76) = 1;
      return result;
    default:
      long long v30 = (uint64_t *)*v29;
      unint64_t v125 = (unint64_t)v29[1];
      uint64_t v126 = v30;
      uint64_t v31 = sub_100063814(&qword_1010BEF38);
      uint64_t v32 = (uint64_t)v29 + *(int *)(v31 + 48);
      uint64_t v33 = *(uint64_t *)((char *)v29 + *(int *)(v31 + 64));
      sub_1008DBA20(v32, (uint64_t)v10);
      unint64_t v34 = Notice.Variant.id.getter();
      uint64_t v123 = v35;
      unint64_t v124 = v34;
      sub_10006CAB8((uint64_t)v10, (uint64_t)v8, &qword_1010BEF28);
      uint64_t v36 = type metadata accessor for Artwork();
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v8, 1, v36) == 1)
      {
        sub_1000637B8((uint64_t)v8, &qword_1010BEF28);
        uint64_t v38 = type metadata accessor for Notice.Thumbnail(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v14, 1, 1, v38);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v14, v8, v36);
        uint64_t v38 = type metadata accessor for Notice.Thumbnail(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v14, 0, 1, v38);
      }
      type metadata accessor for Notice.Thumbnail(0);
      uint64_t v80 = *(char **)(v38 - 8);
      int v81 = (*((uint64_t (**)(char *, uint64_t, uint64_t))v80 + 6))(v14, 1, v38);
      uint64_t v122 = v80;
      if (v81 == 1)
      {
        *uint64_t v17 = Image.init(_internalSystemName:)();
        swift_storeEnumTagMultiPayload();
        uint64_t v121 = (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))*((void *)v80 + 7);
        v121(v17, 0, 1, v38);
        sub_1000637B8((uint64_t)v14, &qword_1010BEF30);
      }
      else
      {
        sub_1008DBA88((uint64_t)v14, (uint64_t)v17);
        uint64_t v121 = (void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))*((void *)v80 + 7);
        v121(v17, 0, 1, v38);
      }
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v82._countAndFlagsBits = 0;
      v82._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v82);
      uint64_t v131 = v33;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v83._countAndFlagsBits = 0x297328676E6F7320;
      v83._object = (void *)0xEE00646564646120;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v83);
      String.LocalizationValue.init(stringInterpolation:)();
      uint64_t v85 = v129;
      uint64_t v84 = v130;
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v128, v26, v129);
      if (qword_1010BBBE0 != -1) {
        swift_once();
      }
      id v86 = (id)qword_10112A3A0;
      static Locale.current.getter();
      uint64_t v87 = String.init(localized:table:bundle:locale:comment:)();
      long long v127 = v88;
      long long v128 = (char *)v87;
      (*(void (**)(char *, uint64_t))(v84 + 8))(v26, v85);
      uint64_t v89 = (int *)type metadata accessor for Notice(0);
      uint64_t v90 = (uint64_t)a2 + v89[5];
      v121((uint64_t *)v90, 1, 1, v38);
      uint64_t v91 = (char **)((char *)a2 + v89[7]);
      char *v91 = 0;
      v91[1] = 0;
      uint64_t v92 = (uint64_t *)((char *)a2 + v89[8]);
      *uint64_t v92 = 0;
      v92[1] = 0;
      uint64_t v93 = (char *)a2 + v89[9];
      *(void *)uint64_t v93 = 0;
      v93[8] = 1;
      uint64_t v94 = v89[10];
      *((unsigned char *)a2 + v94) = 1;
      uint64_t v95 = v123;
      *a2 = v124;
      a2[1] = v95;
      sub_1008DB978((uint64_t)v17, v90);
      uint64_t v96 = (uint64_t **)((char *)a2 + v89[6]);
      unint64_t v97 = v125;
      *uint64_t v96 = v126;
      v96[1] = (uint64_t *)v97;
      swift_bridgeObjectRelease();
      uint64_t v98 = v127;
      char *v91 = v128;
      v91[1] = v98;
      sub_10006ADFC(*v92);
      *uint64_t v92 = 0;
      v92[1] = 0;
      *(void *)uint64_t v93 = 0;
      v93[8] = 0;
      *((unsigned char *)a2 + v94) = 1;
      return sub_1000637B8((uint64_t)v10, &qword_1010BEF28);
  }
}

uint64_t Notice.thumbnail.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Notice(0);
  return sub_10006CAB8(v1 + *(int *)(v3 + 20), a1, &qword_1010BEF30);
}

uint64_t Notice.thumbnail.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Notice(0) + 20);

  return sub_1008DB978(a1, v3);
}

double (*Notice.thumbnail.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.message.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Notice(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Notice.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Notice(0) + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

double (*Notice.message.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.headnote.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Notice(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Notice.headnote.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for Notice(0) + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

double (*Notice.headnote.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.link.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Notice(0) + 32));
  sub_10007B674(v1);
  return v1;
}

uint64_t Notice.link.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for Notice(0) + 32));
  uint64_t result = sub_10006ADFC(*v5);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

double (*Notice.link.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.hapticFeedback.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Notice(0) + 36));
}

uint64_t Notice.hapticFeedback.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for Notice(0);
  uint64_t v6 = v2 + *(int *)(result + 36);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

double (*Notice.hapticFeedback.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.isDismissable.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Notice(0) + 40));
}

uint64_t Notice.isDismissable.setter(char a1)
{
  uint64_t result = type metadata accessor for Notice(0);
  *(unsigned char *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

double (*Notice.isDismissable.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t Notice.init(id:image:message:headnote:link:hapticFeedback:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v41 = a8;
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v33 = a2;
  uint64_t v34 = a4;
  int v40 = a12;
  uint64_t v38 = a7;
  uint64_t v39 = a11;
  uint64_t v37 = a10;
  uint64_t v15 = sub_100063814(&qword_1010BEF30);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (uint64_t *)((char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v17 = a3;
  uint64_t v18 = type metadata accessor for Notice.Thumbnail(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v17, 0, 1, v18);
  uint64_t v20 = (int *)type metadata accessor for Notice(0);
  uint64_t v21 = (uint64_t)a9 + v20[5];
  v19((void *)v21, 1, 1, v18);
  uint64_t v22 = (void *)((char *)a9 + v20[7]);
  *uint64_t v22 = 0;
  v22[1] = 0;
  uint64_t v23 = (void *)((char *)a9 + v20[8]);
  uint64_t *v23 = 0;
  v23[1] = 0;
  uint64_t v24 = (char *)a9 + v20[9];
  *(void *)uint64_t v24 = 0;
  v24[8] = 1;
  uint64_t v25 = v20[10];
  *((unsigned char *)a9 + v25) = 1;
  uint64_t v26 = v33;
  *a9 = a1;
  a9[1] = v26;
  sub_1008DB978((uint64_t)v17, v21);
  uint64_t v27 = (void *)((char *)a9 + v20[6]);
  uint64_t v28 = v35;
  *uint64_t v27 = v34;
  v27[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = v38;
  *uint64_t v22 = v36;
  v22[1] = v29;
  uint64_t result = sub_10006ADFC(*v23);
  uint64_t v31 = v37;
  uint64_t *v23 = v41;
  v23[1] = v31;
  *(void *)uint64_t v24 = v39;
  v24[8] = v40 & 1;
  *((unsigned char *)a9 + v25) = 1;
  return result;
}

uint64_t Notice.init(id:thumbnail:message:headnote:link:hapticFeedback:isDismissable:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, char a12, char a13)
{
  uint64_t v16 = (int *)type metadata accessor for Notice(0);
  uint64_t v17 = (uint64_t)a9 + v16[5];
  uint64_t v18 = type metadata accessor for Notice.Thumbnail(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = (void *)((char *)a9 + v16[7]);
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v20 = (void *)((char *)a9 + v16[8]);
  *uint64_t v20 = 0;
  v20[1] = 0;
  uint64_t v21 = (char *)a9 + v16[9];
  *(void *)uint64_t v21 = 0;
  v21[8] = 1;
  uint64_t v22 = v16[10];
  *((unsigned char *)a9 + v22) = 1;
  *a9 = a1;
  a9[1] = a2;
  sub_1008DB978(a3, v17);
  uint64_t v23 = (void *)((char *)a9 + v16[6]);
  void *v23 = a4;
  v23[1] = a5;
  swift_bridgeObjectRelease();
  *uint64_t v19 = a6;
  v19[1] = a7;
  uint64_t result = sub_10006ADFC(*v20);
  *uint64_t v20 = a8;
  v20[1] = a10;
  *(void *)uint64_t v21 = a11;
  v21[8] = a12 & 1;
  *((unsigned char *)a9 + v22) = a13;
  return result;
}

uint64_t Notice.init(id:symbol:message:headnote:link:hapticFeedback:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, void *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v30 = a2;
  int v38 = a11;
  uint64_t v36 = a10;
  uint64_t v37 = a6;
  uint64_t v34 = a9;
  uint64_t v35 = a5;
  uint64_t v33 = a8;
  sub_100063814(&qword_1010BEF30);
  __chkstk_darwin();
  uint64_t v14 = (uint64_t *)((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t *v14 = Image.init(_internalSystemName:)();
  uint64_t v15 = type metadata accessor for Notice.Thumbnail(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  v16(v14, 0, 1, v15);
  uint64_t v17 = (int *)type metadata accessor for Notice(0);
  uint64_t v18 = (uint64_t)a7 + v17[5];
  v16((uint64_t *)v18, 1, 1, v15);
  uint64_t v19 = (void *)((char *)a7 + v17[7]);
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v20 = (void *)((char *)a7 + v17[8]);
  *uint64_t v20 = 0;
  v20[1] = 0;
  uint64_t v21 = (char *)a7 + v17[9];
  *(void *)uint64_t v21 = 0;
  v21[8] = 1;
  uint64_t v22 = v17[10];
  *((unsigned char *)a7 + v22) = 1;
  uint64_t v23 = v30;
  *a7 = a1;
  a7[1] = v23;
  sub_1008DB978((uint64_t)v14, v18);
  uint64_t v24 = (void *)((char *)a7 + v17[6]);
  uint64_t v25 = v32;
  *uint64_t v24 = v31;
  v24[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = v37;
  *uint64_t v19 = v35;
  v19[1] = v26;
  uint64_t result = sub_10006ADFC(*v20);
  uint64_t v28 = v34;
  *uint64_t v20 = v33;
  v20[1] = v28;
  *(void *)uint64_t v21 = v36;
  v21[8] = v38 & 1;
  *((unsigned char *)a7 + v22) = 1;
  return result;
}

uint64_t type metadata accessor for Notice.Variant(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010BF108);
}

uint64_t Notice.withLink(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1008DBE40(v3, a3, type metadata accessor for Notice);
  uint64_t v7 = (uint64_t *)(a3 + *(int *)(type metadata accessor for Notice(0) + 32));
  uint64_t v8 = *v7;
  swift_retain();
  uint64_t result = sub_10006ADFC(v8);
  *uint64_t v7 = a1;
  v7[1] = a2;
  return result;
}

unint64_t Notice.Variant.id.getter()
{
  uint64_t v1 = type metadata accessor for Notice.Variant(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1008DBE40(v0, (uint64_t)v3, type metadata accessor for Notice.Variant);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t result = 0x7478654E79616C70;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1008DD264((uint64_t)v3, type metadata accessor for Notice.Variant);
      unint64_t result = 0x726F727265;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x7473614C79616C70;
      break;
    case 4:
      unint64_t result = 0x6575516F54646461;
      break;
    case 5:
      unint64_t result = 0x6574664179616C70;
      break;
    case 6:
      unint64_t result = 0x417972617262696CLL;
      break;
    case 7:
      unint64_t result = 0x436E6F6974617473;
      break;
    case 8:
      unint64_t result = 0x657469726F766166;
      break;
    case 9:
      unint64_t result = 0x69726F7661666E75;
      break;
    case 10:
      unint64_t result = 0x4C74736567677573;
      break;
    case 11:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      swift_bridgeObjectRelease();
      uint64_t v6 = sub_100063814(&qword_1010BEF38);
      sub_1000637B8((uint64_t)&v3[*(int *)(v6 + 48)], &qword_1010BEF28);
      unint64_t result = 0x506F546465646461;
      break;
  }
  return result;
}

uint64_t sub_1008DB63C()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v24 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100063814(&qword_1010BCBE0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - v7;
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_100010358((uint64_t)_swiftEmptyArrayStorage);
  sub_100954770(0x8000000100DCA310, (unint64_t)_swiftEmptyArrayStorage, v9, (uint64_t)_swiftEmptyArrayStorage, 1, (uint64_t)v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10006CAB8((uint64_t)v8, (uint64_t)v6, &qword_1010BCBE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
  {
    sub_1000637B8((uint64_t)v8, &qword_1010BCBE0);
  }
  else
  {
    uint64_t v10 = v24;
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v24, v6, v0);
    uint64_t v11 = self;
    id v12 = [v11 sharedApplication];
    URL._bridgeToObjectiveC()(v13);
    uint64_t v15 = v14;
    unsigned int v16 = [v12 canOpenURL:v14];

    if (v16)
    {
      id v17 = [v11 sharedApplication];
      URL._bridgeToObjectiveC()(v18);
      uint64_t v20 = v19;
      sub_1008F6A7C((uint64_t)_swiftEmptyArrayStorage);
      _s3__C25OpenExternalURLOptionsKeyVMa_0(0);
      sub_1008DE8B0();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v17 openURL:v20 options:isa completionHandler:0];
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
    uint64_t v6 = v8;
  }
  return sub_1000637B8((uint64_t)v6, &qword_1010BCBE0);
}

uint64_t sub_1008DB978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010BEF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008DB9E0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008DBA18()
{
  return sub_1008DB63C();
}

uint64_t sub_1008DBA20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010BEF28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008DBA88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Notice.Thumbnail(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s9MusicCore6NoticeV9ThumbnailO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artwork();
  uint64_t v24 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Notice.Thumbnail(0);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v12 = (char *)&v23 - v11;
  uint64_t v13 = sub_100063814(&qword_1010BF150);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)&v15[*(int *)(v16 + 56)];
  sub_1008DBE40(a1, (uint64_t)v15, type metadata accessor for Notice.Thumbnail);
  sub_1008DBE40(a2, v17, type metadata accessor for Notice.Thumbnail);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1008DBE40((uint64_t)v15, (uint64_t)v12, type metadata accessor for Notice.Thumbnail);
    if (!swift_getEnumCaseMultiPayload())
    {
      char v20 = static Image.== infix(_:_:)();
      swift_release();
      swift_release();
      goto LABEL_12;
    }
    swift_release();
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1008DBE40((uint64_t)v15, (uint64_t)v9, type metadata accessor for Notice.Thumbnail);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = v24;
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v6, v17, v4);
      char v20 = static Artwork.== infix(_:_:)();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v19 + 8);
      v21(v6, v4);
      v21(v9, v4);
LABEL_12:
      sub_1008DD264((uint64_t)v15, type metadata accessor for Notice.Thumbnail);
      return v20 & 1;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v4);
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
LABEL_10:
    sub_1000637B8((uint64_t)v15, &qword_1010BF150);
    char v20 = 0;
    return v20 & 1;
  }
  sub_1008DD264((uint64_t)v15, type metadata accessor for Notice.Thumbnail);
  char v20 = 1;
  return v20 & 1;
}

uint64_t sub_1008DBE40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t _s9MusicCore6NoticeV2eeoiySbAC_ACtFZ_0(uint64_t *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v72 = (uint64_t)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010BEF30);
  __chkstk_darwin(v7 - 8);
  uint64_t v73 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814(&qword_1010BF148);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = (int *)type metadata accessor for Notice(0);
  __chkstk_darwin(v79);
  unint64_t v77 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v76 = (char *)&v71 - v14;
  __chkstk_darwin(v15);
  uint64_t v78 = (uint64_t)&v71 - v16;
  __chkstk_darwin(v17);
  uint64_t v75 = (char *)&v71 - v18;
  __chkstk_darwin(v19);
  uint64_t v74 = (uint64_t)&v71 - v20;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v71 - v22;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v71 - v25;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v71 - v28;
  uint64_t v30 = *a1;
  uint64_t v31 = a1[1];
  uint64_t v32 = (uint64_t)a1;
  uint64_t v33 = *a2;
  uint64_t v34 = a2[1];
  uint64_t v80 = a2;
  if (v30 == v33 && v31 == v34)
  {
    sub_1008DBE40((uint64_t)a1, (uint64_t)&v71 - v28, type metadata accessor for Notice);
    sub_1008DBE40((uint64_t)v80, (uint64_t)v26, type metadata accessor for Notice);
  }
  else
  {
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1008DBE40((uint64_t)a1, (uint64_t)v29, type metadata accessor for Notice);
    sub_1008DBE40((uint64_t)v80, (uint64_t)v26, type metadata accessor for Notice);
    if ((v35 & 1) == 0)
    {
      sub_1008DD264((uint64_t)v26, type metadata accessor for Notice);
      sub_1008DD264((uint64_t)v29, type metadata accessor for Notice);
      uint64_t v43 = (uint64_t)v80;
      uint64_t v42 = (uint64_t)a1;
      uint64_t v45 = (uint64_t)v76;
      uint64_t v44 = (uint64_t)v77;
      uint64_t v41 = v74;
      uint64_t v46 = (uint64_t)v75;
      goto LABEL_12;
    }
  }
  uint64_t v36 = v79[5];
  uint64_t v37 = (uint64_t)&v26[v36];
  uint64_t v38 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_10006CAB8((uint64_t)&v29[v36], (uint64_t)v11, &qword_1010BEF30);
  sub_10006CAB8(v37, v38, &qword_1010BEF30);
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v39((uint64_t)v11, 1, v4) != 1)
  {
    uint64_t v47 = v73;
    sub_10006CAB8((uint64_t)v11, v73, &qword_1010BEF30);
    if (v39(v38, 1, v4) != 1)
    {
      uint64_t v51 = v72;
      sub_1008DBA88(v38, v72);
      uint64_t v52 = v47;
      char v53 = _s9MusicCore6NoticeV9ThumbnailO21__derived_enum_equalsySbAE_AEtFZ_0(v47, v51);
      sub_1008DD264(v51, type metadata accessor for Notice.Thumbnail);
      sub_1008DD264((uint64_t)v26, type metadata accessor for Notice);
      sub_1008DD264((uint64_t)v29, type metadata accessor for Notice);
      sub_1008DD264(v52, type metadata accessor for Notice.Thumbnail);
      sub_1000637B8((uint64_t)v11, &qword_1010BEF30);
      uint64_t v42 = v32;
      sub_1008DBE40(v32, (uint64_t)v23, type metadata accessor for Notice);
      uint64_t v43 = (uint64_t)v80;
      uint64_t v41 = v74;
      sub_1008DBE40((uint64_t)v80, v74, type metadata accessor for Notice);
      uint64_t v45 = (uint64_t)v76;
      uint64_t v44 = (uint64_t)v77;
      uint64_t v46 = (uint64_t)v75;
      if (v53) {
        goto LABEL_19;
      }
LABEL_13:
      sub_1008DD264((uint64_t)v23, type metadata accessor for Notice);
      sub_1008DD264(v41, type metadata accessor for Notice);
      sub_1008DBE40(v42, v46, type metadata accessor for Notice);
      uint64_t v48 = v78;
      sub_1008DBE40(v43, v78, type metadata accessor for Notice);
      goto LABEL_14;
    }
    sub_1008DD264((uint64_t)v26, type metadata accessor for Notice);
    sub_1008DD264((uint64_t)v29, type metadata accessor for Notice);
    sub_1008DD264(v47, type metadata accessor for Notice.Thumbnail);
    uint64_t v41 = v74;
    goto LABEL_10;
  }
  sub_1008DD264((uint64_t)v26, type metadata accessor for Notice);
  sub_1008DD264((uint64_t)v29, type metadata accessor for Notice);
  unsigned int v40 = v39(v38, 1, v4);
  uint64_t v41 = v74;
  if (v40 != 1)
  {
LABEL_10:
    sub_1000637B8((uint64_t)v11, &qword_1010BF148);
    uint64_t v43 = (uint64_t)v80;
    uint64_t v42 = v32;
    uint64_t v45 = (uint64_t)v76;
    uint64_t v44 = (uint64_t)v77;
    uint64_t v46 = (uint64_t)v75;
LABEL_12:
    sub_1008DBE40(v42, (uint64_t)v23, type metadata accessor for Notice);
    sub_1008DBE40(v43, v41, type metadata accessor for Notice);
    goto LABEL_13;
  }
  sub_1000637B8((uint64_t)v11, &qword_1010BEF30);
  uint64_t v42 = v32;
  sub_1008DBE40(v32, (uint64_t)v23, type metadata accessor for Notice);
  uint64_t v43 = (uint64_t)v80;
  sub_1008DBE40((uint64_t)v80, v41, type metadata accessor for Notice);
  uint64_t v45 = (uint64_t)v76;
  uint64_t v44 = (uint64_t)v77;
  uint64_t v46 = (uint64_t)v75;
LABEL_19:
  uint64_t v54 = v79[6];
  uint64_t v55 = *(void *)&v23[v54];
  uint64_t v56 = *(void *)&v23[v54 + 8];
  unint64_t v57 = (void *)(v41 + v54);
  if (v55 == *v57 && v56 == v57[1])
  {
    sub_1008DD264((uint64_t)v23, type metadata accessor for Notice);
    sub_1008DD264(v41, type metadata accessor for Notice);
    sub_1008DBE40(v42, v46, type metadata accessor for Notice);
    uint64_t v48 = v78;
    sub_1008DBE40(v43, v78, type metadata accessor for Notice);
    goto LABEL_23;
  }
  char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_1008DD264((uint64_t)v23, type metadata accessor for Notice);
  sub_1008DD264(v41, type metadata accessor for Notice);
  sub_1008DBE40(v42, v46, type metadata accessor for Notice);
  uint64_t v48 = v78;
  sub_1008DBE40(v43, v78, type metadata accessor for Notice);
  if ((v58 & 1) == 0)
  {
LABEL_14:
    sub_1008DD264(v48, type metadata accessor for Notice);
    sub_1008DD264(v46, type metadata accessor for Notice);
LABEL_15:
    sub_1008DBE40(v42, v45, type metadata accessor for Notice);
    sub_1008DBE40(v43, v44, type metadata accessor for Notice);
    goto LABEL_16;
  }
LABEL_23:
  uint64_t v59 = v79[7];
  unint64_t v60 = (void *)(v46 + v59);
  uint64_t v61 = *(void *)(v46 + v59 + 8);
  unint64_t v62 = (void *)(v48 + v59);
  uint64_t v63 = v62[1];
  if (!v61)
  {
    swift_bridgeObjectRetain();
    sub_1008DD264(v48, type metadata accessor for Notice);
    sub_1008DD264(v46, type metadata accessor for Notice);
    if (!v63) {
      goto LABEL_29;
    }
    goto LABEL_31;
  }
  if (!v63)
  {
    swift_bridgeObjectRetain();
    sub_1008DD264(v48, type metadata accessor for Notice);
    sub_1008DD264(v46, type metadata accessor for Notice);
LABEL_31:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (*v60 == *v62 && v61 == v63)
  {
    swift_bridgeObjectRetain();
    sub_1008DD264(v48, type metadata accessor for Notice);
    sub_1008DD264(v46, type metadata accessor for Notice);
    swift_bridgeObjectRelease();
LABEL_29:
    sub_1008DBE40(v42, v45, type metadata accessor for Notice);
    sub_1008DBE40(v43, v44, type metadata accessor for Notice);
    goto LABEL_33;
  }
  char v64 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  sub_1008DD264(v48, type metadata accessor for Notice);
  sub_1008DD264(v46, type metadata accessor for Notice);
  swift_bridgeObjectRelease();
  sub_1008DBE40(v42, v45, type metadata accessor for Notice);
  sub_1008DBE40(v43, v44, type metadata accessor for Notice);
  if ((v64 & 1) == 0)
  {
LABEL_16:
    sub_1008DD264(v44, type metadata accessor for Notice);
    sub_1008DD264(v45, type metadata accessor for Notice);
    return 0;
  }
LABEL_33:
  uint64_t v65 = v79;
  uint64_t v66 = v45 + v79[9];
  uint64_t v67 = *(void *)v66;
  char v68 = *(unsigned char *)(v66 + 8);
  sub_1008DD264(v45, type metadata accessor for Notice);
  uint64_t v69 = v44 + v65[9];
  uint64_t v70 = *(void *)v69;
  uint64_t v49 = *(unsigned __int8 *)(v69 + 8);
  sub_1008DD264(v44, type metadata accessor for Notice);
  if ((v68 & 1) == 0) {
    return (v67 == v70) & ~v49;
  }
  return v49;
}

void *initializeBufferWithCopyOfBuffer for Notice(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for Notice.Thumbnail(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100063814(&qword_1010BEF30);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v17 = type metadata accessor for Artwork();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v9, v10, v17);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v9, v10, *(void *)(v12 + 64));
      }
      else
      {
        *uint64_t v9 = *v10;
        swift_retain();
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v18 = a3[6];
    uint64_t v19 = a3[7];
    uint64_t v20 = (void *)((char *)v4 + v18);
    uint64_t v21 = (void *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = (void *)((char *)v4 + v19);
    uint64_t v24 = (void *)((char *)a2 + v19);
    uint64_t v25 = v24[1];
    void *v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = a3[8];
    uint64_t v27 = (void *)((char *)v4 + v26);
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = *(void *)((char *)a2 + v26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29)
    {
      uint64_t v30 = *((void *)v28 + 1);
      *uint64_t v27 = v29;
      v27[1] = v30;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    }
    uint64_t v31 = a3[9];
    uint64_t v32 = a3[10];
    uint64_t v33 = (char *)v4 + v31;
    uint64_t v34 = (char *)a2 + v31;
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    *((unsigned char *)v4 + v32) = *((unsigned char *)a2 + v32);
  }
  return v4;
}

uint64_t destroy for Notice(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v4, v8);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(a2 + 32)))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for Notice(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100063814(&qword_1010BEF30);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for Artwork();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v9, v15);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(void *)(v11 + 64));
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v16 = a3[6];
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)((char *)a1 + v16);
  uint64_t v19 = (void *)((char *)a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = (void *)((char *)a1 + v17);
  uint64_t v22 = (void *)((char *)a2 + v17);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)((char *)a2 + v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27)
  {
    uint64_t v28 = *((void *)v26 + 1);
    *uint64_t v25 = v27;
    v25[1] = v28;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  }
  uint64_t v29 = a3[9];
  uint64_t v30 = a3[10];
  uint64_t v31 = (char *)a1 + v29;
  uint64_t v32 = (char *)a2 + v29;
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  *((unsigned char *)a1 + v30) = *((unsigned char *)a2 + v30);
  return a1;
}

void *assignWithCopy for Notice(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2) {
        goto LABEL_17;
      }
      sub_1008DD264((uint64_t)v7, type metadata accessor for Notice.Thumbnail);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v36 = type metadata accessor for Artwork();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v7, v8, v36);
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      if (!EnumCaseMultiPayload)
      {
        *uint64_t v7 = *v8;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      size_t v15 = *(void *)(v10 + 64);
LABEL_9:
      memcpy(v7, v8, v15);
      goto LABEL_17;
    }
    sub_1008DD264((uint64_t)v7, type metadata accessor for Notice.Thumbnail);
LABEL_8:
    size_t v15 = *(void *)(*(void *)(sub_100063814(&qword_1010BEF30) - 8) + 64);
    goto LABEL_9;
  }
  if (v13) {
    goto LABEL_8;
  }
  int v14 = swift_getEnumCaseMultiPayload();
  if (v14 == 1)
  {
    uint64_t v17 = type metadata accessor for Artwork();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v7, v8, v17);
    swift_storeEnumTagMultiPayload();
  }
  else if (v14)
  {
    memcpy(v7, v8, *(void *)(v10 + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_17:
  uint64_t v18 = a3[6];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)((char *)a1 + v24);
  uint64_t v28 = *(void *)((char *)a2 + v24);
  if (!v27)
  {
    if (v28)
    {
      uint64_t v30 = *((void *)v26 + 1);
      *uint64_t v25 = v28;
      v25[1] = v30;
      swift_retain();
      goto LABEL_24;
    }
LABEL_23:
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    goto LABEL_24;
  }
  if (!v28)
  {
    swift_release();
    goto LABEL_23;
  }
  uint64_t v29 = *((void *)v26 + 1);
  *uint64_t v25 = v28;
  v25[1] = v29;
  swift_retain();
  swift_release();
LABEL_24:
  uint64_t v31 = a3[9];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = *(void *)v33;
  v32[8] = v33[8];
  *(void *)uint64_t v32 = v34;
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

uint64_t sub_1008DD264(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for Notice(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100063814(&qword_1010BEF30);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for Artwork();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(v10 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  uint64_t v14 = a3[8];
  size_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (uint64_t *)((char *)a2 + v14);
  uint64_t v17 = *v16;
  if (*v16)
  {
    uint64_t v18 = v16[1];
    *size_t v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)size_t v15 = *(_OWORD *)v16;
  }
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  uint64_t v21 = (char *)a1 + v19;
  uint64_t v22 = (char *)a2 + v19;
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
  return a1;
}

void *assignWithTake for Notice(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1008DD264((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v17 = type metadata accessor for Artwork();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v8, v9, v17);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v16 = *(void *)(v11 + 64);
LABEL_8:
      memcpy(v8, v9, v16);
      goto LABEL_14;
    }
    sub_1008DD264((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
LABEL_7:
    size_t v16 = *(void *)(*(void *)(sub_100063814(&qword_1010BEF30) - 8) + 64);
    goto LABEL_8;
  }
  if (v14) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for Artwork();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(v11 + 64));
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_14:
  uint64_t v18 = a3[6];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[7];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[8];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)((char *)a1 + v28);
  uint64_t v32 = *(void *)((char *)a2 + v28);
  if (!v31)
  {
    if (v32)
    {
      uint64_t v34 = *((void *)v30 + 1);
      void *v29 = v32;
      v29[1] = v34;
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    goto LABEL_21;
  }
  if (!v32)
  {
    swift_release();
    goto LABEL_20;
  }
  uint64_t v33 = *((void *)v30 + 1);
  void *v29 = v32;
  v29[1] = v33;
  swift_release();
LABEL_21:
  uint64_t v35 = a3[9];
  uint64_t v36 = a3[10];
  uint64_t v37 = (char *)a1 + v35;
  uint64_t v38 = (char *)a2 + v35;
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = v38[8];
  *((unsigned char *)a1 + v36) = *((unsigned char *)a2 + v36);
  return a1;
}

uint64_t sub_1008DD7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010BEF30);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1008DD854(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010BEF30);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for Notice.Thumbnail(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for Notice.Thumbnail(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = type metadata accessor for Artwork();
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  else if (!result)
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for Notice.Thumbnail(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = type metadata accessor for Artwork();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for Notice.Thumbnail(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1008DD264((uint64_t)a1, type metadata accessor for Notice.Thumbnail);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = type metadata accessor for Artwork();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for Notice.Thumbnail(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for Artwork();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for Notice.Thumbnail(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1008DD264((uint64_t)a1, type metadata accessor for Notice.Thumbnail);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for Artwork();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for Notice.Variant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      swift_bridgeObjectRetain();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_100063814(&qword_1010BEF38);
      uint64_t v10 = *(int *)(v9 + 48);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = type metadata accessor for Artwork();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = sub_100063814(&qword_1010BEF28);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      *(uint64_t *)((char *)a1 + *(int *)(v9 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 64));
      goto LABEL_11;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t destroy for Notice.Variant(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(sub_100063814(&qword_1010BEF38) + 48);
    uint64_t v4 = type metadata accessor for Artwork();
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v4);
    if (!result)
    {
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v5(v3, v4);
    }
  }
  return result;
}

void *initializeWithCopy for Notice.Variant(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_100063814(&qword_1010BEF38);
    uint64_t v9 = *(int *)(v8 + 48);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Artwork();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_100063814(&qword_1010BEF28);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(void *)((char *)a1 + *(int *)(v8 + 64)) = *(void *)((char *)a2 + *(int *)(v8 + 64));
    goto LABEL_9;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for Notice.Variant(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1008DD264((uint64_t)a1, type metadata accessor for Notice.Variant);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_100063814(&qword_1010BEF38);
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for Artwork();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_100063814(&qword_1010BEF28);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(void *)((char *)a1 + *(int *)(v7 + 64)) = *(void *)((char *)a2 + *(int *)(v7 + 64));
      goto LABEL_10;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *initializeWithTake for Notice.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v6 = sub_100063814(&qword_1010BEF38);
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Artwork();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100063814(&qword_1010BEF28);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(void *)((char *)a1 + *(int *)(v6 + 64)) = *(void *)((char *)a2 + *(int *)(v6 + 64));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for Notice.Variant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1008DD264((uint64_t)a1, type metadata accessor for Notice.Variant);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v6 = sub_100063814(&qword_1010BEF38);
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for Artwork();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_100063814(&qword_1010BEF28);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      *(void *)((char *)a1 + *(int *)(v6 + 64)) = *(void *)((char *)a2 + *(int *)(v6 + 64));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1008DE7E4()
{
  sub_100009DA4(319, (unint64_t *)&unk_1010BF118, (void (*)(uint64_t))&type metadata accessor for Artwork);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v1[4] = v1;
    v1[5] = &unk_100E46EF0;
    swift_initEnumMetadataMultiPayload();
  }
}

unint64_t sub_1008DE8B0()
{
  unint64_t result = qword_1010C5E10;
  if (!qword_1010C5E10)
  {
    _s3__C25OpenExternalURLOptionsKeyVMa_0(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C5E10);
  }
  return result;
}

uint64_t sub_1008DE908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Notice(0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (unint64_t *)((char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  static Notice.variant(_:)(a1, v10);
  (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(a4 + 8))(v10, a2, a3, a4);
  return sub_1004B1668((uint64_t)v10);
}

uint64_t sub_1008DE9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t PresentedViewState<A>.present(_:)(uint64_t a1)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 56) = *(_OWORD *)a1;
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  *(_OWORD *)(v2 + 72) = v3;
  *(unsigned char *)(v2 + 113) = *(unsigned char *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 48);
  *(void *)(v2 + 88) = *(void *)(a1 + 40);
  *(void *)(v2 + 96) = v4;
  type metadata accessor for MainActor();
  *(void *)(v2 + 104) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1008DEA8C, v6, v5);
}

{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  sub_100063814(&qword_1010C8CC0);
  v2[4] = swift_task_alloc();
  long long v3 = type metadata accessor for URL();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[8] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[9] = v5;
  v2[10] = v4;
  return _swift_task_switch(sub_100B43E68, v5, v4);
}

uint64_t sub_1008DEA8C()
{
  char v1 = *(unsigned char *)(v0 + 113);
  uint64_t v18 = *(void *)(v0 + 88);
  uint64_t v19 = *(void *)(v0 + 96);
  long long v15 = *(_OWORD *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v14 = *(void *)(v0 + 56);
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v17 = *(void *)(v0 + 40);
  swift_release();
  uint64_t v13 = v1 & 1;
  long long v3 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 96));
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = (void *)v3[6];
  *long long v3 = v14;
  *(_OWORD *)(v3 + 1) = v15;
  v3[3] = v16;
  v3[4] = v13;
  v3[5] = v18;
  v3[6] = v19;
  sub_1005B5440(v17);
  sub_1004A93F0(v4, v5, v6, v7, v8, v9, v10);
  *(void *)swift_task_alloc() = &type metadata for Alert;
  swift_getKeyPath();
  swift_task_dealloc();
  *(void *)swift_task_alloc() = &type metadata for Alert;
  swift_getKeyPath();
  swift_task_dealloc();
  *(unsigned char *)(v0 + 112) = 1;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1008DEC50(uint64_t a1)
{
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_1000154F4;
  return PresentedViewState<A>.present(_:)(a1);
}

uint64_t sub_1008DECE8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1008DED18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1008DED48()
{
  return PresentedViewState.isPresented.setter();
}

uint64_t sub_1008DED70()
{
  return PresentedViewState.isPresented.setter();
}

uint64_t sub_1008DED98()
{
  return 8;
}

void *sub_1008DEDA4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t Logger.actions.unsafeMutableAddressor()
{
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();

  return sub_100050A90(v0, (uint64_t)static Logger.actions);
}

uint64_t ActionDeclaring.init(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v27 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v13);
  long long v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v25 - v17;
  uint64_t v26 = a1;
  sub_100076134(a1, (uint64_t)v28);
  sub_100063814(&qword_1010BF168);
  char v19 = swift_dynamicCast();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (v19)
  {
    v20(v11, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v11, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v18, AssociatedTypeWitness);
    uint64_t v21 = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 24))(v15, a2, a3);
    sub_1000760E4(v26);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, AssociatedTypeWitness);
    uint64_t v22 = 0;
    uint64_t v23 = v21;
  }
  else
  {
    uint64_t v22 = 1;
    v20(v11, 1, 1, AssociatedTypeWitness);
    sub_1000760E4(v26);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v23 = v27;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(v23, v22, 1, a2);
}

uint64_t AnyAction.init(identifier:contexts:resolver:logs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8 = a5;
  uint64_t v105 = a4;
  uint64_t v112 = a7;
  uint64_t v12 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v101 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AnyAction();
  uint64_t v108 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v103 = (uint64_t)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v94 - v17;
  uint64_t v20 = (char *)&v94 + v19[10] - v17;
  *(_OWORD *)uint64_t v20 = xmmword_100E26B10;
  *((_OWORD *)v20 + 1) = 0u;
  *((_OWORD *)v20 + 2) = 0u;
  uint64_t v106 = v19[11];
  *(uint64_t *)((char *)&v94 + v106 - v17) = 0;
  uint64_t v21 = (uint64_t *)((char *)&v94 + v19[12] - v17);
  *uint64_t v21 = 0;
  v21[1] = 0;
  uint64_t v107 = v21;
  uint64_t v22 = (uint64_t *)((char *)&v94 + v19[13] - v17);
  *uint64_t v22 = 0;
  v22[1] = 0;
  uint64_t v23 = (uint64_t *)((char *)&v94 + v19[14] - v17);
  uint64_t *v23 = 0;
  v23[1] = 0;
  uint64_t v111 = v23;
  uint64_t v113 = v19;
  uint64_t v24 = (uint64_t *)((char *)&v94 + v19[15] - v17);
  *uint64_t v24 = 0;
  v24[1] = 0;
  uint64_t v110 = v24;
  char v25 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 24))(v8, a6);
  uint64_t v109 = a3;
  if (v25)
  {
    swift_bridgeObjectRelease();
    if (qword_1010BC578 != -1) {
      swift_once();
    }
    uint64_t v26 = v110;
    uint64_t v27 = v113;
    if (static DeviceCapabilities.isInternalInstall == 1)
    {
      uint64_t v120 = 0;
      uint64_t v121 = 0xE000000000000000;
      _StringGuts.grow(_:)(32);
      uint64_t v104 = v22;
      uint64_t v28 = sub_10086EFC8();
      id v99 = v20;
      uint64_t v29 = v12;
      uint64_t v31 = v30;
      swift_bridgeObjectRelease();
      uint64_t v120 = v28;
      uint64_t v121 = v31;
      v32._countAndFlagsBits = 0xD00000000000001ELL;
      v32._object = (void *)0x8000000100DCA3B0;
      String.append(_:)(v32);
      Array<A>.appendStringComponents(_:lineLength:bullet:)(v120, v121, 80, 120, 0xE100000000000000);
      uint64_t v22 = v104;
      uint64_t v33 = v107;
      uint64_t v34 = v106;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(a1, v8);
      uint64_t v20 = v99;
      uint64_t v35 = v111;
      uint64_t v36 = v112;
      uint64_t v37 = v108;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v8);
      uint64_t v35 = v111;
      uint64_t v36 = v112;
      uint64_t v37 = v108;
      uint64_t v34 = v106;
      uint64_t v33 = v107;
    }
    goto LABEL_16;
  }
  uint64_t v102 = a2;
  uint64_t v100 = v12;
  uint64_t v104 = v22;
  uint64_t v38 = a3[3];
  uint64_t v39 = a3[4];
  sub_100068990(a3, v38);
  uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v39 + 8))(a1, v8, *(void *)(a6 + 16), v38, v39);
  uint64_t v115 = v41;
  if (!v40)
  {
    swift_bridgeObjectRelease();
    uint64_t v120 = 0;
    uint64_t v121 = 0xE000000000000000;
    _StringGuts.grow(_:)(22);
    uint64_t v51 = sub_10086EFC8();
    uint64_t v53 = v52;
    swift_bridgeObjectRelease();
    uint64_t v120 = v51;
    uint64_t v121 = v53;
    v54._countAndFlagsBits = 0xD000000000000014;
    v54._object = (void *)0x8000000100DCA350;
    String.append(_:)(v54);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v120, v121, 80, 120, 0xE100000000000000);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(a1, v8);
    uint64_t v22 = v104;
    uint64_t v35 = v111;
    uint64_t v36 = v112;
    uint64_t v37 = v108;
    uint64_t v26 = v110;
    uint64_t v34 = v106;
    uint64_t v33 = v107;
    uint64_t v27 = v113;
LABEL_16:
    sub_1000760E4((uint64_t)v109);
    sub_1008E14C0(*(void *)v20, *((void *)v20 + 1), *((void *)v20 + 2), *((void *)v20 + 3), *((void **)v20 + 4));

    sub_10006ADFC(*v33);
    sub_10006ADFC(*v22);
    sub_10006ADFC(*v35);
    sub_10006ADFC(*v26);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v37 + 56))(v36, 1, 1, v27);
  }
  uint64_t v42 = v40;
  uint64_t v97 = a6;
  uint64_t v98 = a1;
  uint64_t v43 = *(void *)(v102 + 16);
  uint64_t v27 = v113;
  if (!v43)
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = v112;
    uint64_t v33 = v107;
LABEL_15:
    uint64_t v120 = 0;
    uint64_t v121 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    uint64_t v55 = v98;
    uint64_t v56 = sub_10086EFC8();
    uint64_t v58 = v57;
    swift_bridgeObjectRelease();
    uint64_t v120 = v56;
    uint64_t v121 = v58;
    v59._countAndFlagsBits = 0xD000000000000016;
    v59._object = (void *)0x8000000100DCA370;
    String.append(_:)(v59);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v120, v121, 80, 120, 0xE100000000000000);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v55, v8);
    uint64_t v26 = v110;
    uint64_t v35 = v111;
    uint64_t v22 = v104;
    uint64_t v37 = v108;
    uint64_t v34 = v106;
    goto LABEL_16;
  }
  id v99 = v20;
  uint64_t v95 = v8;
  uint64_t v96 = v18;
  uint64_t v114 = *(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v115 + 8);
  uint64_t v44 = v102 + 32;
  while (1)
  {
    sub_100076134(v44, (uint64_t)v116);
    uint64_t v45 = type metadata accessor for Optional();
    uint64_t v46 = *(void *)(v45 - 8);
    __n128 v47 = __chkstk_darwin(v45);
    uint64_t v49 = (char *)&v94 - v48;
    v114(v116, v42, v115, v47);
    uint64_t v50 = *(void *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v49, 1, v42) != 1) {
      break;
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v49, v45);
    long long v117 = 0u;
    long long v118 = 0u;
    uint64_t v119 = 0;
    sub_1000637B8((uint64_t)&v117, &qword_1010BF170);
    v44 += 32;
    if (!--v43)
    {
      swift_bridgeObjectRelease();
      uint64_t v36 = v112;
      uint64_t v27 = v113;
      uint64_t v18 = v96;
      uint64_t v33 = v107;
      uint64_t v8 = v95;
      uint64_t v20 = v99;
      goto LABEL_15;
    }
  }
  *((void *)&v118 + 1) = v42;
  uint64_t v119 = v115;
  uint64_t v61 = sub_100068018((uint64_t *)&v117);
  (*(void (**)(uint64_t *, char *, uint64_t))(v50 + 32))(v61, v49, v42);
  swift_bridgeObjectRelease();
  sub_100068978(&v117, (uint64_t)&v120);
  sub_1000688E4((uint64_t)&v120, (uint64_t)&v117);
  uint64_t v62 = (uint64_t)v101;
  uint64_t v63 = v95;
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v101, v98, v95);
  uint64_t v64 = v103;
  uint64_t v65 = v63;
  uint64_t result = sub_1008DFCF4(&v117, v62, v63, v103);
  uint64_t v27 = v113;
  uint64_t v66 = (uint64_t (**)(uint64_t))(v64 + v113[12]);
  if (*v66)
  {
    uint64_t v67 = (*v66)(result);
    uint64_t v36 = v112;
    uint64_t v18 = v96;
    uint64_t v26 = v110;
    uint64_t v33 = v107;
    uint64_t v20 = v99;
    if (v68 != 1)
    {
      unint64_t v81 = v67;
      unint64_t v82 = v68;
      uint64_t v83 = v98;
      if (v69)
      {
        sub_100313EE8(v67, v68);
        uint64_t v93 = v103;
      }
      else
      {
        *(void *)&long long v117 = sub_10086EFC8();
        *((void *)&v117 + 1) = v84;
        v85._countAndFlagsBits = 10272;
        v85._object = (void *)0xE200000000000000;
        String.append(_:)(v85);
        id v86 = (uint64_t *)(v103 + v27[9]);
        uint64_t v87 = *v86;
        uint64_t v88 = (void *)v86[1];
        swift_bridgeObjectRetain();
        v89._countAndFlagsBits = v87;
        uint64_t v18 = v96;
        v89._object = v88;
        String.append(_:)(v89);
        uint64_t v36 = v112;
        uint64_t v26 = v110;
        swift_bridgeObjectRelease();
        v90._countAndFlagsBits = 539828265;
        v90._object = (void *)0xE400000000000000;
        String.append(_:)(v90);
        if (v82) {
          unint64_t v91 = v81;
        }
        else {
          unint64_t v91 = 0xD000000000000013;
        }
        if (!v82) {
          unint64_t v82 = 0x8000000100DCA390;
        }
        unint64_t v92 = v82;
        String.append(_:)(*(Swift::String *)&v91);
        swift_bridgeObjectRelease();
        Array<A>.appendStringComponents(_:lineLength:bullet:)(v117, *((uint64_t *)&v117 + 1), 80, 120, 0xE100000000000000);
        uint64_t v83 = v98;
        uint64_t v93 = v103;
        swift_bridgeObjectRelease();
      }
      (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v83, v65);
      uint64_t v37 = v108;
      (*(void (**)(uint64_t, int *))(v108 + 8))(v93, v27);
      sub_1000760E4((uint64_t)&v120);
      uint64_t v22 = v104;
      uint64_t v34 = v106;
      uint64_t v35 = v111;
      goto LABEL_16;
    }
    uint64_t v70 = v65;
    uint64_t v71 = v111;
    *(void *)&long long v117 = sub_10086EFC8();
    *((void *)&v117 + 1) = v72;
    v73._countAndFlagsBits = 10272;
    v73._object = (void *)0xE200000000000000;
    String.append(_:)(v73);
    uint64_t v74 = (uint64_t *)(v103 + v27[9]);
    uint64_t v75 = *v74;
    uint64_t v76 = (void *)v74[1];
    swift_bridgeObjectRetain();
    v77._countAndFlagsBits = v75;
    v77._object = v76;
    String.append(_:)(v77);
    swift_bridgeObjectRelease();
    v78._countAndFlagsBits = 41;
    v78._object = (void *)0xE100000000000000;
    String.append(_:)(v78);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v117, *((uint64_t *)&v117 + 1), 80, 9673954, 0xA300000000000000);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v98, v70);
    sub_1000760E4((uint64_t)&v120);
    sub_1008E14C0(*(void *)v20, *((void *)v20 + 1), *((void *)v20 + 2), *((void *)v20 + 3), *((void **)v20 + 4));

    sub_10006ADFC(*v33);
    sub_10006ADFC(*v104);
    sub_10006ADFC(*v71);
    sub_10006ADFC(*v26);
    uint64_t v79 = v108;
    (*(void (**)(char *, uint64_t, int *))(v108 + 32))(v18, v103, v27);
    uint64_t v80 = v112;
    (*(void (**)(uint64_t, char *, int *))(v79 + 16))(v112, v18, v27);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v79 + 56))(v80, 0, 1, v27);
    sub_1000760E4((uint64_t)v109);
    return (*(uint64_t (**)(char *, int *))(v79 + 8))(v18, v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1008DFCF4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v7 = type metadata accessor for AnyAction();
  uint64_t v54 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v44 - v8;
  uint64_t v11 = (char *)&v44 + v10[10] - v8;
  *(_OWORD *)uint64_t v11 = xmmword_100E26B10;
  *((_OWORD *)v11 + 1) = 0u;
  *((_OWORD *)v11 + 2) = 0u;
  uint64_t v46 = v10[11];
  *(void *)&v9[v46] = 0;
  uint64_t v12 = (uint64_t *)((char *)&v44 + v10[12] - v8);
  *uint64_t v12 = 0;
  v12[1] = 0;
  uint64_t v48 = v12;
  uint64_t v13 = (uint64_t *)&v9[v10[13]];
  *uint64_t v13 = 0;
  v13[1] = 0;
  uint64_t v50 = v13;
  uint64_t v14 = (uint64_t *)&v9[v10[14]];
  uint64_t *v14 = 0;
  v14[1] = 0;
  uint64_t v51 = v14;
  uint64_t v15 = (uint64_t *)&v9[v10[15]];
  *uint64_t v15 = 0;
  v15[1] = 0;
  uint64_t v52 = v15;
  uint64_t v45 = *(void *)(a3 - 8);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
  uint64_t v47 = a2;
  uint64_t v49 = a3;
  v16(v9, a2, a3);
  sub_100068990(a1, a1[3]);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v18 = a1[4];
  uint64_t v59 = DynamicType;
  uint64_t v60 = v18;
  sub_100063814(&qword_1010BF298);
  uint64_t v19 = String.init<A>(describing:)();
  uint64_t v20 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  *uint64_t v20 = v19;
  v20[1] = v21;
  sub_1000688E4((uint64_t)a1, (uint64_t)v55);
  sub_100063814(&qword_1010BF2A0);
  sub_100063814(&qword_1010BF2A8);
  if (swift_dynamicCast())
  {
    uint64_t v22 = *((void *)&v57 + 1);
    uint64_t v23 = v58;
    sub_100068990(&v56, *((uint64_t *)&v57 + 1));
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v23 + 8))(&v59, v22, v23);
    uint64_t v24 = v59;
    uint64_t v25 = v60;
    uint64_t v26 = v61;
    uint64_t v27 = v62;
    uint64_t v29 = v63;
    uint64_t v28 = v64;
    sub_1000760E4((uint64_t)&v56);
  }
  else
  {
    uint64_t v58 = 0;
    long long v56 = 0u;
    long long v57 = 0u;
    sub_1000637B8((uint64_t)&v56, &qword_1010BF2B0);
    uint64_t v24 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v29 = 0;
    uint64_t v28 = 0;
    uint64_t v25 = 1;
  }
  sub_1008E14C0(*(void *)v11, *((void *)v11 + 1), *((void *)v11 + 2), *((void *)v11 + 3), *((void **)v11 + 4));
  *(void *)uint64_t v11 = v24;
  *((void *)v11 + 1) = v25;
  *((void *)v11 + 2) = v26;
  *((void *)v11 + 3) = v27;
  *((void *)v11 + 4) = v29;
  *((void *)v11 + 5) = v28;
  uint64_t v30 = a1[3];
  uint64_t v31 = a1[4];
  sub_100068990(a1, v30);
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 24))(v30, v31);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v47, v49);
  uint64_t v33 = v46;

  *(void *)&v9[v33] = v32;
  sub_1000688E4((uint64_t)a1, (uint64_t)&v56);
  uint64_t v34 = swift_allocObject();
  sub_100068978(&v56, v34 + 16);
  uint64_t v35 = v48;
  sub_10006ADFC(*v48);
  uint64_t *v35 = (uint64_t)sub_1008E285C;
  v35[1] = v34;
  sub_1000688E4((uint64_t)a1, (uint64_t)&v56);
  uint64_t v36 = swift_allocObject();
  sub_100068978(&v56, v36 + 16);
  uint64_t v37 = v50;
  sub_10006ADFC(*v50);
  *uint64_t v37 = (uint64_t)&unk_1010BF2B8;
  v37[1] = v36;
  sub_1000688E4((uint64_t)a1, (uint64_t)&v56);
  uint64_t v38 = swift_allocObject();
  sub_100068978(&v56, v38 + 16);
  uint64_t v39 = v51;
  sub_10006ADFC(*v51);
  *uint64_t v39 = (uint64_t)&unk_1010BF2C0;
  v39[1] = v38;
  sub_1000688E4((uint64_t)a1, (uint64_t)&v56);
  uint64_t v40 = swift_allocObject();
  sub_100068978(&v56, v40 + 16);
  uint64_t v41 = v52;
  sub_10006ADFC(*v52);
  *uint64_t v41 = (uint64_t)sub_1008E2A00;
  v41[1] = v40;
  uint64_t v42 = v54;
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v53, v9, v7);
  sub_1000760E4((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v9, v7);
}

uint64_t AnyAction.canPerform.getter(uint64_t result)
{
  uint64_t v2 = (uint64_t (**)(void))(v1 + *(int *)(result + 48));
  if (*v2) {
    return (*v2)();
  }
  __break(1u);
  return result;
}

uint64_t sub_1008E01EC(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  sub_100068990(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_1008E023C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1008E025C, 0, 0);
}

uint64_t sub_1008E025C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100068990(v1, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 32) + **(int **)(v3 + 32));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100852634;
  return v6(v2, v3);
}

uint64_t sub_1008E035C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1008E037C, 0, 0);
}

uint64_t sub_1008E037C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100068990(v1, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 40) + **(int **)(v3 + 40));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100851B38;
  return v6(v2, v3);
}

uint64_t sub_1008E047C(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  sub_100068990(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t AnyAction.displayConfiguration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008E151C(v2 + *(int *)(a1 + 40), a2);
}

void *AnyAction.submenu.getter(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + *(int *)(a1 + 44));
  id v3 = v2;
  return v2;
}

uint64_t AnyAction.execute()(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *(void *)(a1 - 8);
  v2[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[7] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[8] = v4;
  v2[9] = v3;
  return _swift_task_switch(sub_1008E05F0, v4, v3);
}

void sub_1008E05F0()
{
  uint64_t v37 = v0;
  uint64_t v1 = v0[3];
  uint64_t v2 = (uint64_t (**)(void))(v0[4] + *(int *)(v1 + 48));
  if (!*v2)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v3 = (*v2)();
  uint64_t v5 = v4;
  sub_100313EE8(v3, v4);
  if (v5 == 1)
  {
    uint64_t v6 = (void *)(v0[4] + *(int *)(v0[3] + 52));
    if (*v6)
    {
      uint64_t v35 = (void (*)(void))(*v6 + *(int *)*v6);
      uint64_t v7 = (void *)swift_task_alloc();
      v0[10] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_1008E0A5C;
      v35();
      return;
    }
    goto LABEL_20;
  }
  uint64_t v8 = v0[4];
  uint64_t v9 = swift_release();
  uint64_t v10 = (uint64_t (**)(uint64_t))(v8 + *(int *)(v1 + 48));
  if (!*v10)
  {
LABEL_21:
    __break(1u);
    return;
  }
  uint64_t v11 = (*v10)(v9);
  if (v12 == 1)
  {
    type metadata accessor for AnyAction.Error();
    swift_getWitnessTable();
    uint64_t v13 = swift_allocError();
    void *v14 = 0;
    v14[1] = 0;
  }
  else
  {
    uint64_t v15 = v11;
    uint64_t v16 = v12;
    type metadata accessor for AnyAction.Error();
    swift_getWitnessTable();
    uint64_t v13 = swift_allocError();
    *uint64_t v17 = v15;
    v17[1] = v16;
  }
  swift_willThrow();
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  uint64_t v19 = v0[5];
  uint64_t v18 = v0[6];
  uint64_t v21 = v0[3];
  uint64_t v20 = v0[4];
  uint64_t v22 = type metadata accessor for Logger();
  sub_100050A90(v22, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v20, v21);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.error.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v26 = v0[5];
  uint64_t v27 = v0[6];
  uint64_t v28 = v0[3];
  if (v25)
  {
    uint64_t v29 = swift_slowAlloc();
    v36[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136446466;
    uint64_t v30 = sub_10086EFC8();
    *(void *)(v29 + 4) = sub_100075E68(v30, v31, v36);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v27, v28);
    *(_WORD *)(v29 + 12) = 2082;
    v0[2] = v13;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v32 = String.init<A>(describing:)();
    *(void *)(v29 + 14) = sub_100075E68(v32, v33, v36);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v26 + 8))(v0[6], v0[3]);
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  swift_task_dealloc();
  uint64_t v34 = (void (*)(void))v0[1];
  v34();
}

uint64_t sub_1008E0A5C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v5 = sub_1008E0E48;
  }
  else {
    uint64_t v5 = sub_1008E0B98;
  }
  return _swift_task_switch(v5, v4, v3);
}

void sub_1008E0B98()
{
  uint64_t v1 = *(int **)(v0[4] + *(int *)(v0[3] + 56));
  if (v1)
  {
    uint64_t v3 = (void (*)(void))((char *)v1 + *v1);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[12] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1008E0C78;
    v3();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1008E0C78()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v5 = sub_1008E10E8;
  }
  else {
    uint64_t v5 = sub_1008E0DB4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1008E0DB4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t result = swift_release();
  uint64_t v4 = (void (**)(uint64_t))(v2 + *(int *)(v1 + 60));
  if (*v4)
  {
    (*v4)(result);
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1008E0E48()
{
  uint64_t v21 = v0;
  swift_release();
  uint64_t v1 = v0[11];
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v5 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v6 = type metadata accessor for Logger();
  sub_100050A90(v6, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v4, v5);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  uint64_t v12 = v0[3];
  if (v9)
  {
    uint64_t v13 = swift_slowAlloc();
    v20[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v14 = sub_10086EFC8();
    *(void *)(v13 + 4) = sub_100075E68(v14, v15, v20);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    *(_WORD *)(v13 + 12) = 2082;
    v0[2] = v1;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v16 = String.init<A>(describing:)();
    *(void *)(v13 + 14) = sub_100075E68(v16, v17, v20);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v10 + 8))(v0[6], v0[3]);
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1008E10E8()
{
  uint64_t v21 = v0;
  swift_release();
  uint64_t v1 = v0[13];
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v5 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v6 = type metadata accessor for Logger();
  sub_100050A90(v6, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v4, v5);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  uint64_t v12 = v0[3];
  if (v9)
  {
    uint64_t v13 = swift_slowAlloc();
    v20[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v14 = sub_10086EFC8();
    *(void *)(v13 + 4) = sub_100075E68(v14, v15, v20);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    *(_WORD *)(v13 + 12) = 2082;
    v0[2] = v1;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v16 = String.init<A>(describing:)();
    *(void *)(v13 + 14) = sub_100075E68(v16, v17, v20);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v10 + 8))(v0[6], v0[3]);
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1008E1388()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100014CA4(v0, static Logger.actions);
  sub_100050A90(v0, (uint64_t)static Logger.actions);
  return Logger.init(subsystem:category:)();
}

uint64_t type metadata accessor for AnyAction()
{
  return sub_10004CF5C();
}

uint64_t static Logger.actions.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = sub_100050A90(v2, (uint64_t)static Logger.actions);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

void sub_1008E14C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1008E151C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010BF178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for AnyAction.Error()
{
  return sub_10004CF5C();
}

uint64_t sub_1008E159C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1008E1658(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    os_log_type_t v8 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    BOOL v9 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *os_log_type_t v8 = *v9;
    v8[1] = v9[1];
    uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v12 = v11[1];
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    swift_bridgeObjectRetain();
    if (v13 < 0)
    {
      *uint64_t v10 = *v11;
      v10[1] = v11[1];
      v10[2] = v11[2];
      v10[3] = v11[3];
      unint64_t v17 = (void *)v11[4];
      v10[4] = v17;
      v10[5] = v11[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v18 = v17;
    }
    else
    {
      long long v14 = *(_OWORD *)v11;
      long long v15 = *((_OWORD *)v11 + 2);
      *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
      *((_OWORD *)v10 + 2) = v15;
      *(_OWORD *)uint64_t v10 = v14;
    }
    uint64_t v19 = (void **)(((unint64_t)v11 + 55) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = *v19;
    uint64_t v21 = (void *)(((unint64_t)v10 + 55) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v21 = *v19;
    unint64_t v22 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v23 = (unint64_t *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v24 = *v23;
    id v25 = v20;
    if (v24 < 0xFFFFFFFF)
    {
      *(_OWORD *)unint64_t v22 = *(_OWORD *)v23;
    }
    else
    {
      unint64_t v26 = v23[1];
      *(void *)unint64_t v22 = v24;
      *(void *)(v22 + 8) = v26;
      swift_retain();
    }
    unint64_t v27 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)v28 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)unint64_t v27 = *(_OWORD *)v28;
    }
    else
    {
      uint64_t v29 = *(void *)(v28 + 8);
      *(void *)unint64_t v27 = *(void *)v28;
      *(void *)(v27 + 8) = v29;
      swift_retain();
    }
    unint64_t v30 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)v31 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
    }
    else
    {
      uint64_t v32 = *(void *)(v31 + 8);
      *(void *)unint64_t v30 = *(void *)v31;
      *(void *)(v30 + 8) = v32;
      swift_retain();
    }
    unint64_t v33 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v34 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
    if (*(void *)v34 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)unint64_t v33 = *(_OWORD *)v34;
      return v4;
    }
    uint64_t v35 = *(void *)(v34 + 8);
    *(void *)unint64_t v33 = *(void *)v34;
    *(void *)(v33 + 8) = v35;
  }
  swift_retain();
  return v4;
}

void sub_1008E1904(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  unint64_t v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  LODWORD(v6) = -1;
  if (*(void *)(v5 + 8) < 0xFFFFFFFFuLL) {
    uint64_t v6 = *(void *)(v5 + 8);
  }
  if ((int)v6 - 1 < 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  int v7 = (id *)((v5 + 55) & 0xFFFFFFFFFFFFFFF8);

  os_log_type_t v8 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v8 >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  BOOL v9 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v9 >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  uint64_t v10 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (*v10 >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  if (*(void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
  {
    swift_release();
  }
}

uint64_t sub_1008E1A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  os_log_type_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  BOOL v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = v10[1];
  if (v11 >= 0xFFFFFFFF) {
    LODWORD(v11) = -1;
  }
  int v12 = v11 - 1;
  swift_bridgeObjectRetain();
  if (v12 < 0)
  {
    *BOOL v9 = *v10;
    v9[1] = v10[1];
    _OWORD v9[2] = v10[2];
    v9[3] = v10[3];
    long long v15 = (void *)v10[4];
    v9[4] = v15;
    v9[5] = v10[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = v15;
  }
  else
  {
    long long v13 = *(_OWORD *)v10;
    long long v14 = *((_OWORD *)v10 + 2);
    *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
    *((_OWORD *)v9 + 2) = v14;
    *(_OWORD *)BOOL v9 = v13;
  }
  unint64_t v17 = (void **)(((unint64_t)v10 + 55) & 0xFFFFFFFFFFFFFFF8);
  id v18 = *v17;
  uint64_t v19 = (void *)(((unint64_t)v9 + 55) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v19 = *v17;
  unint64_t v20 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = (unint64_t *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v22 = *v21;
  id v23 = v18;
  if (v22 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
  }
  else
  {
    unint64_t v24 = v21[1];
    *(void *)unint64_t v20 = v22;
    *(void *)(v20 + 8) = v24;
    swift_retain();
  }
  unint64_t v25 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v26 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
  }
  else
  {
    uint64_t v27 = *(void *)(v26 + 8);
    *(void *)unint64_t v25 = *(void *)v26;
    *(void *)(v25 + 8) = v27;
    swift_retain();
  }
  unint64_t v28 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v29 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v28 = *(_OWORD *)v29;
  }
  else
  {
    uint64_t v30 = *(void *)(v29 + 8);
    *(void *)unint64_t v28 = *(void *)v29;
    *(void *)(v28 + 8) = v30;
    swift_retain();
  }
  unint64_t v31 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v32 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v31 = *(_OWORD *)v32;
  }
  else
  {
    uint64_t v33 = *(void *)(v32 + 8);
    *(void *)unint64_t v31 = *(void *)v32;
    *(void *)(v31 + 8) = v33;
    swift_retain();
  }
  return a1;
}

uint64_t sub_1008E1C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  os_log_type_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  LODWORD(v11) = -1;
  if (*(void *)(v9 + 8) >= 0xFFFFFFFFuLL) {
    LODWORD(v12) = -1;
  }
  else {
    uint64_t v12 = *(void *)(v9 + 8);
  }
  int v13 = v12 - 1;
  if (v10[1] < 0xFFFFFFFFuLL) {
    uint64_t v11 = v10[1];
  }
  int v14 = v11 - 1;
  if ((v13 & 0x80000000) == 0)
  {
    if (v14 < 0)
    {
      *(void *)unint64_t v9 = *v10;
      *(void *)(v9 + 8) = v10[1];
      *(void *)(v9 + 16) = v10[2];
      *(void *)(v9 + 24) = v10[3];
      long long v15 = (void *)v10[4];
      *(void *)(v9 + 32) = v15;
      *(void *)(v9 + 40) = v10[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v16 = v15;
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if ((v14 & 0x80000000) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_11:
    long long v17 = *(_OWORD *)v10;
    long long v18 = *((_OWORD *)v10 + 2);
    *(_OWORD *)(v9 + 16) = *((_OWORD *)v10 + 1);
    *(_OWORD *)(v9 + 32) = v18;
    *(_OWORD *)unint64_t v9 = v17;
    goto LABEL_12;
  }
  *(void *)unint64_t v9 = *v10;
  *(void *)(v9 + 8) = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 16) = v10[2];
  *(void *)(v9 + 24) = v10[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = *(void **)(v9 + 32);
  uint64_t v46 = (void *)v10[4];
  *(void *)(v9 + 32) = v46;
  id v47 = v46;

  *(void *)(v9 + 40) = v10[5];
LABEL_12:
  uint64_t v19 = (void **)((v9 + 55) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = (void **)(((unint64_t)v10 + 55) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = *v20;
  unint64_t v22 = *v19;
  *uint64_t v19 = *v20;
  id v23 = v21;

  unint64_t v24 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v25 = (unint64_t *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v26 = *v25;
  if (*v24 < 0xFFFFFFFFuLL)
  {
    if (v26 >= 0xFFFFFFFF)
    {
      unint64_t v28 = v25[1];
      *unint64_t v24 = v26;
      v24[1] = v28;
      swift_retain();
      goto LABEL_19;
    }
  }
  else
  {
    if (v26 >= 0xFFFFFFFF)
    {
      unint64_t v27 = v25[1];
      *unint64_t v24 = v26;
      v24[1] = v27;
      swift_retain();
      swift_release();
      goto LABEL_19;
    }
    swift_release();
  }
  *(_OWORD *)unint64_t v24 = *(_OWORD *)v25;
LABEL_19:
  unint64_t v29 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (unint64_t *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v31 = *v30;
  if (*v29 < 0xFFFFFFFFuLL)
  {
    if (v31 >= 0xFFFFFFFF)
    {
      unint64_t v33 = v30[1];
      void *v29 = v31;
      v29[1] = v33;
      swift_retain();
      goto LABEL_26;
    }
  }
  else
  {
    if (v31 >= 0xFFFFFFFF)
    {
      unint64_t v32 = v30[1];
      void *v29 = v31;
      v29[1] = v32;
      swift_retain();
      swift_release();
      goto LABEL_26;
    }
    swift_release();
  }
  *(_OWORD *)unint64_t v29 = *(_OWORD *)v30;
LABEL_26:
  unint64_t v34 = (void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v35 = (unint64_t *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v36 = *v35;
  if (*v34 < 0xFFFFFFFFuLL)
  {
    if (v36 >= 0xFFFFFFFF)
    {
      unint64_t v38 = v35[1];
      *unint64_t v34 = v36;
      v34[1] = v38;
      swift_retain();
      goto LABEL_33;
    }
  }
  else
  {
    if (v36 >= 0xFFFFFFFF)
    {
      unint64_t v37 = v35[1];
      *unint64_t v34 = v36;
      v34[1] = v37;
      swift_retain();
      swift_release();
      goto LABEL_33;
    }
    swift_release();
  }
  *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
LABEL_33:
  uint64_t v39 = (void *)(((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v40 = (unint64_t *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v41 = *v40;
  if (*v39 < 0xFFFFFFFFuLL)
  {
    if (v41 >= 0xFFFFFFFF)
    {
      unint64_t v43 = v40[1];
      *uint64_t v39 = v41;
      v39[1] = v43;
      swift_retain();
      return a1;
    }
LABEL_39:
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    return a1;
  }
  if (v41 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_39;
  }
  unint64_t v42 = v40[1];
  *uint64_t v39 = v41;
  v39[1] = v42;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1008E1FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  os_log_type_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  unint64_t v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (long long *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v11 = *v10;
  long long v12 = v10[2];
  v9[1] = v10[1];
  _OWORD v9[2] = v12;
  *unint64_t v9 = v11;
  int v13 = (void *)(((unint64_t)v9 + 55) & 0xFFFFFFFFFFFFFFF8);
  int v14 = (void *)(((unint64_t)v10 + 55) & 0xFFFFFFFFFFFFFFF8);
  *int v13 = *v14;
  unint64_t v15 = ((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = ((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v16 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
  }
  else
  {
    uint64_t v17 = *(void *)(v16 + 8);
    *(void *)unint64_t v15 = *(void *)v16;
    *(void *)(v15 + 8) = v17;
  }
  unint64_t v18 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v19 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
  }
  else
  {
    uint64_t v20 = *(void *)(v19 + 8);
    *(void *)unint64_t v18 = *(void *)v19;
    *(void *)(v18 + 8) = v20;
  }
  unint64_t v21 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v22 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v21 = *(_OWORD *)v22;
  }
  else
  {
    uint64_t v23 = *(void *)(v22 + 8);
    *(void *)unint64_t v21 = *(void *)v22;
    *(void *)(v21 + 8) = v23;
  }
  unint64_t v24 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (uint64_t *)((v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = *v25;
  if ((unint64_t)*v25 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v24 = *(_OWORD *)v25;
  }
  else
  {
    uint64_t v27 = v25[1];
    *(void *)unint64_t v24 = v26;
    *(void *)(v24 + 8) = v27;
  }
  return a1;
}

uint64_t sub_1008E2150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  os_log_type_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  LODWORD(v11) = -1;
  if (*(void *)(v9 + 8) < 0xFFFFFFFFuLL) {
    uint64_t v11 = *(void *)(v9 + 8);
  }
  if ((int)v11 - 1 >= 0) {
    goto LABEL_8;
  }
  unint64_t v12 = *(void *)(v10 + 8);
  if (v12 >= 0xFFFFFFFF) {
    LODWORD(v12) = -1;
  }
  if ((int)v12 - 1 >= 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_8:
    long long v13 = *(_OWORD *)v10;
    long long v14 = *(_OWORD *)(v10 + 32);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)(v10 + 16);
    *(_OWORD *)(v9 + 32) = v14;
    *(_OWORD *)unint64_t v9 = v13;
    goto LABEL_9;
  }
  *(void *)unint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  swift_bridgeObjectRelease();
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = *(void *)(v10 + 24);
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void **)(v9 + 32);
  *(void *)(v9 + 32) = *(void *)(v10 + 32);

  *(void *)(v9 + 40) = *(void *)(v10 + 40);
LABEL_9:
  unint64_t v15 = (void **)((v9 + 55) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = (void **)((v10 + 55) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = *v15;
  *unint64_t v15 = *v16;

  unint64_t v18 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v19 = (unint64_t *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = *v19;
  if (*v18 < 0xFFFFFFFFuLL)
  {
    if (v20 >= 0xFFFFFFFF)
    {
      unint64_t v22 = v19[1];
      *unint64_t v18 = v20;
      v18[1] = v22;
      goto LABEL_16;
    }
  }
  else
  {
    if (v20 >= 0xFFFFFFFF)
    {
      unint64_t v21 = v19[1];
      *unint64_t v18 = v20;
      v18[1] = v21;
      swift_release();
      goto LABEL_16;
    }
    swift_release();
  }
  *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
LABEL_16:
  uint64_t v23 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (unint64_t *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v25 = *v24;
  if (*v23 < 0xFFFFFFFFuLL)
  {
    if (v25 >= 0xFFFFFFFF)
    {
      unint64_t v27 = v24[1];
      void *v23 = v25;
      v23[1] = v27;
      goto LABEL_23;
    }
  }
  else
  {
    if (v25 >= 0xFFFFFFFF)
    {
      unint64_t v26 = v24[1];
      void *v23 = v25;
      v23[1] = v26;
      swift_release();
      goto LABEL_23;
    }
    swift_release();
  }
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
LABEL_23:
  unint64_t v28 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (unint64_t *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v30 = *v29;
  if (*v28 < 0xFFFFFFFFuLL)
  {
    if (v30 >= 0xFFFFFFFF)
    {
      unint64_t v32 = v29[1];
      *unint64_t v28 = v30;
      v28[1] = v32;
      goto LABEL_30;
    }
  }
  else
  {
    if (v30 >= 0xFFFFFFFF)
    {
      unint64_t v31 = v29[1];
      *unint64_t v28 = v30;
      v28[1] = v31;
      swift_release();
      goto LABEL_30;
    }
    swift_release();
  }
  *(_OWORD *)unint64_t v28 = *(_OWORD *)v29;
LABEL_30:
  unint64_t v33 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v34 = (unint64_t *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v35 = *v34;
  if (*v33 < 0xFFFFFFFFuLL)
  {
    if (v35 >= 0xFFFFFFFF)
    {
      unint64_t v37 = v34[1];
      *unint64_t v33 = v35;
      v33[1] = v37;
      return a1;
    }
LABEL_36:
    *(_OWORD *)unint64_t v33 = *(_OWORD *)v34;
    return a1;
  }
  if (v35 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_36;
  }
  unint64_t v36 = v34[1];
  *unint64_t v33 = v35;
  v33[1] = v36;
  swift_release();
  return a1;
}

uint64_t sub_1008E2450(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1008E25CCLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1008E25E0(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((((((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                *unint64_t v19 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                v19[1] = a2 - 1;
              }
            }
            else
            {
              unint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((((((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v12 = v11 + 1;
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((((((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v16 = v15;
  else {
    int v16 = 1;
  }
  if (((((((((((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((((((((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1008E27FCLL);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_1008E2824()
{
  sub_1000760E4(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1008E285C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_100068990(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_1008E28B0()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100081D08;
  v2[2] = v0 + 16;
  return _swift_task_switch(sub_1008E025C, 0, 0);
}

uint64_t sub_1008E2958()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000154F4;
  v2[2] = v0 + 16;
  return _swift_task_switch(sub_1008E037C, 0, 0);
}

uint64_t sub_1008E2A00()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_100068990(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t ActionCondition.Result.failure.getter(uint64_t a1, uint64_t a2)
{
  if (a2 == 1) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = a1;
  }
  sub_100313B10(a1, a2);
  return v2;
}

BOOL ActionCondition.Result.isTrue.getter(uint64_t a1, uint64_t a2)
{
  return a2 == 1;
}

uint64_t ActionCondition.Result.init(_:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t static ActionCondition.Result.failure(_:redactLog:)(uint64_t a1)
{
  return a1;
}

BOOL sub_1008E2B10(uint64_t a1, uint64_t a2)
{
  return _s9MusicCore15ActionConditionV6ResultO21__derived_enum_equalsySbAE_AEtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t ActionCondition.init(_:file:line:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t ActionCondition.init(_:_:redactLog:file:line:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t (*a6)()@<X5>, uint64_t (*a7)()@<X6>, uint64_t (*a8)()@<X7>, uint64_t (**a9)()@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(unsigned char *)(result + 48) = a5;
  *a9 = sub_1008E2EA4;
  a9[1] = (uint64_t (*)())result;
  a9[2] = a6;
  a9[3] = a7;
  a9[4] = a8;
  return result;
}

BOOL ActionCondition.isTrue.getter()
{
  uint64_t v1 = (*v0)();
  BOOL v3 = v2 == 1;
  sub_100313EE8(v1, v2);
  return v3;
}

uint64_t static ActionConditionEvaluator.buildBlock(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v12 = v2;
    uint64_t v13 = v1;
    while (1)
    {
      uint64_t v4 = *(void *)(v2 + 8 * v3);
      uint64_t v5 = *(void *)(v4 + 16);
      if (v5) {
        break;
      }
LABEL_3:
      if (++v3 == v1)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    swift_bridgeObjectRetain_n();
    uint64_t v6 = v4 + 56;
    while (1)
    {
      unsigned int v7 = *(uint64_t (**)(uint64_t))(v6 - 24);
      swift_retain();
      uint64_t v8 = swift_bridgeObjectRetain();
      uint64_t v1 = v7(v8);
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      swift_release();
      if (v10 != 1) {
        break;
      }
      v6 += 40;
      if (!--v5)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v2 = v12;
        uint64_t v1 = v13;
        goto LABEL_3;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  return v1;
}

uint64_t static ActionConditionEvaluator.buildExpression(_:)(long long *a1)
{
  sub_100063814(&qword_1010BF2C8);
  uint64_t v2 = swift_allocObject();
  long long v4 = *a1;
  long long v6 = a1[1];
  long long v3 = v6;
  *(_OWORD *)(v2 + 16) = xmmword_100E251D0;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = v3;
  *(void *)(v2 + 64) = *((void *)a1 + 4);
  swift_retain();
  sub_1000D230C((uint64_t)&v6);
  return v2;
}

BOOL _s9MusicCore15ActionConditionV6ResultO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a2 == 1) {
    return a5 == 1;
  }
  if (a5 == 1) {
    return 0;
  }
  if (a2)
  {
    if (a5)
    {
      if (a1 != a4 || a2 != a5)
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v10 = 0;
        if ((v9 & 1) == 0) {
          return v10 & 1;
        }
      }
      goto LABEL_14;
    }
  }
  else
  {
    if (!a5)
    {
LABEL_14:
      char v10 = ((a3 & 1) == 0) ^ a6;
      return v10 & 1;
    }
    sub_100313EE8(a1, 0);
  }
  char v10 = 0;
  return v10 & 1;
}

uint64_t sub_1008E2E64()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008E2EA4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if ((*(uint64_t (**)(void))(v0 + 16))()) {
    return 0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t destroy for ActionCondition()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ActionCondition(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ActionCondition(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for ActionCondition(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for ActionCondition()
{
  return &type metadata for ActionCondition;
}

uint64_t sub_1008E3060(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if ((int)v4 - 1 < 0)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  }
  return a1;
}

uint64_t assignWithCopy for ActionCondition.Result(uint64_t a1, long long *a2)
{
  LODWORD(v4) = -1;
  if (*(void *)(a1 + 8) >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = *(void *)(a1 + 8);
  }
  int v6 = v5 - 1;
  if (*((void *)a2 + 1) < 0xFFFFFFFFuLL) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    long long v8 = *a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = v8;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for ActionCondition.Result(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = *(void *)(a2 + 8);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = *(void *)(a2 + 8);
    }
    if ((int)v7 - 1 < 0)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_9:
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionCondition.Result(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ActionCondition.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1008E32BC(uint64_t result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(void *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionCondition.Result()
{
  return &type metadata for ActionCondition.Result;
}

ValueMetadata *type metadata accessor for ActionConditionEvaluator()
{
  return &type metadata for ActionConditionEvaluator;
}

void *ActionDisplayConfiguration.image.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

uint64_t ActionDisplayConfiguration.attributes.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t ActionDisplayConfiguration.init(title:subtitle:image:attributes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

void *ActionDisplayConfiguration.Attributes.disabled.unsafeMutableAddressor()
{
  return &static ActionDisplayConfiguration.Attributes.disabled;
}

void *ActionDisplayConfiguration.Attributes.destructive.unsafeMutableAddressor()
{
  return &static ActionDisplayConfiguration.Attributes.destructive;
}

void *ActionDisplayConfiguration.Attributes.hidden.unsafeMutableAddressor()
{
  return &static ActionDisplayConfiguration.Attributes.hidden;
}

unint64_t sub_1008E3374()
{
  unint64_t result = qword_1010BF2D0;
  if (!qword_1010BF2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF2D0);
  }
  return result;
}

unint64_t sub_1008E33CC()
{
  unint64_t result = qword_1010BF2D8;
  if (!qword_1010BF2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF2D8);
  }
  return result;
}

unint64_t sub_1008E3424()
{
  unint64_t result = qword_1010BF2E0;
  if (!qword_1010BF2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF2E0);
  }
  return result;
}

unint64_t sub_1008E347C()
{
  unint64_t result = qword_1010BF2E8[0];
  if (!qword_1010BF2E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1010BF2E8);
  }
  return result;
}

uint64_t sub_1008E34D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_10083FFCC(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void destroy for ActionDisplayConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for ActionDisplayConfiguration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  unint64_t v6 = (void *)a2[4];
  uint64_t v5 = a2[5];
  a1[4] = v6;
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v6;
  return a1;
}

void *assignWithCopy for ActionDisplayConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for ActionDisplayConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionDisplayConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionDisplayConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionDisplayConfiguration()
{
  return &type metadata for ActionDisplayConfiguration;
}

ValueMetadata *type metadata accessor for ActionDisplayConfiguration.Attributes()
{
  return &type metadata for ActionDisplayConfiguration.Attributes;
}

uint64_t ActionList.init(_:lookup:resolver:excluding:)(uint64_t isUniquelyReferenced_nonNull_native, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = isUniquelyReferenced_nonNull_native;
  int64_t v4 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
  uint64_t v5 = _swiftEmptyArrayStorage;
  if (v4)
  {
    uint64_t v28 = a2;
    unint64_t v31 = _swiftEmptyArrayStorage;
    sub_1008CCDB4(0, v4, 0);
    uint64_t v6 = v3 + 32;
    do
    {
      sub_100076134(v6, (uint64_t)v30);
      sub_100076134((uint64_t)v30, (uint64_t)v29);
      sub_100063814(&qword_1010BF168);
      uint64_t v7 = String.init<A>(describing:)();
      char v9 = String.components(wrappedToLineLength:bullet:)(80, 62, 0xE100000000000000, v7, v8);
      swift_bridgeObjectRelease();
      sub_1000760E4((uint64_t)v30);
      uint64_t v5 = v31;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_1008CCDB4(0, v5[2] + 1, 1);
        uint64_t v5 = v31;
      }
      unint64_t v11 = v5[2];
      unint64_t v10 = v5[3];
      if (v11 >= v10 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_1008CCDB4((void *)(v10 > 1), v11 + 1, 1);
        uint64_t v5 = v31;
      }
      v5[2] = v11 + 1;
      v5[v11 + 4] = v9;
      v6 += 32;
      --v4;
    }
    while (v4);
    uint64_t v12 = a3;
    a2 = v28;
  }
  else
  {
    uint64_t v12 = a3;
  }
  v30[0] = v5;
  v29[0] = a2;
  __chkstk_darwin(isUniquelyReferenced_nonNull_native);
  type metadata accessor for ActionLookup.Group();
  type metadata accessor for Array();
  type metadata accessor for ActionGroup();
  swift_getWitnessTable();
  uint64_t v13 = Sequence.compactMap<A>(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = swift_bridgeObjectRetain();
  int v15 = Array<A>.asciiBoxed()(v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = *((void *)v15 + 2);
  if (v16)
  {
    uint64_t v26 = v13;
    uint64_t v17 = qword_1010BBC00;
    swift_bridgeObjectRetain();
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    unint64_t v19 = (unint64_t *)(v15 + 40);
    do
    {
      uint64_t v20 = *(v19 - 1);
      unint64_t v21 = *v19;
      sub_100050A90(v18, (uint64_t)static Logger.actions);
      swift_bridgeObjectRetain_n();
      unint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        unint64_t v31 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 136446210;
        swift_bridgeObjectRetain();
        *(void *)(v24 + 4) = sub_100075E68(v20, v21, (uint64_t *)&v31);
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "%{public}s", (uint8_t *)v24, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v19 += 2;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t v13 = v26;
    uint64_t v12 = a3;
  }
  swift_bridgeObjectRelease();
  sub_1000760E4(v12);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1008E3B98@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v16 = _swiftEmptyArrayStorage;
  sub_1000688E4(a3, (uint64_t)v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1008E3CCC(v8, a2, (uint64_t)v15);
  unint64_t v10 = v16;
  unint64_t v11 = (void *)*a4;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a4 = (uint64_t)v11;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10087ED38(0, v11[2] + 1, 1, v11);
    unint64_t v11 = (void *)result;
    *a4 = result;
  }
  unint64_t v14 = v11[2];
  unint64_t v13 = v11[3];
  if (v14 >= v13 >> 1)
  {
    uint64_t result = (uint64_t)sub_10087ED38((void *)(v13 > 1), v14 + 1, 1, v11);
    unint64_t v11 = (void *)result;
    *a4 = result;
  }
  void v11[2] = v14 + 1;
  v11[v14 + 4] = v10;
  *a5 = v9;
  return result;
}

uint64_t sub_1008E3CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Array();
  type metadata accessor for AnyAction();
  swift_getWitnessTable();
  uint64_t v4 = Sequence.compactMap<A>(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = Array.count.getter();
  sub_1000760E4(a3);
  if (v5 < 1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t sub_1008E3DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v32 = a8;
  uint64_t v14 = *(void *)(a6 - 8);
  __n128 v15 = __chkstk_darwin(a1);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(uint64_t (**)(uint64_t, uint64_t, __n128))(v18 + 24))(v19, v18, v15))
  {
    if (qword_1010BC578 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall != 1) {
      goto LABEL_9;
    }
    uint64_t v33 = 0;
    uint64_t v34 = 0xE000000000000000;
    _StringGuts.grow(_:)(32);
    uint64_t v20 = sub_10086EFC8();
    uint64_t v22 = v21;
    swift_bridgeObjectRelease();
    uint64_t v33 = v20;
    uint64_t v34 = v22;
    unint64_t v23 = 0xD00000000000001ELL;
    unint64_t v24 = 0x8000000100DCA3B0;
LABEL_8:
    String.append(_:)(*(Swift::String *)&v23);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v33, v34, 80, 120, 0xE100000000000000);
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v28 = type metadata accessor for AnyAction();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v32, 1, 1, v28);
  }
  uint64_t v33 = a3;
  type metadata accessor for Array();
  swift_getWitnessTable();
  if (Sequence<>.contains(_:)())
  {
    uint64_t v33 = 0;
    uint64_t v34 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    uint64_t v25 = sub_10086EFC8();
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t v33 = v25;
    uint64_t v34 = v27;
    unint64_t v24 = 0x8000000100DCA3D0;
    unint64_t v23 = 0xD000000000000016;
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a1, a6);
  sub_1000688E4(a5, (uint64_t)&v33);
  swift_bridgeObjectRetain();
  return AnyAction.init(identifier:contexts:resolver:logs:)((uint64_t)v17, a4, &v33, v31, a6, a7, v32);
}

uint64_t (*sub_1008E40EC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = a3 + 16 * a2;
    uint64_t v5 = *(void *)(v4 + 40);
    *(void *)uint64_t v3 = *(void *)(v4 + 32);
    *((void *)v3 + 1) = v5;
    swift_bridgeObjectRetain();
    return destroy for MultiDeviceTesterViewController.Device;
  }
  __break(1u);
  return result;
}

uint64_t sub_1008E4154@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1008E3B98(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), *(uint64_t **)(v2 + 56), a2);
}

uint64_t type metadata accessor for ActionGroup()
{
  return sub_10004CF5C();
}

uint64_t type metadata accessor for ActionList()
{
  return sub_10004CF5C();
}

uint64_t (*sub_1008E41A8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_1008E4228;
  }
  __break(1u);
  return result;
}

uint64_t sub_1008E4228()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1008E4230@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008E3DEC(a1, v2[4], v2[5], v2[6], v2[7], v2[2], v2[3], a2);
}

uint64_t ActionType.isHidden.getter(char a1)
{
  char v1 = 0;
  switch(a1)
  {
    case 16:
    case 21:
      unint64_t v3 = sub_1000523C4();
      uint64_t v4 = &type metadata for Feature.Music;
      goto LABEL_5;
    case 31:
    case 32:
      unint64_t v3 = sub_1008E43E4();
      uint64_t v4 = &type metadata for Feature.MediaPlayer;
LABEL_5:
      char v1 = FeatureFlagsKey.isEnabled.getter((uint64_t)v4, v3) ^ 1;
      break;
    default:
      return v1 & 1;
  }
  return v1 & 1;
}

unint64_t sub_1008E43E4()
{
  unint64_t result = qword_1010BF3F0;
  if (!qword_1010BF3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF3F0);
  }
  return result;
}

void *static ActionType.modelActionLookup.getter()
{
  sub_100063814(&qword_1010BDF38);
  uint64_t v0 = swift_allocObject();
  long long v20 = xmmword_100E251D0;
  *(_OWORD *)(v0 + 16) = xmmword_100E251D0;
  uint64_t v19 = v0;
  *(void *)(v0 + 32) = &off_100FEC578;
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100E251D0;
  uint64_t v18 = v1;
  *(void *)(v1 + 32) = &off_100FEC5A0;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100E251D0;
  *(void *)(v2 + 32) = &off_100FEC5C8;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100E251D0;
  *(void *)(v3 + 32) = &off_100FEC5F0;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100E251D0;
  *(void *)(v4 + 32) = &off_100FEC618;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100E251D0;
  *(void *)(v5 + 32) = &off_100FEC640;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100E251D0;
  *(void *)(v6 + 32) = &off_100FEC668;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100E251D0;
  *(void *)(v7 + 32) = &off_100FEC690;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100E251D0;
  *(void *)(v8 + 32) = &off_100FEC6B8;
  uint64_t v9 = (void *)swift_allocObject();
  *((_OWORD *)v9 + 1) = xmmword_100E251D0;
  v9[4] = &off_100FEC6E0;
  if (qword_1010BC578 != -1) {
LABEL_25:
  }
    swift_once();
  if (static DeviceCapabilities.isInternalInstall == 1)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v20;
    *(void *)(inited + 32) = &off_100FEC708;
    sub_1008E5894((void *)inited);
  }
  *(void *)&long long v20 = v22;
  v22[0] = v19;
  v22[1] = v18;
  v22[2] = v2;
  v22[3] = v3;
  v22[4] = v4;
  v22[5] = v5;
  v22[6] = v6;
  v22[7] = v7;
  v22[8] = v8;
  v22[9] = v9;
  uint64_t v6 = 32;
  v22[10] = _swiftEmptyArrayStorage;
  uint64_t v9 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v2 = *(void *)&v21[v6];
    uint64_t v3 = *(void *)(v2 + 16);
    uint64_t v4 = v9[2];
    uint64_t v5 = v4 + v3;
    if (__OFADD__(v4, v3))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v5 <= v9[3] >> 1)
    {
      if (!*(void *)(v2 + 16)) {
        goto LABEL_5;
      }
    }
    else
    {
      if (v4 <= v5) {
        int64_t v12 = v4 + v3;
      }
      else {
        int64_t v12 = v4;
      }
      uint64_t v9 = sub_10087EE5C(isUniquelyReferenced_nonNull_native, v12, 1, v9);
      if (!*(void *)(v2 + 16))
      {
LABEL_5:
        if (v3) {
          goto LABEL_22;
        }
        goto LABEL_6;
      }
    }
    uint64_t v13 = v9[2];
    if ((v9[3] >> 1) - v13 < v3) {
      goto LABEL_23;
    }
    uint64_t v4 = (uint64_t)&v9[v13 + 4];
    uint64_t v5 = v2 + 32;
    sub_100063814(&qword_1010BDF40);
    swift_arrayInitWithCopy();
    if (v3)
    {
      uint64_t v14 = v9[2];
      BOOL v15 = __OFADD__(v14, v3);
      uint64_t v16 = v14 + v3;
      if (v15) {
        goto LABEL_24;
      }
      _OWORD v9[2] = v16;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    v6 += 8;
  }
  while (v6 != 120);
  sub_100063814(&qword_1010BF400);
  swift_arrayDestroy();
  return v9;
}

uint64_t static ActionLookupBuilder.buildExpression(_:)(uint64_t a1)
{
  type metadata accessor for ActionLookup.Group();
  type metadata accessor for _ContiguousArrayStorage();
  swift_allocObject();
  uint64_t v2 = static Array._adoptStorage(_:count:)();
  *uint64_t v3 = a1;
  uint64_t v4 = sub_10086DF90(v2);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t static ActionLookupBuilder.buildBlock<A>(_:)()
{
  return sub_1008E48C8();
}

{
  return sub_1008E48C8();
}

uint64_t static ActionLookupBuilder.buildOptional<A>(_:)(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
  }
  else
  {
    type metadata accessor for ActionLookup.Group();
    uint64_t v1 = static Array._allocateUninitialized(_:)();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1008E48C8()
{
  return Sequence.flatMap<A>(_:)();
}

uint64_t static ActionType.socialActionLookup.getter()
{
  sub_100063814(&qword_1010BDF38);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100E251D0;
  *(void *)(v1 + 32) = &off_100FEC730;
  int64_t v2 = v1 + 32;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100E251D0;
  *(void *)(v3 + 32) = &off_100FEC758;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100E251D0;
  *(void *)(v4 + 32) = &off_100FEC780;
  swift_bridgeObjectRetain();
  uint64_t result = (uint64_t)sub_10087EE5C(0, 1, 1, _swiftEmptyArrayStorage);
  if (!*(void *)(v1 + 16)) {
    goto LABEL_37;
  }
  uint64_t v6 = (void *)result;
  if (*(void *)(result + 16) >= *(void *)(result + 24) >> 1)
  {
    __break(1u);
    goto LABEL_11;
  }
  sub_100063814(&qword_1010BDF40);
  swift_arrayInitWithCopy();
  ++v6[2];
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v3 + 16);
  int64_t v2 = v6[2];
  int64_t v0 = v2 + v1;
  if (__OFADD__(v2, v1))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v7 = v6[3];
  uint64_t result = swift_bridgeObjectRetain();
  if (v0 <= (uint64_t)(v7 >> 1))
  {
    if (v1) {
      goto LABEL_6;
    }
LABEL_16:
    if (v1)
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    int64_t v12 = *(void *)(v4 + 16);
    int64_t v13 = v6[2];
    int64_t v14 = v13 + v12;
    if (__OFADD__(v13, v12))
    {
      __break(1u);
    }
    else
    {
      unint64_t v15 = v6[3];
      uint64_t result = swift_bridgeObjectRetain();
      if (v14 <= (uint64_t)(v15 >> 1))
      {
        if (v12) {
          goto LABEL_20;
        }
LABEL_29:
        if (!v12) {
          goto LABEL_30;
        }
        goto LABEL_32;
      }
    }
    if (v13 <= v14) {
      int64_t v18 = v13 + v12;
    }
    else {
      int64_t v18 = v13;
    }
    uint64_t result = (uint64_t)sub_10087EE5C((void *)1, v18, 1, v6);
    uint64_t v6 = (void *)result;
    int64_t v13 = *(void *)(result + 16);
    if (*(void *)(v4 + 16))
    {
LABEL_20:
      if ((v6[3] >> 1) - v13 >= v12)
      {
        sub_100063814(&qword_1010BDF40);
        uint64_t result = swift_arrayInitWithCopy();
        if (!v12)
        {
LABEL_30:
          swift_bridgeObjectRelease();
          sub_100063814(&qword_1010BF400);
          swift_arrayDestroy();
          return (uint64_t)v6;
        }
        uint64_t v16 = v6[2];
        BOOL v9 = __OFADD__(v16, v12);
        uint64_t v17 = v16 + v12;
        if (!v9)
        {
          v6[2] = v17;
          goto LABEL_30;
        }
        goto LABEL_36;
      }
      goto LABEL_34;
    }
    goto LABEL_29;
  }
LABEL_12:
  if (v2 <= v0) {
    int64_t v11 = v0;
  }
  else {
    int64_t v11 = v2;
  }
  uint64_t result = (uint64_t)sub_10087EE5C((void *)1, v11, 1, v6);
  uint64_t v6 = (void *)result;
  int64_t v2 = *(void *)(result + 16);
  if (!*(void *)(v3 + 16)) {
    goto LABEL_16;
  }
LABEL_6:
  if ((v6[3] >> 1) - v2 < v1)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  sub_100063814(&qword_1010BDF40);
  uint64_t result = swift_arrayInitWithCopy();
  if (!v1) {
    goto LABEL_17;
  }
  uint64_t v8 = v6[2];
  BOOL v9 = __OFADD__(v8, v1);
  uint64_t v10 = v8 + v1;
  if (!v9)
  {
    v6[2] = v10;
    goto LABEL_17;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t ActionType.rawValue.getter(char a1)
{
  uint64_t result = 0x62694C6F54646461;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000012;
      break;
    case 2:
      uint64_t result = 0x616C506F54646461;
      break;
    case 3:
      uint64_t result = 0xD000000000000013;
      break;
    case 4:
      unsigned int v3 = 2003789939;
      goto LABEL_35;
    case 5:
      uint64_t result = 0x7453657461657263;
      break;
    case 6:
      uint64_t result = 0xD000000000000014;
      break;
    case 7:
      uint64_t result = 0x726F62616C6C6F63;
      break;
    case 8:
    case 24:
    case 27:
    case 45:
      uint64_t result = 0xD000000000000011;
      break;
    case 9:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    case 10:
      uint64_t result = 0x657469726F766166;
      break;
    case 11:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 12:
      uint64_t result = 0x79616C506F546F67;
      break;
    case 13:
      uint64_t result = 0x697472416F546F67;
      break;
    case 14:
      uint64_t result = 0x75626C416F546F67;
      break;
    case 15:
      uint64_t result = 0x6D6F724665646968;
      break;
    case 16:
      uint64_t result = 0x6F546E657473696CLL;
      break;
    case 17:
      uint64_t result = 0xD000000000000013;
      break;
    case 18:
      uint64_t result = 0x6C436E496E65706FLL;
      break;
    case 19:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 20:
      uint64_t result = 2036427888;
      break;
    case 21:
      uint64_t result = 0x6F5479616C70;
      break;
    case 22:
      uint64_t result = 0x7473696C79616C70;
      break;
    case 23:
      uint64_t result = 0xD000000000000015;
      break;
    case 25:
      uint64_t result = 0xD000000000000012;
      break;
    case 26:
      uint64_t result = 0xD000000000000017;
      break;
    case 28:
      uint64_t result = 0xD000000000000015;
      break;
    case 29:
      uint64_t result = 0x7473614C79616C70;
      break;
    case 30:
      uint64_t result = 0x7478654E79616C70;
      break;
    case 31:
      uint64_t result = 0x6574664179616C70;
      break;
    case 32:
      uint64_t result = 0x6575516F54646461;
      break;
    case 33:
      uint64_t result = 0xD000000000000010;
      break;
    case 34:
      uint64_t result = 0x766F4D6575657571;
      break;
    case 35:
      unsigned int v3 = 1702125938;
LABEL_35:
      uint64_t result = v3 | 0x676E6F5300000000;
      break;
    case 36:
      uint64_t result = 0x65766F6D6572;
      break;
    case 37:
      uint64_t result = 0x6F4465766F6D6572;
      break;
    case 38:
      uint64_t result = 0xD000000000000012;
      break;
    case 39:
      uint64_t result = 0x6572616873;
      break;
    case 40:
      uint64_t result = 0x72794C6572616873;
      break;
    case 41:
      uint64_t result = 0x72506E4F776F6873;
      break;
    case 42:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 43:
      uint64_t result = 0x6C426C6169636F73;
      break;
    case 44:
      uint64_t result = 0xD000000000000013;
      break;
    case 46:
      uint64_t result = 0x6F466C6169636F73;
      break;
    case 47:
      uint64_t result = 0xD000000000000013;
      break;
    case 48:
    case 49:
      uint64_t result = 0x6E556C6169636F73;
      break;
    case 50:
      uint64_t result = 1953656691;
      break;
    case 51:
      uint64_t result = 0x4C74736567677573;
      break;
    case 52:
      uint64_t result = 0x6F7661466F646E75;
      break;
    case 53:
      uint64_t result = 0x676775536F646E75;
      break;
    case 54:
      uint64_t result = 0x6C6C754677656976;
      break;
    default:
      return result;
  }
  return result;
}

_UNKNOWN **static ActionType.allCases.getter()
{
  return &off_100FECCF0;
}

uint64_t sub_1008E5388(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = ActionType.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == ActionType.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1008E5414()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  ActionType.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1008E5478()
{
  ActionType.rawValue.getter(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1008E54CC()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  ActionType.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1008E552C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s9MusicCore10ActionTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1008E555C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ActionType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1008E5588()
{
  return ActionType.isHidden.getter(*v0);
}

void sub_1008E5590(void *a1@<X8>)
{
  *a1 = &off_100FECCF0;
}

uint64_t sub_1008E55A0()
{
  return ActionType.rawValue.getter(*v0);
}

void *sub_1008E55A8(void *result)
{
  uint64_t v2 = result[2];
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (v6[2]) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = sub_10087EAC8(result, v10, 1, v3);
  uint64_t v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_100063814(&qword_1010BDF50);
  uint64_t result = (void *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = v3[2];
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void *sub_1008E56A8(void *result)
{
  uint64_t v2 = result[2];
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (v6[2]) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = sub_10087ED24(result, v10, 1, v3);
  uint64_t v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_100063814(&qword_1010C27A0);
  uint64_t result = (void *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = v3[2];
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1008E57A8(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_100073290((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void *sub_1008E5894(void *result)
{
  uint64_t v2 = result[2];
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (v6[2]) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = sub_10087EE5C(result, v10, 1, v3);
  uint64_t v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_100063814(&qword_1010BDF40);
  uint64_t result = (void *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = v3[2];
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

size_t sub_1008E5990(size_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  size_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = sub_10087EA24(result, v11, 1, v3);
  uint64_t v3 = (void *)result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = (v3[3] >> 1) - v3[2];
  uint64_t result = type metadata accessor for URLQueryItem();
  if (v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = v3[2];
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    v3[2] = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1008E5AB8(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = result;
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v8 = *((void *)v3 + 3) >> 1, v8 < v5))
  {
    if (v4 <= v5) {
      int64_t v9 = v4 + v2;
    }
    else {
      int64_t v9 = v4;
    }
    uint64_t v3 = sub_100073290(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    int64_t v8 = *((void *)v3 + 3) >> 1;
  }
  uint64_t v10 = *((void *)v3 + 2);
  uint64_t v11 = v8 - v10;
  uint64_t result = sub_100950A14(&v29, &v3[16 * v10 + 32], v8 - v10, v6);
  if (result < v2) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v12 = *((void *)v3 + 2);
    BOOL v13 = __OFADD__(v12, result);
    uint64_t v14 = v12 + result;
    if (v13)
    {
      __break(1u);
      goto LABEL_32;
    }
    *((void *)v3 + 2) = v14;
  }
  if (result != v11)
  {
LABEL_13:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_16:
  if (!v30) {
    goto LABEL_13;
  }
  unint64_t v15 = v30 - 1;
  if (__OFSUB__(v30, 1)) {
    goto LABEL_34;
  }
  int64_t v16 = *((void *)v3 + 2);
  uint64_t v17 = v29;
  int64_t v18 = sub_1008E40EC((uint64_t (*)())v28, v30 - 1, v29);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  swift_bridgeObjectRetain();
  uint64_t result = ((uint64_t (*)(unsigned char *, void))v18)(v28, 0);
LABEL_20:
  while (1)
  {
    unint64_t v22 = *((void *)v3 + 3);
    int64_t v23 = v22 >> 1;
    int64_t v5 = v16 + 1;
    if ((uint64_t)(v22 >> 1) < v16 + 1) {
      break;
    }
    if (v16 < v23) {
      goto LABEL_22;
    }
LABEL_19:
    *((void *)v3 + 2) = v16;
  }
  uint64_t result = (uint64_t)sub_100073290((char *)(v22 > 1), v16 + 1, 1, v3);
  uint64_t v3 = (char *)result;
  int64_t v23 = *(void *)(result + 24) >> 1;
  if (v16 >= v23) {
    goto LABEL_19;
  }
LABEL_22:
  unint64_t v24 = &v3[16 * v16];
  *((void *)v24 + 4) = v21;
  *((void *)v24 + 5) = v20;
  if (!v15)
  {
LABEL_32:
    *((void *)v3 + 2) = v5;
    goto LABEL_13;
  }
  uint64_t v25 = v24 + 56;
  while (1)
  {
    BOOL v13 = __OFSUB__(v15--, 1);
    if (v13) {
      break;
    }
    uint64_t v26 = sub_1008E40EC((uint64_t (*)())v28, v15, v17);
    uint64_t v21 = *v27;
    uint64_t v20 = v27[1];
    swift_bridgeObjectRetain();
    uint64_t result = ((uint64_t (*)(unsigned char *, void))v26)(v28, 0);
    if (v23 == v5)
    {
      int64_t v16 = v23;
      *((void *)v3 + 2) = v23;
      goto LABEL_20;
    }
    *(v25 - 1) = v21;
    *uint64_t v25 = v20;
    ++v5;
    v25 += 2;
    if (!v15) {
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1008E5CE0(unint64_t a1)
{
  return sub_10003FD14(a1, sub_100950FB0);
}

uint64_t sub_1008E5CF8(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = (uint64_t)sub_10087F420((char *)result, v11, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = *(void *)(v3 + 16);
  if ((*(void *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = (uint64_t)memcpy((void *)(v3 + 32 * v7 + 32), (const void *)(v6 + 32), 32 * v2);
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = *(void *)(v3 + 16);
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    *(void *)(v3 + 16) = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1008E5DDC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_100951180(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t type metadata accessor for ActionLookup.Group()
{
  return sub_10004CF5C();
}

uint64_t _s9MusicCore10ActionTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x37) {
    return 55;
  }
  else {
    return v0;
  }
}

unint64_t sub_1008E6018()
{
  unint64_t result = qword_1010BF408;
  if (!qword_1010BF408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF408);
  }
  return result;
}

unint64_t sub_1008E606C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1008E609C();
  unint64_t result = sub_1008E60F0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1008E609C()
{
  unint64_t result = qword_1010BF410;
  if (!qword_1010BF410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF410);
  }
  return result;
}

unint64_t sub_1008E60F0()
{
  unint64_t result = qword_1010BF418;
  if (!qword_1010BF418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF418);
  }
  return result;
}

unint64_t sub_1008E6148()
{
  unint64_t result = qword_1010BF420;
  if (!qword_1010BF420)
  {
    sub_10006389C(qword_1010BF428);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF420);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xCA) {
    goto LABEL_17;
  }
  if (a2 + 54 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 54) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 54;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 54;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 54;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x37;
  int v8 = v6 - 55;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 54 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 54) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xCA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xC9)
  {
    unsigned int v6 = ((a2 - 202) >> 8) + 1;
    *unint64_t result = a2 + 54;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008E6300);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 54;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionType()
{
  return &type metadata for ActionType;
}

uint64_t type metadata accessor for ActionLookup()
{
  return sub_10004CF5C();
}

uint64_t type metadata accessor for ActionLookupBuilder()
{
  return sub_10004CF5C();
}

void *sub_1008E6368@<X0>(char a1@<W0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v91[0] = a1;
  if (ActionType.isHidden.getter(a1))
  {
    swift_bridgeObjectRelease();
    if (qword_1010BC578 != -1) {
      swift_once();
    }
    if ((static DeviceCapabilities.isInternalInstall & 1) == 0) {
      goto LABEL_17;
    }
    _StringGuts.grow(_:)(32);
    uint64_t v10 = ActionType.rawValue.getter(a1);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    *(void *)id v86 = v10;
    *(void *)&v86[8] = v12;
    v13._countAndFlagsBits = 0xD00000000000001ELL;
    v13._object = (void *)0x8000000100DCA3B0;
    String.append(_:)(v13);
    uint64_t v14 = v10;
    uint64_t v15 = v12;
LABEL_16:
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v14, v15, 80, 120, 0xE100000000000000);
    swift_bridgeObjectRelease();
LABEL_17:
    sub_1000760E4((uint64_t)a3);
    sub_1008E14C0(0, 1, 0, 0, 0);
    sub_10006ADFC(0);
    sub_10006ADFC(0);
    sub_10006ADFC(0);
    sub_10006ADFC(0);
    sub_1008ED030(v86);
    return (void *)sub_10003CABC((uint64_t)v86, a5, &qword_1010BF708);
  }
  *(void *)&long long v71 = a4;
  uint64_t v16 = a3[3];
  uint64_t v17 = a3[4];
  sub_100068990(a3, v16);
  int64_t v18 = *(uint64_t (**)(char *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v17 + 8);
  unint64_t v19 = sub_1008E60F0();
  uint64_t v20 = v18(v91, &type metadata for ActionType, v19, v16, v17);
  *(void *)&long long v74 = v21;
  if (!v20)
  {
    swift_bridgeObjectRelease();
    _StringGuts.grow(_:)(22);
    uint64_t v31 = ActionType.rawValue.getter(a1);
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    *(void *)id v86 = v31;
    *(void *)&v86[8] = v33;
    unint64_t v34 = 0xD000000000000014;
    unint64_t v35 = " - No implementation";
LABEL_15:
    unint64_t v39 = (unint64_t)(v35 - 32) | 0x8000000000000000;
    String.append(_:)(*(Swift::String *)&v34);
    uint64_t v15 = *(void *)&v86[8];
    uint64_t v14 = *(void *)v86;
    goto LABEL_16;
  }
  uint64_t v22 = *(void *)(a2 + 16);
  if (!v22)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    *(void *)id v86 = 0;
    *(void *)&v86[8] = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    uint64_t v36 = ActionType.rawValue.getter(v91[0]);
    uint64_t v38 = v37;
    swift_bridgeObjectRelease();
    *(void *)id v86 = v36;
    *(void *)&v86[8] = v38;
    unint64_t v34 = 0xD000000000000016;
    unint64_t v35 = " - No matching context";
    goto LABEL_15;
  }
  uint64_t v23 = v20;
  uint64_t v68 = a3;
  uint64_t v69 = a5;
  *(void *)&long long v73 = *(void *)(v74 + 8);
  *(void *)&long long v70 = a2;
  uint64_t v24 = a2 + 32;
  *(void *)&long long v72 = v20 - 8;
  while (1)
  {
    sub_100076134(v24, (uint64_t)&v78);
    uint64_t v25 = type metadata accessor for Optional();
    uint64_t v26 = *(void *)(v25 - 8);
    __n128 v27 = __chkstk_darwin(v25);
    uint64_t v29 = (char *)&v66 - v28;
    ((void (*)(long long *, uint64_t, void, __n128))v73)(&v78, v23, v74, v27);
    uint64_t v30 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v29, 1, v23) != 1) {
      break;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v25);
    memset(v86, 0, 40);
    sub_1000637B8((uint64_t)v86, &qword_1010BF170);
    v24 += 32;
    if (!--v22)
    {
      swift_bridgeObjectRelease();
      a3 = v68;
      a5 = v69;
      goto LABEL_14;
    }
  }
  *(void *)&v86[24] = v23;
  *(void *)&v86[32] = v74;
  unint64_t v41 = sub_100068018((uint64_t *)v86);
  (*(void (**)(uint64_t *, char *, uint64_t))(v30 + 32))(v41, v29, v23);
  swift_bridgeObjectRelease();
  sub_100068978((long long *)v86, (uint64_t)v85);
  sub_1000688E4((uint64_t)v85, (uint64_t)&v78);
  char v42 = v91[0];
  unint64_t result = sub_1008E6B2C(&v78, v91[0], v86);
  uint64_t v43 = v87;
  if ((void)v87)
  {
    uint64_t v44 = *((void *)&v87 + 1);
    uint64_t v45 = ((uint64_t (*)(void *))v87)(result);
    if (v46 != 1)
    {
      unint64_t v55 = v45;
      unint64_t v56 = v46;
      if (v47)
      {
        sub_100313EE8(v45, v46);
        uint64_t v59 = *(void *)&v86[8];
        uint64_t v60 = *(void **)&v86[16];
      }
      else
      {
        *(void *)&long long v78 = ActionType.rawValue.getter(v42);
        *((void *)&v78 + 1) = v57;
        v58._countAndFlagsBits = 10272;
        v58._object = (void *)0xE200000000000000;
        String.append(_:)(v58);
        uint64_t v59 = *(void *)&v86[8];
        uint64_t v60 = *(void **)&v86[16];
        swift_bridgeObjectRetain();
        v61._countAndFlagsBits = v59;
        v61._object = v60;
        String.append(_:)(v61);
        swift_bridgeObjectRelease();
        v62._countAndFlagsBits = 539828265;
        v62._object = (void *)0xE400000000000000;
        String.append(_:)(v62);
        if (v56) {
          unint64_t v63 = v55;
        }
        else {
          unint64_t v63 = 0xD000000000000013;
        }
        if (v56) {
          unint64_t v64 = v56;
        }
        else {
          unint64_t v64 = 0x8000000100DCA390;
        }
        unint64_t v65 = v64;
        String.append(_:)(*(Swift::String *)&v63);
        swift_bridgeObjectRelease();
        Array<A>.appendStringComponents(_:lineLength:bullet:)(v78, *((uint64_t *)&v78 + 1), 80, 120, 0xE100000000000000);
        swift_bridgeObjectRelease();
      }
      LOBYTE(v78) = v86[0];
      *((void *)&v78 + 1) = v59;
      uint64_t v79 = v60;
      long long v80 = *(_OWORD *)&v86[24];
      long long v81 = *(_OWORD *)&v86[40];
      long long v82 = *(_OWORD *)&v86[56];
      *(void *)&long long v83 = *(void *)&v86[72];
      *((void *)&v83 + 1) = v43;
      *(void *)&v84[0] = v44;
      *(_OWORD *)((char *)v84 + 8) = v88;
      *(_OWORD *)((char *)&v84[1] + 8) = v89;
      *(_OWORD *)((char *)&v84[2] + 8) = v90;
      sub_1008ECF64(&v78);
      sub_1000760E4((uint64_t)v85);
      a3 = v68;
      a5 = v69;
      goto LABEL_17;
    }
    *(void *)&long long v78 = ActionType.rawValue.getter(v42);
    *((void *)&v78 + 1) = v48;
    v49._countAndFlagsBits = 10272;
    v49._object = (void *)0xE200000000000000;
    String.append(_:)(v49);
    uint64_t v50 = *(void *)&v86[8];
    uint64_t v51 = *(void **)&v86[16];
    swift_bridgeObjectRetain();
    v52._countAndFlagsBits = v50;
    v52._object = v51;
    String.append(_:)(v52);
    swift_bridgeObjectRelease();
    v53._countAndFlagsBits = 41;
    v53._object = (void *)0xE100000000000000;
    String.append(_:)(v53);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v78, *((uint64_t *)&v78 + 1), 80, 9673954, 0xA300000000000000);
    swift_bridgeObjectRelease();
    sub_1000760E4((uint64_t)v85);
    sub_1008E14C0(0, 1, 0, 0, 0);
    sub_10006ADFC(0);
    sub_10006ADFC(0);
    sub_10006ADFC(0);
    sub_10006ADFC(0);
    *(_OWORD *)&v76[16] = *(_OWORD *)&v86[32];
    *(_OWORD *)&v76[32] = *(_OWORD *)&v86[48];
    *(_OWORD *)&v76[48] = *(_OWORD *)&v86[64];
    *(_OWORD *)&v76[64] = v87;
    *(_OWORD *)&v76[80] = v88;
    *(_OWORD *)&v76[96] = v89;
    *(_OWORD *)&v76[112] = v90;
    long long v75 = *(_OWORD *)v86;
    *(_OWORD *)uint64_t v76 = *(_OWORD *)&v86[16];
    long long v74 = *(_OWORD *)&v76[8];
    long long v73 = *(_OWORD *)&v76[24];
    long long v72 = *(_OWORD *)&v76[40];
    v77[6] = v88;
    v77[7] = v89;
    long long v71 = *(_OWORD *)&v76[56];
    v77[8] = v90;
    long long v70 = *(_OWORD *)&v76[72];
    v77[2] = *(_OWORD *)&v86[32];
    v77[3] = *(_OWORD *)&v86[48];
    v77[4] = *(_OWORD *)&v86[64];
    v77[5] = v87;
    long long v66 = *(_OWORD *)&v76[104];
    long long v67 = *(_OWORD *)&v76[88];
    uint64_t v54 = *((void *)&v90 + 1);
    v77[0] = *(_OWORD *)v86;
    v77[1] = *(_OWORD *)&v86[16];
    UIScreen.Dimensions.size.getter(*((double *)&v89 + 1));
    sub_10003CABC((uint64_t)v77, v69, &qword_1010BF708);
    sub_1008EC690(&v75);
    sub_1000760E4((uint64_t)v68);
    long long v78 = *(_OWORD *)v86;
    long long v80 = v74;
    long long v81 = v73;
    long long v82 = v72;
    long long v83 = v71;
    v84[0] = v70;
    v84[1] = v67;
    long long v84[2] = v66;
    uint64_t v79 = *(void **)&v86[16];
    *(void *)&v84[3] = v54;
    return sub_1008ECF64(&v78);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1008E6B2C@<X0>(void *a1@<X0>, char a2@<W1>, _OWORD *a3@<X8>)
{
  sub_100068990(a1, a1[3]);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v5 = a1[4];
  *(void *)&long long v42 = DynamicType;
  *((void *)&v42 + 1) = v5;
  sub_100063814(&qword_1010BF298);
  uint64_t v6 = String.init<A>(describing:)();
  uint64_t v30 = v7;
  uint64_t v31 = v6;
  sub_1000688E4((uint64_t)a1, (uint64_t)&v42);
  sub_100063814(&qword_1010BF2A0);
  sub_100063814(&qword_1010BF2A8);
  if (swift_dynamicCast())
  {
    uint64_t v8 = *((void *)&v60 + 1);
    uint64_t v9 = v61;
    sub_100068990(&v59, *((uint64_t *)&v60 + 1));
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v62, v8, v9);
    uint64_t v10 = v62[1];
    uint64_t v29 = v62[0];
    uint64_t v26 = v62[3];
    uint64_t v27 = v62[2];
    uint64_t v11 = v62[5];
    uint64_t v25 = v62[4];
    sub_1000760E4((uint64_t)&v59);
  }
  else
  {
    uint64_t v61 = 0;
    long long v59 = 0u;
    long long v60 = 0u;
    sub_1000637B8((uint64_t)&v59, &qword_1010BF2B0);
    uint64_t v29 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v25 = 0;
    uint64_t v11 = 0;
    uint64_t v10 = 1;
  }
  sub_1008E14C0(0, 1, 0, 0, 0);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_100068990(a1, v12);
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
  sub_1000688E4((uint64_t)a1, (uint64_t)&v42);
  uint64_t v23 = swift_allocObject();
  sub_100068978(&v42, v23 + 16);
  sub_10006ADFC(0);
  sub_1000688E4((uint64_t)a1, (uint64_t)&v42);
  uint64_t v22 = swift_allocObject();
  sub_100068978(&v42, v22 + 16);
  sub_10006ADFC(0);
  sub_1000688E4((uint64_t)a1, (uint64_t)&v42);
  uint64_t v21 = swift_allocObject();
  sub_100068978(&v42, v21 + 16);
  sub_10006ADFC(0);
  sub_1000688E4((uint64_t)a1, (uint64_t)&v42);
  uint64_t v14 = swift_allocObject();
  sub_100068978(&v42, v14 + 16);
  sub_10006ADFC(0);
  LOBYTE(v33) = a2;
  *((void *)&v33 + 1) = v31;
  *(void *)&long long v34 = v30;
  *((void *)&v34 + 1) = v29;
  *(void *)&long long v35 = v10;
  *((void *)&v35 + 1) = v27;
  *(void *)&long long v36 = v26;
  *((void *)&v36 + 1) = v25;
  *(void *)&long long v37 = v11;
  *((void *)&v37 + 1) = v24;
  *(void *)&long long v38 = sub_1008ED084;
  *((void *)&v38 + 1) = v23;
  *(void *)&long long v39 = &unk_1010BF2B8;
  *((void *)&v39 + 1) = v22;
  *(void *)&long long v40 = &unk_1010BF2C0;
  *((void *)&v40 + 1) = v21;
  *(void *)&long long v41 = sub_1008ED08C;
  *((void *)&v41 + 1) = v14;
  long long v15 = v34;
  *a3 = v33;
  a3[1] = v15;
  long long v16 = v41;
  long long v17 = v39;
  a3[7] = v40;
  a3[8] = v16;
  long long v18 = v37;
  a3[5] = v38;
  a3[6] = v17;
  long long v19 = v35;
  a3[3] = v36;
  a3[4] = v18;
  a3[2] = v19;
  sub_1008EC690(&v33);
  sub_1000760E4((uint64_t)a1);
  LOBYTE(v42) = a2;
  *((void *)&v42 + 1) = v31;
  uint64_t v43 = v30;
  uint64_t v44 = v29;
  uint64_t v45 = v10;
  uint64_t v46 = v27;
  uint64_t v47 = v26;
  uint64_t v48 = v25;
  uint64_t v49 = v11;
  uint64_t v50 = v24;
  uint64_t v51 = sub_1008ED084;
  uint64_t v52 = v23;
  Swift::String v53 = &unk_1010BF2B8;
  uint64_t v54 = v22;
  unint64_t v55 = &unk_1010BF2C0;
  uint64_t v56 = v21;
  uint64_t v57 = sub_1008ED08C;
  uint64_t v58 = v14;
  return sub_1008ECF64(&v42);
}

uint64_t sub_1008E6EFC()
{
  v1[3] = v0;
  type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[5] = v3;
  void v1[6] = v2;
  return _swift_task_switch(sub_1008E6F94, v3, v2);
}

void sub_1008E6F94()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(uint64_t (**)(void))(v0[3] + 80);
  if (!v1)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v2 = v1();
  uint64_t v4 = v3;
  sub_100313EE8(v2, v3);
  if (v4 == 1)
  {
    uint64_t v5 = *(int **)(v0[3] + 96);
    if (v5)
    {
      uint64_t v27 = (void (*)(void))((char *)v5 + *v5);
      uint64_t v6 = (void *)swift_task_alloc();
      v0[7] = v6;
      void *v6 = v0;
      v6[1] = sub_1008E73A8;
      v27();
      return;
    }
LABEL_19:
    __break(1u);
    return;
  }
  uint64_t v7 = swift_release();
  uint64_t v8 = ((uint64_t (*)(uint64_t))v1)(v7);
  if (v9 == 1)
  {
    sub_100063814(&qword_1010BF730);
    sub_100063858(&qword_1010BF738, &qword_1010BF730);
    uint64_t v10 = swift_allocError();
    *uint64_t v11 = 0;
    v11[1] = 0;
  }
  else
  {
    uint64_t v12 = v8;
    uint64_t v13 = v9;
    sub_100063814(&qword_1010BF730);
    sub_100063858(&qword_1010BF738, &qword_1010BF730);
    uint64_t v10 = swift_allocError();
    uint64_t *v14 = v12;
    v14[1] = v13;
  }
  swift_willThrow();
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  long long v15 = (void *)v0[3];
  uint64_t v16 = type metadata accessor for Logger();
  sub_100050A90(v16, (uint64_t)static Logger.actions);
  sub_1008EC690(v15);
  swift_errorRetain();
  sub_1008EC690(v15);
  swift_errorRetain();
  long long v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v20 = (char *)v0[3];
  if (v19)
  {
    uint64_t v21 = swift_slowAlloc();
    v28[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136446466;
    uint64_t v22 = ActionType.rawValue.getter(*v20);
    *(void *)(v21 + 4) = sub_100075E68(v22, v23, v28);
    swift_bridgeObjectRelease();
    sub_1008ECF64(v20);
    sub_1008ECF64(v20);
    *(_WORD *)(v21 + 12) = 2082;
    v0[2] = v10;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v24 = String.init<A>(describing:)();
    *(void *)(v21 + 14) = sub_100075E68(v24, v25, v28);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1008ECF64((void *)v0[3]);
    sub_1008ECF64(v20);
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  uint64_t v26 = (void (*)(void))v0[1];
  v26();
}

uint64_t sub_1008E73A8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_1008E76F8;
  }
  else {
    uint64_t v5 = sub_1008E74E4;
  }
  return _swift_task_switch(v5, v4, v3);
}

void sub_1008E74E4()
{
  uint64_t v1 = *(int **)(*(void *)(v0 + 24) + 112);
  if (v1)
  {
    uint64_t v3 = (void (*)(void))((char *)v1 + *v1);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1008E75BC;
    v3();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1008E75BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_1008E79D8;
  }
  else {
    uint64_t v5 = sub_1008E7958;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1008E76F8()
{
  uint64_t v16 = v0;
  swift_release();
  uint64_t v1 = v0[8];
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[3];
  uint64_t v3 = type metadata accessor for Logger();
  sub_100050A90(v3, (uint64_t)static Logger.actions);
  sub_1008EC690(v2);
  swift_errorRetain();
  sub_1008EC690(v2);
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (char *)v0[3];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v9 = ActionType.rawValue.getter(*v7);
    *(void *)(v8 + 4) = sub_100075E68(v9, v10, v15);
    swift_bridgeObjectRelease();
    sub_1008ECF64(v7);
    sub_1008ECF64(v7);
    *(_WORD *)(v8 + 12) = 2082;
    v0[2] = v1;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v11 = String.init<A>(describing:)();
    *(void *)(v8 + 14) = sub_100075E68(v11, v12, v15);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1008ECF64((void *)v0[3]);
    sub_1008ECF64(v7);
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1008E7958()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t result = swift_release();
  uint64_t v3 = *(void (**)(uint64_t))(v1 + 128);
  if (v3)
  {
    v3(result);
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1008E79D8()
{
  uint64_t v16 = v0;
  swift_release();
  uint64_t v1 = v0[10];
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[3];
  uint64_t v3 = type metadata accessor for Logger();
  sub_100050A90(v3, (uint64_t)static Logger.actions);
  sub_1008EC690(v2);
  swift_errorRetain();
  sub_1008EC690(v2);
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (char *)v0[3];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v9 = ActionType.rawValue.getter(*v7);
    *(void *)(v8 + 4) = sub_100075E68(v9, v10, v15);
    swift_bridgeObjectRelease();
    sub_1008ECF64(v7);
    sub_1008ECF64(v7);
    *(_WORD *)(v8 + 12) = 2082;
    v0[2] = v1;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v11 = String.init<A>(describing:)();
    *(void *)(v8 + 14) = sub_100075E68(v11, v12, v15);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1008ECF64((void *)v0[3]);
    sub_1008ECF64(v7);
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t property wrapper backing initializer of Actionable.contexts()
{
  sub_100063814(&qword_1010BF5B0);
  State.init(wrappedValue:)();
  return v1;
}

uint64_t sub_1008E7C78()
{
  sub_100063814(&qword_1010BF768);
  State.wrappedValue.getter();
  return v1;
}

uint64_t sub_1008E7CC0()
{
  sub_100063814(&qword_1010BF770);
  Binding.wrappedValue.getter();
  return v1;
}

uint64_t Actionable.init(lookup:excluding:resolver:preview:propertyLoader:hasLoadedModelProperties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char *a8@<X8>, uint64_t a9, unsigned __int8 a10, uint64_t a11)
{
  uint64_t v30 = a6;
  uint64_t v31 = a7;
  uint64_t v29 = a5;
  int v28 = a10;
  uint64_t v16 = *(void *)(a11 - 8);
  uint64_t v27 = a9;
  __chkstk_darwin(a1);
  os_log_type_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = _swiftEmptyArrayStorage;
  sub_100063814(&qword_1010BF5B0);
  State.init(wrappedValue:)();
  uint64_t v19 = v34;
  *(void *)a8 = v33;
  *((void *)a8 + 1) = v19;
  *((void *)a8 + 2) = a1;
  *((void *)a8 + 3) = a2;
  uint64_t v20 = sub_1000688E4(a3, (uint64_t)(a8 + 32));
  a4(v20);
  sub_1000760E4(a3);
  uint64_t v21 = (int *)type metadata accessor for Actionable();
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(&a8[v21[12]], v18, a11);
  unint64_t v23 = &a8[v21[13]];
  uint64_t v24 = v30;
  *(void *)unint64_t v23 = v29;
  *((void *)v23 + 1) = v24;
  unint64_t v25 = &a8[v21[14]];
  uint64_t v26 = v27;
  *(void *)unint64_t v25 = v31;
  *((void *)v25 + 1) = v26;
  v25[16] = v28;
  return result;
}

uint64_t type metadata accessor for Actionable()
{
  return sub_10004CF5C();
}

uint64_t Actionable.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v27 = a1;
  uint64_t v28 = a3;
  swift_getWitnessTable();
  uint64_t v6 = type metadata accessor for _ViewModifier_Content();
  uint64_t v7 = sub_10006389C(&qword_1010BF5B8);
  unint64_t v8 = *(void *)(a2 + 16);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v35 = sub_10006389C(&qword_1010BF5C0);
  long long v36 = &type metadata for Bool;
  unint64_t v37 = sub_1008E8198();
  long long v38 = &protocol witness table for Bool;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v35 = v6;
  long long v36 = (void *)v7;
  unint64_t v37 = v8;
  long long v38 = (void *)WitnessTable;
  uint64_t v39 = OpaqueTypeConformance2;
  uint64_t v40 = v10;
  uint64_t v24 = OpaqueTypeConformance2;
  uint64_t v26 = &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v12 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v23 - v16;
  unint64_t v32 = v8;
  uint64_t v33 = v10;
  uint64_t v34 = v4;
  unint64_t v29 = v8;
  uint64_t v30 = v10;
  uint64_t v31 = v4;
  uint64_t v18 = swift_checkMetadataState();
  uint64_t v19 = (void *)WitnessTable;
  View.contextMenu<A, B>(menuItems:preview:)();
  uint64_t v35 = v18;
  long long v36 = (void *)v7;
  unint64_t v37 = v8;
  long long v38 = v19;
  uint64_t v39 = v24;
  uint64_t v40 = v10;
  uint64_t v20 = swift_getOpaqueTypeConformance2();
  sub_1005CF83C(v14, OpaqueTypeMetadata2, v20);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v14, OpaqueTypeMetadata2);
  sub_1005CF83C(v17, OpaqueTypeMetadata2, v20);
  return ((uint64_t (*)(char *, uint64_t))v21)(v17, OpaqueTypeMetadata2);
}

unint64_t sub_1008E8198()
{
  unint64_t result = qword_1010BF5C8;
  if (!qword_1010BF5C8)
  {
    sub_10006389C(&qword_1010BF5C0);
    sub_1008E8244();
    sub_1008EC648(&qword_1010BF5F0, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF5C8);
  }
  return result;
}

unint64_t sub_1008E8244()
{
  unint64_t result = qword_1010BF5D0;
  if (!qword_1010BF5D0)
  {
    sub_10006389C(&qword_1010BF5D8);
    sub_100063858(&qword_1010BF5E0, &qword_1010BF5E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF5D0);
  }
  return result;
}

uint64_t sub_1008E82DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Actionable();
  return sub_1008E8314(v2, a1);
}

uint64_t sub_1008E8314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  __chkstk_darwin(v4);
  uint64_t v39 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v8);
  uint64_t v9 = (char *)&KeyPath - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100063814(&qword_1010BF5D8);
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v11 = (char *)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100063814(&qword_1010BF5C0);
  __chkstk_darwin(v54);
  uint64_t v44 = (char *)&KeyPath - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v2;
  uint64_t v56 = *(void *)(v2 + 16);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v47 = v6 + 16;
  Swift::String v53 = v13;
  v13(v9, v2, a1);
  uint64_t v14 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = ((v14 + 32) & ~v14) + v7;
  uint64_t v16 = (v14 + 32) & ~v14;
  uint64_t v50 = v16;
  uint64_t v51 = v14 | 7;
  uint64_t v52 = v15;
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = *(void *)(a1 + 24);
  uint64_t v48 = *(void *)(a1 + 16);
  uint64_t v49 = v18;
  *(void *)(v17 + 16) = v48;
  *(void *)(v17 + 24) = v18;
  uint64_t v19 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  uint64_t v45 = v6 + 32;
  uint64_t v46 = v19;
  v19(v17 + v16, v9, a1);
  swift_bridgeObjectRetain();
  sub_100063814(&qword_1010BF400);
  sub_100063814(&qword_1010BF5E8);
  sub_100063858(&qword_1010BF608, &qword_1010BF400);
  sub_1008EC498(&qword_1010BF610, qword_1010BF428, (void (*)(void))sub_1008E60F0);
  sub_100063858(&qword_1010BF5E0, &qword_1010BF5E8);
  uint64_t v20 = v11;
  ForEach<>.init(_:id:content:)();
  uint64_t v21 = v37;
  v53(v9, v37, a1);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v49;
  *(void *)(v22 + 16) = v48;
  *(void *)(v22 + 24) = v23;
  v46(v22 + v50, v9, a1);
  uint64_t v24 = v39;
  static TaskPriority.userInitiated.getter();
  unint64_t v25 = v44;
  uint64_t v26 = &v44[*(int *)(v54 + 36)];
  uint64_t v27 = type metadata accessor for _TaskModifier();
  uint64_t v29 = v41;
  uint64_t v28 = v42;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(&v26[*(int *)(v27 + 20)], v24, v42);
  *(void *)uint64_t v26 = &unk_1010BF758;
  *((void *)v26 + 1) = v22;
  uint64_t v30 = v38;
  uint64_t v31 = v40;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v25, v20, v40);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v28);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v31);
  char v55 = sub_1008E7CC0() & 1;
  v53(v9, v21, a1);
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v49;
  *(void *)(v32 + 16) = v48;
  *(void *)(v32 + 24) = v33;
  v46(v32 + v50, v9, a1);
  sub_1008E8198();
  uint64_t v34 = (uint64_t)v44;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return sub_1000637B8(v34, &qword_1010BF5C0);
}

uint64_t sub_1008E88AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Actionable();
  sub_1005CF83C(a1 + *(int *)(v9 + 48), a2, a3);
  sub_1005CF83C(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_1008E89A4()
{
  return sub_1008E88AC(v0[4], v0[2], v0[3]);
}

uint64_t sub_1008E89B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v49 = a5;
  uint64_t v48 = type metadata accessor for Divider();
  uint64_t v46 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v47 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v52 = (char *)&v40 - v10;
  uint64_t v11 = type metadata accessor for Actionable();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v45 = sub_100063814(&qword_1010BF778);
  uint64_t v41 = *(void *)(v45 - 8);
  uint64_t v16 = v41;
  __chkstk_darwin(v45);
  uint64_t v51 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v50 = (char *)&v40 - v19;
  uint64_t v20 = *a1;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = _swiftEmptyArrayStorage;
  uint64_t v53 = v20;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  unint64_t v22 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v23 = (v13 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v43;
  *(void *)(v24 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v24 + v22, v15, v11);
  uint64_t v44 = v21;
  *(void *)(v24 + v23) = v21;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100063814(qword_1010BF428);
  sub_100063814(&qword_1010BF780);
  sub_100063858(&qword_1010BF6C0, qword_1010BF428);
  sub_1008E60F0();
  sub_1008EC498(&qword_1010BF788, &qword_1010BF780, (void (*)(void))sub_1008EC5B0);
  unint64_t v25 = v50;
  ForEach<>.init(_:id:content:)();
  uint64_t v26 = v52;
  Divider.init()();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v28 = v51;
  uint64_t v29 = v45;
  v27(v51, v25, v45);
  uint64_t v30 = v46;
  uint64_t v31 = v47;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  uint64_t v33 = v26;
  uint64_t v34 = v48;
  v32(v47, v33, v48);
  uint64_t v35 = v49;
  v27(v49, v28, v29);
  uint64_t v36 = sub_100063814(&qword_1010BF790);
  v32(&v35[*(int *)(v36 + 48)], v31, v34);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v30 + 8);
  v37(v52, v34);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v41 + 8);
  v38(v50, v29);
  v37(v31, v34);
  v38(v51, v29);
  return swift_release();
}

uint64_t sub_1008E8E74@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  char v7 = *a1;
  uint64_t v8 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  char v9 = sub_100909230(v7, v8);
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0
    || (uint64_t v10 = sub_1008E7C78(),
        sub_1000688E4(a2 + 32, (uint64_t)v18),
        swift_beginAccess(),
        sub_1008E6368(v7, v10, v18, a3 + 16, (uint64_t)v15),
        swift_endAccess(),
        sub_10003CABC((uint64_t)v15, (uint64_t)v16, &qword_1010BF708),
        sub_10003CABC((uint64_t)v16, (uint64_t)v17, &qword_1010BF708),
        sub_100833674((uint64_t)v17) == 1))
  {
    uint64_t v11 = sub_100063814(&qword_1010BF6E8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a4, 1, 1, v11);
  }
  else
  {
    v18[6] = v17[6];
    v18[7] = v17[7];
    v18[8] = v17[8];
    long long v18[2] = v17[2];
    v18[3] = v17[3];
    v18[4] = v17[4];
    v18[5] = v17[5];
    v18[0] = v17[0];
    v18[1] = v17[1];
    sub_10003CABC((uint64_t)v16, (uint64_t)v14, &qword_1010BF708);
    sub_1008EC690(v14);
    sub_1008E9048(a4);
    sub_1008EC818((uint64_t)v16);
    sub_1008EC818((uint64_t)v16);
    uint64_t v13 = sub_100063814(&qword_1010BF6E8);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a4, 0, 1, v13);
  }
}

void sub_1008E9048(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100063814(&qword_1010BDC58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010BF5F8);
  __chkstk_darwin(v7);
  char v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = (void *)v1[4];
  if ((unint64_t)v15 >= 2)
  {
    uint64_t v16 = (void *)v1[7];
    if (v16)
    {
      uint64_t v37 = v11;
      uint64_t v17 = (uint64_t (*)(uint64_t))v1[10];
      if (!v17)
      {
        __break(1u);
        return;
      }
      uint64_t v18 = (void *)v1[3];
      uint64_t v35 = (id *)v1[8];
      uint64_t v36 = v18;
      id v19 = v16;
      uint64_t v20 = swift_bridgeObjectRetain();
      uint64_t v21 = v17(v20);
      uint64_t v23 = v22;
      sub_100313EE8(v21, v22);
      if (v23 == 1)
      {
        uint64_t v24 = (_OWORD *)swift_allocObject();
        long long v25 = *((_OWORD *)v2 + 7);
        v24[7] = *((_OWORD *)v2 + 6);
        v24[8] = v25;
        v24[9] = *((_OWORD *)v2 + 8);
        long long v26 = *((_OWORD *)v2 + 3);
        v24[3] = *((_OWORD *)v2 + 2);
        v24[4] = v26;
        long long v27 = *((_OWORD *)v2 + 5);
        v24[5] = *((_OWORD *)v2 + 4);
        v24[6] = v27;
        long long v28 = *((_OWORD *)v2 + 1);
        v24[1] = *(_OWORD *)v2;
        v24[2] = v28;
        if ((v35 & 2) != 0)
        {
          sub_1008EC690(v2);
          static ButtonRole.destructive.getter();
          uint64_t v32 = type metadata accessor for ButtonRole();
          uint64_t v30 = (void *)(*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v6, 0, 1, v32);
        }
        else
        {
          uint64_t v29 = type metadata accessor for ButtonRole();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v6, 1, 1, v29);
          uint64_t v30 = sub_1008EC690(v2);
        }
        id v34 = v19;
        uint64_t v35 = &v34;
        __chkstk_darwin(v30);
        *(&v34 - 4) = v36;
        *(&v34 - 3) = v15;
        *(&v34 - 2) = v19;
        sub_100063814(&qword_1010BDBB0);
        sub_100063858(&qword_1010BDBA8, &qword_1010BDBB0);
        Button.init(role:action:label:)();

        swift_bridgeObjectRelease();
        uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
        v33(v14, v9, v7);
        v33(a1, v14, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(a1, 0, 1, v7);
        return;
      }
      swift_bridgeObjectRelease();

      uint64_t v11 = v37;
    }
  }
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);

  v31(a1, 1, 1, v7, v12);
}

uint64_t AnyAction.button.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = sub_100063814(&qword_1010BDC58);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814(&qword_1010BF5F8);
  __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v38 - v10;
  uint64_t v12 = *(void *)(a1 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __n128 v17 = __chkstk_darwin(v14);
  id v19 = (uint64_t *)(v2 + *(int *)(v18 + 48));
  unint64_t v20 = v19[1];
  uint64_t v21 = (void *)v19[4];
  if (v20 >= 2 && v21 != 0)
  {
    uint64_t v42 = a2;
    uint64_t v43 = v15;
    uint64_t v39 = *v19;
    uint64_t v40 = v16;
    uint64_t v38 = v19[5];
    id v41 = v21;
    swift_bridgeObjectRetain();
    uint64_t v25 = AnyAction.canPerform.getter(a1);
    uint64_t v27 = v26;
    sub_100313EE8(v25, v26);
    if (v27 == 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
      unint64_t v28 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = *(_OWORD *)(a1 + 16);
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v29 + v28, (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
      id v30 = v41;
      uint64_t v31 = v39;
      if ((v38 & 2) != 0)
      {
        static ButtonRole.destructive.getter();
        uint64_t v34 = type metadata accessor for ButtonRole();
        uint64_t v33 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v7, 0, 1, v34);
      }
      else
      {
        uint64_t v32 = type metadata accessor for ButtonRole();
        uint64_t v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v7, 1, 1, v32);
      }
      __chkstk_darwin(v33);
      *(&v38 - 4) = v31;
      *(&v38 - 3) = v20;
      *(&v38 - 2) = (uint64_t)v30;
      sub_100063814(&qword_1010BDBB0);
      sub_100063858(&qword_1010BDBA8, &qword_1010BDBB0);
      uint64_t v35 = v40;
      Button.init(role:action:label:)();

      swift_bridgeObjectRelease();
      uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
      v36(v11, v35, v8);
      uint64_t v37 = v42;
      v36(v42, (uint64_t)v11, v8);
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v37, 0, 1, v8);
    }
    swift_bridgeObjectRelease();

    a2 = v42;
    uint64_t v15 = v43;
  }
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v15 + 56);

  return v23(a2, 1, 1, v8, v17);
}

uint64_t sub_1008E989C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for Actionable();
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = *(void *)(v5 + 64);
  v3[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[9] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1008E999C, v7, v6);
}

uint64_t sub_1008E999C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 16);
  long long v10 = *(_OWORD *)(v0 + 24);
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t (*)(), uint64_t))(v4 + *(int *)(v3 + 52));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = v10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v7 + v6, v1, v3);
  v5(sub_1008ED568, v7);
  swift_release();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

void sub_1008E9AD4(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for Actionable();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v17 - v12;
  if ((*a2 & 1) == 0)
  {
    uint64_t v14 = *(void (**)(uint64_t (*)(), uint64_t))(a3 + *(int *)(v9 + 52));
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, a3, v9, v11);
    unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a4;
    *(void *)(v16 + 24) = a5;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, v13, v9);
    v14(sub_1008ED568, v16);
    swift_release();
  }
}

uint64_t sub_1008E9C44(uint64_t a1)
{
  sub_100063814(&qword_1010BF760);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100E251D0;
  sub_100076134(a1, v2 + 32);
  sub_100063814(&qword_1010BF768);
  return State.wrappedValue.setter();
}

uint64_t static Actionable.menuBuilder(lookup:excluding:contexts:resolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a1;
  swift_getKeyPath();
  sub_1000688E4(a4, (uint64_t)v9);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  sub_100068978(v9, v7 + 24);
  *(void *)(v7 + 64) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100063814(&qword_1010BF400);
  sub_100063814(&qword_1010BF600);
  sub_100063858(&qword_1010BF608, &qword_1010BF400);
  sub_1008EC498(&qword_1010BF610, qword_1010BF428, (void (*)(void))sub_1008E60F0);
  sub_100063858(qword_1010BF618, &qword_1010BF600);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1008E9E78@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v45 = a5;
  uint64_t v9 = type metadata accessor for Divider();
  uint64_t v43 = *(void *)(v9 - 8);
  uint64_t v44 = v9;
  __chkstk_darwin(v9);
  uint64_t v42 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v46 = (char *)&v35 - v12;
  uint64_t v41 = sub_100063814(&qword_1010BF6B0);
  uint64_t v38 = *(void *)(v41 - 8);
  uint64_t v13 = v38;
  __chkstk_darwin(v41);
  unint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v35 - v17;
  uint64_t v19 = *a1;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = _swiftEmptyArrayStorage;
  uint64_t v40 = v20;
  uint64_t v48 = v19;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1000688E4(a3, (uint64_t)v47);
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a2;
  sub_100068978(v47, (uint64_t)(v21 + 3));
  v21[8] = v20;
  v21[9] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100063814(qword_1010BF428);
  sub_100063814(&qword_1010BF6B8);
  sub_100063858(&qword_1010BF6C0, qword_1010BF428);
  sub_1008E60F0();
  sub_1008EC498(&qword_1010BF6C8, &qword_1010BF6B8, (void (*)(void))sub_1008EC504);
  uint64_t v22 = v18;
  uint64_t v37 = v18;
  ForEach<>.init(_:id:content:)();
  uint64_t v23 = v46;
  Divider.init()();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v36 = v15;
  uint64_t v25 = v41;
  v24(v15, v22, v41);
  uint64_t v27 = v42;
  uint64_t v26 = v43;
  unint64_t v28 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  uint64_t v29 = v44;
  v28(v42, v23, v44);
  id v30 = v45;
  v24(v45, v15, v25);
  uint64_t v31 = sub_100063814(&qword_1010BF700);
  v28(&v30[*(int *)(v31 + 48)], v27, v29);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v26 + 8);
  v32(v46, v29);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v38 + 8);
  v33(v37, v25);
  v32(v27, v29);
  v33(v36, v25);
  return swift_release();
}

uint64_t sub_1008EA27C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v25 = a6;
  uint64_t v24 = sub_100063814(&qword_1010BF6E8);
  __chkstk_darwin(v24);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100063814(&qword_1010BF6D8);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  sub_1000688E4(a3, (uint64_t)v31);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1008E6368((char)a1, a2, v31, a4 + 16, (uint64_t)v30);
  swift_endAccess();
  sub_10003CABC((uint64_t)v30, (uint64_t)v31, &qword_1010BF708);
  if (sub_100909230((char)a1, a5))
  {
    sub_1008EC818((uint64_t)v31);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v25, 1, 1, v13);
  }
  sub_10003CABC((uint64_t)v31, (uint64_t)v29, &qword_1010BF708);
  if (sub_100833674((uint64_t)v29) == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v25, 1, 1, v13);
  }
  v30[6] = v29[6];
  v30[7] = v29[7];
  v30[8] = v29[8];
  v30[2] = v29[2];
  v30[3] = v29[3];
  void v30[4] = v29[4];
  v30[5] = v29[5];
  v30[0] = v29[0];
  v30[1] = v29[1];
  sub_10003CABC((uint64_t)v31, (uint64_t)v28, &qword_1010BF708);
  sub_1008EC690(v28);
  sub_1008E9048(v12);
  uint64_t v26 = 0x2E736E6F69746341;
  unint64_t v27 = 0xE800000000000000;
  v18._countAndFlagsBits = ActionType.rawValue.getter(v29[0]);
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = v26;
  uint64_t v19 = (void *)v27;
  if (qword_1010BBFF0 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_1010C5C28;
  unint64_t v27 = unk_1010C5C30;
  swift_bridgeObjectRetain();
  v21._countAndFlagsBits = 46;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  swift_bridgeObjectRetain();
  v22._countAndFlagsBits = v20;
  v22._object = v19;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  sub_1008EC5B0();
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1008EC818((uint64_t)v31);
  sub_1008EC818((uint64_t)v31);
  sub_1000637B8((uint64_t)v12, &qword_1010BF6E8);
  uint64_t v23 = v25;
  sub_10003CABC((uint64_t)v16, v25, &qword_1010BF6D8);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v23, 0, 1, v13);
}

uint64_t sub_1008EA5F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AnyAction();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = sub_100063814(&qword_1010C0040);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  type metadata accessor for MainActor();
  uint64_t v14 = static MainActor.shared.getter();
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = v14;
  *((void *)v16 + 3) = &protocol witness table for MainActor;
  *((void *)v16 + 4) = a2;
  *((void *)v16 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v16[v15], v9, v6);
  sub_100066A68((uint64_t)v12, (uint64_t)&unk_1010BF748, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1008EA7E4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)type metadata accessor for AnyAction();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 + v2[10];
  if (*(void *)(v4 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v3 + v2[12])) {
    swift_release();
  }
  if (*(void *)(v3 + v2[13])) {
    swift_release();
  }
  if (*(void *)(v3 + v2[14])) {
    swift_release();
  }
  if (*(void *)(v3 + v2[15])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1008EA970()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(type metadata accessor for AnyAction() - 8);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1008EA5F0(v4, v1, v2);
}

uint64_t sub_1008EA9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  v4[4] = type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  uint64_t v7 = (uint64_t (*)(void))((char *)&dword_1010BF728 + dword_1010BF728);
  uint64_t v5 = (void *)swift_task_alloc();
  v4[6] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1008EAABC;
  return v7();
}

uint64_t sub_1008EAABC()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_1008EAC18;
  }
  else {
    uint64_t v4 = sub_1001D15A4;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_1008EAC18()
{
  uint64_t v16 = v0;
  swift_release();
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = type metadata accessor for Logger();
  sub_100050A90(v2, (uint64_t)static Logger.actions);
  sub_1008EC690(v1);
  swift_errorRetain();
  sub_1008EC690(v1);
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = v0[7];
  uint64_t v7 = (char *)v0[3];
  if (v5)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v9 = ActionType.rawValue.getter(*v7);
    *(void *)(v8 + 4) = sub_100075E68(v9, v10, &v15);
    swift_bridgeObjectRelease();
    sub_1008ECF64(v7);
    sub_1008ECF64(v7);
    *(_WORD *)(v8 + 12) = 2082;
    v0[2] = v6;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v11 = String.init<A>(describing:)();
    *(void *)(v8 + 14) = sub_100075E68(v11, v12, &v15);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Action %{public}s failed: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    sub_1008ECF64(v7);
    sub_1008ECF64(v7);
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1008EAE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  uint64_t v7 = type metadata accessor for AnyAction();
  v6[6] = v7;
  v6[7] = *(void *)(v7 - 8);
  v6[8] = swift_task_alloc();
  v6[9] = type metadata accessor for MainActor();
  v6[10] = static MainActor.shared.getter();
  uint64_t v8 = (void *)swift_task_alloc();
  v6[11] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_1008EAFB4;
  return AnyAction.execute()(v7);
}

uint64_t sub_1008EAFB4()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    os_log_type_t v4 = sub_1008EB178;
  }
  else {
    os_log_type_t v4 = sub_1008EB110;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_1008EB110()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1008EB178()
{
  Swift::String v21 = v0;
  swift_release();
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100050A90(v5, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[12];
  uint64_t v10 = v0[7];
  uint64_t v11 = v0[8];
  uint64_t v12 = v0[6];
  if (v8)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v14 = sub_10086EFC8();
    *(void *)(v13 + 4) = sub_100075E68(v14, v15, &v20);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    *(_WORD *)(v13 + 12) = 2082;
    v0[2] = v9;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v16 = String.init<A>(describing:)();
    *(void *)(v13 + 14) = sub_100075E68(v16, v17, &v20);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Action %{public}s failed: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1008EB428()
{
  swift_bridgeObjectRelease();
  sub_1000760E4(v0 + 24);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008EB470@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1008E9E78(a1, *(void *)(v2 + 16), v2 + 24, *(void *)(v2 + 64), a2);
}

uint64_t sub_1008EB480()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008EB4C4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1008EB590(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + 7;
  int v7 = *(_DWORD *)(v4 + 80) & 0x100000;
  uint64_t v8 = *a2;
  *a1 = *a2;
  if (v5 > 7
    || v7 != 0
    || ((((v6 + ((v5 + 72) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 17 > 0x18)
  {
    uint64_t v11 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
  }
  else
  {
    uint64_t v11 = a1;
    a1[1] = a2[1];
    uint64_t v12 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v13;
    uint64_t v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v14 = *v15;
    unint64_t v16 = ((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v17 = ((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v18 = *(void *)(v17 + 24);
    *(void *)(v16 + 24) = v18;
    *(void *)(v16 + 32) = *(void *)(v17 + 32);
    unint64_t v27 = **(void (***)(unint64_t, unint64_t, uint64_t))(v18 - 8);
    uint64_t v28 = v3;
    uint64_t v29 = v6;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27(v16, v17, v18);
    uint64_t v19 = (v16 + v5 + 40) & ~v5;
    uint64_t v20 = (v17 + v5 + 40) & ~v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v19, v20, v28);
    Swift::String v21 = (void *)((v29 + v19) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v22 = (void *)((v29 + v20) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = v22[1];
    *Swift::String v21 = *v22;
    v21[1] = v23;
    unint64_t v24 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v25 = ((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v24 = *(void *)v25;
    *(void *)(v24 + 8) = *(void *)(v25 + 8);
    *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v11;
}

uint64_t sub_1008EB7D8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = (((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_1000760E4(v4);
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((v4
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)
                                                                                            + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_1008EB8B8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v6 = *v7;
  uint64_t v8 = (void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v8 = *v9;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(v11 + 24);
  *(void *)(v10 + 24) = v12;
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  uint64_t v13 = **(void (***)(unint64_t, unint64_t, uint64_t))(v12 - 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  uint64_t v14 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (v16 + 40 + v10) & ~v16;
  uint64_t v18 = (v16 + 40 + v11) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v17, v18);
  uint64_t v19 = *(void *)(v15 + 48) + 7;
  uint64_t v20 = (void *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  Swift::String v21 = (void *)((v19 + v18) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  unint64_t v23 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v23 = *(void *)v24;
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  *(unsigned char *)(v23 + 16) = *(unsigned char *)(v24 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1008EBA54(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v6 = *v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v8 = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v10 = (uint64_t *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (uint64_t *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  sub_1001FF828(v10, v11);
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 24;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = ((unint64_t)v10 + v14 + 40) & ~v14;
  uint64_t v16 = ((unint64_t)v11 + v14 + 40) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v15, v16);
  uint64_t v17 = *(void *)(v13 + 40) + 7;
  uint64_t v18 = (void *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)((v17 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  unint64_t v21 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v21 = *(void *)v22;
  swift_retain();
  swift_release();
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
  return a1;
}

_OWORD *sub_1008EBBE0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v4 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v4;
  uint64_t v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v6;
  unint64_t v8 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = ((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v10 = *(_OWORD *)v9;
  long long v11 = *(_OWORD *)(v9 + 16);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(_OWORD *)unint64_t v8 = v10;
  *(_OWORD *)(v8 + 16) = v11;
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 32;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 40 + v8) & ~v14;
  uint64_t v16 = (v14 + 40 + v9) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v15, v16);
  uint64_t v17 = *(void *)(v13 + 32) + 7;
  uint64_t v18 = (_OWORD *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (_OWORD *)((v17 + v16) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  unint64_t v20 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v22 = *(unsigned char *)(v21 + 16);
  *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
  *(unsigned char *)(v20 + 16) = v22;
  return a1;
}

void *sub_1008EBCD8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)v7;
  v7 += 15;
  void *v6 = v8;
  swift_bridgeObjectRelease();
  unint64_t v9 = (void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 15;
  *unint64_t v9 = *(void *)(v7 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  unint64_t v11 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFF8;
  sub_1000760E4(v11);
  long long v13 = *(_OWORD *)(v10 & 0xFFFFFFFFFFFFFFF8);
  long long v14 = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(void *)(v11 + 32) = *(void *)((v10 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(_OWORD *)unint64_t v11 = v13;
  *(_OWORD *)(v11 + 16) = v14;
  uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v16 = v15 + 40;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (v17 + 40 + v11) & ~v17;
  uint64_t v19 = (v17 + 40 + v12) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v15 + 40))(v18, v19);
  uint64_t v20 = *(void *)(v16 + 24) + 7;
  unint64_t v21 = (_OWORD *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v20 + v19;
  unint64_t v23 = (v22 & 0xFFFFFFFFFFFFFFF8) + 23;
  *unint64_t v21 = *(_OWORD *)(v22 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v24 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v24 = *(void *)v23;
  swift_release();
  *(void *)(v24 + 8) = *(void *)(v23 + 8);
  swift_release();
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v23 + 16);
  return a1;
}

uint64_t sub_1008EBE34(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 72) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 17;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1008EBFC8);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((((*(_DWORD *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 72) & ~v6) + 7) & 0xFFFFFFF8)
             + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
          int v16 = *a1;
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))((((((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8)
  }
                                                                      + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                    + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                  + v6
                                                                  + 40) & ~v6);
  uint64_t v17 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1008EBFDC(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 72) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 17;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_47;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v20 = (((((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + v9
                   + 40) & ~v9;
              unint64_t v21 = *(void (**)(unint64_t))(v6 + 56);
              v21(v20);
            }
            else
            {
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v19 = a2 ^ 0x80000000;
                *((void *)a1 + 1) = 0;
              }
              else
              {
                uint64_t v19 = a2 - 1;
              }
              *(void *)a1 = v19;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = (~v8 + a2) >> v11;
  if (v10 < 4) {
    int v17 = v16 + 1;
  }
  else {
    int v17 = 1;
  }
  if (v10 >= 4) {
    unsigned int v18 = ~v8 + a2;
  }
  else {
    unsigned int v18 = (~(_BYTE)v8 + a2);
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v18;
  }
  else {
    *(_DWORD *)a1 = v18;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v17;
      break;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x1008EC218);
    case 4:
      *(_DWORD *)&a1[v10] = v17;
      break;
    default:
      return;
  }
}

uint64_t sub_1008EC240()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1008EC368()
{
  unint64_t result = qword_1010BF6A0;
  if (!qword_1010BF6A0)
  {
    sub_10006389C(&qword_1010BF6A8);
    sub_100063858(qword_1010BF618, &qword_1010BF600);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF6A0);
  }
  return result;
}

uint64_t sub_1008EC400()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008EC438()
{
  swift_bridgeObjectRelease();
  sub_1000760E4(v0 + 24);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008EC488@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008EA27C(a1, v2[2], (uint64_t)(v2 + 3), v2[8], v2[9], a2);
}

uint64_t sub_1008EC498(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1008EC504()
{
  unint64_t result = qword_1010BF6D0;
  if (!qword_1010BF6D0)
  {
    sub_10006389C(&qword_1010BF6D8);
    sub_1008EC5B0();
    sub_1008EC648((unint64_t *)&qword_1010BF6F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF6D0);
  }
  return result;
}

unint64_t sub_1008EC5B0()
{
  unint64_t result = qword_1010BF6E0;
  if (!qword_1010BF6E0)
  {
    sub_10006389C(&qword_1010BF6E8);
    sub_100063858(&qword_1010BF6F0, &qword_1010BF5F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF6E0);
  }
  return result;
}

uint64_t sub_1008EC648(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1008EC690(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v6 = (void *)a1[7];
  unsigned int v8 = (void *)a1[9];
  uint64_t v7 = a1[10];
  uint64_t v11 = a1[12];
  uint64_t v12 = a1[14];
  uint64_t v13 = a1[16];
  swift_bridgeObjectRetain();
  sub_1008EC75C(v2, v3, v4, v5, v6);
  id v9 = v8;
  sub_10007B674(v7);
  sub_10007B674(v11);
  sub_10007B674(v12);
  sub_10007B674(v13);
  return a1;
}

uint64_t sub_1008EC75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2 != 1)
  {
    id v6 = a5;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1008EC7AC@<X0>(uint64_t a1@<X8>)
{
  sub_10005D1D4();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1008EC818(uint64_t a1)
{
  return a1;
}

void sub_1008EC874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    sub_1008E14C0(a4, a5, a6, a7, a8);

    sub_10006ADFC(a11);
    sub_10006ADFC(a13);
    sub_10006ADFC(a15);
    sub_10006ADFC(a17);
  }
}

uint64_t sub_1008EC964(long long *a1)
{
  uint64_t v2 = sub_100063814(&qword_1010C0040);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = a1[7];
  long long v32 = a1[6];
  long long v33 = v5;
  long long v34 = a1[8];
  long long v6 = a1[3];
  long long v28 = a1[2];
  long long v29 = v6;
  long long v7 = a1[5];
  long long v30 = a1[4];
  long long v31 = v7;
  long long v8 = a1[1];
  long long v26 = *a1;
  long long v27 = v8;
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  long long v23 = v32;
  long long v24 = v33;
  long long v25 = v34;
  long long v19 = v28;
  long long v20 = v29;
  long long v21 = v30;
  long long v22 = v31;
  long long v17 = v26;
  long long v18 = v27;
  type metadata accessor for MainActor();
  sub_1008EC690(&v26);
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = &protocol witness table for MainActor;
  long long v12 = v24;
  *(_OWORD *)(v11 + 128) = v23;
  *(_OWORD *)(v11 + 144) = v12;
  *(_OWORD *)(v11 + 160) = v25;
  long long v13 = v20;
  *(_OWORD *)(v11 + 64) = v19;
  *(_OWORD *)(v11 + 80) = v13;
  long long v14 = v22;
  *(_OWORD *)(v11 + 96) = v21;
  *(_OWORD *)(v11 + 112) = v14;
  long long v15 = v18;
  *(_OWORD *)(v11 + 32) = v17;
  *(_OWORD *)(v11 + 48) = v15;
  sub_100066A68((uint64_t)v4, (uint64_t)&unk_1010BF718, v11);
  return swift_release();
}

uint64_t sub_1008ECAF8()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 96)) {
    swift_release();
  }
  if (*(void *)(v0 + 112)) {
    swift_release();
  }
  if (*(void *)(v0 + 128)) {
    swift_release();
  }
  if (*(void *)(v0 + 144)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1008ECB98()
{
  return sub_1008EC964((long long *)(v0 + 16));
}

uint64_t sub_1008ECBA0()
{
  return Label.init(title:icon:)();
}

uint64_t sub_1008ECC20(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v8 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v8;
  *(_OWORD *)(v4 + 144) = a4[8];
  long long v9 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  long long v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  long long v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  long long v12 = (void *)swift_task_alloc();
  *(void *)(v4 + 160) = v12;
  *long long v12 = v4;
  v12[1] = sub_1008ECD00;
  return sub_1008EA9F4(a1, a2, a3, v4 + 16);
}

uint64_t sub_1008ECD00()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1008ECDF4()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 112)) {
    swift_release();
  }
  if (*(void *)(v0 + 128)) {
    swift_release();
  }
  if (*(void *)(v0 + 144)) {
    swift_release();
  }
  if (*(void *)(v0 + 160)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1008ECE9C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  void *v6 = v2;
  v6[1] = sub_100081D08;
  long long v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_1010BF710 + dword_1010BF710);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

void *sub_1008ECF64(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  long long v6 = (void *)a1[7];
  long long v8 = (void *)a1[9];
  uint64_t v7 = a1[10];
  uint64_t v10 = a1[12];
  uint64_t v11 = a1[14];
  uint64_t v12 = a1[16];
  swift_bridgeObjectRelease();
  sub_1008E14C0(v2, v3, v4, v5, v6);

  sub_10006ADFC(v7);
  sub_10006ADFC(v10);
  sub_10006ADFC(v11);
  sub_10006ADFC(v12);
  return a1;
}

double sub_1008ED030(_OWORD *a1)
{
  double result = 0.0;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1008ED04C()
{
  sub_1000760E4(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1008ED084()
{
  return sub_1008E01EC((void *)(v0 + 16));
}

uint64_t sub_1008ED08C()
{
  return sub_1008E047C((void *)(v0 + 16));
}

uint64_t sub_1008ED094@<X0>(uint64_t a1@<X8>)
{
  return sub_1008EC7AC(a1);
}

uint64_t sub_1008ED09C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = (int *)type metadata accessor for AnyAction();
  unint64_t v3 = (*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v4 = v0 + v3;
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  unint64_t v5 = v0 + v3 + v2[10];
  if (*(void *)(v5 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v4 + v2[12])) {
    swift_release();
  }
  if (*(void *)(v4 + v2[13])) {
    swift_release();
  }
  if (*(void *)(v4 + v2[14])) {
    swift_release();
  }
  if (*(void *)(v4 + v2[15])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1008ED230(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for AnyAction() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100081D08;
  return sub_1008EAE84(a1, v7, v8, v9, v4, v5);
}

uint64_t sub_1008ED33C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for Actionable() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_1008E89B0(a1, v8, v5, v6, a2);
}

uint64_t sub_1008ED3DC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(type metadata accessor for Actionable() - 8);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_1000154F4;
  return sub_1008E989C(v5, v2, v3);
}

void sub_1008ED4C8(uint64_t a1, unsigned char *a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for Actionable() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  sub_1008E9AD4(a1, a2, v8, v5, v6);
}

uint64_t sub_1008ED570()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for Actionable() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000760E4(v3 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[14], v1);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008ED6A8(uint64_t a1)
{
  return sub_1008E9C44(a1);
}

uint64_t sub_1008ED728()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for Actionable() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000760E4(v3 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[14], v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008ED87C@<X0>(char *a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for Actionable() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1008E8E74(a1, v2 + v6, v7, a2);
}

UIMenu ActionList.menu.getter()
{
  type metadata accessor for ActionGroup();
  type metadata accessor for Array();
  sub_100057778(0, &qword_1010BDCC8);
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  unint64_t v0 = Sequence.compactMap<A>(_:)();
  swift_bridgeObjectRelease();
  if (v0 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4 >= 1)
    {
      sub_100057778(0, &qword_1010BF798);
      swift_bridgeObjectRetain();
      UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
  }
  else if (*(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_100057778(0, &qword_1010BF798);
    UIMenuElementSize preferredElementSize = v0;
LABEL_4:
    swift_bridgeObjectRelease();
    v2._countAndFlagsBits = 0;
    v2._object = (void *)0xE000000000000000;
    v6.value.super.Class isa = 0;
    v6.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v2, (Swift::String_optional)0, v6, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v5);
  }
  swift_bridgeObjectRelease();
  return 0;
}

UIMenu sub_1008EDB0C@<X0>(UIMenu *a1@<X8>)
{
  result.super.super.Class isa = ActionGroup.menu.getter().super.super.isa;
  a1->super.super.Class isa = result.super.super.isa;
  return result;
}

UIMenu ActionGroup.menu.getter()
{
  type metadata accessor for AnyAction();
  type metadata accessor for Array();
  sub_100057778(0, &qword_1010BF798);
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  UIMenuElementSize preferredElementSize = Sequence.compactMap<A>(_:)();
  swift_bridgeObjectRelease();
  if ((unint64_t)preferredElementSize >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v3 >= 1) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((preferredElementSize & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    sub_100057778(0, &qword_1010BDCC8);
    v1._countAndFlagsBits = 0;
    v1._object = (void *)0xE000000000000000;
    v5.value.super.Class isa = 0;
    v5.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v1, (Swift::String_optional)0, v5, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v4);
  }
  swift_bridgeObjectRelease();
  return 0;
}

id ActionList.contextMenuConfiguration(identifier:previewProvider:)(uint64_t a1, void *(*a2)(), uint64_t a3)
{
  v6.super.super.Class isa = ActionList.menu.getter().super.super.isa;
  if (v6.super.super.isa)
  {
    Class isa = v6.super.super.isa;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = isa;
    uint64_t v9 = self;
    long long v19 = a2;
    uint64_t v20 = a3;
    long long v15 = _NSConcreteStackBlock;
    uint64_t v16 = 1107296256;
    long long v17 = sub_10072B818;
    long long v18 = &unk_100FF5510;
    uint64_t v10 = _Block_copy(&v15);
    swift_unknownObjectRetain();
    uint64_t v11 = isa;
    swift_retain_n();
    swift_release();
    long long v19 = JSSegue.Context.pageDetailsProvider.getter;
    uint64_t v20 = v8;
    long long v15 = _NSConcreteStackBlock;
    uint64_t v16 = 1107296256;
    long long v17 = sub_1008EE510;
    long long v18 = &unk_100FF5538;
    uint64_t v12 = _Block_copy(&v15);
    swift_retain();
    swift_release();
    id v13 = [v9 configurationWithIdentifier:a1 previewProvider:v10 actionProvider:v12];
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    _Block_release(v12);
    _Block_release(v10);
  }
  else
  {
    return 0;
  }
  return v13;
}

id AnyAction.menuElement.getter(uint64_t a1)
{
  Swift::String v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1);
  UIMenu v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v40 - v8;
  uint64_t v11 = (uint64_t *)&v1[*(int *)(v10 + 48)];
  unint64_t v12 = v11[1];
  if (v12 == 1) {
    return 0;
  }
  uint64_t v13 = *v11;
  uint64_t v14 = v11[2];
  uint64_t v15 = v11[3];
  long long v17 = (void *)v11[4];
  uint64_t v16 = v11[5];
  uint64_t v43 = v13;
  uint64_t v44 = v16;
  uint64_t v45 = v17;
  uint64_t v46 = v14;
  id v18 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = AnyAction.canPerform.getter(a1);
  uint64_t v21 = v20;
  sub_100313EE8(v19, v20);
  if (v21 != 1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  id v41 = v18;
  uint64_t v42 = v15;
  long long v22 = *(void **)&v2[*(int *)(a1 + 44)];
  long long v23 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v23(v9, v2, a1);
  if (!v22)
  {
    if (v12) {
      uint64_t v27 = v43;
    }
    else {
      uint64_t v27 = 0;
    }
    unint64_t v28 = 0xE000000000000000;
    if (v12) {
      unint64_t v28 = v12;
    }
    uint64_t v43 = v27;
    v40[1] = v28;
    if (v44)
    {
      if ((v44 & 2) == 0)
      {
        long long v29 = v23;
        goto LABEL_18;
      }
    }
    else if ((v44 & 2) == 0)
    {
      long long v29 = v23;
LABEL_18:
      uint64_t v44 = sub_100057778(0, (unint64_t *)&unk_1010C17D0);
      v29(v6, v9, a1);
      unint64_t v30 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = *(_OWORD *)(a1 + 16);
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v31 + v30, v6, a1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v26 = v41;
      id v32 = v41;
      id v25 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, a1);
      goto LABEL_19;
    }
    long long v29 = v23;
    goto LABEL_18;
  }
  long long v24 = *(void (**)(char *, uint64_t))(v4 + 8);
  id v25 = v22;
  v24(v9, a1);
  id v26 = v41;
LABEL_19:
  uint64_t v47 = 0;
  unint64_t v48 = 0xE000000000000000;
  v33._countAndFlagsBits = 0x2E736E6F69746341;
  v33._object = (void *)0xE800000000000000;
  String.append(_:)(v33);
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  uint64_t v35 = v47;
  long long v34 = (void *)v48;
  if (qword_1010BBFF0 != -1) {
    swift_once();
  }
  uint64_t v47 = qword_1010C5C28;
  unint64_t v48 = unk_1010C5C30;
  swift_bridgeObjectRetain();
  v36._countAndFlagsBits = 46;
  v36._object = (void *)0xE100000000000000;
  String.append(_:)(v36);
  swift_bridgeObjectRetain();
  v37._countAndFlagsBits = v35;
  v37._object = v34;
  String.append(_:)(v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v25 setAccessibilityIdentifier:v38];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v25;
}

uint64_t sub_1008EE290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for AnyAction();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = sub_100063814(&qword_1010C0040);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  type metadata accessor for MainActor();
  uint64_t v15 = static MainActor.shared.getter();
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  long long v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = v15;
  *((void *)v17 + 3) = &protocol witness table for MainActor;
  *((void *)v17 + 4) = a3;
  *((void *)v17 + 5) = a4;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v17[v16], v10, v7);
  sub_100066A68((uint64_t)v13, (uint64_t)&unk_1010BF7A8, (uint64_t)v17);
  return swift_release();
}

id sub_1008EE48C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AnyAction();
  id result = AnyAction.menuElement.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_1008EE4D8()
{
  return swift_deallocObject();
}

id sub_1008EE510(uint64_t a1)
{
  Swift::String v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_100057778(0, &qword_1010BF798);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1008EE5A0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)type metadata accessor for AnyAction();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 + v2[10];
  if (*(void *)(v4 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v3 + v2[12])) {
    swift_release();
  }
  if (*(void *)(v3 + v2[13])) {
    swift_release();
  }
  if (*(void *)(v3 + v2[14])) {
    swift_release();
  }
  if (*(void *)(v3 + v2[15])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1008EE72C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for AnyAction() - 8);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1008EE290(a1, v6, v3, v4);
}

uint64_t sub_1008EE7B8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = (int *)type metadata accessor for AnyAction();
  unint64_t v3 = (*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v4 = v0 + v3;
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  unint64_t v5 = v0 + v3 + v2[10];
  if (*(void *)(v5 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v4 + v2[12])) {
    swift_release();
  }
  if (*(void *)(v4 + v2[13])) {
    swift_release();
  }
  if (*(void *)(v4 + v2[14])) {
    swift_release();
  }
  if (*(void *)(v4 + v2[15])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1008EE94C(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for AnyAction() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000154F4;
  return sub_1008EAE84(a1, v7, v8, v9, v4, v5);
}

uint64_t View.alertPresenting(_:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  swift_retain();
  sub_100063814(&qword_1010BF7B0);
  sub_100063858(&qword_1010BF7B8, &qword_1010BF7B0);
  ObservedObject.init(wrappedValue:)();
  unint64_t v4 = sub_1008EEB24();
  View.viewPresenting<A, B>(_:modifier:)(a1, v4, a2);
  return swift_release();
}

unint64_t sub_1008EEB24()
{
  unint64_t result = qword_1010BF7C0;
  if (!qword_1010BF7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF7C0);
  }
  return result;
}

uint64_t sub_1008EEB78()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for Modifier()
{
  return &type metadata for Modifier;
}

uint64_t sub_1008EEC58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008EEC74@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100063814(&qword_1010BF7F0);
  long long v78 = *(uint64_t **)(v4 - 8);
  __chkstk_darwin(v4);
  long long v74 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Swift::String v77 = (char *)&v57 - v7;
  uint64_t v79 = sub_100063814(&qword_1010BF7F8);
  __chkstk_darwin(v79);
  long long v80 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814(&qword_1010BF800);
  uint64_t v76 = *(uint64_t **)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v75 = (char *)&v57 - v13;
  uint64_t v14 = sub_100063814(&qword_1010BF808);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  long long v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = (uint64_t *)(a1 + *(void *)(*(void *)a1 + 96));
  swift_beginAccess();
  uint64_t v19 = v18[5];
  if (v19)
  {
    uint64_t v68 = v17;
    uint64_t v69 = v9;
    uint64_t v70 = v15;
    uint64_t v71 = v14;
    uint64_t v72 = v4;
    uint64_t v73 = a2;
    uint64_t v21 = v18[1];
    uint64_t v22 = v18[2];
    uint64_t v23 = v18[3];
    uint64_t v24 = v18[4];
    id v25 = (void *)v18[6];
    uint64_t v92 = *v18;
    uint64_t v20 = v92;
    uint64_t v93 = v21;
    uint64_t v62 = v22;
    uint64_t v94 = v22;
    uint64_t v95 = v23;
    char v96 = v24 & 1;
    uint64_t v97 = v19;
    uint64_t v98 = v25;
    uint64_t v26 = v19;
    long long v66 = v25;
    id v27 = v25;
    swift_bridgeObjectRetain();
    uint64_t v64 = v23;
    swift_bridgeObjectRetain();
    uint64_t v67 = v26;
    swift_bridgeObjectRetain();
    uint64_t v28 = static Color.clear.getter();
    uint64_t v63 = v20;
    if (v21) {
      uint64_t v29 = v20;
    }
    else {
      uint64_t v29 = 0;
    }
    unint64_t v30 = 0xE000000000000000;
    if (v21) {
      unint64_t v30 = v21;
    }
    uint64_t v65 = v24;
    uint64_t v61 = v28;
    uint64_t v60 = v21;
    unint64_t v90 = v30;
    uint64_t v91 = v28;
    uint64_t v89 = v29;
    swift_bridgeObjectRetain();
    sub_100063814(&qword_1010BF7B0);
    sub_100063858(&qword_1010BF7B8, &qword_1010BF7B0);
    ObservedObject.projectedValue.getter();
    swift_getKeyPath();
    ObservedObject.Wrapper.subscript.getter();
    swift_release();
    uint64_t v31 = swift_release();
    if (v24)
    {
      uint64_t v76 = &v57;
      __chkstk_darwin(v31);
      __chkstk_darwin(v44);
      uint64_t v45 = sub_100063814(&qword_1010BF810);
      uint64_t v46 = sub_100063814(&qword_1010BF818);
      unint64_t v58 = sub_10005D1D4();
      unint64_t v59 = sub_1008EFFF8();
      long long v75 = (char *)sub_1008F0090();
      uint64_t v47 = v74;
      View.confirmationDialog<A, B, C>(_:isPresented:titleVisibility:actions:message:)();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t v48 = v78;
      uint64_t v49 = v77;
      uint64_t v50 = v72;
      ((void (*)(char *, char *, uint64_t))v78[4])(v77, v47, v72);
      ((void (*)(char *, char *, uint64_t))v48[2])(v80, v49, v50);
      swift_storeEnumTagMultiPayload();
      long long v81 = &type metadata for Color;
      long long v82 = &type metadata for String;
      unint64_t v83 = v45;
      uint64_t v84 = v46;
      unint64_t v51 = v58;
      Swift::String v85 = &protocol witness table for Color;
      unint64_t v86 = v58;
      unint64_t v52 = v59;
      uint64_t v53 = v75;
      long long v87 = (char *)v59;
      long long v88 = v75;
      swift_getOpaqueTypeConformance2();
      long long v81 = &type metadata for Color;
      long long v82 = &type metadata for String;
      unint64_t v83 = v45;
      uint64_t v84 = v46;
      Swift::String v85 = &protocol witness table for Color;
      unint64_t v86 = v51;
      long long v87 = (char *)v52;
      long long v88 = v53;
      swift_getOpaqueTypeConformance2();
      uint64_t v42 = (uint64_t)v68;
      _ConditionalContent<>.init(storage:)();
      swift_release();
      sub_1004A93F0(v63, v60, v62, v64, v65, v67, v66);
      ((void (*)(char *, uint64_t))v48[1])(v49, v50);
    }
    else
    {
      long long v78 = &v57;
      LODWORD(v77) = v83;
      __chkstk_darwin(v31);
      __chkstk_darwin(v32);
      unint64_t v58 = sub_100063814(&qword_1010BF810);
      uint64_t v33 = sub_100063814(&qword_1010BF818);
      unint64_t v59 = sub_10005D1D4();
      long long v74 = (char *)sub_1008EFFF8();
      unint64_t v56 = sub_1008F0090();
      uint64_t v34 = v33;
      View.alert<A, B, C>(_:isPresented:actions:message:)();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v35 = v76;
      Swift::String v36 = v75;
      Swift::String v37 = v11;
      uint64_t v38 = v69;
      ((void (*)(char *, char *, uint64_t))v76[4])(v75, v37, v69);
      ((void (*)(char *, char *, uint64_t))v35[2])(v80, v36, v38);
      swift_storeEnumTagMultiPayload();
      long long v81 = &type metadata for Color;
      long long v82 = &type metadata for String;
      unint64_t v39 = v58;
      unint64_t v83 = v58;
      uint64_t v84 = v34;
      unint64_t v40 = v59;
      Swift::String v85 = &protocol witness table for Color;
      unint64_t v86 = v59;
      id v41 = v74;
      long long v87 = v74;
      long long v88 = (char *)v56;
      swift_getOpaqueTypeConformance2();
      long long v81 = &type metadata for Color;
      long long v82 = &type metadata for String;
      unint64_t v83 = v39;
      uint64_t v84 = v34;
      Swift::String v85 = &protocol witness table for Color;
      unint64_t v86 = v40;
      long long v87 = v41;
      long long v88 = (char *)v56;
      swift_getOpaqueTypeConformance2();
      uint64_t v42 = (uint64_t)v68;
      _ConditionalContent<>.init(storage:)();
      swift_release();
      sub_1004A93F0(v63, v60, v62, v64, v65, v67, v66);
      ((void (*)(char *, uint64_t))v35[1])(v36, v38);
    }
    uint64_t v54 = v42;
    a2 = v73;
    sub_10003CABC(v54, v73, &qword_1010BF808);
    uint64_t v43 = 0;
    uint64_t v14 = v71;
    uint64_t v15 = v70;
  }
  else
  {
    uint64_t v43 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a2, v43, 1, v14);
}

uint64_t sub_1008EF774@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1008EF80C()
{
  return static Published.subscript.setter();
}

uint64_t sub_1008EF898()
{
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1008EF998@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (*(void *)(a1 + 24))
  {
    sub_10005D1D4();
    swift_bridgeObjectRetain();
    uint64_t result = Text.init<A>(_:)();
    uint64_t v7 = v6 & 1;
  }
  else
  {
    uint64_t result = 0;
    uint64_t v4 = 0;
    uint64_t v7 = 0;
    uint64_t v5 = 0;
  }
  *a2 = result;
  a2[1] = v4;
  a2[2] = v7;
  a2[3] = v5;
  return result;
}

uint64_t sub_1008EFA1C@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100063814(&qword_1010BDC58);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010BF830);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = a1[1];
  long long v20 = *a1;
  long long v21 = v11;
  long long v22 = a1[2];
  uint64_t v23 = *((void *)a1 + 6);
  long long v25 = v11;
  long long v19 = v11;
  sub_10003CABC((uint64_t)&v22, (uint64_t)&v24, &qword_1010BF858);
  sub_10003CABC((uint64_t)&v24, (uint64_t)&v27, &qword_1010BF858);
  char v12 = v27;
  if (v27 == 2)
  {
    uint64_t v13 = type metadata accessor for ButtonRole();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    if (v12) {
      static ButtonRole.destructive.getter();
    }
    else {
      static ButtonRole.cancel.getter();
    }
    uint64_t v14 = type metadata accessor for ButtonRole();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 0, 1, v14);
  }
  long long v26 = v20;
  uint64_t v15 = *((void *)&v22 + 1);
  uint64_t v16 = swift_allocObject();
  long long v17 = v21;
  *(_OWORD *)(v16 + 16) = v20;
  *(_OWORD *)(v16 + 32) = v17;
  *(_OWORD *)(v16 + 48) = v22;
  *(void *)(v16 + 64) = v23;
  sub_1000D230C((uint64_t)&v25);
  sub_1000D230C((uint64_t)&v26);
  sub_10007B674(v15);
  sub_10005D1D4();
  Button<>.init<A>(_:role:action:)();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v10, v7);
}

void sub_1008EFCD0(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010C0040);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    type metadata accessor for MainActor();
    swift_retain_n();
    uint64_t v8 = static MainActor.shared.getter();
    uint64_t v9 = (void *)swift_allocObject();
    long long v9[2] = v8;
    v9[3] = &protocol witness table for MainActor;
    v9[4] = v5;
    v9[5] = v6;
    sub_100066A68((uint64_t)v4, (uint64_t)&unk_1010BF868, (uint64_t)v9);
    sub_10006ADFC(v5);
    swift_release();
  }
}

uint64_t sub_1008EFE0C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  v4[2] = type metadata accessor for MainActor();
  v4[3] = static MainActor.shared.getter();
  uint64_t v8 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  v4[4] = v6;
  void *v6 = v4;
  v6[1] = sub_10000EFA8;
  return v8();
}

uint64_t sub_1008EFF00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v6 = static Alignment.center.getter();
  uint64_t v8 = v7;
  uint64_t v9 = a2 + *(int *)(sub_100063814(&qword_1010BF7D8) + 36);
  sub_1008EEC74(v5, v9);
  uint64_t v10 = (uint64_t *)(v9 + *(int *)(sub_100063814(&qword_1010BF7E0) + 36));
  *uint64_t v10 = v6;
  v10[1] = v8;
  uint64_t v11 = sub_100063814(&qword_1010BF7E8);
  char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);

  return v12(a2, a1, v11);
}

uint64_t sub_1008EFFDC()
{
  return sub_1008EF898();
}

unint64_t sub_1008EFFF8()
{
  unint64_t result = qword_1010BF820;
  if (!qword_1010BF820)
  {
    sub_10006389C(&qword_1010BF810);
    sub_100063858(&qword_1010BF828, &qword_1010BF830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF820);
  }
  return result;
}

unint64_t sub_1008F0090()
{
  unint64_t result = qword_1010BF838;
  if (!qword_1010BF838)
  {
    sub_10006389C(&qword_1010BF818);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF838);
  }
  return result;
}

uint64_t sub_1008F00FC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1008EF998(*(void *)(v1 + 16), a1);
}

unint64_t sub_1008F0118()
{
  unint64_t result = qword_1010BF850;
  if (!qword_1010BF850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF850);
  }
  return result;
}

uint64_t sub_1008F016C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_1008F01BC()
{
  sub_1008EFCD0(v0 + 16);
}

uint64_t sub_1008F01C4()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008F0204(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000154F4;
  return sub_1008EFE0C(a1, v4, v5, v6);
}

uint64_t sub_1008F02CC()
{
  return 8;
}

void *sub_1008F02D8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1008F02E8()
{
  unint64_t result = qword_1010BF870;
  if (!qword_1010BF870)
  {
    sub_10006389C(&qword_1010BF7D8);
    sub_100063858(&qword_1010BF878, &qword_1010BF7E8);
    sub_100063858(&qword_1010BF880, &qword_1010BF7E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF870);
  }
  return result;
}

id static UIAlertController.alertController(with:overrideStyle:)(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1008F09EC(a1, a2, a3 & 1);
}

void sub_1008F03BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100063814(&qword_1010C0040);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a2 + 40);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 48);
    uint64_t v8 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
    type metadata accessor for MainActor();
    swift_retain_n();
    uint64_t v9 = static MainActor.shared.getter();
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v9;
    v10[3] = &protocol witness table for MainActor;
    v10[4] = v6;
    v10[5] = v7;
    sub_100066A68((uint64_t)v5, (uint64_t)&unk_1010BF890, (uint64_t)v10);
    sub_10006ADFC(v6);
    swift_release();
  }
}

id static UIAlertAction.tapToRadar(title:description:screenshots:attachments:keywords:withDevicePrefix:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v39 = a6;
  uint64_t v40 = a7;
  uint64_t v41 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v41 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v41);
  Swift::String v37 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v38 = (char *)&v37 - v14;
  uint64_t v15 = sub_100063814(&qword_1010BCBE0);
  __chkstk_darwin(v15 - 8);
  long long v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  long long v20 = (char *)&v37 - v19;
  if (qword_1010BC578 != -1) {
    swift_once();
  }
  if (static DeviceCapabilities.isInternalInstall != 1) {
    return 0;
  }
  sub_100954770(a4, a5, v39, v40, a8 & 1, (uint64_t)v20);
  sub_1008409A4((uint64_t)v20, (uint64_t)v17);
  uint64_t v21 = v41;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v17, 1, v41) == 1)
  {
    sub_1000184A4((uint64_t)v20);
    uint64_t v22 = (uint64_t)v17;
LABEL_9:
    sub_1000184A4(v22);
    return 0;
  }
  uint64_t v23 = *(void (**)(void))(v11 + 32);
  char v24 = v38;
  v23();
  id v25 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v26);
  uint64_t v28 = v27;
  unsigned int v29 = [v25 canOpenURL:v27];

  if (!v29)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v21);
    uint64_t v22 = (uint64_t)v20;
    goto LABEL_9;
  }
  unint64_t v30 = v37;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, v24, v21);
  unint64_t v31 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v32 = swift_allocObject();
  ((void (*)(unint64_t, char *, uint64_t))v23)(v32 + v31, v30, v21);
  NSString v33 = String._bridgeToObjectiveC()();
  aBlock[4] = sub_1008F0D90;
  aBlock[5] = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10023B98C;
  aBlock[3] = &unk_100FF56A8;
  uint64_t v34 = _Block_copy(aBlock);
  swift_release();
  id v35 = [(id)swift_getObjCClassFromMetadata() actionWithTitle:v33 style:0 handler:v34];
  _Block_release(v34);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v21);
  sub_1000184A4((uint64_t)v20);
  return v35;
}

void sub_1008F0900()
{
  id v0 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v1);
  uint64_t v3 = v2;
  sub_1008F6A7C((uint64_t)_swiftEmptyArrayStorage);
  _s3__C25OpenExternalURLOptionsKeyVMa_0(0);
  sub_1008DE8B0();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v0 openURL:v3 options:isa completionHandler:0];
}

id Alert.uiAlertController.getter()
{
  return sub_1008F09EC(v0, 0, 1);
}

id sub_1008F09EC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    a2 = ~*(unsigned __int8 *)(a1 + 32) & 1;
  }
  sub_1008F0E00(a1, (uint64_t)v33);
  sub_1008F0E00(a1 + 16, (uint64_t)v32);
  sub_1008F0E00((uint64_t)v33, (uint64_t)v34);
  if (v34[1])
  {
    sub_1000D230C((uint64_t)v32);
    sub_1000D230C((uint64_t)v33);
    NSString v5 = String._bridgeToObjectiveC()();
    sub_1001ECE50((uint64_t)v33);
  }
  else
  {
    sub_1000D230C((uint64_t)v32);
    NSString v5 = 0;
  }
  sub_1008F0E00((uint64_t)v32, (uint64_t)v35);
  if (v35[1])
  {
    NSString v6 = String._bridgeToObjectiveC()();
    sub_1001ECE50((uint64_t)v32);
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [self alertControllerWithTitle:v5 message:v6 preferredStyle:a2];

  if (!a2) {
    [v7 setModalPresentationStyle:7];
  }
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v31 = v8;
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    id v25 = v30;
    id v26 = self;
    swift_bridgeObjectRetain();
    uint64_t v10 = (uint64_t *)(v8 + 40);
    do
    {
      uint64_t v27 = v9;
      uint64_t v11 = v7;
      uint64_t v12 = *(v10 - 1);
      uint64_t v13 = *v10;
      uint64_t v15 = v10[1];
      uint64_t v14 = v10[2];
      int v16 = *((unsigned __int8 *)v10 + 24);
      uint64_t v17 = v10[4];
      uint64_t v18 = v10[5];
      uint64_t v19 = 1;
      if (v16) {
        uint64_t v19 = 2;
      }
      if (v16 == 2) {
        uint64_t v19 = 0;
      }
      uint64_t v28 = v19;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v12;
      *(void *)(v20 + 24) = v13;
      id v7 = v11;
      *(void *)(v20 + 32) = v15;
      *(void *)(v20 + 40) = v14;
      *(unsigned char *)(v20 + 48) = v16;
      *(void *)(v20 + 56) = v17;
      *(void *)(v20 + 64) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10007B674(v17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10007B674(v17);
      NSString v21 = String._bridgeToObjectiveC()();
      v30[2] = sub_1008F0EB8;
      v30[3] = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      v30[0] = sub_10023B98C;
      v30[1] = &unk_100FF56F8;
      uint64_t v22 = _Block_copy(aBlock);
      swift_release();
      id v23 = [v26 actionWithTitle:v21 style:v28 handler:v22 v25];
      _Block_release(v22);

      [v11 addAction:v23];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_10006ADFC(v17);
      v10 += 7;
      uint64_t v9 = v27 - 1;
    }
    while (v27 != 1);
    sub_100219BC4((uint64_t)&v31);
  }
  return v7;
}

uint64_t sub_1008F0D00()
{
  uint64_t v1 = type metadata accessor for URL();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

void sub_1008F0D90()
{
  type metadata accessor for URL();

  sub_1008F0900();
}

uint64_t sub_1008F0E00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814((uint64_t *)&unk_1010C28C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008F0E68()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_1008F0EB8(uint64_t a1)
{
  sub_1008F03BC(a1, v1 + 16);
}

uint64_t sub_1008F0EC0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008F0F00(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  NSString v6 = (int *)v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_1000154F4;
  return sub_1008EFE0C(a1, v4, v5, v6);
}

void Alert.Action.init(id:title:role:perform:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v22 = a7;
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    UUID.init()();
    a1 = UUID.uuidString.getter();
    a2 = v19;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(unsigned char *)(a8 + 32) = a5;
  uint64_t v20 = v22;
  *(void *)(a8 + 40) = a6;
  *(void *)(a8 + 48) = v20;
}

uint64_t Alert.init(title:message:image:style:actions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(unsigned char *)(a8 + 32) = a6 & 1;
  *(void *)(a8 + 40) = a7;
  *(void *)(a8 + 48) = a5;
  return result;
}

uint64_t Alert.Action.role.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t Library.Menu.userSelectedIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

void *Alert.image.getter()
{
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

uint64_t Alert.Action.perform.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_10007B674(v1);
  return v1;
}

unint64_t sub_1008F1178()
{
  unint64_t result = qword_1010BF898;
  if (!qword_1010BF898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF898);
  }
  return result;
}

unint64_t sub_1008F11D0()
{
  unint64_t result = qword_1010BF8A0[0];
  if (!qword_1010BF8A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1010BF8A0);
  }
  return result;
}

void destroy for Alert(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 48);
}

uint64_t initializeWithCopy for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

uint64_t assignWithCopy for Alert(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 48);
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for Alert(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Alert(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Alert()
{
  return &type metadata for Alert;
}

ValueMetadata *type metadata accessor for Alert.Style()
{
  return &type metadata for Alert.Style;
}

uint64_t destroy for Alert.Action(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for Alert.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  id v7 = (_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for Alert.Action(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 40);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  if (!v4)
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v5;
      *(void *)(a1 + 48) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Alert.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a1 + 40);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  if (!v7)
  {
    if (v6)
    {
      uint64_t v9 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v6;
      *(void *)(a1 + 48) = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v8;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for Alert.Action()
{
  return &type metadata for Alert.Action;
}

unsigned char *_s9MusicCore5AlertV5StyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008F17C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Alert.Action.Role()
{
  return &type metadata for Alert.Action.Role;
}

uint64_t ArtworkVideoReportingController.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  ArtworkVideoReportingController.init()();
  return v0;
}

uint64_t ArtworkVideoReportingController.init()()
{
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  swift_getTupleTypeMetadata2();
  static Array._allocateUninitialized(_:)();
  *(void *)(v0 + 40) = Dictionary.init(dictionaryLiteral:)();
  return v0;
}

uint64_t ArtworkVideoReportingController.isEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ArtworkVideoReportingController.isEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t (*CompoundRequestResponseInvalidation.onInvalidation.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t BindingRequestResponseInvalidation.onInvalidation.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  sub_10007B674(v1);
  return v1;
}

uint64_t BindingRequestResponseInvalidation.onInvalidation.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 24);
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return sub_10006ADFC(v5);
}

uint64_t (*BindingRequestResponseInvalidation.onInvalidation.modify())()
{
  return j__swift_endAccess;
}

void ArtworkVideoReportingController.componentWillAppear(at:)(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)v30 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v37 = v1 + 5;
  swift_beginAccess();
  uint64_t v12 = *(void *)(v3 + 88);
  swift_bridgeObjectRetain();
  id v36 = a1;
  Dictionary.subscript.getter();
  swift_bridgeObjectRelease();
  id v13 = v38;
  if (v38 == (id)1)
  {
    uint64_t v35 = v12;
    uint64_t v14 = 0;
    id v31 = 0;
    id v32 = 0;
    id v33 = 0;
    uint64_t v15 = 0;
    int v34 = 4;
LABEL_6:
    uint64_t v20 = self;
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v22 = [v20 serverTimeFromDate:isa];

    id v23 = *(void (**)(char *, id, uint64_t))(v5 + 16);
    id v13 = v22;
    v30[2] = v7;
    v23(v7, v36, v4);
    id v36 = v15;
    id v19 = v14;
    char v24 = v14;
    id v25 = v31;
    id v26 = v15;
    id v18 = v31;
    v30[1] = v4;
    id v27 = v32;
    id v17 = v32;
    id v28 = v33;
    id v29 = v33;
    id v38 = v22;
    uint64_t v39 = v24;
    uint64_t v40 = v25;
    uint64_t v41 = v27;
    id v16 = v29;
    uint64_t v42 = v28;
    uint64_t v43 = v26;
    unsigned __int8 v44 = v34;
    swift_beginAccess();
    type metadata accessor for Dictionary();
    Dictionary.subscript.setter();
    swift_endAccess();
    uint64_t v15 = v36;
    goto LABEL_7;
  }
  uint64_t v15 = v43;
  if (!v38)
  {
    uint64_t v35 = v12;
    int v34 = v44;
    id v32 = v41;
    id v33 = v42;
    id v31 = v40;
    uint64_t v14 = v39;
    goto LABEL_6;
  }
  id v16 = v42;
  id v17 = v41;
  id v18 = v40;
  id v19 = v39;
LABEL_7:
}

void ArtworkVideoReportingController.placeholderDidAppear(at:)(void *a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (v1[16] == 1)
  {
    swift_beginAccess();
    uint64_t v12 = *(void *)(v3 + 88);
    swift_bridgeObjectRetain();
    uint64_t v33 = v12;
    id v34 = a1;
    Dictionary.subscript.getter();
    swift_bridgeObjectRelease();
    id v13 = v35;
    if (v35 == (void *)1)
    {
      id v32 = v1 + 40;
      id v13 = 0;
      id v28 = 0;
      id v29 = 0;
      id v30 = 0;
      uint64_t v14 = 0;
      int v31 = 4;
    }
    else
    {
      uint64_t v14 = v40;
      if (v36)
      {
        sub_1008F3B88(v35, v36, v37, v38, v39, v40);
        return;
      }
      id v32 = v1 + 40;
      id v28 = v37;
      id v29 = v38;
      id v30 = v39;
      int v31 = v41;
    }
    uint64_t v15 = self;
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v17 = [v15 serverTimeFromDate:isa];

    id v18 = *(void (**)(char *, id, uint64_t))(v5 + 16);
    id v27 = v17;
    v18(v7, v34, v4);
    id v25 = v14;
    id v34 = v13;
    id v19 = v28;
    id v26 = v28;
    id v20 = v29;
    id v21 = v29;
    id v22 = v30;
    id v23 = v30;
    uint64_t v35 = v13;
    id v36 = v17;
    Swift::String v37 = v19;
    id v38 = v20;
    uint64_t v39 = v22;
    uint64_t v40 = v14;
    unsigned __int8 v41 = v31;
    swift_beginAccess();
    type metadata accessor for Dictionary();
    Dictionary.subscript.setter();
    swift_endAccess();
  }
}

void ArtworkVideoReportingController.videoArtworkWasSelectedForPlayback(at:isReadyForDisplay:)(uint64_t a1, char a2)
{
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = *(void *)(*(void *)v2 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)v33 - v8;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (v2[16] == 1)
  {
    v33[1] = v2 + 40;
    swift_beginAccess();
    uint64_t v14 = *(void **)(v5 + 88);
    swift_bridgeObjectRetain();
    v33[0] = v14;
    Dictionary.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v15 = v34;
    char v16 = a2;
    if (v34 == (void *)1)
    {
      uint64_t v15 = 0;
      id v17 = 0;
      long long v18 = 0uLL;
      char v19 = 4;
      long long v20 = 0uLL;
    }
    else
    {
      char v19 = v38;
      id v17 = v37;
      long long v18 = v35;
      long long v20 = v36;
    }
    uint64_t v39 = v15;
    long long v40 = v18;
    long long v41 = v20;
    uint64_t v42 = v17;
    char v43 = v19;
    id v21 = self;
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    id v23 = [v21 serverTimeFromDate:isa];

    *((void *)&v40 + 1) = v23;
    sub_1008F2524(v16 & 1);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    uint64_t v24 = v39;
    long long v25 = v40;
    long long v27 = v41;
    id v26 = v42;
    id v34 = v39;
    long long v35 = v40;
    long long v36 = v41;
    Swift::String v37 = v42;
    char v38 = v43;
    swift_beginAccess();
    type metadata accessor for Dictionary();
    v33[0] = v24;
    id v28 = (id)v25;
    id v29 = *((id *)&v25 + 1);
    id v30 = (id)v27;
    id v31 = *((id *)&v27 + 1);
    id v32 = v26;
    Dictionary.subscript.setter();
    swift_endAccess();
  }
}

uint64_t sub_1008F2524(char a1)
{
  uint64_t result = 1819047270;
  switch(*(unsigned char *)(v1 + 48))
  {
    case 3:
      return swift_bridgeObjectRelease();
    case 4:
      goto LABEL_3;
    default:
      char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = swift_bridgeObjectRelease();
      if (v4) {
        return result;
      }
LABEL_3:
      if (a1)
      {
        *(unsigned char *)(v1 + 48) = 0;
        return result;
      }
      if (*(void *)(v1 + 24))
      {
        char v5 = 1;
      }
      else
      {
        if (!*(void *)(v1 + 8)) {
          return result;
        }
        char v5 = 2;
      }
      *(unsigned char *)(v1 + 48) = v5;
      return result;
  }
}

void ArtworkVideoReportingController.videoArtworkWillBeginLoading(at:)(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (v1[16] == 1)
  {
    long long v35 = v1 + 40;
    swift_beginAccess();
    uint64_t v12 = *(void *)(v3 + 88);
    swift_bridgeObjectRetain();
    uint64_t v32 = v12;
    Dictionary.subscript.getter();
    swift_bridgeObjectRelease();
    id v13 = v36;
    uint64_t v34 = a1;
    if (v36 == (void *)1)
    {
      uint64_t v33 = 0;
      id v31 = 0;
      id v28 = 0;
      id v30 = 0;
      id v29 = 0;
      id v13 = 0;
    }
    else
    {
      uint64_t v33 = v41;
      id v31 = v40;
      id v28 = v39;
      id v30 = v38;
      id v29 = v37;
    }
    uint64_t v14 = self;
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v16 = [v14 serverTimeFromDate:isa];

    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v34, v4);
    id v17 = v29;
    long long v36 = v13;
    Swift::String v37 = v29;
    long long v18 = v30;
    char v38 = v30;
    uint64_t v39 = v16;
    char v19 = v31;
    long long v20 = v33;
    long long v40 = v31;
    long long v41 = v33;
    char v42 = 4;
    swift_beginAccess();
    type metadata accessor for Dictionary();
    id v21 = v13;
    id v22 = v17;
    id v23 = v18;
    id v24 = v16;
    id v25 = v19;
    id v26 = v20;
    Dictionary.subscript.setter();
    swift_endAccess();
  }
}

void ArtworkVideoReportingController.videoArtworkDidCancelLoading(at:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*((unsigned char *)v2 + 16) == 1)
  {
    Swift::String v37 = v2 + 5;
    swift_beginAccess();
    uint64_t v13 = *(void *)(v4 + 88);
    swift_bridgeObjectRetain();
    uint64_t v36 = v13;
    Dictionary.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v14 = v38;
    if (v38 != (void *)1)
    {
      int v30 = v44;
      uint64_t v15 = v42;
      id v26 = v43;
      id v25 = v42;
      uint64_t v29 = a1;
      uint64_t v27 = v6;
      id v16 = v40;
      id v17 = v41;
      id v24 = v40;
      id v28 = v8;
      long long v18 = v39;
      id v23 = self;
      id v33 = v15;
      id v35 = v14;
      id v34 = v18;
      id v32 = v16;
      id v31 = v17;
      Date.init()();
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      id v20 = [v23 serverTimeFromDate:isa];

      id v21 = v20;
      uint64_t v22 = v29;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v28, v29, v5);
      char v38 = v14;
      uint64_t v39 = v18;
      long long v40 = v24;
      long long v41 = v17;
      char v42 = v25;
      char v43 = v20;
      unsigned __int8 v44 = v30;
      swift_beginAccess();
      type metadata accessor for Dictionary();
      Dictionary.subscript.setter();
      swift_endAccess();
      sub_1008F317C(v22);
      _s9MusicCore31ArtworkVideoReportingControllerC05videoC15DidStopPlayback2atyx_tF_0(v22);
    }
  }
}

void ArtworkVideoReportingController.videoArtworkDidStartPlayback(at:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v36 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*((unsigned char *)v2 + 16) == 1)
  {
    id v35 = v2 + 5;
    swift_beginAccess();
    uint64_t v12 = *(void *)(v3 + 88);
    swift_bridgeObjectRetain();
    uint64_t v34 = v12;
    Dictionary.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v13 = v37;
    if (v37 != (void *)1)
    {
      int v28 = v43;
      uint64_t v14 = v42;
      id v25 = v42;
      id v24 = v41;
      uint64_t v26 = v5;
      id v16 = v39;
      uint64_t v15 = v40;
      id v23 = v40;
      uint64_t v27 = v7;
      id v17 = v38;
      id v22 = self;
      id v31 = v14;
      id v33 = v13;
      id v32 = v17;
      id v30 = v16;
      id v29 = v15;
      Date.init()();
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      id v19 = [v22 serverTimeFromDate:isa];

      id v20 = v19;
      uint64_t v21 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v27, v36, v4);
      Swift::String v37 = v13;
      char v38 = v17;
      uint64_t v39 = v16;
      long long v40 = v23;
      long long v41 = v19;
      char v42 = v25;
      unsigned __int8 v43 = v28;
      swift_beginAccess();
      type metadata accessor for Dictionary();
      Dictionary.subscript.setter();
      swift_endAccess();
      sub_1008F317C(v21);
    }
  }
}

void sub_1008F317C(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v64 - v8;
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    Dictionary.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v83;
    if (v83 != (void *)1)
    {
      long long v74 = v6;
      long long v75 = v9;
      uint64_t v12 = v84;
      uint64_t v11 = v85;
      uint64_t v13 = v86;
      Swift::String v77 = v87;
      id v78 = v88;
      int v79 = v89;
      swift_beginAccess();
      uint64_t v14 = *(uint64_t (**)(uint64_t))(v1 + 24);
      if (v14)
      {
        uint64_t v73 = v4;
        uint64_t v15 = v10;
        uint64_t v76 = v11;
        swift_retain();
        uint64_t v16 = v14(a1);
        long long v18 = v17;
        char v20 = v19;
        sub_10006ADFC((uint64_t)v14);
        if (v13)
        {
          unint64_t v83 = (void *)v16;
          uint64_t v84 = v18;
          uint64_t v72 = (uint64_t)v18;
          LOBYTE(v85) = v20;
          uint64_t v10 = v15;
          unint64_t v86 = v15;
          long long v87 = v12;
          uint64_t v11 = v76;
          long long v88 = v76;
          uint64_t v89 = v13;
          uint64_t v21 = v77;
          unint64_t v90 = v77;
          id v91 = v78;
          char v92 = v79;
          if (v77)
          {
            uint64_t v65 = v16;
            id v69 = v78;
            id v22 = v12;
            id v23 = v21;
            uint64_t v70 = v13;
            id v24 = v13;
            id v25 = v15;
            uint64_t v71 = v22;
            id v26 = v22;
            id v27 = v11;
            [v23 doubleValue];
            double v29 = v28;
            [v24 doubleValue];
            double v31 = v30;
            if (qword_1010BBDF0 != -1) {
              swift_once();
            }
            uint64_t v32 = type metadata accessor for Logger();
            uint64_t v66 = sub_100050A90(v32, (uint64_t)static Logger.motion);
            id v33 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
            v64[1] = v73 + 16;
            v64[0] = v33;
            v33(v75, a1, v3);
            swift_bridgeObjectRetain_n();
            id v34 = v25;
            id v35 = v26;
            id v36 = v27;
            id v37 = v24;
            id v38 = v23;
            id v39 = v69;
            id v69 = v34;
            id v68 = v35;
            id v67 = v36;
            id v40 = v37;
            id v41 = v38;
            id v42 = v39;
            unsigned __int8 v43 = Logger.logObject.getter();
            os_log_type_t v44 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v43, v44))
            {
              uint64_t v45 = swift_slowAlloc();
              uint64_t v66 = swift_slowAlloc();
              uint64_t v82 = v66;
              *(_DWORD *)uint64_t v45 = 136315650;
              uint64_t v80 = v65;
              uint64_t v81 = v72;
              swift_bridgeObjectRetain();
              sub_100063814((uint64_t *)&unk_1010C28C0);
              uint64_t v46 = String.init<A>(describing:)();
              *(void *)(v45 + 4) = sub_100075E68(v46, v47, &v82);

              id v48 = v67;
              id v49 = v68;

              id v50 = v69;
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v45 + 12) = 2080;
              unint64_t v51 = v75;
              ((void (*)(char *, char *, uint64_t))v64[0])(v74, v75, v3);
              uint64_t v52 = String.init<A>(describing:)();
              *(void *)(v45 + 14) = sub_100075E68(v52, v53, &v82);
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v73 + 8))(v51, v3);
              *(_WORD *)(v45 + 22) = 2048;
              *(double *)(v45 + 24) = v29 - v31;
              _os_log_impl((void *)&_mh_execute_header, v43, v44, "Item with id: %s at index: %s loaded enough data to start playback in %f ms.", (uint8_t *)v45, 0x20u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              id v61 = v67;
              id v62 = v68;

              id v63 = v69;
              swift_bridgeObjectRelease_n();
              (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v3);
            }

            uint64_t v12 = v71;
            uint64_t v11 = v76;
            uint64_t v21 = v77;
            char v55 = v70;
          }
          else
          {
            id v56 = v78;
            id v57 = v13;
            id v58 = v15;
            id v59 = v12;
            id v60 = v11;
            char v55 = v13;
          }
          if (qword_1010BBCB8 != -1) {
            swift_once();
          }
          MetricsReportingController.recordComponentRenderEvent(_:)((uint64_t)&v83);

          swift_bridgeObjectRelease();
          id v54 = v78;
        }
        else
        {
          swift_bridgeObjectRelease();
          char v55 = 0;
          uint64_t v11 = v76;
          uint64_t v21 = v77;
          id v54 = v78;
          uint64_t v10 = v15;
        }
      }
      else
      {
        uint64_t v21 = v77;
        id v54 = v78;
        char v55 = v13;
      }
      sub_1008F3B88(v10, v12, v11, v55, v21, v54);
    }
  }
}

void _s9MusicCore31ArtworkVideoReportingControllerC05videoC15DidStopPlayback2atyx_tF_0(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v16 - v5;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  Dictionary.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = v19;
  if (v19 != (void *)1)
  {
    id v17 = v20;
    long long v18 = v22;
    uint64_t v9 = v23;
    uint64_t v8 = v24;
    char v10 = v25;

    if (v9)
    {

      char v10 = 3;
    }

    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    uint64_t v11 = v17;
    uint64_t v12 = v18;
    char v19 = v7;
    char v20 = v17;
    id v21 = 0;
    id v22 = v18;
    id v23 = 0;
    id v24 = 0;
    char v25 = v10;
    swift_beginAccess();
    type metadata accessor for Dictionary();
    id v13 = v7;
    id v14 = v11;
    id v15 = v12;
    Dictionary.subscript.setter();
    swift_endAccess();
  }
}

uint64_t ArtworkVideoReportingController.deinit()
{
  sub_10006ADFC(*(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ArtworkVideoReportingController.__deallocating_deinit()
{
  sub_10006ADFC(*(void *)(v0 + 24));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_1008F3B88(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  if (a1 != (void *)1)
  {
  }
}

uint64_t sub_1008F3BFC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ArtworkVideoReportingController()
{
  return sub_10004CF5C();
}

void destroy for ComponentRenderEventSignposts(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for ComponentRenderEventSignposts(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  id v9 = v3;
  id v10 = v4;
  id v11 = v5;
  id v12 = v6;
  id v13 = v7;
  id v14 = v8;
  return a1;
}

uint64_t assignWithCopy for ComponentRenderEventSignposts(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 16);
  id v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  id v13 = *(void **)(a1 + 24);
  id v14 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v14;
  id v15 = v14;

  uint64_t v16 = *(void **)(a1 + 32);
  id v17 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v17;
  id v18 = v17;

  char v19 = *(void **)(a1 + 40);
  char v20 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v20;
  id v21 = v20;

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for SharedListening.Event(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ComponentRenderEventSignposts(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  id v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ComponentRenderEventSignposts(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ComponentRenderEventSignposts(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentRenderEventSignposts()
{
  return &type metadata for ComponentRenderEventSignposts;
}

double CarNowPlayingMetrics.Data.timePlayed.getter()
{
  return *(double *)v0;
}

void CarNowPlayingMetrics.Data.timePlayed.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t ApplicationCapabilities.subscriptionCapabilities.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t CarNowPlayingMetrics.Data.tracksPlayed.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

double (*UIView.Shadow.opacity.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double UIView.Shadow.radius.getter()
{
  return *(double *)(v0 + 16);
}

void UIView.Shadow.radius.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t ApplicationCapabilities.allowedServices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Library.Menu.Revision.selected.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

double (*UIView.Shadow.offset.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t QRCode.errorCorrectionLevel.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t CarNowPlayingMetrics.Data.sharedSessionMaxParticipants.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

double (*Library.Menu.Request.excludedIdentifiers.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t CarNowPlayingMetrics.Data.init(timePlayed:tracksPlayed:rangeStartTime:sharedSessionIds:sharedSessionMaxParticipants:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  *(double *)a4 = a5;
  *(void *)(a4 + 8) = result;
  *(double *)(a4 + 16) = a6;
  *(void *)(a4 + 24) = a2;
  *(void *)(a4 + 32) = a3;
  return result;
}

unint64_t sub_1008F4034(char a1)
{
  unint64_t result = 0x79616C50656D6974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C50736B63617274;
      break;
    case 2:
      unint64_t result = 0x61745365676E6172;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1008F4108()
{
  return sub_1008F4034(*v0);
}

uint64_t sub_1008F4110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008F5994(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008F4138(uint64_t a1)
{
  unint64_t v2 = sub_1008F43D0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008F4174(uint64_t a1)
{
  unint64_t v2 = sub_1008F43D0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CarNowPlayingMetrics.Data.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100063814(&qword_1010BF930);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100068990(a1, a1[3]);
  sub_1008F43D0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v14 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    char v13 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v12 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v11 = *(void *)(v3 + 24);
    v10[15] = 3;
    sub_100063814(&qword_1010BF940);
    sub_1008F68E0(&qword_1010BF948);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10[14] = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1008F43D0()
{
  unint64_t result = qword_1010BF938;
  if (!qword_1010BF938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF938);
  }
  return result;
}

double CarNowPlayingMetrics.Data.init(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1008F5BF0(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1008F446C(void *a1)
{
  return CarNowPlayingMetrics.Data.encode(to:)(a1);
}

uint64_t static CarNowPlayingMetrics.persistedMetricsData(for:)@<X0>(uint64_t a1@<X8>)
{
  sub_1008F5E98((uint64_t)v3);
  return sub_10003CABC((uint64_t)v3, a1, &qword_1010BF950);
}

uint64_t Logger.carMetrics.unsafeMutableAddressor()
{
  if (qword_1010BBC10 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();

  return sub_100050A90(v0, (uint64_t)static Logger.carMetrics);
}

void static CarNowPlayingMetrics.storeMetricsData(_:for:)(uint64_t a1)
{
  sub_10003CABC(a1, (uint64_t)&v9, &qword_1010BF950);
  if (*((void *)&v10 + 1))
  {
    long long v12 = v9;
    long long v13 = v10;
    uint64_t v14 = v11;
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    JSONEncoder.init()();
    sub_1008F6248();
    uint64_t v3 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    unint64_t v5 = v4;
    swift_release();
    id v6 = [self standardUserDefaults];
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 setValue:isa forKey:v8];

    sub_10007A5C4(v3, v5);
  }
  else
  {
    id v1 = [self standardUserDefaults];
    NSString v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v1 setValue:0 forKey:v2];
  }
}

void sub_1008F48F8(char a1)
{
  uint64_t v55 = *v1;
  char v2 = a1 & 1;
  uint64_t v3 = sub_100063814(&qword_1010C0040);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Calendar();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v54 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v53 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v50 - v13;
  if (qword_1010BBC10 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = sub_100050A90(v15, (uint64_t)static Logger.carMetrics);
  id v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v52 = v6;
    uint64_t v50 = v16;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v51 = v10;
    *(void *)&long long v59 = v21;
    *(_DWORD *)uint64_t v20 = 136446210;
    v58[0] = v2;
    uint64_t v22 = String.init<A>(describing:)();
    *(void *)(v20 + 4) = sub_100075E68(v22, v23, (uint64_t *)&v59);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Reporting %{public}s playsSummary event if needed", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v10 = v51;
    swift_slowDealloc();
    uint64_t v6 = v52;
    swift_slowDealloc();
  }

  if (qword_1010BBCB8 != -1) {
    swift_once();
  }
  *(double *)&uint64_t v24 = COERCE_DOUBLE(sub_100902E2C());
  if (v25)
  {
    if (qword_1010BBC08 != -1) {
      swift_once();
    }
    double v26 = *(double *)&qword_1010BF928;
  }
  else
  {
    double v26 = *(double *)&v24;
  }
  sub_1008F5E98((uint64_t)v58);
  sub_10003CABC((uint64_t)v58, (uint64_t)&v59, &qword_1010BF950);
  if ((void)v61)
  {
    double v27 = v60;
    long long v62 = v61;
    long long v63 = v59;
    static Date.now.getter();
    Date.timeIntervalSince1970.getter();
    double v29 = v28;
    double v30 = *(void (**)(char *, uint64_t))(v10 + 8);
    v30(v14, v9);
    double v31 = (v29 - v27) * 1000.0;
    if (v26 < v31)
    {
      static Date.now.getter();
      Date.timeIntervalSince1970.getter();
      uint64_t v33 = v32;
      v30(v14, v9);
      id v34 = v54;
      static Calendar.current.getter();
      id v35 = v53;
      static Date.now.getter();
      Calendar.startOfDay(for:)();
      v30(v35, v9);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v34, v6);
      Date.timeIntervalSince1970.getter();
      uint64_t v37 = v36;
      v30(v14, v9);
      uint64_t v38 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v5, 1, 1, v38);
      type metadata accessor for MainActor();
      uint64_t v39 = static MainActor.shared.getter();
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v39;
      *(void *)(v40 + 24) = &protocol witness table for MainActor;
      *(_OWORD *)(v40 + 32) = v63;
      *(double *)(v40 + 48) = v27;
      *(_OWORD *)(v40 + 56) = v62;
      *(void *)(v40 + 72) = v37;
      *(unsigned char *)(v40 + 80) = v2;
      *(void *)(v40 + 88) = v33;
      *(void *)(v40 + 96) = v55;
      sub_100066A68((uint64_t)v5, (uint64_t)&unk_1010BFA28, v40);
      swift_release();
      return;
    }
    sub_10058C578((uint64_t)v58);
    id v41 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136446722;
      char v56 = v2;
      uint64_t v48 = String.init<A>(describing:)();
      *(void *)(v47 + 4) = sub_100075E68(v48, v49, &v57);
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2050;
      *(double *)(v47 + 14) = v31;
      *(_WORD *)(v47 + 22) = 2050;
      *(double *)(v47 + 24) = v26;
      _os_log_impl((void *)&_mh_execute_header, v41, v46, "❌ Failed to configure %{public}s playsSummary event: range=%{public}f ms isn't greater than post frequency=%{public}f ms", (uint8_t *)v47, 0x20u);
      swift_arrayDestroy();
      goto LABEL_19;
    }
  }
  else
  {
    id v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      *(void *)&long long v63 = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136446210;
      LOBYTE(v62) = v2;
      uint64_t v44 = String.init<A>(describing:)();
      *(void *)(v43 + 4) = sub_100075E68(v44, v45, (uint64_t *)&v63);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "❌ Failed to configure %{public}s playsSummary event: no persisted metrics data", (uint8_t *)v43, 0xCu);
      swift_arrayDestroy();
LABEL_19:
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1008F5090(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 512) = a7;
  *(double *)(v7 + 488) = a1;
  *(double *)(v7 + 496) = a2;
  *(void *)(v7 + 480) = a6;
  type metadata accessor for MainActor();
  *(void *)(v7 + 504) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1008F5130, v9, v8);
}

uint64_t sub_1008F5130()
{
  swift_release();
  if (qword_1010BBCB8 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 512);
  double v3 = *(double *)(v0 + 488);
  double v2 = *(double *)(v0 + 496);
  uint64_t v4 = *(void *)(v0 + 480);
  sub_100063814(&qword_1010C0300);
  uint64_t inited = swift_initStackObject();
  uint64_t v6 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100E338F0;
  strcpy((char *)(inited + 32), "totalDuration");
  *(_WORD *)(inited + 46) = -4864;
  *(double *)(inited + 48) = round(*(double *)v4 * 1000.0);
  *(void *)(inited + 72) = &type metadata for Double;
  *(void *)(inited + 80) = 0x6E756F4379616C70;
  *(void *)(inited + 88) = 0xE900000000000074;
  *(void *)(inited + 96) = *(void *)(v4 + 8);
  *(void *)(inited + 120) = &type metadata for Int;
  *(void *)(inited + 128) = 0x6D6954746E657665;
  *(void *)(inited + 136) = 0xE900000000000065;
  *(double *)(inited + 144) = round(v3 * 1000.0);
  *(void *)(inited + 168) = &type metadata for Double;
  *(void *)(inited + 176) = 0x707954746E657665;
  *(void *)(inited + 184) = 0xE900000000000065;
  strcpy((char *)(inited + 192), "playsSummary");
  *(unsigned char *)(inited + 205) = 0;
  *(_WORD *)(inited + 206) = -5120;
  *(void *)(inited + 216) = &type metadata for String;
  *(void *)(inited + 224) = 0x6F436E6F69746361;
  int v7 = v1 & 1;
  uint64_t v8 = 0x746F6F7465756C62;
  if (!v7) {
    uint64_t v8 = 0x79616C50726143;
  }
  unint64_t v9 = 0xE900000000000068;
  if (!v7) {
    unint64_t v9 = 0xE700000000000000;
  }
  *(void *)(inited + 232) = 0xED0000747865746ELL;
  *(void *)(inited + 240) = v8;
  *(void *)(inited + 248) = v9;
  *(void *)(inited + 264) = &type metadata for String;
  strcpy((char *)(inited + 272), "rangeStartTime");
  *(unsigned char *)(inited + 287) = -18;
  *(double *)(inited + 288) = round(*(double *)(v4 + 16) * 1000.0);
  *(void *)(inited + 312) = &type metadata for Double;
  strcpy((char *)(inited + 320), "rangeEndTime");
  *(unsigned char *)(inited + 333) = 0;
  *(_WORD *)(inited + 334) = -5120;
  *(double *)(inited + 336) = round(v2 * 1000.0);
  *(void *)(inited + 360) = &type metadata for Double;
  *(void *)(inited + 368) = 0xD000000000000013;
  *(void *)(inited + 376) = 0x8000000100DCA510;
  *(void *)(inited + 384) = *(void *)(*(void *)(v4 + 24) + 16);
  *(void *)(inited + 408) = &type metadata for Int;
  *(void *)(inited + 416) = 0xD000000000000018;
  *(void *)(inited + 424) = 0x8000000100DCA530;
  uint64_t v10 = sub_100904BE8(*(void *)(v4 + 32));
  v6[57] = &type metadata for String;
  v6[54] = v10;
  v6[55] = v11;
  unint64_t v12 = sub_1008F6944((uint64_t)v6);
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = v7;
  MetricsReportingController.recordCarPlayCustomEvent(with:properties:shouldSuppressUserInfo:completionHandler:)(0xD000000000000014, 0x8000000100DCA4F0, v12, 0, (uint64_t)sub_1008F6884, v13);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

void sub_1008F5488(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_1010BBC10 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100050A90(v1, (uint64_t)static Logger.carMetrics);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 136446466;
      uint64_t v4 = String.init<A>(describing:)();
      *(void *)(v3 + 4) = sub_100075E68(v4, v5, &v17);
      swift_bridgeObjectRelease();
      *(_WORD *)(v3 + 12) = 2082;
      swift_errorRetain();
      sub_100063814((uint64_t *)&unk_1010C0920);
      uint64_t v6 = String.init<A>(describing:)();
      *(void *)(v3 + 14) = sub_100075E68(v6, v7, &v17);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "❌ Failed to report %{public}s playsSummary event with error=%{public}s", (uint8_t *)v3, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (qword_1010BBC10 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100050A90(v8, (uint64_t)static Logger.carMetrics);
    unint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446210;
      uint64_t v12 = String.init<A>(describing:)();
      *(void *)(v11 + 4) = sub_100075E68(v12, v13, &v17);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "✅ Reported %{public}s playsSummary event", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    id v14 = [self standardUserDefaults];
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v14 setValue:0 forKey:v15];
  }
}

void sub_1008F585C()
{
  qword_1010BF928 = 0x4194997000000000;
}

uint64_t sub_1008F5870()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100014CA4(v0, static Logger.carMetrics);
  sub_100050A90(v0, (uint64_t)static Logger.carMetrics);
  return Logger.init(subsystem:category:)();
}

uint64_t static Logger.carMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1010BBC10 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = sub_100050A90(v2, (uint64_t)static Logger.carMetrics);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1008F5994(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79616C50656D6974 && a2 == 0xEA00000000006465;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C50736B63617274 && a2 == 0xEC00000064657961 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61745365676E6172 && a2 == 0xEE00656D69547472 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100DCA4B0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000100DCA4D0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1008F5BF0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_100063814(&qword_1010BFA38);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100068990(a1, a1[3]);
  sub_1008F43D0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_1000760E4((uint64_t)a1);
  }
  char v22 = 0;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v10 = v9;
  char v21 = 1;
  uint64_t v11 = KeyedDecodingContainer.decode(_:forKey:)();
  char v20 = 2;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v13 = v12;
  sub_100063814(&qword_1010BF940);
  char v19 = 3;
  sub_1008F68E0((unint64_t *)&unk_1010BFA40);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v14 = v17[1];
  char v18 = 4;
  swift_bridgeObjectRetain();
  uint64_t v15 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1000760E4((uint64_t)a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v10;
  a2[1] = v11;
  a2[2] = v13;
  a2[3] = v14;
  a2[4] = v15;
  return result;
}

uint64_t sub_1008F5E98@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self standardUserDefaults];
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v2 valueForKey:v3];

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_10003CABC((uint64_t)v18, (uint64_t)&v12, (uint64_t *)&unk_1010C0270);
  if (!v14)
  {
    uint64_t result = sub_10005DE58((uint64_t)&v12);
    goto LABEL_8;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_8:
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    long long v8 = 0uLL;
    goto LABEL_9;
  }
  uint64_t v7 = v16;
  unint64_t v6 = v17;
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_1008F688C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  sub_10007A5C4(v7, v6);
  uint64_t result = swift_release();
  long long v8 = v12;
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  uint64_t v11 = v15;
LABEL_9:
  *(_OWORD *)a1 = v8;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  return result;
}

unint64_t sub_1008F6248()
{
  unint64_t result = qword_1010BF958;
  if (!qword_1010BF958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF958);
  }
  return result;
}

unint64_t sub_1008F62A0()
{
  unint64_t result = qword_1010BF960;
  if (!qword_1010BF960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BF960);
  }
  return result;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics()
{
  return &type metadata for CarNowPlayingMetrics;
}

unsigned char *storeEnumTagSinglePayload for CarNowPlayingMetrics.EventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008F63D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics.EventType()
{
  return &type metadata for CarNowPlayingMetrics.EventType;
}

uint64_t destroy for Lyrics.Syllable()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CarNowPlayingMetrics.Data(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CarNowPlayingMetrics.Data(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

void *assignWithTake for CarNowPlayingMetrics.Data(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics.Data()
{
  return &type metadata for CarNowPlayingMetrics.Data;
}

uint64_t type metadata accessor for CarNowPlayingMetrics.Reporter()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CarNowPlayingMetrics.Data.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008F6610);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics.Data.CodingKeys()
{
  return &type metadata for CarNowPlayingMetrics.Data.CodingKeys;
}

unint64_t sub_1008F664C()
{
  unint64_t result = qword_1010BFA08;
  if (!qword_1010BFA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BFA08);
  }
  return result;
}

unint64_t sub_1008F66A4()
{
  unint64_t result = qword_1010BFA10;
  if (!qword_1010BFA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BFA10);
  }
  return result;
}

unint64_t sub_1008F66FC()
{
  unint64_t result = qword_1010BFA18;
  if (!qword_1010BFA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1010BFA18);
  }
  return result;
}

uint64_t sub_1008F6750()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1008F6790(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  double v6 = *(double *)(v1 + 72);
  char v7 = *(unsigned char *)(v1 + 80);
  double v8 = *(double *)(v1 + 88);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000154F4;
  return sub_1008F5090(v6, v8, a1, v4, v5, v1 + 32, v7);
}

uint64_t sub_1008F6874()
{
  return swift_deallocObject();
}

void sub_1008F6884(uint64_t a1)
{
}

unint64_t sub_1008F688C()
{
  unint64_t result = qword_1010BFA30;
  if (!qword_1010BFA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BFA30);
  }
  return result;
}

uint64_t sub_1008F68E0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(&qword_1010BF940);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1008F6944(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100063814(&qword_1010BFAF0);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10006CAB8(v6, (uint64_t)&v15, &qword_1010BFAF8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100071D70(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_10007664C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008F6A7C(uint64_t a1)
{
  return sub_1008F7288(a1, &qword_1010BFAB0, &qword_1010BFAB8, (uint64_t (*)(uint64_t))sub_100019FA8);
}

unint64_t sub_1008F6AA4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100063814(&qword_1010BFAD8);
  uint64_t v4 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain();
  uint64_t v6 = (unint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v7 = *(v6 - 3);
    uint64_t v8 = *(v6 - 2);
    uint64_t v9 = *(v6 - 1);
    unint64_t v10 = *v6;
    swift_bridgeObjectRetain();
    sub_10007AA40(v9, v10);
    unint64_t result = a2(v7, v8);
    if (v12) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v13 = (void *)(v4[6] + 16 * result);
    *BOOL v13 = v7;
    v13[1] = v8;
    uint64_t v14 = (uint64_t *)(v4[7] + 16 * result);
    uint64_t *v14 = v9;
    v14[1] = v10;
    uint64_t v15 = v4[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008F6BE4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100063814((uint64_t *)&unk_1010C1840);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10006CAB8(v6, (uint64_t)v15, &qword_1010BFB10);
    unint64_t result = sub_100076DAC((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_10007664C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008F6D28(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100063814(&qword_1010BFAE0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100071D70(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008F6E44(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010BFAC0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100063814(&qword_1010BFAC8);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10006CAB8(v12, (uint64_t)v5, &qword_1010BFAC0);
    unint64_t result = sub_100904828((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = type metadata accessor for PushNotificationObserver.RegisteredHandler();
    unint64_t result = sub_1008F8B1C(v9, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008F7060(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010BFA70);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100063814(&qword_1010BFA78);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10006CAB8(v12, (uint64_t)v5, &qword_1010BFA70);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_100071D70(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for SocialProfile();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1008F7260(uint64_t a1)
{
  return sub_1008F7288(a1, &qword_1010BFA90, &qword_1010BFA98, sub_100019FA8);
}

unint64_t sub_1008F7288(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100063814(a2);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10006CAB8(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_10007664C(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void *MPModelObject.metricsDictionary.getter()
{
  objc_allocWithZone((Class)type metadata accessor for ModelObjectBackedStoreItemMetadata());
  id v1 = v0;
  uint64_t v2 = ModelObjectBackedStoreItemMetadata.init(modelObject:)(v1);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [v2 effectiveStorePlatformDictionary];

    if (v4)
    {
      uint64_t v5 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
      swift_bridgeObjectRelease();

      return v5;
    }
  }
  self;
  uint64_t v6 = (void *)swift_dynamicCastObjCClass();
  if (v6)
  {
    id v7 = [v6 anyObject];
    goto LABEL_8;
  }
  self;
  uint64_t v8 = (void *)swift_dynamicCastObjCClass();
  if (v8)
  {
    id v7 = [v8 innerObject];
LABEL_8:
    id v9 = v7;
    if (v9) {
      goto LABEL_10;
    }
  }
  id v9 = v1;
LABEL_10:
  int ObjectType = swift_getObjectType();
  id v11 = [v9 identifiers];
  uint64_t v12 = sub_1008F84AC(ObjectType, 2, 0, v11);
  uint64_t v14 = v13;

  if (v14)
  {
    sub_100063814(&qword_1010BFA50);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v30 = v16;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 72) = v12;
    *(void *)(inited + 80) = v14;
    uint64_t v5 = (void *)sub_1008F6BE4(inited);
    swift_bridgeObjectRelease();
    self;
    if (swift_dynamicCastObjCClass() && v5)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      AnyHashable.init<A>(_:)();
      double v28 = &type metadata for String;
      *(void *)&long long v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *((void *)&v27 + 1) = v17;
      sub_10007664C(&v27, v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1008F7964(v26, (uint64_t)&v29, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_100076EB8((uint64_t)&v29);
    }
  }
  else
  {
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      uint64_t v19 = MPModelPropertyPlaylistType;
      id v20 = v1;
      if ([v5 hasLoadedValueForKey:v19] && objc_msgSend(v5, "type") == (id)9)
      {
        sub_100063814(&qword_1010BFA50);
        uint64_t v21 = swift_initStackObject();
        *(_OWORD *)(v21 + 16) = xmmword_100E251B0;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        AnyHashable.init<A>(_:)();
        *(void *)(v21 + 96) = &type metadata for String;
        strcpy((char *)(v21 + 72), "FavoriteSongs");
        *(_WORD *)(v21 + 86) = -4864;
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v30 = v22;
        AnyHashable.init<A>(_:)();
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *(void *)(v21 + 168) = &type metadata for String;
        *(void *)(v21 + 144) = v23;
        *(void *)(v21 + 152) = v24;
        uint64_t v5 = (void *)sub_1008F6BE4(v21);
        swift_bridgeObjectRelease();
      }
      else
      {

        return 0;
      }
    }
  }
  return v5;
}

void *sub_1008F77AC()
{
  return MPModelObject.metricsDictionary.getter();
}

uint64_t sub_1008F77D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_100071D70(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_100A31C88();
LABEL_7:
    id v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (void *)(v20[7] + 16 * v14);
      *uint64_t v21 = a1;
      v21[1] = a2;
      return swift_bridgeObjectRelease();
    }
    goto LABEL_13;
  }
  sub_100A2F954(v17, a5 & 1);
  unint64_t v23 = sub_100071D70(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_19:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  id v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_13:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  char v25 = (uint64_t *)(v20[6] + 16 * v14);
  *char v25 = a3;
  v25[1] = a4;
  double v26 = (void *)(v20[7] + 16 * v14);
  void *v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v20[2] = v29;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_1008F7964(_OWORD *a1, uint64_t a2, char a3)
{
  id v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_100076DAC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_100A31E2C();
      goto LABEL_7;
    }
    sub_100A2FC64(v13, a3 & 1);
    unint64_t v19 = sub_100076DAC(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_100076F0C(a2, (uint64_t)v21);
      return sub_100387660(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  sub_1000760E4((uint64_t)v17);

  return sub_10007664C(a1, v17);
}

uint64_t sub_1008F7AB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100071D70(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100A321A4();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100A30244(v15, a4 & 1);
  unint64_t v21 = sub_100071D70(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1008F7C20(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_100904828(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_100A3235C();
      goto LABEL_7;
    }
    sub_100A3055C(v17, a3 & 1);
    unint64_t v24 = sub_100904828(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      unint64_t v14 = v24;
      char v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1008F82D8(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  char v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7];
  uint64_t v22 = v21
      + *(void *)(*(void *)(type metadata accessor for PushNotificationObserver.RegisteredHandler() - 8) + 72)
      * v14;

  return sub_1008F8B80(a1, v22);
}

_OWORD *sub_1008F7E08(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100071D70(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_100A326D0();
      goto LABEL_7;
    }
    sub_100A30A74(v15, a4 & 1);
    unint64_t v21 = sub_100071D70(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_1000760E4((uint64_t)v19);
    return sub_10007664C(a1, v19);
  }
LABEL_13:
  sub_100387524(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

id sub_1008F7F5C(uint64_t a1, void *a2, char a3)
{
  id v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_10003DF38((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_100A32A4C();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_unknownObjectRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100A30D74(v12, a3 & 1);
  unint64_t v18 = sub_10003DF38((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    sub_100057778(0, &qword_1010BFA58);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v15[2] = v23;

  return a2;
}

uint64_t sub_1008F80D0(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  BOOL v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_100904828(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_100A32BF8();
      goto LABEL_7;
    }
    sub_100A3104C(v17, a3 & 1);
    unint64_t v28 = sub_100904828(a2);
    if ((v18 & 1) == (v29 & 1))
    {
      unint64_t v14 = v28;
      uint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1008F83B4(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7];
  uint64_t v22 = sub_100063814((uint64_t *)&unk_1010BFAA0);
  uint64_t v23 = *(void *)(v22 - 8);
  unint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 40);
  uint64_t v25 = v22;
  uint64_t v26 = v21 + *(void *)(v23 + 72) * v14;

  return v24(v26, a1, v25);
}

uint64_t sub_1008F82D8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for PushNotificationObserver.RegisteredHandler();
  uint64_t result = sub_1008F8B1C(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_1008F83B4(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = sub_100063814((uint64_t *)&unk_1010BFAA0);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3, v11);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_1008F84AC(int a1, uint64_t a2, unsigned __int8 a3, id a4)
{
  char v5 = a2;
  if (a3 > 1u)
  {
    switch(a2)
    {
      case 1:
        id v10 = [a4 personalizedStore];
        if (!v10) {
          return 0;
        }
        uint64_t v11 = v10;
        if (![v10 cloudID]) {
          goto LABEL_58;
        }
        [v11 cloudID];
        v12.super.super.Class isa = UInt64._bridgeToObjectiveC()().super.super.isa;
        uint64_t v13 = (void *)MPStoreItemMetadataStringNormalizeStoreIDValue();
        goto LABEL_55;
      case 2:
        id v14 = [a4 library];
        if (!v14) {
          return 0;
        }
        uint64_t v15 = v14;
        if (![v14 persistentID]) {
          goto LABEL_58;
        }
        [v15 persistentID];
        v12.super.super.Class isa = Int64._bridgeToObjectiveC()().super.super.isa;
        uint64_t v13 = (void *)MPStoreItemMetadataStringNormalizeStoreIDValue();
        goto LABEL_55;
      case 3:
        sub_100057778(0, &qword_1010BFB18);
        if (swift_dynamicCastMetatype()) {
          goto LABEL_25;
        }
        sub_100057778(0, &qword_1010BFB20);
        uint64_t v8 = swift_dynamicCastMetatype();
        if (v8) {
          goto LABEL_32;
        }
        break;
      default:
        sub_100057778(0, &qword_1010BFB18);
        uint64_t v8 = swift_dynamicCastMetatype();
        if (v8) {
          goto LABEL_25;
        }
        break;
    }
    sub_100057778(v8, qword_1010BFB28);
    if (!swift_dynamicCastMetatype())
    {
      id v32 = [a4 universalStore];
      if (v32)
      {
        uint64_t v33 = v32;
        id v34 = [v32 subscriptionAdamID];
        id v35 = [v33 purchasedAdamID];
        id v36 = [v33 adamID];
        if (!v34 && !v35)
        {
          uint64_t v21 = (uint64_t)v36;
          if (!v36) {
            goto LABEL_57;
          }
        }
        v12.super.super.Class isa = Int64._bridgeToObjectiveC()().super.super.isa;
        uint64_t v13 = (void *)MPStoreItemMetadataStringNormalizeStoreIDValue();
        goto LABEL_55;
      }
      return 0;
    }
LABEL_42:
    id v25 = [a4 radio];
    if (v25)
    {
      uint64_t v26 = v25;
      id v27 = [v25 stationStringID];
      if (v27)
      {
        unint64_t v28 = v27;
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v30 = v29;

        uint64_t v31 = HIBYTE(v30) & 0xF;
        if ((v30 & 0x2000000000000000) == 0) {
          uint64_t v31 = v21 & 0xFFFFFFFFFFFFLL;
        }
        if (v31) {
          goto LABEL_57;
        }
        swift_bridgeObjectRelease();
      }
      if (![v26 stationID])
      {
LABEL_58:
        swift_unknownObjectRelease();
        return 0;
      }
      [v26 stationID];
      v12.super.super.Class isa = Int64._bridgeToObjectiveC()().super.super.isa;
      uint64_t v13 = (void *)MPStoreItemMetadataStringNormalizeStoreIDValue();
LABEL_55:
      id v37 = v13;

      if (v37)
      {
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();

LABEL_57:
        swift_unknownObjectRelease();
        return v21;
      }
      goto LABEL_58;
    }
    return 0;
  }
  sub_100057778(0, &qword_1010BFB18);
  if (!swift_dynamicCastMetatype())
  {
    sub_100057778(0, &qword_1010BFB20);
    if (swift_dynamicCastMetatype())
    {
      if (v5)
      {
        uint64_t v6 = MPIdentifierSet.bestLibraryIdentifier.getter();
        if (v9) {
          return v6;
        }
      }
      if ((v5 & 2) == 0) {
        return 0;
      }
LABEL_32:
      id v19 = [a4 universalStore];
      if (!v19) {
        return MPIdentifierSet.bestStoreIdentifier.getter();
      }
      id v17 = [v19 socialProfileID];
      goto LABEL_34;
    }
    sub_100057778(0, qword_1010BFB28);
    if (!swift_dynamicCastMetatype())
    {
      if (v5)
      {
        uint64_t v6 = MPIdentifierSet.bestLibraryIdentifier.getter();
        if (v18) {
          return v6;
        }
      }
      if ((v5 & 2) == 0) {
        return 0;
      }
      return MPIdentifierSet.bestStoreIdentifier.getter();
    }
    if ((v5 & 2) == 0) {
      return 0;
    }
    goto LABEL_42;
  }
  if (v5)
  {
    uint64_t v6 = MPIdentifierSet.bestLibraryIdentifier.getter();
    if (v7) {
      return v6;
    }
  }
  if ((v5 & 2) == 0) {
    return 0;
  }
LABEL_25:
  id v16 = [a4 universalStore];
  if (!v16) {
    return MPIdentifierSet.bestStoreIdentifier.getter();
  }
  id v17 = [v16 globalPlaylistID];
LABEL_34:
  id v20 = v17;
  swift_unknownObjectRelease();
  if (!v20) {
    return MPIdentifierSet.bestStoreIdentifier.getter();
  }
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v23 = v22;

  uint64_t v24 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0) {
    uint64_t v24 = v21 & 0xFFFFFFFFFFFFLL;
  }
  if (!v24)
  {
    swift_bridgeObjectRelease();
    return MPIdentifierSet.bestStoreIdentifier.getter();
  }
  return v21;
}

unint64_t sub_1008F8934(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100063814(&qword_1010BFAE8);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (i = (void *)(a1 + 40); ; i += 2)
    {
      unsigned __int8 v5 = *((unsigned char *)i - 8);
      uint64_t v6 = *i;
      unint64_t result = sub_1000E728C(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_1008F8A0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_100063814(&qword_1010BFA60);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  unint64_t result = sub_1000E728C(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = (void *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    BOOL v10 = (void *)(v3[7] + 16 * result);
    *BOOL v10 = v6;
    v10[1] = v5;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    id v14 = v9 + 3;
    unsigned __int8 v4 = *((unsigned char *)v9 - 16);
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000E728C(v4);
    uint64_t v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1008F8B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PushNotificationObserver.RegisteredHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008F8B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PushNotificationObserver.RegisteredHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008F8BE4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1008F8C2C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetricsEventSampler()
{
  return sub_10004CF5C();
}

uint64_t MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:page:snapshotImpressions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, unsigned __int16 a12, uint64_t a13, uint64_t a14)
{
  uint64_t v76 = a8;
  uint64_t v71 = a6;
  uint64_t v72 = a7;
  uint64_t v68 = a5;
  int v67 = a4;
  int v70 = a12;
  long long v69 = a10;
  uint64_t v18 = sub_100063814(&qword_1010BCBE0);
  __chkstk_darwin(v18 - 8);
  long long v74 = &v66[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = sub_100063814(&qword_1010BD988);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  id v78 = (uint64_t *)&v66[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = __chkstk_darwin(v21);
  Swift::String v77 = &v66[-v24];
  uint64_t v25 = __chkstk_darwin(v23);
  long long v75 = &v66[-v26];
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v73 = (uint64_t *)&v66[-v28];
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (uint64_t *)&v66[-v30];
  uint64_t v32 = __chkstk_darwin(v29);
  id v34 = &v66[-v33];
  __chkstk_darwin(v32);
  id v36 = (uint64_t *)&v66[-v35];
  id v37 = (int *)type metadata accessor for MetricsEvent.Click(0);
  *(unsigned char *)(a9 + v37[19]) = 0;
  uint64_t v38 = (void *)(a9 + v37[20]);
  *uint64_t v38 = 0;
  v38[1] = 0;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 17) = v67;
  sub_10003CABC(v68, a9 + v37[7], &qword_1010BCBE0);
  *(void *)(a9 + v37[8]) = v71;
  uint64_t v39 = (void *)(a9 + v37[9]);
  uint64_t v40 = v76;
  *uint64_t v39 = v72;
  v39[1] = v40;
  uint64_t v41 = a9 + v37[10];
  *(_OWORD *)uint64_t v41 = v69;
  *(void *)(v41 + 16) = a11;
  *(_WORD *)(v41 + 24) = v70;
  uint64_t v76 = a13;
  sub_10006CAB8(a13, (uint64_t)v36, &qword_1010BD988);
  os_log_type_t v42 = (int *)type metadata accessor for MetricsEvent.Page(0);
  uint64_t v43 = *(unsigned int (**)(uint64_t *, uint64_t, int *))(*((void *)v42 - 1) + 48);
  if (v43(v36, 1, v42) == 1)
  {
    sub_1000637B8((uint64_t)v36, &qword_1010BD988);
    uint64_t v44 = 0;
    uint64_t v45 = 0;
  }
  else
  {
    uint64_t v44 = *v36;
    uint64_t v45 = v36[1];
    swift_bridgeObjectRetain();
    sub_100904E7C((uint64_t)v36, type metadata accessor for MetricsEvent.Page);
  }
  os_log_type_t v46 = (void *)(a9 + v37[12]);
  *os_log_type_t v46 = v44;
  v46[1] = v45;
  uint64_t v47 = v76;
  sub_10006CAB8(v76, (uint64_t)v34, &qword_1010BD988);
  if (v43((uint64_t *)v34, 1, v42) == 1)
  {
    sub_1000637B8((uint64_t)v34, &qword_1010BD988);
    uint64_t v48 = 0;
    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v48 = *((void *)v34 + 2);
    uint64_t v49 = *((void *)v34 + 3);
    swift_bridgeObjectRetain();
    sub_100904E7C((uint64_t)v34, type metadata accessor for MetricsEvent.Page);
  }
  uint64_t v50 = (void *)(a9 + v37[13]);
  *uint64_t v50 = v48;
  v50[1] = v49;
  sub_10006CAB8(v47, (uint64_t)v31, &qword_1010BD988);
  unsigned int v51 = v43(v31, 1, v42);
  uint64_t v52 = v74;
  if (v51 == 1)
  {
    sub_1000637B8((uint64_t)v31, &qword_1010BD988);
    uint64_t v53 = type metadata accessor for URL();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 1, 1, v53);
  }
  else
  {
    sub_10006CAB8((uint64_t)v31 + v42[6], (uint64_t)v74, &qword_1010BCBE0);
    sub_100904E7C((uint64_t)v31, type metadata accessor for MetricsEvent.Page);
  }
  uint64_t v54 = (uint64_t)v77;
  uint64_t v55 = (uint64_t)v75;
  sub_10003CABC((uint64_t)v52, a9 + v37[14], &qword_1010BCBE0);
  char v56 = v73;
  sub_10006CAB8(v47, (uint64_t)v73, &qword_1010BD988);
  if (v43(v56, 1, v42) == 1)
  {
    sub_1000637B8((uint64_t)v56, &qword_1010BD988);
    uint64_t v57 = 0;
  }
  else
  {
    uint64_t v57 = *(uint64_t *)((char *)v56 + v42[7]);
    swift_bridgeObjectRetain();
    sub_100904E7C((uint64_t)v56, type metadata accessor for MetricsEvent.Page);
  }
  *(void *)(a9 + v37[15]) = v57;
  sub_10006CAB8(v47, v55, &qword_1010BD988);
  if (v43((uint64_t *)v55, 1, v42) == 1)
  {
    sub_1000637B8(v55, &qword_1010BD988);
    char v58 = 1;
  }
  else
  {
    char v58 = *(unsigned char *)(v55 + v42[9]);
    sub_100904E7C(v55, type metadata accessor for MetricsEvent.Page);
  }
  *(unsigned char *)(a9 + v37[16]) = v58;
  sub_10006CAB8(v47, v54, &qword_1010BD988);
  if (v43((uint64_t *)v54, 1, v42) == 1)
  {
    sub_1000637B8(v54, &qword_1010BD988);
    uint64_t v59 = 0;
    uint64_t v60 = 0;
  }
  else
  {
    long long v61 = (uint64_t *)(v54 + v42[8]);
    uint64_t v59 = *v61;
    uint64_t v60 = v61[1];
    swift_bridgeObjectRetain();
    sub_100904E7C(v54, type metadata accessor for MetricsEvent.Page);
  }
  long long v62 = (void *)(a9 + v37[18]);
  *long long v62 = v59;
  v62[1] = v60;
  long long v63 = v78;
  sub_10003CABC(v47, (uint64_t)v78, &qword_1010BD988);
  if (v43(v63, 1, v42) == 1)
  {
    uint64_t result = sub_1000637B8((uint64_t)v63, &qword_1010BD988);
    char v65 = 2;
  }
  else
  {
    char v65 = *((unsigned char *)v63 + v42[11]);
    uint64_t result = sub_100904E7C((uint64_t)v63, type metadata accessor for MetricsEvent.Page);
  }
  *(unsigned char *)(a9 + v37[17]) = v65;
  *(void *)(a9 + v37[11]) = a14;
  return result;
}

uint64_t type metadata accessor for MetricsEvent.Click(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010BFD50);
}

uint64_t *MetricsReportingController.shared.unsafeMutableAddressor()
{
  if (qword_1010BBCB8 != -1) {
    swift_once();
  }
  return &static MetricsReportingController.shared;
}

uint64_t MetricsEvent.ComponentRender.init(componentIdentifier:componentType:componentAppearTime:componentPlaceholderAppearTime:componentMotionActivationTime:componentRequestTime:componentEndTime:componentInterruptTime:preloadStatus:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 72) = a11;
  return result;
}

uint64_t sub_1008F93A0(uint64_t a1)
{
  uint64_t v61 = a1;
  uint64_t v2 = sub_100063814(&qword_1010BFE40);
  __chkstk_darwin(v2 - 8);
  uint64_t v59 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v52 - v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v52 - v8;
  __chkstk_darwin(v10);
  BOOL v12 = (char *)&v52 - v11;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v60 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v52 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v52 - v20;
  uint64_t v22 = (id *)(v1 + 16);
  swift_beginAccess();
  id v23 = *(id *)(v1 + 16);
  char v24 = sub_10090BF68();

  if (v24) {
    return 1;
  }
  uint64_t v53 = v18;
  uint64_t v54 = v15;
  char v56 = v12;
  uint64_t v57 = v9;
  char v58 = v21;
  uint64_t v55 = v6;
  uint64_t v26 = sub_10090C044();
  uint64_t v25 = 1;
  if (v26)
  {
    uint64_t v27 = (void *)v26;
    double v62 = 0.0;
    char v63 = 1;
    static Double._conditionallyBridgeFromObjectiveC(_:result:)();

    if (v63 != 1)
    {
      double v28 = v62;
      uint64_t v29 = sub_10090BEA0();
      if (v29)
      {
        uint64_t v30 = (void *)v29;
        double v62 = 0.0;
        char v63 = 1;
        static Double._conditionallyBridgeFromObjectiveC(_:result:)();

        if ((v63 & 1) == 0)
        {
          uint64_t v31 = v58;
          Date.init()();
          id v32 = *v22;
          uint64_t v33 = (uint64_t)v57;
          sub_10090C00C((uint64_t)v57);

          uint64_t v34 = v60;
          uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
          uint64_t v36 = v13;
          if (v35(v33, 1, v13))
          {
            sub_1000637B8(v33, &qword_1010BFE40);
            id v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
            uint64_t v38 = (uint64_t)v56;
            v37(v56, 1, 1, v13);
          }
          else
          {
            uint64_t v39 = v54;
            (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v54, v33, v13);
            sub_1000637B8(v33, &qword_1010BFE40);
            uint64_t v38 = (uint64_t)v56;
            Date.addingTimeInterval(_:)();
            uint64_t v40 = *(void (**)(char *, uint64_t))(v34 + 8);
            v40(v39, v13);
            id v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
            v37((char *)v38, 0, 1, v13);
            if (v35(v38, 1, v13) != 1)
            {
              uint64_t v48 = v53;
              (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v53, v38, v13);
              char v49 = static Date.< infix(_:_:)();
              uint64_t v50 = v48;
              unsigned int v51 = v40;
              v40(v50, v13);
              uint64_t v41 = (uint64_t)v55;
              uint64_t v42 = (uint64_t)v59;
              if (v49)
              {
                v51(v31, v13);
                return 1;
              }
LABEL_11:
              unint64_t v43 = sub_1002C7F14(0x20000000000001uLL);
              if (v43 == 0x20000000000000)
              {
                if (v28 >= 1.0)
                {
LABEL_13:
                  uint64_t v44 = v60;
                  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 16))(v41, v31, v36);
                  uint64_t v25 = 1;
                  v37((char *)v41, 0, 1, v36);
                  swift_beginAccess();
                  sub_10006CAB8(v41, v42, &qword_1010BFE40);
                  sub_10090C028(v42);
                  swift_endAccess();
                  sub_1000637B8(v41, &qword_1010BFE40);
                  (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v36);
                  return v25;
                }
              }
              else
              {
                double v45 = (double)v43 * 1.11022302e-16 + 0.0;
                if (v45 > 0.0 && v45 <= v28) {
                  goto LABEL_13;
                }
              }
              (*(void (**)(char *, uint64_t))(v60 + 8))(v31, v13);
              return 0;
            }
          }
          uint64_t v41 = (uint64_t)v55;
          uint64_t v42 = (uint64_t)v59;
          sub_1000637B8(v38, &qword_1010BFE40);
          goto LABEL_11;
        }
      }
    }
  }
  return v25;
}

uint64_t sub_1008F98F4(uint64_t a1)
{
  uint64_t v60 = a1;
  uint64_t v2 = sub_100063814(&qword_1010BFE40);
  __chkstk_darwin(v2 - 8);
  char v58 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v51 - v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v51 - v8;
  __chkstk_darwin(v10);
  BOOL v12 = (char *)&v51 - v11;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v59 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v51 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v51 - v20;
  uint64_t v22 = (id *)(v1 + 16);
  swift_beginAccess();
  id v23 = *(id *)(v1 + 16);
  char v24 = sub_10090C470();

  if (v24) {
    return 1;
  }
  uint64_t v52 = v18;
  uint64_t v53 = v15;
  uint64_t v55 = v12;
  char v56 = v9;
  uint64_t v57 = v21;
  uint64_t v54 = v6;
  uint64_t v26 = sub_100904754();
  uint64_t v25 = 1;
  if (v26)
  {
    uint64_t v27 = (void *)v26;
    double v61 = 0.0;
    char v62 = 1;
    static Double._conditionallyBridgeFromObjectiveC(_:result:)();

    if (v62 != 1)
    {
      double v28 = v61;
      uint64_t v29 = sub_100904754();
      if (v29)
      {
        uint64_t v30 = (void *)v29;
        double v61 = 0.0;
        char v62 = 1;
        static Double._conditionallyBridgeFromObjectiveC(_:result:)();

        if ((v62 & 1) == 0)
        {
          uint64_t v31 = v57;
          Date.init()();
          id v32 = *v22;
          uint64_t v33 = (uint64_t)v56;
          sub_10090C48C((uint64_t)v56);

          uint64_t v34 = v59;
          uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
          uint64_t v36 = v13;
          if (v35(v33, 1, v13))
          {
            sub_1000637B8(v33, &qword_1010BFE40);
            id v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
            uint64_t v38 = (uint64_t)v55;
            v37(v55, 1, 1, v13);
          }
          else
          {
            uint64_t v39 = v53;
            (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v53, v33, v13);
            sub_1000637B8(v33, &qword_1010BFE40);
            uint64_t v38 = (uint64_t)v55;
            Date.addingTimeInterval(_:)();
            uint64_t v40 = *(void (**)(char *, uint64_t))(v34 + 8);
            v40(v39, v13);
            id v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
            v37((char *)v38, 0, 1, v13);
            if (v35(v38, 1, v13) != 1)
            {
              uint64_t v47 = v52;
              (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v52, v38, v13);
              char v48 = static Date.< infix(_:_:)();
              char v49 = v47;
              uint64_t v50 = v40;
              v40(v49, v13);
              uint64_t v41 = (uint64_t)v54;
              uint64_t v42 = (uint64_t)v58;
              if (v48)
              {
                v50(v31, v13);
                return 1;
              }
LABEL_11:
              unint64_t v43 = sub_1002C7F14(0x20000000000001uLL);
              if (v43 == 0x20000000000000)
              {
                if (v28 < 1.0)
                {
LABEL_17:
                  (*(void (**)(char *, uint64_t))(v59 + 8))(v31, v13);
                  return 0;
                }
              }
              else
              {
                double v44 = (double)v43 * 1.11022302e-16 + 0.0;
                if (v44 <= 0.0 || v44 > v28) {
                  goto LABEL_17;
                }
              }
              uint64_t v45 = v59;
              (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v41, v31, v36);
              uint64_t v25 = 1;
              v37((char *)v41, 0, 1, v36);
              swift_beginAccess();
              sub_10006CAB8(v41, v42, &qword_1010BFE40);
              sub_10090C5A4(v42);
              swift_endAccess();
              sub_1000637B8(v41, &qword_1010BFE40);
              (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v36);
              return v25;
            }
          }
          uint64_t v41 = (uint64_t)v54;
          uint64_t v42 = (uint64_t)v58;
          sub_1000637B8(v38, &qword_1010BFE40);
          goto LABEL_11;
        }
      }
    }
  }
  return v25;
}

uint64_t MetricsEvent.TargetType.init(contentItem:)(void *a1)
{
  switch((unint64_t)[a1 itemType])
  {
    case 1uLL:

      uint64_t result = 0;
      break;
    case 2uLL:

      uint64_t result = 3;
      break;
    case 4uLL:

      uint64_t result = 16;
      break;
    case 7uLL:

      uint64_t result = 20;
      break;
    default:
      static os_log_type_t.error.getter();
      sub_100063814(&qword_1010BFBB0);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_100E251D0;
      [a1 itemType];
      type metadata accessor for MPModelStoreBrowseContentItemType(0);
      uint64_t v4 = String.init<A>(describing:)();
      uint64_t v6 = v5;
      *(void *)(v3 + 56) = &type metadata for String;
      *(void *)(v3 + 64) = sub_10001EC88();
      *(void *)(v3 + 32) = v4;
      *(void *)(v3 + 40) = v6;
      sub_100057778(0, (unint64_t *)&qword_1010BFBC0);
      uint64_t v7 = (void *)static OS_os_log.default.getter();
      os_log(_:dso:log:_:_:)();

      swift_bridgeObjectRelease();
      uint64_t result = 24;
      break;
  }
  return result;
}

unint64_t MetricsEvent.TargetType.rawValue.getter(char a1)
{
  unint64_t result = 0x6D75626C41;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7465446D75626C41;
      break;
    case 2:
      unint64_t result = 7368801;
      break;
    case 3:
      unint64_t result = 0x747369747241;
      break;
    case 4:
      unint64_t result = 0x72656E6E6162;
      break;
    case 5:
      unint64_t result = 0x6E6F74747562;
      break;
    case 6:
      unint64_t result = 0x6954656C62627562;
      break;
    case 7:
      unint64_t result = 1685217603;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0x7265746C6966;
      break;
    case 10:
      unint64_t result = 0x7449726564616548;
      break;
    case 11:
      unint64_t result = 0x7473694C746E6948;
      break;
    case 12:
      unint64_t result = 7955819;
      break;
    case 13:
      unint64_t result = 1802398060;
      break;
    case 14:
      unint64_t result = 0x6E694C636972796CLL;
      break;
    case 15:
      unint64_t result = 0x6D6574497473694CLL;
      break;
    case 16:
    case 17:
      unint64_t result = 0x7473696C79616C50;
      break;
    case 18:
      unint64_t result = 0x4C746E65746E6F43;
      break;
    case 19:
      unint64_t result = 0x726564696C73;
      break;
    case 20:
      unint64_t result = 1735290707;
      break;
    case 21:
      unint64_t result = 0x6C6C65737055;
      break;
    case 22:
      unint64_t result = 0x657449666C656853;
      break;
    case 23:
      unint64_t result = 0x6D65744964697247;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1008FA2CC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1008FCAC4(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MetricsEvent.TargetType.rawValue.getter);
}

Swift::Int sub_1008FA2E4(uint64_t a1, uint64_t a2)
{
  return sub_1008FCB74(a1, a2, (void (*)(uint64_t))MetricsEvent.TargetType.rawValue.getter);
}

uint64_t sub_1008FA2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FCBF8(a1, a2, a3, (void (*)(void))MetricsEvent.TargetType.rawValue.getter);
}

Swift::Int sub_1008FA314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FCC68(a1, a2, a3, (void (*)(uint64_t))MetricsEvent.TargetType.rawValue.getter);
}

uint64_t sub_1008FA32C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s9MusicCore12MetricsEventV10TargetTypeO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_1008FA35C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = MetricsEvent.TargetType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t MetricsEvent.Page.init(pageIdentifier:pageType:pageURL:pageDetails:searchTerm:pageDisplayType:extRefUrl:attenuationAvailable:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, char a10, uint64_t a11, uint64_t a12, char a13)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  uint64_t v18 = (int *)type metadata accessor for MetricsEvent.Page(0);
  uint64_t result = sub_10003CABC(a5, (uint64_t)a9 + v18[6], &qword_1010BCBE0);
  *(void *)((char *)a9 + v18[7]) = a6;
  uint64_t v20 = (void *)((char *)a9 + v18[8]);
  *uint64_t v20 = a7;
  v20[1] = a8;
  *((unsigned char *)a9 + v18[9]) = a10 & 1;
  uint64_t v21 = (void *)((char *)a9 + v18[10]);
  *uint64_t v21 = a11;
  v21[1] = a12;
  *((unsigned char *)a9 + v18[11]) = a13;
  return result;
}

uint64_t static MetricsEvent.Page.contextualActionMenu(storeID:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  if (a2) {
    unint64_t v4 = a1;
  }
  else {
    unint64_t v4 = 0xD000000000000014;
  }
  if (a2) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = 0x8000000100DCA5D0;
  }
  uint64_t v6 = (int *)type metadata accessor for MetricsEvent.Page(0);
  uint64_t v7 = (char *)a3 + v6[6];
  uint64_t v8 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *a3 = v4;
  a3[1] = v5;
  a3[2] = 0xD000000000000014;
  a3[3] = 0x8000000100DCA5D0;
  *(unint64_t *)((char *)a3 + v6[7]) = 0;
  uint64_t v9 = (unint64_t *)((char *)a3 + v6[8]);
  *uint64_t v9 = 0;
  v9[1] = 0;
  *((unsigned char *)a3 + v6[9]) = 1;
  uint64_t v10 = (unint64_t *)((char *)a3 + v6[10]);
  *uint64_t v10 = 0;
  v10[1] = 0;
  *((unsigned char *)a3 + v6[11]) = 2;

  return swift_bridgeObjectRetain();
}

uint64_t static MetricsEvent.Page.libraryMenuSelection.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC18, (uint64_t)static MetricsEvent.Page.libraryMenuSelection, a1);
}

uint64_t sub_1008FA578()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryMenuEdit);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryMenuEdit);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0x4D7972617262694CLL;
  v1[1] = 0xEF74696445756E65;
  v1[2] = 0x72656B636950;
  v1[3] = 0xE600000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  unint64_t v5 = (void *)((char *)v1 + v0[8]);
  *unint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryMenuEdit.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC20, (uint64_t)static MetricsEvent.Page.libraryMenuEdit);
}

uint64_t static MetricsEvent.Page.libraryMenuEdit.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC20, (uint64_t)static MetricsEvent.Page.libraryMenuEdit, a1);
}

uint64_t sub_1008FA6C8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for MetricsEvent.Page(0);
  uint64_t v6 = sub_100050A90(v5, a2);

  return sub_100193D1C(v6, a3);
}

uint64_t sub_1008FA728()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryMadeForYou);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryMadeForYou);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0x59726F466564614DLL;
  v1[1] = 0xEA0000000000756FLL;
  v1[2] = 0x7972617262694CLL;
  v1[3] = 0xE700000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryMadeForYou.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC28, (uint64_t)static MetricsEvent.Page.libraryMadeForYou);
}

uint64_t static MetricsEvent.Page.libraryMadeForYou.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC28, (uint64_t)static MetricsEvent.Page.libraryMadeForYou, a1);
}

uint64_t sub_1008FA874()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryAlbumsList);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryAlbumsList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000011;
  v1[1] = 0x8000000100DCAB50;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryAlbumsList.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC30, (uint64_t)static MetricsEvent.Page.libraryAlbumsList);
}

uint64_t static MetricsEvent.Page.libraryAlbumsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC30, (uint64_t)static MetricsEvent.Page.libraryAlbumsList, a1);
}

uint64_t sub_1008FA9B8()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryArtistsList);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryArtistsList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000012;
  v1[1] = 0x8000000100DCAB30;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryArtistsList.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC38, (uint64_t)static MetricsEvent.Page.libraryArtistsList);
}

uint64_t static MetricsEvent.Page.libraryArtistsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC38, (uint64_t)static MetricsEvent.Page.libraryArtistsList, a1);
}

uint64_t sub_1008FAAFC()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryCompilationsList);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryCompilationsList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000017;
  v1[1] = 0x8000000100DCAB10;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryCompilationsList.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC40, (uint64_t)static MetricsEvent.Page.libraryCompilationsList);
}

uint64_t static MetricsEvent.Page.libraryCompilationsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC40, (uint64_t)static MetricsEvent.Page.libraryCompilationsList, a1);
}

uint64_t sub_1008FAC40()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryComposersList);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryComposersList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000014;
  v1[1] = 0x8000000100DCAAF0;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryComposersList.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC48, (uint64_t)static MetricsEvent.Page.libraryComposersList);
}

uint64_t static MetricsEvent.Page.libraryComposersList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC48, (uint64_t)static MetricsEvent.Page.libraryComposersList, a1);
}

uint64_t sub_1008FAD84()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryGenresList);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryGenresList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000011;
  v1[1] = 0x8000000100DCAAD0;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryGenresList.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC50, (uint64_t)static MetricsEvent.Page.libraryGenresList);
}

uint64_t static MetricsEvent.Page.libraryGenresList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC50, (uint64_t)static MetricsEvent.Page.libraryGenresList, a1);
}

uint64_t sub_1008FAEC8()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryMusicVideosList);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryMusicVideosList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000016;
  v1[1] = 0x8000000100DCAAB0;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryMusicVideosList.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC58, (uint64_t)static MetricsEvent.Page.libraryMusicVideosList);
}

uint64_t static MetricsEvent.Page.libraryMusicVideosList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC58, (uint64_t)static MetricsEvent.Page.libraryMusicVideosList, a1);
}

uint64_t sub_1008FB00C()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryPlaylistsList);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryPlaylistsList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000014;
  v1[1] = 0x8000000100DCAA90;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryPlaylistsList.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC60, (uint64_t)static MetricsEvent.Page.libraryPlaylistsList);
}

uint64_t static MetricsEvent.Page.libraryPlaylistsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC60, (uint64_t)static MetricsEvent.Page.libraryPlaylistsList, a1);
}

uint64_t sub_1008FB150()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.librarySongsList);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.librarySongsList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000010;
  v1[1] = 0x8000000100DCAA70;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.librarySongsList.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC68, (uint64_t)static MetricsEvent.Page.librarySongsList);
}

uint64_t static MetricsEvent.Page.librarySongsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC68, (uint64_t)static MetricsEvent.Page.librarySongsList, a1);
}

uint64_t sub_1008FB294()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryRecentlyAdded);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryRecentlyAdded);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000018;
  v1[1] = 0x8000000100DCAA50;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryRecentlyAdded.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC70, (uint64_t)static MetricsEvent.Page.libraryRecentlyAdded);
}

uint64_t static MetricsEvent.Page.libraryRecentlyAdded.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC70, (uint64_t)static MetricsEvent.Page.libraryRecentlyAdded, a1);
}

uint64_t sub_1008FB3D8()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryRecentlyDownloaded);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryRecentlyDownloaded);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD00000000000001DLL;
  v1[1] = 0x8000000100DCAA30;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryRecentlyDownloaded.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC78, (uint64_t)static MetricsEvent.Page.libraryRecentlyDownloaded);
}

uint64_t static MetricsEvent.Page.libraryRecentlyDownloaded.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC78, (uint64_t)static MetricsEvent.Page.libraryRecentlyDownloaded, a1);
}

uint64_t sub_1008FB51C()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryAlbumDetail);
  uint64_t v1 = sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryAlbumDetail);
  uint64_t v2 = v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  strcpy((char *)v1, "LibraryAlbum");
  *(unsigned char *)(v1 + 13) = 0;
  *(_WORD *)(v1 + 14) = -5120;
  *(void *)(v1 + 16) = 0x6D75626C41;
  *(void *)(v1 + 24) = 0xE500000000000000;
  *(void *)(v1 + v0[7]) = 0;
  uint64_t v5 = (void *)(v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(unsigned char *)(v1 + v0[9]) = 1;
  uint64_t v6 = (void *)(v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *(unsigned char *)(v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryAlbumDetail.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC80, (uint64_t)static MetricsEvent.Page.libraryAlbumDetail);
}

uint64_t static MetricsEvent.Page.libraryAlbumDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC80, (uint64_t)static MetricsEvent.Page.libraryAlbumDetail, a1);
}

uint64_t sub_1008FB668()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryArtistDetail);
  uint64_t v1 = sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryArtistDetail);
  uint64_t v2 = v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  strcpy((char *)v1, "LibraryArtist");
  *(_WORD *)(v1 + 14) = -4864;
  *(void *)(v1 + 16) = 0x747369747241;
  *(void *)(v1 + 24) = 0xE600000000000000;
  *(void *)(v1 + v0[7]) = 0;
  uint64_t v5 = (void *)(v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(unsigned char *)(v1 + v0[9]) = 1;
  uint64_t v6 = (void *)(v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *(unsigned char *)(v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryArtistDetail.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC88, (uint64_t)static MetricsEvent.Page.libraryArtistDetail);
}

uint64_t static MetricsEvent.Page.libraryArtistDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC88, (uint64_t)static MetricsEvent.Page.libraryArtistDetail, a1);
}

uint64_t sub_1008FB7B8()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryPlaylistDetail);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryPlaylistDetail);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0x507972617262694CLL;
  v1[1] = 0xEF7473696C79616CLL;
  v1[2] = 0x7473696C79616C50;
  v1[3] = 0xE800000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryPlaylistDetail.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC90, (uint64_t)static MetricsEvent.Page.libraryPlaylistDetail);
}

uint64_t static MetricsEvent.Page.libraryPlaylistDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC90, (uint64_t)static MetricsEvent.Page.libraryPlaylistDetail, a1);
}

uint64_t sub_1008FB90C()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryComposerDetail);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryComposerDetail);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0x437972617262694CLL;
  v1[1] = 0xEF7265736F706D6FLL;
  v1[2] = 0x747369747241;
  v1[3] = 0xE600000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryComposerDetail.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBC98, (uint64_t)static MetricsEvent.Page.libraryComposerDetail);
}

uint64_t static MetricsEvent.Page.libraryComposerDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBC98, (uint64_t)static MetricsEvent.Page.libraryComposerDetail, a1);
}

uint64_t sub_1008FBA5C()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.libraryGenreDetail);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryGenreDetail);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000012;
  v1[1] = 0x8000000100DCAA10;
  v1[2] = 0x65726E6547;
  v1[3] = 0xE500000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryGenreDetail.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBCA0, (uint64_t)static MetricsEvent.Page.libraryGenreDetail);
}

uint64_t static MetricsEvent.Page.libraryGenreDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBCA0, (uint64_t)static MetricsEvent.Page.libraryGenreDetail, a1);
}

uint64_t sub_1008FBBA4()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.playlistCreation);
  uint64_t v1 = (void *)sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.playlistCreation);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0x6C79616C5077654ELL;
  v1[1] = 0xEB00000000747369;
  v1[2] = 0x7473696C79616C50;
  v1[3] = 0xE800000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 0;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.playlistCreation.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBCA8, (uint64_t)static MetricsEvent.Page.playlistCreation);
}

uint64_t static MetricsEvent.Page.playlistCreation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBCA8, (uint64_t)static MetricsEvent.Page.playlistCreation, a1);
}

uint64_t sub_1008FBCF0()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100014CA4((uint64_t)v0, static MetricsEvent.Page.playlistPicker);
  uint64_t v1 = sub_100050A90((uint64_t)v0, (uint64_t)static MetricsEvent.Page.playlistPicker);
  uint64_t v2 = v1 + v0[6];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  strcpy((char *)v1, "PlaylistPicker");
  *(unsigned char *)(v1 + 15) = -18;
  *(void *)(v1 + 16) = 0x72656B636950;
  *(void *)(v1 + 24) = 0xE600000000000000;
  *(void *)(v1 + v0[7]) = 0;
  uint64_t v5 = (void *)(v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(unsigned char *)(v1 + v0[9]) = 0;
  uint64_t v6 = (void *)(v1 + v0[10]);
  void *v6 = 0;
  v6[1] = 0;
  *(unsigned char *)(v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.playlistPicker.unsafeMutableAddressor()
{
  return sub_100035630(&qword_1010BBCB0, (uint64_t)static MetricsEvent.Page.playlistPicker);
}

uint64_t static MetricsEvent.Page.playlistPicker.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1008FA6C8(&qword_1010BBCB0, (uint64_t)static MetricsEvent.Page.playlistPicker, a1);
}

BOOL MetricsEvent.Page.DisplayType.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100FECFA8, v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

uint64_t MetricsEvent.Page.DisplayType.rawValue.getter()
{
  return 0x7765695664726163;
}

Swift::Int sub_1008FBE9C()
{
  return Hasher._finalize()();
}

uint64_t sub_1008FBEF0()
{
  return String.hash(into:)();
}

Swift::Int sub_1008FBF08()
{
  return Hasher._finalize()();
}

uint64_t sub_1008FBF58@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100FECFE0, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void sub_1008FBFAC(void *a1@<X8>)
{
  *a1 = 0x7765695664726163;
  a1[1] = 0xE800000000000000;
}

uint64_t MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:pageIdentifier:pageType:pageURL:pageDetails:pageDisplayType:attenuationAvailable:snapshotImpressions:searchTerm:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, __int16 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v29 = (int *)type metadata accessor for MetricsEvent.Click(0);
  *(unsigned char *)(a9 + v29[19]) = 0;
  uint64_t v30 = (void *)(a9 + v29[20]);
  *uint64_t v30 = 0;
  v30[1] = 0;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 17) = a4;
  sub_10003CABC(a5, a9 + v29[7], &qword_1010BCBE0);
  *(void *)(a9 + v29[8]) = a6;
  uint64_t v31 = (void *)(a9 + v29[9]);
  *uint64_t v31 = a7;
  v31[1] = a8;
  uint64_t v32 = a9 + v29[10];
  *(_OWORD *)uint64_t v32 = a10;
  *(void *)(v32 + 16) = a11;
  *(_WORD *)(v32 + 24) = a12;
  uint64_t v33 = (void *)(a9 + v29[12]);
  *uint64_t v33 = a13;
  v33[1] = a14;
  uint64_t v34 = (void *)(a9 + v29[13]);
  *uint64_t v34 = a15;
  v34[1] = a16;
  uint64_t result = sub_10003CABC(a17, a9 + v29[14], &qword_1010BCBE0);
  *(void *)(a9 + v29[15]) = a18;
  *(unsigned char *)(a9 + v29[16]) = a19 & 1;
  *(unsigned char *)(a9 + v29[17]) = a20;
  *(void *)(a9 + v29[11]) = a21;
  uint64_t v36 = (void *)(a9 + v29[18]);
  void *v36 = a22;
  v36[1] = a23;
  return result;
}

uint64_t MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, unsigned __int16 a12, uint64_t *a13, uint64_t a14)
{
  uint64_t v43 = a7;
  uint64_t v44 = a8;
  uint64_t v38 = a5;
  int v36 = a3;
  int v37 = a4;
  int v42 = a12;
  uint64_t v40 = a11;
  uint64_t v41 = a6;
  long long v39 = a10;
  uint64_t v45 = a14;
  uint64_t v17 = sub_100063814(&qword_1010BCBE0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a13;
  uint64_t v20 = a13[1];
  uint64_t v22 = a13[3];
  uint64_t v35 = a13[2];
  uint64_t v23 = type metadata accessor for MetricsPageProperties();
  sub_10006CAB8((uint64_t)a13 + *(int *)(v23 + 24), (uint64_t)v19, &qword_1010BCBE0);
  uint64_t v24 = *(uint64_t *)((char *)a13 + *(int *)(v23 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100904E7C((uint64_t)a13, (uint64_t (*)(void))type metadata accessor for MetricsPageProperties);
  uint64_t v25 = (int *)type metadata accessor for MetricsEvent.Click(0);
  *(unsigned char *)(a9 + v25[19]) = 0;
  uint64_t v26 = (void *)(a9 + v25[20]);
  void *v26 = 0;
  v26[1] = 0;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = v36;
  *(unsigned char *)(a9 + 17) = v37;
  sub_10003CABC(v38, a9 + v25[7], &qword_1010BCBE0);
  *(void *)(a9 + v25[8]) = v41;
  uint64_t v27 = (void *)(a9 + v25[9]);
  uint64_t v28 = v44;
  *uint64_t v27 = v43;
  v27[1] = v28;
  uint64_t v29 = a9 + v25[10];
  *(_OWORD *)uint64_t v29 = v39;
  *(void *)(v29 + 16) = v40;
  *(_WORD *)(v29 + 24) = v42;
  uint64_t v30 = (void *)(a9 + v25[12]);
  *uint64_t v30 = v21;
  v30[1] = v20;
  uint64_t v31 = (void *)(a9 + v25[13]);
  *uint64_t v31 = v35;
  v31[1] = v22;
  uint64_t result = sub_10003CABC((uint64_t)v19, a9 + v25[14], &qword_1010BCBE0);
  *(void *)(a9 + v25[15]) = v24;
  *(unsigned char *)(a9 + v25[16]) = 1;
  *(unsigned char *)(a9 + v25[17]) = 2;
  *(void *)(a9 + v25[11]) = v45;
  uint64_t v33 = (void *)(a9 + v25[18]);
  *uint64_t v33 = 0;
  v33[1] = 0;
  return result;
}

uint64_t MetricsEvent.Click.isSharedContent.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MetricsEvent.Click(0) + 76));
}

uint64_t MetricsEvent.Click.isSharedContent.setter(char a1)
{
  uint64_t result = type metadata accessor for MetricsEvent.Click(0);
  *(unsigned char *)(v1 + *(int *)(result + 76)) = a1;
  return result;
}

double (*MetricsEvent.Click.isSharedContent.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t MetricsEvent.Click.dataRecoDataSetId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MetricsEvent.Click(0) + 80));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsEvent.Click.dataRecoDataSetId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for MetricsEvent.Click(0) + 80));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

double (*MetricsEvent.Click.dataRecoDataSetId.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t MetricsEvent.Click.ActionType.rawValue.getter(char a1)
{
  uint64_t result = 0x6E6F69746361;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6574617669746361;
      break;
    case 2:
      uint64_t result = 6579297;
      break;
    case 3:
      uint64_t result = 0x62694C6F54646461;
      break;
    case 4:
      uint64_t result = 0x6575516F54646461;
      break;
    case 5:
      uint64_t result = 0x7473756A6461;
      break;
    case 6:
      uint64_t result = 0x616C506E69676562;
      break;
    case 7:
      uint64_t result = 0x6C65636E6163;
      break;
    case 8:
      uint64_t result = 0x726F62616C6C6F63;
      break;
    case 9:
      uint64_t result = 0x657461657263;
      break;
    case 10:
      uint64_t result = 0x7453657461657263;
      break;
    case 11:
      uint64_t result = 0xD000000000000015;
      break;
    case 12:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    case 13:
      uint64_t result = 0x6176697463616564;
      break;
    case 14:
      uint64_t result = 0x6574656C6564;
      break;
    case 15:
      uint64_t result = 0x7463656C65736564;
      break;
    case 16:
      uint64_t result = 0x7373696D736964;
      break;
    case 17:
      uint64_t result = 0x657469726F766166;
      break;
    case 18:
      uint64_t result = 0x69726F7661666E75;
      break;
    case 19:
      uint64_t result = 1702125928;
      break;
    case 20:
      uint64_t result = 0x657461686E75;
      break;
    case 21:
      uint64_t result = 1953393000;
      break;
    case 22:
      uint64_t result = 0x7475706E69;
      break;
    case 23:
      uint64_t result = 0x657461676976616ELL;
      break;
    case 24:
      uint64_t result = 2036427888;
      break;
    case 25:
      uint64_t v3 = 0x664179616C70;
      goto LABEL_29;
    case 26:
      uint64_t v3 = 0x614C79616C70;
LABEL_29:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6574000000000000;
      break;
    case 27:
      uint64_t result = 0x7478654E79616C70;
      break;
    case 28:
      uint64_t result = 0x7463616572;
      break;
    case 29:
      uint64_t result = 0x6F4465766F6D6572;
      break;
    case 30:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 31:
      uint64_t result = 0xD000000000000012;
      break;
    case 32:
      uint64_t result = 0x6F4374726F706572;
      break;
    case 33:
      uint64_t result = 0x686372616573;
      break;
    case 34:
      uint64_t result = 1801807219;
      break;
    case 35:
      uint64_t result = 0x7463656C6573;
      break;
    case 36:
      uint64_t result = 0x6572616873;
      break;
    case 37:
      uint64_t result = 0x694C646572616873;
      break;
    case 38:
      uint64_t result = 0x72794C6572616873;
      break;
    case 39:
      uint64_t result = 0x6972794C776F6873;
      break;
    case 40:
      uint64_t result = 0x74696D627573;
      break;
    case 41:
      uint64_t result = 0x656C67676F74;
      break;
    case 42:
      uint64_t result = 0x75626C4177656976;
      break;
    case 43:
      uint64_t result = 0x6974724177656976;
      break;
    case 44:
      uint64_t result = 0x6465724377656976;
      break;
    case 45:
      uint64_t result = 0x79616C5077656976;
      break;
    case 46:
      uint64_t result = 0x77656976657270;
      break;
    case 47:
      uint64_t result = 0x6573756170;
      break;
    case 48:
      uint64_t result = 0x68736572666572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1008FCAAC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1008FCAC4(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MetricsEvent.Click.ActionType.rawValue.getter);
}

uint64_t sub_1008FCAC4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

Swift::Int sub_1008FCB5C(uint64_t a1, uint64_t a2)
{
  return sub_1008FCB74(a1, a2, (void (*)(uint64_t))MetricsEvent.Click.ActionType.rawValue.getter);
}

Swift::Int sub_1008FCB74(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  Hasher.init(_seed:)();
  a3(v5);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1008FCBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FCBF8(a1, a2, a3, (void (*)(void))MetricsEvent.Click.ActionType.rawValue.getter);
}

uint64_t sub_1008FCBF8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1008FCC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1008FCC68(a1, a2, a3, (void (*)(uint64_t))MetricsEvent.Click.ActionType.rawValue.getter);
}

Swift::Int sub_1008FCC68(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  Hasher.init(_seed:)();
  a4(v6);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1008FCCD0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s9MusicCore12MetricsEventV5ClickV10ActionTypeO8rawValueAGSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1008FCD00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MetricsEvent.Click.ActionType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t MetricsEvent.Click.ActionContext.rawValue.getter(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = 0x6E6F74747562;
  switch(a2)
  {
    case 0uLL:
      break;
    case 1uLL:
      unint64_t v2 = 0x6472616F6279656BLL;
      break;
    case 2uLL:
      unint64_t v2 = 0x79726F7473;
      break;
    case 3uLL:
      unint64_t v2 = 1701998445;
      break;
    case 4uLL:
      unint64_t v2 = 0x636972796CLL;
      break;
    case 5uLL:
      unint64_t v2 = 0x6B63617274;
      break;
    case 6uLL:
    case 9uLL:
      unint64_t v2 = 0xD000000000000010;
      break;
    case 7uLL:
      unint64_t v2 = 0xD000000000000015;
      break;
    case 8uLL:
      unint64_t v2 = 0x6E654D6570697773;
      break;
    default:
      unint64_t v2 = a1;
      break;
  }
  sub_1005A47F8(a1, a2);
  return v2;
}

void MetricsEvent.Click.ActionContext.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(a3)
  {
    case 0:
      Swift::UInt v3 = 0;
      goto LABEL_15;
    case 1:
      Swift::UInt v3 = 1;
      goto LABEL_15;
    case 2:
      Swift::UInt v3 = 2;
      goto LABEL_15;
    case 3:
      Swift::UInt v3 = 3;
      goto LABEL_15;
    case 4:
      Swift::UInt v3 = 4;
      goto LABEL_15;
    case 5:
      Swift::UInt v3 = 5;
      goto LABEL_15;
    case 6:
      Swift::UInt v3 = 6;
      goto LABEL_15;
    case 7:
      Swift::UInt v3 = 7;
      goto LABEL_15;
    case 8:
      Swift::UInt v3 = 8;
      goto LABEL_15;
    case 9:
      Swift::UInt v3 = 10;
LABEL_15:
      Hasher._combine(_:)(v3);
      break;
    default:
      Hasher._combine(_:)(9uLL);
      String.hash(into:)();
      break;
  }
}

Swift::Int MetricsEvent.Click.ActionContext.hashValue.getter(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  MetricsEvent.Click.ActionContext.hash(into:)((uint64_t)v5, a1, a2);
  return Hasher._finalize()();
}

Swift::Int sub_1008FCFE8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  Hasher.init(_seed:)();
  MetricsEvent.Click.ActionContext.hash(into:)((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

void sub_1008FD034(uint64_t a1)
{
  MetricsEvent.Click.ActionContext.hash(into:)(a1, *v1, v1[1]);
}

Swift::Int sub_1008FD03C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  Hasher.init(_seed:)();
  MetricsEvent.Click.ActionContext.hash(into:)((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_1008FD084(uint64_t *a1, uint64_t a2)
{
  return _s9MusicCore12MetricsEventV5ClickV13ActionContextO21__derived_enum_equalsySbAG_AGtFZ_0(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

unint64_t MetricsEvent.Click.ActionDetails.dictionary.getter(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1;
  switch(BYTE1(a4))
  {
    case 1:
      if (!a1)
      {
        unint64_t v19 = sub_10003481C((uint64_t)&off_100FEBE68);
        goto LABEL_37;
      }
      self;
      uint64_t v10 = swift_dynamicCastObjCClass();
      if (v10)
      {
        uint64_t v11 = (void *)v10;
        id v12 = v5;
        sub_1004CF5D0(v5, a2, a3, a4, 1);
        swift_bridgeObjectRetain();
        id v13 = [v11 name];
        if (v13)
        {
          uint64_t v14 = v13;
          uint64_t v15 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v17 = v16;

          goto LABEL_27;
        }
        uint64_t v15 = 0;
        goto LABEL_26;
      }
      self;
      uint64_t v20 = swift_dynamicCastObjCClass();
      if (v20)
      {
        uint64_t v21 = (void *)v20;
        id v22 = v5;
        sub_1004CF5D0(v5, a2, a3, a4, 1);
        swift_bridgeObjectRetain();
        id v23 = [v21 artist];
        uint64_t v15 = v23;
        if (v23) {
          goto LABEL_21;
        }
LABEL_23:

        goto LABEL_26;
      }
      self;
      uint64_t v15 = (void *)swift_dynamicCastObjCClass();
      id v24 = v5;
      if (!v15)
      {
        sub_1004CF5D0(v5, a2, a3, a4, 1);
        swift_bridgeObjectRetain();
        goto LABEL_26;
      }
      id v22 = v24;
      sub_1004CF5D0(v5, a2, a3, a4, 1);
      swift_bridgeObjectRetain();
      id v23 = [v15 artist];
      uint64_t v15 = v23;
      if (!v23) {
        goto LABEL_23;
      }
LABEL_21:
      id v25 = [v23 name];

      if (v25)
      {
        uint64_t v15 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v17 = v26;

        goto LABEL_27;
      }

      uint64_t v15 = 0;
LABEL_26:
      unint64_t v17 = 0;
LABEL_27:
      sub_100063814(&qword_1010BFBC8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100E251F0;
      *(void *)(inited + 32) = 1684957547;
      *(void *)(inited + 40) = 0xE400000000000000;
      id v28 = v5;
      char v29 = sub_100909860(v28);
      *(void *)(inited + 48) = MetricsContentType.rawValue.getter(v29);
      *(void *)(inited + 56) = v30;
      *(void *)(inited + 64) = 0x614E747369747261;
      *(void *)(inited + 72) = 0xEA0000000000656DLL;
      uint64_t v31 = 16718;
      if (v17) {
        uint64_t v31 = (uint64_t)v15;
      }
      unint64_t v32 = 0xE200000000000000;
      if (v17) {
        unint64_t v32 = v17;
      }
      *(void *)(inited + 80) = v31;
      *(void *)(inited + 88) = v32;
      strcpy((char *)(inited + 96), "lyricSnippet");
      *(unsigned char *)(inited + 109) = 0;
      *(_WORD *)(inited + 110) = -5120;
      if (a3) {
        uint64_t v33 = a2;
      }
      else {
        uint64_t v33 = 0;
      }
      unint64_t v34 = 0xE000000000000000;
      if (a3) {
        unint64_t v34 = a3;
      }
      *(void *)(inited + 112) = v33;
      *(void *)(inited + 120) = v34;
      unint64_t v19 = sub_10003481C(inited);

LABEL_37:
      if (a4 != 49)
      {
        uint64_t v40 = MetricsEvent.Click.ActionType.rawValue.getter(a4);
        uint64_t v41 = v39;
        if (v40 == 0xD000000000000015 && v39 == 0x8000000100DC88D0)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v42 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v42 & 1) == 0)
          {
LABEL_44:
            uint64_t v35 = v5;
            uint64_t v36 = a2;
            uint64_t v37 = a3;
            uint64_t v38 = a4;
            goto LABEL_45;
          }
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1008F77D0(v40, v41, 0x6E6F69746361, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
      uint64_t v35 = v5;
      uint64_t v36 = a2;
      uint64_t v37 = a3;
      uint64_t v38 = 49;
LABEL_45:
      sub_1004CF644(v35, v36, v37, v38, 1);
      return v19;
    case 2:
      if (a2)
      {
        sub_100063814(&qword_1010BFBC8);
        uint64_t v6 = swift_initStackObject();
        *(_OWORD *)(v6 + 16) = xmmword_100E251D0;
        strcpy((char *)(v6 + 32), "searchPrefix");
        *(unsigned char *)(v6 + 45) = 0;
        *(_WORD *)(v6 + 46) = -5120;
        *(void *)(v6 + 48) = v5;
        *(void *)(v6 + 56) = a2;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      }
      return 0;
    case 3:
      swift_bridgeObjectRetain();
      return (unint64_t)v5;
    case 4:
      uint64_t v18 = &off_100FEBEC8;
      return sub_10003481C((uint64_t)v18);
    default:
      sub_100063814(&qword_1010BFBC8);
      uint64_t v6 = swift_initStackObject();
      *(_OWORD *)(v6 + 16) = xmmword_100E251D0;
      strcpy((char *)(v6 + 32), "actionSubType");
      *(_WORD *)(v6 + 46) = -4864;
      *(void *)(v6 + 48) = MetricsEvent.Click.ActionType.rawValue.getter((char)v5);
      *(void *)(v6 + 56) = v7;
LABEL_9:
      uint64_t v18 = (_UNKNOWN **)v6;
      return sub_10003481C((uint64_t)v18);
  }
}

uint64_t MetricsEvent.ComponentRender.PreloadStatus.rawValue.getter(char a1)
{
  uint64_t result = 1819047270;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C616974726170;
      break;
    case 2:
      uint64_t result = 0x6C6F686563616C70;
      break;
    case 3:
      uint64_t result = 0x73756F6976657270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1008FD650(unsigned __int8 *a1, char *a2)
{
  return sub_100864F2C(*a1, *a2);
}

Swift::Int sub_1008FD65C()
{
  return Hasher._finalize()();
}

uint64_t sub_1008FD744()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1008FD814()
{
  return Hasher._finalize()();
}

unint64_t sub_1008FD8F8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s9MusicCore12MetricsEventV15ComponentRenderV13PreloadStatusO8rawValueAGSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1008FD928(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1819047270;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6C616974726170;
      goto LABEL_3;
    case 2:
      *a1 = 0x6C6F686563616C70;
      a1[1] = 0xEB00000000726564;
      break;
    case 3:
      *a1 = 0x73756F6976657270;
      a1[1] = 0xEF6E776F6853796CLL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t SharePlayTogetherSession.Participant.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t MetricsEvent.ComponentRender.componentType.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

void *Library.Menu.Request.mediaPickerConfiguration.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

void MPCPlaybackEngine.Configuration.fallbackPlaybackIntent.setter(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
}

void GroupActivitiesManager.Activity.Metadata.previewImage.setter(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
}

void *MetricsEvent.ComponentRender.componentMotionActivationTime.getter()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

void MetricsEvent.ComponentRender.componentMotionActivationTime.setter(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
}

double (*Library.Menu.Request.filtersToSelectedIdentifiers.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id PlaylistCovers.Cover.Representation.textColor.getter()
{
  return *(id *)(v0 + 48);
}

void MetricsEvent.ComponentRender.componentRequestTime.setter(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
}

void *MetricsEvent.ComponentRender.componentEndTime.getter()
{
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

void MetricsEvent.ComponentRender.componentEndTime.setter(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
}

double (*PresentationSource.configurationHandler.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

void *MetricsEvent.ComponentRender.componentInterruptTime.getter()
{
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = v1;
  return v1;
}

void MetricsEvent.ComponentRender.componentInterruptTime.setter(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
}

double (*MetricsEvent.ComponentRender.componentInterruptTime.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t MetricsEvent.ComponentRender.preloadStatus.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t MetricsEvent.ComponentRender.preloadStatus.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 72) = result;
  return result;
}

double (*LibraryModelRequest.scopedContainers.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id sub_1008FDC50()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for MetricsReportingController()) init];
  static MetricsReportingController.shared = (uint64_t)result;
  return result;
}

id static MetricsReportingController.shared.getter()
{
  if (qword_1010BBCB8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static MetricsReportingController.shared;

  return v0;
}

void MetricsReportingController.recordPerformanceMetrics(for:)(void *a1)
{
  if (a1)
  {
    id v1 = [a1 performanceMetrics];
    if (v1)
    {
      id v2 = v1;
      sub_100904F30(v2, (uint64_t)&v3);
      MetricsReportingController.recordLoadUrlEvent(_:)(&v3);
      sub_100905384((uint64_t)&v3);
    }
  }
}

void MetricsReportingController.recordPageEvent(_:pageContext:sharedListeningContext:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6)
{
  unint64_t v81 = a5;
  uint64_t v84 = a4;
  uint64_t v9 = sub_100063814(&qword_1010BCBE0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  *uint64_t v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    id v17 = [objc_allocWithZone((Class)SSMetricsPageEvent) init];
    unint64_t v80 = a6;
    uint64_t v82 = v11;
    id v18 = v17;
    if (a3) {
      NSString v19 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v19 = 0;
    }
    [v17 setPageContext:v19, v80];

    uint64_t v21 = *a1;
    uint64_t v20 = a1[1];
    id v22 = v17;
    swift_bridgeObjectRetain();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v24 = String._bridgeToObjectiveC()();
    [v22 setProperty:v23 forBodyKey:v24];

    uint64_t v26 = a1[2];
    uint64_t v25 = a1[3];
    Swift::String v85 = a1;
    id v27 = v22;
    NSString v28 = String._bridgeToObjectiveC()();
    [v27 setPageType:v28];

    uint64_t v83 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration;
    char v29 = *(void **)&v86[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    if (v29)
    {
      sub_100063814(&qword_1010BFBD8);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_100E251B0;
      *(void *)(v30 + 32) = v26;
      *(void *)(v30 + 40) = v25;
      *(void *)(v30 + 88) = &type metadata for String;
      *(void *)(v30 + 56) = &type metadata for String;
      *(void *)(v30 + 64) = v21;
      *(void *)(v30 + 72) = v20;
      id v31 = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v32 = v29;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      NSString v34 = [v32 compoundStringWithElements:isa];

      if (v34)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v34 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      id v35 = v27;
      NSString v34 = 0;
    }
    uint64_t v36 = v85;
    uint64_t v37 = (uint64_t)v82;
    [v27 setPageDescription:v34];

    uint64_t v38 = (int *)type metadata accessor for MetricsEvent.Page(0);
    sub_10006CAB8((uint64_t)v36 + v38[6], v37, &qword_1010BCBE0);
    uint64_t v39 = type metadata accessor for URL();
    uint64_t v40 = *(void *)(v39 - 8);
    int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v37, 1, v39);
    id v42 = v27;
    if (v41 == 1)
    {
      sub_1000637B8(v37, &qword_1010BCBE0);
      NSString v43 = 0;
    }
    else
    {
      URL.absoluteString.getter();
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v37, v39);
      NSString v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v42 setPageURL:v43];

    uint64_t v44 = *(void *)((char *)v36 + v38[7]);
    id v45 = v42;
    if (v44)
    {
      swift_bridgeObjectRetain();
      v46.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v46.super.Class isa = 0;
    }
    NSString v47 = String._bridgeToObjectiveC()();
    [v42 setProperty:v46.super.isa forBodyKey:v47];

    swift_unknownObjectRelease();
    char v48 = (void *)((char *)v36 + v38[8]);
    uint64_t v49 = v48[1];
    uint64_t v50 = &selRef_setAccessibilityTraits_;
    if (v49)
    {
      uint64_t v51 = *v48;
      sub_100063814(&qword_1010C0300);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100E251D0;
      *(void *)(inited + 32) = 0x6554686372616573;
      *(void *)(inited + 40) = 0xEA00000000006D72;
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 48) = v51;
      *(void *)(inited + 56) = v49;
      uint64_t v50 = &selRef_setAccessibilityTraits_;
      swift_bridgeObjectRetain();
      sub_1008F6944(inited);
      Class v53 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v42 addPropertiesWithDictionary:v53];
    }
    if ((*((unsigned char *)v36 + v38[9]) & 1) == 0)
    {
      sub_100063814(&qword_1010C0300);
      uint64_t v54 = swift_initStackObject();
      *(_OWORD *)(v54 + 16) = xmmword_100E251D0;
      *(void *)(v54 + 32) = 0x7073694465676170;
      *(void *)(v54 + 40) = 0xEF6570795479616CLL;
      *(void *)(v54 + 72) = &type metadata for String;
      *(void *)(v54 + 48) = 0x7765695664726163;
      *(void *)(v54 + 56) = 0xE800000000000000;
      sub_1008F6944(v54);
      Class v55 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v42 v50[38] v55];
    }
    int v56 = *((unsigned __int8 *)v36 + v38[11]);
    if (v56 != 2)
    {
      char v57 = v56 & 1;
      sub_100063814(&qword_1010C0300);
      uint64_t v58 = swift_initStackObject();
      *(_OWORD *)(v58 + 16) = xmmword_100E251D0;
      *(void *)(v58 + 32) = 0xD000000000000014;
      *(void *)(v58 + 40) = 0x8000000100DCA650;
      *(void *)(v58 + 72) = &type metadata for Bool;
      *(unsigned char *)(v58 + 48) = v57;
      sub_1008F6944(v58);
      Class v59 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v42 addPropertiesWithDictionary:v59];
    }
    if (v44)
    {
      if (*(void *)(v44 + 16))
      {
        unint64_t v60 = sub_100071D70(0x4974655361746164, 0xE900000000000064);
        if (v61)
        {
          char v62 = (uint64_t *)(*(void *)(v44 + 56) + 16 * v60);
          uint64_t v64 = *v62;
          uint64_t v63 = v62[1];
          sub_100063814(&qword_1010C0300);
          uint64_t v65 = swift_initStackObject();
          *(_OWORD *)(v65 + 16) = xmmword_100E251D0;
          *(void *)(v65 + 32) = 0x4974655361746164;
          *(void *)(v65 + 40) = 0xE900000000000064;
          *(void *)(v65 + 72) = &type metadata for String;
          *(void *)(v65 + 48) = v64;
          *(void *)(v65 + 56) = v63;
          uint64_t v36 = v85;
          swift_bridgeObjectRetain();
          sub_1008F6944(v65);
          Class v66 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v42 addPropertiesWithDictionary:v66];
        }
      }
    }
    if (v84 != 2 && sub_100904CF4(v84 & 1, v81, v80))
    {
      Class v67 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v42 addPropertiesWithDictionary:v67];
    }
    uint64_t v68 = (void *)((char *)v36 + v38[10]);
    uint64_t v69 = v68[1];
    if (v69)
    {
      uint64_t v70 = *v68;
      sub_100063814(&qword_1010C0300);
      uint64_t v71 = swift_initStackObject();
      *(_OWORD *)(v71 + 16) = xmmword_100E251D0;
      *(void *)(v71 + 32) = 0x7255666552747865;
      *(void *)(v71 + 40) = 0xE90000000000006CLL;
      *(void *)(v71 + 72) = &type metadata for String;
      *(void *)(v71 + 48) = v70;
      *(void *)(v71 + 56) = v69;
      swift_bridgeObjectRetain();
      sub_1008F6944(v71);
      Class v72 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v42 addPropertiesWithDictionary:v72];
    }
    uint64_t v73 = v86;
    long long v74 = *(void **)&v86[v83];
    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = v73;
    *(void *)(v75 + 24) = v42;
    aBlock[4] = sub_100905450;
    aBlock[5] = v75;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100020238;
    aBlock[3] = &unk_100FF5E08;
    uint64_t v76 = _Block_copy(aBlock);
    id v77 = v74;
    id v78 = v73;
    id v79 = v42;
    swift_release();
    [v79 setStandardPropertiesWith:v77 completionHandler:v76];
    _Block_release(v76);
  }
  else
  {
    __break(1u);
  }
}

void MetricsReportingController.recordImpressionsEvent(_:with:pageContext:sharedListeningContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v41 = a5;
  unint64_t v39 = a6;
  unint64_t v40 = a7;
  uint64_t v10 = sub_100063814(&qword_1010BFBE0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v38 - v14;
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  NSString v19 = (uint64_t *)((char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  *NSString v19 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  char v20 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v17 + 8))(v19, v16);
  if (v20)
  {
    id v21 = [objc_allocWithZone((Class)SSMetricsBaseEvent) init];
    if (a4) {
      NSString v22 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v22 = 0;
    }
    [v21 setPageContext:v22];

    sub_10006CAB8(a2, (uint64_t)v15, &qword_1010BFBE0);
    uint64_t v23 = type metadata accessor for MetricsPageProperties();
    NSString v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
    if (v24(v15, 1, v23) == 1)
    {
      sub_1000637B8((uint64_t)v15, &qword_1010BFBE0);
      NSString v25 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_100904E7C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MetricsPageProperties);
      NSString v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    NSString v26 = String._bridgeToObjectiveC()();
    [v21 setProperty:v25 forBodyKey:v26];
    swift_unknownObjectRelease();

    sub_10006CAB8(a2, (uint64_t)v12, &qword_1010BFBE0);
    if (v24(v12, 1, v23) == 1)
    {
      sub_1000637B8((uint64_t)v12, &qword_1010BFBE0);
      NSString v27 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_100904E7C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for MetricsPageProperties);
      NSString v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v21 setPageType:v27];

    [v21 setEventType:SSMetricsEventTypeImpressions];
    sub_100063814(&qword_1010C0300);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    *(void *)(inited + 32) = 0x6973736572706D69;
    *(void *)(inited + 40) = 0xEB00000000736E6FLL;
    *(void *)(inited + 72) = sub_100063814(&qword_1010BFBE8);
    *(void *)(inited + 48) = a1;
    swift_bridgeObjectRetain();
    sub_1008F6944(inited);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v21 addPropertiesWithDictionary:isa];

    if (v41 != 2)
    {
      if (sub_100904CF4(v41 & 1, v39, v40))
      {
        Class v30 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v21 addPropertiesWithDictionary:v30];
      }
    }
    id v31 = v42;
    id v32 = *(void **)&v42[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v31;
    *(void *)(v33 + 24) = v21;
    aBlock[4] = sub_100905488;
    aBlock[5] = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100020238;
    aBlock[3] = &unk_100FF5E58;
    NSString v34 = _Block_copy(aBlock);
    id v35 = v32;
    id v36 = v31;
    id v37 = v21;
    swift_release();
    [v37 setStandardPropertiesWith:v35 completionHandler:v34];
    _Block_release(v34);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1008FED00(void *a1, void *a2, uint64_t a3, uint64_t (*a4)(void))
{
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  id v8 = a1;
  id v9 = a2;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(a4, v7);

  return swift_release();
}

void MetricsReportingController.recordSearchEvent(_:pageContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_100063814(&qword_1010BCBE0);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (void *)((char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  *uint64_t v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  char v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    id v15 = [objc_allocWithZone((Class)SSMetricsSearchEvent) init];
    id v16 = v15;
    if (a3) {
      NSString v17 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v17 = 0;
    }
    [v15 setPageContext:v17];

    uint64_t v18 = (int *)type metadata accessor for MetricsEvent.Click(0);
    uint64_t v19 = 0;
    uint64_t v20 = a1 + v18[10];
    uint64_t v21 = *(unsigned __int16 *)(v20 + 24);
    if (v21 >> 8 <= 0xFE)
    {
      unint64_t v22 = MetricsEvent.Click.ActionDetails.dictionary.getter(*(void **)v20, *(void *)(v20 + 8), *(void *)(v20 + 16), v21);
      if (v22)
      {
        aBlock[0] = v22;
        sub_100063814(&qword_1010BFBF0);
        uint64_t v19 = _bridgeAnythingToObjectiveC<A>(_:)();
        sub_1000637B8((uint64_t)aBlock, &qword_1010BFBF0);
      }
      else
      {
        uint64_t v19 = 0;
      }
    }
    [v15 setActionDetails:v19];
    swift_unknownObjectRelease();
    MetricsEvent.Click.ActionType.rawValue.getter(*(unsigned char *)(a1 + 17));
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v15 setActionType:v23];

    NSString v24 = String._bridgeToObjectiveC()();
    [v15 setTargetIdentifier:v24];

    sub_10006CAB8(a1 + v18[7], (uint64_t)v9, &qword_1010BCBE0);
    uint64_t v25 = type metadata accessor for URL();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v9, 1, v25) == 1)
    {
      sub_1000637B8((uint64_t)v9, &qword_1010BCBE0);
      NSString v27 = 0;
    }
    else
    {
      URL.absoluteString.getter();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v25);
      NSString v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v15 setTargetURL:v27];

    MetricsEvent.TargetType.rawValue.getter(*(unsigned char *)(a1 + 16));
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v15 setTargetType:v28];

    NSString v29 = *(NSString *)(a1 + v18[13] + 8);
    id v30 = v15;
    if (v29) {
      NSString v29 = String._bridgeToObjectiveC()();
    }
    [v15 setPageType:v29];

    id v31 = (uint64_t *)(a1 + v18[9]);
    unint64_t v32 = v31[1];
    if (v32 == 10)
    {
      id v33 = v15;
      NSString v34 = 0;
    }
    else
    {
      MetricsEvent.Click.ActionContext.rawValue.getter(*v31, v32);
      id v35 = v15;
      NSString v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    NSString v36 = String._bridgeToObjectiveC()();
    [v15 setProperty:v34 forBodyKey:v36];

    swift_unknownObjectRelease();
    if (*(void *)(a1 + v18[15]))
    {
      id v37 = v15;
      swift_bridgeObjectRetain();
      v38.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      id v39 = v15;
      v38.super.Class isa = 0;
    }
    NSString v40 = String._bridgeToObjectiveC()();
    [v15 setProperty:v38.super.isa forBodyKey:v40];

    swift_unknownObjectRelease();
    if (*(void *)(a1 + v18[12] + 8))
    {
      id v41 = v15;
      swift_bridgeObjectRetain();
      NSString v42 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v43 = v15;
      NSString v42 = 0;
    }
    NSString v44 = String._bridgeToObjectiveC()();
    [v15 setProperty:v42 forBodyKey:v44];

    swift_unknownObjectRelease();
    if (*(void *)(a1 + v18[8]))
    {
      id v45 = v15;
      swift_bridgeObjectRetain();
      sub_100063814(&qword_1010C5DC0);
      v46.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      id v47 = v15;
      v46.super.Class isa = 0;
    }
    NSString v48 = String._bridgeToObjectiveC()();
    [v15 setProperty:v46.super.isa forBodyKey:v48];

    swift_unknownObjectRelease();
    if (*(void *)(a1 + v18[18] + 8)) {
      NSString v49 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v49 = 0;
    }
    [v15 setSearchTerm:v49];

    uint64_t v50 = *(void **)&v4[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = v4;
    *(void *)(v51 + 24) = v15;
    aBlock[4] = sub_1009054C0;
    aBlock[5] = v51;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100020238;
    aBlock[3] = &unk_100FF5EA8;
    uint64_t v52 = _Block_copy(aBlock);
    id v53 = v50;
    uint64_t v54 = v4;
    id v55 = v15;
    swift_release();
    [v55 setStandardPropertiesWith:v53 completionHandler:v52];
    _Block_release(v52);
  }
  else
  {
    __break(1u);
  }
}

void MetricsReportingController.recordClickEvent(_:pageContext:sharedListeningContext:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, unint64_t a6)
{
  uint64_t v110 = a3;
  unint64_t v103 = a5;
  unint64_t v104 = a6;
  uint64_t v9 = sub_100063814(&qword_1010BCBE0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v14 = (char *)&v101 - v13;
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t *)((char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  *uint64_t v18 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  char v19 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v16 + 8))(v18, v15);
  if (v19)
  {
    uint64_t v105 = a2;
    id v20 = [objc_allocWithZone((Class)SSMetricsClickEvent) init];
    NSString v21 = String._bridgeToObjectiveC()();
    [v20 setTargetIdentifier:v21];

    MetricsEvent.TargetType.rawValue.getter(*(unsigned char *)(a1 + 16));
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v20 setTargetType:v22];

    MetricsEvent.Click.ActionType.rawValue.getter(*(unsigned char *)(a1 + 17));
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v20 setActionType:v23];

    NSString v24 = (int *)type metadata accessor for MetricsEvent.Click(0);
    sub_10006CAB8(a1 + v24[7], (uint64_t)v14, &qword_1010BCBE0);
    uint64_t v25 = type metadata accessor for URL();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v106 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    uint64_t v107 = v26 + 48;
    int v27 = v106(v14, 1, v25);
    uint64_t v108 = v25;
    uint64_t v102 = v26;
    if (v27 == 1)
    {
      sub_1000637B8((uint64_t)v14, &qword_1010BCBE0);
      NSString v28 = 0;
    }
    else
    {
      URL.absoluteString.getter();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v25);
      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v20 setTargetURL:v28];

    if (*(void *)(a1 + v24[8]))
    {
      id v29 = v20;
      swift_bridgeObjectRetain();
      sub_100063814(&qword_1010C5DC0);
      v30.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      id v31 = v20;
      v30.super.Class isa = 0;
    }
    NSString v32 = String._bridgeToObjectiveC()();
    [v20 setProperty:v30.super.isa forBodyKey:v32];

    swift_unknownObjectRelease();
    id v33 = (uint64_t *)(a1 + v24[9]);
    unint64_t v34 = v33[1];
    if (v34 == 10)
    {
      id v35 = v20;
      NSString v36 = 0;
    }
    else
    {
      MetricsEvent.Click.ActionContext.rawValue.getter(*v33, v34);
      id v37 = v20;
      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    NSString v38 = String._bridgeToObjectiveC()();
    [v20 setProperty:v36 forBodyKey:v38];

    swift_unknownObjectRelease();
    uint64_t v39 = a1 + v24[10];
    uint64_t v40 = *(unsigned __int16 *)(v39 + 24);
    if (v40 >> 8 <= 0xFE
      && (unint64_t v41 = MetricsEvent.Click.ActionDetails.dictionary.getter(*(void **)v39, *(void *)(v39 + 8), *(void *)(v39 + 16), v40)) != 0)
    {
      aBlock[0] = v41;
      sub_100063814(&qword_1010BFBF0);
      uint64_t v42 = _bridgeAnythingToObjectiveC<A>(_:)();
      sub_1000637B8((uint64_t)aBlock, &qword_1010BFBF0);
    }
    else
    {
      uint64_t v42 = 0;
    }
    [v20 setActionDetails:v42];
    swift_unknownObjectRelease();
    Class isa = *(Class *)(a1 + v24[11]);
    uint64_t v109 = v11;
    if (isa)
    {
      sub_100063814(&qword_1010C2930);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
    }
    [v20 setImpressions:isa];
    swift_unknownObjectRelease();
    if (*(unsigned char *)(a1 + v24[19]) == 1)
    {
      sub_100063814(&qword_1010C0300);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100E251D0;
      strcpy((char *)(inited + 32), "sharedContent");
      *(_WORD *)(inited + 46) = -4864;
      *(void *)(inited + 72) = &type metadata for Bool;
      *(unsigned char *)(inited + 48) = 1;
      sub_1008F6944(inited);
      Class v45 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v20 addPropertiesWithDictionary:v45];
    }
    NSArray v46 = (uint64_t *)(a1 + v24[20]);
    uint64_t v47 = v46[1];
    if (v47)
    {
      uint64_t v48 = *v46;
      sub_100063814(&qword_1010C0300);
      uint64_t v49 = swift_initStackObject();
      *(_OWORD *)(v49 + 16) = xmmword_100E251D0;
      *(void *)(v49 + 32) = 0xD000000000000013;
      *(void *)(v49 + 40) = 0x8000000100DCA670;
      *(void *)(v49 + 72) = &type metadata for String;
      *(void *)(v49 + 48) = v48;
      *(void *)(v49 + 56) = v47;
      swift_bridgeObjectRetain();
      sub_1008F6944(v49);
      Class v50 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v20 addPropertiesWithDictionary:v50];
    }
    uint64_t v51 = (uint64_t *)(a1 + v24[18]);
    uint64_t v52 = v51[1];
    if (v52)
    {
      uint64_t v53 = *v51;
      sub_100063814(&qword_1010C0300);
      uint64_t v54 = swift_initStackObject();
      *(_OWORD *)(v54 + 16) = xmmword_100E251D0;
      *(void *)(v54 + 32) = 0x6554686372616573;
      *(void *)(v54 + 40) = 0xEA00000000006D72;
      *(void *)(v54 + 72) = &type metadata for String;
      *(void *)(v54 + 48) = v53;
      *(void *)(v54 + 56) = v52;
      swift_bridgeObjectRetain();
      sub_1008F6944(v54);
      Class v55 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v20 addPropertiesWithDictionary:v55];
    }
    if (a4 != 2 && sub_100904CF4(a4 & 1, v103, v104))
    {
      Class v56 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v20 addPropertiesWithDictionary:v56];
    }
    NSString v57 = (NSString)v110;
    if (v110)
    {
      id v58 = v20;
      NSString v57 = String._bridgeToObjectiveC()();
    }
    else
    {
      id v59 = v20;
    }
    [v20 setPageContext:v57];

    unint64_t v60 = (uint64_t *)(a1 + v24[12]);
    uint64_t v62 = *v60;
    uint64_t v61 = v60[1];
    if (v61)
    {
      id v63 = v20;
      swift_bridgeObjectRetain();
      NSString v64 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v65 = String._bridgeToObjectiveC()();
      [v63 setProperty:v64 forBodyKey:v65];
    }
    Class v66 = (uint64_t *)(a1 + v24[13]);
    uint64_t v67 = *v66;
    uint64_t v68 = v66[1];
    if (v68)
    {
      id v69 = v20;
      NSString v70 = String._bridgeToObjectiveC()();
      [v69 setPageType:v70];
    }
    uint64_t v110 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration;
    uint64_t v71 = *(void **)&v111[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    if (v71)
    {
      sub_100063814(&qword_1010BFBD8);
      uint64_t v72 = swift_allocObject();
      *(_OWORD *)(v72 + 16) = xmmword_100E251B0;
      uint64_t v73 = sub_100063814((uint64_t *)&unk_1010C28C0);
      *(void *)(v72 + 32) = v67;
      *(void *)(v72 + 40) = v68;
      *(void *)(v72 + 88) = v73;
      *(void *)(v72 + 56) = v73;
      *(void *)(v72 + 64) = v62;
      *(void *)(v72 + 72) = v61;
      swift_bridgeObjectRetain();
      id v74 = v20;
      swift_bridgeObjectRetain();
      id v75 = v71;
      Class v76 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      NSString v77 = [v75 compoundStringWithElements:v76];

      if (v77)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v77 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      id v78 = v20;
      NSString v77 = 0;
    }
    uint64_t v80 = v108;
    uint64_t v79 = (uint64_t)v109;
    [v20 setPageDescription:v77];

    sub_10006CAB8(a1 + v24[14], v79, &qword_1010BCBE0);
    int v81 = v106((char *)v79, 1, v80);
    id v82 = v20;
    if (v81 == 1)
    {
      sub_1000637B8(v79, &qword_1010BCBE0);
      NSString v83 = 0;
    }
    else
    {
      URL.absoluteString.getter();
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v79, v80);
      NSString v83 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v82 setPageURL:v83];

    if (*(void *)(a1 + v24[15]))
    {
      id v84 = v82;
      swift_bridgeObjectRetain();
      v85.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      id v86 = v82;
      v85.super.Class isa = 0;
    }
    NSString v87 = String._bridgeToObjectiveC()();
    [v82 setProperty:v85.super.isa forBodyKey:v87];

    swift_unknownObjectRelease();
    if ((*(unsigned char *)(a1 + v24[16]) & 1) == 0)
    {
      sub_100063814(&qword_1010C0300);
      uint64_t v88 = swift_initStackObject();
      *(_OWORD *)(v88 + 16) = xmmword_100E251D0;
      *(void *)(v88 + 32) = 0x7073694465676170;
      *(void *)(v88 + 40) = 0xEF6570795479616CLL;
      *(void *)(v88 + 72) = &type metadata for String;
      *(void *)(v88 + 48) = 0x7765695664726163;
      *(void *)(v88 + 56) = 0xE800000000000000;
      sub_1008F6944(v88);
      Class v89 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v82 addPropertiesWithDictionary:v89];
    }
    int v90 = *(unsigned __int8 *)(a1 + v24[17]);
    if (v90 != 2)
    {
      char v91 = v90 & 1;
      sub_100063814(&qword_1010C0300);
      uint64_t v92 = swift_initStackObject();
      *(_OWORD *)(v92 + 16) = xmmword_100E251D0;
      *(void *)(v92 + 32) = 0xD000000000000014;
      *(void *)(v92 + 40) = 0x8000000100DCA650;
      *(void *)(v92 + 72) = &type metadata for Bool;
      *(unsigned char *)(v92 + 48) = v91;
      sub_1008F6944(v92);
      Class v93 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v82 addPropertiesWithDictionary:v93];
    }
    uint64_t v94 = v111;
    uint64_t v95 = *(void **)&v111[v110];
    uint64_t v96 = swift_allocObject();
    *(void *)(v96 + 16) = v94;
    *(void *)(v96 + 24) = v82;
    aBlock[4] = sub_1009054F8;
    aBlock[5] = v96;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100020238;
    aBlock[3] = &unk_100FF5EF8;
    uint64_t v97 = _Block_copy(aBlock);
    id v98 = v95;
    id v99 = v94;
    id v100 = v82;
    swift_release();
    [v100 setStandardPropertiesWith:v98 completionHandler:v97];
    _Block_release(v97);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MetricsReportingController.recordLoadUrlEvent(_:)(MusicCore::MetricsEvent::LoadUrl *a1)
{
  id v3 = [objc_allocWithZone((Class)SSMetricsLoadURLEvent) init];
  BOOL cachedResponse = a1->cachedResponse;
  [v3 setCachedResponse:cachedResponse];
  id v5 = [self mainBundle];
  id v6 = [v5 bundleIdentifier];

  [v3 setOriginalApp:v6];
  sub_10003CABC((uint64_t)a1, (uint64_t)v39, &qword_1010BFBF8);
  sub_10003CABC((uint64_t)v39, (uint64_t)&v40, &qword_1010BFBF8);
  if ((v41 & 1) == 0) {
    [v3 setDomainLookupStartTime:v40];
  }
  sub_10003CABC((uint64_t)&a1->domainLookupEndTime, (uint64_t)v38, &qword_1010BFBF8);
  sub_10003CABC((uint64_t)v38, (uint64_t)&v42, &qword_1010BFBF8);
  if ((v43 & 1) == 0) {
    [v3 setDomainLookupEndTime:v42];
  }
  sub_10003CABC((uint64_t)&a1->connectionStartTime, (uint64_t)v37, &qword_1010BFBF8);
  sub_10003CABC((uint64_t)v37, (uint64_t)&v44, &qword_1010BFBF8);
  if ((v45 & 1) == 0) {
    [v3 setConnectionStartTime:v44];
  }
  sub_10003CABC((uint64_t)&a1->secureConnectionStartTime, (uint64_t)v36, &qword_1010BFBF8);
  sub_10003CABC((uint64_t)v36, (uint64_t)&v46, &qword_1010BFBF8);
  if ((v47 & 1) == 0) {
    [v3 setSecureConnectionStartTime:v46];
  }
  sub_10003CABC((uint64_t)&a1->connectionEndTime, (uint64_t)v35, &qword_1010BFBF8);
  sub_10003CABC((uint64_t)v35, (uint64_t)&v48, &qword_1010BFBF8);
  if ((v49 & 1) == 0) {
    [v3 setConnectionEndTime:v48];
  }
  sub_10003CABC((uint64_t)&a1->requestStartTime, (uint64_t)v34, &qword_1010BFBF8);
  sub_10003CABC((uint64_t)v34, (uint64_t)&v50, &qword_1010BFBF8);
  if ((v51 & 1) == 0) {
    [v3 setRequestStartTime:v50];
  }
  sub_10003CABC((uint64_t)&a1->responseStartTime, (uint64_t)v33, &qword_1010BFBF8);
  sub_10003CABC((uint64_t)v33, (uint64_t)&v52, &qword_1010BFBF8);
  if ((v53 & 1) == 0) {
    [v3 setResponseStartTime:v52];
  }
  sub_10003CABC((uint64_t)&a1->responseEndTime, (uint64_t)v32, &qword_1010BFBF8);
  sub_10003CABC((uint64_t)v32, (uint64_t)&v54, &qword_1010BFBF8);
  if ((v55 & 1) == 0) {
    [v3 setResponseEndTime:v54];
  }
  sub_10003CABC((uint64_t)&a1->fetchStartTime, (uint64_t)v31, &qword_1010BFBF8);
  sub_10003CABC((uint64_t)v31, (uint64_t)&v56, &qword_1010BFBF8);
  if ((v57 & 1) == 0) {
    [v3 setFetchStartTime:v56];
  }
  sub_10003CABC((uint64_t)&a1->requestUrl, (uint64_t)v30, (uint64_t *)&unk_1010C28C0);
  sub_10003CABC((uint64_t)v30, (uint64_t)v58, (uint64_t *)&unk_1010C28C0);
  if (v58[1])
  {
    NSString v7 = String._bridgeToObjectiveC()();
    [v3 setRequestURL:v7];
  }
  sub_10003CABC((uint64_t)&a1->redirectCount, (uint64_t)v29, &qword_1010BFC00);
  sub_10003CABC((uint64_t)v29, (uint64_t)&v59, &qword_1010BFC00);
  if ((v60 & 1) == 0)
  {
    if (v59 < 0) {
      goto LABEL_41;
    }
    [v3 setRedirectCount:];
  }
  sub_10003CABC((uint64_t)&a1->appleTimingApp, (uint64_t)v28, (uint64_t *)&unk_1010C28C0);
  sub_10003CABC((uint64_t)v28, (uint64_t)v61, (uint64_t *)&unk_1010C28C0);
  if (v61[1])
  {
    NSString v8 = String._bridgeToObjectiveC()();
    [v3 setAppleTimingApp:v8];
  }
  sub_10003CABC((uint64_t)&a1->connectionType, (uint64_t)v27, (uint64_t *)&unk_1010C28C0);
  sub_10003CABC((uint64_t)v27, (uint64_t)v62, (uint64_t *)&unk_1010C28C0);
  if (v62[1])
  {
    NSString v9 = String._bridgeToObjectiveC()();
    [v3 setConnectionType:v9];
  }
  sub_10003CABC((uint64_t)&a1->edgeNodeCacheStatus, (uint64_t)v26, (uint64_t *)&unk_1010C28C0);
  sub_10003CABC((uint64_t)v26, (uint64_t)v63, (uint64_t *)&unk_1010C28C0);
  if (v63[1])
  {
    NSString v10 = String._bridgeToObjectiveC()();
    [v3 setEdgeNodeCacheStatus:v10];
  }
  sub_10003CABC((uint64_t)&a1->responseDate, (uint64_t)v25, (uint64_t *)&unk_1010C28C0);
  sub_10003CABC((uint64_t)v25, (uint64_t)v64, (uint64_t *)&unk_1010C28C0);
  if (v64[1])
  {
    NSString v11 = String._bridgeToObjectiveC()();
    [v3 setResponseDate:v11];
  }
  sub_10003CABC((uint64_t)&a1->resolvedIPAddress, (uint64_t)v24, (uint64_t *)&unk_1010C28C0);
  sub_10003CABC((uint64_t)v24, (uint64_t)v65, (uint64_t *)&unk_1010C28C0);
  if (v65[1])
  {
    NSString v12 = String._bridgeToObjectiveC()();
    [v3 setResolvedIPAddress:v12];
  }
  object = a1->environmentDataCenter.value._object;
  if (object)
  {
    uint64_t countAndFlagsBits = a1->environmentDataCenter.value._countAndFlagsBits;
    sub_100063814(&qword_1010C0300);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    *(void *)(inited + 32) = 0xD000000000000015;
    *(void *)(inited + 40) = 0x8000000100DCA690;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = countAndFlagsBits;
    *(void *)(inited + 56) = object;
    swift_bridgeObjectRetain();
    sub_1008F6944(inited);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 addPropertiesWithDictionary:isa];
  }
  [v3 setCachedResponse:cachedResponse];
  [v3 setConnectionReused:a1->connectionReused];
  [v3 setStatusCode:a1->statusCode];
  if (a1->requestMessageSize < 0)
  {
    __break(1u);
  }
  else
  {
    [v3 setRequestMessageSize:];
    if ((a1->responseMessageSize & 0x8000000000000000) == 0)
    {
      [v3 setResponseMessageSize:];
      uint64_t v17 = *(void **)&v1[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v3;
      *(void *)(v18 + 24) = v1;
      aBlock[4] = sub_100905530;
      aBlock[5] = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_100020238;
      aBlock[3] = &unk_100FF5F48;
      char v19 = _Block_copy(aBlock);
      id v20 = v17;
      id v21 = v3;
      NSString v22 = v1;
      swift_release();
      [v21 setStandardPropertiesWith:v20 completionHandler:v19];
      _Block_release(v19);

      return;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
}

void sub_1009009A8(void *a1)
{
  if (sub_10090A04C()) {
    sub_100903DD4(a1, (uint64_t)UIScreen.Dimensions.size.getter, 0);
  }
}

void MetricsReportingController.recordComponentRenderEvent(_:)(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v7 = (void *)((char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  *NSString v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    JUMPOUT(0x100900FE8);
  }
  id v9 = [objc_allocWithZone((Class)type metadata accessor for Music_SSMetricsComponentRenderEvent()) init];
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRetain();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  NSString v11 = String._bridgeToObjectiveC()();
  [v9 setProperty:v10 forBodyKey:v11];
  swift_unknownObjectRelease();

  sub_10003CABC(a1 + 16, (uint64_t)&v37, &qword_1010BFC08);
  sub_10003CABC((uint64_t)&v37, (uint64_t)&v38, &qword_1010BFC08);
  if (v38 == 24)
  {
    NSString v12 = 0;
  }
  else
  {
    MetricsEvent.TargetType.rawValue.getter(v38);
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  NSString v13 = String._bridgeToObjectiveC()();
  [v9 setProperty:v12 forBodyKey:v13];
  swift_unknownObjectRelease();

  id v14 = *(id *)(a1 + 24);
  NSString v15 = String._bridgeToObjectiveC()();
  [v9 setProperty:v14 forBodyKey:v15];

  id v16 = *(id *)(a1 + 32);
  NSString v17 = String._bridgeToObjectiveC()();
  [v9 setProperty:v16 forBodyKey:v17];

  id v18 = *(id *)(a1 + 40);
  NSString v19 = String._bridgeToObjectiveC()();
  [v9 setProperty:v18 forBodyKey:v19];

  id v20 = *(id *)(a1 + 48);
  NSString v21 = String._bridgeToObjectiveC()();
  [v9 setProperty:v20 forBodyKey:v21];

  id v22 = *(id *)(a1 + 56);
  NSString v23 = String._bridgeToObjectiveC()();
  [v9 setProperty:v22 forBodyKey:v23];

  id v24 = *(id *)(a1 + 64);
  NSString v25 = String._bridgeToObjectiveC()();
  [v9 setProperty:v24 forBodyKey:v25];

  sub_10003CABC(a1 + 72, (uint64_t)&v36, &qword_1010BFC10);
  sub_10003CABC((uint64_t)&v36, (uint64_t)&v39, &qword_1010BFC10);
  NSString v26 = 0;
  switch(v39)
  {
    case 4:
      break;
    default:
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      break;
  }
  NSString v27 = String._bridgeToObjectiveC()();
  [v9 setProperty:v26 forBodyKey:v27];
  swift_unknownObjectRelease();

  NSString v28 = *(void **)&v2[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v2;
  *(void *)(v29 + 24) = v9;
  aBlock[4] = sub_100905568;
  aBlock[5] = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100020238;
  aBlock[3] = &unk_100FF5F98;
  NSArray v30 = _Block_copy(aBlock);
  id v31 = v28;
  NSString v32 = v2;
  id v33 = v9;
  swift_release();
  [v33 setStandardPropertiesWith:v31 completionHandler:v30];
  _Block_release(v30);
}

void MetricsReportingController.recordPageRenderEvent<A>(_:pageContext:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v101 = a2;
  uint64_t v7 = sub_100063814(&qword_1010BCBE0);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  NSString v13 = (uint64_t *)((char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  *NSString v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  char v14 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    uint64_t v102 = v9;
    unint64_t v104 = v4;
    id v15 = [objc_allocWithZone((Class)type metadata accessor for Music_SSMetricsPageRenderEvent()) init];
    swift_beginAccess();
    id v16 = *(void **)(a1 + 16);
    swift_beginAccess();
    char v17 = *(unsigned char *)(a1 + 32);
    unint64_t v103 = a3;
    if (v17)
    {
      id v18 = v16;
      uint64_t v19 = 0;
    }
    else
    {
      double v20 = *(double *)(a1 + 24);
      NSString v21 = self;
      id v22 = v16;
      id v23 = [v21 serverTimeFromTimeInterval:v20];
      id v24 = [v23 unsignedLongLongValue];

      id v112 = v24;
      uint64_t v19 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    }
    NSString v25 = String._bridgeToObjectiveC()();
    [v15 setProperty:v19 forBodyKey:v25];
    swift_unknownObjectRelease();

    swift_beginAccess();
    uint64_t v26 = 0;
    if ((*(unsigned char *)(a1 + 48) & 1) == 0)
    {
      id v27 = [self serverTimeFromTimeInterval:*(double *)(a1 + 40)];
      id v28 = [v27 unsignedLongLongValue];

      id v111 = v28;
      uint64_t v26 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    }
    NSString v29 = String._bridgeToObjectiveC()();
    [v15 setProperty:v26 forBodyKey:v29];
    swift_unknownObjectRelease();

    swift_beginAccess();
    uint64_t v30 = 0;
    if ((*(unsigned char *)(a1 + 64) & 1) == 0)
    {
      id v31 = [self serverTimeFromTimeInterval:*(double *)(a1 + 56)];
      id v32 = [v31 unsignedLongLongValue];

      id v110 = v32;
      uint64_t v30 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    }
    NSString v33 = String._bridgeToObjectiveC()();
    [v15 setProperty:v30 forBodyKey:v33];
    swift_unknownObjectRelease();

    swift_beginAccess();
    uint64_t v34 = 0;
    if ((*(unsigned char *)(a1 + 80) & 1) == 0)
    {
      id v35 = [self serverTimeFromTimeInterval:*(double *)(a1 + 72)];
      id v36 = [v35 unsignedLongLongValue];

      id v109 = v36;
      uint64_t v34 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    }
    NSString v37 = String._bridgeToObjectiveC()();
    [v15 setProperty:v34 forBodyKey:v37];
    swift_unknownObjectRelease();

    swift_beginAccess();
    uint64_t v38 = 0;
    if ((*(unsigned char *)(a1 + 96) & 1) == 0)
    {
      id v39 = [self serverTimeFromTimeInterval:*(double *)(a1 + 88)];
      id v40 = [v39 unsignedLongLongValue];

      id v108 = v40;
      uint64_t v38 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    }
    NSString v41 = String._bridgeToObjectiveC()();
    [v15 setProperty:v38 forBodyKey:v41];
    swift_unknownObjectRelease();

    swift_beginAccess();
    uint64_t v42 = 0;
    if ((*(unsigned char *)(a1 + 112) & 1) == 0)
    {
      id v43 = [self serverTimeFromTimeInterval:*(double *)(a1 + 104)];
      id v44 = [v43 unsignedLongLongValue];

      id v107 = v44;
      uint64_t v42 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    }
    NSString v45 = String._bridgeToObjectiveC()();
    [v15 setProperty:v42 forBodyKey:v45];
    swift_unknownObjectRelease();

    swift_beginAccess();
    uint64_t v46 = 0;
    if ((*(unsigned char *)(a1 + 128) & 1) == 0)
    {
      id v47 = [self serverTimeFromTimeInterval:*(double *)(a1 + 120)];
      id v48 = [v47 unsignedLongLongValue];

      uint64_t v105 = (uint64_t)v48;
      uint64_t v46 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    }
    NSString v49 = String._bridgeToObjectiveC()();
    [v15 setProperty:v46 forBodyKey:v49];
    swift_unknownObjectRelease();

    if (v16)
    {
      [v16 requestStartTime];
      id v51 = [self serverTimeFromTimeInterval:v50];
      id v52 = [v51 unsignedLongLongValue];

      uint64_t v105 = (uint64_t)v52;
      uint64_t v53 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
      NSString v54 = String._bridgeToObjectiveC()();
      [v15 setProperty:v53 forBodyKey:v54];
      swift_unknownObjectRelease();

      [v16 responseStartTime];
      id v56 = [self serverTimeFromTimeInterval:v55];
      id v57 = [v56 unsignedLongLongValue];

      uint64_t v105 = (uint64_t)v57;
      uint64_t v58 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    }
    else
    {
      NSString v59 = String._bridgeToObjectiveC()();
      [v15 setProperty:0 forBodyKey:v59];

      uint64_t v58 = 0;
    }
    NSString v60 = String._bridgeToObjectiveC()();
    [v15 setProperty:v58 forBodyKey:v60];
    swift_unknownObjectRelease();

    if (v16)
    {
      [v16 responseEndTime];
      id v62 = [self serverTimeFromTimeInterval:v61];
      id v63 = [v62 unsignedLongLongValue];

      uint64_t v105 = (uint64_t)v63;
      uint64_t v64 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
      NSString v65 = String._bridgeToObjectiveC()();
      [v15 setProperty:v64 forBodyKey:v65];
      swift_unknownObjectRelease();

      unsigned __int8 v66 = [v16 cachedResponse];
    }
    else
    {
      NSString v67 = String._bridgeToObjectiveC()();
      [v15 setProperty:0 forBodyKey:v67];

      unsigned __int8 v66 = 0;
    }
    LOBYTE(v105) = v66;
    uint64_t v68 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    NSString v69 = String._bridgeToObjectiveC()();
    [v15 setProperty:v68 forBodyKey:v69];
    swift_unknownObjectRelease();

    NSString v70 = (id *)(a1 + *(void *)(*(void *)a1 + 160));
    id v71 = v70[1];
    uint64_t v105 = (uint64_t)*v70;
    id v106 = v71;
    swift_bridgeObjectRetain_n();
    uint64_t v72 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    NSString v73 = String._bridgeToObjectiveC()();
    [v15 setProperty:v72 forBodyKey:v73];
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    id v74 = v70[3];
    uint64_t v105 = (uint64_t)v70[2];
    id v106 = v74;
    swift_bridgeObjectRetain_n();
    uint64_t v75 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    NSString v76 = String._bridgeToObjectiveC()();
    [v15 setProperty:v75 forBodyKey:v76];
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    uint64_t v77 = type metadata accessor for MetricsPageProperties();
    uint64_t v78 = (uint64_t)v102;
    sub_10006CAB8((uint64_t)v70 + *(int *)(v77 + 24), (uint64_t)v102, &qword_1010BCBE0);
    uint64_t v79 = type metadata accessor for URL();
    uint64_t v80 = *(void *)(v79 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79) == 1)
    {
      sub_1000637B8(v78, &qword_1010BCBE0);
      uint64_t v81 = 0;
    }
    else
    {
      uint64_t v82 = URL.absoluteString.getter();
      id v84 = v83;
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v78, v79);
      uint64_t v105 = v82;
      id v106 = v84;
      swift_bridgeObjectRetain();
      uint64_t v81 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    }
    NSString v85 = String._bridgeToObjectiveC()();
    [v15 setProperty:v81 forBodyKey:v85];
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    if (*(id *)((char *)v70 + *(int *)(v77 + 28)))
    {
      uint64_t v105 = *(uint64_t *)((char *)v70 + *(int *)(v77 + 28));
      swift_bridgeObjectRetain_n();
      sub_100063814(&qword_1010BFBF0);
      uint64_t v86 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    }
    else
    {
      uint64_t v86 = 0;
    }
    NSString v87 = v103;
    NSString v88 = String._bridgeToObjectiveC()();
    [v15 setProperty:v86 forBodyKey:v88];
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    if (v87)
    {
      uint64_t v105 = v101;
      id v106 = v87;
      swift_bridgeObjectRetain_n();
      uint64_t v89 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    }
    else
    {
      uint64_t v89 = 0;
    }
    NSString v90 = String._bridgeToObjectiveC()();
    [v15 setProperty:v89 forBodyKey:v90];
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    char v91 = v104;
    uint64_t v92 = *(void **)&v104[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    uint64_t v93 = swift_allocObject();
    *(void *)(v93 + 16) = v91;
    *(void *)(v93 + 24) = v15;
    id v94 = v92;
    id v95 = v15;
    id v96 = v94;
    id v97 = v95;
    swift_retain();
    id v98 = v91;
    id v99 = v97;
    sub_10090D120(v92, v99, v99, (uint64_t)v92, (uint64_t)sub_1009055A0, v93);

    swift_release_n();
  }
  else
  {
    __break(1u);
  }
}

void sub_100901E0C(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(void *))
{
  if (a4(a2)) {
    sub_100903DD4(a2, (uint64_t)UIScreen.Dimensions.size.getter, 0);
  }
}

void MetricsReportingController.recordCustomEvent(with:properties:sharedListeningContext:shouldSuppressUserInfo:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, unint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  unint64_t v23 = a6;
  unint64_t v22 = a5;
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (uint64_t *)((char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  *id v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    id v17 = [objc_allocWithZone((Class)SSMetricsCustomEvent) init];
    NSString v18 = String._bridgeToObjectiveC()();
    [v17 setTopic:v18];

    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    [v17 addPropertiesWithDictionary:isa];

    [v17 setShouldSuppressUserInfo:a7 & 1];
    [v17 setShouldSuppressDSIDHeader:a7 & 1];
    if (a4 != 2)
    {
      if (sub_100904CF4(a4 & 1, v22, v23))
      {
        Class v20 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v17 addPropertiesWithDictionary:v20];
      }
    }
    sub_100903DD4(v17, a8, a9);
  }
  else
  {
    __break(1u);
  }
}

void MetricsReportingController.recordCarPlayCustomEvent(with:properties:shouldSuppressUserInfo:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a2;
  uint64_t v36 = a1;
  uint64_t v37 = a5;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (uint64_t *)((char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  *id v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    id v17 = [objc_allocWithZone((Class)SSMetricsCustomEvent) init];
    uint64_t v35 = a6;
    NSString v18 = v17;
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    [v18 addPropertiesWithDictionary:isa];

    [v18 setShouldSuppressUserInfo:a4 & 1];
    [v18 setShouldSuppressDSIDHeader:a4 & 1];
    sub_100063814(&qword_1010C0300);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    strcpy((char *)(inited + 32), "clientEventId");
    *(_WORD *)(inited + 46) = -4864;
    UUID.init()();
    uint64_t v21 = UUID.uuidString.getter();
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v21;
    *(void *)(inited + 56) = v23;
    sub_1008F6944(inited);
    Class v24 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v18 addPropertiesWithDictionary:v24];

    NSString v25 = v39;
    uint64_t v26 = *(void **)&v39[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    id v27 = (void *)swift_allocObject();
    uint64_t v29 = v35;
    uint64_t v28 = v36;
    void v27[2] = v18;
    v27[3] = v28;
    uint64_t v30 = v37;
    v27[4] = v38;
    v27[5] = v25;
    v27[6] = v30;
    v27[7] = v29;
    aBlock[4] = sub_100905728;
    aBlock[5] = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100020238;
    aBlock[3] = &unk_100FF6010;
    id v31 = _Block_copy(aBlock);
    id v32 = v26;
    id v33 = v18;
    swift_bridgeObjectRetain();
    id v34 = v25;
    swift_retain();
    swift_release();
    [v33 setStandardPropertiesWith:v32 completionHandler:v31];
    _Block_release(v31);
  }
  else
  {
    __break(1u);
  }
}

void sub_100902500(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v12 = String._bridgeToObjectiveC()();
  [a1 setTopic:v12];

  if (qword_1010BBC10 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100050A90(v13, (uint64_t)static Logger.carMetrics);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    v19[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v16 + 4) = sub_100075E68(a2, a3, v19);
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Inserting carPlay custom event with topic=%{public}s in metrics controller", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v17 = *(void **)(a4 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carFocusedMetricsController);
  v19[4] = a5;
  v19[5] = a6;
  v19[0] = (uint64_t)_NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = (uint64_t)sub_10021BB58;
  v19[3] = (uint64_t)&unk_100FF6670;
  NSString v18 = _Block_copy(v19);
  swift_retain();
  swift_release();
  [v17 insertEvent:a1 withCompletionHandler:v18];
  _Block_release(v18);
}

Swift::Void __swiftcall MetricsReportingController.reportEventForLocalEvaluation(with:)(Swift::OpaquePointer with)
{
  uint64_t v1 = type metadata accessor for DispatchPredicate();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  *uint64_t v4 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  char v5 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    id v6 = [objc_allocWithZone((Class)SSMetricsCustomEvent) init];
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    [v6 addPropertiesWithDictionary:isa];
  }
  else
  {
    __break(1u);
  }
}

uint64_t MetricsReportingController.flushUnreportedEvents()()
{
  *(void *)(v1 + 120) = v0;
  return _swift_task_switch(sub_1009028FC, 0, 0);
}

uint64_t sub_1009028FC()
{
  if (qword_1010BBCC0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[16] = sub_100050A90(v1, (uint64_t)qword_10112A5C0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[MetricsReportingController] Attempting to flush unreported events", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[15];

  id v6 = *(void **)(v5 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController);
  v0[2] = v0;
  v0[3] = sub_100902AB4;
  uint64_t v7 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100902D94;
  v0[13] = &unk_100FF6038;
  v0[14] = v7;
  [v6 flushUnreportedEventsWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100902AB4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    uint64_t v2 = sub_100902BD8;
  }
  else {
    uint64_t v2 = sub_100902BC4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100902BC4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100902BD8()
{
  uint64_t v10 = v0;
  swift_willThrow();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[17];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[10] = v3;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v5 = String.init<A>(describing:)();
    *(void *)(v4 + 4) = sub_100075E68(v5, v6, &v9);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[MetricsReportingController] Failed to flush unreported events with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100902D94(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100063814((uint64_t *)&unk_1010C0920);
    swift_allocError();
    *uint64_t v3 = a2;
    id v4 = a2;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_100902E2C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration);
  if (!v1)
  {
    long long v7 = 0u;
    long long v8 = 0u;
LABEL_11:
    sub_1000637B8((uint64_t)&v7, (uint64_t *)&unk_1010C0270);
    return 0;
  }
  id v2 = v1;
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 valueForConfigurationKey:v3];

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_10003CABC((uint64_t)v6, (uint64_t)&v7, (uint64_t *)&unk_1010C0270);
  if (!*((void *)&v8 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    return *(void *)&v6[0];
  }
  else {
    return 0;
  }
}

char *sub_100902F60()
{
  uint64_t v1 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_componentRenderEventSampler;
  sub_100063814(&qword_1010BC658);
  uint64_t v2 = swift_allocObject();
  NSString v3 = self;
  id v4 = v0;
  *(void *)(v2 + 16) = [v3 standardUserDefaults];
  *(void *)&v0[v1] = v2;
  uint64_t v5 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageRenderEventSampler;
  sub_100063814((uint64_t *)&unk_1010BC660);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = [v3 standardUserDefaults];
  *(void *)&v4[v5] = v6;
  *(void *)&v4[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration] = 0;
  uint64_t v7 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController;
  *(void *)&v4[v7] = [objc_allocWithZone((Class)SSMetricsController) init];
  uint64_t v8 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carFocusedMetricsController;
  *(void *)&v4[v8] = [objc_allocWithZone((Class)SSMetricsController) init];
  uint64_t v9 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carMetricsReporter;
  type metadata accessor for CarNowPlayingMetrics.Reporter();
  *(void *)&v4[v9] = swift_allocObject();
  *(void *)&v4[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_backgroundObserver] = 0;
  *(void *)&v4[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_urlBagObserver] = 0;
  *(void *)&v4[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageHistory] = _swiftEmptyArrayStorage;

  v21.receiver = v4;
  v21.super_class = (Class)type metadata accessor for MetricsReportingController();
  id v10 = [super init];
  uint64_t v11 = qword_1010BBD90;
  NSString v12 = (char *)v10;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for BagProvider.Observer();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  *(void *)(v14 + 24) = 0;
  *(void *)(v14 + 32) = 0;
  swift_weakAssign();
  uint64_t v15 = *(void *)(v14 + 24);
  *(void *)(v14 + 24) = sub_100908F54;
  *(void *)(v14 + 32) = v13;
  swift_retain_n();
  uint64_t v16 = sub_10006ADFC(v15);
  __chkstk_darwin(v16);
  UnfairLock.locked<A>(_:)(sub_100040614);
  sub_100044C44(0);
  swift_release();
  swift_release_n();
  *(void *)&v12[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_urlBagObserver] = v14;
  swift_release();
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for NotificationObserver();
  swift_allocObject();
  NSString v18 = UISceneDidEnterBackgroundNotification;
  swift_retain();
  uint64_t v19 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v18, 0, 1, 1, (uint64_t)sub_100908F5C, v17);
  swift_release();

  *(void *)&v12[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_backgroundObserver] = v19;
  swift_release();
  return v12;
}

uint64_t sub_100903388(void *a1, uint64_t a2)
{
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  swift_retain();
  id v5 = a1;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_1009091BC, v4);

  return swift_release();
}

void sub_10090342C(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_1009039C8(a2);
  }
}

uint64_t sub_100903488()
{
  uint64_t v0 = sub_100063814(&qword_1010C0040);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010BBCC0 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100050A90(v3, (uint64_t)qword_10112A5C0);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    swift_slowDealloc();
  }

  static TaskPriority.low.getter();
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 0, 1, v7);
  uint64_t v8 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  id v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v8;
  sub_10007F3AC((uint64_t)v2, (uint64_t)&unk_1010BFE30, (uint64_t)v10);
  swift_release();
  return sub_1000637B8((uint64_t)v2, &qword_1010C0040);
}

uint64_t sub_1009036A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 88) = a4;
  return _swift_task_switch(sub_1009036C4, 0, 0);
}

uint64_t sub_1009036C4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    swift_retain();

    sub_1008F48F8(0);
    swift_release();
  }
  swift_beginAccess();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    swift_retain();

    sub_1008F48F8(1);
    swift_release();
  }
  swift_beginAccess();
  uint64_t v5 = swift_unknownObjectWeakLoadStrong();
  v0[12] = v5;
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[13] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100903898;
    v7[15] = v6;
    return _swift_task_switch(sub_1009028FC, 0, 0);
  }
  else
  {
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_100903898()
{
  uint64_t v1 = *(void **)(*v0 + 96);
  uint64_t v4 = *v0;
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

void sub_1009039C8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  *uint64_t v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    return;
  }
  id v9 = [a1 dictionaryForBagKey:SSMetricsURLBagKey];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    if (!*(void *)(v11 + 16))
    {
      swift_bridgeObjectRelease();
      return;
    }
    id v12 = [a1 dictionaryForBagKey:SSVURLBagKeyMusicCommon];
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      *(void *)&long long v27 = 0xD000000000000023;
      *((void *)&v27 + 1) = 0x8000000100DCA970;
      AnyHashable.init<A>(_:)();
      if (*(void *)(v14 + 16) && (unint64_t v15 = sub_100076DAC((uint64_t)v29), (v16 & 1) != 0))
      {
        sub_100076134(*(void *)(v14 + 56) + 32 * v15, (uint64_t)&v27);
      }
      else
      {
        long long v27 = 0u;
        long long v28 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_100076EB8((uint64_t)v29);
      if (*((void *)&v28 + 1))
      {
        sub_10007664C(&v27, v30);
        strcpy((char *)&v27, "postFrequency");
        HIWORD(v27) = -4864;
        AnyHashable.init<A>(_:)();
        sub_100076134((uint64_t)v30, (uint64_t)&v27);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v26[1] = v11;
        sub_1008F7964(&v27, (uint64_t)v29, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        sub_100076EB8((uint64_t)v29);
        sub_1000760E4((uint64_t)v30);
        int v18 = 1;
        goto LABEL_14;
      }
      sub_1000637B8((uint64_t)&v27, (uint64_t *)&unk_1010C0270);
    }
    int v18 = 0;
LABEL_14:
    id v19 = objc_allocWithZone((Class)SSMetricsConfiguration);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v21 = [v19 initWithGlobalConfiguration:isa];

    if (v21)
    {
      uint64_t v22 = *(void **)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration);
      *(void *)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration) = v21;
      id v23 = v21;

      [v23 setDisableEventDecoration:[v23 _decorateITMLEvents] ^ 1];
      Class v24 = *(void **)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController);
      [v24 setGlobalConfiguration:v23];
      [v24 setFlushTimerEnabled:1];
      if (v18)
      {
        NSString v25 = *(void **)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carFocusedMetricsController);
        [v25 setGlobalConfiguration:v23];
        [v25 setFlushTimerEnabled:1];
      }
    }
  }
}

void sub_100903DD4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v25 = a2;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchPredicate();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  uint64_t *v14 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  char v15 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    sub_100904130(a1);
    sub_100063814(&qword_1010C0300);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    strcpy((char *)(inited + 32), "clientEventId");
    *(_WORD *)(inited + 46) = -4864;
    UUID.init()();
    uint64_t v17 = UUID.uuidString.getter();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v17;
    *(void *)(inited + 56) = v19;
    sub_1008F6944(inited);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [a1 addPropertiesWithDictionary:isa];

    id v21 = *(void **)(v4 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v25;
    *(void *)(v22 + 24) = a3;
    aBlock[4] = sub_1009090DC;
    aBlock[5] = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_10021BB58;
    aBlock[3] = &unk_100FF66C0;
    id v23 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v21 insertEvent:a1 withCompletionHandler:v23];
    _Block_release(v23);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100904130(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 eventType];
  if (!v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    goto LABEL_10;
  }
  uint64_t v5 = v4;
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!v8)
  {
LABEL_10:
    return swift_bridgeObjectRelease();
  }
  if (v6 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  uint64_t v14 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageHistory;
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v16 = String._bridgeToObjectiveC()();
  [a1 setProperty:isa forBodyKey:v16];

  uint64_t result = sub_10090A198();
  if (v17)
  {
    uint64_t v18 = result;
    uint64_t v19 = v17;
    uint64_t v20 = *(void *)(v2 + v14);
    if (*(void *)(v20 + 16) >= 5uLL)
    {
      swift_bridgeObjectRetain();
      *(void *)(v2 + v14) = sub_100904364(4, v20);
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(v2 + v14);
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + v14) = v20;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100073290(0, *(void *)(v20 + 16) + 1, 1, (char *)v20);
      uint64_t v20 = result;
      *(void *)(v2 + v14) = result;
    }
    unint64_t v21 = *(void *)(v20 + 16);
    unint64_t v22 = *(void *)(v20 + 24);
    unint64_t v23 = v21 + 1;
    if (v21 >= v22 >> 1)
    {
      uint64_t v25 = (char *)v20;
      unint64_t v26 = *(void *)(v20 + 16);
      uint64_t result = (uint64_t)sub_100073290((char *)(v22 > 1), v21 + 1, 1, v25);
      unint64_t v21 = v26;
      uint64_t v20 = result;
      *(void *)(v2 + v14) = result;
    }
    *(void *)(v20 + 16) = v23;
    uint64_t v24 = v20 + 16 * v21;
    *(void *)(v24 + 32) = v18;
    *(void *)(v24 + 40) = v19;
  }
  return result;
}

uint64_t sub_100904364(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v3 = result;
  if (result)
  {
    int64_t v4 = *(void *)(a2 + 16) >= result ? result : *(void *)(a2 + 16);
    sub_100076F88(0, v4, 0);
    uint64_t v5 = *(void *)(a2 + 16);
    if (v5)
    {
      uint64_t result = swift_bridgeObjectRetain();
      unint64_t v6 = 0;
      unint64_t v7 = 0;
      uint64_t v8 = -v5;
      uint64_t v20 = v5;
      do
      {
LABEL_8:
        if (v7 >= *(void *)(a2 + 16)) {
          goto LABEL_39;
        }
        uint64_t v9 = (uint64_t *)(a2 + 32 + 16 * v7);
        uint64_t v11 = *v9;
        uint64_t v10 = v9[1];
        unint64_t v12 = _swiftEmptyArrayStorage[2];
        if ((uint64_t)v12 < v3)
        {
          ++v7;
LABEL_22:
          unint64_t v15 = _swiftEmptyArrayStorage[3];
          int64_t v21 = v12 + 1;
          uint64_t result = swift_bridgeObjectRetain();
          if (v12 >= v15 >> 1) {
            uint64_t result = (uint64_t)sub_100076F88((char *)(v15 > 1), v21, 1);
          }
          _swiftEmptyArrayStorage[2] = v21;
          NSString v16 = &_swiftEmptyArrayStorage[2 * v12];
          v16[4] = v11;
          v16[5] = v10;
        }
        else
        {
          uint64_t result = swift_bridgeObjectRetain();
          if (v6 >= v12) {
            goto LABEL_40;
          }
          uint64_t v13 = &_swiftEmptyArrayStorage[2 * v6 + 4];
          uint64_t result = swift_bridgeObjectRelease();
          *uint64_t v13 = v11;
          v13[1] = v10;
          if ((uint64_t)++v6 >= v3)
          {
            if (v7 + 1 == v20)
            {
LABEL_30:
              swift_bridgeObjectRelease();
              goto LABEL_31;
            }
            uint64_t v14 = (uint64_t *)(a2 + 56 + 16 * v7);
            v7 += 2;
            while (v7 - 1 < *(void *)(a2 + 16))
            {
              uint64_t v11 = *(v14 - 1);
              uint64_t v10 = *v14;
              unint64_t v12 = _swiftEmptyArrayStorage[2];
              if ((uint64_t)v12 < v3)
              {
                unint64_t v6 = 0;
                goto LABEL_22;
              }
              swift_bridgeObjectRetain();
              uint64_t result = swift_bridgeObjectRelease();
              _swiftEmptyArrayStorage[4] = v11;
              _swiftEmptyArrayStorage[5] = v10;
              if (v3 > 1)
              {
                unint64_t v6 = 1;
                if (v8 + v7) {
                  goto LABEL_8;
                }
                swift_bridgeObjectRelease();
                unint64_t v6 = 1;
                goto LABEL_34;
              }
              ++v7;
              v14 += 2;
              if (v8 + v7 == 1) {
                goto LABEL_30;
              }
            }
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          ++v7;
        }
      }
      while (v7 != v20);
      swift_bridgeObjectRelease();
      if (v6)
      {
LABEL_34:
        int64_t v17 = _swiftEmptyArrayStorage[2];
        uint64_t result = (uint64_t)sub_100076F88(0, v17, 0);
        if (v17 < (uint64_t)v6) {
          goto LABEL_42;
        }
        if ((v6 & 0x8000000000000000) == 0)
        {
          unint64_t v18 = _swiftEmptyArrayStorage[2];
          if (v18 >= v6 && v18 >= v17)
          {
            uint64_t v19 = swift_retain();
            sub_1009055D8(v19, (uint64_t)&_swiftEmptyArrayStorage[4], v6, (2 * v17) | 1);
            swift_bridgeObjectRelease();
            swift_release();
            sub_1009055D8((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage[4], 0, (2 * v6) | 1);
            swift_release();
            return (uint64_t)_swiftEmptyArrayStorage;
          }
          goto LABEL_44;
        }
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        return result;
      }
    }
  }
LABEL_31:
  swift_bridgeObjectRelease();
  return (uint64_t)_swiftEmptyArrayStorage;
}

id MetricsReportingController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MetricsReportingController();
  return [super dealloc];
}

uint64_t sub_100904754()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 propertyForBodyKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10007664C(&v4, v5);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_100063814((uint64_t *)&unk_1010C0270);
  sub_100057778(0, &qword_1010BFE48);
  if (swift_dynamicCast()) {
    return v4;
  }
  else {
    return 0;
  }
}

unint64_t sub_100904828(uint64_t a1)
{
  type metadata accessor for UUID();
  sub_100909060(&qword_1010C3760);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();

  return sub_10090491C(a1, v2);
}

unint64_t sub_1009048AC(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1 + 1);
  Swift::Int v2 = Hasher._finalize()();

  return sub_1000694B8(a1, v2);
}

unint64_t sub_10090491C(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v19 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    uint64_t v13 = v5 + 16;
    unint64_t v12 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    do
    {
      v12(v8, *(void *)(v21 + 48) + v15 * v10, v4, v6);
      sub_100909060(&qword_1010BFE38);
      char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v8, v4);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v19 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t _s9MusicCore12MetricsEventV5ClickV13ActionContextO21__derived_enum_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2)
  {
    case 0:
      if (a4) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 1:
      if (a4 != 1) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a4 != 2) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a4 != 3) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 4:
      if (a4 != 4) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 5:
      if (a4 != 5) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 6:
      if (a4 != 6) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 7:
      if (a4 != 7) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 8:
      if (a4 != 8) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 9:
      if (a4 != 9) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    default:
      if (a4 < 0xA)
      {
LABEL_26:
        uint64_t result = 0;
      }
      else if (a1 == a3 && a2 == a4)
      {
        uint64_t result = 1;
      }
      else
      {
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      break;
  }
  return result;
}

uint64_t sub_100904BE8(unint64_t a1)
{
  if (a1 <= 1) {
    return dispatch thunk of CustomStringConvertible.description.getter();
  }
  if (a1 - 5 > 0xFFFFFFFFFFFFFFFCLL) {
    return 3419442;
  }
  if (a1 - 8 > 0xFFFFFFFFFFFFFFFCLL) {
    return 3616053;
  }
  if (a1 - 11 > 0xFFFFFFFFFFFFFFFCLL) {
    return 808529208;
  }
  if (a1 - 16 > 0xFFFFFFFFFFFFFFFALL) {
    return 0x35312D3131;
  }
  if (a1 - 21 > 0xFFFFFFFFFFFFFFFALL) {
    return 0x30322D3631;
  }
  if (a1 - 26 >= 0xFFFFFFFFFFFFFFFBLL) {
    return 0x35322D3132;
  }
  return 2831922;
}

unint64_t sub_100904CF4(char a1, unint64_t a2, unint64_t a3)
{
  sub_100063814(&qword_1010C0300);
  if (a1)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251F0;
    strcpy((char *)(inited + 32), "sharedActivity");
    *(unsigned char *)(inited + 47) = -18;
    *(unsigned char *)(inited + 48) = 1;
    *(void *)(inited + 72) = &type metadata for Bool;
    *(void *)(inited + 80) = 0xD00000000000001CLL;
    *(void *)(inited + 88) = 0x8000000100DCA9F0;
    *(void *)(inited + 96) = sub_100904BE8(a2);
    *(void *)(inited + 104) = v7;
    *(void *)(inited + 120) = &type metadata for String;
    *(void *)(inited + 128) = 0xD000000000000018;
    *(void *)(inited + 136) = 0x8000000100DCA530;
    uint64_t v8 = sub_100904BE8(a3);
    *(void *)(inited + 168) = &type metadata for String;
    *(void *)(inited + 144) = v8;
    *(void *)(inited + 152) = v9;
  }
  else
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251D0;
    strcpy((char *)(inited + 32), "sharedActivity");
    *(unsigned char *)(inited + 47) = -18;
    *(void *)(inited + 72) = &type metadata for Bool;
    *(unsigned char *)(inited + 48) = 0;
  }
  return sub_1008F6944(inited);
}

uint64_t _s9MusicCore12MetricsEventV10TargetTypeO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x18) {
    return 24;
  }
  else {
    return v0;
  }
}

uint64_t sub_100904E7C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s9MusicCore12MetricsEventV5ClickV10ActionTypeO8rawValueAGSgSS_tcfC_0()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x31) {
    return 49;
  }
  else {
    return v0;
  }
}

double sub_100904F30@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  [a1 domainLookupStartTime];
  double v70 = v4;
  [a1 domainLookupEndTime];
  uint64_t v6 = v5;
  [a1 connectionStartTime];
  uint64_t v8 = v7;
  [a1 secureConnectionStartTime];
  uint64_t v10 = v9;
  [a1 connectionEndTime];
  uint64_t v12 = v11;
  [a1 requestStartTime];
  uint64_t v14 = v13;
  [a1 responseStartTime];
  uint64_t v16 = v15;
  [a1 responseEndTime];
  uint64_t v18 = v17;
  [a1 fetchStartTime];
  uint64_t v20 = v19;
  id v69 = [a1 redirectCount];
  id v21 = [a1 requestUrl];
  if (v21)
  {
    unint64_t v22 = v21;
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v67 = v24;
    uint64_t v68 = v23;
  }
  else
  {
    uint64_t v67 = 0;
    uint64_t v68 = 0;
  }
  unsigned __int8 v66 = [a1 cachedResponse];
  unsigned __int8 v65 = [a1 connectionReused];
  id v25 = [a1 appleTimingApp];
  if (v25)
  {
    unint64_t v26 = v25;
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v63 = v28;
    uint64_t v64 = v27;
  }
  else
  {
    uint64_t v63 = 0;
    uint64_t v64 = 0;
  }
  id v29 = [a1 connectionType];
  if (v29)
  {
    uint64_t v30 = v29;
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v61 = v32;
    uint64_t v62 = v31;
  }
  else
  {
    uint64_t v61 = 0;
    uint64_t v62 = 0;
  }
  id v33 = [a1 edgeNodeCacheStatus];
  if (v33)
  {
    id v34 = v33;
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v59 = v36;
    uint64_t v60 = v35;
  }
  else
  {
    uint64_t v59 = 0;
    uint64_t v60 = 0;
  }
  id v37 = [a1 environmentDataCenter];
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v55 = v40;
    uint64_t v57 = v39;
  }
  else
  {
    uint64_t v55 = 0;
    uint64_t v57 = 0;
  }
  id v41 = [a1 responseDate:v55, v57];
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;
  }
  else
  {
    uint64_t v43 = 0;
    uint64_t v45 = 0;
  }
  id v46 = [a1 statusCode];
  id v47 = [a1 requestMessageSize];
  id v48 = [a1 responseMessageSize];
  id v49 = [a1 resolvedIPAddress];
  if (v49)
  {
    double v50 = v49;
    uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v53 = v52;
  }
  else
  {

    uint64_t v51 = 0;
    uint64_t v53 = 0;
  }
  double result = v70;
  *(double *)a2 = v70;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v6;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v8;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = v10;
  *(unsigned char *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = v12;
  *(unsigned char *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = v14;
  *(unsigned char *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = v16;
  *(unsigned char *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = v18;
  *(unsigned char *)(a2 + 120) = 0;
  *(void *)(a2 + 128) = v20;
  *(unsigned char *)(a2 + 136) = 0;
  *(void *)(a2 + 144) = v69;
  *(unsigned char *)(a2 + 152) = 0;
  *(void *)(a2 + 160) = v68;
  *(void *)(a2 + 168) = v67;
  *(unsigned char *)(a2 + 176) = v66;
  *(unsigned char *)(a2 + 177) = v65;
  *(void *)(a2 + 184) = v64;
  *(void *)(a2 + 192) = v63;
  *(void *)(a2 + 200) = v62;
  *(void *)(a2 + 208) = v61;
  *(void *)(a2 + 216) = v60;
  *(void *)(a2 + 224) = v59;
  *(void *)(a2 + 232) = v58;
  *(void *)(a2 + 240) = v56;
  *(void *)(a2 + 248) = v43;
  *(void *)(a2 + 256) = v45;
  *(void *)(a2 + 264) = v46;
  *(void *)(a2 + 272) = v47;
  *(void *)(a2 + 280) = v48;
  *(void *)(a2 + 288) = v51;
  *(void *)(a2 + 296) = v53;
  return result;
}

unint64_t _s9MusicCore12MetricsEventV15ComponentRenderV13PreloadStatusO8rawValueAGSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100FED4D0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_100905384(uint64_t a1)
{
  return a1;
}

uint64_t sub_100905410()
{
  return swift_deallocObject();
}

uint64_t sub_100905450()
{
  return sub_1008FED00(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_100FF67E8, (uint64_t (*)(void))sub_10090917C);
}

uint64_t sub_100905488()
{
  return sub_1008FED00(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_100FF67C0, sub_10090922C);
}

uint64_t sub_1009054C0()
{
  return sub_1008FED00(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_100FF6798, sub_10090922C);
}

uint64_t sub_1009054F8()
{
  return sub_1008FED00(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_100FF6770, sub_10090922C);
}

uint64_t sub_100905530()
{
  return sub_1008FED00(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_100FF6748, (uint64_t (*)(void))sub_100909174);
}

uint64_t sub_100905568()
{
  return sub_1008FED00(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_100FF6720, (uint64_t (*)(void))sub_10090913C);
}

uint64_t sub_1009055A0()
{
  return sub_1008FED00(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_100FF66F8, (uint64_t (*)(void))sub_100909104);
}

void sub_1009055D8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v7 = *v4;
  int64_t v8 = *(void *)(*v4 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *double v4 = v7;
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v7 + 24) >> 1) {
    goto LABEL_8;
  }
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9) {
        int64_t v12 = v8 + v6;
      }
      else {
        int64_t v12 = v8;
      }
      char isUniquelyReferenced_nonNull_native = sub_100076F88(isUniquelyReferenced_nonNull_native, v12, 1);
      uint64_t v7 = *v4;
      if (v5 != a3) {
        goto LABEL_12;
      }
    }
    goto LABEL_16;
  }
LABEL_12:
  if ((*(void *)(v7 + 24) >> 1) - *(void *)(v7 + 16) < v6) {
    goto LABEL_19;
  }
  swift_arrayInitWithCopy();
  if (v6 <= 0)
  {
LABEL_16:
    *double v4 = v7;
    return;
  }
  uint64_t v13 = *(void *)(v7 + 16);
  BOOL v14 = __OFADD__(v13, v6);
  uint64_t v15 = v13 + v6;
  if (!v14)
  {
    *(void *)(v7 + 16) = v15;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_1009056D8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_100905728()
{
  sub_100902500(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t type metadata accessor for MetricsReportingController()
{
  return self;
}

unint64_t sub_100905760()
{
  unint64_t result = qword_1010BFC28;
  if (!qword_1010BFC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BFC28);
  }
  return result;
}

unint64_t sub_1009057B8()
{
  unint64_t result = qword_1010BFC30;
  if (!qword_1010BFC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BFC30);
  }
  return result;
}

unint64_t sub_100905810()
{
  unint64_t result = qword_1010BFC38;
  if (!qword_1010BFC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BFC38);
  }
  return result;
}

unint64_t sub_100905868()
{
  unint64_t result = qword_1010BFC40;
  if (!qword_1010BFC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BFC40);
  }
  return result;
}

unint64_t sub_1009058C0()
{
  unint64_t result = qword_1010BFC48;
  if (!qword_1010BFC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BFC48);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent()
{
  return &type metadata for MetricsEvent;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.TargetType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE9) {
    goto LABEL_17;
  }
  if (a2 + 23 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 23) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 23;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x18;
  int v8 = v6 - 24;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MetricsEvent.TargetType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE8)
  {
    unsigned int v6 = ((a2 - 233) >> 8) + 1;
    *unint64_t result = a2 + 23;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100905A80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 23;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.TargetType()
{
  return &type metadata for MetricsEvent.TargetType;
}

void *initializeBufferWithCopyOfBuffer for MetricsEvent.Page(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100063814(&qword_1010BCBE0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    uint64_t v17 = (void *)((char *)v4 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    id v21 = (void *)((char *)v4 + v20);
    unint64_t v22 = (void *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *id v21 = *v22;
    v21[1] = v23;
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

void *assignWithCopy for MetricsEvent.Page(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100063814(&qword_1010BCBE0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

_OWORD *initializeWithTake for MetricsEvent.Page(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100063814(&qword_1010BCBE0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  uint64_t v14 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

void *assignWithTake for MetricsEvent.Page(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_100063814(&qword_1010BCBE0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  void *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Page(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10090626C);
}

uint64_t sub_10090626C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010BCBE0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100906320(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010BCBE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MetricsEvent.Page.DisplayType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100906468);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Page.DisplayType()
{
  return &type metadata for MetricsEvent.Page.DisplayType;
}

void *initializeBufferWithCopyOfBuffer for MetricsEvent.Click(uint64_t a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    uint64_t v8 = a3[7];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    uint64_t v51 = v13;
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100063814(&qword_1010BCBE0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[9];
    *(void *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    uint64_t v17 = (void *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    unint64_t v19 = *(uint64_t *)((char *)a2 + v16 + 8);
    swift_bridgeObjectRetain();
    if (v19 > 0xA)
    {
      *uint64_t v17 = *v18;
      v17[1] = v19;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    }
    uint64_t v20 = a3[10];
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    uint64_t v23 = *(unsigned __int16 *)(v22 + 24);
    if (v23 >> 8 <= 0xFE)
    {
      id v24 = *(id *)v22;
      uint64_t v25 = *(void *)(v22 + 8);
      uint64_t v50 = v12;
      uint64_t v26 = v11;
      uint64_t v27 = *(void *)(v22 + 16);
      sub_1004CF5D0(*(id *)v22, v25, v27, v23, SBYTE1(v23));
      *(void *)uint64_t v21 = v24;
      *((void *)v21 + 1) = v25;
      *((void *)v21 + 2) = v27;
      uint64_t v11 = v26;
      uint64_t v12 = v50;
      *((_WORD *)v21 + 12) = v23;
    }
    else
    {
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      *(_OWORD *)(v21 + 10) = *(_OWORD *)(v22 + 10);
    }
    uint64_t v28 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    id v29 = (void *)((char *)v4 + v28);
    uint64_t v30 = (uint64_t *)((char *)a2 + v28);
    uint64_t v31 = v30[1];
    void *v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = a3[13];
    uint64_t v33 = a3[14];
    id v34 = (void *)((char *)v4 + v32);
    uint64_t v35 = (uint64_t *)((char *)a2 + v32);
    uint64_t v36 = v35[1];
    *id v34 = *v35;
    v34[1] = v36;
    id v37 = (char *)v4 + v33;
    uint64_t v38 = (char *)a2 + v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v51(v38, 1, v11))
    {
      uint64_t v39 = sub_100063814(&qword_1010BCBE0);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v37, v38, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v37, 0, 1, v11);
    }
    uint64_t v40 = a3[16];
    *(void *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *((unsigned char *)v4 + v40) = *((unsigned char *)a2 + v40);
    uint64_t v41 = a3[18];
    *((unsigned char *)v4 + a3[17]) = *((unsigned char *)a2 + a3[17]);
    uint64_t v42 = (void *)((char *)v4 + v41);
    uint64_t v43 = (uint64_t *)((char *)a2 + v41);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = a3[20];
    *((unsigned char *)v4 + a3[19]) = *((unsigned char *)a2 + a3[19]);
    id v46 = (void *)((char *)v4 + v45);
    id v47 = (uint64_t *)((char *)a2 + v45);
    uint64_t v48 = v47[1];
    *id v46 = *v47;
    v46[1] = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MetricsEvent.Click(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[9] + 8) >= 0xBuLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = a1 + a2[10];
  uint64_t v9 = *(unsigned __int16 *)(v8 + 24);
  if (v9 >> 8 <= 0xFE) {
    sub_1004CF644(*(void **)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), v9, SBYTE1(v9));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[14];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  id v49 = v12;
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100063814(&qword_1010BCBE0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  unint64_t v17 = *(void *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  if (v17 > 0xA)
  {
    *uint64_t v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(unsigned __int16 *)(v20 + 24);
  if (v21 >> 8 <= 0xFE)
  {
    id v22 = *(id *)v20;
    uint64_t v23 = *(void *)(v20 + 8);
    uint64_t v48 = v11;
    uint64_t v24 = v10;
    uint64_t v25 = *(void *)(v20 + 16);
    sub_1004CF5D0(*(id *)v20, v23, v25, v21, SBYTE1(v21));
    *(void *)uint64_t v19 = v22;
    *(void *)(v19 + 8) = v23;
    *(void *)(v19 + 16) = v25;
    uint64_t v10 = v24;
    uint64_t v11 = v48;
    *(_WORD *)(v19 + 24) = v21;
  }
  else
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 10) = *(_OWORD *)(v20 + 10);
  }
  uint64_t v26 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = a3[13];
  uint64_t v31 = a3[14];
  uint64_t v32 = (void *)(a1 + v30);
  uint64_t v33 = (void *)(a2 + v30);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = (void *)(a1 + v31);
  uint64_t v36 = (const void *)(a2 + v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v49(v36, 1, v10))
  {
    uint64_t v37 = sub_100063814(&qword_1010BCBE0);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v35, v36, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v35, 0, 1, v10);
  }
  uint64_t v38 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v38) = *(unsigned char *)(a2 + v38);
  uint64_t v39 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  uint64_t v42 = v41[1];
  void *v40 = *v41;
  v40[1] = v42;
  uint64_t v43 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  uint64_t v46 = v45[1];
  void *v44 = *v45;
  v44[1] = v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  uint64_t v61 = v11;
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100063814(&qword_1010BCBE0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  unint64_t v18 = *(void *)(a1 + v15 + 8);
  unint64_t v19 = *(void *)(a2 + v15 + 8);
  if (v18 == 10)
  {
    if (v19 > 0xA) {
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  if (v19 == 10)
  {
    sub_1001E9668(v16);
LABEL_18:
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    goto LABEL_19;
  }
  if (v18 < 0xA)
  {
    if (v19 >= 0xA)
    {
LABEL_14:
      *(void *)uint64_t v16 = *(void *)v17;
      *(void *)(v16 + 8) = *(void *)(v17 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v19 < 0xA)
  {
    sub_1000637B8(v16, &qword_1010BD9A8);
    goto LABEL_18;
  }
  *(void *)uint64_t v16 = *(void *)v17;
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  id v22 = (long long *)(a2 + v20);
  uint64_t v23 = *(unsigned __int16 *)(a2 + v20 + 24);
  unsigned int v24 = v23 >> 8;
  if (*(unsigned __int8 *)(a1 + v20 + 25) == 255)
  {
    if (v24 <= 0xFE)
    {
      uint64_t v57 = v10;
      uint64_t v59 = v9;
      uint64_t v27 = *(void **)v22;
      uint64_t v28 = *((void *)v22 + 1);
      uint64_t v29 = *((void *)v22 + 2);
      sub_1004CF5D0(v27, v28, v29, v23, SBYTE1(v23));
      *(void *)uint64_t v21 = v27;
      *(void *)(v21 + 8) = v28;
      uint64_t v10 = v57;
      uint64_t v9 = v59;
      *(void *)(v21 + 16) = v29;
      *(_WORD *)(v21 + 24) = v23;
    }
    else
    {
      long long v25 = *v22;
      *(_OWORD *)(v21 + 10) = *(long long *)((char *)v22 + 10);
      *(_OWORD *)uint64_t v21 = v25;
    }
  }
  else if (v24 <= 0xFE)
  {
    uint64_t v58 = v10;
    uint64_t v60 = v9;
    uint64_t v30 = *(void **)v22;
    uint64_t v31 = *((void *)v22 + 1);
    uint64_t v32 = *((void *)v22 + 2);
    sub_1004CF5D0(v30, v31, v32, v23, SBYTE1(v23));
    uint64_t v33 = *(void **)v21;
    uint64_t v34 = *(void *)(v21 + 8);
    uint64_t v35 = *(void *)(v21 + 16);
    *(void *)uint64_t v21 = v30;
    *(void *)(v21 + 8) = v31;
    uint64_t v10 = v58;
    uint64_t v9 = v60;
    *(void *)(v21 + 16) = v32;
    uint64_t v36 = *(unsigned __int8 *)(v21 + 24);
    *(unsigned char *)(v21 + 24) = v23;
    char v37 = *(unsigned char *)(v21 + 25);
    *(unsigned char *)(v21 + 25) = BYTE1(v23);
    sub_1004CF644(v33, v34, v35, v36, v37);
  }
  else
  {
    sub_100907288(v21);
    long long v26 = *(long long *)((char *)v22 + 10);
    *(_OWORD *)uint64_t v21 = *v22;
    *(_OWORD *)(v21 + 10) = v26;
  }
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[12];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  *uint64_t v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[13];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[14];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  int v47 = v61((void *)(a1 + v44), 1, v9);
  int v48 = v61(v46, 1, v9);
  if (!v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v45, v46, v9);
      goto LABEL_32;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v45, v9);
    goto LABEL_31;
  }
  if (v48)
  {
LABEL_31:
    uint64_t v49 = sub_100063814(&qword_1010BCBE0);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v45, v46, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v45, 0, 1, v9);
LABEL_32:
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  uint64_t v50 = a3[18];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (void *)(a2 + v50);
  void *v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v53 = a3[20];
  NSString v54 = (void *)(a1 + v53);
  uint64_t v55 = (void *)(a2 + v53);
  *NSString v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100907288(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100063814(&qword_1010BCBE0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = a3[10];
  uint64_t v15 = a3[11];
  uint64_t v16 = (_OWORD *)(a1 + v14);
  uint64_t v17 = (_OWORD *)(a2 + v14);
  *uint64_t v16 = *v17;
  *(_OWORD *)((char *)v16 + 10) = *(_OWORD *)((char *)v17 + 10);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v18 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  uint64_t v19 = a3[14];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  if (v11((const void *)(a2 + v19), 1, v9))
  {
    uint64_t v22 = sub_100063814(&qword_1010BCBE0);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v20, v21, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
  }
  uint64_t v23 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  uint64_t v25 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  return a1;
}

uint64_t assignWithTake for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100063814(&qword_1010BCBE0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (_OWORD *)(a2 + v16);
  unint64_t v19 = *(void *)(a1 + v16 + 8);
  unint64_t v20 = *(void *)(a2 + v16 + 8);
  if (v19 == 10)
  {
LABEL_13:
    *(_OWORD *)uint64_t v17 = *v18;
    goto LABEL_14;
  }
  if (v20 == 10)
  {
    sub_1001E9668(v17);
    goto LABEL_13;
  }
  if (v19 < 0xA) {
    goto LABEL_13;
  }
  if (v20 < 0xA)
  {
    sub_1000637B8(v17, &qword_1010BD9A8);
    goto LABEL_13;
  }
  *(void *)uint64_t v17 = *(void *)v18;
  *(void *)(v17 + 8) = v20;
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(unsigned __int16 *)(a1 + v21 + 24);
  if (v24 >> 8 > 0xFE)
  {
LABEL_17:
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 10) = *(_OWORD *)(v23 + 10);
    goto LABEL_19;
  }
  unsigned int v25 = *(unsigned __int16 *)(v23 + 24);
  if (v25 >> 8 > 0xFE)
  {
    sub_100907288(v22);
    goto LABEL_17;
  }
  uint64_t v26 = *(void *)(v23 + 16);
  uint64_t v27 = *(void **)v22;
  uint64_t v28 = *(void *)(v22 + 8);
  uint64_t v29 = *(void *)(v22 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(void *)(v22 + 16) = v26;
  *(_WORD *)(v22 + 24) = v25;
  sub_1004CF644(v27, v28, v29, v24, SBYTE1(v24));
LABEL_19:
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[12];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *uint64_t v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[13];
  uint64_t v36 = (void *)(a1 + v35);
  char v37 = (uint64_t *)(a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  void *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[14];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  int v43 = v12((void *)(a1 + v40), 1, v10);
  int v44 = v12(v42, 1, v10);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v41, v42, v10);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v41, v10);
    goto LABEL_24;
  }
  if (v44)
  {
LABEL_24:
    uint64_t v45 = sub_100063814(&qword_1010BCBE0);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v41, v42, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v41, 0, 1, v10);
LABEL_25:
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v46) = *(unsigned char *)(a2 + v46);
  uint64_t v47 = a3[18];
  int v48 = (void *)(a1 + v47);
  uint64_t v49 = (uint64_t *)(a2 + v47);
  uint64_t v51 = *v49;
  uint64_t v50 = v49[1];
  *int v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease();
  uint64_t v52 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v53 = (void *)(a1 + v52);
  NSString v54 = (uint64_t *)(a2 + v52);
  uint64_t v56 = *v54;
  uint64_t v55 = v54[1];
  *uint64_t v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100907964);
}

uint64_t sub_100907964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010BCBE0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100907A2C);
}

uint64_t sub_100907A2C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010BCBE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100907AD8()
{
  sub_1000116F0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD0) {
    goto LABEL_17;
  }
  if (a2 + 48 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 48) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 48;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 48;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 48;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x31;
  int v8 = v6 - 49;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MetricsEvent.Click.ActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 48 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 48) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xCF)
  {
    unsigned int v6 = ((a2 - 208) >> 8) + 1;
    *unint64_t result = a2 + 48;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100907D34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 48;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionType()
{
  return &type metadata for MetricsEvent.Click.ActionType;
}

unint64_t destroy for MetricsEvent.Click.ActionContext(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9MusicCore12MetricsEventV5ClickV13ActionContextOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for MetricsEvent.Click.ActionContext(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MetricsEvent.Click.ActionContext(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF5 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483638);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 9;
  if (v4 >= 0xB) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click.ActionContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF6)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483638;
    if (a3 >= 0x7FFFFFF6) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF6) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 9;
    }
  }
  return result;
}

void *sub_100907F84(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionContext()
{
  return &type metadata for MetricsEvent.Click.ActionContext;
}

void *destroy for MetricsEvent.Click.ActionDetails(uint64_t a1)
{
  return sub_1004CF644(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(unsigned char *)(a1 + 25));
}

uint64_t initializeWithCopy for MetricsEvent.Click.ActionDetails(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 25);
  uint64_t v7 = *(unsigned __int8 *)(a2 + 24);
  sub_1004CF5D0(*(id *)a2, v4, v5, v7, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v6;
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.Click.ActionDetails(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 25);
  uint64_t v7 = *(unsigned __int8 *)(a2 + 24);
  sub_1004CF5D0(*(id *)a2, v4, v5, v7, v6);
  int v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  uint64_t v11 = *(unsigned __int8 *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  char v12 = *(unsigned char *)(a1 + 25);
  *(unsigned char *)(a1 + 25) = v6;
  sub_1004CF644(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for MetricsEvent.Click.ActionDetails(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MetricsEvent.Click.ActionDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  __int16 v4 = *(_WORD *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 25);
  uint64_t v9 = *(unsigned __int8 *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v4;
  sub_1004CF644(v5, v7, v6, v9, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionDetails(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 26)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 25);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click.ActionDetails(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 26) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 25) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1009081B0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 25) <= 3u) {
    return *(unsigned __int8 *)(a1 + 25);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1009081C8(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 4;
    LOBYTE(a2) = 4;
    *(unsigned char *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 25) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails()
{
  return &type metadata for MetricsEvent.Click.ActionDetails;
}

id *destroy for MetricsEvent.Click.ActionDetails.SearchSource(id *result)
{
  if ((unint64_t)*result >= 0xFFFFFFFF)
  {

    return (id *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9MusicCore12MetricsEventV5ClickV13ActionDetailsO12SearchSourceOwCP_0(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 8);
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    id v6 = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t a1, long long *a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1 < 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      id v7 = v5;
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v8 = *a2;
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(_OWORD *)a1 = v8;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(void *)a1 = v5;
  id v6 = v5;

  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for ApplicationCapabilities.Tabs(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {

    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    return a1;
  }
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

void *sub_1009084B8(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
    result[2] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *__n128 result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.SearchSource()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.SearchSource;
}

uint64_t destroy for MetricsEvent.LoadUrl()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MetricsEvent.LoadUrl(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v3 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  uint64_t v4 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v4;
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  uint64_t v5 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v5;
  uint64_t v6 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v6;
  uint64_t v7 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v7;
  uint64_t v8 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v8;
  uint64_t v9 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v9;
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  uint64_t v10 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.LoadUrl(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = a2[6];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = a2[8];
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = a2[10];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = a2[12];
  *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
  *(void *)(a1 + 96) = v10;
  uint64_t v11 = a2[14];
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  *(void *)(a1 + 112) = v11;
  uint64_t v12 = a2[16];
  *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
  *(void *)(a1 + 128) = v12;
  uint64_t v13 = a2[18];
  *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
  *(void *)(a1 + 144) = v13;
  *(void *)(a1 + 160) = a2[20];
  *(void *)(a1 + 168) = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
  *(unsigned char *)(a1 + 177) = *((unsigned char *)a2 + 177);
  *(void *)(a1 + 184) = a2[23];
  *(void *)(a1 + 192) = a2[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = a2[25];
  *(void *)(a1 + 208) = a2[26];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = a2[27];
  *(void *)(a1 + 224) = a2[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = a2[29];
  *(void *)(a1 + 240) = a2[30];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = a2[31];
  *(void *)(a1 + 256) = a2[32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = a2[33];
  *(void *)(a1 + 272) = a2[34];
  *(void *)(a1 + 280) = a2[35];
  *(void *)(a1 + 288) = a2[36];
  *(void *)(a1 + 296) = a2[37];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for MetricsEvent.LoadUrl(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x130uLL);
}

uint64_t assignWithTake for MetricsEvent.LoadUrl(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  uint64_t v5 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
  uint64_t v6 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  uint64_t v11 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.LoadUrl(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 304)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 168);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.LoadUrl(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 296) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 304) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 304) = 0;
    }
    if (a2) {
      *(void *)(result + 168) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.LoadUrl()
{
  return &type metadata for MetricsEvent.LoadUrl;
}

void destroy for MetricsEvent.ComponentRender(uint64_t a1)
{
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 64);
}

uint64_t initializeWithCopy for MetricsEvent.ComponentRender(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  int v4 = *(void **)(a2 + 24);
  uint64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void **)(a2 + 40);
  uint64_t v7 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void **)(a2 + 56);
  uint64_t v9 = *(void **)(a2 + 64);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  id v10 = v4;
  id v11 = v5;
  id v12 = v6;
  id v13 = v7;
  id v14 = v8;
  id v15 = v9;
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.ComponentRender(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  int v4 = *(void **)(a1 + 24);
  uint64_t v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 32);
  uint64_t v8 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 40);
  id v11 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v11;
  id v12 = v11;

  id v13 = *(void **)(a2 + 48);
  id v14 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v13;
  id v15 = v13;

  uint64_t v16 = *(void **)(a1 + 56);
  uint64_t v17 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v17;
  id v18 = v17;

  unint64_t v19 = *(void **)(a1 + 64);
  unint64_t v20 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v20;
  id v21 = v20;

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

__n128 initializeWithTake for MetricsEvent.ComponentRender(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for MetricsEvent.ComponentRender(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);

  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  id v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  uint64_t v7 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.ComponentRender(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.ComponentRender(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.ComponentRender()
{
  return &type metadata for MetricsEvent.ComponentRender;
}

unsigned char *storeEnumTagSinglePayload for MetricsEvent.ComponentRender.PreloadStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100908EE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.ComponentRender.PreloadStatus()
{
  return &type metadata for MetricsEvent.ComponentRender.PreloadStatus;
}

uint64_t sub_100908F1C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100908F54(void *a1)
{
  return sub_100903388(a1, v1);
}

uint64_t sub_100908F5C()
{
  return sub_100903488();
}

void sub_100908F68()
{
  sub_10090342C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100908F70()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100908FB0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_1000154F4;
  v3[11] = v2;
  return _swift_task_switch(sub_1009036C4, 0, 0);
}

uint64_t sub_100909060(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for UUID();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009090A4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1009090DC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_100909104()
{
  sub_100901E0C(*(void *)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageRenderEventSampler, (uint64_t (*)(void *))sub_1008F98F4);
}

void sub_10090913C()
{
  sub_100901E0C(*(void *)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&OBJC_IVAR____TtC9MusicCore26MetricsReportingController_componentRenderEventSampler, (uint64_t (*)(void *))sub_1008F93A0);
}

void sub_100909174()
{
  sub_1009009A8(*(void **)(v0 + 16));
}

void sub_10090917C()
{
  sub_100903DD4(*(void **)(v0 + 24), (uint64_t)UIScreen.Dimensions.size.getter, 0);
}

uint64_t sub_100909230(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v5 = ActionType.rawValue.getter(*(unsigned char *)(a2 + 32));
  uint64_t v7 = v6;
  if (v5 == ActionType.rawValue.getter(a1) && v7 == v8)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v12 = 33;
  while (1)
  {
    uint64_t v13 = v12 - 31;
    if (__OFADD__(v12 - 32, 1)) {
      break;
    }
    uint64_t v14 = ActionType.rawValue.getter(*(unsigned char *)(a2 + v12));
    uint64_t v16 = v15;
    if (v14 == ActionType.rawValue.getter(a1) && v16 == v17)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_7;
    }
    ++v12;
    if (v13 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100909388(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (2)
  {
    uint64_t v6 = a2 + v5++;
    unint64_t v7 = 0xD000000000000029;
    unint64_t v8 = 0x8000000100DAC960;
    switch(*(unsigned char *)(v6 + 32))
    {
      case 1:
        unint64_t v7 = 0xD000000000000025;
        unint64_t v8 = 0x8000000100DAC990;
        break;
      case 2:
        unint64_t v7 = 0xD000000000000023;
        unint64_t v8 = 0x8000000100DAC9C0;
        break;
      case 3:
        unint64_t v7 = 0xD000000000000022;
        unint64_t v8 = 0x8000000100DAC9F0;
        break;
      case 4:
        id v9 = "LibraryView.Albums";
        goto LABEL_14;
      case 5:
        unint64_t v7 = 0xD000000000000026;
        unint64_t v8 = 0x8000000100DACA50;
        break;
      case 6:
        unint64_t v7 = 0xD000000000000027;
        unint64_t v8 = 0x8000000100DACA80;
        break;
      case 7:
        unint64_t v7 = 0xD000000000000022;
        unint64_t v8 = 0x8000000100DACAB0;
        break;
      case 8:
        unint64_t v7 = 0xD000000000000028;
        unint64_t v8 = 0x8000000100DACAE0;
        break;
      case 9:
        unint64_t v7 = 0xD000000000000025;
        unint64_t v8 = 0x8000000100DACB10;
        break;
      case 0xA:
        id v9 = "LibraryView.Composers";
LABEL_14:
        unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
        unint64_t v7 = 0xD000000000000021;
        break;
      case 0xB:
        unint64_t v7 = 0xD000000000000026;
        unint64_t v8 = 0x8000000100DACB70;
        break;
      case 0xC:
        unint64_t v7 = 0xD000000000000027;
        unint64_t v8 = 0x8000000100DACBA0;
        break;
      default:
        break;
    }
    unint64_t v10 = 0xD000000000000029;
    unint64_t v11 = 0x8000000100DAC960;
    switch(a1)
    {
      case 1:
        unint64_t v12 = 0xD000000000000025;
        uint64_t v13 = "LibraryView.RecentlyAdded";
        goto LABEL_27;
      case 2:
        unint64_t v12 = 0xD000000000000023;
        uint64_t v13 = "LibraryView.Playlists";
        goto LABEL_27;
      case 3:
        unint64_t v12 = 0xD000000000000022;
        uint64_t v13 = "LibraryView.Artists";
        goto LABEL_27;
      case 4:
        uint64_t v14 = "LibraryView.Albums";
        goto LABEL_30;
      case 5:
        unint64_t v12 = 0xD000000000000026;
        uint64_t v13 = "LibraryView.Songs";
        goto LABEL_27;
      case 6:
        unint64_t v12 = 0xD000000000000027;
        uint64_t v13 = "LibraryView.MadeForYou";
        goto LABEL_27;
      case 7:
        unint64_t v12 = 0xD000000000000022;
        uint64_t v13 = "LibraryView.MusicVideos";
        goto LABEL_27;
      case 8:
        unint64_t v12 = 0xD000000000000028;
        uint64_t v13 = "LibraryView.Genres";
        goto LABEL_27;
      case 9:
        unint64_t v12 = 0xD000000000000025;
        uint64_t v13 = "LibraryView.Compilations";
LABEL_27:
        unint64_t v11 = (unint64_t)v13 | 0x8000000000000000;
        if (v7 != v12) {
          goto LABEL_35;
        }
        goto LABEL_34;
      case 10:
        uint64_t v14 = "LibraryView.Composers";
LABEL_30:
        unint64_t v11 = (unint64_t)v14 | 0x8000000000000000;
        if (v7 != 0xD000000000000021) {
          goto LABEL_35;
        }
        goto LABEL_34;
      case 11:
        unint64_t v10 = 0xD000000000000026;
        unint64_t v11 = 0x8000000100DACB70;
        goto LABEL_33;
      case 12:
        unint64_t v11 = 0x8000000100DACBA0;
        if (v7 != 0xD000000000000027) {
          goto LABEL_35;
        }
        goto LABEL_34;
      default:
LABEL_33:
        if (v7 != v10) {
          goto LABEL_35;
        }
LABEL_34:
        if (v8 == v11)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 1;
        }
LABEL_35:
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          if (v2 == v5)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        return 1;
    }
  }
}

double Double.toMilliseconds.getter(double a1)
{
  return a1 * 1000.0;
}

uint64_t MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v16 = (int *)type metadata accessor for MetricsPageProperties();
  uint64_t v17 = (uint64_t)a9 + v16[6];
  uint64_t v18 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = v16[7];
  *(void *)((char *)a9 + v19) = 0;
  unint64_t v20 = (void *)((char *)a9 + v16[8]);
  *unint64_t v20 = 0;
  v20[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  sub_1000345DC(a5, v17);
  swift_bridgeObjectRelease();
  *(void *)((char *)a9 + v19) = a6;
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v20 = a7;
  v20[1] = a8;
  return result;
}

uint64_t sub_100909860(void *a1)
{
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (v2)
  {
    id v3 = [v2 innermostModelObject];
LABEL_3:
    uint64_t v4 = sub_100909860(v3);

    uint64_t v5 = 0;
LABEL_8:
    unsigned __int8 v27 = v4;
LABEL_9:
    sub_10006ADFC((uint64_t)v5);
    return v4;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v5 = 0;
    uint64_t v4 = 3;
    goto LABEL_8;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v5 = 0;
    uint64_t v4 = 4;
    goto LABEL_8;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v4 = 0;
    uint64_t v5 = 0;
    unsigned __int8 v27 = 0;
    goto LABEL_9;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v5 = 0;
    uint64_t v4 = 8;
    goto LABEL_8;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v5 = 0;
    uint64_t v4 = 10;
    goto LABEL_8;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v5 = 0;
    uint64_t v4 = 11;
    goto LABEL_8;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v5 = 0;
    uint64_t v4 = 1;
    goto LABEL_8;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v5 = 0;
    uint64_t v4 = 12;
    goto LABEL_8;
  }
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (v7)
  {
    uint64_t v8 = v7;
    unsigned __int8 v27 = 2;
    id v9 = self;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = &v27;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_10090FD60;
    *(void *)(v11 + 24) = v10;
    unsigned int v25 = sub_10013DD14;
    uint64_t v26 = v11;
    aBlock = _NSConcreteStackBlock;
    unint64_t v22 = 1107296256;
    uint64_t v23 = sub_10007A61C;
    uint64_t v24 = &unk_100FF6F20;
    unint64_t v12 = _Block_copy(&aBlock);
    id v13 = a1;
    swift_retain();
    swift_release();
    [v9 performWithoutEnforcement:v12];

    _Block_release(v12);
    LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v13 & 1) == 0)
    {
      uint64_t v5 = sub_10090FD60;
      uint64_t v4 = v27;
      goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
    self;
    if (swift_dynamicCastObjCClass())
    {

      uint64_t v5 = 0;
      uint64_t v4 = 6;
      goto LABEL_8;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {

      uint64_t v5 = 0;
      uint64_t v4 = 7;
      goto LABEL_8;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {

      uint64_t v5 = 0;
      uint64_t v4 = 5;
      goto LABEL_8;
    }
    self;
    uint64_t v14 = (void *)swift_dynamicCastObjCClass();
    if (v14)
    {
      id v15 = [v14 innermostModelObject];
      self;
      if (swift_dynamicCastObjCClass())
      {

        uint64_t v5 = 0;
        uint64_t v4 = 17;
        goto LABEL_8;
      }
      id v3 = v15;
      goto LABEL_3;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {

      uint64_t v5 = 0;
      uint64_t v4 = 19;
      goto LABEL_8;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {

      uint64_t v5 = 0;
      uint64_t v4 = 9;
      goto LABEL_8;
    }
  }
  aBlock = 0;
  unint64_t v22 = 0xE000000000000000;
  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease();
  aBlock = (void **)0xD00000000000002BLL;
  unint64_t v22 = 0x8000000100DCAFA0;
  Swift::Int v16 = sub_100A4EB6C((uint64_t)&off_100FEBE40);
  uint64_t v17 = MPModelObject.humanDescription(including:)(v16);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  v20._uint64_t countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t MetricsContentType.rawValue.getter(char a1)
{
  unint64_t result = 0x6D75626C61;
  switch(a1)
  {
    case 1:
    case 17:
      unint64_t result = 0x7473696C79616C70;
      break;
    case 2:
      unint64_t result = 1735290739;
      break;
    case 3:
      unint64_t result = 0x747369747261;
      break;
    case 4:
      unint64_t result = 0x65506C6169636F73;
      break;
    case 5:
      unint64_t result = 0x6569766F6DLL;
      break;
    case 6:
      unint64_t result = 0x776F68537674;
      break;
    case 7:
      unint64_t result = 0x646F736970457674;
      break;
    case 8:
      unint64_t result = 0x7265736F706D6F63;
      break;
    case 9:
      unint64_t result = 0x4173746964657263;
      break;
    case 10:
      unint64_t result = 0x726F7461727563;
      break;
    case 11:
      unint64_t result = 0x65726E6567;
      break;
    case 12:
      unint64_t result = 0x6174536F69646172;
      break;
    case 13:
      unint64_t result = 0x686372616573;
      break;
    case 14:
    case 15:
      unint64_t result = 0xD000000000000013;
      break;
    case 16:
      unint64_t result = 0x6E6F736165537674;
      break;
    case 18:
      unint64_t result = 0x497972617262696CLL;
      break;
    case 19:
      unint64_t result = 0x614C64726F636572;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_10090A04C()
{
  swift_getObjectType();
  BOOL result = 1;
  if (![v0 cachedResponse]
    || (uint64_t v1 = (void *)swift_getObjCClassFromMetadata(),
        [v0 xpSamplingPercentageCachedResponses],
        (objc_msgSend(v1, "shouldReportCachedEventWithSamplingPercentage:") & 1) == 0))
  {
    if ([v0 cachedResponse]) {
      return 0;
    }
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    [v0 xpSessionDuration];
    double v4 = v3;
    [v0 xpSamplingPercentageUsers];
    if (([ObjCClassFromMetadata shouldCollectTimingDataWithSessionDuration:v4 samplingPercentage:v5] & 1) == 0)return 0; {
  }
    }
  return result;
}

id Double.toMillisecondsInServerTime.getter(double a1)
{
  id v1 = [self serverTimeFromTimeInterval:a1];
  id v2 = [v1 unsignedLongLongValue];

  return v2;
}

uint64_t sub_10090A198()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 propertyForBodyKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_100056844((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast()) {
      return v4;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1000637B8((uint64_t)v6, (uint64_t *)&unk_1010C0270);
    return 0;
  }
}

uint64_t SharePlayTogetherSession.Participant.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t MetricsPageProperties.pageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MetricsPageProperties();
  return sub_10006CAB8(v1 + *(int *)(v3 + 24), a1, &qword_1010BCBE0);
}

uint64_t MetricsPageProperties.pageURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MetricsPageProperties() + 24);

  return sub_1000345DC(a1, v3);
}

double (*MetricsPageProperties.pageURL.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t MetricsPageProperties.pageDetails.getter()
{
  type metadata accessor for MetricsPageProperties();

  return swift_bridgeObjectRetain();
}

uint64_t MetricsPageProperties.pageDetails.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for MetricsPageProperties() + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

double (*MetricsPageProperties.pageDetails.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t MetricsPageProperties.extRefUrl.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MetricsPageProperties() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsPageProperties.extRefUrl.setter(uint64_t a1, uint64_t a2)
{
  double v5 = (void *)(v2 + *(int *)(type metadata accessor for MetricsPageProperties() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *double v5 = a1;
  v5[1] = a2;
  return result;
}

double (*MetricsPageProperties.extRefUrl.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t sub_10090A51C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = MetricsContentType.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == MetricsContentType.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10090A5A8()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  MetricsContentType.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10090A60C()
{
  MetricsContentType.rawValue.getter(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10090A660()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  MetricsContentType.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10090A6C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s9MusicCore18MetricsContentTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_10090A6F0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = MetricsContentType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

char *sub_10090A71C()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 valueForConfigurationKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  sub_100056844((uint64_t)&v16, (uint64_t)v14);
  if (!v15)
  {
    sub_1000637B8((uint64_t)v14, (uint64_t *)&unk_1010C0270);
    return 0;
  }
  sub_100063814(&qword_1010BFF58);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(v13 + 16);
  if (v3)
  {
    uint64_t v4 = v13 + 32;
    uint64_t v5 = (char *)_swiftEmptyArrayStorage;
    do
    {
      sub_100076134(v4, (uint64_t)v14);
      sub_100063814(&qword_1010C2930);
      if (swift_dynamicCast())
      {
        uint64_t v6 = v16;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v6 + 16) && (unint64_t v7 = sub_100076DAC((uint64_t)v14), (v8 & 1) != 0))
        {
          sub_100076134(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v16);
        }
        else
        {
          long long v16 = 0u;
          long long v17 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_100076EB8((uint64_t)v14);
        if (*((void *)&v17 + 1))
        {
          if (swift_dynamicCast())
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v5 = sub_100073290(0, *((void *)v5 + 2) + 1, 1, v5);
            }
            unint64_t v10 = *((void *)v5 + 2);
            unint64_t v9 = *((void *)v5 + 3);
            if (v10 >= v9 >> 1) {
              uint64_t v5 = sub_100073290((char *)(v9 > 1), v10 + 1, 1, v5);
            }
            *((void *)v5 + 2) = v10 + 1;
            uint64_t v11 = &v5[16 * v10];
            *((void *)v11 + 4) = 0x6D614E646C656966;
            *((void *)v11 + 5) = 0xE900000000000065;
          }
        }
        else
        {
          sub_1000637B8((uint64_t)&v16, (uint64_t *)&unk_1010C0270);
        }
      }
      v4 += 32;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (char *)_swiftEmptyArrayStorage;
  }
  return v5;
}

uint64_t SSMetricsMutableEvent.dictionaryRepresentation.getter()
{
  id v1 = [objc_allocWithZone((Class)NSMutableDictionary) init];
  [v0 appendPropertiesToBody:v1];
  id v2 = v1;
  static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();

  return 0;
}

uint64_t sub_10090AA80(void *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  [v2 setProperty:v5 forBodyKey:v6];

  if (!a1) {
    goto LABEL_7;
  }
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [a1 valueForConfigurationKey:v7];

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v22, 0, sizeof(v22));
  }
  sub_100056844((uint64_t)v22, (uint64_t)v23);
  uint64_t v9 = v24;
  if (v24)
  {
    unint64_t v10 = sub_100068990(v23, v24);
    uint64_t v11 = *(void *)(v9 - 8);
    __n128 v12 = __chkstk_darwin(v10);
    uint64_t v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
    uint64_t v15 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    sub_1000760E4((uint64_t)v23);
  }
  else
  {
LABEL_7:
    uint64_t v15 = 0;
  }
  NSString v16 = String._bridgeToObjectiveC()();
  [v2 setProperty:v15 forBodyKey:v16];
  swift_unknownObjectRelease();

  return a2(v17, v18, v19, v20);
}

uint64_t sub_10090ACE0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a3;
  v23[0] = a2;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchQoS.QoSClass.userInitiated(_:), v10);
  uint64_t v14 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v16 = v23[0];
  uint64_t v17 = (void *)v23[1];
  _OWORD v15[2] = a1;
  v15[3] = v17;
  uint64_t v18 = v24;
  v15[4] = v16;
  void v15[5] = v18;
  aBlock[4] = sub_10090FCEC;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100020238;
  aBlock[3] = &unk_100FF6DE0;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = a1;
  id v21 = v17;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  unsigned __int8 v27 = _swiftEmptyArrayStorage;
  sub_10007AB28((unint64_t *)&qword_1010C1800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100063814(&qword_1010BFF48);
  sub_10007B0E8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v25);
  return swift_release();
}

void sub_10090B078(uint64_t a1, void *a2, void (*a3)(uint64_t))
{
  uint64_t v5 = _s9MusicCore18DeviceCapabilitiesO9diskUsageSDyAC04DiskF8CategoryOs5Int64VGvgZ_0();
  unint64_t v6 = sub_1008F8A0C((uint64_t)&off_100FED750);
  sub_100063814(&qword_1010BFF50);
  swift_arrayDestroy();
  uint64_t v39 = a3;
  if (a1 && (uint64_t v7 = sub_10090A71C()) != 0)
  {
    uint64_t v8 = v7;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v9 = 0;
  unint64_t v10 = v6 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v6 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v38 = v8 + 72;
  int64_t v41 = v14;
  unint64_t v42 = v6;
  while (1)
  {
    do
    {
      do
      {
        while (v13)
        {
          unint64_t v19 = __clz(__rbit64(v13));
          v13 &= v13 - 1;
          unint64_t v20 = v19 | (v9 << 6);
          if (*(void *)(v5 + 16)) {
            goto LABEL_28;
          }
        }
        int64_t v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        if (v21 >= v14) {
          goto LABEL_51;
        }
        unint64_t v22 = *(void *)(v10 + 8 * v21);
        ++v9;
        if (!v22)
        {
          int64_t v9 = v21 + 1;
          if (v21 + 1 >= v14) {
            goto LABEL_51;
          }
          unint64_t v22 = *(void *)(v10 + 8 * v9);
          if (!v22)
          {
            int64_t v9 = v21 + 2;
            if (v21 + 2 >= v14) {
              goto LABEL_51;
            }
            unint64_t v22 = *(void *)(v10 + 8 * v9);
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_51:
                swift_bridgeObjectRelease();
                swift_release();
                uint64_t v37 = swift_bridgeObjectRelease();
                v39(v37);
                return;
              }
              unint64_t v22 = *(void *)(v10 + 8 * v23);
              if (!v22)
              {
                while (1)
                {
                  int64_t v9 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_53;
                  }
                  if (v9 >= v14) {
                    goto LABEL_51;
                  }
                  unint64_t v22 = *(void *)(v10 + 8 * v9);
                  ++v23;
                  if (v22) {
                    goto LABEL_27;
                  }
                }
              }
              int64_t v9 = v23;
            }
          }
        }
LABEL_27:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      while (!*(void *)(v5 + 16));
LABEL_28:
      uint64_t v24 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v20);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      unint64_t v27 = sub_1000E728C(*(unsigned char *)(*(void *)(v6 + 48) + v20));
    }
    while ((v28 & 1) == 0);
    double v15 = (double)(*(void *)(*(void *)(v5 + 56) + 8 * v27) / 0x100000);
    uint64_t v29 = *((void *)v8 + 2);
    if (v29) {
      break;
    }
LABEL_10:
    id v16 = objc_allocWithZone((Class)NSNumber);
    swift_bridgeObjectRetain();
    id v17 = [v16 initWithDouble:v15];
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a2 setProperty:v17 forBodyKey:v18];
  }
  unint64_t v30 = v10;
  uint64_t v31 = v8;
  BOOL v32 = *((void *)v8 + 4) == v26 && *((void *)v8 + 5) == v25;
  if (v32 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
    goto LABEL_8;
  }
  if (v29 == 1) {
    goto LABEL_9;
  }
  BOOL v33 = *((void *)v8 + 6) == v26 && *((void *)v8 + 7) == v25;
  if (v33 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
LABEL_8:
    double v15 = floor(v15 / 100.0) * 100.0;
LABEL_9:
    uint64_t v8 = v31;
    unint64_t v10 = v30;
    int64_t v14 = v41;
    unint64_t v6 = v42;
    goto LABEL_10;
  }
  if (v29 == 2) {
    goto LABEL_9;
  }
  uint64_t v34 = v38;
  uint64_t v35 = 2;
  while (!__OFADD__(v35, 1))
  {
    if (*(v34 - 1) == v26 && *v34 == v25) {
      goto LABEL_8;
    }
    uint64_t v40 = v35 + 1;
    if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
      goto LABEL_8;
    }
    v34 += 2;
    ++v35;
    if (v40 == v29) {
      goto LABEL_9;
    }
  }
LABEL_54:
  __break(1u);
}

uint64_t sub_10090B3EC(void *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v18 = a2;
  if (!*(void *)(a2 + 16)) {
    return a3();
  }
  uint64_t v7 = v4;
  int64_t v9 = *(void (**)(void **, void *))(a2 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100881058(0, 1);
  uint64_t v10 = v18;
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v7;
  v11[3] = a1;
  _OWORD v11[4] = v10;
  _OWORD v11[5] = a3;
  v11[6] = a4;
  id v17 = a1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_10090FC18;
  *(void *)(v12 + 24) = v11;
  v16[0] = sub_10013DF0C;
  v16[1] = v12;
  id v13 = a1;
  swift_retain();
  swift_retain();
  id v14 = v7;
  v9(&v17, v16);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_10090B54C(void *a1, uint64_t (*a2)(void), uint64_t a3, void *a4)
{
  if (a1)
  {
    id v6 = [a1 eventFields];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v9 = sub_100048774(v8);
      swift_bridgeObjectRelease();
      if (v9)
      {
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [a4 addPropertiesWithDictionary:isa];
      }
    }
  }
  return a2();
}

uint64_t sub_10090B630(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t (*)(), uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  swift_retain();
  a3(v4, sub_10090FCF8, v7);

  return swift_release();
}

uint64_t sub_10090B6C8(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, void *a4)
{
  id v6 = [self currentDeviceInfo];
  id v7 = [v6 buildVersion];

  NSString v8 = String._bridgeToObjectiveC()();
  [a4 setProperty:v7 forBodyKey:v8];

  return a2();
}

void sub_10090B85C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  aBlock[4] = a3;
  aBlock[5] = a4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100020238;
  aBlock[3] = &unk_100FF6A70;
  id v6 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v7.receiver = a1;
  v7.super_class = (Class)SSMetricsBaseEvent;
  [super setStandardPropertiesWith:a2 completionHandler:v6];
  _Block_release(v6);
}

void ICURLSession.enqueueDataRequestRecordingPerformanceMetrics(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  v9[4] = sub_10090D760;
  v9[5] = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  long long v9[2] = sub_10000D3BC;
  v9[3] = &unk_100FF6828;
  NSString v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  [v3 enqueueDataRequest:a1 withCompletionHandler:v8];
  _Block_release(v8);
}

uint64_t sub_10090BB14(void *a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t), uint64_t a4)
{
  uint64_t v19 = a4;
  unint64_t v20 = a3;
  uint64_t v18 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  NSString v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v17 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  aBlock[4] = sub_10090FD20;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100020238;
  aBlock[3] = &unk_100FF6E58;
  id v14 = _Block_copy(aBlock);
  id v15 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10007AB28((unint64_t *)&qword_1010C1800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100063814(&qword_1010BFF48);
  sub_10007B0E8();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v17);
  return v20(a1, v18);
}

void sub_10090BDEC(id a1)
{
  if (qword_1010BBCB8 == -1)
  {
    if (!a1) {
      return;
    }
  }
  else
  {
    swift_once();
    if (!a1) {
      return;
    }
  }
  id v2 = [a1 performanceMetrics];
  if (v2)
  {
    id v3 = v2;
    sub_100904F30(v3, (uint64_t)&v4);
    MetricsReportingController.recordLoadUrlEvent(_:)(&v4);
    sub_100905384((uint64_t)&v4);
  }
}

uint64_t sub_10090BEA0()
{
  return sub_10090C060();
}

uint64_t sub_10090BF68()
{
  return sub_10090BF84(0xD00000000000001CLL, 0x8000000100DCAD00);
}

uint64_t sub_10090BF84(uint64_t a1, uint64_t a2)
{
  v3[0] = a1;
  v3[1] = a2;
  sub_10005D1D4();
  NSUserDefaults.subscript.getter((uint64_t)v3, &v4);
  if (v5)
  {
    if (swift_dynamicCast()) {
      return LOBYTE(v3[0]);
    }
  }
  else
  {
    sub_1000637B8((uint64_t)&v4, (uint64_t *)&unk_1010C0270);
  }
  return 0;
}

uint64_t sub_10090C00C@<X0>(uint64_t a1@<X8>)
{
  return sub_10090C4A8(0xD00000000000001CLL, 0x8000000100DCAF80, a1);
}

uint64_t sub_10090C028(uint64_t a1)
{
  return sub_10090C5C0(a1, 0xD00000000000001CLL, 0x8000000100DCAF80);
}

uint64_t sub_10090C044()
{
  return sub_10090C060();
}

uint64_t sub_10090C060()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 propertyForBodyKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_100056844((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    sub_100057778(0, &qword_1010BFE48);
    if (swift_dynamicCast()) {
      return v4;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1000637B8((uint64_t)v6, (uint64_t *)&unk_1010C0270);
    return 0;
  }
}

uint64_t sub_10090C18C(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = a1;
  swift_retain();
  id v8 = v3;
  NSString v9 = String._bridgeToObjectiveC()();
  [v8 setEventType:v9];

  id v10 = v8;
  id v11 = v7;
  swift_retain();
  sub_10090F648(a1, v10, v10, (uint64_t)a1, a2, a3);

  return swift_release_n();
}

id sub_10090C3FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Music_SSMetricsComponentRenderEvent();
  return [super dealloc];
}

uint64_t sub_10090C470()
{
  return sub_10090BF84(0xD000000000000017, 0x8000000100DCAF30);
}

uint64_t sub_10090C48C@<X0>(uint64_t a1@<X8>)
{
  return sub_10090C4A8(0xD000000000000026, 0x8000000100DCAF50, a1);
}

uint64_t sub_10090C4A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v8[0] = a1;
  v8[1] = a2;
  sub_10005D1D4();
  NSUserDefaults.subscript.getter((uint64_t)v8, &v9);
  if (v10)
  {
    uint64_t v4 = type metadata accessor for Date();
    int v5 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a3, v5 ^ 1u, 1, v4);
  }
  else
  {
    sub_1000637B8((uint64_t)&v9, (uint64_t *)&unk_1010C0270);
    uint64_t v7 = type metadata accessor for Date();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a3, 1, 1, v7);
  }
}

uint64_t sub_10090C5A4(uint64_t a1)
{
  return sub_10090C5C0(a1, 0xD000000000000026, 0x8000000100DCAF50);
}

uint64_t sub_10090C5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100063814(&qword_1010BFE40);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006CAB8(a1, (uint64_t)v8, &qword_1010BFE40);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000637B8((uint64_t)v8, &qword_1010BFE40);
    long long v14 = 0u;
    long long v15 = 0u;
  }
  else
  {
    *((void *)&v15 + 1) = v9;
    id v11 = sub_100068018((uint64_t *)&v14);
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v11, v8, v9);
  }
  v13[0] = a2;
  v13[1] = a3;
  sub_10005D1D4();
  NSUserDefaults.subscript.setter((uint64_t)&v14, (uint64_t)v13, (uint64_t)&type metadata for String);
  return sub_1000637B8(a1, &qword_1010BFE40);
}

id DeviceCapabilitiesObjC.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super init];
}

id Music_SSMetricsPageRenderEvent.__allocating_init(bodyDictionary:)()
{
  id v1 = objc_allocWithZone(v0);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithBodyDictionary:isa];

  return v3;
}

id Music_SSMetricsPageRenderEvent.init(bodyDictionary:)()
{
  int ObjectType = (objc_class *)swift_getObjectType();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  [super initWithBodyDictionary:isa];

  return v3;
}

uint64_t sub_10090CA24(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12)
        {
          int64_t v4 = v11 + 3;
          if (v11 + 3 >= v27) {
            return 1;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v4);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_25:
    uint64_t v14 = 16 * v10;
    long long v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_100071D70(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      unint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
      unint64_t result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t _s9MusicCore21MetricsPagePropertiesV23__derived_struct_equalsySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100063814(&qword_1010BFF60);
  __chkstk_darwin(v8);
  unint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_100063814(&qword_1010BCBE0);
  __chkstk_darwin(v11 - 8);
  int64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v16 = &v42[-v15];
  __chkstk_darwin(v17);
  uint64_t v19 = &v42[-v18];
  if (*a1 == *a2 && a1[1] == a2[1]
    || (char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v20 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3]
      || (char v22 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v22 & 1) != 0))
    {
      uint64_t v46 = v13;
      int v44 = v7;
      uint64_t v23 = type metadata accessor for MetricsPageProperties();
      sub_10006CAB8((uint64_t)a1 + *(int *)(v23 + 24), (uint64_t)v19, &qword_1010BCBE0);
      uint64_t v45 = v23;
      sub_10006CAB8((uint64_t)a2 + *(int *)(v23 + 24), (uint64_t)v16, &qword_1010BCBE0);
      uint64_t v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_10006CAB8((uint64_t)v19, (uint64_t)v10, &qword_1010BCBE0);
      sub_10006CAB8((uint64_t)v16, v24, &qword_1010BCBE0);
      uint64_t v25 = v5;
      char v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v26((uint64_t)v10, 1, v4) == 1)
      {
        sub_1000637B8((uint64_t)v16, &qword_1010BCBE0);
        sub_1000637B8((uint64_t)v19, &qword_1010BCBE0);
        if (v26(v24, 1, v4) == 1)
        {
          sub_1000637B8((uint64_t)v10, &qword_1010BCBE0);
LABEL_16:
          uint64_t v32 = v45;
          uint64_t v33 = *(int *)(v45 + 28);
          uint64_t v34 = *(void *)((char *)a2 + v33);
          if (*(void *)((char *)a1 + v33))
          {
            if (v34)
            {
              swift_bridgeObjectRetain();
              uint64_t v35 = swift_bridgeObjectRetain();
              char v36 = sub_10090CA24(v35, v34);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v36)
              {
LABEL_21:
                uint64_t v37 = *(int *)(v32 + 32);
                uint64_t v38 = (void *)((char *)a1 + v37);
                uint64_t v39 = *(void *)((char *)a1 + v37 + 8);
                uint64_t v40 = (void *)((char *)a2 + v37);
                uint64_t v41 = v40[1];
                if (v39)
                {
                  if (v41 && (*v38 == *v40 && v39 == v41 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)) {
                    return 1;
                  }
                }
                else if (!v41)
                {
                  return 1;
                }
              }
            }
          }
          else if (!v34)
          {
            goto LABEL_21;
          }
          return 0;
        }
      }
      else
      {
        sub_10006CAB8((uint64_t)v10, (uint64_t)v46, &qword_1010BCBE0);
        if (v26(v24, 1, v4) != 1)
        {
          uint64_t v27 = v25;
          char v28 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v25 + 32);
          uint64_t v29 = v44;
          v28(v44, v24, v4);
          sub_10007AB28(qword_1010BFF68, (void (*)(uint64_t))&type metadata accessor for URL);
          uint64_t v30 = (uint64_t)v46;
          int v43 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v31 = *(void (**)(unsigned char *, uint64_t))(v27 + 8);
          v31(v29, v4);
          sub_1000637B8((uint64_t)v16, &qword_1010BCBE0);
          sub_1000637B8((uint64_t)v19, &qword_1010BCBE0);
          v31((unsigned char *)v30, v4);
          sub_1000637B8((uint64_t)v10, &qword_1010BCBE0);
          if ((v43 & 1) == 0) {
            return 0;
          }
          goto LABEL_16;
        }
        sub_1000637B8((uint64_t)v16, &qword_1010BCBE0);
        sub_1000637B8((uint64_t)v19, &qword_1010BCBE0);
        (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v46, v4);
      }
      sub_1000637B8((uint64_t)v10, &qword_1010BFF60);
      return 0;
    }
  }
  return result;
}

void sub_10090D120(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = [self standardUserDefaults];
  char v13 = sub_10090BF84(0xD000000000000017, 0x8000000100DCAF30);

  uint64_t v14 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  NSString v15 = String._bridgeToObjectiveC()();
  [a2 setProperty:v14 forBodyKey:v15];
  swift_unknownObjectRelease();

  *(void *)&long long aBlock = 0x646E655265676170;
  *((void *)&aBlock + 1) = 0xEA00000000007265;
  uint64_t v16 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
  NSString v17 = String._bridgeToObjectiveC()();
  [a2 setProperty:v16 forBodyKey:v17];
  swift_unknownObjectRelease();

  if (!a1)
  {
    long long aBlock = 0u;
    long long v41 = 0u;
LABEL_16:
    sub_1000637B8((uint64_t)&aBlock, (uint64_t *)&unk_1010C0270);
    goto LABEL_17;
  }
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [a1 valueForConfigurationKey:v18];

  if (v19)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v38, 0, sizeof(v38));
  }
  sub_100056844((uint64_t)v38, (uint64_t)&aBlock);
  if (!*((void *)&v41 + 1)) {
    goto LABEL_16;
  }
  sub_100063814(&qword_1010C5DC0);
  if (swift_dynamicCast())
  {
    receiver = v38[0].receiver;
    if (*((void *)v38[0].receiver + 2)
      && (unint64_t v21 = sub_100071D70(0xD000000000000021, 0x8000000100DCAEE0), (v22 & 1) != 0))
    {
      sub_100076134(receiver[7] + 32 * v21, (uint64_t)&aBlock);
      sub_100057778(0, &qword_1010BFE48);
      if (swift_dynamicCast()) {
        id v23 = v38[0].receiver;
      }
      else {
        id v23 = 0;
      }
      if ((v13 & 1) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      id v23 = 0;
      if ((v13 & 1) == 0)
      {
LABEL_14:
        if (v23)
        {
          id v24 = v23;
          uint64_t v25 = v23;
          Class isa = (Class)v23;
        }
        else
        {
          uint64_t v25 = 0;
          Class isa = 0;
        }
        goto LABEL_22;
      }
    }
    uint64_t v25 = v23;
    sub_100057778(0, &qword_1010BFE48);
    Class isa = NSNumber.init(floatLiteral:)(1.0).super.super.isa;
LABEL_22:
    uint64_t v29 = isa;
    NSString v30 = String._bridgeToObjectiveC()();
    [a2 setProperty:v29 forBodyKey:v30];

    if (receiver[2])
    {
      unint64_t v31 = sub_100071D70(0xD000000000000019, 0x8000000100DCAF10);
      if (v32)
      {
        sub_100076134(receiver[7] + 32 * v31, (uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v41 = 0u;
      }
    }
    else
    {
      long long aBlock = 0u;
      long long v41 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v41 + 1))
    {
      sub_100057778(0, &qword_1010BFE48);
      if (swift_dynamicCast())
      {
        id v33 = v38[0].receiver;
LABEL_32:
        id v34 = v33;
        NSString v35 = String._bridgeToObjectiveC()();
        [a2 setProperty:v34 forBodyKey:v35];

        uint64_t v42 = a5;
        uint64_t v43 = a6;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        *(void *)&long long v41 = sub_100020238;
        *((void *)&v41 + 1) = &unk_100FF6EA8;
        char v36 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        v37.receiver = a3;
        v37.super_class = (Class)type metadata accessor for Music_SSMetricsPageRenderEvent();
        [super setStandardPropertiesWith:a4 completionHandler:v36];
        _Block_release(v36);

        return;
      }
    }
    else
    {
      sub_1000637B8((uint64_t)&aBlock, (uint64_t *)&unk_1010C0270);
    }
    id v33 = 0;
    goto LABEL_32;
  }
LABEL_17:
  uint64_t v42 = a5;
  uint64_t v43 = a6;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v41 = sub_100020238;
  *((void *)&v41 + 1) = &unk_100FF6E80;
  uint64_t v27 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  char v28 = (objc_class *)type metadata accessor for Music_SSMetricsPageRenderEvent();
  v39.receiver = a3;
  v39.super_class = v28;
  [super setStandardPropertiesWith:a4 completionHandler:v27];
  _Block_release(v27);
}

uint64_t _s9MusicCore18MetricsContentTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14) {
    return 20;
  }
  else {
    return v0;
  }
}

uint64_t sub_10090D728()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10090D760(void *a1, uint64_t a2)
{
  return sub_10090BB14(a1, a2, *(uint64_t (**)(void *, uint64_t))(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_10090D76C()
{
  unint64_t result = qword_1010BFE50;
  if (!qword_1010BFE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010BFE50);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MetricsPageProperties(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    __dst = (char *)a1 + v9;
    unint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    char v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100063814(&qword_1010BCBE0);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    NSString v17 = (uint64_t *)((char *)v4 + v16);
    NSString v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *NSString v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

void *initializeWithCopy for MetricsPageProperties(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100063814(&qword_1010BCBE0);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MetricsPageProperties(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100063814(&qword_1010BCBE0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for MetricsPageProperties(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100063814(&qword_1010BCBE0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  return a1;
}

void *assignWithTake for MetricsPageProperties(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_100063814(&qword_1010BCBE0);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  NSString v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *NSString v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsPageProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10090E02C);
}

uint64_t sub_10090E02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010BCBE0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsPageProperties(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10090E0F4);
}

uint64_t sub_10090E0F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010BCBE0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MetricsContentType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MetricsContentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10090E2FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsContentType()
{
  return &type metadata for MetricsContentType;
}

uint64_t type metadata accessor for Music_SSMetricsComponentRenderEvent()
{
  return self;
}

uint64_t type metadata accessor for Music_SSMetricsPageRenderEvent()
{
  return self;
}

void sub_10090E37C(void (*a1)(void))
{
  id v3 = [self defaultIdentityStore];
  id v4 = [self activeAccount];
  v18[0] = 0;
  id v5 = [v3 DSIDForUserIdentity:v4 outError:v18];

  if (v5)
  {
    id v6 = v18[0];
    [v1 setAccountIdentifier:v5];
    BOOL v7 = [v5 longLongValue] != 0;
  }
  else
  {
    id v8 = v18[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    [v1 setAccountIdentifier:0];
    BOOL v7 = 1;
  }
  id v9 = [objc_allocWithZone((Class)NSNumber) initWithBool:v7];
  NSString v10 = String._bridgeToObjectiveC()();
  [v1 setProperty:v9 forBodyKey:v10];

  id v11 = [self sharedController];
  id v12 = [v11 musicSubscriptionStatus];

  if (v12)
  {
    switch((unint64_t)[v12 statusType])
    {
      case 0uLL:
      case 1uLL:
      case 3uLL:

        break;
      case 2uLL:
        [v12 reasonType];

        break;
      default:
        v18[0] = 0;
        v18[1] = (id)0xE000000000000000;
        _StringGuts.grow(_:)(24);
        v15._object = (void *)0x8000000100DC2380;
        v15._uint64_t countAndFlagsBits = 0xD000000000000013;
        String.append(_:)(v15);
        [v12 statusType];
        v16._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
        v16._object = (void *)0x8000000100DCAEA0;
        String.append(_:)(v16);
        v17._uint64_t countAndFlagsBits = 32;
        v17._object = (void *)0xE100000000000000;
        String.append(_:)(v17);
        [v12 statusType];
        type metadata accessor for ICMusicSubscriptionStatusType(0);
        _print_unlocked<A, B>(_:_:)();
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x10090E7B4);
    }
  }
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v14 = String._bridgeToObjectiveC()();
  [v1 setProperty:v13 forBodyKey:v14];

  a1();
}

uint64_t sub_10090E7C4(uint64_t (*a1)(void))
{
  int v2 = v1;
  swift_getObjectType();
  id v4 = [(id)swift_getObjCClassFromMetadata() Topic];
  [v2 setTopic:v4];

  id v5 = [self mainBundle];
  id v6 = [v5 infoDictionary];

  if (!v6 || (uint64_t v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(), v6, !v7))
  {
    uint64_t v7 = 0;
    long long v17 = 0u;
    long long v18 = 0u;
    char v11 = 1;
LABEL_12:
    sub_1000637B8((uint64_t)&v17, (uint64_t *)&unk_1010C0270);
    goto LABEL_13;
  }
  if (!*(void *)(v7 + 16))
  {
    char v11 = 0;
    long long v17 = 0u;
    long long v18 = 0u;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100071D70(0xD000000000000012, 0x8000000100DCAE50);
  if ((v9 & 1) == 0)
  {
    long long v17 = 0u;
    long long v18 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_100076134(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v17);
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1))
  {
LABEL_11:
    char v11 = 0;
    goto LABEL_12;
  }
  if (swift_dynamicCast())
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    char v11 = 0;
    goto LABEL_14;
  }
  char v11 = 0;
LABEL_13:
  NSString v10 = 0;
LABEL_14:
  [v2 setApplicationIdentifier:v10];

  if (v11)
  {
    long long v17 = 0u;
    long long v18 = 0u;
LABEL_23:
    sub_1000637B8((uint64_t)&v17, (uint64_t *)&unk_1010C0270);
    goto LABEL_24;
  }
  if (*(void *)(v7 + 16) && (unint64_t v12 = sub_100071D70(0xD00000000000001ALL, 0x8000000100DCAE30), (v13 & 1) != 0))
  {
    sub_100076134(*(void *)(v7 + 56) + 32 * v12, (uint64_t)&v17);
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1)) {
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:
    NSString v14 = 0;
    goto LABEL_25;
  }
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_25:
  NSString v15 = String._bridgeToObjectiveC()();
  [v2 setProperty:v14 forBodyKey:v15];
  swift_unknownObjectRelease();

  return a1();
}

void sub_10090EAC0(void (*a1)(void))
{
  NSString v3 = [self currentConnectionTypeHeader];
  if (!v3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v1 setConnection:v3];

  id v4 = objc_allocWithZone((Class)ICStoreRequestContext);
  _OWORD v8[4] = UIScreen.Dimensions.size.getter;
  v8[5] = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  void v8[2] = sub_10001A278;
  _OWORD v8[3] = &unk_100FF6D90;
  id v5 = _Block_copy(v8);
  id v6 = [v4 initWithBlock:v5];
  _Block_release(v5);
  swift_release();
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
  }
  else
  {
    NSString v7 = [v6 userAgent];
    if (!v7)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v1 setUserAgent:v7];

    a1();
  }
}

uint64_t sub_10090EC78(void *a1, uint64_t a2, void *a3, void (**a4)(void))
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a4;
  uint64_t v18 = a2;
  if (*(void *)(a2 + 16))
  {
    char v9 = *(void (**)(void **, void *))(a2 + 32);
    _Block_copy(a4);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100881058(0, 1);
    uint64_t v10 = v18;
    char v11 = (void *)swift_allocObject();
    void v11[2] = a3;
    v11[3] = a1;
    _OWORD v11[4] = v10;
    _OWORD v11[5] = sub_100224E18;
    v11[6] = v8;
    long long v17 = a1;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_10090FC18;
    *(void *)(v12 + 24) = v11;
    v16[0] = sub_10013DD14;
    v16[1] = v12;
    id v13 = a1;
    swift_retain();
    swift_retain();
    id v14 = a3;
    v9(&v17, v16);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    _Block_copy(a4);
    a4[2](a4);
  }

  return swift_release();
}

uint64_t sub_10090EE0C(void *a1, void *a2, void (**a3)(void))
{
  sub_100063814(&qword_1010BDE98);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100E26F30;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_10090FAC0;
  *(void *)(v8 + 24) = v7;
  *(void *)(v6 + 32) = sub_10090FAC8;
  *(void *)(v6 + 40) = v8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_10090FAD0;
  *(void *)(v10 + 24) = v9;
  *(void *)(v6 + 48) = sub_10090FE2C;
  *(void *)(v6 + 56) = v10;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_10090FAF4;
  *(void *)(v12 + 24) = v11;
  *(void *)(v6 + 64) = sub_10090FE2C;
  *(void *)(v6 + 72) = v12;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_10090FB20;
  *(void *)(v14 + 24) = v13;
  *(void *)(v6 + 80) = sub_10090FE2C;
  *(void *)(v6 + 88) = v14;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10090FB84;
  *(void *)(v16 + 24) = v15;
  *(void *)(v6 + 96) = sub_10090FE2C;
  *(void *)(v6 + 104) = v16;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_10090FBA8;
  *(void *)(v18 + 24) = v17;
  *(void *)(v6 + 112) = sub_10090FE2C;
  *(void *)(v6 + 120) = v18;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10090FBB0;
  *(void *)(v20 + 24) = v19;
  *(void *)(v6 + 128) = sub_10090FE2C;
  *(void *)(v6 + 136) = v20;
  sub_10090EC78(a1, v6, a2, a3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10090F118(uint64_t a1, uint64_t a2)
{
  NSString v3 = v2;
  id v6 = [v3 windowHeight];
  NSString v7 = String._bridgeToObjectiveC()();
  [v3 setProperty:v6 forBodyKey:v7];

  id v8 = [v3 windowWidth];
  NSString v9 = String._bridgeToObjectiveC()();
  [v3 setProperty:v8 forBodyKey:v9];

  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  swift_retain();
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_10007A644, v10);

  return swift_release();
}

void sub_10090F27C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = [self standardUserDefaults];
  char v13 = sub_10090BF84(0xD000000000000017, 0x8000000100DCAD90);

  [a2 setXPSamplingForced:v13 & 1];
  if (!a1)
  {
    long long aBlock = 0u;
    long long v28 = 0u;
LABEL_23:
    sub_1000637B8((uint64_t)&aBlock, (uint64_t *)&unk_1010C0270);
    goto LABEL_24;
  }
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [a1 valueForConfigurationKey:v14];

  if (v15)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_100056844((uint64_t)&v24, (uint64_t)&aBlock);
  if (!*((void *)&v28 + 1)) {
    goto LABEL_23;
  }
  sub_100063814(&qword_1010C5DC0);
  if (!swift_dynamicCast()) {
    goto LABEL_24;
  }
  uint64_t v16 = v24;
  if (*(void *)(v24 + 16))
  {
    unint64_t v17 = sub_100071D70(0xD000000000000017, 0x8000000100DCAD40);
    if (v18)
    {
      sub_100076134(*(void *)(v16 + 56) + 32 * v17, (uint64_t)&aBlock);
      if (swift_dynamicCast()) {
        [a2 setXPSamplingPercentageUsers:*(double *)&v24];
      }
    }
  }
  if (*(void *)(v16 + 16))
  {
    unint64_t v19 = sub_100071D70(0x446E6F6973736573, 0xEF6E6F6974617275);
    if (v20)
    {
      sub_100076134(*(void *)(v16 + 56) + 32 * v19, (uint64_t)&aBlock);
      if (swift_dynamicCast()) {
        [a2 setXPSessionDuration:*(double *)&v24];
      }
    }
  }
  if (*(void *)(v16 + 16) && (unint64_t v21 = sub_100071D70(0xD000000000000021, 0x8000000100DCAD60), (v22 & 1) != 0))
  {
    sub_100076134(*(void *)(v16 + 56) + 32 * v21, (uint64_t)&aBlock);
  }
  else
  {
    long long aBlock = 0u;
    long long v28 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v28 + 1)) {
    goto LABEL_23;
  }
  if (swift_dynamicCast()) {
    [a2 setXPSamplingPercentageCachedResponses:*(double *)&v24];
  }
LABEL_24:
  if (objc_msgSend(a2, "xpSamplingForced", v24, v25))
  {
    [a2 setXPSamplingPercentageUsers:1.0];
    [a2 setXPSamplingPercentageCachedResponses:1.0];
  }
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v28 = sub_100020238;
  *((void *)&v28 + 1) = &unk_100FF69D0;
  id v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v26.receiver = a3;
  v26.super_class = (Class)SSMetricsLoadURLEvent;
  [super setStandardPropertiesWith:a4 completionHandler:v23];
  _Block_release(v23);
}

void sub_10090F648(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = [self standardUserDefaults];
  char v13 = sub_10090BF84(0xD00000000000001CLL, 0x8000000100DCAD00);

  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v15 = String._bridgeToObjectiveC()();
  [a2 setProperty:isa forBodyKey:v15];

  if (!a1)
  {
    long long aBlock = 0u;
    long long v36 = 0u;
LABEL_10:
    sub_1000637B8((uint64_t)&aBlock, (uint64_t *)&unk_1010C0270);
    goto LABEL_29;
  }
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [a1 valueForConfigurationKey:v16];

  if (v17)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v33, 0, sizeof(v33));
  }
  sub_100056844((uint64_t)v33, (uint64_t)&aBlock);
  if (!*((void *)&v36 + 1)) {
    goto LABEL_10;
  }
  sub_100063814(&qword_1010C5DC0);
  if (!swift_dynamicCast()) {
    goto LABEL_29;
  }
  receiver = v33[0].receiver;
  if (v13)
  {
    *((void *)&v36 + 1) = &type metadata for Double;
    *(void *)&long long aBlock = 0x3FF0000000000000;
    goto LABEL_14;
  }
  if (*((void *)v33[0].receiver + 2))
  {
    unint64_t v19 = sub_100071D70(0xD000000000000026, 0x8000000100DCAC90);
    if (v20)
    {
      sub_100076134(receiver[7] + 32 * v19, (uint64_t)&aBlock);
LABEL_14:
      sub_100057778(0, &qword_1010BFE48);
      int v21 = swift_dynamicCast();
      id v22 = v33[0].receiver;
      if (!v21) {
        id v22 = 0;
      }
      goto LABEL_18;
    }
  }
  long long aBlock = 0u;
  long long v36 = 0u;
  sub_1000637B8((uint64_t)&aBlock, (uint64_t *)&unk_1010C0270);
  id v22 = 0;
LABEL_18:
  id v23 = v22;
  NSString v24 = String._bridgeToObjectiveC()();
  [a2 setProperty:v23 forBodyKey:v24];

  if (receiver[2])
  {
    unint64_t v25 = sub_100071D70(0xD00000000000001ELL, 0x8000000100DCACC0);
    if (v26)
    {
      sub_100076134(receiver[7] + 32 * v25, (uint64_t)&aBlock);
    }
    else
    {
      long long aBlock = 0u;
      long long v36 = 0u;
    }
  }
  else
  {
    long long aBlock = 0u;
    long long v36 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v36 + 1))
  {
    sub_100057778(0, &qword_1010BFE48);
    int v27 = swift_dynamicCast();
    id v28 = v33[0].receiver;
    if (!v27) {
      id v28 = 0;
    }
  }
  else
  {
    sub_1000637B8((uint64_t)&aBlock, (uint64_t *)&unk_1010C0270);
    id v28 = 0;
  }
  id v29 = v28;
  NSString v30 = String._bridgeToObjectiveC()();
  [a2 setProperty:v29 forBodyKey:v30];

LABEL_29:
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v36 = sub_100020238;
  *((void *)&v36 + 1) = &unk_100FF6980;
  unint64_t v31 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  char v32 = (objc_class *)type metadata accessor for Music_SSMetricsComponentRenderEvent();
  v34.receiver = a3;
  v34.super_class = v32;
  [super setStandardPropertiesWith:a4 completionHandler:v31];
  _Block_release(v31);
}

void sub_10090FAB4()
{
  sub_10090B85C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10090FAC0(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  return sub_10090B54C(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_10090FAC8(uint64_t *a1, uint64_t *a2)
{
  return sub_10090B630(a1, a2, *(void (**)(uint64_t, uint64_t (*)(), uint64_t))(v2 + 16));
}

uint64_t sub_10090FAD0(void *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  return sub_10090AA80(a1, a2);
}

void sub_10090FAF4(uint64_t a1, void (*a2)(void))
{
}

uint64_t sub_10090FB20(uint64_t a1, uint64_t (*a2)(void))
{
  return sub_10090E7C4(a2);
}

uint64_t sub_10090FB4C()
{
  return swift_deallocObject();
}

uint64_t sub_10090FB84(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_10090ACE0(a1, a2, a3);
}

uint64_t sub_10090FBA8(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  return sub_10090B6C8(a1, a2, a3, *(void **)(v3 + 16));
}

void sub_10090FBB0(uint64_t a1, void (*a2)(void))
{
}

uint64_t sub_10090FBDC()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_10090FC20()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10090FC70()
{
  return sub_10090B3EC(*(void **)(v0 + 24), *(void *)(v0 + 32), *(uint64_t (**)(void))(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_10090FCA4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10090FCEC()
{
  sub_10090B078(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

uint64_t sub_10090FCF8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_10090FD20()
{
  sub_10090BDEC(*(id *)(v0 + 16));
}

uint64_t sub_10090FD28()
{
  return swift_deallocObject();
}

uint64_t sub_10090FD60()
{
  id v1 = *(unsigned char **)(v0 + 24);
  uint64_t result = sub_1003C8578((uint64_t)[*(id *)(v0 + 16) cloudStatus], (uint64_t)&off_100FED7E8);
  if (result) {
    *id v1 = 18;
  }
  return result;
}

uint64_t sub_10090FDA4()
{
  return swift_deallocObject();
}

void static MusicCoreAnalytics.sendEvent<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  int v48 = &v39[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v10 = &v39[-v9];
  uint64_t v46 = v11;
  __chkstk_darwin(v12);
  NSString v14 = &v39[-v13];
  if (qword_1010BBCC0 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100050A90(v15, (uint64_t)qword_10112A5C0);
  NSString v16 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16);
  v16(v14, a1, a2);
  uint64_t v47 = a1;
  uint64_t v45 = v16;
  v16(v10, a1, a2);
  id v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v19 = v18;
  char v20 = (void (**)(uint64_t, uint64_t))(a3 + 8);
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v21 = swift_slowAlloc();
    os_log_t v41 = v17;
    uint64_t v22 = a3;
    uint64_t v23 = v21;
    uint64_t v42 = swift_slowAlloc();
    aBlock[0] = v42;
    *(_DWORD *)uint64_t v23 = 136315395;
    uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);
    uint64_t v44 = (unint64_t)v20 & 0xFFFFFFFFFFFFLL | 0x60A1000000000000;
    int v40 = v19;
    uint64_t v24 = v43(a2, v22);
    *(void *)(v23 + 4) = sub_100075E68(v24, v25, aBlock);
    swift_bridgeObjectRelease();
    char v26 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
    v26(v14, a2);
    *(_WORD *)(v23 + 12) = 2081;
    (*(void (**)(uint64_t, uint64_t))(v22 + 16))(a2, v22);
    v26(v10, a2);
    sub_1009105CC();
    uint64_t v27 = Dictionary.description.getter();
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    *(void *)(v23 + 14) = sub_100075E68(v27, v29, aBlock);
    swift_bridgeObjectRelease();
    os_log_t v30 = v41;
    _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v40, "Send analytics event: %s, payload: %{private}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v22;
    swift_slowDealloc();

    unint64_t v31 = (void (*)(uint64_t, uint64_t))v43;
  }
  else
  {
    char v32 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
    v32(v10, a2);
    v32(v14, a2);

    unint64_t v31 = *v20;
  }
  uint64_t v33 = v47;
  v31(a2, a3);
  objc_super v34 = v48;
  v45(v48, v33, a2);
  unint64_t v35 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = a2;
  *(void *)(v36 + 24) = a3;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32))(v36 + v35, v34, a2);
  NSString v37 = String._bridgeToObjectiveC()();
  aBlock[4] = (uint64_t)sub_100910560;
  aBlock[5] = v36;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_1009103D4;
  aBlock[3] = (uint64_t)&unk_100FF6F70;
  uint64_t v38 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v38);
  swift_release();
  swift_bridgeObjectRelease();
}

void static MusicCoreAnalytics.sendEvent(eventName:eventPayload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  _OWORD v8[4] = a3;
  v8[5] = a4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  void v8[2] = sub_1009103D4;
  _OWORD v8[3] = &unk_100FF6F98;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v7);
}

Class sub_1009103D4(uint64_t a1)
{
  id v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1009105CC();
    v4.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }

  return v4.super.isa;
}

uint64_t sub_100910460()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100014CA4(v0, qword_10112A5C0);
  sub_100050A90(v0, (uint64_t)qword_10112A5C0);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1009104D8()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_100910560()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 16))();
}

unint64_t sub_1009105CC()
{
  unint64_t result = qword_1010C0F10;
  if (!qword_1010C0F10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010C0F10);
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicCoreAnalytics()
{
  return &type metadata for MusicCoreAnalytics;
}

void *MetricsEvent.PageRender.performanceMetrics.getter()
{
  swift_beginAccess();
  id v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t MetricsEvent.PageRender.onScreenResourcesAppearEndTime.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 24);
}

uint64_t MetricsEvent.PageRender.pageUserInteractiveTime.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 40);
}

uint64_t MetricsEvent.PageRender.resourceRequestStartTime.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 56);
}

uint64_t MetricsEvent.PageRender.pageEndTime.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 72);
}

uint64_t MetricsEvent.PageRender.pageInterruptTime.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 88);
}

uint64_t MetricsEvent.PageRender.pageAppearTime.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 104);
}

uint64_t MetricsEvent.PageRender.pageRequestTime.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 120);
}

uint64_t MetricsEvent.PageRender.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 152);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for Optional();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MetricsEvent.PageRender.request.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 152);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*MetricsEvent.PageRender.request.modify())()
{
  return j__swift_endAccess;
}

uint64_t MetricsEvent.PageRender.pageProperties.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002E4CE4(v1 + *(void *)(*(void *)v1 + 160), a1);
}

uint64_t MetricsEvent.PageRender.__allocating_init(pageProperties:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  MetricsEvent.PageRender.init(pageProperties:)(a1);
  return v2;
}

uint64_t *MetricsEvent.PageRender.init(pageProperties:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  v1[2] = 0;
  v1[3] = 0;
  *((unsigned char *)v1 + 32) = 1;
  v1[5] = 0;
  *((unsigned char *)v1 + 48) = 1;
  v1[7] = 0;
  *((unsigned char *)v1 + 64) = 1;
  v1[9] = 0;
  *((unsigned char *)v1 + 80) = 1;
  v1[11] = 0;
  *((unsigned char *)v1 + 96) = 1;
  v1[13] = 0;
  *((unsigned char *)v1 + 112) = 1;
  v1[15] = 0;
  *((unsigned char *)v1 + 128) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 56))((uint64_t)v1 + *(void *)(v3 + 152), 1, 1);
  *((unsigned char *)v1 + *(void *)(*v1 + 168)) = 0;
  sub_100910B10(a1, (uint64_t)v1 + *(void *)(*v1 + 160));
  return v1;
}

uint64_t sub_100910B10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetricsPageProperties();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *MetricsEvent.PageRender.updatePerformanceMetrics(_:with:)(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v7 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = a1;
  id v8 = a1;

  unint64_t result = *(void **)(v3 + 16);
  if (result)
  {
    [result responseEndTime];
    uint64_t v11 = v10;
    unint64_t result = (void *)swift_beginAccess();
    if ((*(unsigned char *)(v3 + 32) & 1) == 0)
    {
      swift_beginAccess();
      *(void *)(v3 + 72) = v11;
      *(unsigned char *)(v3 + 80) = 0;
      return (void *)sub_100910C3C(a2, a3);
    }
  }
  return result;
}

uint64_t sub_100910C3C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)v2 + 168);
  if ((*(unsigned char *)(v2 + v3) & 1) == 0)
  {
    uint64_t v5 = result;
    *(unsigned char *)(v2 + v3) = 1;
    sub_10007B23C();
    NSString v6 = (void *)swift_allocObject();
    _OWORD v6[2] = v2;
    v6[3] = v5;
    v6[4] = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_1009116E8, (uint64_t)v6);
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageAppear()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 112) == 1)
  {
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v7 = v6;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v1 + 104) = v7;
    *(unsigned char *)(v1 + 112) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageRequest()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 128) == 1)
  {
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v7 = v6;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v1 + 120) = v7;
    *(unsigned char *)(v1 + 128) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageAsUserInteractive()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 48) == 1)
  {
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v7 = v6;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v1 + 40) = v7;
    *(unsigned char *)(v1 + 48) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markResourceRequestStartTime()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 64) == 1)
  {
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v7 = v6;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v1 + 56) = v7;
    *(unsigned char *)(v1 + 64) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markOnScreenResourcesAppearEndTime(with:)(Swift::String_optional with)
{
  uint64_t v2 = v1;
  object = with.value._object;
  uint64_t countAndFlagsBits = with.value._countAndFlagsBits;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 32) == 1)
  {
    Date.init()();
    Date.timeIntervalSince1970.getter();
    uint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)(v2 + 24) = v10;
    *(unsigned char *)(v2 + 32) = 0;
    swift_beginAccess();
    uint64_t v11 = *(void **)(v2 + 16);
    if (v11)
    {
      [v11 responseEndTime];
      swift_beginAccess();
      *(void *)(v2 + 72) = v10;
      *(unsigned char *)(v2 + 80) = 0;
      sub_100910C3C(countAndFlagsBits, (uint64_t)object);
    }
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageDisappearanceAndRecordIfNecessary(with:)(Swift::String_optional with)
{
  uint64_t v2 = v1;
  object = with.value._object;
  uint64_t countAndFlagsBits = with.value._countAndFlagsBits;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 80) == 1)
  {
    swift_beginAccess();
    if (*(unsigned char *)(v2 + 96) == 1)
    {
      Date.init()();
      Date.timeIntervalSince1970.getter();
      uint64_t v10 = v9;
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
      *(void *)(v2 + 88) = v10;
      *(unsigned char *)(v2 + 96) = 0;
    }
  }
  sub_100910C3C(countAndFlagsBits, (uint64_t)object);
}

void sub_1009113BC(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_1010BBCB8 != -1) {
    swift_once();
  }
  MetricsReportingController.recordPageRenderEvent<A>(_:pageContext:)(a1, a2, a3);
}

id *MetricsEvent.PageRender.deinit()
{
  uint64_t v1 = (char *)v0 + *((void *)*v0 + 19);
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1009114E4((uint64_t)v0 + *((void *)*v0 + 20));
  return v0;
}

uint64_t sub_1009114E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MetricsPageProperties();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MetricsEvent.PageRender.__deallocating_deinit()
{
  MetricsEvent.PageRender.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_100911598()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MetricsPageProperties();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for MetricsEvent.PageRender()
{
  return sub_10004CF5C();
}

uint64_t sub_1009116A8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1009116E8()
{
  sub_1009113BC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

__n128 ApplicationCapabilities.Controller.capabilities.getter@<Q0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  __n128 result = v7;
  *(unsigned char *)a1 = v3;
  *(unsigned char *)(a1 + 1) = v4;
  *(unsigned char *)(a1 + 2) = v5;
  *(_OWORD *)(a1 + 8) = v6;
  *(__n128 *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v9;
  *(_OWORD *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v12;
  *(unsigned char *)(a1 + 104) = v13;
  *(void *)(a1 + 112) = v14;
  return result;
}

uint64_t ApplicationCapabilities.hasNetworkConnectivity.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ApplicationCapabilities.isCloudLibraryEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

unint64_t ApplicationCapabilities.Service.description.getter(char a1)
{
  unint64_t result = 0x636973756DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x646956636973756DLL;
      break;
    case 2:
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x6C6169636F73;
      break;
    case 4:
      unint64_t result = 0x6F69646172;
      break;
    case 5:
      unint64_t result = 0x73656E757469;
      break;
    case 6:
      unint64_t result = 0x74634170756F7267;
      break;
    case 7:
      unint64_t result = 0x746963696C707865;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0x6C62616E45696C6DLL;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Int sub_100911968()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  ApplicationCapabilities.Service.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1009119CC()
{
  ApplicationCapabilities.Service.rawValue.getter(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100911A20()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  ApplicationCapabilities.Service.rawValue.getter(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_100911A80@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s9MusicCore23ApplicationCapabilitiesV7ServiceO8rawValueAESgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_100911AB0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ApplicationCapabilities.Service.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100911ADC(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = ApplicationCapabilities.Service.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == ApplicationCapabilities.Service.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_100911B68()
{
  return ApplicationCapabilities.Service.rawValue.getter(*v0);
}

Swift::Void __swiftcall ApplicationCapabilities.setServiceEnabled(_:service:)(Swift::Bool _, MusicCore::ApplicationCapabilities::Service service)
{
  id v3 = [self sharedConnection];
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x100911C84);
  }
  switch(service)
  {
    case MusicCore_ApplicationCapabilities_Service_subscriptionRelated:
    case MusicCore_ApplicationCapabilities_Service_radio:
    case MusicCore_ApplicationCapabilities_Service_sharePlayTogether:
    case MusicCore_ApplicationCapabilities_Service_mliEnabled:
      break;
    default:
      id v5 = v3;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v4 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v5 setBoolValue:1 forSetting:v4];

      id v3 = v4;
      break;
  }
}

uint64_t ApplicationCapabilities.ratingWarning.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  long long v3 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ApplicationCapabilities.RatingWarning.threshold.getter()
{
  return *(void *)v0;
}

uint64_t ApplicationCapabilities.RatingWarning.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplicationCapabilities.RatingWarning.description.getter()
{
  strcpy((char *)v11, "RatingWarning(");
  HIBYTE(v11[1]) = -18;
  v13[0] = 0x6C6F687365726874;
  v13[1] = 0xEA00000000003D64;
  v1._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 10;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  v3._uint64_t countAndFlagsBits = 0x6C6F687365726874;
  v3._object = (void *)0xEA00000000003D64;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 0x3D656C746974;
  v12._object = (void *)0xE600000000000000;
  sub_10003CABC(v0 + 8, (uint64_t)v13, (uint64_t *)&unk_1010C28C0);
  sub_10003CABC((uint64_t)v13, (uint64_t)&v10, (uint64_t *)&unk_1010C28C0);
  sub_1000D230C((uint64_t)v13);
  sub_100063814((uint64_t *)&unk_1010C28C0);
  v4._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 10;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 0x3D6567617373656DLL;
  v10._object = (void *)0xE800000000000000;
  sub_10003CABC(v0 + 24, (uint64_t)&v12, (uint64_t *)&unk_1010C28C0);
  sub_10003CABC((uint64_t)&v12, (uint64_t)&v9, (uint64_t *)&unk_1010C28C0);
  sub_1000D230C((uint64_t)&v12);
  v6._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 10;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  return v11[0];
}

uint64_t sub_100911F34(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return _s9MusicCore23ApplicationCapabilitiesV13RatingWarningV23__derived_struct_equalsySbAE_AEtFZ_0(v5, v7) & 1;
}

uint64_t sub_100911F80()
{
  return ApplicationCapabilities.RatingWarning.description.getter();
}

void *ApplicationCapabilities.subscriptionStatus.getter()
{
  Swift::String v1 = *(void **)(v0 + 80);
  id v2 = v1;
  return v1;
}

uint64_t ApplicationCapabilities.subscriptionState.getter()
{
  return *(unsigned __int8 *)(v0 + 88);
}

MusicCore::ApplicationCapabilities::SubscriptionState_optional __swiftcall ApplicationCapabilities.SubscriptionState.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &off_100FED940;
  return (MusicCore::ApplicationCapabilities::SubscriptionState_optional)sub_1009180BC(rawValue, v1);
}

uint64_t ApplicationCapabilities.SubscriptionState.rawValue.getter(char a1)
{
  uint64_t result = 0x6564696365646E75;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x63697373616C63;
      break;
    case 2:
      uint64_t result = 0x6269726373627573;
      break;
    case 3:
      uint64_t result = 0x6275536563696F76;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1009120B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10005A09C(*a1, *a2);
}

Swift::Int sub_1009120C0()
{
  return Hasher._finalize()();
}

uint64_t sub_1009121B0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100912288()
{
  return Hasher._finalize()();
}

unint64_t sub_100912374@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100FED940;
  unint64_t result = sub_1009180BC(*a1, v3);
  *a2 = result;
  return result;
}

void sub_1009123AC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000064;
  uint64_t v3 = 0x6564696365646E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x63697373616C63;
      goto LABEL_3;
    case 2:
      *a1 = 0x6269726373627573;
      a1[1] = 0xEA00000000007265;
      break;
    case 3:
      *a1 = 0x6275536563696F76;
      a1[1] = 0xEF72656269726373;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t Player.ReplaceCommand.replaceIntent.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100912464(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = a1[1];
  int v3 = *(unsigned __int8 *)(a2 + 1);
  return sub_10086471C(*a1, *(unsigned char *)a2) & ~(v2 ^ v3) & 1;
}

uint64_t ApplicationCapabilities.Tabs.description.getter()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = Array.description.getter();
  int v2 = v1;
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 10;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  v4._uint64_t countAndFlagsBits = v0;
  v4._object = v2;
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  sub_100063814((uint64_t *)&unk_1010C0030);
  v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 10;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  v7._uint64_t countAndFlagsBits = 0xD000000000000010;
  v7._object = (void *)0x8000000100DCB060;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v8 = Array.description.getter();
  Swift::String v10 = v9;
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 10;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = 0xD000000000000012;
  v13._object = (void *)0x8000000100DCB080;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  return 0x2873626154;
}

uint64_t static ApplicationCapabilities.Tabs.__derived_struct_equals(_:_:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  if ((sub_100059CE8(a1, a4) & 1) == 0) {
    return 0;
  }
  if (a2 == 6)
  {
    if (a5 != 6) {
      return 0;
    }
  }
  else if (a5 == 6 || (sub_10005A254(a2, a5) & 1) == 0)
  {
    return 0;
  }

  return sub_10005A418(a3, a6);
}

uint64_t sub_10091270C(uint64_t a1, uint64_t a2)
{
  return sub_100912BE8(a1, a2, (uint64_t (*)(void))&type metadata accessor for Playlist.Variant, (unint64_t *)&qword_1010BD748, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
}

uint64_t sub_100912754(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    Swift::String v3 = (unsigned __int8 *)(a1 + 32);
    Swift::String v4 = (unsigned __int8 *)(a2 + 32);
    while (1)
    {
      unsigned int v7 = *v3++;
      uint64_t v6 = v7;
      unsigned int v9 = *v4++;
      uint64_t v8 = v9;
      unint64_t v10 = 0xD000000000000029;
      unint64_t v11 = 0x8000000100DAC960;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xD000000000000025;
          unint64_t v11 = 0x8000000100DAC990;
          break;
        case 2:
          unint64_t v10 = 0xD000000000000023;
          unint64_t v11 = 0x8000000100DAC9C0;
          break;
        case 3:
          unint64_t v10 = 0xD000000000000022;
          unint64_t v11 = 0x8000000100DAC9F0;
          break;
        case 4:
          Swift::String v12 = "LibraryView.Albums";
          goto LABEL_18;
        case 5:
          unint64_t v10 = 0xD000000000000026;
          unint64_t v11 = 0x8000000100DACA50;
          break;
        case 6:
          unint64_t v10 = 0xD000000000000027;
          unint64_t v11 = 0x8000000100DACA80;
          break;
        case 7:
          unint64_t v10 = 0xD000000000000022;
          unint64_t v11 = 0x8000000100DACAB0;
          break;
        case 8:
          unint64_t v10 = 0xD000000000000028;
          unint64_t v11 = 0x8000000100DACAE0;
          break;
        case 9:
          unint64_t v10 = 0xD000000000000025;
          unint64_t v11 = 0x8000000100DACB10;
          break;
        case 10:
          Swift::String v12 = "LibraryView.Composers";
LABEL_18:
          unint64_t v11 = (unint64_t)v12 | 0x8000000000000000;
          unint64_t v10 = 0xD000000000000021;
          break;
        case 11:
          unint64_t v10 = 0xD000000000000026;
          unint64_t v11 = 0x8000000100DACB70;
          break;
        case 12:
          unint64_t v10 = 0xD000000000000027;
          unint64_t v11 = 0x8000000100DACBA0;
          break;
        default:
          break;
      }
      unint64_t v13 = 0xD000000000000029;
      unint64_t v14 = 0x8000000100DAC960;
      switch(v8)
      {
        case 1:
          unint64_t v15 = 0xD000000000000025;
          NSString v16 = "LibraryView.RecentlyAdded";
          goto LABEL_31;
        case 2:
          unint64_t v15 = 0xD000000000000023;
          NSString v16 = "LibraryView.Playlists";
          goto LABEL_31;
        case 3:
          unint64_t v15 = 0xD000000000000022;
          NSString v16 = "LibraryView.Artists";
          goto LABEL_31;
        case 4:
          id v17 = "LibraryView.Albums";
          goto LABEL_34;
        case 5:
          unint64_t v15 = 0xD000000000000026;
          NSString v16 = "LibraryView.Songs";
          goto LABEL_31;
        case 6:
          unint64_t v15 = 0xD000000000000027;
          NSString v16 = "LibraryView.MadeForYou";
          goto LABEL_31;
        case 7:
          unint64_t v15 = 0xD000000000000022;
          NSString v16 = "LibraryView.MusicVideos";
          goto LABEL_31;
        case 8:
          unint64_t v15 = 0xD000000000000028;
          NSString v16 = "LibraryView.Genres";
          goto LABEL_31;
        case 9:
          unint64_t v15 = 0xD000000000000025;
          NSString v16 = "LibraryView.Compilations";
LABEL_31:
          unint64_t v14 = (unint64_t)v16 | 0x8000000000000000;
          if (v10 != v15) {
            goto LABEL_5;
          }
          goto LABEL_38;
        case 10:
          id v17 = "LibraryView.Composers";
LABEL_34:
          unint64_t v14 = (unint64_t)v17 | 0x8000000000000000;
          if (v10 != 0xD000000000000021) {
            goto LABEL_5;
          }
          goto LABEL_38;
        case 11:
          unint64_t v13 = 0xD000000000000026;
          unint64_t v14 = 0x8000000100DACB70;
          goto LABEL_37;
        case 12:
          unint64_t v14 = 0x8000000100DACBA0;
          if (v10 != 0xD000000000000027) {
            goto LABEL_5;
          }
          goto LABEL_38;
        default:
LABEL_37:
          if (v10 != v13) {
            goto LABEL_5;
          }
LABEL_38:
          if (v11 == v14)
          {
            swift_bridgeObjectRelease_n();
            if (!--v2) {
              return 1;
            }
          }
          else
          {
LABEL_5:
            char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v5 & 1) == 0) {
              return 0;
            }
            if (!--v2) {
              return 1;
            }
          }
          break;
      }
    }
  }
  return 1;
}

uint64_t sub_100912B64(uint64_t a1, uint64_t a2)
{
  return sub_10003C5B4(a1, a2, (uint64_t)&qword_1010C02A8);
}

uint64_t sub_100912B78(uint64_t a1, uint64_t a2)
{
  return sub_10003C5B4(a1, a2, (uint64_t)&unk_1010C02B0);
}

uint64_t sub_100912B8C(uint64_t a1, uint64_t a2)
{
  return sub_10003C5B4(a1, a2, (uint64_t)&qword_1010C1070);
}

uint64_t sub_100912BA0(uint64_t a1, uint64_t a2)
{
  return sub_100912BE8(a1, a2, (uint64_t (*)(void))&type metadata accessor for Playlist.Entry, (unint64_t *)&unk_1010C02C0, (void (*)(uint64_t))&type metadata accessor for Playlist.Entry, (uint64_t)&protocol conformance descriptor for Playlist.Entry);
}

uint64_t sub_100912BE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v38 = a6;
  uint64_t v10 = a3(0);
  __chkstk_darwin(v10);
  __n128 v14 = __chkstk_darwin(v11);
  NSString v16 = (char *)&v31 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17 == *(void *)(a2 + 16))
  {
    if (!v17 || a1 == a2)
    {
      char v25 = 1;
    }
    else
    {
      unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      char v20 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
      uint64_t v19 = v12 + 16;
      unint64_t v35 = v20;
      uint64_t v36 = v13;
      uint64_t v31 = *(void *)(v19 + 56);
      uint64_t v32 = a2;
      uint64_t v37 = v19;
      uint64_t v33 = a1;
      objc_super v34 = (void (**)(char *, uint64_t))(v19 - 8);
      uint64_t v21 = v17 - 1;
      do
      {
        uint64_t v22 = v35;
        ((void (*)(char *, unint64_t, uint64_t, __n128))v35)(v16, a1 + v18, v10, v14);
        uint64_t v23 = v16;
        uint64_t v24 = v36;
        v22(v36, a2 + v18, v10);
        sub_100917B6C(a4, a5);
        char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
        char v26 = *v34;
        uint64_t v27 = v24;
        NSString v16 = v23;
        (*v34)(v27, v10);
        v26(v23, v10);
        BOOL v29 = v21-- != 0;
        if ((v25 & 1) == 0) {
          break;
        }
        v18 += v31;
        a2 = v32;
        a1 = v33;
      }
      while (v29);
    }
  }
  else
  {
    char v25 = 0;
  }
  return v25 & 1;
}

uint64_t sub_100912E00(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if ((sub_100059CE8(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  if (v2 == 6)
  {
    if (v4 != 6) {
      return 0;
    }
  }
  else if (v4 == 6 || (sub_10005A254(v2, v4) & 1) == 0)
  {
    return 0;
  }

  return sub_10005A418(v3, v5);
}

uint64_t sub_100912EA4()
{
  return ApplicationCapabilities.Tabs.description.getter();
}

uint64_t ApplicationCapabilities.tabs.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_100912F00()
{
  uint64_t v1 = v0;
  sub_100063814(&qword_1010C0300);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100E2CBA0;
  *(void *)(inited + 32) = 0x64656E6769537369;
  *(void *)(inited + 40) = 0xEA00000000006E49;
  *(unsigned char *)(inited + 48) = *(unsigned char *)v0;
  *(void *)(inited + 72) = &type metadata for Bool;
  *(void *)(inited + 80) = 0xD000000000000016;
  *(void *)(inited + 88) = 0x8000000100DB6F20;
  *(unsigned char *)(inited + 96) = *(unsigned char *)(v0 + 1);
  *(void *)(inited + 120) = &type metadata for Bool;
  *(void *)(inited + 128) = 0xD000000000000015;
  *(void *)(inited + 136) = 0x8000000100DCB7F0;
  *(unsigned char *)(inited + 144) = *(unsigned char *)(v0 + 2);
  *(void *)(inited + 168) = &type metadata for Bool;
  *(void *)(inited + 176) = 0xD000000000000018;
  *(void *)(inited + 184) = 0x8000000100DCB810;
  sub_1009133FC(v0, (uint64_t *)(inited + 192));
  *(void *)(inited + 224) = 0x536465776F6C6C61;
  *(void *)(inited + 232) = 0xEF73656369767265;
  sub_100917EC4();
  swift_bridgeObjectRetain();
  uint64_t v3 = Set.description.getter();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  *(void *)(inited + 240) = v3;
  *(void *)(inited + 248) = v5;
  *(void *)(inited + 264) = &type metadata for String;
  *(void *)(inited + 272) = 0xD000000000000012;
  *(void *)(inited + 280) = 0x8000000100DCB830;
  swift_bridgeObjectRetain();
  uint64_t v6 = Set.description.getter();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  *(void *)(inited + 288) = v6;
  *(void *)(inited + 296) = v8;
  *(void *)(inited + 312) = &type metadata for String;
  strcpy((char *)(inited + 320), "ratingWarning");
  *(_WORD *)(inited + 334) = -4864;
  long long v9 = *(_OWORD *)(v0 + 56);
  long long v28 = *(_OWORD *)(v0 + 40);
  long long v29 = v9;
  uint64_t v30 = *(void *)(v0 + 72);
  sub_10003CABC((uint64_t)&v28 + 8, (uint64_t)v32, (uint64_t *)&unk_1010C28C0);
  sub_10003CABC((uint64_t)&v29 + 8, (uint64_t)v31, (uint64_t *)&unk_1010C28C0);
  sub_1000D230C((uint64_t)v32);
  sub_1000D230C((uint64_t)v31);
  uint64_t v10 = ApplicationCapabilities.RatingWarning.description.getter();
  uint64_t v12 = v11;
  sub_1001ECE50((uint64_t)v32);
  sub_1001ECE50((uint64_t)v31);
  *(void *)(inited + 336) = v10;
  *(void *)(inited + 344) = v12;
  *(void *)(inited + 360) = &type metadata for String;
  *(void *)(inited + 368) = 0xD000000000000012;
  *(void *)(inited + 376) = 0x8000000100DCB850;
  sub_10003CABC(v1 + 80, (uint64_t)&v27, (uint64_t *)&unk_1010C0310);
  sub_10003CABC((uint64_t)&v27, (uint64_t)&v26, (uint64_t *)&unk_1010C0310);
  sub_10003CB4C(&v27);
  sub_100063814((uint64_t *)&unk_1010C0310);
  *(void *)(inited + 384) = String.init<A>(describing:)();
  *(void *)(inited + 392) = v13;
  *(void *)(inited + 408) = &type metadata for String;
  *(void *)(inited + 416) = 0xD000000000000011;
  *(void *)(inited + 424) = 0x8000000100DCB870;
  unint64_t v14 = 0xE900000000000064;
  uint64_t v15 = 0x6564696365646E75;
  switch(*(unsigned char *)(v1 + 88))
  {
    case 1:
      unint64_t v14 = 0xE700000000000000;
      uint64_t v15 = 0x63697373616C63;
      break;
    case 2:
      unint64_t v14 = 0xEA00000000007265;
      uint64_t v15 = 0x6269726373627573;
      break;
    case 3:
      unint64_t v14 = 0xEF72656269726373;
      uint64_t v15 = 0x6275536563696F76;
      break;
    default:
      break;
  }
  *(void *)(inited + 432) = v15;
  *(void *)(inited + 440) = v14;
  *(void *)(inited + 456) = &type metadata for String;
  *(void *)(inited + 464) = 1935827316;
  *(void *)(inited + 472) = 0xE400000000000000;
  uint64_t v16 = *(void *)(v1 + 96);
  uint64_t v26 = v16;
  int64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain();
    sub_100076F88(0, v17, 0);
    unint64_t v18 = (unsigned __int8 *)(v16 + 32);
    do
    {
      int v19 = *v18++;
      unint64_t v20 = 0xE700000000000000;
      uint64_t v21 = 0x7972617262696CLL;
      switch(v19)
      {
        case 1:
          unint64_t v20 = 0xE900000000000077;
          uint64_t v21 = 0x6F4E6E657473696CLL;
          break;
        case 2:
          unint64_t v20 = 0xE600000000000000;
          uint64_t v21 = 0x6573776F7262;
          break;
        case 3:
          unint64_t v20 = 0xE500000000000000;
          uint64_t v21 = 0x6F69646172;
          break;
        case 4:
          unint64_t v20 = 0xE600000000000000;
          uint64_t v21 = 0x686372616573;
          break;
        case 5:
          unint64_t v20 = 0xE600000000000000;
          uint64_t v21 = 0x736F65646976;
          break;
        default:
          break;
      }
      unint64_t v23 = _swiftEmptyArrayStorage[2];
      unint64_t v22 = _swiftEmptyArrayStorage[3];
      if (v23 >= v22 >> 1) {
        sub_100076F88((char *)(v22 > 1), v23 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v23 + 1;
      uint64_t v24 = (char *)&_swiftEmptyArrayStorage[2 * v23];
      *((void *)v24 + 4) = v21;
      *((void *)v24 + 5) = v20;
      --v17;
    }
    while (v17);
    sub_100219BC4((uint64_t)&v26);
  }
  *(void *)(inited + 504) = sub_100063814(&qword_1010C28F0);
  *(void *)(inited + 480) = _swiftEmptyArrayStorage;
  return sub_1008F6944(inited);
}

void sub_1009133FC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 0x6E776F6E6B6E75;
  switch(*(void *)(a1 + 16))
  {
    case 0:
      break;
    case 1:
      uint64_t v4 = 0x64656C62616E65;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v4 = 0x64656C6261736964;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x6564696C67;
      break;
    default:
      v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v5);
      swift_bridgeObjectRelease();
      v6._uint64_t countAndFlagsBits = 62;
      v6._object = (void *)0xE100000000000000;
      String.append(_:)(v6);
      uint64_t v4 = 0x3C6E776F6E6B6E75;
      unint64_t v3 = 0xE800000000000000;
      break;
  }
  a2[3] = (uint64_t)&type metadata for String;
  *a2 = v4;
  a2[1] = v3;
}

BOOL sub_10091352C(uint64_t a1, long long *a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  uint64_t v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  uint64_t v13 = *(void *)(a1 + 112);
  long long v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  long long v5 = *a2;
  long long v6 = a2[1];
  long long v7 = a2[3];
  v14[2] = a2[2];
  v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  long long v8 = a2[4];
  long long v9 = a2[5];
  long long v10 = a2[6];
  uint64_t v15 = *((void *)a2 + 14);
  v14[5] = v9;
  v14[6] = v10;
  v14[4] = v8;
  return _s9MusicCore23ApplicationCapabilitiesV23__derived_struct_equalsySbAC_ACtFZ_0((unsigned __int8 *)v12, (unsigned __int8 *)v14);
}

uint64_t static ApplicationCapabilities.Controller.shared.getter()
{
  if (qword_1010BBCC8 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_10091360C()
{
  id v0 = [self standardUserDefaults];
  uint64_t v1 = sub_10091365C();

  return v1;
}

uint64_t sub_10091365C()
{
  LOBYTE(v1) = 1;
  sub_10005E1A0();
  sub_10005D1D4();
  NSUserDefaults.subscript.getter(&v2);
  if (v3)
  {
    sub_100063814(&qword_1010C0328);
    if (swift_dynamicCast()) {
      return v1;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1000637B8((uint64_t)&v2, (uint64_t *)&unk_1010C0270);
    return 0;
  }
}

uint64_t property wrapper backing initializer of ApplicationCapabilities.Controller.capabilities()
{
  return Published.init(initialValue:)();
}

uint64_t sub_10091375C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    UnfairLock.locked<A>(_:)((void (*)(void))sub_10003DA78);
    return swift_release();
  }
  return result;
}

uint64_t sub_1009137F0(char a1, uint64_t (*a2)(uint64_t))
{
  if ((a1 & 1) == 0) {
    return 0;
  }
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  v15[4] = v11;
  void v15[5] = v12;
  v15[6] = v13;
  uint64_t v16 = v14;
  v15[0] = v7;
  v15[1] = v8;
  _OWORD v15[2] = v9;
  v15[3] = v10;
  unint64_t v3 = sub_100912F00();
  sub_10005E8DC((uint64_t)v15);
  uint64_t v4 = sub_100955840(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = a2(v4);
  swift_release();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10091391C(uint64_t a1, char a2, void *aBlock)
{
  uint64_t v3 = a2 & 1;
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t))(a1 + 32);
  uint64_t v5 = _Block_copy(aBlock);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  swift_retain();
  uint64_t v7 = v4(v3, sub_100312ED4, v6);
  swift_release();
  swift_release();
  return v7;
}

__n128 sub_1009139BC@<Q0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  __n128 result = v7;
  *(unsigned char *)a1 = v3;
  *(unsigned char *)(a1 + 1) = v4;
  *(unsigned char *)(a1 + 2) = v5;
  *(_OWORD *)(a1 + 8) = v6;
  *(__n128 *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v9;
  *(_OWORD *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v12;
  *(unsigned char *)(a1 + 104) = v13;
  *(void *)(a1 + 112) = v14;
  return result;
}

uint64_t sub_100913A90(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 80);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return static Published.subscript.setter();
}

uint64_t sub_100913BE0()
{
  return swift_endAccess();
}

uint64_t sub_100913C48(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010C02A0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = __chkstk_darwin(v6);
  long long v9 = (char *)&v12 - v8;
  long long v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_beginAccess();
  sub_100063814(&qword_1010C2E60);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_100913DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100008650, 0, 0);
}

uint64_t sub_100913DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100913E74, v6, v5);
}

uint64_t sub_100913E74()
{
  swift_release();
  id v1 = [self defaultCenter];
  if (qword_1010BBD38 != -1) {
    swift_once();
  }
  [v1 postNotificationName:static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange object:*(void *)(v0 + 16)];

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t *ApplicationCapabilities.NotificationNames.activeAccountDidChange.unsafeMutableAddressor()
{
  if (qword_1010BBD30 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.activeAccountDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange.unsafeMutableAddressor()
{
  if (qword_1010BBCE8 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange.unsafeMutableAddressor()
{
  if (qword_1010BBCF0 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange.unsafeMutableAddressor()
{
  if (qword_1010BBCF8 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange.unsafeMutableAddressor()
{
  if (qword_1010BBD18 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange.unsafeMutableAddressor()
{
  if (qword_1010BBD00 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange.unsafeMutableAddressor()
{
  if (qword_1010BBD08 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.mliEnabledDidChange.unsafeMutableAddressor()
{
  if (qword_1010BBD10 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.mliEnabledDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange.unsafeMutableAddressor()
{
  if (qword_1010BBD48 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange.unsafeMutableAddressor()
{
  if (qword_1010BBD40 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange.unsafeMutableAddressor()
{
  if (qword_1010BBD28 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange;
}

uint64_t sub_10091429C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[18] = a5;
  v6[19] = a6;
  v6[17] = a4;
  type metadata accessor for MainActor();
  v6[20] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100914338, v8, v7);
}

uint64_t sub_100914338()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  long long v4 = *(_OWORD *)(v3 + 48);
  long long v6 = *(_OWORD *)v3;
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v0 + 64) = v4;
  *(_OWORD *)(v0 + 16) = v6;
  *(_OWORD *)(v0 + 32) = v5;
  long long v8 = *(_OWORD *)(v3 + 80);
  long long v7 = *(_OWORD *)(v3 + 96);
  long long v9 = *(_OWORD *)(v3 + 64);
  *(void *)(v0 + 128) = *(void *)(v3 + 112);
  *(_OWORD *)(v0 + 96) = v8;
  *(_OWORD *)(v0 + 112) = v7;
  *(_OWORD *)(v0 + 80) = v9;
  sub_10005E95C(v3);
  swift_retain();
  static Published.subscript.setter();
  swift_retain();
  sub_100916EF4(v1, v2);
  swift_release();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t ApplicationCapabilities.Controller.updated()(uint64_t a1)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = v1;
  return _swift_task_switch(sub_100914464, 0, 0);
}

uint64_t sub_100914464()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100914540;
  uint64_t v2 = *(void *)(v0 + 144);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0x2864657461647075, 0xE900000000000029, sub_1009172C8, v2, &type metadata for ApplicationCapabilities);
}

uint64_t sub_100914540()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10091463C, 0, 0);
}

uint64_t sub_10091463C()
{
  char v1 = *(unsigned char *)(v0 + 17);
  char v2 = *(unsigned char *)(v0 + 18);
  char v3 = *(unsigned char *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  char v5 = *(unsigned char *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 136);
  long long v8 = *(_OWORD *)(v0 + 40);
  long long v9 = *(_OWORD *)(v0 + 24);
  long long v10 = *(_OWORD *)(v0 + 56);
  long long v11 = *(_OWORD *)(v0 + 72);
  long long v12 = *(_OWORD *)(v0 + 88);
  *(unsigned char *)uint64_t v6 = *(unsigned char *)(v0 + 16);
  *(unsigned char *)(v6 + 1) = v1;
  *(unsigned char *)(v6 + 2) = v2;
  *(_OWORD *)(v6 + 8) = v9;
  *(_OWORD *)(v6 + 24) = v8;
  *(_OWORD *)(v6 + 40) = v10;
  *(_OWORD *)(v6 + 56) = v11;
  *(_OWORD *)(v6 + 72) = v12;
  *(unsigned char *)(v6 + 88) = v3;
  *(void *)(v6 + 96) = v4;
  *(unsigned char *)(v6 + 104) = v5;
  *(void *)(v6 + 112) = v7;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009146B0(uint64_t a1)
{
  uint64_t v2 = sub_100063814((uint64_t *)&unk_1010C02D0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  char v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  long long v8 = (char *)v21 - v7;
  if (qword_1010BBD90 != -1) {
    swift_once();
  }
  uint64_t v9 = static BagProvider.shared;
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  long long v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11(v8, a1, v2);
  v11(v5, (uint64_t)v8, v2);
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v10;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v13 + v12, v8, v2);
  swift_retain_n();
  sub_100063814(&qword_1010C0630);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10003DA94);
  uint64_t v14 = v22;
  if (v22)
  {
    sub_100914A4C(v22);
    swift_release();
    swift_release();
  }
  else
  {
    type metadata accessor for BagProvider.Observer();
    uint64_t v15 = swift_allocObject();
    swift_weakInit();
    *(void *)(v15 + 24) = 0;
    *(void *)(v15 + 32) = 0;
    swift_weakAssign();
    uint64_t v16 = swift_allocObject();
    swift_weakInit();
    int64_t v17 = (void *)swift_allocObject();
    void v17[2] = sub_100917CBC;
    v17[3] = v13;
    v17[4] = v16;
    v17[5] = v15;
    v21[1] = 0;
    uint64_t v18 = *(void *)(v15 + 24);
    *(void *)(v15 + 24) = sub_100917D7C;
    *(void *)(v15 + 32) = v17;
    swift_retain();
    swift_retain();
    uint64_t v19 = sub_10006ADFC(v18);
    __chkstk_darwin(v19);
    v21[-2] = v9;
    v21[-1] = v15;
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100917D88);
    sub_100044C44(0);
    swift_release();
    swift_release();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return swift_release();
}

uint64_t sub_100914A4C(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v3 = *(unsigned char *)(result + 16);
    a1;
    swift_retain();
    id v4 = sub_10005A738(a1, v3, (uint64_t)&v5);
    __chkstk_darwin(v4);
    swift_retain();
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100917DA4);
    swift_release();
    sub_100063814((uint64_t *)&unk_1010C02D0);
    CheckedContinuation.resume(returning:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_100914BC0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag);
  *(void *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag) = a2;

  uint64_t v7 = a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities;
  long long v8 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  v18[4] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 64);
  v18[5] = v8;
  v18[6] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96);
  uint64_t v19 = *(void *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 112);
  long long v9 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 16);
  v18[0] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities);
  v18[1] = v9;
  long long v10 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 48);
  _OWORD v18[2] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32);
  id v18[3] = v10;
  int64_t v17 = *(void **)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  long long v11 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v7 + 48) = v11;
  long long v12 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a3;
  *(_OWORD *)(v7 + 16) = v12;
  *(void *)(v7 + 112) = *(void *)(a3 + 112);
  long long v13 = *(_OWORD *)(a3 + 96);
  long long v14 = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v7 + 96) = v13;
  *(_OWORD *)(v7 + 64) = v14;
  sub_10005E95C(a3);
  sub_10005E95C(a3);
  id v15 = a2;
  sub_10005E95C((uint64_t)v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_100058EB8((uint64_t)v18);
  sub_10005E8DC(a3);
  return sub_10005E8DC((uint64_t)v18);
}

uint64_t ApplicationCapabilities.Controller.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities;
  uint64_t v2 = sub_100063814(&qword_1010C2E60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  char v3 = *(void **)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t ApplicationCapabilities.Controller.__deallocating_deinit()
{
  ApplicationCapabilities.Controller.deinit();

  return swift_deallocClassInstance();
}

Swift::Bool __swiftcall ApplicationCapabilities.Tabs.shouldShowLoadingUpsellBanner(for:)(MusicCore::TabIdentifier a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = (char *)(v3 + 33);
  uint64_t v6 = a1;
  while (2)
  {
    char v7 = *v5;
    unint64_t v8 = 0xE700000000000000;
    uint64_t v9 = 0x7972617262696CLL;
    switch(*(v5 - 1))
    {
      case 1:
      case 2:
        uint64_t v9 = 0x6F4E6E657473696CLL;
        unint64_t v8 = 0xE900000000000077;
        break;
      case 3:
        unint64_t v8 = 0xE600000000000000;
        uint64_t v9 = 0x6573776F7262;
        break;
      case 4:
        unint64_t v8 = 0xE500000000000000;
        uint64_t v9 = 0x6F69646172;
        break;
      case 5:
        unint64_t v8 = 0xE600000000000000;
        uint64_t v9 = 0x686372616573;
        break;
      case 6:
        unint64_t v8 = 0xE600000000000000;
        uint64_t v9 = 0x736F65646976;
        break;
      default:
        break;
    }
    unint64_t v10 = 0xE700000000000000;
    uint64_t v11 = 0x7972617262696CLL;
    switch(v6)
    {
      case 1:
        unint64_t v10 = 0xE900000000000077;
        if (v9 == 0x6F4E6E657473696CLL) {
          goto LABEL_18;
        }
        goto LABEL_19;
      case 2:
        unint64_t v10 = 0xE600000000000000;
        if (v9 != 0x6573776F7262) {
          goto LABEL_19;
        }
        goto LABEL_18;
      case 3:
        unint64_t v10 = 0xE500000000000000;
        if (v9 != 0x6F69646172) {
          goto LABEL_19;
        }
        goto LABEL_18;
      case 4:
        unint64_t v10 = 0xE600000000000000;
        uint64_t v11 = 0x686372616573;
        goto LABEL_17;
      case 5:
        unint64_t v10 = 0xE600000000000000;
        if (v9 != 0x736F65646976) {
          goto LABEL_19;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (v9 != v11) {
          goto LABEL_19;
        }
LABEL_18:
        if (v8 != v10)
        {
LABEL_19:
          char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v12)
          {
            swift_bridgeObjectRelease();
            return v7;
          }
          v5 += 2;
          if (!--v2)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v7;
    }
  }
}

uint64_t sub_1009150F8()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 dictionaryForBagKey:v1];

  if (!v2 || (uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(), v2, !v3))
  {
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_7:
    sub_1000637B8((uint64_t)&v11, (uint64_t *)&unk_1010C0270);
LABEL_8:
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_9:
    sub_1000637B8((uint64_t)&v11, (uint64_t *)&unk_1010C0270);
    return 2;
  }
  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_100076DAC((uint64_t)v10), (v5 & 1) != 0))
  {
    sub_100076134(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100076EB8((uint64_t)v10);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_7;
  }
  sub_100063814(&qword_1010C2930);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)v10;
  if (!*(void *)v10) {
    goto LABEL_8;
  }
  AnyHashable.init<A>(_:)();
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_100076DAC((uint64_t)v10), (v9 & 1) != 0))
  {
    sub_100076134(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100076EB8((uint64_t)v10);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_9;
  }
  if (swift_dynamicCast()) {
    return v10[0];
  }
  else {
    return 2;
  }
}

uint64_t sub_100915328()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 dictionaryForBagKey:v1];

  if (!v2 || (uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(), v2, !v3))
  {
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_7:
    sub_1000637B8((uint64_t)&v11, (uint64_t *)&unk_1010C0270);
LABEL_8:
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_9:
    sub_1000637B8((uint64_t)&v11, (uint64_t *)&unk_1010C0270);
    return 0;
  }
  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_100076DAC((uint64_t)&v10), (v5 & 1) != 0))
  {
    sub_100076134(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100076EB8((uint64_t)&v10);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_7;
  }
  sub_100063814(&qword_1010C2930);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v7 = v10;
  if (!v10) {
    goto LABEL_8;
  }
  AnyHashable.init<A>(_:)();
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_100076DAC((uint64_t)&v10), (v9 & 1) != 0))
  {
    sub_100076134(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100076EB8((uint64_t)&v10);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_9;
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  return result;
}

uint64_t sub_100915564@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, __int16 *a3@<X8>)
{
  uint64_t v5 = *a1;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_100076DAC((uint64_t)v27), (v7 & 1) != 0))
  {
    sub_100076134(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v28);
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  sub_100076EB8((uint64_t)v27);
  if (!*((void *)&v29 + 1))
  {
    uint64_t result = sub_1000637B8((uint64_t)&v28, (uint64_t *)&unk_1010C0270);
    goto LABEL_11;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_11:
    __int16 v14 = 512;
    goto LABEL_12;
  }
  v31._uint64_t countAndFlagsBits = 25705;
  v31._object = (void *)0xE200000000000000;
  unsigned __int8 v9 = sub_100921474(v31);
  int v10 = v9;
  unsigned __int8 v11 = v9;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v5 + 16) && (unint64_t v12 = sub_100076DAC((uint64_t)v27), (v13 & 1) != 0))
  {
    sub_100076134(*(void *)(v5 + 56) + 32 * v12, (uint64_t)&v28);
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  sub_100076EB8((uint64_t)v27);
  if (*((void *)&v29 + 1))
  {
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      __int16 v15 = v11;
      goto LABEL_48;
    }
  }
  else
  {
    uint64_t result = sub_1000637B8((uint64_t)&v28, (uint64_t *)&unk_1010C0270);
  }
  uint64_t v17 = *(void *)(a2 + 16);
  if (!v17) {
    goto LABEL_46;
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = a2;
  uint64_t v18 = (unsigned __int8 *)(a2 + 33);
  unsigned __int8 v26 = v11;
  while (2)
  {
    int v19 = *v18;
    unint64_t v20 = 0xE800000000000000;
    uint64_t result = 0x636973756D5F796DLL;
    switch(*(v18 - 1))
    {
      case 1u:
        unint64_t v20 = 0xE700000000000000;
        uint64_t result = 0x756F795F726F66;
        break;
      case 2u:
        uint64_t result = 0x6E5F6E657473696CLL;
        unint64_t v20 = 0xEA0000000000776FLL;
        break;
      case 3u:
        unint64_t v20 = 0xE600000000000000;
        uint64_t result = 0x6573776F7262;
        break;
      case 4u:
        unint64_t v20 = 0xE500000000000000;
        uint64_t v21 = 1768186226;
        goto LABEL_28;
      case 5u:
        unint64_t v20 = 0xE600000000000000;
        uint64_t result = 0x686372616573;
        break;
      case 6u:
        unint64_t v20 = 0xE500000000000000;
        uint64_t v21 = 1701079414;
LABEL_28:
        uint64_t result = v21 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000;
        break;
      default:
        break;
    }
    unint64_t v22 = 0xE800000000000000;
    uint64_t v23 = 0x636973756D5F796DLL;
    switch(v10)
    {
      case 0:
        goto LABEL_38;
      case 1:
        unint64_t v22 = 0xE700000000000000;
        if (result != 0x756F795F726F66) {
          goto LABEL_43;
        }
        goto LABEL_42;
      case 2:
        unint64_t v22 = 0xEA0000000000776FLL;
        if (result != 0x6E5F6E657473696CLL) {
          goto LABEL_43;
        }
        goto LABEL_42;
      case 3:
        unint64_t v22 = 0xE600000000000000;
        if (result != 0x6573776F7262) {
          goto LABEL_43;
        }
        goto LABEL_42;
      case 4:
        unint64_t v22 = 0xE500000000000000;
        uint64_t v24 = 1768186226;
        goto LABEL_41;
      case 5:
        unint64_t v22 = 0xE600000000000000;
        uint64_t v23 = 0x686372616573;
LABEL_38:
        if (result != v23) {
          goto LABEL_43;
        }
        goto LABEL_42;
      case 6:
        unint64_t v22 = 0xE500000000000000;
        uint64_t v24 = 1701079414;
LABEL_41:
        if (result != (v24 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
          goto LABEL_43;
        }
LABEL_42:
        if (v20 != v22)
        {
LABEL_43:
          char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v25)
          {
            uint64_t result = swift_bridgeObjectRelease();
            __int16 v15 = v26;
            if (v19) {
              goto LABEL_17;
            }
LABEL_48:
            __int16 v16 = 0;
            goto LABEL_49;
          }
          v18 += 2;
          if (!--v17)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unsigned __int8 v11 = v26;
LABEL_46:
            __int16 v16 = 0;
            __int16 v15 = v11;
            goto LABEL_49;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease_n();
        __int16 v15 = v26;
        if ((v19 & 1) == 0) {
          goto LABEL_48;
        }
LABEL_17:
        __int16 v16 = 256;
LABEL_49:
        __int16 v14 = v16 | v15;
LABEL_12:
        *a3 = v14;
        return result;
      default:
        goto LABEL_11;
    }
  }
}

id sub_1009159D0()
{
  id result = [self sharedConnection];
  if (result)
  {
    id v2 = result;
    [result unregisterObserver:v0];

    v3.receiver = v0;
    v3.super_class = (Class)type metadata accessor for ApplicationCapabilities.Controller.ProfileObserver();
    return [super dealloc];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100915B3C(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void))
{
  if (a4) {
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  if (swift_weakLoadStrong())
  {
    id v9 = a3;
    id v8 = a1;
    UnfairLock.locked<A>(_:)(a5);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100915C68(char *a1, char *a2)
{
  return sub_100863A18(*a1, *a2);
}

Swift::Int sub_100915C74()
{
  return sub_100919F84();
}

uint64_t sub_100915C7C()
{
  return sub_10091A4E0();
}

Swift::Int sub_100915C84()
{
  return sub_10091ACA8();
}

unint64_t sub_100915C8C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100FED9C0;
  unint64_t result = sub_1009180BC(*a1, v3);
  *a2 = result;
  return result;
}

NSString sub_100915CC4()
{
  NSString result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange.getter()
{
  return sub_100916124(&qword_1010BBCE8, (void **)&static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange);
}

NSString sub_100915D20()
{
  NSString result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange.getter()
{
  return sub_100916124(&qword_1010BBCF0, (void **)&static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange);
}

NSString sub_100915D7C()
{
  NSString result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange.getter()
{
  return sub_100916124(&qword_1010BBCF8, (void **)&static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange);
}

NSString sub_100915DD8()
{
  NSString result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange.getter()
{
  return sub_100916124(&qword_1010BBD00, (void **)&static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange);
}

NSString sub_100915E34()
{
  NSString result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange.getter()
{
  return sub_100916124(&qword_1010BBD08, (void **)&static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange);
}

NSString sub_100915E90()
{
  NSString result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.mliEnabledDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.mliEnabledDidChange.getter()
{
  return sub_100916124(&qword_1010BBD10, (void **)&static ApplicationCapabilities.NotificationNames.mliEnabledDidChange);
}

NSString sub_100915EEC()
{
  NSString result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange.getter()
{
  return sub_100916124(&qword_1010BBD18, (void **)&static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange);
}

id static ApplicationCapabilities.NotificationNames.supportedTabsDidChange.getter()
{
  return sub_100916124(&qword_1010BBD20, (void **)&static ApplicationCapabilities.NotificationNames.supportedTabsDidChange);
}

NSString sub_100915F6C()
{
  NSString result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange.getter()
{
  return sub_100916124(&qword_1010BBD28, (void **)&static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange);
}

NSString sub_100915FC8()
{
  NSString result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.activeAccountDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.activeAccountDidChange.getter()
{
  return sub_100916124(&qword_1010BBD30, (void **)&static ApplicationCapabilities.NotificationNames.activeAccountDidChange);
}

id static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.getter()
{
  return sub_100916124(&qword_1010BBD38, (void **)&static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange);
}

NSString sub_100916048()
{
  NSString result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange.getter()
{
  return sub_100916124(&qword_1010BBD40, (void **)&static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange);
}

NSString sub_1009160A4()
{
  NSString result = String._bridgeToObjectiveC()();
  static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange.getter()
{
  return sub_100916124(&qword_1010BBD48, (void **)&static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange);
}

id static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange.getter()
{
  return sub_100916124(&qword_1010BBD50, (void **)&static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange);
}

id sub_100916124(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  Swift::OpaquePointer v3 = *a2;

  return v3;
}

char *sub_1009161E0(unsigned __int8 a1, uint64_t a2)
{
  if (!a2)
  {
LABEL_51:
    return sub_10005E2F4(a1);
  }
  uint64_t v3 = a2;
  uint64_t v36 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v37 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v38 = a1;
  objc_super v39 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v34 = v3;
  unsigned __int8 v35 = a1;
  while (v6)
  {
    unint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v10 = v9 | (v7 << 6);
LABEL_20:
    __int16 v14 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    __int16 v16 = (void *)v14[1];
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18._uint64_t countAndFlagsBits = v15;
    v18._object = v16;
    Swift::Int v19 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100FEC048, v18);
    swift_bridgeObjectRelease();
    uint64_t v20 = 0x6564696365646E75;
    unint64_t v21 = 0xE900000000000064;
    switch(v19)
    {
      case 0:
        goto LABEL_24;
      case 1:
        unint64_t v21 = 0xE700000000000000;
        uint64_t v20 = 0x63697373616C63;
        goto LABEL_24;
      case 2:
        uint64_t v20 = 0x6269726373627573;
        unint64_t v21 = 0xEA00000000007265;
        goto LABEL_24;
      case 3:
        uint64_t v20 = 0x6275536563696F76;
        unint64_t v21 = 0xEF72656269726373;
LABEL_24:
        uint64_t v22 = 0x6564696365646E75;
        unint64_t v23 = 0xE900000000000064;
        switch(v38)
        {
          case 1:
            unint64_t v23 = 0xE700000000000000;
            if (v20 == 0x63697373616C63) {
              goto LABEL_29;
            }
            goto LABEL_5;
          case 2:
            uint64_t v22 = 0x6269726373627573;
            unint64_t v23 = 0xEA00000000007265;
            goto LABEL_28;
          case 3:
            unint64_t v23 = 0xEF72656269726373;
            if (v20 != 0x6275536563696F76) {
              goto LABEL_5;
            }
            goto LABEL_29;
          default:
LABEL_28:
            if (v20 != v22) {
              goto LABEL_5;
            }
LABEL_29:
            if (v21 == v23)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
            }
            else
            {
LABEL_5:
              char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v8 & 1) == 0) {
                goto LABEL_6;
              }
              swift_bridgeObjectRelease();
            }
            uint64_t v24 = sub_10005E2F4(a1);
            uint64_t v25 = *(void *)(v17 + 16);
            if (v25)
            {
              swift_bridgeObjectRetain();
              uint64_t v26 = 0;
              objc_super v39 = (char *)&_swiftEmptyArrayStorage;
              do
              {
                uint64_t v41 = *(void *)(v17 + 8 * v26 + 32);
                swift_bridgeObjectRetain();
                sub_100915564(&v41, (uint64_t)v24, &v40);
                swift_bridgeObjectRelease();
                __int16 v28 = v40;
                if ((v40 & 0xFF00) != 0x200)
                {
                  long long v29 = v39;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    long long v29 = sub_10005E490(0, *((void *)v39 + 2) + 1, 1, v39);
                  }
                  uint64_t v30 = v29;
                  unint64_t v31 = *((void *)v29 + 2);
                  objc_super v39 = v30;
                  unint64_t v32 = *((void *)v30 + 3);
                  if (v31 >= v32 >> 1) {
                    objc_super v39 = sub_10005E490((char *)(v32 > 1), v31 + 1, 1, v39);
                  }
                  *((void *)v39 + 2) = v31 + 1;
                  id v27 = &v39[2 * v31];
                  v27[32] = v28;
                  v27[33] = HIBYTE(v28) & 1;
                }
                ++v26;
              }
              while (v25 != v26);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              uint64_t v3 = v34;
              a1 = v35;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              objc_super v39 = (char *)&_swiftEmptyArrayStorage;
            }
            break;
        }
        break;
      default:
LABEL_6:
        swift_bridgeObjectRelease();
        break;
    }
  }
  if (__OFADD__(v7++, 1))
  {
    __break(1u);
    goto LABEL_55;
  }
  if (v7 >= v37) {
    goto LABEL_49;
  }
  unint64_t v12 = *(void *)(v36 + 8 * v7);
  if (v12)
  {
LABEL_19:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
    goto LABEL_20;
  }
  int64_t v13 = v7 + 1;
  if (v7 + 1 >= v37) {
    goto LABEL_49;
  }
  unint64_t v12 = *(void *)(v36 + 8 * v13);
  if (v12) {
    goto LABEL_18;
  }
  int64_t v13 = v7 + 2;
  if (v7 + 2 >= v37) {
    goto LABEL_49;
  }
  unint64_t v12 = *(void *)(v36 + 8 * v13);
  if (v12)
  {
LABEL_18:
    int64_t v7 = v13;
    goto LABEL_19;
  }
  int64_t v13 = v7 + 3;
  if (v7 + 3 < v37)
  {
    unint64_t v12 = *(void *)(v36 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v7 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (v7 >= v37) {
          goto LABEL_49;
        }
        unint64_t v12 = *(void *)(v36 + 8 * v7);
        ++v13;
        if (v12) {
          goto LABEL_19;
        }
      }
LABEL_55:
      __break(1u);
      JUMPOUT(0x1009166D0);
    }
    goto LABEL_18;
  }
LABEL_49:
  swift_release();
  NSString result = v39;
  if (!*((void *)v39 + 2))
  {
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
  return result;
}

void *sub_1009166F0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v3 = a2;
  unint64_t v4 = 0;
  uint64_t v5 = &_swiftEmptyArrayStorage;
  uint64_t v37 = a1 + 32;
  unint64_t v33 = *(void *)(a1 + 16);
LABEL_3:
  if (v4 <= v2) {
    unint64_t v6 = v2;
  }
  else {
    unint64_t v6 = v4;
  }
  unint64_t v34 = v6;
  unsigned __int8 v35 = v5;
  while (1)
  {
    if (v4 == v6)
    {
      __break(1u);
      JUMPOUT(0x100916E70);
    }
    int64_t v7 = (unsigned __int8 *)(v37 + 2 * v4);
    int v8 = *v7;
    ++v4;
    if (v8 == 2) {
      break;
    }
    if (v8 != 6)
    {
      if (v8 != 4)
      {
        unsigned __int8 v36 = v7[1];
        goto LABEL_44;
      }
      uint64_t v9 = *(void *)(v3 + 24);
      if (!*(void *)(v9 + 16)) {
        goto LABEL_10;
      }
      unsigned __int8 v36 = v7[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int v10 = Hasher._finalize()();
      uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v12 = v10 & ~v11;
      if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
      {
        uint64_t v13 = ~v11;
        while (1)
        {
          switch(*(unsigned char *)(*(void *)(v9 + 48) + v12))
          {
            case 4:
              goto LABEL_42;
            default:
              char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v14)
              {
                LOBYTE(v8) = 4;
                goto LABEL_43;
              }
              unint64_t v12 = (v12 + 1) & v13;
              if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
                goto LABEL_7;
              }
              break;
          }
        }
      }
      uint64_t v3 = a2;
      goto LABEL_9;
    }
    uint64_t v21 = *(void *)(v3 + 24);
    if (!*(void *)(v21 + 16)) {
      goto LABEL_10;
    }
    unsigned __int8 v36 = v7[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v22 = Hasher._finalize()();
    uint64_t v23 = -1 << *(unsigned char *)(v21 + 32);
    unint64_t v24 = v22 & ~v23;
    if ((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24))
    {
      uint64_t v25 = ~v23;
      while (1)
      {
        switch(*(unsigned char *)(*(void *)(v21 + 48) + v24))
        {
          case 1:
            goto LABEL_42;
          default:
            char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v26)
            {
              LOBYTE(v8) = 6;
              goto LABEL_43;
            }
            unint64_t v24 = (v24 + 1) & v25;
            if (((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
              goto LABEL_7;
            }
            break;
        }
      }
    }
LABEL_8:
    unint64_t v2 = v33;
    uint64_t v5 = v35;
LABEL_9:
    unint64_t v6 = v34;
    swift_bridgeObjectRelease();
LABEL_10:
    if (v4 == v2) {
      return v5;
    }
  }
  uint64_t v15 = *(void *)(v3 + 24);
  if (!*(void *)(v15 + 16)) {
    goto LABEL_10;
  }
  unsigned __int8 v36 = v7[1];
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v16 = Hasher._finalize()();
  uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
  unint64_t v18 = v16 & ~v17;
  if (((*(void *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v19 = ~v17;
  while (2)
  {
    switch(*(unsigned char *)(*(void *)(v15 + 48) + v18))
    {
      case 2:
        goto LABEL_42;
      case 8:
        if (0x8000000100DB1180 != 0x8000000100DB11A0) {
          goto LABEL_27;
        }
LABEL_42:
        swift_bridgeObjectRelease();
        goto LABEL_43;
      default:
LABEL_27:
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0)
        {
          unint64_t v18 = (v18 + 1) & v19;
          if (((*(void *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          {
LABEL_7:
            uint64_t v3 = a2;
            goto LABEL_8;
          }
          continue;
        }
        LOBYTE(v8) = 2;
LABEL_43:
        uint64_t v3 = a2;
        unint64_t v2 = v33;
        uint64_t v5 = v35;
        swift_bridgeObjectRelease();
LABEL_44:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1008CCD54(0, v5[2] + 1, 1);
        }
        unsigned __int8 v27 = v36;
        unint64_t v29 = v5[2];
        unint64_t v28 = v5[3];
        if (v29 >= v28 >> 1)
        {
          sub_1008CCD54((char *)(v28 > 1), v29 + 1, 1);
          unsigned __int8 v27 = v36;
        }
        _OWORD v5[2] = v29 + 1;
        uint64_t v30 = (char *)v5 + 2 * v29;
        v30[32] = v8;
        v30[33] = v27;
        if (v4 != v2) {
          goto LABEL_3;
        }
        return v5;
    }
  }
}

void sub_100916EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v31 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  int v8 = &unk_1010BB000;
  uint64_t v29 = a2;
  uint64_t v9 = &MPModelRelationshipMediaClipStaticAssets_ptr;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      uint64_t v12 = (v6 - 1) & v6;
      int64_t v33 = v7;
      unint64_t v13 = v11 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v14 >= v31) {
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v14);
    int64_t v16 = v7 + 1;
    if (!v15)
    {
      int64_t v16 = v7 + 2;
      if (v7 + 2 >= v31) {
        goto LABEL_28;
      }
      unint64_t v15 = *(void *)(v30 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v7 + 3;
        if (v7 + 3 >= v31) {
          goto LABEL_28;
        }
        unint64_t v15 = *(void *)(v30 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v7 + 4;
          if (v7 + 4 >= v31) {
            goto LABEL_28;
          }
          unint64_t v15 = *(void *)(v30 + 8 * v16);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    uint64_t v12 = (v15 - 1) & v15;
    int64_t v33 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    unint64_t v32 = v12;
    uint64_t v18 = v8[412];
    id v19 = *(id *)(*(void *)(a1 + 48) + 8 * v13);
    if (v18 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100050A90(v20, (uint64_t)qword_1010C0008);
    id v21 = v19;
    Swift::Int v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136446210;
      _s3__C4NameVMa_1(0);
      uint64_t v25 = v9;
      id v26 = v21;
      uint64_t v27 = String.init<A>(describing:)();
      *(void *)(v24 + 4) = sub_100075E68(v27, v28, &v34);

      uint64_t v9 = v25;
      a2 = v29;
      int v8 = (void *)&unk_1010BB000;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Notifying changes for '%{public}s'", (uint8_t *)v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    unint64_t v6 = v32;
    int64_t v7 = v33;
    id v10 = [self defaultCenter];
    [v10 postNotificationName:v21 object:a2];
  }
  uint64_t v17 = v7 + 5;
  if (v7 + 5 >= v31)
  {
LABEL_28:
    swift_release();
    return;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v7 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v31) {
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_30:
  __break(1u);
}

unint64_t _s9MusicCore23ApplicationCapabilitiesV7ServiceO8rawValueAESgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100FED818, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xB) {
    return 11;
  }
  else {
    return v3;
  }
}

uint64_t sub_1009172C8(uint64_t a1)
{
  return sub_1009146B0(a1);
}

unint64_t sub_1009172D4()
{
  unint64_t result = qword_1010C00A0;
  if (!qword_1010C00A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C00A0);
  }
  return result;
}

uint64_t assignWithCopy for ApplicationCapabilities(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 80);
  uint64_t v5 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v5;
  id v6 = v5;

  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ApplicationCapabilities(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ApplicationCapabilities.Service(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1009175E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

void *assignWithCopy for ApplicationCapabilities.RatingWarning(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ApplicationCapabilities.RatingWarning(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplicationCapabilities.RatingWarning(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ApplicationCapabilities.RatingWarning(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.SubscriptionState()
{
  return &type metadata for ApplicationCapabilities.SubscriptionState;
}

uint64_t destroy for ApplicationCapabilities.Tabs()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s9MusicCore23ApplicationCapabilitiesV4TabsVwCP_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ApplicationCapabilities.Tabs(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ApplicationCapabilities.Tabs(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.Tabs()
{
  return &type metadata for ApplicationCapabilities.Tabs;
}

uint64_t sub_1009178F8()
{
  return type metadata accessor for ApplicationCapabilities.Controller();
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.NotificationNames()
{
  return &type metadata for ApplicationCapabilities.NotificationNames;
}

uint64_t storeEnumTagSinglePayload for ApplicationCapabilities.Tabs.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1009179DCLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100917A04()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100917A84(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)(v1 + 5);
  uint64_t v8 = v1[20];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000154F4;
  return sub_10091429C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100917B50@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_100A7E278(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_100917B6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100917BB4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100917BEC()
{
  uint64_t v1 = sub_100063814((uint64_t *)&unk_1010C02D0);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100917CBC(void *a1)
{
  sub_100063814((uint64_t *)&unk_1010C02D0);

  return sub_100914A4C(a1);
}

uint64_t sub_100917D34()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100917D7C(uint64_t a1)
{
  return sub_10091FFF8(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_100917D88()
{
  return sub_100920224(*(void *)(v0 + 16));
}

uint64_t sub_100917DA4()
{
  return sub_100914BC0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100917DC8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100081D08;
  return sub_100913DDC(a1, v4, v5, v6);
}

uint64_t sub_100917E7C()
{
  return sub_10091375C();
}

uint64_t sub_100917E84(char a1, uint64_t (*a2)(uint64_t))
{
  return sub_1009137F0(a1, a2);
}

uint64_t sub_100917E8C()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

unint64_t sub_100917EC4()
{
  unint64_t result = qword_1010C0308;
  if (!qword_1010C0308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C0308);
  }
  return result;
}

uint64_t sub_100917F18()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100917F58(void *a1)
{
}

unsigned char *_s9MusicCore23ApplicationCapabilitiesV17SubscriptionStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10091802CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s3KeyOMa()
{
  return &_s3KeyON;
}

unint64_t sub_100918068()
{
  unint64_t result = qword_1010C0330;
  if (!qword_1010C0330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C0330);
  }
  return result;
}

unint64_t sub_1009180BC(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  unint64_t v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  if (v5 >= 4) {
    return 4;
  }
  else {
    return v5;
  }
}

void *BackgroundFetchManager.httpHeader.unsafeMutableAddressor()
{
  return &static BackgroundFetchManager.httpHeader;
}

unint64_t static BackgroundFetchManager.httpHeader.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_100918130()
{
  type metadata accessor for BackgroundFetchManager();
  uint64_t result = swift_initStaticObject();
  static BackgroundFetchManager.shared = result;
  return result;
}

uint64_t *BackgroundFetchManager.shared.unsafeMutableAddressor()
{
  if (qword_1010BBD58 != -1) {
    swift_once();
  }
  return &static BackgroundFetchManager.shared;
}

uint64_t static BackgroundFetchManager.shared.getter()
{
  return swift_initStaticObject();
}

uint64_t BackgroundFetchManager.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100918A7C();
  if (!*(void *)(v6 + 16) || (unint64_t v7 = sub_100071D70(a1, a2), (v8 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v9 + 16) || (unint64_t v10 = sub_100071D70(7107189, 0xE300000000000000), (v11 & 1) == 0))
  {
    long long v14 = 0u;
    long long v15 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_100076134(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v14);
  swift_bridgeObjectRelease();
  if (!*((void *)&v15 + 1))
  {
LABEL_10:
    sub_1000637B8((uint64_t)&v14, (uint64_t *)&unk_1010C0270);
    goto LABEL_11;
  }
  if (swift_dynamicCast())
  {
    URL.init(string:)();
    return swift_bridgeObjectRelease();
  }
LABEL_11:
  uint64_t v13 = type metadata accessor for URL();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 1, 1, v13);
}

void (*BackgroundFetchManager.subscript.modify(uint64_t *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  *a1 = a2;
  a1[1] = a3;
  size_t v6 = *(void *)(*(void *)(sub_100063814(&qword_1010BCBE0) - 8) + 64);
  a1[2] = (uint64_t)malloc(v6);
  unint64_t v7 = malloc(v6);
  a1[3] = (uint64_t)v7;
  BackgroundFetchManager.subscript.getter(a2, a3, (uint64_t)v7);
  return sub_1009183D0;
}

void sub_1009183D0(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)a1[2];
  Swift::String v3 = (void *)a1[3];
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  if (a2)
  {
    sub_1008409A4(a1[3], (uint64_t)v2);
    swift_bridgeObjectRetain();
    _s9MusicCore22BackgroundFetchManagerCy10Foundation3URLVSgSScis_0((uint64_t)v2, v5, v4);
    sub_1000637B8((uint64_t)v3, &qword_1010BCBE0);
  }
  else
  {
    swift_bridgeObjectRetain();
    _s9MusicCore22BackgroundFetchManagerCy10Foundation3URLVSgSScis_0((uint64_t)v3, v5, v4);
  }
  free(v3);

  free(v2);
}

Swift::Void __swiftcall BackgroundFetchManager.removeAll()()
{
  id v0 = [self standardUserDefaults];
  id v1 = String._bridgeToObjectiveC()();
  [v0 removeObjectForKey:v1];
}

void sub_100918504(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), int a4, int a5, int a6, dispatch_group_t group)
{
  if (a3) {
    a1 = a3(a1, a2);
  }
  if (a2)
  {
    __chkstk_darwin(a1);
    swift_errorRetain();
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100919F5C);
    swift_errorRelease();
  }
  dispatch_group_leave(group);
}

uint64_t sub_1009185D8(uint64_t *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = (void *)*a1;
  swift_errorRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a1 = (uint64_t)v4;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10087EF80(0, v4[2] + 1, 1, v4);
    uint64_t v4 = (void *)result;
    *a1 = result;
  }
  unint64_t v7 = v4[2];
  unint64_t v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    uint64_t result = (uint64_t)sub_10087EF80((void *)(v6 > 1), v7 + 1, 1, v4);
    uint64_t v4 = (void *)result;
    *a1 = result;
  }
  v4[2] = v7 + 1;
  v4[v7 + 4] = a2;
  return result;
}

uint64_t sub_1009186AC(uint64_t a1, uint64_t a2, void (*a3)())
{
  return swift_bridgeObjectRelease();
}

void sub_10091873C()
{
  if (qword_1010BBD90 != -1) {
    swift_once();
  }
  sub_100063814(&qword_1010C0630);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10003DA94);
  id v0 = v3;
  if (v3 && (sub_100918830(v3, (uint64_t)&v3), v0, (v4 & 1) == 0))
  {
    char v1 = 0;
    uint64_t v2 = (uint64_t)v3;
  }
  else
  {
    char v1 = 1;
    uint64_t v2 = 0x4122750000000000;
  }
  qword_1010C0340 = v2;
  byte_1010C0348 = v1;
}

uint64_t sub_100918830@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [a1 valueForBagKey:v4];

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  sub_100056844((uint64_t)&v17, (uint64_t)&v15);
  if (!*((void *)&v16 + 1)) {
    goto LABEL_15;
  }
  sub_100063814(&qword_1010C5DC0);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_17:
    *(void *)a2 = 0;
    char v14 = 1;
    goto LABEL_18;
  }
  uint64_t v7 = v17;
  if (*(void *)(v17 + 16) && (unint64_t v8 = sub_100071D70(0xD00000000000001ELL, 0x8000000100DCB920), (v9 & 1) != 0))
  {
    sub_100076134(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v16 + 1))
  {
LABEL_15:
    uint64_t v13 = &v15;
LABEL_16:
    uint64_t result = sub_1000637B8((uint64_t)v13, (uint64_t *)&unk_1010C0270);
    goto LABEL_17;
  }
  sub_100063814(&qword_1010C2930);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v10 = v17;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_100076DAC((uint64_t)&v15), (v12 & 1) != 0))
  {
    sub_100076134(*(void *)(v10 + 56) + 32 * v11, (uint64_t)&v17);
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100076EB8((uint64_t)&v15);
  if (!*((void *)&v18 + 1))
  {
    uint64_t v13 = &v17;
    goto LABEL_16;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    *(void *)a2 = 0;
  }
  char v14 = result ^ 1;
LABEL_18:
  *(unsigned char *)(a2 + 8) = v14;
  return result;
}

uint64_t BackgroundFetchManager.deinit()
{
  return v0;
}

unint64_t sub_100918A7C()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 dictionaryForKey:v1];

  if (v2)
  {
    uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v4 = sub_100A7DEF4(v3);
    swift_bridgeObjectRelease();
    if (v4) {
      return v4;
    }
  }
  else
  {
  }
  unint64_t v6 = sub_1008F6D28((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t _s9MusicCore22BackgroundFetchManagerCy10Foundation3URLVSgSScis_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100063814(&qword_1010BCBE0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1008409A4(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000637B8((uint64_t)v8, &qword_1010BCBE0);
    unint64_t v26 = sub_100918A7C();
    sub_1009F5AC0(a2, a3);
    swift_bridgeObjectRelease();
    id v13 = [self standardUserDefaults];
    sub_100063814(&qword_1010C5DC0);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v15 = String._bridgeToObjectiveC()();
    [v13 setObject:isa forKey:v15];

    sub_1000637B8(a1, &qword_1010BCBE0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_100063814(&qword_1010C0300);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E251B0;
    *(void *)(inited + 32) = 7107189;
    *(void *)(inited + 40) = 0xE300000000000000;
    *(void *)(inited + 48) = URL.absoluteString.getter();
    *(void *)(inited + 56) = v18;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 80) = 1702125924;
    *(void *)(inited + 88) = 0xE400000000000000;
    *(void *)(inited + 120) = type metadata accessor for Date();
    sub_100068018((uint64_t *)(inited + 96));
    Date.init()();
    unint64_t v19 = sub_1008F6944(inited);
    unint64_t v20 = sub_100918A7C();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v26 = v20;
    sub_1008F7AB0(v19, a2, a3, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v22 = [self standardUserDefaults];
    sub_100063814(&qword_1010C5DC0);
    Class v23 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v24 = String._bridgeToObjectiveC()();
    [v22 setObject:v23 forKey:v24];

    sub_1000637B8(a1, &qword_1010BCBE0);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t _s9MusicCore22BackgroundFetchManagerC14updateURLCache5queue20onDidReceiveResponse10completionySo012OS_dispatch_H0C_ySo13ICURLResponseCSg_s5Error_pSgtcSgySaysAM_pGctF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v95 = a5;
  uint64_t v94 = a4;
  uint64_t v88 = a3;
  uint64_t v87 = a2;
  uint64_t v99 = a1;
  uint64_t v102 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  id v98 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for DispatchQoS();
  uint64_t v97 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  id v96 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for URLRequest();
  int64_t v7 = *(void *)(v109 - 8);
  uint64_t v8 = __chkstk_darwin(v109);
  uint64_t v93 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v119 = (char *)&v81 - v10;
  uint64_t v11 = sub_100063814(&qword_1010BFE40);
  __chkstk_darwin(v11 - 8);
  long long v118 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v120 - 8);
  uint64_t v14 = __chkstk_darwin(v120);
  uint64_t v105 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v111 = (char *)&v81 - v16;
  uint64_t v17 = sub_100063814(&qword_1010BCBE0);
  __chkstk_darwin(v17 - 8);
  id v112 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for URL();
  unint64_t v19 = *(long long **)(v123 - 8);
  uint64_t v20 = __chkstk_darwin(v123);
  uint64_t v92 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v122 = (char *)&v81 - v22;
  dispatch_group_t v108 = dispatch_group_create();
  type metadata accessor for UnfairLock();
  swift_allocObject();
  uint64_t v106 = UnfairLock.init()();
  uint64_t v107 = swift_allocObject();
  *(void *)(v107 + 16) = _swiftEmptyArrayStorage;
  if (qword_1010BBD60 != -1) {
LABEL_46:
  }
    swift_once();
  double v23 = *(double *)&qword_1010C0340;
  unint64_t v24 = sub_100918A7C();
  unint64_t v25 = v24;
  int64_t v26 = 0;
  unint64_t v27 = v24 + 64;
  uint64_t v28 = 1 << *(unsigned char *)(v24 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v30 = v29 & *(void *)(v24 + 64);
  uint64_t v121 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 3);
  long long v117 = (void (**)(char *, uint64_t, uint64_t))(v19 + 2);
  unint64_t v116 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v113 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  unint64_t v104 = (void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  int64_t v31 = (void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v115 = (void (**)(char *, uint64_t))v19 + 1;
  char v91 = (void (**)(char *, char *, uint64_t))(v19 + 1);
  NSString v90 = (void (**)(char *, char *, uint64_t))(v7 + 16);
  unint64_t v19 = &v126;
  unint64_t v103 = (void (**)(char *, uint64_t))(v7 + 8);
  int64_t v7 = (unint64_t)(v28 + 63) >> 6;
  unint64_t v124 = (char *)&type metadata for Any + 8;
  uint64_t v89 = (void *)0x8000000100DCB8B0;
  uint64_t v13 = (uint64_t)v112;
  id v110 = v31;
  for (i = v7; ; int64_t v7 = i)
  {
    while (1)
    {
      while (1)
      {
        do
        {
          if (v30)
          {
            unint64_t v32 = __clz(__rbit64(v30));
            v30 &= v30 - 1;
            unint64_t v33 = v32 | (v26 << 6);
          }
          else
          {
            int64_t v34 = v26 + 1;
            if (__OFADD__(v26, 1))
            {
              __break(1u);
LABEL_45:
              __break(1u);
              goto LABEL_46;
            }
            if (v34 >= v7) {
              goto LABEL_43;
            }
            unint64_t v35 = *(void *)(v27 + 8 * v34);
            ++v26;
            if (!v35)
            {
              int64_t v26 = v34 + 1;
              if (v34 + 1 >= v7) {
                goto LABEL_43;
              }
              unint64_t v35 = *(void *)(v27 + 8 * v26);
              if (!v35)
              {
                int64_t v26 = v34 + 2;
                if (v34 + 2 >= v7) {
                  goto LABEL_43;
                }
                unint64_t v35 = *(void *)(v27 + 8 * v26);
                if (!v35)
                {
                  int64_t v26 = v34 + 3;
                  if (v34 + 3 >= v7) {
                    goto LABEL_43;
                  }
                  unint64_t v35 = *(void *)(v27 + 8 * v26);
                  if (!v35)
                  {
                    int64_t v36 = v34 + 4;
                    if (v36 >= v7)
                    {
LABEL_43:
                      swift_release();
                      NSString v73 = (void *)swift_allocObject();
                      uint64_t v74 = v107;
                      v73[2] = v106;
                      v73[3] = v74;
                      uint64_t v75 = v95;
                      v73[4] = v94;
                      v73[5] = v75;
                      long long v127 = sub_100919EF4;
                      long long v128 = v73;
                      *(void *)&long long aBlock = _NSConcreteStackBlock;
                      *((void *)&aBlock + 1) = 1107296256;
                      *(void *)&long long v126 = sub_100020238;
                      *((void *)&v126 + 1) = &unk_100FF7778;
                      NSString v76 = _Block_copy(&aBlock);
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      uint64_t v77 = v96;
                      static DispatchQoS.unspecified.getter();
                      uint64_t v129 = _swiftEmptyArrayStorage;
                      sub_10001D13C();
                      sub_100063814(&qword_1010BFF48);
                      sub_10007B0E8();
                      uint64_t v78 = v98;
                      uint64_t v79 = v102;
                      dispatch thunk of SetAlgebra.init<A>(_:)();
                      dispatch_group_t v80 = v108;
                      OS_dispatch_group.notify(qos:flags:queue:execute:)();
                      _Block_release(v76);
                      swift_release();

                      (*(void (**)(char *, uint64_t))(v101 + 8))(v78, v79);
                      (*(void (**)(char *, uint64_t))(v97 + 8))(v77, v100);
                      swift_release();
                      return swift_release();
                    }
                    unint64_t v35 = *(void *)(v27 + 8 * v36);
                    if (!v35)
                    {
                      while (1)
                      {
                        int64_t v26 = v36 + 1;
                        if (__OFADD__(v36, 1)) {
                          goto LABEL_45;
                        }
                        if (v26 >= v7) {
                          goto LABEL_43;
                        }
                        unint64_t v35 = *(void *)(v27 + 8 * v26);
                        ++v36;
                        if (v35) {
                          goto LABEL_23;
                        }
                      }
                    }
                    int64_t v26 = v36;
                  }
                }
              }
            }
LABEL_23:
            unint64_t v30 = (v35 - 1) & v35;
            unint64_t v33 = __clz(__rbit64(v35)) + (v26 << 6);
          }
          uint64_t v37 = *(void *)(*(void *)(v25 + 56) + 8 * v33);
        }
        while (!*(void *)(v37 + 16));
        swift_bridgeObjectRetain();
        unint64_t v38 = sub_100071D70(7107189, 0xE300000000000000);
        if (v39)
        {
          sub_100076134(*(void *)(v37 + 56) + 32 * v38, (uint64_t)&aBlock);
          if (swift_dynamicCast()) {
            break;
          }
        }
        swift_bridgeObjectRelease();
      }
      __int16 v40 = v19;
      URL.init(string:)();
      uint64_t v41 = v123;
      swift_bridgeObjectRelease();
      if ((*v121)(v13, 1, v41) != 1) {
        break;
      }
      swift_bridgeObjectRelease();
      sub_1000637B8(v13, &qword_1010BCBE0);
      unint64_t v19 = v40;
    }
    (*v117)(v122, v13, v41);
    uint64_t v42 = v119;
    if (*(void *)(v37 + 16) && (unint64_t v43 = sub_100071D70(1702125924, 0xE400000000000000), (v44 & 1) != 0))
    {
      sub_100076134(*(void *)(v37 + 56) + 32 * v43, (uint64_t)&aBlock);
    }
    else
    {
      long long aBlock = 0u;
      long long v126 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v126 + 1))
    {
      sub_1000637B8((uint64_t)&aBlock, (uint64_t *)&unk_1010C0270);
      uint64_t v45 = (uint64_t)v118;
      (*v116)(v118, 1, 1, v120);
      goto LABEL_39;
    }
    uint64_t v45 = (uint64_t)v118;
    uint64_t v46 = v120;
    int v47 = swift_dynamicCast();
    (*v116)((char *)v45, v47 ^ 1u, 1, v46);
    if ((*v113)(v45, 1, v46) != 1) {
      break;
    }
LABEL_39:
    (*v115)(v122, v123);
    sub_1000637B8(v45, &qword_1010BFE40);
LABEL_40:
    unint64_t v19 = v40;
LABEL_41:
    ;
  }
  int v48 = v111;
  uint64_t v49 = v120;
  (*v104)(v111, v45, v120);
  uint64_t v50 = v105;
  Date.init()();
  Date.timeIntervalSince(_:)();
  double v52 = v51;
  uint64_t v53 = v49;
  NSString v54 = *v110;
  (*v110)(v50, v53);
  if (v52 >= v23)
  {
    v54(v48, v120);
    (*v115)(v122, v123);
    uint64_t v13 = (uint64_t)v112;
    goto LABEL_40;
  }
  uint64_t v86 = v54;
  (*v91)(v92, v122, v123);
  URLRequest.init(url:cachePolicy:timeoutInterval:)();
  v55._uint64_t countAndFlagsBits = 1702195828;
  v55._object = (void *)0xE400000000000000;
  v56._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v56._object = v89;
  URLRequest.addValue(_:forHTTPHeaderField:)(v55, v56);
  uint64_t v57 = v93;
  (*v90)(v93, v42, v109);
  id v58 = objc_allocWithZone((Class)ICMusicKitRequestContext);
  long long v127 = sub_100952EFC;
  long long v128 = 0;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v126 = sub_10001A278;
  *((void *)&v126 + 1) = &unk_100FF76D8;
  uint64_t v59 = _Block_copy(&aBlock);
  id v60 = [v58 initWithBlock:v59];
  _Block_release(v59);
  swift_release();
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0)
  {
    id v62 = objc_allocWithZone((Class)ICMusicKitURLRequest);
    Class isa = URLRequest._bridgeToObjectiveC()().super.isa;
    id v84 = [v62 initWithURLRequest:isa requestContext:v60];

    uint64_t v82 = v40;
    NSString v85 = *v103;
    v85(v57, v109);
    dispatch_group_t v64 = v108;
    dispatch_group_enter(v108);
    id v83 = [self highPrioritySession];
    unsigned __int8 v65 = (void *)swift_allocObject();
    uint64_t v66 = v87;
    uint64_t v67 = v88;
    void v65[2] = v87;
    v65[3] = v67;
    uint64_t v68 = v107;
    v65[4] = v106;
    v65[5] = v68;
    v65[6] = v64;
    long long v127 = (uint64_t (*)())sub_100919E9C;
    long long v128 = v65;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v126 = sub_10000D3BC;
    *((void *)&v126 + 1) = &unk_100FF7728;
    id v69 = _Block_copy(&aBlock);
    uint64_t v81 = v128;
    sub_10007B674(v66);
    swift_retain();
    swift_retain();
    double v70 = v64;
    swift_release();
    id v71 = v83;
    uint64_t v72 = v84;
    [v83 enqueueDataRequest:v84 withCompletionHandler:v69];
    _Block_release(v69);

    v85(v119, v109);
    v86(v111, v120);
    (*v115)(v122, v123);
    uint64_t v13 = (uint64_t)v112;
    unint64_t v19 = v82;
    goto LABEL_41;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for BackgroundFetchManager()
{
  return self;
}

uint64_t sub_100919E0C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100919E44()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_100919E9C(uint64_t a1, uint64_t a2)
{
  sub_100918504(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(dispatch_group_t *)(v2 + 48));
}

uint64_t sub_100919EAC()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100919EF4()
{
  return sub_1009186AC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)())(v0 + 32));
}

uint64_t sub_100919F00@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  swift_beginAccess();
  *a1 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100919F5C()
{
  return sub_1009185D8(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24));
}

Swift::Int sub_100919F84()
{
  return Hasher._finalize()();
}

Swift::Int sub_10091A070()
{
  return Hasher._finalize()();
}

Swift::Int sub_10091A0F8()
{
  return Hasher._finalize()();
}

Swift::Int sub_10091A1E0()
{
  return Hasher._finalize()();
}

Swift::Int sub_10091A2E8()
{
  return Hasher._finalize()();
}

Swift::Int sub_10091A370()
{
  return Hasher._finalize()();
}

Swift::Int sub_10091A458()
{
  return Hasher._finalize()();
}

uint64_t sub_10091A4E0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10091A5B0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10091A67C()
{
  return Hasher._finalize()();
}

Swift::Int sub_10091A780()
{
  return Hasher._finalize()();
}

Swift::Int sub_10091A804()
{
  return Hasher._finalize()();
}

Swift::Int sub_10091A8E8()
{
  return Hasher._finalize()();
}

Swift::Int sub_10091AA04()
{
  return Hasher._finalize()();
}

Swift::Int sub_10091AA88()
{
  return Hasher._finalize()();
}

Swift::Int sub_10091AB6C()
{
  return Hasher._finalize()();
}

Swift::Int sub_10091ACA8()
{
  return Hasher._finalize()();
}

Swift::Int sub_10091AD90()
{
  return Hasher._finalize()();
}

uint64_t static BackgroundRefreshController.shared.getter()
{
  if (qword_1010BBD68 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_10091AE70()
{
  if (qword_1010BBD68 != -1) {
    swift_once();
  }
  self;
  uint64_t v0 = (void *)swift_dynamicCastObjCClassUnconditional();
  return sub_10091AEF0(v0);
}

uint64_t sub_10091AEF0(void *a1)
{
  uint64_t v3 = *v1;
  static os_log_type_t.default.getter();
  sub_100063814(&qword_1010BFBB0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100E251D0;
  *(void *)(v4 + 56) = &type metadata for String;
  *(void *)(v4 + 64) = sub_10001EC88();
  *(void *)(v4 + 32) = 0xD00000000000002FLL;
  *(void *)(v4 + 40) = 0x8000000100DCB9A0;
  sub_100057778(0, (unint64_t *)&qword_1010BFBC0);
  uint64_t v5 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();

  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = v3;
  id v7 = a1;
  sub_10091C600((uint64_t)sub_10091ED5C, v6);

  return swift_release();
}

Swift::Void __swiftcall BackgroundRefreshController.scheduleAllTasks()()
{
  uint64_t v79 = *v0;
  uint64_t v85 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v82 = (char *)&v76 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for DispatchQoS();
  uint64_t v81 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  dispatch_group_t v80 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100063814(&qword_1010BFE40);
  __chkstk_darwin(v3 - 8);
  uint64_t v98 = (uint64_t)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v97 = (char *)&v76 - v6;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v87 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v89 = (char *)&v76 - v11;
  __chkstk_darwin(v12);
  uint64_t v100 = (char *)&v76 - v13;
  __chkstk_darwin(v14);
  id v96 = (char *)&v76 - v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v76 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v76 - v20;
  __chkstk_darwin(v22);
  uint64_t v99 = (char *)&v76 - v23;
  __chkstk_darwin(v24);
  int64_t v26 = (char *)&v76 - v25;
  __chkstk_darwin(v27);
  uint64_t v29 = (ValueMetadata *)((char *)&v76 - v28);
  if (qword_1010BBD78 != -1) {
LABEL_46:
  }
    swift_once();
  unint64_t v30 = (char *)off_1010C03F8;
  static Date.distantFuture.getter();
  uint64_t v101 = *(void (**)(char *, ValueMetadata *, uint64_t))(v8 + 16);
  uint64_t v102 = v8 + 16;
  v101(v26, v29, v7);
  int64_t v31 = (char *)*((void *)v30 + 2);
  uint64_t v88 = v31;
  uint64_t v86 = v8;
  if (v31)
  {
    char v91 = v18;
    uint64_t v77 = v29;
    unint64_t v32 = self;
    uint64_t v92 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    uint64_t v94 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    id v95 = v32;
    unint64_t v33 = (void (**)(char *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    uint64_t v78 = v30;
    int64_t v34 = v30 + 49;
    unint64_t v103 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
    uint64_t v93 = (v8 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    NSString v90 = (char *)&type metadata for Any + 8;
    unint64_t v35 = v31;
    do
    {
      char v39 = *v34;
      id v40 = [v95 standardUserDefaults];
      LOBYTE(v104) = v39;
      sub_10091E408();
      sub_10005D1D4();
      NSUserDefaults.subscript.getter(&aBlock);

      if (v107)
      {
        uint64_t v41 = (uint64_t)v97;
        int v42 = swift_dynamicCast();
        (*v92)(v41, v42 ^ 1u, 1, v7);
      }
      else
      {
        sub_1000637B8((uint64_t)&aBlock, (uint64_t *)&unk_1010C0270);
        uint64_t v41 = (uint64_t)v97;
        (*v92)((uint64_t)v97, 1, 1, v7);
      }
      uint64_t v43 = v98;
      char v44 = v96;
      uint64_t v45 = v91;
      sub_10091E45C(v41, v98);
      if ((*v94)(v43, 1, v7) == 1)
      {
        Date.init()();
        sub_1000637B8(v43, &qword_1010BFE40);
      }
      else
      {
        (*v103)(v44, v43, v7);
      }
      sub_1000637B8(v41, &qword_1010BFE40);
      static Date.+ infix(_:_:)();
      uint64_t v46 = v44;
      int v47 = *v33;
      (*v33)(v46, v7);
      int v48 = v100;
      Date.init()();
      if (static Date.< infix(_:_:)())
      {
        uint64_t v49 = v89;
        static Date.+ infix(_:_:)();
        v47(v48, v7);
        v47(v45, v7);
        int64_t v36 = *v103;
        (*v103)(v45, (uint64_t)v49, v7);
      }
      else
      {
        v47(v48, v7);
        int64_t v36 = *v103;
      }
      v34 += 24;
      v36(v21, (uint64_t)v45, v7);
      sub_10091ECDC(&qword_1010C0438, (void (*)(uint64_t))&type metadata accessor for Date);
      if (dispatch thunk of static Comparable.< infix(_:_:)()) {
        uint64_t v37 = v21;
      }
      else {
        uint64_t v37 = v26;
      }
      unint64_t v38 = v99;
      v101(v99, (ValueMetadata *)v37, v7);
      v47(v21, v7);
      v47(v26, v7);
      v36(v26, (uint64_t)v38, v7);
      --v35;
    }
    while (v35);
    unint64_t v30 = v78;
    swift_bridgeObjectRelease();
    uint64_t v8 = v86;
    int64_t v31 = v88;
    uint64_t v29 = v77;
  }
  uint64_t v50 = swift_allocBox();
  double v51 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v100 = v52;
  v51(v52, v26, v7);
  uint64_t v21 = (char *)(v8 + 8);
  unint64_t v103 = *(void (***)(char *, uint64_t, uint64_t))(v8 + 8);
  ((void (*)(ValueMetadata *, uint64_t))v103)(v29, v7);
  if (!v31)
  {
    char v59 = 0;
    id v60 = v89;
    goto LABEL_36;
  }
  int64_t v26 = v31;
  uint64_t v99 = (char *)v50;
  uint64_t v53 = v30;
  swift_bridgeObjectRetain();
  LOBYTE(v30) = 0;
  uint64_t v8 = 50;
  uint64_t v29 = &type metadata for BackgroundTaskConfiguration.UserDefaultsKey;
  uint64_t v54 = 1;
  uint64_t v18 = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v30)
    {
      if (v26 == (char *)v54)
      {
        swift_bridgeObjectRelease();
LABEL_33:
        id v60 = v89;
        Date.init()();
        uint64_t v61 = v100;
        (*(void (**)(char *, char *, uint64_t))(v86 + 40))(v100, v60, v7);
        char v59 = 1;
        uint64_t v50 = (uint64_t)v99;
        id v62 = v103;
        goto LABEL_37;
      }
      LOBYTE(v30) = 1;
      goto LABEL_21;
    }
    char v56 = v53[v8];
    id v57 = [self standardUserDefaults];
    LOBYTE(v104) = v56;
    sub_10091E408();
    sub_10005D1D4();
    NSUserDefaults.subscript.getter(&aBlock);

    if (!v107)
    {
      sub_1000637B8((uint64_t)&aBlock, (uint64_t *)&unk_1010C0270);
      int64_t v26 = v88;
      if (v88 == (char *)v54)
      {
LABEL_34:
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
      goto LABEL_30;
    }
    char v58 = swift_dynamicCast();
    int64_t v26 = v88;
    if ((v58 & 1) == 0)
    {
      if (v88 == (char *)v54) {
        goto LABEL_34;
      }
LABEL_30:
      LOBYTE(v30) = 0;
      goto LABEL_21;
    }
    LODWORD(v30) = v104;
    if (v88 == (char *)v54) {
      break;
    }
LABEL_21:
    v8 += 24;
    if (__OFADD__(v54++, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
  }
  swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_33;
  }
LABEL_35:
  char v59 = 0;
  id v60 = v89;
  uint64_t v50 = (uint64_t)v99;
LABEL_36:
  id v62 = v103;
  uint64_t v61 = v100;
LABEL_37:
  v101(v60, (ValueMetadata *)v61, v7);
  uint64_t v63 = v87;
  static Date.distantFuture.getter();
  char v64 = static Date.< infix(_:_:)();
  ((void (*)(char *, uint64_t))v62)(v63, v7);
  ((void (*)(char *, uint64_t))v62)(v60, v7);
  if (v59 & 1) != 0 || (v64)
  {
    id v65 = objc_allocWithZone((Class)BGAppRefreshTaskRequest);
    NSString v66 = String._bridgeToObjectiveC()();
    id v67 = [v65 initWithIdentifier:v66];

    v101(v60, (ValueMetadata *)v61, v7);
    id v68 = v67;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    ((void (*)(char *, uint64_t))v62)(v60, v7);
    [v68 setEarliestBeginDate:isa];

    if (qword_1010BBD70 != -1) {
      swift_once();
    }
    uint64_t v70 = swift_allocObject();
    *(void *)(v70 + 16) = v68;
    *(void *)(v70 + 24) = v50;
    *(unsigned char *)(v70 + 32) = v59;
    *(void *)(v70 + 40) = v79;
    dispatch_group_t v108 = sub_10091E504;
    uint64_t v109 = v70;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v106 = sub_100020238;
    uint64_t v107 = &unk_100FF77F0;
    id v71 = _Block_copy(&aBlock);
    id v72 = v68;
    swift_retain();
    NSString v73 = v80;
    static DispatchQoS.unspecified.getter();
    unint64_t v104 = _swiftEmptyArrayStorage;
    sub_10091ECDC((unint64_t *)&qword_1010C1800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100063814(&qword_1010BFF48);
    sub_10007ACD8((unint64_t *)&qword_1010C1810, &qword_1010BFF48);
    uint64_t v74 = v82;
    uint64_t v75 = v85;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v71);

    (*(void (**)(char *, uint64_t))(v84 + 8))(v74, v75);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v73, v83);
    swift_release();
  }
  swift_release();
}

void sub_10091BD14(void *a1, uint64_t a2, int a3)
{
  int v38 = a3;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_projectBox();
  static os_log_type_t.default.getter();
  uint64_t v37 = sub_100063814(&qword_1010BFBB0);
  uint64_t v9 = swift_allocObject();
  long long v36 = xmmword_100E251B0;
  *(_OWORD *)(v9 + 16) = xmmword_100E251B0;
  id v10 = [a1 identifier];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  *(void *)(v9 + 56) = &type metadata for String;
  unint64_t v14 = sub_10001EC88();
  *(void *)(v9 + 64) = v14;
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 40) = v13;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  Date.timeIntervalSince1970.getter();
  double v16 = v15;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((~*(void *)&v16 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  if (v16 >= 9.22337204e18) {
    goto LABEL_12;
  }
  *(void *)(v9 + 96) = &type metadata for Int;
  *(void *)(v9 + 104) = &protocol witness table for Int;
  *(void *)(v9 + 72) = (uint64_t)v16;
  sub_100057778(0, (unint64_t *)&qword_1010BFBC0);
  uint64_t v17 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();

  uint64_t v18 = self;
  id v19 = [v18 sharedScheduler];
  id v39 = 0;
  unsigned int v20 = [v19 submitTaskRequest:a1 error:&v39];

  if (v20)
  {
    id v21 = v39;
    if ((v38 & 1) == 0) {
      return;
    }
  }
  else
  {
    id v22 = v39;
    uint64_t v23 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    static os_log_type_t.error.getter();
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = v36;
    id v25 = [a1 identifier];
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = v27;

    *(void *)(v24 + 56) = &type metadata for String;
    *(void *)(v24 + 64) = v14;
    *(void *)(v24 + 32) = v26;
    *(void *)(v24 + 40) = v28;
    id v39 = v23;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v29 = String.init<A>(describing:)();
    *(void *)(v24 + 96) = &type metadata for String;
    *(void *)(v24 + 104) = v14;
    *(void *)(v24 + 72) = v29;
    *(void *)(v24 + 80) = v30;
    int64_t v31 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();

    swift_errorRelease();
    if ((v38 & 1) == 0) {
      return;
    }
  }
  static os_log_type_t.default.getter();
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_100E251D0;
  *(void *)(v32 + 56) = &type metadata for String;
  *(void *)(v32 + 64) = v14;
  *(void *)(v32 + 32) = 0xD00000000000002FLL;
  *(void *)(v32 + 40) = 0x8000000100DCB9A0;
  unint64_t v33 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();

  id v34 = [v18 sharedScheduler];
  NSString v35 = String._bridgeToObjectiveC()();
  [v34 _simulateLaunchForTaskWithIdentifier:v35];
}

uint64_t sub_10091C1D4(char a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010BBD70 != -1) {
    swift_once();
  }
  v18[0] = qword_1010C03F0;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  *(void *)(v14 + 32) = a3;
  aBlock[4] = sub_10091EFB4;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100020238;
  aBlock[3] = &unk_100FF7AB8;
  double v15 = _Block_copy(aBlock);
  id v16 = a2;
  static DispatchQoS.unspecified.getter();
  v18[1] = _swiftEmptyArrayStorage;
  sub_10091ECDC((unint64_t *)&qword_1010C1800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100063814(&qword_1010BFF48);
  sub_10007ACD8((unint64_t *)&qword_1010C1810, &qword_1010BFF48);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_10091C4C4(void *a1, char a2)
{
  if (a2) {
    uint64_t v2 = 1702195828;
  }
  else {
    uint64_t v2 = 0x65736C6166;
  }
  if (a2) {
    unint64_t v3 = 0xE400000000000000;
  }
  else {
    unint64_t v3 = 0xE500000000000000;
  }
  [a1 setTaskCompletedWithSuccess:a2 & 1];
  static os_log_type_t.error.getter();
  sub_100063814(&qword_1010BFBB0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100E251B0;
  *(void *)(v4 + 56) = &type metadata for String;
  unint64_t v5 = sub_10001EC88();
  *(void *)(v4 + 32) = 0xD00000000000002FLL;
  *(void *)(v4 + 40) = 0x8000000100DCB9A0;
  *(void *)(v4 + 96) = &type metadata for String;
  *(void *)(v4 + 104) = v5;
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 72) = v2;
  *(void *)(v4 + 80) = v3;
  sub_100057778(0, (unint64_t *)&qword_1010BFBC0);
  id v6 = (id)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
}

uint64_t sub_10091C600(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = a2;
  uint64_t v64 = a1;
  uint64_t v71 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  id v68 = (char *)v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for DispatchQoS();
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  NSString v66 = (char *)v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010BFE40);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v83 = (uint64_t)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v82 = (char *)v63 - v7;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v72 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  NSString v73 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v81 = (char *)v63 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v88 = (char *)v63 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v87 = (char *)v63 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  dispatch_group_t v80 = (char *)v63 - v18;
  __chkstk_darwin(v17);
  uint64_t v84 = (char *)v63 - v19;
  if (qword_1010BBCC8 != -1) {
    swift_once();
  }
  id v91 = (id)0xEA00000000007265;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unsigned int v20 = v98;
  uint64_t v21 = v99;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  int v85 = 1;
  id v22 = (void *)0xE900000000000064;
  switch(v21)
  {
    case 1:
      id v22 = (void *)0xE700000000000000;
      goto LABEL_6;
    case 2:
      goto LABEL_7;
    case 3:
      id v22 = (void *)0xEF72656269726373;
      goto LABEL_6;
    default:
LABEL_6:
      int v85 = _stringCompareWithSmolCheck(_:_:expecting:)();
      id v91 = v22;
LABEL_7:
      swift_bridgeObjectRelease();
      Date.init()();
      dispatch_group_t v23 = dispatch_group_create();
      uint64_t v76 = swift_allocObject();
      *(unsigned char *)(v76 + 16) = 1;
      type metadata accessor for UnfairLock();
      swift_allocObject();
      uint64_t v75 = UnfairLock.init()();
      uint64_t v24 = v88;
      id v25 = v87;
      if (qword_1010BBD78 != -1) {
        swift_once();
      }
      uint64_t v26 = (char *)off_1010C03F8;
      uint64_t v27 = *((void *)off_1010C03F8 + 2);
      uint64_t v86 = v23;
      if (!v27) {
        goto LABEL_36;
      }
      id v91 = self;
      uint64_t v79 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56);
      uint64_t v78 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
      unint64_t v28 = v72 + 32;
      uint64_t v29 = (void (**)(char *, uint64_t))(v72 + 8);
      swift_bridgeObjectRetain();
      v63[1] = v26;
      uint64_t v30 = v26 + 50;
      uint64_t v89 = (void (**)(char *, uint64_t, uint64_t))v28;
      uint64_t v77 = v28 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      uint64_t v74 = (char *)&type metadata for Any + 8;
      break;
  }
  do
  {
    int v90 = *(v30 - 18);
    double v34 = *(double *)(v30 - 10);
    char v35 = *(v30 - 1);
    char v36 = *v30;
    if ((v85 & 1) != 0 || (*(v30 - 17) & 1) == 0)
    {
      id v38 = [v91 standardUserDefaults];
      LOBYTE(v92) = v35;
      sub_10091E408();
      sub_10005D1D4();
      NSUserDefaults.subscript.getter(&aBlock);

      if (v95)
      {
        uint64_t v39 = (uint64_t)v82;
        int v40 = swift_dynamicCast();
        (*v79)(v39, v40 ^ 1u, 1, v8);
      }
      else
      {
        sub_1000637B8((uint64_t)&aBlock, (uint64_t *)&unk_1010C0270);
        uint64_t v39 = (uint64_t)v82;
        (*v79)((uint64_t)v82, 1, 1, v8);
      }
      uint64_t v41 = v83;
      sub_10091E45C(v39, v83);
      if ((*v78)(v41, 1, v8) == 1)
      {
        Date.init()();
        sub_1000637B8(v41, &qword_1010BFE40);
      }
      else
      {
        (*v89)(v24, v41, v8);
      }
      sub_1000637B8(v39, &qword_1010BFE40);
      static Date.+ infix(_:_:)();
      int v42 = *v29;
      (*v29)(v24, v8);
      uint64_t v43 = v81;
      Date.init()();
      if (static Date.< infix(_:_:)())
      {
        char v44 = v73;
        static Date.+ infix(_:_:)();
        v42(v43, v8);
        v42(v25, v8);
        uint64_t v45 = *v89;
        (*v89)(v25, (uint64_t)v44, v8);
      }
      else
      {
        v42(v43, v8);
        uint64_t v45 = *v89;
      }
      uint64_t v46 = v80;
      v45(v80, (uint64_t)v25, v8);
      sub_10091ECDC(&qword_1010C0438, (void (*)(uint64_t))&type metadata accessor for Date);
      char v37 = dispatch thunk of static Comparable.< infix(_:_:)();
      v42(v46, v8);
    }
    else
    {
      char v37 = 1;
    }
    id v47 = [v91 standardUserDefaults];
    LOBYTE(v92) = v36;
    sub_10091E408();
    sub_10005D1D4();
    NSUserDefaults.subscript.getter(&aBlock);

    if (!v95)
    {
      sub_1000637B8((uint64_t)&aBlock, (uint64_t *)&unk_1010C0270);
LABEL_32:
      char v50 = v37 | (v34 <= 0.0);
      uint64_t v24 = v88;
      id v25 = v87;
      uint64_t v49 = v86;
      if (v50) {
        goto LABEL_13;
      }
      goto LABEL_33;
    }
    if ((swift_dynamicCast() & 1) == 0 || (v92 & 1) == 0) {
      goto LABEL_32;
    }
    id v48 = [v91 standardUserDefaults];
    id v95 = &type metadata for Bool;
    LOBYTE(aBlock) = 0;
    LOBYTE(v92) = v36;
    NSUserDefaults.subscript.setter((uint64_t)&aBlock, (uint64_t)&v92, (uint64_t)&type metadata for BackgroundTaskConfiguration.UserDefaultsKey);

    uint64_t v24 = v88;
    id v25 = v87;
    uint64_t v49 = v86;
LABEL_33:
    dispatch_group_enter(v49);
    if (v90)
    {
      int64_t v31 = (void *)swift_allocObject();
      uint64_t v32 = v76;
      v31[2] = v75;
      v31[3] = v32;
      v31[4] = v49;
      swift_retain();
      swift_retain();
      unint64_t v33 = v49;
      sub_10091D794((uint64_t)sub_10091EE44, (uint64_t)v31);
    }
    else
    {
      double v51 = (void *)swift_allocObject();
      uint64_t v52 = v76;
      long long v51[2] = v75;
      v51[3] = v52;
      v51[4] = v49;
      swift_retain();
      swift_retain();
      uint64_t v53 = v49;
      sub_10091D42C((uint64_t)sub_10091F1D0, (uint64_t)v51);
    }
    swift_release();
LABEL_13:
    v30 += 24;
    --v27;
  }
  while (v27);
  swift_bridgeObjectRelease();
LABEL_36:
  if (qword_1010BBD70 != -1) {
    swift_once();
  }
  uint64_t v54 = (void *)swift_allocObject();
  uint64_t v55 = v76;
  v54[2] = v75;
  v54[3] = v55;
  uint64_t v56 = v65;
  v54[4] = v64;
  v54[5] = v56;
  id v96 = sub_10091EDC4;
  uint64_t v97 = v54;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v94 = sub_100020238;
  id v95 = &unk_100FF79A0;
  id v57 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  char v58 = v66;
  static DispatchQoS.unspecified.getter();
  uint64_t v92 = _swiftEmptyArrayStorage;
  sub_10091ECDC((unint64_t *)&qword_1010C1800, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100063814(&qword_1010BFF48);
  sub_10007ACD8((unint64_t *)&qword_1010C1810, &qword_1010BFF48);
  char v59 = v68;
  uint64_t v60 = v71;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v61 = v86;
  OS_dispatch_group.notify(qos:flags:queue:execute:)();
  _Block_release(v57);
  swift_release();

  (*(void (**)(char *, uint64_t))(v70 + 8))(v59, v60);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v58, v69);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v84, v8);
  swift_release();
  return swift_release();
}

void sub_10091D34C(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
}

uint64_t sub_10091D3C0(unsigned char *a1, char a2)
{
  swift_beginAccess();
  char v4 = *a1 & a2;
  uint64_t result = swift_beginAccess();
  *a1 = v4;
  return result;
}

void sub_10091D42C(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a1;
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010BBD80 != -1) {
    swift_once();
  }
  int v7 = word_1010C0400;
  char v8 = HIBYTE(word_1010C0400);
  uint64_t v9 = qword_1010C0408;
  char v10 = word_1010C0410;
  char v11 = HIBYTE(word_1010C0410);
  HIDWORD(v22) = byte_1010C0412;
  Date.init()();
  id v12 = [self standardUserDefaults];
  uint64_t v26 = (void *)v3;
  uint64_t v13 = sub_100068018(aBlock);
  (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v13, v6, v3);
  char v29 = v11;
  sub_10091E408();
  sub_10005D1D4();
  NSUserDefaults.subscript.setter((uint64_t)aBlock, (uint64_t)&v29, (uint64_t)&type metadata for BackgroundTaskConfiguration.UserDefaultsKey);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  static os_log_type_t.default.getter();
  sub_100063814(&qword_1010BFBB0);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = v14;
  *(_OWORD *)(v14 + 16) = xmmword_100E251D0;
  if (v7) {
    unint64_t v16 = 0xD000000000000018;
  }
  else {
    unint64_t v16 = 0xD000000000000019;
  }
  if (v7) {
    unint64_t v17 = 0x8000000100DC8C00;
  }
  else {
    unint64_t v17 = 0x8000000100DC8BE0;
  }
  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 64) = sub_10001EC88();
  *(void *)(v15 + 32) = v16;
  *(void *)(v15 + 40) = v17;
  sub_100057778(0, (unint64_t *)&qword_1010BFBC0);
  uint64_t v18 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();

  uint64_t v19 = *(void **)(v23 + 32);
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = v7;
  *(unsigned char *)(v20 + 17) = v8;
  *(void *)(v20 + 24) = v9;
  *(unsigned char *)(v20 + 32) = v10;
  *(unsigned char *)(v20 + 33) = v11;
  *(unsigned char *)(v20 + 34) = BYTE4(v22);
  *(void *)(v20 + 40) = v24;
  *(void *)(v20 + 48) = a2;
  uint64_t v27 = sub_10091EE8C;
  uint64_t v28 = v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_10021BB58;
  uint64_t v26 = &unk_100FF7A40;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v19 updatePinnedSubscribedPlaylistsWithCompletion:v21];
  _Block_release(v21);
}

uint64_t sub_10091D794(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v26 = a1;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010BBD88 != -1) {
    swift_once();
  }
  int v9 = word_1010C0418;
  char v10 = HIBYTE(word_1010C0418);
  uint64_t v11 = qword_1010C0420;
  char v12 = byte_1010C0429;
  int v24 = byte_1010C042A;
  int v25 = byte_1010C0428;
  Date.init()();
  id v13 = [self standardUserDefaults];
  uint64_t v28[3] = v5;
  uint64_t v14 = sub_100068018(v28);
  (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 16))(v14, v8, v5);
  char v27 = v12;
  sub_10091E408();
  sub_10005D1D4();
  NSUserDefaults.subscript.setter((uint64_t)v28, (uint64_t)&v27, (uint64_t)&type metadata for BackgroundTaskConfiguration.UserDefaultsKey);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  static os_log_type_t.default.getter();
  sub_100063814(&qword_1010BFBB0);
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = v15;
  *(_OWORD *)(v15 + 16) = xmmword_100E251D0;
  if (v9) {
    unint64_t v17 = 0xD000000000000018;
  }
  else {
    unint64_t v17 = 0xD000000000000019;
  }
  if (v9) {
    unint64_t v18 = 0x8000000100DC8C00;
  }
  else {
    unint64_t v18 = 0x8000000100DC8BE0;
  }
  *(void *)(v15 + 56) = &type metadata for String;
  *(void *)(v15 + 64) = sub_10001EC88();
  *(void *)(v16 + 32) = v17;
  *(void *)(v16 + 40) = v18;
  sub_100057778(0, (unint64_t *)&qword_1010BFBC0);
  uint64_t v19 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();

  if (qword_1010BBD58 != -1) {
    swift_once();
  }
  if (qword_1010BBD70 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_1010C03F0;
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = v9;
  *(unsigned char *)(v21 + 17) = v10;
  *(void *)(v21 + 24) = v11;
  *(unsigned char *)(v21 + 32) = v25;
  *(unsigned char *)(v21 + 33) = v12;
  *(unsigned char *)(v21 + 34) = v24;
  *(void *)(v21 + 40) = v26;
  *(void *)(v21 + 48) = a2;
  swift_retain();
  swift_retain();
  _s9MusicCore22BackgroundFetchManagerC14updateURLCache5queue20onDidReceiveResponse10completionySo012OS_dispatch_H0C_ySo13ICURLResponseCSg_s5Error_pSgtcSgySaysAM_pGctF_0(v20, (uint64_t)sub_10091EEA4, v3, (uint64_t)sub_10091EEAC, v21);
  swift_release();
  return swift_release();
}

uint64_t sub_10091DB2C(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(BOOL))
{
  unint64_t v7 = 0xD000000000000018;
  if (a1)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    sub_100063814(&qword_1010BFBB0);
    uint64_t v8 = swift_allocObject();
    int v9 = (void *)v8;
    *(_OWORD *)(v8 + 16) = xmmword_100E251B0;
    if (a2)
    {
      unint64_t v10 = 0x8000000100DC8C00;
    }
    else
    {
      unint64_t v7 = 0xD000000000000019;
      unint64_t v10 = 0x8000000100DC8BE0;
    }
    *(void *)(v8 + 56) = &type metadata for String;
    unint64_t v11 = sub_10001EC88();
    _OWORD v9[8] = v11;
    v9[4] = v7;
    v9[5] = v10;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v12 = String.init<A>(describing:)();
    v9[12] = &type metadata for String;
    v9[13] = v11;
    v9[9] = v12;
    v9[10] = v13;
    sub_100057778(0, (unint64_t *)&qword_1010BFBC0);
    uint64_t v14 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();

    swift_errorRelease();
  }
  else
  {
    static os_log_type_t.error.getter();
    sub_100063814(&qword_1010BFBB0);
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = v15;
    *(_OWORD *)(v15 + 16) = xmmword_100E251D0;
    BOOL v17 = (a2 & 1) == 0;
    if (a2) {
      unint64_t v18 = 0xD000000000000018;
    }
    else {
      unint64_t v18 = 0xD000000000000019;
    }
    if (v17) {
      unint64_t v19 = 0x8000000100DC8BE0;
    }
    else {
      unint64_t v19 = 0x8000000100DC8C00;
    }
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_10001EC88();
    *(void *)(v16 + 32) = v18;
    *(void *)(v16 + 40) = v19;
    sub_100057778(0, (unint64_t *)&qword_1010BFBC0);
    uint64_t v20 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
  }
  return a4(a1 == 0);
}

uint64_t sub_10091DD7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *(void (**)(uint64_t))(a3 + 16);
  if (v6)
  {
    swift_retain();
    v6(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_10091DDEC(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(void))
{
  static os_log_type_t.default.getter();
  sub_100063814(&qword_1010BFBB0);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = (void *)v7;
  *(_OWORD *)(v7 + 16) = xmmword_100E251D0;
  BOOL v9 = (a2 & 1) == 0;
  if (a2) {
    unint64_t v10 = 0xD000000000000018;
  }
  else {
    unint64_t v10 = 0xD000000000000019;
  }
  if (v9) {
    unint64_t v11 = 0x8000000100DC8BE0;
  }
  else {
    unint64_t v11 = 0x8000000100DC8C00;
  }
  *(void *)(v7 + 56) = &type metadata for String;
  unint64_t v12 = sub_10001EC88();
  v8[8] = v12;
  _OWORD v8[4] = v10;
  v8[5] = v11;
  unint64_t v13 = v11;
  sub_100057778(0, (unint64_t *)&qword_1010BFBC0);
  uint64_t v14 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();

  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v22 = a4;
    swift_bridgeObjectRetain();
    uint64_t v16 = 0;
    do
    {
      ++v16;
      swift_errorRetain();
      static os_log_type_t.error.getter();
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_100E251B0;
      *(void *)(v17 + 56) = &type metadata for String;
      *(void *)(v17 + 64) = v12;
      *(void *)(v17 + 32) = v10;
      *(void *)(v17 + 40) = v13;
      swift_errorRetain();
      sub_100063814((uint64_t *)&unk_1010C0920);
      uint64_t v18 = String.init<A>(describing:)();
      *(void *)(v17 + 96) = &type metadata for String;
      *(void *)(v17 + 104) = v12;
      *(void *)(v17 + 72) = v18;
      *(void *)(v17 + 80) = v19;
      uint64_t v20 = (void *)static OS_os_log.default.getter();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();

      swift_errorRelease();
    }
    while (v15 != v16);
    swift_bridgeObjectRelease();
    a4 = v22;
  }
  return a4(v15 == 0);
}

uint64_t sub_10091E044()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_100057778(0, (unint64_t *)&qword_1010C17E0);
  static DispatchQoS.unspecified.getter();
  v7[1] = _swiftEmptyArrayStorage;
  sub_10091ECDC(&qword_1010C04F0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100063814(&qword_1010C04F8);
  sub_10007ACD8(&qword_1010C0500, &qword_1010C04F8);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_1010C03F0 = result;
  return result;
}

uint64_t BackgroundRefreshController.deinit()
{
  sub_10006ADFC(*(void *)(v0 + 16));

  return v0;
}

uint64_t BackgroundRefreshController.__deallocating_deinit()
{
  sub_10006ADFC(*(void *)(v0 + 16));

  return swift_deallocClassInstance();
}

double sub_10091E2FC()
{
  sub_100063814(&qword_1010C0508);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100E251B0;
  if (qword_1010BBD80 != -1) {
    swift_once();
  }
  char v1 = HIBYTE(word_1010C0400);
  uint64_t v2 = qword_1010C0408;
  char v3 = word_1010C0410;
  __int16 v4 = *(__int16 *)((char *)&word_1010C0410 + 1);
  *(unsigned char *)(v0 + 32) = word_1010C0400;
  *(unsigned char *)(v0 + 33) = v1;
  *(void *)(v0 + 40) = v2;
  *(unsigned char *)(v0 + 48) = v3;
  *(_WORD *)(v0 + 49) = v4;
  if (qword_1010BBD88 != -1) {
    swift_once();
  }
  char v5 = HIBYTE(word_1010C0418);
  double result = *(double *)&qword_1010C0420;
  char v7 = byte_1010C0428;
  __int16 v8 = *(_WORD *)&byte_1010C0429;
  *(unsigned char *)(v0 + 56) = word_1010C0418;
  *(unsigned char *)(v0 + 57) = v5;
  *(double *)(v0 + 64) = result;
  *(unsigned char *)(v0 + 72) = v7;
  *(_WORD *)(v0 + 73) = v8;
  off_1010C03F8 = (_UNKNOWN *)v0;
  return result;
}

unint64_t sub_10091E408()
{
  unint64_t result = qword_1010C0430;
  if (!qword_1010C0430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C0430);
  }
  return result;
}

uint64_t sub_10091E45C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010BFE40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10091E4C4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10091E504()
{
  sub_10091BD14(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

ValueMetadata *type metadata accessor for BackgroundRefreshController.PerformanceMetricsRecorder()
{
  return &type metadata for BackgroundRefreshController.PerformanceMetricsRecorder;
}

unsigned char *storeEnumTagSinglePayload for BackgroundTaskConfiguration.UserDefaultsKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10091E5F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundTaskConfiguration.UserDefaultsKey()
{
  return &type metadata for BackgroundTaskConfiguration.UserDefaultsKey;
}

unint64_t sub_10091E62C()
{
  unint64_t result = qword_1010C04E8;
  if (!qword_1010C04E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C04E8);
  }
  return result;
}

void sub_10091E680()
{
  if (qword_1010BBD90 != -1) {
    swift_once();
  }
  sub_100063814(&qword_1010C0630);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10003DA94);

  word_1010C0400 = 256;
  qword_1010C0408 = 0x40E5180000000000;
  word_1010C0410 = 257;
  byte_1010C0412 = 0;
}

void sub_10091E758()
{
  if (qword_1010BBD90 != -1) {
    swift_once();
  }
  sub_100063814(&qword_1010C0630);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10003DA94);
  uint64_t v0 = v3;
  if (v3 && (sub_10091E85C(v3, (uint64_t)&v3), v0, (v4 & 1) == 0))
  {
    char v1 = 0;
    uint64_t v2 = (uint64_t)v3;
  }
  else
  {
    char v1 = 1;
    uint64_t v2 = 0x40D5180000000000;
  }
  word_1010C0418 = 257;
  qword_1010C0420 = v2;
  byte_1010C0428 = v1;
  *(_WORD *)&byte_1010C0429 = 515;
}

void sub_10091E85C(void *a1@<X0>, uint64_t a2@<X8>)
{
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [a1 dictionaryForBagKey:v4];

  if (!v5) {
    goto LABEL_12;
  }
  uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v7 = sub_100048774(v6);
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_12;
  }
  if (!*(void *)(v7 + 16) || (unint64_t v8 = sub_100071D70(0xD00000000000001ELL, 0x8000000100DCB920), (v9 & 1) == 0))
  {
    long long v15 = 0u;
    long long v16 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_100076134(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v15);
  swift_bridgeObjectRelease();
  if (!*((void *)&v16 + 1)) {
    goto LABEL_11;
  }
  sub_100063814(&qword_1010C5DC0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    *(void *)a2 = 0;
    char v12 = 1;
    goto LABEL_13;
  }
  if (*(void *)(v14 + 16) && (unint64_t v10 = sub_100071D70(0xD00000000000001DLL, 0x8000000100DCBBE0), (v11 & 1) != 0))
  {
    sub_100076134(*(void *)(v14 + 56) + 32 * v10, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v16 + 1))
  {
LABEL_11:
    sub_1000637B8((uint64_t)&v15, (uint64_t *)&unk_1010C0270);
    goto LABEL_12;
  }
  char v13 = swift_dynamicCast();
  if ((v13 & 1) == 0) {
    *(void *)a2 = 0;
  }
  char v12 = v13 ^ 1;
LABEL_13:
  *(unsigned char *)(a2 + 8) = v12;
}

unint64_t sub_10091EA44(char a1)
{
  unint64_t result = 0xD00000000000002FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000032;
      break;
    case 2:
      unint64_t result = 0xD000000000000028;
      break;
    case 3:
      unint64_t result = 0xD000000000000027;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10091EADC(char *a1, char *a2)
{
  return sub_100864640(*a1, *a2);
}

Swift::Int sub_10091EAE8()
{
  return sub_10091A070();
}

uint64_t sub_10091EAF0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10091EB64()
{
  return sub_10091AA04();
}

uint64_t sub_10091EB6C@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100FEDA40, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_10091EBCC(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000018;
  }
  else {
    unint64_t v2 = 0xD000000000000019;
  }
  unint64_t v3 = 0x8000000100DC8BE0;
  if (*v1) {
    unint64_t v3 = 0x8000000100DC8C00;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10091EC10(char *a1, char *a2)
{
  return sub_1008644C0(*a1, *a2);
}

Swift::Int sub_10091EC1C()
{
  return sub_10091A0F8();
}

uint64_t sub_10091EC24()
{
  return sub_10091A5B0();
}

Swift::Int sub_10091EC2C()
{
  return sub_10091AA88();
}

unint64_t sub_10091EC34@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10091EC90(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10091EC64@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10091EA44(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10091EC90(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100FEDA90, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_10091ECDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10091ED24()
{
  return swift_deallocObject();
}

uint64_t sub_10091ED5C(char a1)
{
  return sub_10091C1D4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10091ED6C()
{
  return swift_deallocObject();
}

uint64_t sub_10091ED7C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10091EDC4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 32);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10091EF24);
  return v1(v3);
}

void sub_10091EE44(uint64_t a1)
{
  sub_10091D34C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t sub_10091EE54()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10091EE8C(uint64_t a1, __n128 a2)
{
  return sub_10091EEC4(a1, (uint64_t (*)(uint64_t, void, void, void, void, __n128))sub_10091DB2C, a2);
}

uint64_t sub_10091EEA4(uint64_t a1, uint64_t a2)
{
  return sub_10091DD7C(a1, a2, v2);
}

uint64_t sub_10091EEAC(uint64_t a1, __n128 a2)
{
  return sub_10091EEC4(a1, (uint64_t (*)(uint64_t, void, void, void, void, __n128))sub_10091DDEC, a2);
}

uint64_t sub_10091EEC4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, __n128), __n128 a3)
{
  if (*(unsigned char *)(v3 + 17)) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  a3.n128_u64[0] = *(void *)(v3 + 24);
  return a2(a1, v4 | *(unsigned __int8 *)(v3 + 16), *(unsigned __int8 *)(v3 + 32) | (*(unsigned __int8 *)(v3 + 33) << 8) | (*(unsigned __int8 *)(v3 + 34) << 16), *(void *)(v3 + 40), *(void *)(v3 + 48), a3);
}

uint64_t sub_10091EF04()
{
  return sub_10091D3C0(*(unsigned char **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10091EF24@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(unsigned char **)(v1 + 16);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_10091EF7C()
{
  return swift_deallocObject();
}

void sub_10091EFB4()
{
  sub_10091C4C4(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

__n128 initializeBufferWithCopyOfBuffer for BackgroundTaskConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for BackgroundTaskConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[19]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BackgroundTaskConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 19) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 19) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundTaskConfiguration()
{
  return &type metadata for BackgroundTaskConfiguration;
}

unsigned char *storeEnumTagSinglePayload for BackgroundTaskConfiguration.Identifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10091F140);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundTaskConfiguration.Identifier()
{
  return &type metadata for BackgroundTaskConfiguration.Identifier;
}

unint64_t sub_10091F17C()
{
  unint64_t result = qword_1010C0510[0];
  if (!qword_1010C0510[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1010C0510);
  }
  return result;
}

uint64_t BagControlledValue.init(fallback:reader:)@<X0>(uint64_t a1@<X0>, void (*a2)(void *)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v18 = a1;
  uint64_t v6 = type metadata accessor for Optional();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)&v17 - v8;
  uint64_t v10 = *(void *)(a3 - 8);
  __chkstk_darwin(v11);
  char v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010BBD90 != -1) {
    swift_once();
  }
  sub_100063814(&qword_1010C0630);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10003DA94);
  uint64_t v14 = v19;
  if (!v19) {
    goto LABEL_6;
  }
  v17(v19);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_6:
    *(unsigned char *)(a4 + *(int *)(type metadata accessor for BagControlledValue() + 28)) = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(a4, v18, a3);
  }
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, a3);
  long long v16 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v16(v13, v9, a3);
  *(unsigned char *)(a4 + *(int *)(type metadata accessor for BagControlledValue() + 28)) = 0;
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(a4, v13, a3);
}

uint64_t BagControlledValue.source.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

uint64_t type metadata accessor for BagControlledValue()
{
  return sub_10004CF5C();
}

uint64_t sub_10091F4C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_10091F4E0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_10091F578(void *a1, void *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
  }
  else
  {
    uint64_t v10 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v4;
}

uint64_t sub_10091F64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 48) + a1) = *(unsigned char *)(*(void *)(v5 + 48) + a2);
  return a1;
}

uint64_t sub_10091F6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 40) + a1) = *(unsigned char *)(*(void *)(v5 + 40) + a2);
  return a1;
}

uint64_t sub_10091F71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 32) + a1) = *(unsigned char *)(*(void *)(v5 + 32) + a2);
  return a1;
}

uint64_t sub_10091F784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 24) + a1) = *(unsigned char *)(*(void *)(v5 + 24) + a2);
  return a1;
}

uint64_t sub_10091F7EC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = v6 + 1;
  char v10 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v5 >= 0xFE) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      unsigned int v15 = *((unsigned __int8 *)a1 + v6);
      if (v15 >= 2) {
        return v15 - 1;
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_10091F970(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = v9 + 1;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x10091FBACLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 < 0xFE)
        {
          a1[v9] = a2 + 1;
        }
        else
        {
          uint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return;
  }
}

uint64_t sub_10091FBD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

unsigned char *sub_10091FBDC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10091FCA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for BagControlledValue.Source()
{
  return sub_10004CF5C();
}

uint64_t BagProvider.createObserver(handler:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for BagProvider.Observer();
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 32) = 0;
  swift_weakAssign();
  uint64_t v5 = *(void *)(v4 + 24);
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = a2;
  swift_retain();
  sub_10006ADFC(v5);
  UnfairLock.locked<A>(_:)(sub_100040614);
  sub_100044C44(0);
  return v4;
}

void BagProvider.getBag(completion:)(void (*a1)(), uint64_t a2)
{
  sub_100063814(&qword_1010C0630);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10003DAB0);
  if (v9)
  {
    a1();
  }
  else
  {
    type metadata accessor for BagProvider.Observer();
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    *(void *)(v4 + 24) = 0;
    *(void *)(v4 + 32) = 0;
    swift_weakAssign();
    uint64_t v5 = swift_allocObject();
    swift_weakInit();
    unsigned int v6 = (void *)swift_allocObject();
    _OWORD v6[2] = a1;
    v6[3] = a2;
    v6[4] = v5;
    v6[5] = v4;
    uint64_t v7 = *(void *)(v4 + 24);
    *(void *)(v4 + 24) = sub_100917D7C;
    *(void *)(v4 + 32) = v6;
    swift_retain();
    swift_retain();
    uint64_t v8 = sub_10006ADFC(v7);
    __chkstk_darwin(v8);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100917D88);
    sub_100044C44(0);
    swift_release();
  }
}

uint64_t static BagProvider.shared.getter()
{
  if (qword_1010BBD90 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_10091FFF8(uint64_t a1, void (*a2)(void))
{
  a2();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    uint64_t v3 = swift_release();
    __chkstk_darwin(v3);
    sub_100063814((uint64_t *)&unk_1010C08B0);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100920A84);
    return swift_release();
  }
  return result;
}

uint64_t sub_1009200F0@<X0>(uint64_t a1@<X1>, BOOL *a2@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_5;
  }
  unsigned int v6 = (unint64_t *)(result + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers);
  swift_beginAccess();
  swift_retain();
  uint64_t v7 = sub_100920B90(v6, a1);
  uint64_t result = swift_release();
  if (*v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v8 >= v7) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8 >= v7)
    {
LABEL_4:
      sub_100881180(v7, v8);
      swift_endAccess();
      uint64_t result = swift_release();
LABEL_5:
      *a2 = v5 == 0;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100920224(uint64_t a1)
{
  unint64_t v1 = (void *)(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers);
  swift_beginAccess();
  swift_retain();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_1009202CC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100920304()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10092034C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1009203A4();
    return swift_release();
  }
  return result;
}

void sub_1009203A4()
{
  UnfairLock.locked<A>(_:)((void (*)(void))sub_100920EB4);

  if (v5 == 1)
  {
    UnfairLock.locked<A>(_:)(sub_100920EF8);
    __chkstk_darwin(v0);
    UnfairLock.locked<A>(_:)(sub_10003FBCC);
    swift_bridgeObjectRelease();
    unint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Notification triggered to update bag: storefrontChanged", v3, 2u);
      swift_slowDealloc();
    }

    sub_100044C44(1);
  }
}

uint64_t sub_100920544()
{
  return swift_endAccess();
}

uint64_t BagProvider.Observer.deinit()
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    __chkstk_darwin(Strong);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100920688);
    swift_release();
  }
  swift_weakDestroy();
  sub_10006ADFC(*(void *)(v0 + 24));
  return v0;
}

uint64_t sub_100920688()
{
  return sub_100920544();
}

uint64_t BagProvider.Observer.__deallocating_deinit()
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    __chkstk_darwin(Strong);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_100920F30);
    swift_release();
  }
  swift_weakDestroy();
  sub_10006ADFC(*(void *)(v0 + 24));
  return swift_deallocClassInstance();
}

id sub_100920800()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BagProvider.Retry();
  [super dealloc];
}

uint64_t BagProvider.deinit()
{
  sub_10004D104(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider____lazy_storage___signpost);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_logger;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t BagProvider.__deallocating_deinit()
{
  BagProvider.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1009209B8()
{
  return type metadata accessor for BagProvider();
}

uint64_t initializeBufferWithCopyOfBuffer for BagProvider.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for BagProvider.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t assignWithTake for BagProvider.Result(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

ValueMetadata *type metadata accessor for BagProvider.Result()
{
  return &type metadata for BagProvider.Result;
}

uint64_t sub_100920A84@<X0>(BOOL *a1@<X8>)
{
  return sub_1009200F0(*(void *)(v1 + 24), a1);
}

uint64_t sub_100920AA0(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    uint64_t v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_unknownObjectRelease();
        if (v6 == a2) {
          return v5;
        }
      }
      else if (*(void *)(a1 + 8 * v5 + 32) == a2)
      {
        return v5;
      }
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (++v5 == v4) {
        return 0;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_100920B90(unint64_t *a1, uint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_100920AA0(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v2) {
    return v6;
  }
  if ((v8 & 1) == 0)
  {
    unint64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_54;
    }
    if (*a1 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v9 != v22) {
        goto LABEL_6;
      }
    }
    else if (v9 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (unint64_t i = v6 + 5; ; ++i)
      {
        unint64_t v11 = i - 4;
        unint64_t v12 = *a1;
        if ((*a1 & 0xC000000000000001) != 0) {
          break;
        }
        if ((v11 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        if (v11 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_45;
        }
        if (*(void *)(v12 + 8 * i) != a2) {
          goto LABEL_11;
        }
LABEL_31:
        unint64_t v9 = i - 3;
        if (__OFADD__(v11, 1)) {
          goto LABEL_46;
        }
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v18 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v18) {
          return v6;
        }
      }
      uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_unknownObjectRelease();
      if (v19 == a2) {
        goto LABEL_31;
      }
LABEL_11:
      if (v11 == v6)
      {
LABEL_30:
        if (__OFADD__(v6++, 1)) {
          goto LABEL_47;
        }
        goto LABEL_31;
      }
      unint64_t v9 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        unint64_t v9 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_16:
          if ((v11 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          uint64_t v14 = *(void *)(v9 + 8 * i);
          swift_retain();
          goto LABEL_19;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (v6 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_49;
        }
        uint64_t v13 = *(void *)(v9 + 8 * v6 + 32);
        swift_retain();
        if ((v9 & 0xC000000000000001) == 0) {
          goto LABEL_16;
        }
      }
      uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      unint64_t v9 = *a1;
LABEL_19:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v9 & 0x8000000000000000) != 0
        || (v9 & 0x4000000000000000) != 0)
      {
        unint64_t v9 = sub_100659910(v9);
        *a1 = v9;
      }
      *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v14;
      swift_release();
      specialized Array._endMutation()();
      unint64_t v9 = *a1;
      int v16 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!v16 || (v9 & 0x8000000000000000) != 0 || (v9 & 0x4000000000000000) != 0)
      {
        unint64_t v9 = sub_100659910(v9);
        *a1 = v9;
      }
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_52;
      }
      if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_53;
      }
      *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v13;
      swift_release();
      specialized Array._endMutation()();
      goto LABEL_30;
    }
    return v6;
  }
  unint64_t v20 = *a1;
  if (!(v20 >> 62)) {
    return *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_100920EAC()
{
  return sub_10092034C();
}

id sub_100920EB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  char v3 = *(unsigned char *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  return v2;
}

void sub_100920EF8()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_deferReload) = *(unsigned char *)(v0
                                                                                  + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching);
}

void sub_100920F14()
{
}

uint64_t sub_100920F30()
{
  return sub_100920688();
}

uint64_t TabIdentifier.rawValue.getter(char a1)
{
  uint64_t result = 0x7972617262696CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6F4E6E657473696CLL;
      break;
    case 2:
      uint64_t result = 0x6573776F7262;
      break;
    case 3:
      uint64_t result = 0x6F69646172;
      break;
    case 4:
      uint64_t result = 0x686372616573;
      break;
    case 5:
      uint64_t result = 0x736F65646976;
      break;
    default:
      return result;
  }
  return result;
}

_UNKNOWN **static TabIdentifier.allCases.getter()
{
  return &off_100FEDBC0;
}

uint64_t sub_100921018(unsigned __int8 *a1, char *a2)
{
  return sub_10005A254(*a1, *a2);
}

Swift::Int sub_100921024()
{
  return sub_10091A1E0();
}

uint64_t sub_10092102C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10092111C()
{
  return sub_10091A67C();
}

unint64_t sub_100921124@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s9MusicCore13TabIdentifierO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_100921154(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x7972617262696CLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000077;
      uint64_t v3 = 0x6F4E6E657473696CLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x6573776F7262;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x6F69646172;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x686372616573;
      a1[1] = 0xE600000000000000;
      break;
    case 5:
      *a1 = 0x736F65646976;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_100921224(void *a1@<X8>)
{
  *a1 = &off_100FEDBC0;
}

uint64_t sub_100921234(unsigned __int8 *a1, char *a2)
{
  return sub_10086471C(*a1, *a2);
}

Swift::Int sub_100921240()
{
  return sub_10091A8E8();
}

uint64_t sub_10092124C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100921354()
{
  return sub_10091A8E8();
}

unint64_t sub_10092135C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100921474(*a1);
  *a2 = result;
  return result;
}

void sub_10092138C(void *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x636973756D5F796DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x756F795F726F66;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E5F6E657473696CLL;
      a1[1] = 0xEA0000000000776FLL;
      return;
    case 3:
      *a1 = 0x6573776F7262;
      a1[1] = 0xE600000000000000;
      return;
    case 4:
      uint64_t v4 = 1768186226;
      goto LABEL_9;
    case 5:
      *a1 = 0x686372616573;
      a1[1] = 0xE600000000000000;
      return;
    case 6:
      uint64_t v4 = 1701079414;
LABEL_9:
      *a1 = v4 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_100921474(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100FEBF80, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 7) {
    return 7;
  }
  else {
    return v3;
  }
}

unint64_t sub_1009214C4()
{
  unint64_t result = qword_1010C08C8;
  if (!qword_1010C08C8)
  {
    sub_10006389C(&qword_1010C08D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C08C8);
  }
  return result;
}

unint64_t sub_100921524()
{
  unint64_t result = qword_1010C08D8;
  if (!qword_1010C08D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C08D8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TabIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100921644);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BagTabIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100921738);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BagTabIdentifier()
{
  return &type metadata for BagTabIdentifier;
}

unint64_t sub_100921774()
{
  unint64_t result = qword_1010C08E0;
  if (!qword_1010C08E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C08E0);
  }
  return result;
}

uint64_t Playlist.hasActiveCollaboration.getter()
{
  uint64_t v0 = sub_100063814(&qword_1010C0910);
  __chkstk_darwin(v0 - 8);
  Swift::String v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100063814(&qword_1010C0918);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unsigned int v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v8 = (char *)&v19 - v7;
  Playlist.collaboration.getter();
  uint64_t v9 = type metadata accessor for Playlist.Collaboration();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v2, 1, v9) == 1)
  {
    sub_1000637B8((uint64_t)v2, &qword_1010C0910);
    uint64_t v11 = type metadata accessor for Playlist.Collaborator.Status();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
LABEL_13:
    uint64_t v17 = 0;
    goto LABEL_14;
  }
  Playlist.Collaboration.collaboratorStatus.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v2, v9);
  uint64_t v12 = type metadata accessor for Playlist.Collaborator.Status();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1) {
    goto LABEL_13;
  }
  sub_10006CAB8((uint64_t)v8, (uint64_t)v6, &qword_1010C0918);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v6, v12);
  if (v14 != enum case for Playlist.Collaborator.Status.host(_:)
    && v14 != enum case for Playlist.Collaborator.Status.joined(_:)
    && v14 != enum case for Playlist.Collaborator.Status.pending(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v12);
    goto LABEL_13;
  }
  uint64_t v17 = 1;
LABEL_14:
  sub_1000637B8((uint64_t)v8, &qword_1010C0918);
  return v17;
}

uint64_t static Collaboration.Setup.contextualImageName(active:)(char a1)
{
  if (a1) {
    return 0x322E6E6F73726570;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_100921AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100921B3C(a1, a2, a3, (uint64_t)&unk_100FF8278, (uint64_t *)&unk_1010C08B0);
}

uint64_t sub_100921AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100066898(a1, a2, a3);
}

uint64_t sub_100921B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100921B3C(a1, a2, a3, (uint64_t)&unk_100FF8188, &qword_1010C0C18);
}

uint64_t sub_100921B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000637B8(a1, &qword_1010C0040);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  sub_100063814(a5);
  return swift_task_create();
}

uint64_t sub_100921CEC(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    Hasher.init(_seed:)();
    ApplicationCapabilities.Service.rawValue.getter(a1);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v4 = Hasher._finalize()();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE500000000000000;
        unint64_t v10 = 0x636973756DLL;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v10 = 0x646956636973756DLL;
            unint64_t v9 = 0xEB00000000736F65;
            break;
          case 2:
            unint64_t v9 = 0x8000000100DB11A0;
            goto LABEL_13;
          case 3:
            unint64_t v9 = 0xE600000000000000;
            unint64_t v10 = 0x6C6169636F73;
            break;
          case 4:
            unint64_t v10 = 0x6F69646172;
            break;
          case 5:
            unint64_t v9 = 0xE600000000000000;
            unint64_t v10 = 0x73656E757469;
            break;
          case 6:
            unint64_t v10 = 0x74634170756F7267;
            unint64_t v9 = 0xED00007974697669;
            break;
          case 7:
            unint64_t v10 = 0x746963696C707865;
            unint64_t v9 = 0xEF746E65746E6F43;
            break;
          case 8:
            unint64_t v9 = 0x8000000100DB1180;
LABEL_13:
            unint64_t v10 = 0xD000000000000013;
            break;
          case 9:
            unint64_t v10 = 0xD000000000000011;
            unint64_t v9 = 0x8000000100DB1160;
            break;
          case 0xA:
            unint64_t v10 = 0x6C62616E45696C6DLL;
            unint64_t v9 = 0xEA00000000006465;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE500000000000000;
        unint64_t v12 = 0x636973756DLL;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xEB00000000736F65;
            if (v10 == 0x646956636973756DLL) {
              goto LABEL_35;
            }
            goto LABEL_36;
          case 2:
            unint64_t v11 = 0x8000000100DB11A0;
            goto LABEL_31;
          case 3:
            unint64_t v11 = 0xE600000000000000;
            if (v10 != 0x6C6169636F73) {
              goto LABEL_36;
            }
            goto LABEL_35;
          case 4:
            if (v10 != 0x6F69646172) {
              goto LABEL_36;
            }
            goto LABEL_35;
          case 5:
            unint64_t v11 = 0xE600000000000000;
            if (v10 != 0x73656E757469) {
              goto LABEL_36;
            }
            goto LABEL_35;
          case 6:
            unint64_t v11 = 0xED00007974697669;
            if (v10 != 0x74634170756F7267) {
              goto LABEL_36;
            }
            goto LABEL_35;
          case 7:
            unint64_t v11 = 0xEF746E65746E6F43;
            if (v10 != 0x746963696C707865) {
              goto LABEL_36;
            }
            goto LABEL_35;
          case 8:
            unint64_t v11 = 0x8000000100DB1180;
LABEL_31:
            if (v10 != 0xD000000000000013) {
              goto LABEL_36;
            }
            goto LABEL_35;
          case 9:
            unint64_t v12 = 0xD000000000000011;
            unint64_t v11 = 0x8000000100DB1160;
            goto LABEL_34;
          case 10:
            unint64_t v11 = 0xEA00000000006465;
            if (v10 != 0x6C62616E45696C6DLL) {
              goto LABEL_36;
            }
            goto LABEL_35;
          default:
LABEL_34:
            if (v10 != v12) {
              goto LABEL_36;
            }
LABEL_35:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v13 = 1;
              return v13 & 1;
            }
LABEL_36:
            char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v13) {
              return v13 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v13 & 1;
            }
            break;
        }
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_10092211C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          int v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_100922254(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AudioVariant();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::Int v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_10092E7C4(&qword_1010C0C60, (void (*)(uint64_t))&type metadata accessor for AudioVariant),
        uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    BOOL v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_10092E7C4(&qword_1010C0C68, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
      char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_100922468(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    Hasher.init(_seed:)();
    Library.Menu.Identifier.rawValue.getter(a1);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v4 = Hasher._finalize()();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xD000000000000029;
        unint64_t v10 = 0x8000000100DAC960;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v9 = 0xD000000000000025;
            uint64_t v11 = "LibraryView.RecentlyAdded";
            goto LABEL_18;
          case 2:
            unint64_t v9 = 0xD000000000000023;
            uint64_t v11 = "LibraryView.Playlists";
            goto LABEL_18;
          case 3:
            unint64_t v9 = 0xD000000000000022;
            uint64_t v11 = "LibraryView.Artists";
            goto LABEL_18;
          case 4:
            BOOL v12 = "LibraryView.Albums";
            goto LABEL_15;
          case 5:
            unint64_t v9 = 0xD000000000000026;
            uint64_t v11 = "LibraryView.Songs";
            goto LABEL_18;
          case 6:
            unint64_t v9 = 0xD000000000000027;
            uint64_t v11 = "LibraryView.MadeForYou";
            goto LABEL_18;
          case 7:
            unint64_t v9 = 0xD000000000000022;
            uint64_t v11 = "LibraryView.MusicVideos";
            goto LABEL_18;
          case 8:
            unint64_t v9 = 0xD000000000000028;
            uint64_t v11 = "LibraryView.Genres";
            goto LABEL_18;
          case 9:
            unint64_t v9 = 0xD000000000000025;
            uint64_t v11 = "LibraryView.Compilations";
            goto LABEL_18;
          case 0xA:
            BOOL v12 = "LibraryView.Composers";
LABEL_15:
            unint64_t v10 = (unint64_t)v12 | 0x8000000000000000;
            unint64_t v9 = 0xD000000000000021;
            break;
          case 0xB:
            unint64_t v9 = 0xD000000000000026;
            uint64_t v11 = "LibraryView.Shows";
            goto LABEL_18;
          case 0xC:
            unint64_t v9 = 0xD000000000000027;
            uint64_t v11 = "LibraryView.Downloaded";
LABEL_18:
            unint64_t v10 = (unint64_t)v11 | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xD000000000000029;
        unint64_t v14 = 0x8000000100DAC960;
        switch(v8)
        {
          case 1:
            unint64_t v15 = 0xD000000000000025;
            int v16 = "LibraryView.RecentlyAdded";
            goto LABEL_35;
          case 2:
            unint64_t v15 = 0xD000000000000023;
            int v16 = "LibraryView.Playlists";
            goto LABEL_35;
          case 3:
            unint64_t v15 = 0xD000000000000022;
            int v16 = "LibraryView.Artists";
            goto LABEL_35;
          case 4:
            uint64_t v17 = "LibraryView.Albums";
            goto LABEL_30;
          case 5:
            unint64_t v15 = 0xD000000000000026;
            int v16 = "LibraryView.Songs";
            goto LABEL_35;
          case 6:
            unint64_t v15 = 0xD000000000000027;
            int v16 = "LibraryView.MadeForYou";
            goto LABEL_35;
          case 7:
            unint64_t v15 = 0xD000000000000022;
            int v16 = "LibraryView.MusicVideos";
            goto LABEL_35;
          case 8:
            unint64_t v15 = 0xD000000000000028;
            int v16 = "LibraryView.Genres";
            goto LABEL_35;
          case 9:
            unint64_t v15 = 0xD000000000000025;
            int v16 = "LibraryView.Compilations";
            goto LABEL_35;
          case 10:
            uint64_t v17 = "LibraryView.Composers";
LABEL_30:
            unint64_t v14 = (unint64_t)v17 | 0x8000000000000000;
            unint64_t v13 = 0xD000000000000021;
            goto LABEL_31;
          case 11:
            unint64_t v15 = 0xD000000000000026;
            int v16 = "LibraryView.Shows";
            goto LABEL_35;
          case 12:
            unint64_t v15 = 0xD000000000000027;
            int v16 = "LibraryView.Downloaded";
LABEL_35:
            unint64_t v14 = (unint64_t)v16 | 0x8000000000000000;
            if (v9 == v15) {
              goto LABEL_36;
            }
            goto LABEL_37;
          default:
LABEL_31:
            if (v9 != v13) {
              goto LABEL_37;
            }
LABEL_36:
            if (v10 == v14)
            {
              swift_bridgeObjectRelease_n();
              char v18 = 1;
              return v18 & 1;
            }
LABEL_37:
            char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v18) {
              return v18 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v18 & 1;
            }
            break;
        }
      }
    }
  }
  char v18 = 0;
  return v18 & 1;
}

uint64_t sub_10092284C(int a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Hasher.init(_seed:)();
  SortOptions.ContentType.identifier.getter(a1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v4 = Hasher._finalize()();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v7 = ~v5;
  while (1)
  {
    unsigned int v8 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v6);
    unsigned int v9 = v8 >> 6;
    if (!(v8 >> 6))
    {
      if (a1 < 0x40u)
      {
        if (((v8 ^ a1) & 1) == 0) {
          return 1;
        }
        goto LABEL_5;
      }
      goto LABEL_18;
    }
    if (v9 != 1) {
      break;
    }
    if ((a1 & 0xC0) == 0x40)
    {
      if (((v8 ^ a1) & 0x3F) == 0) {
        return 1;
      }
      goto LABEL_5;
    }
LABEL_18:
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v10 = Hasher._finalize()();
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    if (v10 == Hasher._finalize()()) {
      return 1;
    }
LABEL_5:
    unint64_t v6 = (v6 + 1) & v7;
    if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      return 0;
    }
  }
  if (v9 != 3 || v8 != 192 || a1 != 192) {
    goto LABEL_18;
  }
  return 1;
}

void sub_100922E20()
{
  type metadata accessor for Collaboration.ArtworkCachingReference();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000027;
  *(void *)(v0 + 24) = 0x8000000100DC9030;
  uint64_t v1 = self;
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setCacheLimit:100 forCacheIdentifier:v2 cacheReference:v0];

  static Collaboration.artworkCaching = v0;
}

uint64_t *Collaboration.artworkCaching.unsafeMutableAddressor()
{
  if (qword_1010BBDA0 != -1) {
    swift_once();
  }
  return &static Collaboration.artworkCaching;
}

uint64_t static Collaboration.artworkCaching.getter()
{
  if (qword_1010BBDA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static Collaboration.artworkCaching.setter(uint64_t a1)
{
  if (qword_1010BBDA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static Collaboration.artworkCaching = a1;
  return swift_release();
}

uint64_t (*static Collaboration.artworkCaching.modify())()
{
  if (qword_1010BBDA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static Collaboration.Setup.imageName(active:)(char a1)
{
  if (a1) {
    return 0x322E6E6F73726570;
  }
  else {
    return 0xD000000000000016;
  }
}

unint64_t Collaboration.Error.errorDescription.getter(uint64_t a1, void *a2, char a3)
{
  switch(a3)
  {
    case 1:
      unint64_t v12 = 0;
      swift_errorRetain();
      _StringGuts.grow(_:)(17);
      v9._uint64_t countAndFlagsBits = 0x74694B636973754DLL;
      v9._object = (void *)0xEF3D726F72726520;
      String.append(_:)(v9);
      sub_100063814((uint64_t *)&unk_1010C0920);
      _print_unlocked<A, B>(_:_:)();
      uint64_t v6 = a1;
      uint64_t v7 = (uint64_t)a2;
      unsigned __int8 v8 = 1;
      goto LABEL_4;
    case 2:
      _StringGuts.grow(_:)(38);
      swift_bridgeObjectRelease();
      unint64_t v12 = 0xD000000000000024;
      v10._uint64_t countAndFlagsBits = a1;
      v10._object = a2;
      String.append(_:)(v10);
      return v12;
    case 3:
      unint64_t result = 0x636120726F6E694DLL;
      switch(a1)
      {
        case 1:
          unint64_t result = 0xD000000000000017;
          break;
        case 2:
          unint64_t result = 0xD000000000000024;
          break;
        case 3:
          unint64_t result = 0xD000000000000018;
          break;
        case 4:
          unint64_t result = 0xD000000000000018;
          break;
        case 5:
          unint64_t result = 0xD000000000000016;
          break;
        case 6:
          unint64_t result = 0xD000000000000019;
          break;
        case 7:
          unint64_t result = 0xD00000000000001DLL;
          break;
        case 8:
          unint64_t result = 0xD000000000000032;
          break;
        case 9:
          unint64_t result = 0x73736F7020746F4ELL;
          break;
        default:
          return result;
      }
      return result;
    default:
      unint64_t v12 = 0;
      swift_errorRetain();
      _StringGuts.grow(_:)(25);
      v5._object = (void *)0x8000000100DCC040;
      v5._uint64_t countAndFlagsBits = 0xD000000000000017;
      String.append(_:)(v5);
      sub_100063814((uint64_t *)&unk_1010C0920);
      _print_unlocked<A, B>(_:_:)();
      uint64_t v6 = a1;
      uint64_t v7 = (uint64_t)a2;
      unsigned __int8 v8 = 0;
LABEL_4:
      sub_1003D46C0(v6, v7, v8);
      return v12;
  }
}

uint64_t static Collaboration.Error.tapToRadarAlert()()
{
  uint64_t v0 = sub_100063814(&qword_1010C0040);
  uint64_t result = __chkstk_darwin(v0 - 8);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1010BC578 != -1) {
    uint64_t result = swift_once();
  }
  if (static DeviceCapabilities.isInternalInstall == 1)
  {
    unint64_t v4 = sub_100010358((uint64_t)_swiftEmptyArrayStorage);
    sub_10093ACC0(0x8000000100DCA310, (unint64_t)_swiftEmptyArrayStorage, v4, (void (*)(char *, char *, uint64_t))_swiftEmptyArrayStorage, 1, (uint64_t)v8);
    swift_bridgeObjectRelease();
    uint64_t v5 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = 0;
    *(void *)(v6 + 24) = 0;
    sub_10092C5F8((uint64_t)v8, v6 + 32);
    sub_100921B3C((uint64_t)v3, (uint64_t)&unk_1010C0940, v6, (uint64_t)&unk_100FF8278, (uint64_t *)&unk_1010C08B0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1009235C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 72) = a1;
  *(void *)(v4 + 80) = a4;
  return _swift_task_switch(sub_1009235E8, 0, 0);
}

uint64_t sub_1009235E8()
{
  sub_10092C5F8(*(void *)(v0 + 80), v0 + 16);
  if (*(void *)(v0 + 24) && (uint64_t v1 = *(int **)(v0 + 56)) != 0)
  {
    uint64_t v5 = (uint64_t (*)(void))((char *)v1 + *v1);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100923708;
    return v5();
  }
  else
  {
    **(unsigned char **)(v0 + 72) = 1;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_100923708()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100923804, 0, 0);
}

uint64_t sub_100923804()
{
  **(unsigned char **)(v0 + 72) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100923820()
{
  return Collaboration.Error.errorDescription.getter(*(void *)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t Collaboration.Manager.__allocating_init(coordinator:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_100068978(a1, v2 + 16);
  return v2;
}

uint64_t Collaboration.Manager.init(coordinator:)(long long *a1)
{
  sub_100068978(a1, v1 + 16);
  return v1;
}

uint64_t GroupActivitiesManager.coordinator.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_1000688E4(v1 + 16, a1);
}

id Collaboration.Manager.participantProfile.getter()
{
  id v0 = [self shared];
  id v1 = [v0 activeUserState];

  id v2 = [v1 music];
  id v3 = [v2 userProfile];

  return v3;
}

void Collaboration.Manager.supportsCollaboration(for:)()
{
}

void Collaboration.Manager.canCollaborate(for:)()
{
  if (qword_1010BBCC8 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  id v0 = v8;
  if ((v7 & 1) == 0)
  {
    sub_10092CB34();
    swift_allocError();
    uint64_t v2 = 3;
LABEL_10:
    *(void *)uint64_t v1 = v2;
    goto LABEL_11;
  }
  if (!v6)
  {
    sub_10092CB34();
    swift_allocError();
    uint64_t v2 = 6;
    goto LABEL_10;
  }
  id v3 = [self sharedCloudController];
  if (v3)
  {
    uint64_t v4 = v3;
    unsigned __int8 v5 = [v3 isInitialImport];

    if (v5)
    {
      sub_10092CB34();
      swift_allocError();
      *(void *)uint64_t v1 = 7;
      id v0 = v8;
LABEL_11:
      *(void *)(v1 + 8) = 0;
      *(unsigned char *)(v1 + 16) = 3;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t Collaboration.Manager.isCollaborationPossible(for:)()
{
  return 1;
}

uint64_t Logger.collaboration.unsafeMutableAddressor()
{
  if (qword_1010BBDA8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();

  return sub_100050A90(v0, (uint64_t)static Logger.collaboration);
}

uint64_t *Collaboration.Manager.DeepLinkType.actionKey.unsafeMutableAddressor()
{
  return &static Collaboration.Manager.DeepLinkType.actionKey;
}

uint64_t static Collaboration.Manager.DeepLinkType.actionKey.getter()
{
  return sub_100923E9C(&static Collaboration.Manager.DeepLinkType.actionKey);
}

uint64_t static Collaboration.Manager.DeepLinkType.actionKey.setter(uint64_t a1, uint64_t a2)
{
  return sub_100923F00(a1, a2, &static Collaboration.Manager.DeepLinkType.actionKey, &qword_1010C08F8);
}

uint64_t (*static Collaboration.Manager.DeepLinkType.actionKey.modify())()
{
  return j_j__swift_endAccess;
}

void *Collaboration.Manager.DeepLinkType.profileKey.unsafeMutableAddressor()
{
  return &static Collaboration.Manager.DeepLinkType.profileKey;
}

uint64_t static Collaboration.Manager.DeepLinkType.profileKey.getter()
{
  return sub_100923E9C((uint64_t *)&static Collaboration.Manager.DeepLinkType.profileKey);
}

uint64_t sub_100923E9C(uint64_t *a1)
{
  swift_beginAccess();
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static Collaboration.Manager.DeepLinkType.profileKey.setter(uint64_t a1, uint64_t a2)
{
  return sub_100923F00(a1, a2, static Collaboration.Manager.DeepLinkType.profileKey, &static Collaboration.Manager.DeepLinkType.profileKey[1]);
}

uint64_t sub_100923F00(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Collaboration.Manager.DeepLinkType.profileKey.modify())()
{
  return j_j__swift_endAccess;
}

MusicCore::Collaboration::Manager::DeepLinkType_optional __swiftcall Collaboration.Manager.DeepLinkType.init(_:)(Swift::OpaquePointer a1)
{
  swift_beginAccess();
  if (!*((void *)a1._rawValue + 2)) {
    goto LABEL_10;
  }
  uint64_t v2 = qword_1010C08F8;
  uint64_t v3 = static Collaboration.Manager.DeepLinkType.actionKey;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_100071D70(v3, v2);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    return (MusicCore::Collaboration::Manager::DeepLinkType_optional)2;
  }
  char v6 = (uint64_t *)(*((void *)a1._rawValue + 7) + 16 * v4);
  uint64_t v7 = *v6;
  unsigned __int8 v8 = (void *)v6[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = v7;
  v9._object = v8;
  Swift::Int v10 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100FEDBE8, v9);
  swift_bridgeObjectRelease();
  if (v10 == 1) {
    v11.value = MusicCore_Collaboration_Manager_DeepLinkType_pending;
  }
  else {
    v11.value = MusicCore_Collaboration_Manager_DeepLinkType_unknownDefault;
  }
  if (v10) {
    return v11;
  }
  else {
    return 0;
  }
}

MusicCore::Collaboration::Manager::DeepLinkType_optional __swiftcall Collaboration.Manager.DeepLinkType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100FEDBE8, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = MusicCore_Collaboration_Manager_DeepLinkType_pending;
  }
  else {
    v4.value = MusicCore_Collaboration_Manager_DeepLinkType_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t Collaboration.Manager.DeepLinkType.rawValue.getter(char a1)
{
  if (a1) {
    return 0x676E69646E6570;
  }
  else {
    return 1852403562;
  }
}

uint64_t sub_100924124(char *a1, char *a2)
{
  return sub_100864C4C(*a1, *a2);
}

Swift::Int sub_100924130()
{
  return Hasher._finalize()();
}

uint64_t sub_1009241AC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100924214()
{
  return Hasher._finalize()();
}

uint64_t sub_10092428C@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100FEDBE8, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_1009242EC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1852403562;
  if (*v1) {
    uint64_t v2 = 0x676E69646E6570;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t Collaboration.Manager.queryItemsDictionary(for:)()
{
  uint64_t v0 = sub_100063814(&qword_1010C0950);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URLComponents();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1000637B8((uint64_t)v2, &qword_1010C0950);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  uint64_t v7 = URLComponents.queryItemsDictionary.getter();
  if (v7)
  {
    Swift::Int v8 = sub_1000419E8((uint64_t)&off_100FEDC38);
    swift_arrayDestroy();
    swift_beginAccess();
    if (*(void *)(v7 + 16))
    {
      uint64_t v9 = qword_1010C08F8;
      uint64_t v10 = static Collaboration.Manager.DeepLinkType.actionKey;
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_100071D70(v10, v9);
      if (v12)
      {
        unint64_t v13 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v11);
        uint64_t v14 = *v13;
        uint64_t v15 = v13[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        char v16 = sub_10092211C(v14, v15, v8);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        swift_bridgeObjectRelease();
        if (v16) {
          return v7;
        }
        goto LABEL_11;
      }
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

uint64_t Collaboration.Manager.start(_:isOpen:)(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 200) = a3;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a2;
  sub_100063814(&qword_1010C0910);
  *(void *)(v3 + 40) = swift_task_alloc();
  sub_100063814(&qword_1010BCBE0);
  *(void *)(v3 + 48) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Playlist.Collaboration.InvitationMode();
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = *(void *)(v4 - 8);
  *(void *)(v3 + 72) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Playlist();
  *(void *)(v3 + 80) = v5;
  *(void *)(v3 + 88) = *(void *)(v5 - 8);
  *(void *)(v3 + 96) = swift_task_alloc();
  *(void *)(v3 + 104) = swift_task_alloc();
  uint64_t started = type metadata accessor for MusicCollaborativePlaylist.StartCollaborationRequest();
  *(void *)(v3 + 112) = started;
  *(void *)(v3 + 120) = *(void *)(started - 8);
  *(void *)(v3 + 128) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v3 + 136) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 144) = v8;
  *(void *)(v3 + 152) = v7;
  return _swift_task_switch(sub_1009247E4, v8, v7);
}

uint64_t sub_1009247E4()
{
  if (qword_1010BBDA8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 160) = sub_100050A90(v1, (uint64_t)static Logger.collaboration);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 200);
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67240192;
    *(_DWORD *)(v5 + 4) = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Start called - isOpenInvite=%{BOOL,public}d", (uint8_t *)v5, 8u);
    swift_slowDealloc();
  }
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v10 = *(void *)(v0 + 64);
  uint64_t v9 = *(void *)(v0 + 72);
  uint64_t v11 = *(void *)(v0 + 56);
  int v12 = *(unsigned __int8 *)(v0 + 200);
  uint64_t v13 = *(void *)(v0 + 32);

  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  *(void *)(v0 + 168) = v14;
  *(void *)(v0 + 176) = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v14(v6, v13, v7);
  uint64_t v15 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.open(_:);
  if (!v12) {
    uint64_t v15 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.requiresApproval(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v9, *v15, v11);
  MusicCollaborativePlaylist.StartCollaborationRequest.init(playlist:invitationMode:)();
  char v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v16;
  *char v16 = v0;
  v16[1] = sub_1009249F4;
  uint64_t v17 = *(void *)(v0 + 24);
  return MusicCollaborativePlaylist.StartCollaborationRequest.response()(v17);
}

uint64_t sub_1009249F4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v5 = sub_1009250FC;
  }
  else {
    uint64_t v5 = sub_100924B30;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100924B30()
{
  int v42 = v0;
  uint64_t v1 = v0[5];
  swift_release();
  Playlist.collaboration.getter();
  uint64_t v2 = type metadata accessor for Playlist.Collaboration();
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v6 = v0[5];
  uint64_t v5 = v0[6];
  if (v4 == 1)
  {
    sub_1000637B8(v0[5], &qword_1010C0910);
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
LABEL_4:
    uint64_t v9 = (void (*)(uint64_t, uint64_t, uint64_t))v0[21];
    uint64_t v10 = v0[12];
    uint64_t v11 = v0[10];
    uint64_t v12 = v0[3];
    sub_1000637B8(v0[6], &qword_1010BCBE0);
    v9(v10, v12, v11);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v17 = v0[11];
    uint64_t v16 = v0[12];
    uint64_t v18 = v0[10];
    if (v15)
    {
      uint64_t v19 = swift_slowAlloc();
      v41[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136446210;
      sub_10092E7C4(&qword_1010BE9A0, (void (*)(uint64_t))&type metadata accessor for Playlist);
      uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v19 + 4) = sub_100075E68(v20, v21, v41);
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v22(v16, v18);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "invitationURL missing for=%{public}s", (uint8_t *)v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v22(v0[12], v0[10]);
    }
    uint64_t v23 = v0[10];
    uint64_t v24 = v0[3];
    sub_10092CB34();
    uint64_t v25 = swift_allocError();
    *(_OWORD *)uint64_t v26 = xmmword_100E35750;
    *(unsigned char *)(v26 + 16) = 3;
    swift_willThrow();
    v22(v24, v23);
    swift_errorRetain();
    swift_errorRetain();
    char v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      v41[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136446210;
      v0[2] = v25;
      swift_errorRetain();
      sub_100063814((uint64_t *)&unk_1010C0920);
      uint64_t v30 = String.init<A>(describing:)();
      *(void *)(v29 + 4) = sub_100075E68(v30, v31, v41);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Start failed with error=%{public}s", (uint8_t *)v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v33 = v0[15];
    uint64_t v32 = v0[16];
    uint64_t v34 = v0[14];
    swift_allocError();
    *(void *)uint64_t v35 = v25;
    *(void *)(v35 + 8) = 0;
    *(unsigned char *)(v35 + 16) = 1;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v36 = (uint64_t (*)(void))v0[1];
    goto LABEL_12;
  }
  Playlist.Collaboration.invitationURL.getter();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  uint64_t v8 = type metadata accessor for URL();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8) == 1) {
    goto LABEL_4;
  }
  uint64_t v38 = v0[15];
  uint64_t v37 = v0[16];
  uint64_t v39 = v0[14];
  sub_1000637B8(v0[6], &qword_1010BCBE0);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v36 = (uint64_t (*)(void))v0[1];
LABEL_12:
  return v36();
}

uint64_t sub_1009250FC()
{
  os_log_type_t v14 = v0;
  swift_release();
  uint64_t v1 = v0[24];
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v1;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v5 = String.init<A>(describing:)();
    *(void *)(v4 + 4) = sub_100075E68(v5, v6, &v13);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Start failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v8 = v0[15];
  uint64_t v7 = v0[16];
  uint64_t v9 = v0[14];
  sub_10092CB34();
  swift_allocError();
  *(void *)uint64_t v10 = v1;
  *(void *)(v10 + 8) = 0;
  *(unsigned char *)(v10 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t Collaboration.Manager.validate(_:url:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = type metadata accessor for Playlist();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for MusicCollaborativePlaylist.JoinRequest();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v3[12] = v6;
  v3[13] = *(void *)(v6 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[16] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[17] = v8;
  v3[18] = v7;
  return _swift_task_switch(sub_100925504, v8, v7);
}

uint64_t sub_100925504()
{
  uint64_t v23 = v0;
  if (qword_1010BBDA8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[5];
  uint64_t v5 = type metadata accessor for Logger();
  v0[19] = sub_100050A90(v5, (uint64_t)static Logger.collaboration);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6(v1, v4, v2);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[15];
  uint64_t v11 = v0[12];
  uint64_t v12 = v0[13];
  if (v9)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    sub_10092E7C4((unint64_t *)&qword_1010C0968, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v13 + 4) = sub_100075E68(v14, v15, &v22);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Validate called with url=%{public}s", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v12 + 8))(v0[15], v0[12]);
  }

  uint64_t v16 = v0[14];
  uint64_t v17 = v0[12];
  uint64_t v18 = v0[5];
  (*(void (**)(void, void, void))(v0[7] + 16))(v0[8], v0[4], v0[6]);
  v6(v16, v18, v17);
  MusicCollaborativePlaylist.JoinRequest.init(playlist:invitationURL:)();
  uint64_t v19 = (void *)swift_task_alloc();
  v0[20] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1009257D0;
  uint64_t v20 = v0[3];
  return MusicCollaborativePlaylist.JoinRequest.validate()(v20);
}

uint64_t sub_1009257D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v5 = sub_1009259C4;
  }
  else {
    uint64_t v5 = sub_10092590C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10092590C()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1009259C4()
{
  unint64_t v15 = v0;
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[21];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    v0[2] = v6;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v8 = String.init<A>(describing:)();
    *(void *)(v7 + 4) = sub_100075E68(v8, v9, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Validate failed with error=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v10 = v0[21];
  sub_10092CB34();
  swift_allocError();
  *(void *)uint64_t v11 = v10;
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 1;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t Collaboration.Manager.join(_:url:)(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = type metadata accessor for Playlist();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MusicCollaborativePlaylist.JoinRequest();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[16] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[17] = v7;
  v2[18] = v6;
  return _swift_task_switch(sub_100925DC4, v7, v6);
}

uint64_t sub_100925DC4()
{
  uint64_t v23 = v0;
  if (qword_1010BBDA8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[4];
  uint64_t v5 = type metadata accessor for Logger();
  v0[19] = sub_100050A90(v5, (uint64_t)static Logger.collaboration);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6(v1, v4, v2);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[15];
  uint64_t v11 = v0[12];
  uint64_t v12 = v0[13];
  if (v9)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    sub_10092E7C4((unint64_t *)&qword_1010C0968, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v13 + 4) = sub_100075E68(v14, v15, &v22);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Join called with url=%{public}s", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v12 + 8))(v0[15], v0[12]);
  }

  uint64_t v16 = v0[14];
  uint64_t v17 = v0[12];
  uint64_t v18 = v0[4];
  (*(void (**)(void, void, void))(v0[6] + 16))(v0[8], v0[3], v0[5]);
  v6(v16, v18, v17);
  MusicCollaborativePlaylist.JoinRequest.init(playlist:invitationURL:)();
  uint64_t v19 = (void *)swift_task_alloc();
  v0[20] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_100926090;
  uint64_t v20 = v0[7];
  return MusicCollaborativePlaylist.JoinRequest.response()(v20);
}

uint64_t sub_100926090()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[17];
    uint64_t v4 = v2[18];
    uint64_t v5 = sub_100926288;
  }
  else
  {
    (*(void (**)(void, void))(v2[6] + 8))(v2[7], v2[5]);
    uint64_t v3 = v2[17];
    uint64_t v4 = v2[18];
    uint64_t v5 = sub_1009261BC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1009261BC()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100926288()
{
  unint64_t v15 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[21];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v3;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v5 = String.init<A>(describing:)();
    *(void *)(v4 + 4) = sub_100075E68(v5, v6, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Join failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[21];
  uint64_t v9 = v0[10];
  uint64_t v8 = v0[11];
  uint64_t v10 = v0[9];
  sub_10092CB34();
  swift_allocError();
  *(void *)uint64_t v11 = v7;
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t Collaboration.Manager.end(_:)(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = type metadata accessor for Playlist();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MusicCollaborativePlaylist.EndCollaborationRequest();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[11] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[12] = v6;
  v2[13] = v5;
  return _swift_task_switch(sub_100926618, v6, v5);
}

uint64_t sub_100926618()
{
  if (qword_1010BBDA8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[14] = sub_100050A90(v1, (uint64_t)static Logger.collaboration);
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "End called", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v8 = v0[4];
  uint64_t v7 = v0[5];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  MusicCollaborativePlaylist.EndCollaborationRequest.init(playlist:)();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[15] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1009267B0;
  uint64_t v10 = v0[3];
  return MusicCollaborativePlaylist.EndCollaborationRequest.response()(v10);
}

uint64_t sub_1009267B0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  uint64_t v4 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v5 = sub_1009268EC;
  }
  else {
    uint64_t v5 = sub_10092E8DC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1009268EC()
{
  unint64_t v15 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[16];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v3;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v5 = String.init<A>(describing:)();
    *(void *)(v4 + 4) = sub_100075E68(v5, v6, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "End failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[16];
  uint64_t v9 = v0[9];
  uint64_t v8 = v0[10];
  uint64_t v10 = v0[8];
  sub_10092CB34();
  swift_allocError();
  *(void *)uint64_t v11 = v7;
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t Collaboration.Manager.moderate(_:collaborator:in:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = a3;
  *(unsigned char *)(v3 + 193) = a1;
  uint64_t v4 = type metadata accessor for MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest();
  *(void *)(v3 + 40) = v4;
  *(void *)(v3 + 48) = *(void *)(v4 - 8);
  *(void *)(v3 + 56) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Playlist();
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 72) = *(void *)(v5 - 8);
  *(void *)(v3 + 80) = swift_task_alloc();
  *(void *)(v3 + 88) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Playlist.Collaborator();
  *(void *)(v3 + 96) = v6;
  *(void *)(v3 + 104) = *(void *)(v6 - 8);
  *(void *)(v3 + 112) = swift_task_alloc();
  *(void *)(v3 + 120) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v3 + 128) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 136) = v8;
  *(void *)(v3 + 144) = v7;
  return _swift_task_switch(sub_100926CD4, v8, v7);
}

uint64_t sub_100926CD4()
{
  uint64_t v39 = v0;
  if (qword_1010BBDA8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v9 = type metadata accessor for Logger();
  *(void *)(v0 + 152) = sub_100050A90(v9, (uint64_t)static Logger.collaboration);
  uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v37(v1, v8, v2);
  char v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v36(v4, v7, v5);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 120);
  uint64_t v15 = *(void *)(v0 + 96);
  uint64_t v14 = *(void *)(v0 + 104);
  uint64_t v16 = *(void *)(v0 + 88);
  uint64_t v17 = *(void *)(v0 + 64);
  uint64_t v18 = *(void *)(v0 + 72);
  if (v12)
  {
    os_log_type_t type = v11;
    char v19 = *(unsigned char *)(v0 + 193) & 1;
    uint64_t v34 = *(void *)(v0 + 88);
    uint64_t v20 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136446722;
    *(unsigned char *)(v0 + 192) = v19;
    uint64_t v21 = String.init<A>(describing:)();
    *(void *)(v20 + 4) = sub_100075E68(v21, v22, &v38);
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    sub_10092E7C4(&qword_1010C0988, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
    uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v20 + 14) = sub_100075E68(v23, v24, &v38);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    *(_WORD *)(v20 + 22) = 2082;
    sub_10092E7C4(&qword_1010BE9A0, (void (*)(uint64_t))&type metadata accessor for Playlist);
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v20 + 24) = sub_100075E68(v25, v26, &v38);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v34, v17);
    _os_log_impl((void *)&_mh_execute_header, v10, type, "    Moderate called for:\n        - type=%{public}s\n        - collaborator=%{public}s\n        - playlist=%{public}s", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v14 + 8))(*(void *)(v0 + 120), *(void *)(v0 + 96));
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }

  uint64_t v27 = *(void *)(v0 + 80);
  uint64_t v28 = *(void *)(v0 + 64);
  uint64_t v29 = *(void *)(v0 + 32);
  char v30 = *(unsigned char *)(v0 + 193);
  v37(*(void *)(v0 + 112), *(void *)(v0 + 24), *(void *)(v0 + 96));
  v36(v27, v29, v28);
  MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.init(collaborator:playlist:)();
  if (v30)
  {
    uint64_t v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_100927340;
    return MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.reject()();
  }
  else
  {
    unint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v31;
    *unint64_t v31 = v0;
    v31[1] = sub_100927138;
    return MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.approve()();
  }
}

uint64_t sub_100927138()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v5 = sub_10092747C;
  }
  else {
    uint64_t v5 = sub_100927274;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100927274()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100927340()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v5 = sub_1009276B4;
  }
  else {
    uint64_t v5 = sub_10092E8D4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10092747C()
{
  uint64_t v14 = v0;
  uint64_t v1 = v0[21];
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v1;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v5 = String.init<A>(describing:)();
    *(void *)(v4 + 4) = sub_100075E68(v5, v6, &v13);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Moderate failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[6];
  uint64_t v8 = v0[7];
  uint64_t v9 = v0[5];
  sub_10092CB34();
  swift_allocError();
  *(void *)uint64_t v10 = v1;
  *(void *)(v10 + 8) = 0;
  *(unsigned char *)(v10 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1009276B4()
{
  uint64_t v14 = v0;
  uint64_t v1 = v0[23];
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v1;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v5 = String.init<A>(describing:)();
    *(void *)(v4 + 4) = sub_100075E68(v5, v6, &v13);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Moderate failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[6];
  uint64_t v8 = v0[7];
  uint64_t v9 = v0[5];
  sub_10092CB34();
  swift_allocError();
  *(void *)uint64_t v10 = v1;
  *(void *)(v10 + 8) = 0;
  *(unsigned char *)(v10 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t Collaboration.Manager.remove(collaborator:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = type metadata accessor for MusicCollaborativePlaylist.RemoveCollaboratorRequest();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Playlist();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Playlist.Collaborator();
  v3[13] = v6;
  v3[14] = *(void *)(v6 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[17] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[18] = v8;
  v3[19] = v7;
  return _swift_task_switch(sub_100927ABC, v8, v7);
}

uint64_t sub_100927ABC()
{
  uint64_t v34 = v0;
  if (qword_1010BBDA8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  uint64_t v8 = v0[4];
  uint64_t v7 = v0[5];
  uint64_t v9 = type metadata accessor for Logger();
  v0[20] = sub_100050A90(v9, (uint64_t)static Logger.collaboration);
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v32(v1, v8, v2);
  unint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v31(v4, v7, v5);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = v0[16];
  uint64_t v15 = v0[13];
  uint64_t v14 = v0[14];
  uint64_t v16 = v0[12];
  uint64_t v17 = v0[9];
  uint64_t v18 = v0[10];
  if (v12)
  {
    os_log_type_t type = v11;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136446466;
    sub_10092E7C4(&qword_1010C0988, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v19 + 4) = sub_100075E68(v20, v21, &v33);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    *(_WORD *)(v19 + 12) = 2082;
    sub_10092E7C4(&qword_1010BE9A0, (void (*)(uint64_t))&type metadata accessor for Playlist);
    uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v19 + 14) = sub_100075E68(v22, v23, &v33);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    _os_log_impl((void *)&_mh_execute_header, v10, type, "    Remove called for:\n        - collaborator=%{public}s\n        - playlist=%{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v14 + 8))(v0[16], v0[13]);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }

  uint64_t v24 = v0[11];
  uint64_t v25 = v0[9];
  uint64_t v26 = v0[5];
  v32(v0[15], v0[4], v0[13]);
  v31(v24, v26, v25);
  MusicCollaborativePlaylist.RemoveCollaboratorRequest.init(collaborator:playlist:)();
  uint64_t v27 = (void *)swift_task_alloc();
  v0[21] = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_100927E68;
  uint64_t v28 = v0[3];
  return MusicCollaborativePlaylist.RemoveCollaboratorRequest.response()(v28);
}

uint64_t sub_100927E68()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v5 = sub_100928070;
  }
  else {
    uint64_t v5 = sub_100927FA4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100927FA4()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100928070()
{
  uint64_t v15 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[22];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v3;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v5 = String.init<A>(describing:)();
    *(void *)(v4 + 4) = sub_100075E68(v5, v6, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Remove failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[22];
  uint64_t v9 = v0[7];
  uint64_t v8 = v0[8];
  uint64_t v10 = v0[6];
  sub_10092CB34();
  swift_allocError();
  *(void *)uint64_t v11 = v7;
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t Collaboration.Manager.resetInvitationURL(_:)(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = type metadata accessor for Playlist();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MusicCollaborativePlaylist.ResetInvitationLinkRequest();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[11] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[12] = v6;
  v2[13] = v5;
  return _swift_task_switch(sub_100928400, v6, v5);
}

uint64_t sub_100928400()
{
  if (qword_1010BBDA8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[14] = sub_100050A90(v1, (uint64_t)static Logger.collaboration);
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Reset URL called", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v8 = v0[4];
  uint64_t v7 = v0[5];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  MusicCollaborativePlaylist.ResetInvitationLinkRequest.init(playlist:)();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[15] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100928598;
  uint64_t v10 = v0[3];
  return MusicCollaborativePlaylist.ResetInvitationLinkRequest.response()(v10);
}

uint64_t sub_100928598()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  uint64_t v4 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v5 = sub_100928770;
  }
  else {
    uint64_t v5 = sub_1009286D4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1009286D4()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100928770()
{
  uint64_t v15 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[16];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v3;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v5 = String.init<A>(describing:)();
    *(void *)(v4 + 4) = sub_100075E68(v5, v6, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Reset failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[16];
  uint64_t v9 = v0[9];
  uint64_t v8 = v0[10];
  uint64_t v10 = v0[8];
  sub_10092CB34();
  swift_allocError();
  *(void *)uint64_t v11 = v7;
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t Collaboration.Manager.updateShareOption(_:for:)(char a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a2;
  *(unsigned char *)(v2 + 168) = a1;
  uint64_t v3 = type metadata accessor for Playlist.Collaboration.InvitationMode();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = *(void *)(v3 - 8);
  *(void *)(v2 + 48) = swift_task_alloc();
  uint64_t updated = type metadata accessor for MusicCollaborativePlaylist.UpdateInvitationModeRequest();
  *(void *)(v2 + 56) = updated;
  *(void *)(v2 + 64) = *(void *)(updated - 8);
  *(void *)(v2 + 72) = swift_task_alloc();
  sub_100063814(&qword_1010C0910);
  *(void *)(v2 + 80) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Playlist.Collaboration();
  *(void *)(v2 + 88) = v5;
  *(void *)(v2 + 96) = *(void *)(v5 - 8);
  *(void *)(v2 + 104) = swift_task_alloc();
  *(void *)(v2 + 112) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v2 + 120) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 128) = v7;
  *(void *)(v2 + 136) = v6;
  return _swift_task_switch(sub_100928B78, v7, v6);
}

uint64_t sub_100928B78()
{
  if (qword_1010BBDA8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 144) = sub_100050A90(v1, (uint64_t)static Logger.collaboration);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 168);
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67240192;
    *(_DWORD *)(v5 + 4) = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "updateShareOption called with isOpen=%{BOOL,public}d", (uint8_t *)v5, 8u);
    swift_slowDealloc();
  }
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 80);

  Playlist.collaboration.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
  {
    uint64_t v9 = *(void *)(v0 + 80);
    swift_release();
    sub_1000637B8(v9, &qword_1010C0910);
    sub_10092CB34();
    swift_allocError();
    *(_OWORD *)uint64_t v10 = xmmword_100E42B60;
    *(unsigned char *)(v10 + 16) = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 112);
    uint64_t v15 = *(void *)(v0 + 88);
    uint64_t v16 = *(void *)(v0 + 96);
    uint64_t v18 = *(void *)(v0 + 40);
    uint64_t v17 = *(void *)(v0 + 48);
    uint64_t v19 = *(void *)(v0 + 32);
    int v20 = *(unsigned __int8 *)(v0 + 168);
    (*(void (**)(uint64_t, void, uint64_t))(v16 + 32))(v14, *(void *)(v0 + 80), v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v13, v14, v15);
    unint64_t v21 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.open(_:);
    if (!v20) {
      unint64_t v21 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.requiresApproval(_:);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *v21, v19);
    MusicCollaborativePlaylist.UpdateInvitationModeRequest.init(collaboration:updatedInvitationMode:)();
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_100928E88;
    return MusicCollaborativePlaylist.UpdateInvitationModeRequest.response()();
  }
}

uint64_t sub_100928E88()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v5 = sub_1009290B0;
  }
  else {
    uint64_t v5 = sub_100928FC4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100928FC4()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[11];
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[7];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1009290B0()
{
  uint64_t v18 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[20];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v3;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v5 = String.init<A>(describing:)();
    *(void *)(v4 + 4) = sub_100075E68(v5, v6, &v17);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "updateShareOption failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[20];
  uint64_t v8 = v0[14];
  uint64_t v9 = v0[11];
  uint64_t v10 = v0[12];
  uint64_t v12 = v0[8];
  uint64_t v11 = v0[9];
  uint64_t v13 = v0[7];
  sub_10092CB34();
  swift_allocError();
  *(void *)uint64_t v14 = v7;
  *(void *)(v14 + 8) = 0;
  *(unsigned char *)(v14 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t Collaboration.Manager.handleError(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1010BBDA8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100050A90(v4, (uint64_t)static Logger.collaboration);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138543362;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v7 + 4) = v9;
    *uint64_t v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Calling coordinator to handle error=%{public}@", (uint8_t *)v7, 0xCu);
    sub_100063814(&qword_1010C3F50);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_beginAccess();
  sub_1000688E4(v2 + 16, (uint64_t)v13);
  uint64_t v10 = v14;
  uint64_t v11 = v15;
  sub_100068990(v13, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, v10, v11);
  return sub_1000760E4((uint64_t)v13);
}

uint64_t Collaboration.Manager.activityViewController(for:url:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100063814(&qword_1010BCBE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v9 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    URL._bridgeToObjectiveC()(v8);
    uint64_t v9 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  id v11 = [objc_allocWithZone((Class)NSItemProvider) initWithContentsOfURL:v9];

  if (v11)
  {
    id v12 = [objc_allocWithZone((Class)LPLinkMetadata) init];
    URL._bridgeToObjectiveC()(v13);
    uint64_t v15 = v14;
    [v12 setURL:v14];

    id v16 = [objc_allocWithZone((Class)LPiTunesMediaPlaylistMetadata) init];
    Playlist.name.getter();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v16 setName:v17];

    Playlist.curatorName.getter();
    if (v18)
    {
      NSString v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v19 = 0;
    }
    [v16 setCurator:v19];

    Playlist.catalogID.getter();
    if (v20)
    {
      NSString v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v21 = 0;
    }
    [v16 setStoreIdentifier:v21];

    sub_100929994();
    uint64_t v23 = v22;
    [v16 setArtwork:v22];

    [v12 setSpecialization:v16];
    sub_100063814(&qword_1010C09B0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_100E251C0;
    *(void *)(v24 + 32) = v11;
    aBlock[0] = v24;
    specialized Array._endMutation()();
    id v25 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
    sub_100057778(0, &qword_1010C09B8);
    id v26 = v11;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v28 = [v25 initWithItemProviders:isa];

    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v12;
    aBlock[4] = sub_10092CBC0;
    aBlock[5] = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100929DC0;
    uint64_t aBlock[3] = &unk_100FF7F38;
    char v30 = _Block_copy(aBlock);
    id v31 = v12;
    swift_release();
    [v28 setPerItemMetadataProvider:v30];
    _Block_release(v30);
    id v32 = [objc_allocWithZone((Class)UIActivityViewController) initWithActivityItemsConfiguration:v28];
    [v32 setAllowsProminentActivity:0];

    return (uint64_t)v32;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

void sub_100929994()
{
  uint64_t v0 = type metadata accessor for Playlist();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  __chkstk_darwin(v0);
  uint64_t v3 = type metadata accessor for UTType();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [objc_allocWithZone((Class)NSItemProvider) init];
  static UTType.png.getter();
  UTType.identifier.getter();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v1 + 16))((char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v15[1], v0);
  unint64_t v9 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v10 + v9, (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v0);
  aBlock[4] = sub_10092E4DC;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10092C27C;
  uint64_t aBlock[3] = &unk_100FF81F0;
  id v11 = _Block_copy(aBlock);
  swift_release();
  [v7 registerItemForTypeIdentifier:v8 loadHandler:v11];
  _Block_release(v11);

  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [self _systemImageNamed:v12];

  if (v13)
  {
    id v14 = [objc_allocWithZone((Class)LPImage) initWithPlatformImage:v13];

    [objc_allocWithZone((Class)LPImage) initWithItemProvider:v7 properties:0 placeholderImage:v14];
  }
  else
  {
    __break(1u);
  }
}

id sub_100929CCC@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return result;
    }
  }
  *(void *)(a2 + 24) = sub_100057778(0, &qword_1010C0C70);
  *(void *)a2 = a1;

  return a1;
}

id sub_100929DC0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(void *__return_ptr, uint64_t, id);
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void v15[3];
  uint64_t v16;
  uint64_t vars8;

  uint64_t v5 = *(void (**)(void *__return_ptr, uint64_t, id))(a1 + 32);
  swift_retain();
  uint64_t v6 = a3;
  v5(v15, a2, v6);
  swift_release();

  id v7 = v16;
  if (v16)
  {
    char v8 = sub_100068990(v15, v16);
    unint64_t v9 = *(void *)(v7 - 8);
    uint64_t v10 = __chkstk_darwin(v8);
    NSString v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v9 + 16))(v12, v10);
    id v13 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
    sub_1000760E4((uint64_t)v15);
  }
  else
  {
    id v13 = 0;
  }

  return v13;
}

uint64_t Collaboration.Manager.deinit()
{
  sub_1000760E4(v0 + 16);
  return v0;
}

uint64_t Collaboration.Manager.__deallocating_deinit()
{
  sub_1000760E4(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t Collaboration.ArtworkCachingReference.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Collaboration.ArtworkCachingReference.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100929FD8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100014CA4(v0, static Logger.collaboration);
  sub_100050A90(v0, (uint64_t)static Logger.collaboration);
  sub_100057778(0, (unint64_t *)&qword_1010BFBC0);
  OS_os_log.init(subsystem:category:)();
  return Logger.init(_:)();
}

uint64_t static Logger.collaboration.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1010BBDA8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = sub_100050A90(v2, (uint64_t)static Logger.collaboration);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

BOOL MPModelPlaylist.hasJoinedCollaboration.getter()
{
  return (char *)[v0 collaboratorStatus] - 3 < (char *)2;
}

uint64_t Playlist.Collaboration.isOpenInvitation.getter()
{
  uint64_t v0 = type metadata accessor for Playlist.Collaboration.InvitationMode();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v25 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100063814(&qword_1010C09C0);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010C09C8);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  NSString v12 = (char *)&v24 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v24 - v14;
  Playlist.Collaboration.invitationMode.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v12, enum case for Playlist.Collaboration.InvitationMode.open(_:), v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v12, 0, 1, v0);
  uint64_t v16 = (uint64_t)&v6[*(int *)(v4 + 56)];
  sub_10006CAB8((uint64_t)v15, (uint64_t)v6, &qword_1010C09C8);
  sub_10006CAB8((uint64_t)v12, v16, &qword_1010C09C8);
  NSString v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v17((uint64_t)v6, 1, v0) == 1)
  {
    sub_1000637B8((uint64_t)v12, &qword_1010C09C8);
    sub_1000637B8((uint64_t)v15, &qword_1010C09C8);
    int v18 = v17(v16, 1, v0);
    if (v18 == 1) {
      NSString v19 = &qword_1010C09C8;
    }
    else {
      NSString v19 = &qword_1010C09C0;
    }
    if (v18 == 1) {
      char v20 = -1;
    }
    else {
      char v20 = 0;
    }
  }
  else
  {
    sub_10006CAB8((uint64_t)v6, (uint64_t)v9, &qword_1010C09C8);
    if (v17(v16, 1, v0) == 1)
    {
      sub_1000637B8((uint64_t)v12, &qword_1010C09C8);
      sub_1000637B8((uint64_t)v15, &qword_1010C09C8);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
      char v20 = 0;
      NSString v19 = &qword_1010C09C0;
    }
    else
    {
      NSString v21 = v25;
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v25, v16, v0);
      sub_10092E7C4(&qword_1010C09D0, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaboration.InvitationMode);
      char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *(void (**)(char *, uint64_t))(v1 + 8);
      v22(v21, v0);
      NSString v19 = &qword_1010C09C8;
      sub_1000637B8((uint64_t)v12, &qword_1010C09C8);
      sub_1000637B8((uint64_t)v15, &qword_1010C09C8);
      v22(v9, v0);
    }
  }
  sub_1000637B8((uint64_t)v6, v19);
  return v20 & 1;
}

uint64_t Playlist.Collaborator.isHost.getter()
{
  uint64_t v0 = type metadata accessor for Playlist.Collaborator.Role();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  NSString v21 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100063814(&qword_1010C09D8) - 8;
  __chkstk_darwin();
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010C09E0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v9 = (char *)&v20 - v8;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v20 - v10;
  Playlist.Collaborator.role.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v9, enum case for Playlist.Collaborator.Role.host(_:), v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v9, 0, 1, v0);
  uint64_t v12 = (uint64_t)&v5[*(int *)(v3 + 56)];
  sub_10006CAB8((uint64_t)v11, (uint64_t)v5, &qword_1010C09E0);
  sub_10006CAB8((uint64_t)v9, v12, &qword_1010C09E0);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v13((uint64_t)v5, 1, v0) == 1)
  {
    sub_1000637B8((uint64_t)v9, &qword_1010C09E0);
    sub_1000637B8((uint64_t)v11, &qword_1010C09E0);
    int v14 = v13(v12, 1, v0);
    if (v14 == 1) {
      uint64_t v15 = &qword_1010C09E0;
    }
    else {
      uint64_t v15 = &qword_1010C09D8;
    }
    if (v14 == 1) {
      char v16 = -1;
    }
    else {
      char v16 = 0;
    }
  }
  else
  {
    sub_10006CAB8((uint64_t)v5, (uint64_t)v7, &qword_1010C09E0);
    if (v13(v12, 1, v0) == 1)
    {
      sub_1000637B8((uint64_t)v9, &qword_1010C09E0);
      sub_1000637B8((uint64_t)v11, &qword_1010C09E0);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
      char v16 = 0;
      uint64_t v15 = &qword_1010C09D8;
    }
    else
    {
      NSString v17 = v21;
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v21, v12, v0);
      sub_10092E7C4(&qword_1010C09E8, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator.Role);
      char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
      int v18 = *(void (**)(char *, uint64_t))(v1 + 8);
      v18(v17, v0);
      uint64_t v15 = &qword_1010C09E0;
      sub_1000637B8((uint64_t)v9, &qword_1010C09E0);
      sub_1000637B8((uint64_t)v11, &qword_1010C09E0);
      v18(v7, v0);
    }
  }
  sub_1000637B8((uint64_t)v5, v15);
  return v16 & 1;
}

uint64_t Playlist.hasJoinedCollaboration.getter()
{
  uint64_t v0 = sub_100063814(&qword_1010C0910);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100063814(&qword_1010C0918);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - v7;
  Playlist.collaboration.getter();
  uint64_t v9 = type metadata accessor for Playlist.Collaboration();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v2, 1, v9) == 1)
  {
    sub_1000637B8((uint64_t)v2, &qword_1010C0910);
    uint64_t v11 = type metadata accessor for Playlist.Collaborator.Status();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
LABEL_10:
    uint64_t v16 = 0;
    goto LABEL_11;
  }
  Playlist.Collaboration.collaboratorStatus.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v2, v9);
  uint64_t v12 = type metadata accessor for Playlist.Collaborator.Status();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1) {
    goto LABEL_10;
  }
  sub_10006CAB8((uint64_t)v8, (uint64_t)v6, &qword_1010C0918);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v6, v12);
  if (v14 != enum case for Playlist.Collaborator.Status.host(_:)
    && v14 != enum case for Playlist.Collaborator.Status.joined(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v12);
    goto LABEL_10;
  }
  uint64_t v16 = 1;
LABEL_11:
  sub_1000637B8((uint64_t)v8, &qword_1010C0918);
  return v16;
}

uint64_t Playlist.hasUnsupportedContent.getter()
{
  v1[7] = v0;
  uint64_t v2 = type metadata accessor for Playlist.Entry();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = sub_100063814(&qword_1010C09F8);
  v1[13] = swift_task_alloc();
  sub_100063814((uint64_t *)&unk_1010C0A00);
  v1[14] = swift_task_alloc();
  uint64_t v3 = sub_100063814(&qword_1010BD4B0);
  v1[15] = v3;
  v1[16] = *(void *)(v3 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  uint64_t v4 = sub_100063814((uint64_t *)&unk_1010C0A10);
  v1[19] = v4;
  v1[20] = *(void *)(v4 - 8);
  v1[21] = swift_task_alloc();
  sub_100063814(&qword_1010BD118);
  v1[22] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010C0A20);
  v1[23] = v5;
  v1[24] = *(void *)(v5 - 8);
  v1[25] = swift_task_alloc();
  return _swift_task_switch(sub_10092AE38, 0, 0);
}

uint64_t sub_10092AE38()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[7];
  MusicLibraryRequest.init()();
  swift_getKeyPath();
  uint64_t v3 = type metadata accessor for Playlist();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  sub_10092E7C4(&qword_1010C0A28, (void (*)(uint64_t))&type metadata accessor for Playlist);
  MusicLibraryRequest<>.filter<A>(matching:equalTo:)();
  swift_release();
  sub_1000637B8(v1, &qword_1010BD118);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10092AFFC;
  uint64_t v6 = v0[23];
  uint64_t v7 = v0[21];
  return MusicLibraryRequest.response()(v7, v6);
}

uint64_t sub_10092AFFC()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10092B538;
  }
  else {
    uint64_t v2 = sub_10092B110;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10092B110()
{
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[13];
  MusicLibraryResponse.items.getter();
  id v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v47(v2, v1, v4);
  sub_10092CC10((unint64_t *)&unk_1010C0A30);
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v7 = (uint64_t *)(v6 + *(int *)(v5 + 36));
  uint64_t v8 = *v7;
  uint64_t v9 = sub_10092CC10((unint64_t *)&qword_1010BD4B8);
  dispatch thunk of Collection.endIndex.getter();
  if (v8 == v0[6])
  {
LABEL_6:
    uint64_t v24 = v0[16];
    uint64_t v25 = v0[14];
    uint64_t v26 = v0[8];
    uint64_t v27 = v0[9];
    sub_1000637B8(v0[13], &qword_1010C09F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v25, 1, 1, v26);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  }
  else
  {
    uint64_t v10 = v0[9];
    uint64_t v45 = (void (**)(uint64_t))(v10 + 16);
    uint64_t v46 = (void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
    uint64_t v43 = (void (**)(void, void))(v10 + 8);
    char v44 = (void (**)(uint64_t, uint64_t))(v0[16] + 8);
    while (1)
    {
      uint64_t v11 = v0[17];
      uint64_t v12 = v0[15];
      uint64_t v13 = v0[13];
      uint64_t v14 = v9;
      uint64_t v15 = v0[11];
      uint64_t v48 = v0[10];
      uint64_t v16 = v0[8];
      NSString v17 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
      (*v45)(v15);
      v17(v0 + 2, 0);
      v47(v11, v13, v12);
      dispatch thunk of Collection.formIndex(after:)();
      uint64_t v18 = *v44;
      (*v44)(v11, v12);
      NSString v19 = *v46;
      (*v46)(v48, v15, v16);
      Playlist.Entry.catalogID.getter();
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      if (!v21) {
        break;
      }
      (*v43)(v0[10], v0[8]);
      uint64_t v22 = *v7;
      dispatch thunk of Collection.endIndex.getter();
      BOOL v23 = v22 == v0[6];
      uint64_t v9 = v14;
      if (v23) {
        goto LABEL_6;
      }
    }
    uint64_t v28 = v0[14];
    uint64_t v30 = v0[9];
    uint64_t v29 = v0[10];
    uint64_t v31 = v0[8];
    sub_1000637B8(v0[13], &qword_1010C09F8);
    v19(v28, v29, v31);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v28, 0, 1, v31);
  }
  uint64_t v32 = v0[24];
  uint64_t v49 = v0[25];
  uint64_t v33 = v0[23];
  uint64_t v35 = v0[20];
  uint64_t v34 = v0[21];
  uint64_t v36 = v0[19];
  uint64_t v37 = v0[14];
  uint64_t v39 = v0[8];
  uint64_t v38 = v0[9];
  v18(v0[18], v0[15]);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v49, v33);
  BOOL v40 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v37, 1, v39) != 1;
  sub_1000637B8(v37, (uint64_t *)&unk_1010C0A00);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = (uint64_t (*)(BOOL))v0[1];
  return v41(v40);
}

uint64_t sub_10092B538()
{
  (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1(0);
}

uint64_t Playlist.duplicate()()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for MusicLibraryPlaylistResponse();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for MusicLibraryPlaylistRequest();
  void v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_10092B744, 0, 0);
}

uint64_t sub_10092B744()
{
  static MusicLibraryPlaylistRequest.duplicatingPlaylist(_:)();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10092B7EC;
  uint64_t v2 = *(void *)(v0 + 40);
  return MusicLibraryPlaylistRequest.response()(v2);
}

uint64_t sub_10092B7EC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10092B9A0;
  }
  else
  {
    (*(void (**)(void, void))(v2[4] + 8))(v2[5], v2[3]);
    uint64_t v3 = sub_10092B918;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10092B918()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10092B9A0()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_10092BA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for Playlist();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = sub_100063814(&qword_1010C0040);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v8);
    unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = 0;
    *(void *)(v16 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    NSString v17 = (void *)(v16 + ((v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
    *NSString v17 = a1;
    v17[1] = a2;
    swift_retain();
    sub_100066898((uint64_t)v13, (uint64_t)&unk_1010C0CE0, v16);
    swift_release();
  }
}

uint64_t sub_10092BC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  sub_100063814(&qword_1010C0CE8);
  v6[5] = swift_task_alloc();
  sub_100063814((uint64_t *)&unk_1010C0CF0);
  v6[6] = swift_task_alloc();
  sub_100063814(&qword_1010BEF28);
  v6[7] = swift_task_alloc();
  return _swift_task_switch(sub_10092BD3C, 0, 0);
}

uint64_t sub_10092BD3C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  Playlist.artwork.getter();
  uint64_t v2 = type metadata accessor for Artwork();
  *(void *)(v0 + 64) = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)(v0 + 72) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1000637B8(*(void *)(v0 + 56), &qword_1010BEF28);
    (*(void (**)(void, void))(v0 + 24))(0, 0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = type metadata accessor for Artwork.CropStyle();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
    uint64_t v9 = type metadata accessor for Artwork.ImageFormat();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_10092BF58;
    uint64_t v11 = *(void *)(v0 + 48);
    uint64_t v12 = *(void *)(v0 + 40);
    v13.n128_u64[0] = 0x4072C00000000000;
    v14.n128_u64[0] = 1.0;
    v15.n128_u64[0] = 0x4072C00000000000;
    return Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)(v11, v12, 0, 0, v13, v15, v14);
  }
}

uint64_t sub_10092BF58(uint64_t a1)
{
  uint64_t v3 = *v2;
  (*v2)[11] = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v3 + 5;
    uint64_t v4 = v3[5];
    uint64_t v5 = v6[1];
    swift_errorRelease();
    sub_1000637B8(v4, &qword_1010C0CE8);
    sub_1000637B8(v5, (uint64_t *)&unk_1010C0CF0);
    uint64_t v7 = sub_10092C1DC;
  }
  else
  {
    uint64_t v8 = v3[8];
    uint64_t v9 = v3[9];
    uint64_t v11 = v3[6];
    uint64_t v10 = v3[7];
    sub_1000637B8(v3[5], &qword_1010C0CE8);
    sub_1000637B8(v11, (uint64_t *)&unk_1010C0CF0);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
    uint64_t v7 = sub_10092C0E8;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_10092C0E8()
{
  uint64_t v1 = UIImagePNGRepresentation((UIImage *)*(id *)(v0 + 88));
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    v6.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_10007A5C4(v3, v5);
  }
  else
  {
    v6.super.Class isa = 0;
  }
  uint64_t v7 = *(void **)(v0 + 88);
  (*(void (**)(Class, void))(v0 + 24))(v6.super.isa, 0);

  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10092C1DC()
{
  (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 64));
  (*(void (**)(void, void))(v0 + 24))(0, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10092C27C(uint64_t a1, void *aBlock, uint64_t ObjCClassMetadata, uint64_t a4)
{
  NSData v6 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v7 = _Block_copy(aBlock);
  if (v7)
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    uint64_t v7 = sub_1003C2298;
    if (!ObjCClassMetadata) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v8 = 0;
  if (ObjCClassMetadata) {
LABEL_3:
  }
    ObjCClassMetadata = swift_getObjCClassMetadata();
LABEL_4:
  if (a4) {
    a4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  v6(v7, v8, ObjCClassMetadata, a4);
  swift_bridgeObjectRelease();
  sub_10006ADFC((uint64_t)v7);

  return swift_release();
}

uint64_t _s9MusicCore13CollaborationO5SetupO5title6activeSSSb_tFZ_0()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_10092C59C()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 72)) {
      swift_release();
    }
  }

  return swift_deallocObject();
}

uint64_t sub_10092C5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010C0938);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10092C660(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100081D08;
  v4[9] = a1;
  v4[10] = v1 + 32;
  return _swift_task_switch(sub_1009235E8, 0, 0);
}

void sub_10092C710()
{
  uint64_t v0 = type metadata accessor for Playlist.EditableComponents();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814((uint64_t *)&unk_1010C0D10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010BBCC8 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  int v7 = v23;
  uint64_t v8 = v25;
  uint64_t v21 = v26;
  uint64_t v22 = v27;
  uint64_t v9 = v29;
  uint64_t v32 = v28;
  uint64_t v20 = v30;
  uint64_t v18 = v24;
  uint64_t v19 = v31;
  if ((Playlist.hasActiveCollaboration.getter() & 1) == 0)
  {
    if (!v7)
    {
      sub_10092CB34();
      swift_allocError();
      long long v14 = xmmword_100E26B60;
      goto LABEL_15;
    }
    Playlist.editableComponents.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
    {
      sub_1000637B8((uint64_t)v6, (uint64_t *)&unk_1010C0D10);
    }
    else
    {
      static Playlist.EditableComponents.tracklist.getter();
      sub_10092E7C4((unint64_t *)&qword_1010BD5D8, (void (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents);
      char v15 = dispatch thunk of SetAlgebra.isSuperset(of:)();
      uint64_t v16 = *(void (**)(char *, uint64_t))(v1 + 8);
      v16(v3, v0);
      v16(v6, v0);
      if (v15) {
        goto LABEL_4;
      }
    }
    sub_10092CB34();
    swift_allocError();
    long long v14 = xmmword_100E42B70;
    goto LABEL_15;
  }
LABEL_4:
  if ((sub_100921CEC(3u, v8) & 1) == 0)
  {
    sub_10092CB34();
    swift_allocError();
    long long v14 = xmmword_100E42B80;
LABEL_15:
    *uint64_t v13 = v14;
    uint64_t v12 = v13 + 1;
    goto LABEL_16;
  }
  if (!v9 || ([v9 isMinorAccountHolder] & 1) != 0)
  {
    sub_10092CB34();
    swift_allocError();
    uint64_t v11 = (void *)v10;
    uint64_t v12 = (unsigned char *)(v10 + 16);
    *uint64_t v11 = 0;
    v11[1] = 0;
LABEL_16:
    *uint64_t v12 = 3;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  if ((v18 & 1) == 0)
  {
    sub_10092CB34();
    swift_allocError();
    long long v14 = xmmword_100E32F30;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

unint64_t sub_10092CB34()
{
  unint64_t result = qword_1010C0948;
  if (!qword_1010C0948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C0948);
  }
  return result;
}

uint64_t sub_10092CB88()
{
  return swift_deallocObject();
}

id sub_10092CBC0@<X0>(uint64_t a1@<X8>)
{
  return sub_100929CCC(*(void **)(v1 + 16), a1);
}

uint64_t sub_10092CBC8(void *a1)
{
  return dispatch thunk of LibraryPlaylistEntryInternalFilter.playlist.getter();
}

uint64_t sub_10092CC10(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(&qword_1010BD4B0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10092CC60()
{
  unint64_t result = qword_1010C0A48;
  if (!qword_1010C0A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C0A48);
  }
  return result;
}

unint64_t sub_10092CCB8()
{
  unint64_t result = qword_1010C0A50;
  if (!qword_1010C0A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C0A50);
  }
  return result;
}

ValueMetadata *type metadata accessor for Collaboration()
{
  return &type metadata for Collaboration;
}

ValueMetadata *type metadata accessor for Collaboration.Setup()
{
  return &type metadata for Collaboration.Setup;
}

uint64_t sub_10092CD30(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 2) {
    return swift_bridgeObjectRetain();
  }
  if (a3 <= 1u) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t destroy for Collaboration.Error(uint64_t a1)
{
  return sub_1003D46C0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s9MusicCore13CollaborationO5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10092CD30(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Collaboration.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10092CD30(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1003D46C0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Collaboration.Error(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1003D46C0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Collaboration.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Collaboration.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10092CEE0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_10092CEF8(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Collaboration.Error()
{
  return &type metadata for Collaboration.Error;
}

ValueMetadata *type metadata accessor for Collaboration.Manager.DeepLinkType()
{
  return &type metadata for Collaboration.Manager.DeepLinkType;
}

unsigned char *_s9MusicCore13CollaborationO7ManagerC12DeepLinkTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10092D000);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Collaboration.Manager.Moderation()
{
  return &type metadata for Collaboration.Manager.Moderation;
}

uint64_t type metadata accessor for Collaboration.ArtworkCachingReference()
{
  return self;
}

uint64_t sub_10092D05C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10092D094(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100081D08;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1010C0BF8 + dword_1010C0BF8);
  return v6(a1, v4);
}

uint64_t sub_10092D14C(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000154F4;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1010C0C08 + dword_1010C0C08);
  return v6(a1, v4);
}

unint64_t sub_10092D204(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100063814(&qword_1010C0C48);
      uint64_t result = static _SetStorage.allocate(capacity:)();
      int v3 = (unsigned char *)result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return (unint64_t)v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  int v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return (unint64_t)v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  uint64_t v8 = v3 + 56;
  unint64_t v21 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  while (v21)
  {
    uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_25;
    }
LABEL_18:
    type metadata accessor for AnyCancellable();
    sub_10092E7C4(&qword_1010C0C50, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v11 = -1 << v3[32];
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_10092E7C4(&qword_1010C0C58, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
      while (1)
      {
        uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
        if (result) {
          break;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          goto LABEL_22;
        }
      }
      uint64_t result = swift_release();
    }
    else
    {
LABEL_22:
      *(void *)&v8[8 * v13] = v15 | v14;
      *(void *)(*((void *)v3 + 6) + 8 * v12) = v9;
      uint64_t v17 = *((void *)v3 + 2);
      BOOL v10 = __OFADD__(v17, 1);
      uint64_t v18 = v17 + 1;
      if (v10) {
        goto LABEL_26;
      }
      *((void *)v3 + 2) = v18;
    }
    if (v7 == v5) {
      return (unint64_t)v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_27;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

Swift::Int sub_10092D4B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100063814(&qword_1010C0C40);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v21 = v1;
    uint64_t v22 = a1 + 32;
    while (1)
    {
      int v6 = *(unsigned __int8 *)(v22 + v4++);
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int result = Hasher._finalize()();
      uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
      unint64_t v9 = result & v8;
      unint64_t v10 = (result & (unint64_t)v8) >> 6;
      uint64_t v11 = *(void *)(v5 + 8 * v10);
      uint64_t v12 = 1 << (result & v8);
      if ((v12 & v11) != 0)
      {
        do
        {
          if (*(unsigned char *)(*(void *)(v3 + 48) + v9))
          {
            if (*(unsigned char *)(*(void *)(v3 + 48) + v9) == 1) {
              uint64_t v13 = 0x657469726F766166;
            }
            else {
              uint64_t v13 = 0x64616F6C6E776F64;
            }
            unint64_t v14 = 0xE900000000000073;
            if (!v6)
            {
LABEL_10:
              unint64_t v15 = 0xE300000000000000;
              if (v13 != 7105633) {
                goto LABEL_19;
              }
              goto LABEL_18;
            }
          }
          else
          {
            unint64_t v14 = 0xE300000000000000;
            uint64_t v13 = 7105633;
            if (!v6) {
              goto LABEL_10;
            }
          }
          if (v6 == 1) {
            uint64_t v16 = 0x657469726F766166;
          }
          else {
            uint64_t v16 = 0x64616F6C6E776F64;
          }
          unint64_t v15 = 0xE900000000000073;
          if (v13 != v16) {
            goto LABEL_19;
          }
LABEL_18:
          if (v14 == v15)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_4;
          }
LABEL_19:
          char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          Swift::Int result = swift_bridgeObjectRelease();
          if (v17) {
            goto LABEL_4;
          }
          unint64_t v9 = (v9 + 1) & v8;
          unint64_t v10 = v9 >> 6;
          uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
          uint64_t v12 = 1 << v9;
        }
        while ((v11 & (1 << v9)) != 0);
      }
      *(void *)(v5 + 8 * v10) = v12 | v11;
      *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
      uint64_t v18 = *(void *)(v3 + 16);
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19) {
        break;
      }
      *(void *)(v3 + 16) = v20;
LABEL_4:
      if (v4 == v21) {
        return v3;
      }
    }
    __break(1u);
  }
  else
  {
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return result;
}

void *sub_10092D71C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return &_swiftEmptySetSingleton;
  }
  sub_100063814(&qword_1010C0C38);
  uint64_t v3 = static _SetStorage.allocate(capacity:)();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v28 = a1 + 32;
  uint64_t v27 = v1;
  do
  {
    int v6 = *(unsigned __int8 *)(v28 + v4);
    uint64_t v29 = v4 + 1;
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v7 = Hasher._finalize()();
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v9 = v7 & v8;
    unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
    uint64_t v11 = *(void *)(v5 + 8 * v10);
    uint64_t v12 = 1 << (v7 & v8);
    if ((v12 & v11) != 0)
    {
      while (1)
      {
        unint64_t v13 = 0xD000000000000029;
        unint64_t v14 = 0x8000000100DAC960;
        switch(*(unsigned char *)(*(void *)(v3 + 48) + v9))
        {
          case 1:
            unint64_t v13 = 0xD000000000000025;
            unint64_t v15 = "LibraryView.RecentlyAdded";
            goto LABEL_20;
          case 2:
            unint64_t v13 = 0xD000000000000023;
            unint64_t v15 = "LibraryView.Playlists";
            goto LABEL_20;
          case 3:
            unint64_t v13 = 0xD000000000000022;
            unint64_t v15 = "LibraryView.Artists";
            goto LABEL_20;
          case 4:
            uint64_t v16 = "LibraryView.Albums";
            goto LABEL_17;
          case 5:
            unint64_t v13 = 0xD000000000000026;
            unint64_t v15 = "LibraryView.Songs";
            goto LABEL_20;
          case 6:
            unint64_t v13 = 0xD000000000000027;
            unint64_t v15 = "LibraryView.MadeForYou";
            goto LABEL_20;
          case 7:
            unint64_t v13 = 0xD000000000000022;
            unint64_t v15 = "LibraryView.MusicVideos";
            goto LABEL_20;
          case 8:
            unint64_t v13 = 0xD000000000000028;
            unint64_t v15 = "LibraryView.Genres";
            goto LABEL_20;
          case 9:
            unint64_t v13 = 0xD000000000000025;
            unint64_t v15 = "LibraryView.Compilations";
            goto LABEL_20;
          case 0xA:
            uint64_t v16 = "LibraryView.Composers";
LABEL_17:
            unint64_t v14 = (unint64_t)v16 | 0x8000000000000000;
            unint64_t v13 = 0xD000000000000021;
            break;
          case 0xB:
            unint64_t v13 = 0xD000000000000026;
            unint64_t v15 = "LibraryView.Shows";
            goto LABEL_20;
          case 0xC:
            unint64_t v13 = 0xD000000000000027;
            unint64_t v15 = "LibraryView.Downloaded";
LABEL_20:
            unint64_t v14 = (unint64_t)v15 | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v17 = 0xD000000000000029;
        unint64_t v18 = 0x8000000100DAC960;
        switch(v6)
        {
          case 1:
            unint64_t v19 = 0xD000000000000025;
            uint64_t v20 = "LibraryView.RecentlyAdded";
            goto LABEL_37;
          case 2:
            unint64_t v19 = 0xD000000000000023;
            uint64_t v20 = "LibraryView.Playlists";
            goto LABEL_37;
          case 3:
            unint64_t v19 = 0xD000000000000022;
            uint64_t v20 = "LibraryView.Artists";
            goto LABEL_37;
          case 4:
            uint64_t v21 = "LibraryView.Albums";
            goto LABEL_32;
          case 5:
            unint64_t v19 = 0xD000000000000026;
            uint64_t v20 = "LibraryView.Songs";
            goto LABEL_37;
          case 6:
            unint64_t v19 = 0xD000000000000027;
            uint64_t v20 = "LibraryView.MadeForYou";
            goto LABEL_37;
          case 7:
            unint64_t v19 = 0xD000000000000022;
            uint64_t v20 = "LibraryView.MusicVideos";
            goto LABEL_37;
          case 8:
            unint64_t v19 = 0xD000000000000028;
            uint64_t v20 = "LibraryView.Genres";
            goto LABEL_37;
          case 9:
            unint64_t v19 = 0xD000000000000025;
            uint64_t v20 = "LibraryView.Compilations";
            goto LABEL_37;
          case 10:
            uint64_t v21 = "LibraryView.Composers";
LABEL_32:
            unint64_t v18 = (unint64_t)v21 | 0x8000000000000000;
            unint64_t v17 = 0xD000000000000021;
            goto LABEL_33;
          case 11:
            unint64_t v19 = 0xD000000000000026;
            uint64_t v20 = "LibraryView.Shows";
            goto LABEL_37;
          case 12:
            unint64_t v19 = 0xD000000000000027;
            uint64_t v20 = "LibraryView.Downloaded";
LABEL_37:
            unint64_t v18 = (unint64_t)v20 | 0x8000000000000000;
            if (v13 == v19) {
              goto LABEL_38;
            }
            goto LABEL_39;
          default:
LABEL_33:
            if (v13 != v17) {
              goto LABEL_39;
            }
LABEL_38:
            if (v14 == v18)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_4;
            }
LABEL_39:
            char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v22) {
              goto LABEL_4;
            }
            unint64_t v9 = (v9 + 1) & v8;
            unint64_t v10 = v9 >> 6;
            uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
            uint64_t v12 = 1 << v9;
            if ((v11 & (1 << v9)) == 0) {
              goto LABEL_41;
            }
            break;
        }
      }
    }
LABEL_41:
    *(void *)(v5 + 8 * v10) = v12 | v11;
    *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
    uint64_t v23 = *(void *)(v3 + 16);
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
      JUMPOUT(0x10092DBB4);
    }
    *(void *)(v3 + 16) = v25;
LABEL_4:
    uint64_t v4 = v29;
  }
  while (v29 != v27);
  return (void *)v3;
}

void *sub_10092DC50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100063814(&qword_1010C0C30);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v26 = a1 + 32;
    uint64_t v25 = v1;
    while (1)
    {
      unsigned int v6 = *(unsigned __int8 *)(v26 + v4);
      Hasher.init(_seed:)();
      unsigned int v7 = v6 >> 6;
      uint64_t v27 = v4 + 1;
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v8 = Hasher._finalize()();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = v8 & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      if (((1 << v10) & v12) != 0) {
        break;
      }
LABEL_29:
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(*(void *)(v3 + 48) + v10) = v6;
      uint64_t v21 = *(void *)(v3 + 16);
      BOOL v22 = __OFADD__(v21, 1);
      uint64_t v23 = v21 + 1;
      if (v22)
      {
        __break(1u);
        JUMPOUT(0x10092E3F0);
      }
      *(void *)(v3 + 16) = v23;
LABEL_3:
      uint64_t v4 = v27;
      if (v27 == v25) {
        return (void *)v3;
      }
    }
    uint64_t v14 = ~v9;
    BOOL v16 = v6 != 192 || v7 != 3;
    char v28 = v16;
    while (1)
    {
      unsigned int v17 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v10);
      unsigned int v18 = v17 >> 6;
      if (v17 >> 6)
      {
        if (v18 == 1)
        {
          if (v7 == 1)
          {
            if (((v17 ^ v6) & 0x3F) == 0) {
              goto LABEL_3;
            }
            goto LABEL_13;
          }
        }
        else if (v18 == 3)
        {
          char v19 = v28;
          if (v17 != 192) {
            char v19 = 1;
          }
          if ((v19 & 1) == 0) {
            goto LABEL_3;
          }
        }
      }
      else if (v6 < 0x40)
      {
        if (((v17 ^ v6) & 1) == 0) {
          goto LABEL_3;
        }
        goto LABEL_13;
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v20 = Hasher._finalize()();
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      if (v20 == Hasher._finalize()()) {
        goto LABEL_3;
      }
LABEL_13:
      unint64_t v10 = (v10 + 1) & v14;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      if ((v12 & (1 << v10)) == 0) {
        goto LABEL_29;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_10092E44C()
{
  uint64_t v1 = type metadata accessor for Playlist();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

void sub_10092E4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for Playlist() - 8);
  uint64_t v10 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  sub_10092BA28(a1, a2, a3, a4, v10);
}

uint64_t sub_10092E574()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_10092E5AC()
{
  uint64_t v1 = type metadata accessor for Playlist();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10092E698(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Playlist() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1000154F4;
  return sub_10092BC44(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_10092E7C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10092E80C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100081D08;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1010C0D20 + dword_1010C0D20);
  return v6(a1, v4);
}

double static Alert.enableCloudLibraryAlert(context:)@<D0>(uint64_t a1@<X8>)
{
  sub_1009395C0((uint64_t)v4);
  long long v2 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v2;
  double result = *(double *)&v5;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  return result;
}

double static Alert.explicitRestrictedAlert(forPlayback:)@<D0>(uint64_t a1@<X8>)
{
  sub_100939824((uint64_t)v4);
  long long v2 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v2;
  double result = *(double *)&v5;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  return result;
}

double static Alert.confirmDelete(for:library:)@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = (void (*)(char *, char *, uint64_t))a1[4];
  uint64_t v7 = sub_100068990(a1, v5);
  sub_100930D58((uint64_t)v7, a2, v5, v6, (uint64_t)v10);
  long long v8 = v10[1];
  *(_OWORD *)a3 = v10[0];
  *(_OWORD *)(a3 + 16) = v8;
  double result = *(double *)&v11;
  *(_OWORD *)(a3 + 32) = v11;
  *(void *)(a3 + 48) = v12;
  return result;
}

double static Alert.cellularDataDisallowedAlert(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_10093A808(a1, a2, (uint64_t *)v6);
  long long v4 = v6[1];
  *(_OWORD *)a3 = v6[0];
  *(_OWORD *)(a3 + 16) = v4;
  double result = *(double *)&v7;
  *(_OWORD *)(a3 + 32) = v7;
  *(void *)(a3 + 48) = v8;
  return result;
}

double static Alert.dolbyAtmosDownloadsAlert(message:completion:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_10093A358(a1, a2, a3, a4, (uint64_t *)v8);
  long long v6 = v8[1];
  *(_OWORD *)a5 = v8[0];
  *(_OWORD *)(a5 + 16) = v6;
  double result = *(double *)&v9;
  *(_OWORD *)(a5 + 32) = v9;
  *(void *)(a5 + 48) = v10;
  return result;
}

uint64_t static Alert.Action.tapToRadar(title:description:screenshots:attachments:keywords:withDevicePrefix:)@<X0>(uint64_t a1@<X3>, unint64_t a2@<X4>, uint64_t a3@<X5>, void (*a4)(char *, char *, uint64_t)@<X6>, int a5@<W7>, uint64_t a6@<X8>)
{
  sub_10093ACC0(a1, a2, a3, a4, a5, (uint64_t)v8);
  return sub_10092C5F8((uint64_t)v8, a6);
}

double static Alert.cellularRestrictedAlert(model:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10093B108(a1, (uint64_t *)v5);
  long long v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  double result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(void *)(a2 + 48) = v7;
  return result;
}

uint64_t sub_10092EB08()
{
  return _swift_task_switch(sub_10092EB24, 0, 0);
}

id sub_10092EB24()
{
  id result = [self sharedNetworkObserver];
  if (result)
  {
    long long v2 = result;
    [result setVideoCellularStreamingAllowed:1];

    long long v3 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10092EBBC()
{
  return _swift_task_switch(sub_10092EBD8, 0, 0);
}

id sub_10092EBD8()
{
  id result = [self sharedNetworkObserver];
  if (result)
  {
    long long v2 = result;
    [result setMusicCellularStreamingAllowed:1];

    long long v3 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double static Alert.networkUnavailableAlert(model:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10093BF98(a1, (uint64_t *)v5);
  long long v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  double result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(void *)(a2 + 48) = v7;
  return result;
}

uint64_t sub_10092ECBC()
{
  return _swift_task_switch(sub_10093CEE8, 0, 0);
}

double static Alert.accountRequiredAlert()@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v52 = type metadata accessor for UUID();
  uint64_t v47 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v46 = (char *)v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for Locale();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  long long v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  long long v9 = (char *)v40 - v8;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v10(v6, v9, v3);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v11 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v12 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v50 = v13;
  uint64_t v51 = v12;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v40[1] = v4 + 8;
  v14(v9, v3);
  String.LocalizationValue.init(stringLiteral:)();
  v10(v6, v9, v3);
  id v15 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v16 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v48 = v17;
  uint64_t v49 = v16;
  v14(v9, v3);
  uint64_t v41 = v14;
  String.LocalizationValue.init(stringLiteral:)();
  v10(v6, v9, v3);
  id v18 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v19 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v44 = v20;
  uint64_t v45 = v19;
  v14(v9, v3);
  uint64_t v21 = v46;
  UUID.init()();
  uint64_t v22 = UUID.uuidString.getter();
  uint64_t v42 = v23;
  uint64_t v43 = v22;
  BOOL v24 = *(void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v25 = v52;
  v24(v21, v52);
  String.LocalizationValue.init(stringLiteral:)();
  v10(v6, v9, v3);
  id v26 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v27 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v29 = v28;
  v41(v9, v3);
  UUID.init()();
  uint64_t v30 = UUID.uuidString.getter();
  uint64_t v32 = v31;
  v24(v21, v25);
  sub_100063814(&qword_1010C5A50);
  uint64_t v33 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v33 + 16) = xmmword_100E251B0;
  *(void *)(v33 + 32) = v30;
  *(void *)(v33 + 40) = v32;
  *(void *)(v33 + 48) = v27;
  *(void *)(v33 + 56) = v29;
  *(unsigned char *)(v33 + 64) = 2;
  *(void *)(v33 + 72) = &unk_1010C0D90;
  *(void *)(v33 + 80) = 0;
  uint64_t v35 = v42;
  *(void *)(v33 + 88) = v43;
  *(void *)(v33 + 96) = v35;
  uint64_t v36 = v44;
  *(void *)(v33 + 104) = v45;
  *(void *)(v33 + 112) = v36;
  *(unsigned char *)(v33 + 120) = 2;
  *(void *)(v33 + 128) = 0;
  *(void *)(v33 + 136) = 0;
  uint64_t v37 = v53;
  uint64_t v38 = v50;
  *uint64_t v53 = v51;
  v37[1] = v38;
  uint64_t v39 = v48;
  v37[2] = v49;
  void v37[3] = v39;
  *((unsigned char *)v37 + 32) = 0;
  v37[5] = v33;
  v37[6] = 0;
  return result;
}

uint64_t sub_10092F1B4()
{
  return _swift_task_switch(sub_10092F1D0, 0, 0);
}

id sub_10092F1D0()
{
  id result = [self defaultWorkspace];
  if (result)
  {
    uint64_t v2 = result;
    LSApplicationWorkspace.openSettings()();

    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double static Alert.subscriptionRequiredAlert()@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v52 = type metadata accessor for UUID();
  uint64_t v47 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v46 = (char *)v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for Locale();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  long long v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  long long v9 = (char *)v40 - v8;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v10(v6, v9, v3);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v11 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v12 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v50 = v13;
  uint64_t v51 = v12;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v40[1] = v4 + 8;
  v14(v9, v3);
  String.LocalizationValue.init(stringLiteral:)();
  v10(v6, v9, v3);
  id v15 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v16 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v48 = v17;
  uint64_t v49 = v16;
  v14(v9, v3);
  uint64_t v41 = v14;
  String.LocalizationValue.init(stringLiteral:)();
  v10(v6, v9, v3);
  id v18 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v19 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v44 = v20;
  uint64_t v45 = v19;
  v14(v9, v3);
  uint64_t v21 = v46;
  UUID.init()();
  uint64_t v22 = UUID.uuidString.getter();
  uint64_t v42 = v23;
  uint64_t v43 = v22;
  BOOL v24 = *(void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v25 = v52;
  v24(v21, v52);
  String.LocalizationValue.init(stringLiteral:)();
  v10(v6, v9, v3);
  id v26 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v27 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v29 = v28;
  v41(v9, v3);
  UUID.init()();
  uint64_t v30 = UUID.uuidString.getter();
  uint64_t v32 = v31;
  v24(v21, v25);
  sub_100063814(&qword_1010C5A50);
  uint64_t v33 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v33 + 16) = xmmword_100E251B0;
  *(void *)(v33 + 32) = v30;
  *(void *)(v33 + 40) = v32;
  *(void *)(v33 + 48) = v27;
  *(void *)(v33 + 56) = v29;
  *(unsigned char *)(v33 + 64) = 2;
  *(void *)(v33 + 72) = &unk_1010C0D98;
  *(void *)(v33 + 80) = 0;
  uint64_t v35 = v42;
  *(void *)(v33 + 88) = v43;
  *(void *)(v33 + 96) = v35;
  uint64_t v36 = v44;
  *(void *)(v33 + 104) = v45;
  *(void *)(v33 + 112) = v36;
  *(unsigned char *)(v33 + 120) = 2;
  *(void *)(v33 + 128) = 0;
  *(void *)(v33 + 136) = 0;
  uint64_t v37 = v53;
  uint64_t v38 = v50;
  *uint64_t v53 = v51;
  v37[1] = v38;
  uint64_t v39 = v48;
  v37[2] = v49;
  void v37[3] = v39;
  *((unsigned char *)v37 + 32) = 0;
  v37[5] = v33;
  v37[6] = 0;
  return result;
}

uint64_t sub_10092F734()
{
  return _swift_task_switch(sub_10092F750, 0, 0);
}

uint64_t sub_10092F750()
{
  id v1 = [self defaultWorkspace];
  if (v1)
  {
    uint64_t v2 = v1;
    LSApplicationWorkspace.openRestrictions()();
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10092F7D8()
{
  return _swift_task_switch(sub_10092F7F4, 0, 0);
}

id sub_10092F7F4()
{
  if (qword_1010BBCC8 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v5 = *(void **)(v0 + 96);
  id result = [self sharedConnection];
  if (result)
  {
    uint64_t v2 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v2 setBoolValue:1 forSetting:v3];

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double static Alert.contentUnavailableAlert()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for String.LocalizationValue();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v28 - v11;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v13(v9, v12, v6);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v14 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v15 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v29 = v16;
  uint64_t v30 = v15;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v12, v6);
  String.LocalizationValue.init(stringLiteral:)();
  v13(v9, v12, v6);
  id v18 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v19 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v21 = v20;
  v17(v12, v6);
  UUID.init()();
  uint64_t v22 = UUID.uuidString.getter();
  uint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v32);
  sub_100063814(&qword_1010C5A50);
  uint64_t v25 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v25 + 16) = xmmword_100E251D0;
  *(void *)(v25 + 32) = v22;
  *(void *)(v25 + 40) = v24;
  *(void *)(v25 + 48) = v19;
  *(void *)(v25 + 56) = v21;
  *(unsigned char *)(v25 + 64) = 2;
  *(void *)(v25 + 72) = 0;
  *(void *)(v25 + 80) = 0;
  uint64_t v27 = v29;
  *(void *)a1 = v30;
  *(void *)(a1 + 8) = v27;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v25;
  *(void *)(a1 + 48) = 0;
  return result;
}

double static Alert.userUploadRequiredAlert()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  __chkstk_darwin(v2);
  uint64_t v35 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - v10;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v8, v11, v5);
  if (qword_1010BBBE0 != -1) {
    swift_once();
  }
  id v13 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v14 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v33 = v15;
  uint64_t v34 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v11, v5);
  String.LocalizationValue.init(stringLiteral:)();
  v12(v8, v11, v5);
  id v17 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v32 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v19 = v18;
  v16(v11, v5);
  String.LocalizationValue.init(stringLiteral:)();
  v12(v8, v11, v5);
  id v20 = (id)qword_10112A3A0;
  static Locale.current.getter();
  uint64_t v21 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v23 = v22;
  v16(v11, v5);
  uint64_t v24 = v35;
  UUID.init()();
  uint64_t v25 = UUID.uuidString.getter();
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v37);
  sub_100063814(&qword_1010C5A50);
  uint64_t v28 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v28 + 16) = xmmword_100E251D0;
  *(void *)(v28 + 32) = v25;
  *(void *)(v28 + 40) = v27;
  *(void *)(v28 + 48) = v21;
  *(void *)(v28 + 56) = v23;
  *(unsigned char *)(v28 + 64) = 2;
  *(void *)(v28 + 72) = 0;
  *(void *)(v28 + 80) = 0;
  uint64_t v30 = v33;
  *(void *)a1 = v34;
  *(void *)(a1 + 8) = v30;
  *(void *)(a1 + 16) = v32;
  *(void *)(a1 + 24) = v19;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v28;
  *(void *)(a1 + 48) = 0;
  return result;
}

double static Alert.ageVerificationFallbackAlert()@<D0>(uint64_t a1@<X8>)
{
  sub_10093C578((uint64_t)v4);
  long long v2 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v2;
  double result = *(double *)&v5;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  return result;
}

uint64_t sub_10093013C()
{
  return _swift_task_switch(sub_100930158, 0, 0);
}

uint64_t sub_100930158()
{
  if (qword_1010BBE50 != -1) {
    swift_once();
  }
  CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(0, 0);
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static Alert.Action.cancel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010BC4C0 != -1) {
    swift_once();
  }
  uint64_t v7 = static String.cancelButtonTitle;
  uint64_t v6 = qword_10112BB80;
  swift_bridgeObjectRetain();
  UUID.init()();
  uint64_t v8 = UUID.uuidString.getter();
  uint64_t v10 = v9;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_10093032C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_10093034C, 0, 0);
}

uint64_t sub_10093034C()
{
  id v1 = *(void (**)(void))(v0 + 16);
  if (v1) {
    v1(0);
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1009303BC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1009303DC, 0, 0);
}

id sub_1009303DC()
{
  id result = [self sharedNetworkObserver];
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = *(void *)(v0 + 16);
    [result setMusicCellularDownloadingAllowed:1];

    if (v3) {
      (*(void (**)(uint64_t))(v0 + 16))(1);
    }
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10093048C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_1009304AC, 0, 0);
}

uint64_t sub_1009304AC()
{
  id v1 = *(void **)(v0 + 24);
  uint64_t v3 = v1[3];
  uint64_t v2 = v1[4];
  uint64_t v4 = sub_100068990(v1, v3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100930568;
  return MusicLibrary.remove<A>(_:)(v4, v3, v2);
}

uint64_t sub_100930568()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10093069C, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_10093069C()
{
  uint64_t v12 = v0;
  if (qword_1010BBC00 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)static Logger.actions);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[6];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[2] = v5;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010C0920);
    uint64_t v7 = String.init<A>(describing:)();
    *(void *)(v6 + 4) = sub_100075E68(v7, v8, &v11);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to delete item=%s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100930898(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_1009308B8, 0, 0);
}

uint64_t sub_1009308B8()
{
  uint64_t v1 = *(int **)(v0 + 16);
  id v2 = [self standardUserDefaults];
  [v2 setPrefersSpatialDownloads:1];

  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v3;
  *os_log_type_t v3 = v0;
  v3[1] = sub_1009309C8;
  return v5(1);
}

uint64_t sub_1009309C8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100930ABC(int *a1)
{
  uint64_t v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *id v2 = v1;
  v2[1] = sub_100081D08;
  return v4(0);
}

uint64_t sub_100930B8C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 24) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100930C24, v3, v2);
}

uint64_t sub_100930C24()
{
  swift_release();
  id v1 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v2);
  uint64_t v4 = v3;
  sub_1008F6A7C((uint64_t)_swiftEmptyArrayStorage);
  _s3__C25OpenExternalURLOptionsKeyVMa_0(0);
  sub_10093CE94((unint64_t *)&qword_1010C5E10, _s3__C25OpenExternalURLOptionsKeyVMa_0);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 openURL:v4 options:isa completionHandler:0];

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100930D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, char *, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42[3] = a3;
  unsigned char v42[4] = (uint64_t)a4;
  uint64_t v14 = sub_100068018(v42);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v14, a1, a3);
  uint64_t v15 = sub_100937AFC((uint64_t)v14, a3, a4);
  uint64_t v39 = v16;
  uint64_t v40 = v15;
  uint64_t v38 = v17;
  uint64_t v19 = v18;
  sub_1000688E4((uint64_t)v42, (uint64_t)v41);
  uint64_t v20 = swift_allocObject();
  sub_100068978(v41, v20 + 16);
  *(void *)(v20 + 56) = a2;
  uint64_t v37 = v19;
  swift_bridgeObjectRetain();
  swift_retain();
  UUID.init()();
  uint64_t v21 = UUID.uuidString.getter();
  uint64_t v35 = v22;
  uint64_t v36 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v24 = v10;
  v23(v13, v10);
  if (qword_1010BC4C0 != -1) {
    swift_once();
  }
  uint64_t v26 = static String.cancelButtonTitle;
  uint64_t v25 = qword_10112BB80;
  swift_bridgeObjectRetain();
  UUID.init()();
  uint64_t v27 = UUID.uuidString.getter();
  uint64_t v29 = v28;
  v23(v13, v24);
  uint64_t v30 = v37;
  swift_bridgeObjectRelease();
  sub_100063814(&qword_1010C5A50);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_100E251B0;
  uint64_t v32 = v35;
  *(void *)(v31 + 32) = v36;
  *(void *)(v31 + 40) = v32;
  *(void *)(v31 + 48) = v38;
  *(void *)(v31 + 56) = v30;
  *(unsigned char *)(v31 + 64) = 2;
  *(void *)(v31 + 72) = &unk_1010C0E18;
  *(void *)(v31 + 80) = v20;
  *(void *)(v31 + 88) = v27;
  *(void *)(v31 + 96) = v29;
  *(void *)(v31 + 104) = v26;
  *(void *)(v31 + 112) = v25;
  *(unsigned char *)(v31 + 120) = 0;
  *(void *)(v31 + 128) = 0;
  *(void *)(v31 + 136) = 0;
  uint64_t result = sub_1000760E4((uint64_t)v42);
  *(void *)a5 = 0;
  *(void *)(a5 + 8) = 0;
  uint64_t v34 = v39;
  *(void *)(a5 + 16) = v40;
  *(void *)(a5 + 24) = v34;
  *(unsigned char *)(a5 + 32) = 1;
  *(void *)(a5 + 40) = v31;
  *(void *)(a5 + 48) = 0;
  return result;
}

uint64_t sub_100930FFC(uint64_t a1)
{
  uint64_t v148 = a1;
  uint64_t v124 = type metadata accessor for Track();
  uint64_t v120 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  long long v118 = (char *)&v114 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v119 = (char *)&v114 - v3;
  __chkstk_darwin(v4);
  uint64_t v121 = (char *)&v114 - v5;
  uint64_t v126 = type metadata accessor for Playlist.Entry.InternalItem();
  uint64_t v122 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v123 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = type metadata accessor for Playlist.Entry();
  uint64_t v125 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  long long v127 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v128 = (char *)&v114 - v9;
  uint64_t v133 = type metadata accessor for TVEpisode();
  uint64_t v130 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v114 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v132 = (char *)&v114 - v12;
  uint64_t v136 = type metadata accessor for TVSeason();
  uint64_t v131 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v135 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = type metadata accessor for MusicMovie();
  uint64_t v134 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  long long v117 = (void (*)(char *, char *, uint64_t))((char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v138 = (char *)&v114 - v16;
  uint64_t v17 = type metadata accessor for Song();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v116 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v141 = (char *)&v114 - v21;
  uint64_t v143 = type metadata accessor for Playlist();
  uint64_t v140 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v145 = (char *)&v114 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for MusicVideo();
  uint64_t v144 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v115 = (char *)&v114 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v114 - v26;
  uint64_t v28 = type metadata accessor for Locale();
  __chkstk_darwin(v28 - 8);
  uint64_t v147 = (char *)&v114 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for String.LocalizationValue();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v114 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v114 - v35;
  uint64_t v37 = type metadata accessor for Album();
  uint64_t v146 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v114 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v150[3] = v17;
  v150[4] = (uint64_t)&protocol witness table for Song;
  uint64_t v40 = sub_100068018(v150);
  uint64_t v137 = v18;
  uint64_t v41 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v142 = v17;
  v41(v40, v148, v17);
  sub_1000688E4((uint64_t)v150, (uint64_t)v149);
  sub_100063814(&qword_1010C0E20);
  if (swift_dynamicCast())
  {
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v145 = *(char **)(v31 + 16);
    ((void (*)(char *, char *, uint64_t))v145)(v33, v36, v30);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v42 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v148 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v144 = v43;
    uint64_t v44 = *(void (**)(char *, uint64_t))(v31 + 8);
    v44(v36, v30);
    String.LocalizationValue.init(stringLiteral:)();
    ((void (*)(char *, char *, uint64_t))v145)(v33, v36, v30);
    id v45 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v46 = v148;
    String.init(localized:table:bundle:locale:comment:)();
    v44(v36, v30);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v39, v37);
    goto LABEL_29;
  }
  uint64_t v47 = v23;
  if (swift_dynamicCast())
  {
    uint64_t v148 = v23;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v146 = *(void *)(v31 + 16);
    ((void (*)(char *, char *, uint64_t))v146)(v33, v36, v30);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v48 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v49 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v50 = *(void (**)(char *, uint64_t))(v31 + 8);
    v50(v36, v30);
    String.LocalizationValue.init(stringLiteral:)();
    ((void (*)(char *, char *, uint64_t))v146)(v33, v36, v30);
    id v51 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v46 = v49;
    String.init(localized:table:bundle:locale:comment:)();
    v50(v36, v30);
    (*(void (**)(char *, uint64_t))(v144 + 8))(v27, v148);
    goto LABEL_29;
  }
  uint64_t v52 = v143;
  if (swift_dynamicCast())
  {
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v53(v33, v36, v30);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v54 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v148 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v55 = *(void (**)(char *, uint64_t))(v31 + 8);
    v55(v36, v30);
    String.LocalizationValue.init(stringLiteral:)();
    v53(v33, v36, v30);
    id v56 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v46 = v148;
    String.init(localized:table:bundle:locale:comment:)();
    v55(v36, v30);
    (*(void (**)(char *, uint64_t))(v140 + 8))(v145, v52);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    id v57 = v36;
    String.LocalizationValue.init(stringLiteral:)();
    char v58 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v58(v33, v36, v30);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v59 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v148 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v60 = *(void (**)(char *, uint64_t))(v31 + 8);
    v60(v57, v30);
    String.LocalizationValue.init(stringLiteral:)();
    v58(v33, v57, v30);
    id v61 = (id)qword_10112A3A0;
    static Locale.current.getter();
    String.init(localized:table:bundle:locale:comment:)();
    v60(v57, v30);
    uint64_t v46 = v148;
    (*(void (**)(char *, uint64_t))(v137 + 8))(v141, v142);
    goto LABEL_29;
  }
  id v62 = v33;
  if (swift_dynamicCast())
  {
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v63(v33, v36, v30);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v64 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v65 = String.init(localized:table:bundle:locale:comment:)();
    NSString v66 = *(void (**)(char *, uint64_t))(v31 + 8);
    v66(v36, v30);
    String.LocalizationValue.init(stringLiteral:)();
    v63(v33, v36, v30);
    id v67 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v46 = v65;
    String.init(localized:table:bundle:locale:comment:)();
    v66(v36, v30);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v138, v139);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    String.LocalizationValue.init(stringLiteral:)();
    id v68 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v68(v33, v36, v30);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v69 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v70 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v71 = *(void (**)(char *, uint64_t))(v31 + 8);
    v71(v36, v30);
    String.LocalizationValue.init(stringLiteral:)();
    v68(v33, v36, v30);
    id v72 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v46 = v70;
    String.init(localized:table:bundle:locale:comment:)();
    v71(v36, v30);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v135, v136);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    String.LocalizationValue.init(stringLiteral:)();
    NSString v73 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v73(v33, v36, v30);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v74 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v75 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v76 = *(void (**)(char *, uint64_t))(v31 + 8);
    v76(v36, v30);
    String.LocalizationValue.init(stringLiteral:)();
    v73(v33, v36, v30);
    id v77 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v46 = v75;
    String.init(localized:table:bundle:locale:comment:)();
    v76(v36, v30);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v132, v133);
    goto LABEL_29;
  }
  uint64_t v79 = v128;
  uint64_t v80 = v129;
  if (!swift_dynamicCast())
  {
    int v90 = v121;
    uint64_t v91 = v124;
    uint64_t v92 = v31;
    if (swift_dynamicCast())
    {
      uint64_t v93 = v47;
      uint64_t v94 = v90;
      uint64_t v95 = v120;
      id v96 = v119;
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v119, v94, v91);
      uint64_t v97 = v118;
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v118, v96, v91);
      int v98 = (*(uint64_t (**)(char *, uint64_t))(v95 + 88))(v97, v91);
      if (v98 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v95 + 96))(v97, v91);
        uint64_t v99 = v137;
        uint64_t v100 = (uint64_t)v116;
        uint64_t v101 = v142;
        (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v116, v97, v142);
        uint64_t v102 = sub_100930FFC(v100);
LABEL_41:
        uint64_t v46 = v102;
        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v100, v101);
        (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v91);
        goto LABEL_29;
      }
      if (v98 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v95 + 96))(v97, v91);
        uint64_t v99 = v144;
        uint64_t v100 = (uint64_t)v115;
        uint64_t v101 = v93;
        (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v115, v97, v93);
        uint64_t v102 = sub_100932AA8(v100);
        goto LABEL_41;
      }
      uint64_t v107 = *(void (**)(char *, uint64_t))(v95 + 8);
      v107(v96, v91);
      v107(v97, v91);
    }
LABEL_51:
    sub_1000760E4((uint64_t)v149);
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v109 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
    v109(v62, v36, v30);
    if (qword_1010BBBE0 != -1) {
      swift_once();
    }
    id v110 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v111 = String.init(localized:table:bundle:locale:comment:)();
    id v112 = *(void (**)(char *, uint64_t))(v92 + 8);
    v112(v36, v30);
    String.LocalizationValue.init(stringLiteral:)();
    v109(v62, v36, v30);
    id v113 = (id)qword_10112A3A0;
    static Locale.current.getter();
    uint64_t v46 = v111;
    String.init(localized:table:bundle:locale:comment:)();
    v112(v36, v30);
    goto LABEL_30;
  }
  uint64_t v148 = v47;
  uint64_t v81 = v125;
  uint64_t v82 = v127;
  (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v127, v79, v80);
  uint64_t v83 = v123;
  Playlist.Entry.internalItem.getter();
  uint64_t v84 = v122;
  uint64_t v85 = v126;
  int v86 = (*(uint64_t (**)(char *, uint64_t))(v122 + 88))(v83, v126);
  if (v86 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v84 + 96))(v83, v85);
    uint64_t v87 = v134;
    uint64_t v88 = v117;
    uint64_t v89 = v139;
    (*(void (**)(char *, char *, uint64_t))(v134 + 32))((char *)v117, v83, v139);
    uint64_t v46 = sub_100934538(v88);
    (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v87 + 8))(v88, v89);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v127, v80);
LABEL_29:
    sub_1000760E4((uint64_t)v149);
LABEL_30:
    sub_1000760E4((uint64_t)v150);
    return v46;
  }
  if (v86 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v84 + 96))(v83, v126);
    uint64_t v103 = v144;
    uint64_t v104 = (uint64_t)v115;
    uint64_t v105 = v148;
    (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v115, v83, v148);
    uint64_t v106 = sub_100932AA8(v104);
LABEL_47:
    uint64_t v46 = v106;
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v104, v105);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v80);
    goto LABEL_29;
  }
  if (v86 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v84 + 96))(v83, v126);
    uint64_t v103 = v137;
    uint64_t v104 = (uint64_t)v116;
    uint64_t v105 = v142;
    (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v116, v83, v142);
    uint64_t v106 = sub_100930FFC(v104);
    goto LABEL_47;
  }
  uint64_t v108 = v126;
  if (v86 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v84 + 96))(v83, v126);
    uint64_t v103 = v130;
    uint64_t v104 = (uint64_t)v114;
    uint64_t v105 = v133;
    (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v114, v83, v133);
    uint64_t v106 = sub_100936024(v104);
    goto LABEL_47;
  }
  if (v86 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v86 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v80);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v108);
    uint64_t v92 = v31;
    goto LABEL_51;
  }
  (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v126);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}