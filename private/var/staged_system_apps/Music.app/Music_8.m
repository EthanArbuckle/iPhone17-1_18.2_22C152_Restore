unint64_t sub_1005AB0B4(void *a1)
{
  unint64_t result;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unsigned int (*v6)(char *, uint64_t, uint64_t);
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t vars8;

  type metadata accessor for LibraryImport.ViewModel(0);
  result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    return swift_release();
  }
  else
  {
    if (result != 1)
    {
      if (result) {
        return result;
      }
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[8]) {
      swift_release();
    }
    if (a1[10]) {
      swift_release();
    }
    if (a1[16])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    v3 = _s16ActionButtonViewV5ModelVMa(0);
    v4 = (char *)a1 + *(int *)(v3 + 48);
    v5 = _s12ClickMetricsVMa(0);
    v6 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
    if (!v6(v4, 1, v5))
    {
      v7 = &v4[*(int *)(v5 + 20)];
      v8 = type metadata accessor for URL();
      v9 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
      }
      swift_bridgeObjectRelease();
      if (*(void *)&v4[*(int *)(v5 + 28) + 8] >= 0xBuLL) {
        swift_bridgeObjectRelease();
      }
    }
    v10 = (char *)a1 + *(int *)(v3 + 52);
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v6)(v10, 1, v5);
    if (!result)
    {
      v11 = &v10[*(int *)(v5 + 20)];
      v12 = type metadata accessor for URL();
      v13 = *(void *)(v12 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
      }
      swift_bridgeObjectRelease();
      result = *(void *)&v10[*(int *)(v5 + 28) + 8];
      if (result >= 0xB)
      {
LABEL_5:
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1005AB3CC(uint64_t a1, uint64_t a2)
{
  type metadata accessor for LibraryImport.ViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
    goto LABEL_29;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v11 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v11;
    uint64_t v12 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v12;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  uint64_t v13 = *(void *)(a2 + 80);
  if (!v13)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    uint64_t v15 = *(void *)(a2 + 128);
    if (v15) {
      goto LABEL_10;
    }
LABEL_12:
    long long v19 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v19;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    goto LABEL_13;
  }
  uint64_t v14 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v14;
  swift_retain();
  uint64_t v15 = *(void *)(a2 + 128);
  if (!v15) {
    goto LABEL_12;
  }
LABEL_10:
  uint64_t v16 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v16;
  uint64_t v17 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v17;
  uint64_t v18 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = v15;
  *(void *)(a1 + 136) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
LABEL_13:
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v20 = _s16ActionButtonViewV5ModelVMa(0);
  uint64_t v21 = *(int *)(v20 + 48);
  v22 = (unsigned char *)(a1 + v21);
  v23 = (unsigned char *)(a2 + v21);
  v24 = (int *)_s12ClickMetricsVMa(0);
  uint64_t v25 = *((void *)v24 - 1);
  v63 = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v25 + 48);
  if (v63(v23, 1, v24))
  {
    uint64_t v26 = sub_100063814(&qword_1010B0040);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v60 = v20;
    uint64_t v61 = v25;
    unsigned char *v22 = *v23;
    uint64_t v27 = v24[5];
    v58 = &v22[v27];
    v28 = &v23[v27];
    uint64_t v29 = type metadata accessor for URL();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = sub_100063814((uint64_t *)&unk_10109BF50);
      memcpy(v58, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v30 + 16))(v58, v28, v29);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v30 + 56))(v58, 0, 1, v29);
    }
    uint64_t v32 = v24[6];
    v33 = &v22[v32];
    v34 = &v23[v32];
    uint64_t v35 = v34[1];
    void *v33 = *v34;
    v33[1] = v35;
    uint64_t v36 = v24[7];
    v59 = &v22[v36];
    v37 = &v23[v36];
    unint64_t v38 = *(void *)&v23[v36 + 8];
    swift_bridgeObjectRetain();
    if (v38 >= 0xA)
    {
      if (v38 == 10)
      {
        *(_OWORD *)v59 = *v37;
      }
      else
      {
        *(void *)v59 = *(void *)v37;
        *((void *)v59 + 1) = v38;
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      *(_OWORD *)v59 = *v37;
    }
    v22[v24[8]] = v23[v24[8]];
    uint64_t v25 = v61;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v61 + 56))(v22, 0, 1, v24);
    uint64_t v20 = v60;
  }
  uint64_t v39 = *(int *)(v20 + 52);
  v40 = (unsigned char *)(a1 + v39);
  v41 = (unsigned char *)(a2 + v39);
  if (v63(v41, 1, v24))
  {
    uint64_t v42 = sub_100063814(&qword_1010B0040);
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    uint64_t v62 = v25;
    unsigned char *v40 = *v41;
    uint64_t v43 = v24[5];
    v44 = &v40[v43];
    v45 = &v41[v43];
    uint64_t v46 = type metadata accessor for URL();
    uint64_t v47 = *(void *)(v46 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
    {
      uint64_t v48 = sub_100063814((uint64_t *)&unk_10109BF50);
      memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v47 + 16))(v44, v45, v46);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
    }
    uint64_t v49 = v24[6];
    v50 = &v40[v49];
    v51 = &v41[v49];
    uint64_t v52 = v51[1];
    void *v50 = *v51;
    v50[1] = v52;
    uint64_t v53 = v24[7];
    v54 = &v40[v53];
    v55 = &v41[v53];
    unint64_t v56 = *(void *)&v41[v53 + 8];
    swift_bridgeObjectRetain();
    if (v56 > 0xA)
    {
      void *v54 = *v55;
      v54[1] = v56;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v54 = *(_OWORD *)v55;
    }
    v40[v24[8]] = v41[v24[8]];
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v62 + 56))(v40, 0, 1, v24);
  }
LABEL_29:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1005AB970(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1005A5A20(a1, type metadata accessor for LibraryImport.ViewModel);
    type metadata accessor for LibraryImport.ViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        uint64_t v5 = *(void *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v5)
        {
          uint64_t v6 = *(void *)(a2 + 72);
          *(void *)(a1 + 64) = v5;
          *(void *)(a1 + 72) = v6;
          swift_retain();
        }
        else
        {
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        }
        uint64_t v7 = *(void *)(a2 + 80);
        if (v7)
        {
          uint64_t v8 = *(void *)(a2 + 88);
          *(void *)(a1 + 80) = v7;
          *(void *)(a1 + 88) = v8;
          swift_retain();
          if (*(void *)(a2 + 128))
          {
LABEL_11:
            *(void *)(a1 + 96) = *(void *)(a2 + 96);
            *(void *)(a1 + 104) = *(void *)(a2 + 104);
            *(void *)(a1 + 112) = *(void *)(a2 + 112);
            *(void *)(a1 + 120) = *(void *)(a2 + 120);
            uint64_t v9 = *(void *)(a2 + 136);
            *(void *)(a1 + 128) = *(void *)(a2 + 128);
            *(void *)(a1 + 136) = v9;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
LABEL_14:
            *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
            uint64_t v12 = _s16ActionButtonViewV5ModelVMa(0);
            uint64_t v13 = *(int *)(v12 + 48);
            uint64_t v14 = (unsigned char *)(a1 + v13);
            uint64_t v15 = (unsigned char *)(a2 + v13);
            uint64_t v16 = (int *)_s12ClickMetricsVMa(0);
            uint64_t v17 = *((void *)v16 - 1);
            unint64_t v56 = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v17 + 48);
            if (v56(v15, 1, v16))
            {
              uint64_t v18 = sub_100063814(&qword_1010B0040);
              memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
            }
            else
            {
              uint64_t v53 = v12;
              uint64_t v54 = v17;
              *uint64_t v14 = *v15;
              uint64_t v19 = v16[5];
              v51 = &v14[v19];
              uint64_t v20 = &v15[v19];
              uint64_t v21 = type metadata accessor for URL();
              uint64_t v22 = *(void *)(v21 - 8);
              if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
              {
                uint64_t v23 = sub_100063814((uint64_t *)&unk_10109BF50);
                memcpy(v51, v20, *(void *)(*(void *)(v23 - 8) + 64));
              }
              else
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 16))(v51, v20, v21);
                (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 56))(v51, 0, 1, v21);
              }
              uint64_t v24 = v16[6];
              uint64_t v25 = &v14[v24];
              uint64_t v26 = &v15[v24];
              *uint64_t v25 = *v26;
              v25[1] = v26[1];
              uint64_t v27 = v16[7];
              uint64_t v52 = &v14[v27];
              v28 = &v15[v27];
              unint64_t v29 = *(void *)&v15[v27 + 8];
              swift_bridgeObjectRetain();
              BOOL v30 = v29 == 10;
              if (v29 >= 0xA)
              {
                uint64_t v12 = v53;
                if (v30)
                {
                  *(_OWORD *)uint64_t v52 = *(_OWORD *)v28;
                }
                else
                {
                  *(void *)uint64_t v52 = *(void *)v28;
                  *((void *)v52 + 1) = *((void *)v28 + 1);
                  swift_bridgeObjectRetain();
                }
              }
              else
              {
                *(_OWORD *)uint64_t v52 = *(_OWORD *)v28;
                uint64_t v12 = v53;
              }
              v14[v16[8]] = v15[v16[8]];
              uint64_t v17 = v54;
              (*(void (**)(unsigned char *, void, uint64_t, int *))(v54 + 56))(v14, 0, 1, v16);
            }
            uint64_t v31 = *(int *)(v12 + 52);
            uint64_t v32 = (unsigned char *)(a1 + v31);
            v33 = (unsigned char *)(a2 + v31);
            if (v56(v33, 1, v16))
            {
              uint64_t v34 = sub_100063814(&qword_1010B0040);
              memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
            }
            else
            {
              uint64_t v55 = v17;
              *uint64_t v32 = *v33;
              uint64_t v35 = v16[5];
              uint64_t v36 = &v32[v35];
              v37 = &v33[v35];
              uint64_t v38 = type metadata accessor for URL();
              uint64_t v39 = *(void *)(v38 - 8);
              if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
              {
                uint64_t v40 = sub_100063814((uint64_t *)&unk_10109BF50);
                memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
              }
              else
              {
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v39 + 16))(v36, v37, v38);
                (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
              }
              uint64_t v41 = v16[6];
              uint64_t v42 = &v32[v41];
              uint64_t v43 = &v33[v41];
              *uint64_t v42 = *v43;
              v42[1] = v43[1];
              uint64_t v44 = v16[7];
              v45 = &v32[v44];
              uint64_t v46 = &v33[v44];
              unint64_t v47 = *(void *)&v33[v44 + 8];
              swift_bridgeObjectRetain();
              BOOL v48 = v47 == 10;
              if (v47 >= 0xA)
              {
                uint64_t v49 = v55;
                if (v48)
                {
                  *(_OWORD *)v45 = *(_OWORD *)v46;
                }
                else
                {
                  *(void *)v45 = *(void *)v46;
                  *((void *)v45 + 1) = *((void *)v46 + 1);
                  swift_bridgeObjectRetain();
                }
              }
              else
              {
                *(_OWORD *)v45 = *(_OWORD *)v46;
                uint64_t v49 = v55;
              }
              v32[v16[8]] = v33[v16[8]];
              (*(void (**)(unsigned char *, void, uint64_t, int *))(v49 + 56))(v32, 0, 1, v16);
            }
            goto LABEL_30;
          }
        }
        else
        {
          *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
          if (*(void *)(a2 + 128)) {
            goto LABEL_11;
          }
        }
        long long v10 = *(_OWORD *)(a2 + 96);
        long long v11 = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 128) = v11;
        *(_OWORD *)(a1 + 96) = v10;
        goto LABEL_14;
      }
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
LABEL_30:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1005ABFA4(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = type metadata accessor for LibraryImport.ViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    long long v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    long long v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    long long v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    a1[8] = a2[8];
    *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
    uint64_t v9 = _s16ActionButtonViewV5ModelVMa(0);
    uint64_t v10 = *(int *)(v9 + 48);
    long long v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = (int *)_s12ClickMetricsVMa(0);
    uint64_t v14 = *((void *)v13 - 1);
    uint64_t v15 = *(unsigned int (**)(void, void, void))(v14 + 48);
    if (v15(v12, 1, v13))
    {
      uint64_t v16 = sub_100063814(&qword_1010B0040);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v34 = v15;
      uint64_t v35 = v9;
      uint64_t v36 = v14;
      *long long v11 = *v12;
      uint64_t v17 = v13[5];
      v33 = &v11[v17];
      uint64_t v18 = &v12[v17];
      uint64_t v19 = type metadata accessor for URL();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        uint64_t v21 = sub_100063814((uint64_t *)&unk_10109BF50);
        memcpy(v33, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 32))(v33, v18, v19);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v20 + 56))(v33, 0, 1, v19);
      }
      *(_OWORD *)&v11[v13[6]] = *(_OWORD *)&v12[v13[6]];
      *(_OWORD *)&v11[v13[7]] = *(_OWORD *)&v12[v13[7]];
      v11[v13[8]] = v12[v13[8]];
      uint64_t v14 = v36;
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v36 + 56))(v11, 0, 1, v13);
      uint64_t v15 = v34;
      uint64_t v9 = v35;
    }
    uint64_t v22 = *(int *)(v9 + 52);
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    if (v15(v24, 1, v13))
    {
      uint64_t v25 = sub_100063814(&qword_1010B0040);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      unsigned char *v23 = *v24;
      uint64_t v26 = v13[5];
      uint64_t v27 = &v23[v26];
      v28 = &v24[v26];
      uint64_t v29 = type metadata accessor for URL();
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        uint64_t v31 = sub_100063814((uint64_t *)&unk_10109BF50);
        memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      *(_OWORD *)&v23[v13[6]] = *(_OWORD *)&v24[v13[6]];
      *(_OWORD *)&v23[v13[7]] = *(_OWORD *)&v24[v13[7]];
      v23[v13[8]] = v24[v13[8]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v14 + 56))(v23, 0, 1, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1005AC3D4(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_1005A5A20((uint64_t)a1, type metadata accessor for LibraryImport.ViewModel);
    uint64_t v4 = type metadata accessor for LibraryImport.ViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      long long v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      long long v7 = a2[5];
      a1[4] = a2[4];
      a1[5] = v7;
      long long v8 = a2[7];
      a1[6] = a2[6];
      a1[7] = v8;
      a1[8] = a2[8];
      *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
      uint64_t v9 = _s16ActionButtonViewV5ModelVMa(0);
      uint64_t v10 = *(int *)(v9 + 48);
      long long v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = (int *)_s12ClickMetricsVMa(0);
      uint64_t v14 = *((void *)v13 - 1);
      uint64_t v15 = *(unsigned int (**)(void, void, void))(v14 + 48);
      if (v15(v12, 1, v13))
      {
        uint64_t v16 = sub_100063814(&qword_1010B0040);
        memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        v33 = v15;
        uint64_t v34 = v9;
        uint64_t v35 = v14;
        *long long v11 = *v12;
        uint64_t v17 = v13[5];
        uint64_t v36 = &v11[v17];
        uint64_t v18 = &v12[v17];
        uint64_t v19 = type metadata accessor for URL();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          uint64_t v21 = sub_100063814((uint64_t *)&unk_10109BF50);
          memcpy(v36, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 32))(v36, v18, v19);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v20 + 56))(v36, 0, 1, v19);
        }
        *(_OWORD *)&v11[v13[6]] = *(_OWORD *)&v12[v13[6]];
        *(_OWORD *)&v11[v13[7]] = *(_OWORD *)&v12[v13[7]];
        v11[v13[8]] = v12[v13[8]];
        uint64_t v14 = v35;
        (*(void (**)(unsigned char *, void, uint64_t, int *))(v35 + 56))(v11, 0, 1, v13);
        uint64_t v15 = v33;
        uint64_t v9 = v34;
      }
      uint64_t v22 = *(int *)(v9 + 52);
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      if (v15(v24, 1, v13))
      {
        uint64_t v25 = sub_100063814(&qword_1010B0040);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        unsigned char *v23 = *v24;
        uint64_t v26 = v13[5];
        uint64_t v27 = &v23[v26];
        v28 = &v24[v26];
        uint64_t v29 = type metadata accessor for URL();
        uint64_t v30 = *(void *)(v29 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          uint64_t v31 = sub_100063814((uint64_t *)&unk_10109BF50);
          memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v30 + 32))(v27, v28, v29);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        *(_OWORD *)&v23[v13[6]] = *(_OWORD *)&v24[v13[6]];
        *(_OWORD *)&v23[v13[7]] = *(_OWORD *)&v24[v13[7]];
        v23[v13[8]] = v24[v13[8]];
        (*(void (**)(unsigned char *, void, uint64_t, int *))(v14 + 56))(v23, 0, 1, v13);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1005AC828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005AC83C);
}

uint64_t sub_1005AC83C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LibraryImport.ViewModel(0);
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1005AC8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005AC8BC);
}

uint64_t sub_1005AC8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LibraryImport.ViewModel(0);
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1005AC92C()
{
  uint64_t result = type metadata accessor for LibraryImport.ViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for LinearProgressStyle()
{
  return &type metadata for LinearProgressStyle;
}

ValueMetadata *type metadata accessor for Specs.InProgressView.SubtitleModifier()
{
  return &type metadata for Specs.InProgressView.SubtitleModifier;
}

ValueMetadata *type metadata accessor for Specs.InProgressView()
{
  return &type metadata for Specs.InProgressView;
}

uint64_t getEnumTagSinglePayload for Corner(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Specs.InProgressView.TitleModifier(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Specs.InProgressView.TitleModifier()
{
  return &type metadata for Specs.InProgressView.TitleModifier;
}

ValueMetadata *type metadata accessor for Specs.ActionButtonView.ActionLabelModifier()
{
  return &type metadata for Specs.ActionButtonView.ActionLabelModifier;
}

ValueMetadata *type metadata accessor for Specs.ActionButtonView.SubtitleModifier()
{
  return &type metadata for Specs.ActionButtonView.SubtitleModifier;
}

ValueMetadata *type metadata accessor for Specs()
{
  return &type metadata for Specs;
}

ValueMetadata *type metadata accessor for Specs.ActionButtonView()
{
  return &type metadata for Specs.ActionButtonView;
}

ValueMetadata *type metadata accessor for Specs.ActionButtonView.TitleModifier()
{
  return &type metadata for Specs.ActionButtonView.TitleModifier;
}

unint64_t sub_1005ACA98()
{
  unint64_t result = qword_1010B04E0;
  if (!qword_1010B04E0)
  {
    sub_10006389C(&qword_1010B0290);
    sub_1005AA040(&qword_1010B04E8, &qword_1010B0288, (void (*)(void))sub_1005ACB64);
    sub_100063858(&qword_1010B0518, &qword_1010B0520);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B04E0);
  }
  return result;
}

unint64_t sub_1005ACB64()
{
  unint64_t result = qword_1010B04F0;
  if (!qword_1010B04F0)
  {
    sub_10006389C(&qword_1010B0280);
    sub_1005AA040(&qword_1010B04F8, &qword_1010B0278, (void (*)(void))sub_1005ACC30);
    sub_100063858(&qword_1010B0510, &qword_1010B0298);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B04F0);
  }
  return result;
}

unint64_t sub_1005ACC30()
{
  unint64_t result = qword_1010B0500;
  if (!qword_1010B0500)
  {
    sub_10006389C(&qword_1010B0270);
    sub_1005A17D8(&qword_1010B0508, (void (*)(uint64_t))_s11ContentViewVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0500);
  }
  return result;
}

uint64_t sub_1005ACCDC()
{
  return sub_1005AA040(&qword_1010B0528, &qword_1010B0328, (void (*)(void))sub_1005ACD20);
}

unint64_t sub_1005ACD20()
{
  unint64_t result = qword_1010B0530;
  if (!qword_1010B0530)
  {
    sub_10006389C(&qword_1010B0318);
    sub_100063858(&qword_1010B0538, &qword_1010B0310);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0530);
  }
  return result;
}

unint64_t sub_1005ACDC4()
{
  unint64_t result = qword_1010B0540;
  if (!qword_1010B0540)
  {
    sub_10006389C(&qword_1010B0380);
    sub_1005ACE64();
    sub_100063858(&qword_1010B0578, &qword_1010B0398);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0540);
  }
  return result;
}

unint64_t sub_1005ACE64()
{
  unint64_t result = qword_1010B0548;
  if (!qword_1010B0548)
  {
    sub_10006389C(&qword_1010B0378);
    sub_1005AA040(&qword_1010B0550, &qword_1010B0370, (void (*)(void))sub_1005ACF30);
    sub_100063858(&qword_1010B0568, &qword_1010B0570);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0548);
  }
  return result;
}

unint64_t sub_1005ACF30()
{
  unint64_t result = qword_1010B0558;
  if (!qword_1010B0558)
  {
    sub_10006389C(&qword_1010B0368);
    sub_100063858(&qword_1010B0560, &qword_1010B0360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0558);
  }
  return result;
}

uint64_t sub_1005ACFD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005ACFEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005AD008()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005AD024()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005AD040()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005AD05C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005AD078()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005AD094()
{
  return swift_deallocObject();
}

uint64_t sub_1005AD0A4()
{
  return sub_1005A2B98();
}

uint64_t sub_1005AD0AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005AD108(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005AD13C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1005AD184()
{
  unint64_t result = qword_1010B05B8;
  if (!qword_1010B05B8)
  {
    sub_10006389C(&qword_1010B05A8);
    sub_1005AD224();
    sub_100063858((unint64_t *)&unk_10109CE00, (uint64_t *)&unk_1010A8A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B05B8);
  }
  return result;
}

unint64_t sub_1005AD224()
{
  unint64_t result = qword_1010B05C0;
  if (!qword_1010B05C0)
  {
    sub_10006389C(&qword_1010B05A0);
    sub_1005AD2C4();
    sub_100063858((unint64_t *)&unk_1010A1CC0, &qword_101099C90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B05C0);
  }
  return result;
}

unint64_t sub_1005AD2C4()
{
  unint64_t result = qword_1010B05C8;
  if (!qword_1010B05C8)
  {
    sub_10006389C(&qword_1010B0598);
    sub_1005AD364();
    sub_100063858((unint64_t *)&unk_1010B05E0, &qword_10109DE70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B05C8);
  }
  return result;
}

unint64_t sub_1005AD364()
{
  unint64_t result = qword_1010B05D0;
  if (!qword_1010B05D0)
  {
    sub_10006389C(&qword_1010B0590);
    sub_100063858(&qword_1010B05D8, &qword_1010B05B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B05D0);
  }
  return result;
}

uint64_t sub_1005AD404()
{
  return sub_1005AD440(&qword_1010B0618, (uint64_t *)&unk_1010B0608, (void (*)(void))sub_1005AD4C8, (void (*)(void))sub_1005AD5BC);
}

uint64_t sub_1005AD440(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005AD4C8()
{
  unint64_t result = qword_1010B0620;
  if (!qword_1010B0620)
  {
    sub_10006389C(&qword_1010B0628);
    sub_1005AD568();
    sub_100063858(&qword_10109D700, &qword_1010B0640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0620);
  }
  return result;
}

unint64_t sub_1005AD568()
{
  unint64_t result = qword_1010B0630;
  if (!qword_1010B0630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0630);
  }
  return result;
}

unint64_t sub_1005AD5BC()
{
  unint64_t result = qword_1010B0648;
  if (!qword_1010B0648)
  {
    sub_10006389C(&qword_1010B05F0);
    sub_1005A17D8((unint64_t *)&unk_1010B0650, (void (*)(uint64_t))_s16ActionButtonViewVMa);
    sub_100063858(&qword_10109D700, &qword_1010B0640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0648);
  }
  return result;
}

unint64_t sub_1005AD68C()
{
  unint64_t result = qword_1010B06C8;
  if (!qword_1010B06C8)
  {
    sub_10006389C(&qword_1010B06B8);
    sub_1005AD72C();
    sub_100063858((unint64_t *)&unk_10109CE00, (uint64_t *)&unk_1010A8A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B06C8);
  }
  return result;
}

unint64_t sub_1005AD72C()
{
  unint64_t result = qword_1010B06D0;
  if (!qword_1010B06D0)
  {
    sub_10006389C(&qword_1010B06B0);
    sub_1005AD7CC();
    sub_100063858(&qword_10109CF08, &qword_10109CF10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B06D0);
  }
  return result;
}

unint64_t sub_1005AD7CC()
{
  unint64_t result = qword_1010B06D8;
  if (!qword_1010B06D8)
  {
    sub_10006389C(&qword_1010B06A8);
    sub_1005AD86C();
    sub_100063858((unint64_t *)&unk_1010A1CC0, &qword_101099C90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B06D8);
  }
  return result;
}

unint64_t sub_1005AD86C()
{
  unint64_t result = qword_1010B06E0;
  if (!qword_1010B06E0)
  {
    sub_10006389C(&qword_1010B06A0);
    sub_1005AD90C();
    sub_100063858((unint64_t *)&unk_1010B05E0, &qword_10109DE70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B06E0);
  }
  return result;
}

unint64_t sub_1005AD90C()
{
  unint64_t result = qword_1010B06E8;
  if (!qword_1010B06E8)
  {
    sub_10006389C(&qword_1010B0698);
    sub_100063858(&qword_1010B06F0, &qword_1010B06C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B06E8);
  }
  return result;
}

unint64_t sub_1005AD9AC()
{
  unint64_t result = qword_1010B0758;
  if (!qword_1010B0758)
  {
    sub_10006389C(&qword_1010B0748);
    sub_1005ADA4C();
    sub_100063858((unint64_t *)&unk_10109CE00, (uint64_t *)&unk_1010A8A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0758);
  }
  return result;
}

unint64_t sub_1005ADA4C()
{
  unint64_t result = qword_1010B0760;
  if (!qword_1010B0760)
  {
    sub_10006389C(&qword_1010B0740);
    sub_1005ADAEC();
    sub_100063858(&qword_10109CF08, &qword_10109CF10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0760);
  }
  return result;
}

unint64_t sub_1005ADAEC()
{
  unint64_t result = qword_1010B0768;
  if (!qword_1010B0768)
  {
    sub_10006389C(&qword_1010B0738);
    sub_1005ADB8C();
    sub_100063858((unint64_t *)&unk_1010A1CC0, &qword_101099C90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0768);
  }
  return result;
}

unint64_t sub_1005ADB8C()
{
  unint64_t result = qword_1010B0770;
  if (!qword_1010B0770)
  {
    sub_10006389C(&qword_1010B0730);
    sub_1005ADC2C();
    sub_100063858((unint64_t *)&unk_1010B05E0, &qword_10109DE70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0770);
  }
  return result;
}

unint64_t sub_1005ADC2C()
{
  unint64_t result = qword_1010B0778;
  if (!qword_1010B0778)
  {
    sub_10006389C(&qword_1010B0728);
    sub_100063858(&qword_1010B0780, &qword_1010B0750);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0778);
  }
  return result;
}

unint64_t sub_1005ADCD0()
{
  unint64_t result = qword_1010B0788;
  if (!qword_1010B0788)
  {
    sub_10006389C(&qword_1010B0790);
    sub_100063858(&qword_1010B0798, &qword_1010B07A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0788);
  }
  return result;
}

uint64_t sub_1005ADD70(uint64_t a1)
{
  return sub_1005AE124(a1, &qword_1010B05A8, (void (*)(void))sub_1005AD184);
}

uint64_t sub_1005ADD90()
{
  return sub_1005AD440(&qword_1010B07A8, &qword_1010B07B0, (void (*)(void))sub_1005AD404, (void (*)(void))sub_10029AB50);
}

unint64_t sub_1005ADDE4()
{
  unint64_t result = qword_1010B07B8;
  if (!qword_1010B07B8)
  {
    sub_10006389C(&qword_1010B0690);
    sub_1005ADE84();
    sub_100063858((unint64_t *)&unk_10109CE00, (uint64_t *)&unk_1010A8A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B07B8);
  }
  return result;
}

unint64_t sub_1005ADE84()
{
  unint64_t result = qword_1010B07C0;
  if (!qword_1010B07C0)
  {
    sub_10006389C(&qword_1010B0680);
    sub_1005ADF24();
    sub_100063858(&qword_10109CF08, &qword_10109CF10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B07C0);
  }
  return result;
}

unint64_t sub_1005ADF24()
{
  unint64_t result = qword_1010B07C8;
  if (!qword_1010B07C8)
  {
    sub_10006389C(&qword_1010B0678);
    sub_1005ADFC4();
    sub_100063858((unint64_t *)&unk_1010A1CC0, &qword_101099C90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B07C8);
  }
  return result;
}

unint64_t sub_1005ADFC4()
{
  unint64_t result = qword_1010B07D0;
  if (!qword_1010B07D0)
  {
    sub_10006389C(&qword_1010B0670);
    sub_1005AE064();
    sub_100063858((unint64_t *)&unk_1010B05E0, &qword_10109DE70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B07D0);
  }
  return result;
}

unint64_t sub_1005AE064()
{
  unint64_t result = qword_1010B07D8;
  if (!qword_1010B07D8)
  {
    sub_10006389C(&qword_1010B0668);
    sub_100063858(&qword_1010B07E0, &qword_1010B0688);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B07D8);
  }
  return result;
}

uint64_t sub_1005AE104(uint64_t a1)
{
  return sub_1005AE124(a1, &qword_1010B06B8, (void (*)(void))sub_1005AD68C);
}

uint64_t sub_1005AE124(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1005AE188()
{
  unint64_t result = qword_1010B07E8;
  if (!qword_1010B07E8)
  {
    sub_10006389C(&qword_1010B0720);
    sub_1005AE228();
    sub_100063858((unint64_t *)&unk_10109CE00, (uint64_t *)&unk_1010A8A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B07E8);
  }
  return result;
}

unint64_t sub_1005AE228()
{
  unint64_t result = qword_1010B07F0;
  if (!qword_1010B07F0)
  {
    sub_10006389C(&qword_1010B0710);
    sub_1005AE2C8();
    sub_100063858(&qword_10109CF08, &qword_10109CF10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B07F0);
  }
  return result;
}

unint64_t sub_1005AE2C8()
{
  unint64_t result = qword_1010B07F8;
  if (!qword_1010B07F8)
  {
    sub_10006389C(&qword_1010B0708);
    sub_1005AE368();
    sub_100063858((unint64_t *)&unk_1010A1CC0, &qword_101099C90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B07F8);
  }
  return result;
}

unint64_t sub_1005AE368()
{
  unint64_t result = qword_1010B0800;
  if (!qword_1010B0800)
  {
    sub_10006389C(&qword_1010B0700);
    sub_1005AE408();
    sub_100063858((unint64_t *)&unk_1010B05E0, &qword_10109DE70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0800);
  }
  return result;
}

unint64_t sub_1005AE408()
{
  unint64_t result = qword_1010B0808;
  if (!qword_1010B0808)
  {
    sub_10006389C(&qword_1010B06F8);
    sub_100063858((unint64_t *)&unk_1010B0810, &qword_1010B0718);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0808);
  }
  return result;
}

uint64_t sub_1005AE4A8(uint64_t a1)
{
  return sub_1005AE124(a1, &qword_1010B0748, (void (*)(void))sub_1005AD9AC);
}

uint64_t sub_1005AE4D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005AE500(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of AlbumFilter.id.getter, a2);
}

uint64_t sub_1005AE4E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005AE500(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of StationFilter.id.getter, a2);
}

uint64_t sub_1005AE500@<X0>(void *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_100068990(a1, v5);
  uint64_t result = a2(v5, v6);
  *a3 = result;
  a3[1] = v8;
  return result;
}

uint64_t sub_1005AE558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  uint64_t v5 = type metadata accessor for Artwork.ImageFormat();
  v4[20] = v5;
  v4[21] = *(void *)(v5 - 8);
  v4[22] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Artwork.CropStyle();
  v4[23] = v6;
  v4[24] = *(void *)(v6 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Artwork();
  v4[26] = v7;
  v4[27] = *(void *)(v7 - 8);
  v4[28] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  v4[29] = v8;
  v4[30] = *(void *)(v8 - 8);
  v4[31] = swift_task_alloc();
  sub_100063814(&qword_10109A7E8);
  v4[32] = swift_task_alloc();
  uint64_t v9 = sub_100063814(&qword_10109A7F0);
  v4[33] = v9;
  v4[34] = *(void *)(v9 - 8);
  v4[35] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Station();
  v4[36] = v10;
  v4[37] = *(void *)(v10 - 8);
  v4[38] = swift_task_alloc();
  uint64_t v11 = sub_100063814(&qword_10109A7F8);
  v4[39] = v11;
  v4[40] = *(void *)(v11 - 8);
  v4[41] = swift_task_alloc();
  uint64_t v12 = sub_100063814(&qword_10109A800);
  v4[42] = v12;
  v4[43] = *(void *)(v12 - 8);
  v4[44] = swift_task_alloc();
  sub_100063814(&qword_10109EC90);
  v4[45] = swift_task_alloc();
  uint64_t v13 = sub_100063814(&qword_1010A88C0);
  v4[46] = v13;
  v4[47] = *(void *)(v13 - 8);
  v4[48] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for Playlist();
  v4[49] = v14;
  v4[50] = *(void *)(v14 - 8);
  v4[51] = swift_task_alloc();
  uint64_t v15 = sub_100063814(&qword_10109A840);
  v4[52] = v15;
  v4[53] = *(void *)(v15 - 8);
  v4[54] = swift_task_alloc();
  uint64_t v16 = sub_100063814((uint64_t *)&unk_1010BB500);
  v4[55] = v16;
  v4[56] = *(void *)(v16 - 8);
  v4[57] = swift_task_alloc();
  sub_100063814((uint64_t *)&unk_10109BF60);
  v4[58] = swift_task_alloc();
  uint64_t v17 = sub_100063814((uint64_t *)&unk_1010A1870);
  v4[59] = v17;
  v4[60] = *(void *)(v17 - 8);
  v4[61] = swift_task_alloc();
  uint64_t v18 = type metadata accessor for Song();
  v4[62] = v18;
  v4[63] = *(void *)(v18 - 8);
  v4[64] = swift_task_alloc();
  uint64_t v19 = sub_100063814((uint64_t *)&unk_1010A9AD0);
  v4[65] = v19;
  v4[66] = *(void *)(v19 - 8);
  v4[67] = swift_task_alloc();
  uint64_t v20 = sub_100063814(&qword_10109A808);
  v4[68] = v20;
  v4[69] = *(void *)(v20 - 8);
  v4[70] = swift_task_alloc();
  sub_100063814((uint64_t *)&unk_10109C800);
  v4[71] = swift_task_alloc();
  uint64_t v21 = sub_100063814((uint64_t *)&unk_10109C770);
  v4[72] = v21;
  v4[73] = *(void *)(v21 - 8);
  v4[74] = swift_task_alloc();
  uint64_t v22 = type metadata accessor for Album();
  v4[75] = v22;
  v4[76] = *(void *)(v22 - 8);
  v4[77] = swift_task_alloc();
  uint64_t v23 = sub_100063814((uint64_t *)&unk_1010A9AC0);
  v4[78] = v23;
  v4[79] = *(void *)(v23 - 8);
  v4[80] = swift_task_alloc();
  uint64_t v24 = sub_100063814(&qword_10109A898);
  v4[81] = v24;
  v4[82] = *(void *)(v24 - 8);
  v4[83] = swift_task_alloc();
  sub_100063814((uint64_t *)&unk_10109EF90);
  v4[84] = swift_task_alloc();
  v4[85] = swift_task_alloc();
  uint64_t v25 = type metadata accessor for Logger();
  v4[86] = v25;
  v4[87] = *(void *)(v25 - 8);
  v4[88] = swift_task_alloc();
  v4[89] = swift_task_alloc();
  v4[90] = swift_task_alloc();
  v4[91] = swift_task_alloc();
  v4[92] = swift_task_alloc();
  v4[93] = type metadata accessor for MainActor();
  v4[94] = static MainActor.shared.getter();
  uint64_t v27 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[95] = v27;
  v4[96] = v26;
  return _swift_task_switch(sub_1005AEEEC, v27, v26);
}

uint64_t sub_1005AEEEC()
{
  if ([*(id *)(v0 + 136) hasLoadedValuesForPropertySet:*(void *)(v0 + 152)])
  {
    id v1 = *(id *)(v0 + 136);
    v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 944) = v2;
    void *v2 = v0;
    v2[1] = sub_1005B2364;
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v4 = *(void *)(v0 + 136);
    return GroupActivitiesManager.Activity.Metadata.init(modelObject:)(v3, v4);
  }
  uint64_t v6 = (uint64_t *)MPIdentifierSet.Purpose.Options.local.unsafeMutableAddressor();
  MPModelObject.bestIdentifier(for:)(*v6, 1u);
  uint64_t v7 = *(void **)(v0 + 136);
  if (v8)
  {
    uint64_t v10 = *(void *)(v0 + 144);
    uint64_t v9 = *(void *)(v0 + 152);
    swift_bridgeObjectRelease();
    id v11 = [objc_allocWithZone((Class)MPModelLibraryRequest) init];
    *(void *)(v0 + 776) = v11;
    sub_100063814((uint64_t *)&unk_1010A0980);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_100E251C0;
    *(void *)(v12 + 32) = [v7 identifiers];
    specialized Array._endMutation()();
    sub_1005B5750();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v11 setAllowedItemIdentifiers:isa];

    id v14 = v11;
    NSString v15 = String._bridgeToObjectiveC()();
    [v14 setLabel:v15];

    [v14 setItemKind:v10];
    [v14 setItemProperties:v9];
    uint64_t v16 = static MainActor.shared.getter();
    *(void *)(v0 + 784) = v16;
    uint64_t v17 = swift_task_alloc();
    *(void *)(v0 + 792) = v17;
    *(void *)(v17 + 16) = v14;
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 800) = v18;
    uint64_t v19 = sub_100063814(&qword_1010B09D8);
    *uint64_t v18 = v0;
    v18[1] = sub_1005AF9D0;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 120, v16, &protocol witness table for MainActor, 0xD000000000000026, 0x8000000100DC1010, sub_1005B5790, v17, v19);
  }
  uint64_t v20 = *(void *)(v0 + 736);
  uint64_t v21 = *(void *)(v0 + 696);
  uint64_t v22 = *(void *)(v0 + 688);
  uint64_t v23 = Logger.groupActivities.unsafeMutableAddressor();
  *(void *)(v0 + 824) = v23;
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
  *(void *)(v0 + 832) = v24;
  *(void *)(v0 + 840) = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v24(v20, v23, v22);
  id v25 = v7;
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v29 = *(void **)(v0 + 136);
  if (v28)
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 138543362;
    *(void *)(v0 + 112) = v29;
    id v32 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v31 = v29;

    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Fetching metadata for modelObject=%{public}@", v30, 0xCu);
    sub_100063814((uint64_t *)&unk_10109C1D0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v33 = *(void *)(v0 + 736);
  uint64_t v34 = *(void *)(v0 + 696);
  uint64_t v35 = *(void *)(v0 + 688);
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  *(void *)(v0 + 848) = v36;
  *(void *)(v0 + 856) = (v34 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v36(v33, v35);
  v37 = (uint64_t *)MPIdentifierSet.Purpose.Options.catalog.unsafeMutableAddressor();
  MPModelObject.bestIdentifier(for:)(*v37, 1u);
  if (v38)
  {
    uint64_t v39 = MusicItemID.init(rawValue:)();
    uint64_t v41 = v40;
    self;
    if (swift_dynamicCastObjCClass())
    {
      swift_getKeyPath();
      *(void *)(v0 + 32) = v39;
      *(void *)(v0 + 40) = v41;
      sub_1005B5708(&qword_1010A99B0, (void (*)(uint64_t))&type metadata accessor for Album);
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      uint64_t v42 = (void *)swift_task_alloc();
      *(void *)(v0 + 864) = v42;
      *uint64_t v42 = v0;
      v42[1] = sub_1005B019C;
      uint64_t v43 = *(void *)(v0 + 648);
      uint64_t v44 = *(void *)(v0 + 640);
LABEL_25:
      return MusicCatalogResourceRequest.response()(v44, v43);
    }
    self;
    if (swift_dynamicCastObjCClass())
    {
      swift_getKeyPath();
      *(void *)(v0 + 64) = v39;
      *(void *)(v0 + 72) = v41;
      sub_1005B5708((unint64_t *)&unk_1010A1850, (void (*)(uint64_t))&type metadata accessor for Song);
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      uint64_t v49 = (void *)swift_task_alloc();
      *(void *)(v0 + 880) = v49;
      *uint64_t v49 = v0;
      v49[1] = sub_1005B08D8;
      uint64_t v43 = *(void *)(v0 + 544);
      uint64_t v44 = *(void *)(v0 + 536);
      goto LABEL_25;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {
      swift_getKeyPath();
      *(void *)(v0 + 48) = v39;
      *(void *)(v0 + 56) = v41;
      sub_1005B5708(&qword_10109A930, (void (*)(uint64_t))&type metadata accessor for Playlist);
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      v50 = (void *)swift_task_alloc();
      *(void *)(v0 + 896) = v50;
      void *v50 = v0;
      v50[1] = sub_1005B1004;
      uint64_t v44 = *(void *)(v0 + 432);
      uint64_t v43 = *(void *)(v0 + 440);
      goto LABEL_25;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {
      swift_getKeyPath();
      *(void *)(v0 + 16) = v39;
      *(void *)(v0 + 24) = v41;
      sub_1005B5708(&qword_10109A918, (void (*)(uint64_t))&type metadata accessor for Station);
      MusicCatalogResourceRequest.init<A>(matching:equalTo:)();
      v51 = (void *)swift_task_alloc();
      *(void *)(v0 + 912) = v51;
      void *v51 = v0;
      v51[1] = sub_1005B173C;
      uint64_t v44 = *(void *)(v0 + 328);
      uint64_t v43 = *(void *)(v0 + 336);
      goto LABEL_25;
    }
    uint64_t v52 = *(void *)(v0 + 232);
    uint64_t v53 = *(void *)(v0 + 240);
    uint64_t v54 = *(void *)(v0 + 128);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v54, 1, 1, v52);
  }
  else
  {
    uint64_t v45 = *(void *)(v0 + 232);
    uint64_t v46 = *(void *)(v0 + 240);
    uint64_t v47 = *(void *)(v0 + 128);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v47, 1, 1, v45);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v48 = *(uint64_t (**)(void))(v0 + 8);
  return v48();
}

uint64_t sub_1005AF9D0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 768);
  uint64_t v3 = *(void *)(v1 + 760);
  return _swift_task_switch(sub_1005AFB30, v3, v2);
}

uint64_t sub_1005AFB30()
{
  uint64_t v1 = *(void **)(v0 + 120);
  *(void *)(v0 + 808) = v1;
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 816) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1005AFE20;
    uint64_t v4 = *(void *)(v0 + 128);
    return GroupActivitiesManager.Activity.Metadata.init(modelObject:)(v4, (uint64_t)v2);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 232);
    uint64_t v7 = *(void *)(v0 + 240);
    uint64_t v8 = *(void *)(v0 + 128);

    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v8, 1, 1, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_1005AFE20()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 768);
  uint64_t v3 = *(void *)(v1 + 760);
  return _swift_task_switch(sub_1005AFF40, v3, v2);
}

uint64_t sub_1005AFF40()
{
  uint64_t v1 = *(void **)(v0 + 808);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 128);

  swift_release();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v4, 0, 1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1005B019C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 872) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 768);
  uint64_t v4 = *(void *)(v2 + 760);
  if (v0) {
    uint64_t v5 = sub_1005B26C8;
  }
  else {
    uint64_t v5 = sub_1005B02D8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1005B02D8()
{
  uint64_t v1 = v0[76];
  uint64_t v2 = v0[75];
  uint64_t v3 = v0[74];
  uint64_t v4 = v0[73];
  uint64_t v5 = v0[72];
  uint64_t v6 = v0[71];
  MusicCatalogResourceResponse.items.getter();
  sub_1002F5A30(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v6, 1, v2);
  uint64_t v55 = v0[83];
  uint64_t v8 = v0[82];
  uint64_t v9 = v0[81];
  uint64_t v10 = v0[80];
  uint64_t v11 = v0[79];
  uint64_t v12 = v0[78];
  if (v7 != 1)
  {
    uint64_t v17 = v0[77];
    uint64_t v18 = v0[76];
    uint64_t v19 = v0[75];
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 32))(v17, v0[71], v19);
    uint64_t v20 = Album.title.getter();
    uint64_t v51 = v21;
    uint64_t v52 = v20;
    uint64_t v22 = Album.artistName.getter();
    uint64_t v53 = v23;
    uint64_t v54 = v22;
    Album.artwork.getter();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v55, v9);
    uint64_t v24 = v0[85];
    uint64_t v25 = v0[84];
    uint64_t v26 = (uint64_t *)v0[31];
    uint64_t v27 = v0[26];
    uint64_t v28 = v0[27];
    GroupActivitiesManager.Activity.Metadata.init()((uint64_t)v26);
    swift_bridgeObjectRelease();
    *uint64_t v26 = v52;
    v26[1] = v51;
    swift_bridgeObjectRelease();
    v26[2] = v54;
    v26[3] = v53;
    sub_100131228(v24, v25);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v25, 1, v27) == 1)
    {
      uint64_t v29 = v0[84];
      sub_1000637B8(v0[85], (uint64_t *)&unk_10109EF90);
      swift_release();
      sub_1000637B8(v29, (uint64_t *)&unk_10109EF90);
      uint64_t v31 = v0[30];
      uint64_t v30 = v0[31];
      uint64_t v32 = v0[29];
      uint64_t v33 = v0[16];
      sub_1005B55D0(v30, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v33, 0, 1, v32);
      sub_1005B5634(v30);
      goto LABEL_5;
    }
    uint64_t v36 = v0[31];
    uint64_t v37 = v0[29];
    uint64_t v38 = (*(uint64_t (**)(void, void, void))(v0[27] + 32))(v0[28], v0[84], v0[26]);
    uint64_t v42 = (double *)(v36 + *(int *)(v37 + 32));
    double v43 = *v42;
    if ((~*(void *)v42 & 0x7FF0000000000000) != 0)
    {
      if (v43 > -9.22337204e18)
      {
        if (v43 < 9.22337204e18)
        {
          double v44 = v42[1];
          if ((~*(void *)&v44 & 0x7FF0000000000000) != 0)
          {
            if (v44 > -9.22337204e18)
            {
              if (v44 < 9.22337204e18)
              {
                uint64_t v45 = (uint64_t)v43;
                uint64_t v47 = v0[21];
                uint64_t v46 = v0[22];
                uint64_t v48 = v0[20];
                uint64_t v49 = (uint64_t)v44;
                static Artwork.CropStyle.sourceSize.getter();
                (*(void (**)(uint64_t, void, uint64_t))(v47 + 104))(v46, enum case for Artwork.ImageFormat.jpeg(_:), v48);
                v50 = (void *)swift_task_alloc();
                v0[116] = v50;
                void *v50 = v0;
                v50[1] = sub_1005B1E74;
                uint64_t v40 = v0[25];
                uint64_t v41 = v0[22];
                uint64_t v38 = v45;
                uint64_t v39 = v49;
                return Artwork.image(width:height:cropStyle:format:)(v38, v39, v40, v41);
              }
LABEL_22:
              __break(1u);
              return Artwork.image(width:height:cropStyle:format:)(v38, v39, v40, v41);
            }
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v13 = v0[71];
  uint64_t v15 = v0[29];
  uint64_t v14 = v0[30];
  uint64_t v16 = v0[16];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v55, v9);
  sub_1000637B8(v13, (uint64_t *)&unk_10109C800);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v16, 1, 1, v15);
LABEL_5:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v34 = (uint64_t (*)(void))v0[1];
  return v34();
}

uint64_t sub_1005B08D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 888) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 768);
  uint64_t v4 = *(void *)(v2 + 760);
  if (v0) {
    uint64_t v5 = sub_1005B2AAC;
  }
  else {
    uint64_t v5 = sub_1005B0A14;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1005B0A14()
{
  uint64_t v1 = v0[62];
  uint64_t v2 = v0[63];
  uint64_t v4 = v0[60];
  uint64_t v3 = v0[61];
  uint64_t v6 = v0[58];
  uint64_t v5 = v0[59];
  MusicCatalogResourceResponse.items.getter();
  sub_1002F5D30(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1);
  uint64_t v55 = v0[70];
  uint64_t v8 = v0[69];
  uint64_t v9 = v0[68];
  uint64_t v10 = v0[67];
  uint64_t v11 = v0[66];
  uint64_t v12 = v0[65];
  if (v7 != 1)
  {
    uint64_t v17 = v0[63];
    uint64_t v18 = v0[64];
    uint64_t v19 = v0[62];
    (*(void (**)(uint64_t, void, uint64_t))(v17 + 32))(v18, v0[58], v19);
    uint64_t v20 = Song.title.getter();
    uint64_t v51 = v21;
    uint64_t v52 = v20;
    uint64_t v22 = Song.artistName.getter();
    uint64_t v53 = v23;
    uint64_t v54 = v22;
    Song.artwork.getter();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v55, v9);
    uint64_t v24 = v0[85];
    uint64_t v25 = v0[84];
    uint64_t v26 = (uint64_t *)v0[31];
    uint64_t v27 = v0[26];
    uint64_t v28 = v0[27];
    GroupActivitiesManager.Activity.Metadata.init()((uint64_t)v26);
    swift_bridgeObjectRelease();
    *uint64_t v26 = v52;
    v26[1] = v51;
    swift_bridgeObjectRelease();
    v26[2] = v54;
    v26[3] = v53;
    sub_100131228(v24, v25);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v25, 1, v27) == 1)
    {
      uint64_t v29 = v0[84];
      sub_1000637B8(v0[85], (uint64_t *)&unk_10109EF90);
      swift_release();
      sub_1000637B8(v29, (uint64_t *)&unk_10109EF90);
      uint64_t v31 = v0[30];
      uint64_t v30 = v0[31];
      uint64_t v32 = v0[29];
      uint64_t v33 = v0[16];
      sub_1005B55D0(v30, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v33, 0, 1, v32);
      sub_1005B5634(v30);
      goto LABEL_5;
    }
    uint64_t v36 = v0[31];
    uint64_t v37 = v0[29];
    uint64_t v38 = (*(uint64_t (**)(void, void, void))(v0[27] + 32))(v0[28], v0[84], v0[26]);
    uint64_t v42 = (double *)(v36 + *(int *)(v37 + 32));
    double v43 = *v42;
    if ((~*(void *)v42 & 0x7FF0000000000000) != 0)
    {
      if (v43 > -9.22337204e18)
      {
        if (v43 < 9.22337204e18)
        {
          double v44 = v42[1];
          if ((~*(void *)&v44 & 0x7FF0000000000000) != 0)
          {
            if (v44 > -9.22337204e18)
            {
              if (v44 < 9.22337204e18)
              {
                uint64_t v45 = (uint64_t)v43;
                uint64_t v47 = v0[21];
                uint64_t v46 = v0[22];
                uint64_t v48 = v0[20];
                uint64_t v49 = (uint64_t)v44;
                static Artwork.CropStyle.sourceSize.getter();
                (*(void (**)(uint64_t, void, uint64_t))(v47 + 104))(v46, enum case for Artwork.ImageFormat.jpeg(_:), v48);
                v50 = (void *)swift_task_alloc();
                v0[116] = v50;
                void *v50 = v0;
                v50[1] = sub_1005B1E74;
                uint64_t v40 = v0[25];
                uint64_t v41 = v0[22];
                uint64_t v38 = v45;
                uint64_t v39 = v49;
                return Artwork.image(width:height:cropStyle:format:)(v38, v39, v40, v41);
              }
LABEL_22:
              __break(1u);
              return Artwork.image(width:height:cropStyle:format:)(v38, v39, v40, v41);
            }
LABEL_21:
            __break(1u);
            goto LABEL_22;
          }
LABEL_20:
          __break(1u);
          goto LABEL_21;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v13 = v0[58];
  uint64_t v15 = v0[29];
  uint64_t v14 = v0[30];
  uint64_t v16 = v0[16];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v55, v9);
  sub_1000637B8(v13, (uint64_t *)&unk_10109BF60);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v16, 1, 1, v15);
LABEL_5:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v34 = (uint64_t (*)(void))v0[1];
  return v34();
}

uint64_t sub_1005B1004()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 904) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 768);
  uint64_t v4 = *(void *)(v2 + 760);
  if (v0) {
    uint64_t v5 = sub_1005B2E90;
  }
  else {
    uint64_t v5 = sub_1005B1140;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1005B1140()
{
  uint64_t v1 = v0[49];
  uint64_t v2 = v0[50];
  uint64_t v4 = v0[47];
  uint64_t v3 = v0[48];
  uint64_t v6 = v0[45];
  uint64_t v5 = v0[46];
  MusicCatalogResourceResponse.items.getter();
  sub_1002F5CB8(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1);
  uint64_t v8 = v0[56];
  uint64_t v9 = v0[57];
  uint64_t v10 = v0[54];
  uint64_t v57 = v0[55];
  uint64_t v12 = v0[52];
  uint64_t v11 = v0[53];
  if (v7 != 1)
  {
    uint64_t v18 = v0[50];
    uint64_t v17 = v0[51];
    uint64_t v19 = v0[49];
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 32))(v17, v0[45], v19);
    uint64_t v20 = Playlist.name.getter();
    uint64_t v55 = v21;
    uint64_t v56 = v20;
    uint64_t v54 = Playlist.curatorName.getter();
    uint64_t v22 = v9;
    unint64_t v24 = v23;
    Playlist.artwork.getter();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v22, v57);
    uint64_t v25 = v0[85];
    uint64_t v26 = v0[84];
    uint64_t v27 = (uint64_t *)v0[31];
    uint64_t v28 = v0[26];
    uint64_t v29 = v0[27];
    GroupActivitiesManager.Activity.Metadata.init()((uint64_t)v27);
    swift_bridgeObjectRelease();
    if (v24) {
      uint64_t v30 = v54;
    }
    else {
      uint64_t v30 = 0;
    }
    *uint64_t v27 = v56;
    v27[1] = v55;
    if (v24) {
      unint64_t v31 = v24;
    }
    else {
      unint64_t v31 = 0xE000000000000000;
    }
    swift_bridgeObjectRelease();
    v27[2] = v30;
    v27[3] = v31;
    sub_100131228(v25, v26);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v26, 1, v28) == 1)
    {
      uint64_t v32 = v0[84];
      sub_1000637B8(v0[85], (uint64_t *)&unk_10109EF90);
      swift_release();
      sub_1000637B8(v32, (uint64_t *)&unk_10109EF90);
      uint64_t v34 = v0[30];
      uint64_t v33 = v0[31];
      uint64_t v35 = v0[29];
      uint64_t v36 = v0[16];
      sub_1005B55D0(v33, v36);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v36, 0, 1, v35);
      sub_1005B5634(v33);
      goto LABEL_11;
    }
    uint64_t v39 = v0[31];
    uint64_t v40 = v0[29];
    uint64_t v41 = (*(uint64_t (**)(void, void, void))(v0[27] + 32))(v0[28], v0[84], v0[26]);
    uint64_t v45 = (double *)(v39 + *(int *)(v40 + 32));
    double v46 = *v45;
    if ((~*(void *)v45 & 0x7FF0000000000000) != 0)
    {
      if (v46 > -9.22337204e18)
      {
        if (v46 < 9.22337204e18)
        {
          double v47 = v45[1];
          if ((~*(void *)&v47 & 0x7FF0000000000000) != 0)
          {
            if (v47 > -9.22337204e18)
            {
              if (v47 < 9.22337204e18)
              {
                uint64_t v48 = (uint64_t)v46;
                uint64_t v50 = v0[21];
                uint64_t v49 = v0[22];
                uint64_t v51 = v0[20];
                uint64_t v52 = (uint64_t)v47;
                static Artwork.CropStyle.sourceSize.getter();
                (*(void (**)(uint64_t, void, uint64_t))(v50 + 104))(v49, enum case for Artwork.ImageFormat.jpeg(_:), v51);
                uint64_t v53 = (void *)swift_task_alloc();
                v0[116] = v53;
                *uint64_t v53 = v0;
                v53[1] = sub_1005B1E74;
                uint64_t v43 = v0[25];
                uint64_t v44 = v0[22];
                uint64_t v41 = v48;
                uint64_t v42 = v52;
                return Artwork.image(width:height:cropStyle:format:)(v41, v42, v43, v44);
              }
LABEL_28:
              __break(1u);
              return Artwork.image(width:height:cropStyle:format:)(v41, v42, v43, v44);
            }
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v13 = v0[45];
  uint64_t v15 = v0[29];
  uint64_t v14 = v0[30];
  uint64_t v16 = v0[16];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v57);
  sub_1000637B8(v13, &qword_10109EC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v16, 1, 1, v15);
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = (uint64_t (*)(void))v0[1];
  return v37();
}

uint64_t sub_1005B173C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 920) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 768);
  uint64_t v4 = *(void *)(v2 + 760);
  if (v0) {
    uint64_t v5 = sub_1005B3270;
  }
  else {
    uint64_t v5 = sub_1005B1878;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1005B1878()
{
  uint64_t v1 = v0[36];
  uint64_t v2 = v0[37];
  uint64_t v4 = v0[34];
  uint64_t v3 = v0[35];
  uint64_t v6 = v0[32];
  uint64_t v5 = v0[33];
  MusicCatalogResourceResponse.items.getter();
  sub_1002F5D58(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1);
  uint64_t v8 = v0[43];
  uint64_t v9 = v0[44];
  uint64_t v10 = v0[41];
  uint64_t v57 = v0[42];
  uint64_t v12 = v0[39];
  uint64_t v11 = v0[40];
  if (v7 != 1)
  {
    uint64_t v18 = v0[37];
    uint64_t v17 = v0[38];
    uint64_t v19 = v0[36];
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 32))(v17, v0[32], v19);
    uint64_t v20 = Station.name.getter();
    uint64_t v55 = v21;
    uint64_t v56 = v20;
    uint64_t v54 = Station.stationProviderName.getter();
    uint64_t v22 = v9;
    unint64_t v24 = v23;
    Station.artwork.getter();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v22, v57);
    uint64_t v25 = v0[85];
    uint64_t v26 = v0[84];
    uint64_t v27 = (uint64_t *)v0[31];
    uint64_t v28 = v0[26];
    uint64_t v29 = v0[27];
    GroupActivitiesManager.Activity.Metadata.init()((uint64_t)v27);
    swift_bridgeObjectRelease();
    if (v24) {
      uint64_t v30 = v54;
    }
    else {
      uint64_t v30 = 0;
    }
    *uint64_t v27 = v56;
    v27[1] = v55;
    if (v24) {
      unint64_t v31 = v24;
    }
    else {
      unint64_t v31 = 0xE000000000000000;
    }
    swift_bridgeObjectRelease();
    v27[2] = v30;
    v27[3] = v31;
    sub_100131228(v25, v26);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v26, 1, v28) == 1)
    {
      uint64_t v32 = v0[84];
      sub_1000637B8(v0[85], (uint64_t *)&unk_10109EF90);
      swift_release();
      sub_1000637B8(v32, (uint64_t *)&unk_10109EF90);
      uint64_t v34 = v0[30];
      uint64_t v33 = v0[31];
      uint64_t v35 = v0[29];
      uint64_t v36 = v0[16];
      sub_1005B55D0(v33, v36);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v36, 0, 1, v35);
      sub_1005B5634(v33);
      goto LABEL_11;
    }
    uint64_t v39 = v0[31];
    uint64_t v40 = v0[29];
    uint64_t v41 = (*(uint64_t (**)(void, void, void))(v0[27] + 32))(v0[28], v0[84], v0[26]);
    uint64_t v45 = (double *)(v39 + *(int *)(v40 + 32));
    double v46 = *v45;
    if ((~*(void *)v45 & 0x7FF0000000000000) != 0)
    {
      if (v46 > -9.22337204e18)
      {
        if (v46 < 9.22337204e18)
        {
          double v47 = v45[1];
          if ((~*(void *)&v47 & 0x7FF0000000000000) != 0)
          {
            if (v47 > -9.22337204e18)
            {
              if (v47 < 9.22337204e18)
              {
                uint64_t v48 = (uint64_t)v46;
                uint64_t v50 = v0[21];
                uint64_t v49 = v0[22];
                uint64_t v51 = v0[20];
                uint64_t v52 = (uint64_t)v47;
                static Artwork.CropStyle.sourceSize.getter();
                (*(void (**)(uint64_t, void, uint64_t))(v50 + 104))(v49, enum case for Artwork.ImageFormat.jpeg(_:), v51);
                uint64_t v53 = (void *)swift_task_alloc();
                v0[116] = v53;
                *uint64_t v53 = v0;
                v53[1] = sub_1005B1E74;
                uint64_t v43 = v0[25];
                uint64_t v44 = v0[22];
                uint64_t v41 = v48;
                uint64_t v42 = v52;
                return Artwork.image(width:height:cropStyle:format:)(v41, v42, v43, v44);
              }
LABEL_28:
              __break(1u);
              return Artwork.image(width:height:cropStyle:format:)(v41, v42, v43, v44);
            }
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v13 = v0[32];
  uint64_t v15 = v0[29];
  uint64_t v14 = v0[30];
  uint64_t v16 = v0[16];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v57);
  sub_1000637B8(v13, &qword_10109A7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v16, 1, 1, v15);
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = (uint64_t (*)(void))v0[1];
  return v37();
}

uint64_t sub_1005B1E74(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v3 = *(void **)v2;
  uint64_t v5 = *(void *)(*(void *)v2 + 192);
  uint64_t v6 = *(void *)(*(void *)v2 + 168);
  swift_task_dealloc();
  int v7 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = (void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v9 = v3[25];
  uint64_t v10 = v3[23];
  uint64_t v11 = v3[22];
  uint64_t v12 = v3[20];
  if (v1)
  {
    swift_errorRelease();
    (*v7)(v11, v12);
    (*v8)(v9, v10);
    uint64_t v13 = v4[96];
    uint64_t v14 = v4[95];
    uint64_t v15 = sub_1005B3650;
  }
  else
  {
    v4[117] = a1;
    (*v7)(v11, v12);
    (*v8)(v9, v10);
    uint64_t v13 = v4[96];
    uint64_t v14 = v4[95];
    uint64_t v15 = sub_1005B20A0;
  }
  return _swift_task_switch(v15, v14, v13);
}

uint64_t sub_1005B20A0()
{
  uint64_t v1 = (void *)v0[117];
  uint64_t v2 = v0[85];
  uint64_t v3 = v0[31];
  uint64_t v5 = v0[27];
  uint64_t v4 = v0[28];
  uint64_t v6 = v0[26];
  swift_release();
  id v7 = [v1 CGImage];

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_1000637B8(v2, (uint64_t *)&unk_10109EF90);

  *(void *)(v3 + 32) = v7;
  uint64_t v9 = v0[30];
  uint64_t v8 = v0[31];
  uint64_t v10 = v0[29];
  uint64_t v11 = v0[16];
  sub_1005B55D0(v8, v11);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v11, 0, 1, v10);
  sub_1005B5634(v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1005B2364()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 768);
  uint64_t v3 = *(void *)(v1 + 760);
  return _swift_task_switch(sub_1005B2484, v3, v2);
}

uint64_t sub_1005B2484()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[16];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1005B26C8()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[104];
  uint64_t v2 = v0[103];
  uint64_t v3 = v0[91];
  uint64_t v4 = v0[86];
  uint64_t v5 = (void *)v0[17];
  swift_release();
  v1(v3, v2, v4);
  id v6 = v5;
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v25 = v7;
    uint64_t v9 = (void *)v0[17];
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138543362;
    v0[13] = v9;
    id v12 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = v9;

    _os_log_impl((void *)&_mh_execute_header, v25, v8, "Failed to get metadata for album=%{public}@", v10, 0xCu);
    sub_100063814((uint64_t *)&unk_10109C1D0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
    uint64_t v13 = v25;
  }
  else
  {
    uint64_t v14 = (void *)v0[17];
    swift_errorRelease();

    uint64_t v13 = v7;
  }
  uint64_t v15 = (void (*)(uint64_t, uint64_t))v0[106];
  uint64_t v16 = v0[91];
  uint64_t v17 = v0[86];
  uint64_t v18 = v0[83];
  uint64_t v19 = v0[82];
  uint64_t v20 = v0[81];
  uint64_t v21 = v0[30];
  uint64_t v26 = v0[29];
  uint64_t v22 = v0[16];

  v15(v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v22, 1, 1, v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_1005B2AAC()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[104];
  uint64_t v2 = v0[103];
  uint64_t v3 = v0[90];
  uint64_t v4 = v0[86];
  uint64_t v5 = (void *)v0[17];
  swift_release();
  v1(v3, v2, v4);
  id v6 = v5;
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v25 = v7;
    uint64_t v9 = (void *)v0[17];
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138543362;
    v0[11] = v9;
    id v12 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = v9;

    _os_log_impl((void *)&_mh_execute_header, v25, v8, "Failed to get metadata for song=%{public}@", v10, 0xCu);
    sub_100063814((uint64_t *)&unk_10109C1D0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
    uint64_t v13 = v25;
  }
  else
  {
    uint64_t v14 = (void *)v0[17];
    swift_errorRelease();

    uint64_t v13 = v7;
  }
  uint64_t v15 = (void (*)(uint64_t, uint64_t))v0[106];
  uint64_t v16 = v0[90];
  uint64_t v17 = v0[86];
  uint64_t v18 = v0[70];
  uint64_t v19 = v0[69];
  uint64_t v20 = v0[68];
  uint64_t v21 = v0[30];
  uint64_t v26 = v0[29];
  uint64_t v22 = v0[16];

  v15(v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v22, 1, 1, v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_1005B2E90()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[104];
  uint64_t v2 = v0[103];
  uint64_t v3 = v0[89];
  uint64_t v4 = v0[86];
  uint64_t v5 = (void *)v0[17];
  swift_release();
  v1(v3, v2, v4);
  id v6 = v5;
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v25 = v7;
    uint64_t v9 = (void *)v0[17];
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138477827;
    v0[10] = v9;
    id v12 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = v9;

    _os_log_impl((void *)&_mh_execute_header, v25, v8, "Failed to get metadata for playlist=%{private}@", v10, 0xCu);
    sub_100063814((uint64_t *)&unk_10109C1D0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
    uint64_t v13 = v25;
  }
  else
  {
    uint64_t v14 = (void *)v0[17];
    swift_errorRelease();

    uint64_t v13 = v7;
  }
  uint64_t v15 = (void (*)(uint64_t, uint64_t))v0[106];
  uint64_t v16 = v0[89];
  uint64_t v17 = v0[86];
  uint64_t v19 = v0[56];
  uint64_t v18 = v0[57];
  uint64_t v20 = v0[55];
  uint64_t v21 = v0[30];
  uint64_t v26 = v0[29];
  uint64_t v22 = v0[16];

  v15(v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v22, 1, 1, v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_1005B3270()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[104];
  uint64_t v2 = v0[103];
  uint64_t v3 = v0[88];
  uint64_t v4 = v0[86];
  uint64_t v5 = (void *)v0[17];
  swift_release();
  v1(v3, v2, v4);
  id v6 = v5;
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v25 = v7;
    uint64_t v9 = (void *)v0[17];
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138477827;
    v0[12] = v9;
    id v12 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = v9;

    _os_log_impl((void *)&_mh_execute_header, v25, v8, "Failed to get metadata for station=%{private}@", v10, 0xCu);
    sub_100063814((uint64_t *)&unk_10109C1D0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
    uint64_t v13 = v25;
  }
  else
  {
    uint64_t v14 = (void *)v0[17];
    swift_errorRelease();

    uint64_t v13 = v7;
  }
  uint64_t v15 = (void (*)(uint64_t, uint64_t))v0[106];
  uint64_t v16 = v0[88];
  uint64_t v17 = v0[86];
  uint64_t v19 = v0[43];
  uint64_t v18 = v0[44];
  uint64_t v20 = v0[42];
  uint64_t v21 = v0[30];
  uint64_t v26 = v0[29];
  uint64_t v22 = v0[16];

  v15(v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v22, 1, 1, v26);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_1005B3650()
{
  uint64_t v1 = v0[85];
  uint64_t v2 = v0[31];
  uint64_t v4 = v0[27];
  uint64_t v3 = v0[28];
  uint64_t v5 = v0[26];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_1000637B8(v1, (uint64_t *)&unk_10109EF90);

  *(void *)(v2 + 32) = 0;
  uint64_t v7 = v0[30];
  uint64_t v6 = v0[31];
  uint64_t v8 = v0[29];
  uint64_t v9 = v0[16];
  sub_1005B55D0(v6, v9);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v8);
  sub_1005B5634(v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

void sub_1005B38F0(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_100063814(&qword_1010B09E0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v7 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_1005B582C;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000D3BC;
  aBlock[3] = &unk_100FE1318;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  [a2 performWithResponseHandler:v10];
  _Block_release(v10);
}

uint64_t sub_1005B3A98(void *a1)
{
  if (a1)
  {
    id v1 = [a1 results];
    if (v1)
    {
      uint64_t v2 = v1;
      id v3 = [v1 firstItem];

      if (v3)
      {
        self;
        if (!swift_dynamicCastObjCClass()) {
          swift_unknownObjectRelease();
        }
      }
    }
  }
  sub_100063814(&qword_1010B09E0);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1005B3B4C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100063814(&qword_10109BA40);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = Logger.groupActivities.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_1005B5440(a1);
  sub_1005B5440(a1);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v27 = v2;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v26 = v6;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136446210;
    v25[1] = v15 + 4;
    long long v17 = *(_OWORD *)(a1 + 16);
    long long v28 = *(_OWORD *)a1;
    long long v29 = v17;
    long long v30 = *(_OWORD *)(a1 + 32);
    uint64_t v31 = *(void *)(a1 + 48);
    uint64_t v32 = v16;
    sub_1005B5440(a1);
    uint64_t v18 = String.init<A>(describing:)();
    *(void *)&long long v28 = sub_100075D94(v18, v19, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v2 = v27;
    swift_bridgeObjectRelease();
    sub_1004AA460(a1);
    sub_1004AA460(a1);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "presentAlert called, with alert=%{public}s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v6 = v26;
    swift_slowDealloc();
  }
  else
  {
    sub_1004AA460(a1);
    sub_1004AA460(a1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v20 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
  type metadata accessor for MainActor();
  sub_1005B5440(a1);
  swift_retain();
  uint64_t v21 = static MainActor.shared.getter();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = &protocol witness table for MainActor;
  *(void *)(v22 + 32) = v2;
  long long v23 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v22 + 40) = *(_OWORD *)a1;
  *(_OWORD *)(v22 + 56) = v23;
  *(_OWORD *)(v22 + 72) = *(_OWORD *)(a1 + 32);
  *(void *)(v22 + 88) = *(void *)(a1 + 48);
  sub_100066A3C((uint64_t)v6, (uint64_t)&unk_1010B09D0, v22);
  return swift_release();
}

uint64_t sub_1005B3EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[26] = a4;
  v5[27] = a5;
  type metadata accessor for MainActor();
  v5[28] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[29] = v7;
  v5[30] = v6;
  return _swift_task_switch(sub_1005B3F54, v7, v6);
}

uint64_t sub_1005B3F54()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    unint64_t v3 = *(void *)(v2 + 32);
    if (v3 >> 62 == 2 || v3 >> 62 == 1)
    {
      uint64_t v4 = (void *)(v3 & 0x3FFFFFFFFFFFFFFFLL);
      v3 &= 0x3FFFFFFFFFFFFFFFuLL;
    }
    else
    {
      uint64_t v4 = (void *)(v3 & 0x3FFFFFFFFFFFFFFFLL);
    }
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
    *(void *)(v0 + 192) = 0;
    *(unsigned char *)(v0 + 200) = -1;
    id v9 = v4;
    PresentationSource.init(viewController:position:)((void *)v3, v0 + 160);
    swift_release();
    sub_1000E08E4(v0 + 88, v0 + 16);
    id v10 = Alert.uiAlertController.getter();
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v10, 1, (id)0xF, (void **)1, 0, 0);

    sub_1000E0890(v0 + 16);
    goto LABEL_11;
  }
  uint64_t v5 = *(void *)(v1 + 24);
  *(void *)(v0 + 248) = v5;
  if (!v5)
  {
    swift_release();
LABEL_11:
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1005B4108;
  uint64_t v7 = *(void *)(v0 + 216);
  return PresentedViewState<A>.present(_:)(v7);
}

uint64_t sub_1005B4108()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 240);
  uint64_t v3 = *(void *)(v1 + 232);
  return _swift_task_switch(sub_1005B4228, v3, v2);
}

uint64_t sub_1005B4228()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005B4294()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1005B42EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *id v9 = v4;
  v9[1] = sub_100081D08;
  return sub_1005AE558(a1, a2, a3, a4);
}

uint64_t sub_1005B43A4()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1010B09C0 + dword_1010B09C0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100195310;
  return v3();
}

uint64_t sub_1005B4444()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1010B09B8 + dword_1010B09B8);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100195310;
  return v3();
}

uint64_t sub_1005B44E4(uint64_t a1)
{
  return sub_1005B3B4C(a1);
}

uint64_t sub_1005B4508(uint64_t a1, char *a2)
{
  return sub_1005B4F14(a2);
}

uint64_t sub_1005B4530()
{
  if (qword_101097EB8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_101129420;
  id v1 = (id)qword_101129420;
  return v0;
}

id sub_1005B458C()
{
  id v0 = [self sharedApplication];

  return v0;
}

uint64_t sub_1005B45CC()
{
  uint64_t v1 = type metadata accessor for Logger();
  v0[8] = v1;
  v0[9] = *(void *)(v1 - 8);
  v0[10] = swift_task_alloc();
  type metadata accessor for MainActor();
  v0[11] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1005B46BC, v3, v2);
}

uint64_t sub_1005B46BC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  swift_release();
  uint64_t v4 = Logger.groupActivities.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "PresentUpSell called", v7, 2u);
    swift_slowDealloc();
  }
  uint64_t v9 = *(void *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v10 = *(void *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  *(unsigned char *)(v0 + 56) = -3;
  static SubscriptionUpsellPresenter.present(for:)(v0 + 16);
  sub_1002C4030(v0 + 16);
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v11(1);
}

uint64_t sub_1005B480C()
{
  uint64_t v1 = type metadata accessor for Logger();
  v0[4] = v1;
  v0[5] = *(void *)(v1 - 8);
  v0[6] = swift_task_alloc();
  v0[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v0[8] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[9] = v3;
  v0[10] = v2;
  return _swift_task_switch(sub_1005B490C, v3, v2);
}

uint64_t sub_1005B490C()
{
  type metadata accessor for AuthPresenter();
  uint64_t v1 = swift_allocObject();
  *(void *)(v0 + 88) = v1;
  *(unsigned char *)(v0 + 112) = 0;
  Published.init(initialValue:)();
  *(void *)(v1 + OBJC_IVAR____TtC5Music13AuthPresenter_presentingViewController) = 0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v2;
  void *v2 = v0;
  v2[1] = sub_1005B49E0;
  return sub_1006A6188();
}

uint64_t sub_1005B49E0(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 88);
  *(void *)(v4 + 104) = a1;
  *(unsigned char *)(v4 + 113) = a2;
  swift_task_dealloc();
  swift_setDeallocating();
  uint64_t v6 = v5 + OBJC_IVAR____TtC5Music13AuthPresenter__isAuthenticating;
  uint64_t v7 = sub_100063814(&qword_10109C180);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_deallocClassInstance();
  uint64_t v8 = *(void *)(v3 + 80);
  uint64_t v9 = *(void *)(v3 + 72);
  return _swift_task_switch(sub_1005B4BBC, v9, v8);
}

uint64_t sub_1005B4BBC()
{
  uint64_t v33 = v0;
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  swift_release();
  uint64_t v4 = Logger.groupActivities.unsafeMutableAddressor();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v5(v2, v4, v1);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "requireAuthentification called", v8, 2u);
    swift_slowDealloc();
  }
  char v9 = *(unsigned char *)(v0 + 113);
  uint64_t v10 = *(void *)(v0 + 56);
  uint64_t v11 = *(void *)(v0 + 32);
  uint64_t v12 = *(void *)(v0 + 40);

  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  uint64_t v14 = *(void *)(v0 + 104);
  if (v9)
  {
    uint64_t v31 = v13;
    v5(*(void *)(v0 + 48), v4, *(void *)(v0 + 32));
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void *)(v0 + 104);
    uint64_t v20 = *(void *)(v0 + 48);
    uint64_t v21 = *(void *)(v0 + 32);
    if (v18)
    {
      uint64_t v30 = *(void *)(v0 + 48);
      uint64_t v29 = *(void *)(v0 + 32);
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136446210;
      *(void *)(v0 + 16) = v14;
      swift_errorRetain();
      sub_100063814((uint64_t *)&unk_1010991A0);
      uint64_t v23 = String.init<A>(describing:)();
      *(void *)(v0 + 24) = sub_100075D94(v23, v24, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1005B5434(v19, 1);
      sub_1005B5434(v19, 1);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "requireAuthentification failed with error:%{public}s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_1005B5434(v19, 1);
      sub_1005B5434(v19, 1);
      uint64_t v26 = v29;
      uint64_t v25 = v30;
    }
    else
    {
      sub_1005B5434(*(void *)(v0 + 104), 1);
      sub_1005B5434(v19, 1);
      swift_errorRelease();

      sub_1005B5434(v19, 1);
      uint64_t v25 = v20;
      uint64_t v26 = v21;
    }
    v31(v25, v26);
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 104) & 1;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v27(v15);
}

uint64_t sub_1005B4F14(char *a1)
{
  uint64_t v2 = sub_100063814(&qword_1010B09A8);
  __chkstk_darwin(v2 - 8);
  double v47 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B09B0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = Logger.groupActivities.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  uint64_t v48 = v5;
  BOOL v18 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v16 = v5 + 16;
  os_log_type_t v17 = v18;
  uint64_t v49 = a1;
  uint64_t v19 = v4;
  v18(v10, a1, v4);
  uint64_t v20 = Logger.logObject.getter();
  int v21 = static os_log_type_t.default.getter();
  BOOL v22 = os_log_type_enabled(v20, (os_log_type_t)v21);
  uint64_t v50 = (void (*)(uint64_t, uint64_t, uint64_t))v18;
  if (v22)
  {
    uint64_t v44 = v12;
    int v43 = v21;
    uint64_t v40 = v20;
    uint64_t v46 = v11;
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v52 = v41;
    *(_DWORD *)uint64_t v23 = 136446210;
    v17(v7, v10, v19);
    uint64_t v24 = v48;
    uint64_t v25 = v19;
    int v26 = (*(uint64_t (**)(char *, uint64_t))(v48 + 88))(v7, v19);
    uint64_t v45 = v23;
    uint64_t v42 = v16;
    if (v26 == enum case for GroupSession.State.invalidated<A>(_:))
    {
      uint64_t v27 = v10;
      unint64_t v28 = 0xEB00000000646574;
      uint64_t v29 = 0x6164696C61766E69;
      uint64_t v30 = (uint64_t)v47;
      uint64_t v31 = v40;
LABEL_11:
      uint64_t v37 = v7;
      uint64_t v32 = v24;
      uint64_t v36 = v25;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v37, v25);
      uint64_t v35 = v29;
      goto LABEL_12;
    }
    uint64_t v27 = v10;
    if (v26 == enum case for GroupSession.State.waiting<A>(_:))
    {
      unint64_t v28 = 0xE700000000000000;
      uint64_t v35 = 0x676E6974696177;
      uint64_t v30 = (uint64_t)v47;
      uint64_t v31 = v40;
    }
    else
    {
      uint64_t v30 = (uint64_t)v47;
      uint64_t v31 = v40;
      if (v26 != enum case for GroupSession.State.joined<A>(_:))
      {
        unint64_t v28 = 0xE700000000000000;
        uint64_t v29 = 0x6E776F6E6B6E75;
        goto LABEL_11;
      }
      unint64_t v28 = 0xE600000000000000;
      uint64_t v35 = 0x64656E696F6ALL;
    }
    uint64_t v32 = v24;
    uint64_t v36 = v25;
LABEL_12:
    uint64_t v38 = v45;
    uint64_t v51 = sub_100075D94(v35, v28, &v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v27, v36);
    _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v43, "Session state changed: %{public}s", v38, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v46);
    uint64_t v34 = v49;
    uint64_t v33 = v36;
    goto LABEL_13;
  }
  uint64_t v32 = v48;
  uint64_t v33 = v19;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v19);

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v30 = (uint64_t)v47;
  uint64_t v34 = v49;
LABEL_13:
  v50(v30, (uint64_t)v34, v33);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v30, 0, 1, v33);
  PassthroughSubject.send(_:)();
  return sub_1000637B8(v30, &qword_1010B09A8);
}

uint64_t sub_1005B5434(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_1005B5440(uint64_t a1)
{
  id v2 = *(id *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1005B5494()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1005B54F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *os_log_type_t v7 = v2;
  v7[1] = sub_1000154F4;
  return sub_1005B3EBC(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_1005B55B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005B56B0(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of StationFilter.id.getter, a2);
}

uint64_t sub_1005B55D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005B5634(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GroupActivitiesManager.Activity.Metadata(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005B5698@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005B56B0(a1, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of AlbumFilter.id.getter, a2);
}

uint64_t sub_1005B56B0@<X0>(void *a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_100068990(a1, v5);
  uint64_t result = a2(v5, v6);
  *a3 = result;
  a3[1] = v8;
  return result;
}

uint64_t sub_1005B5708(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005B5750()
{
  unint64_t result = qword_1010A1960;
  if (!qword_1010A1960)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010A1960);
  }
  return result;
}

void sub_1005B5790(uint64_t a1)
{
  sub_1005B38F0(a1, *(void **)(v1 + 16));
}

uint64_t sub_1005B5798()
{
  uint64_t v1 = sub_100063814(&qword_1010B09E0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1005B582C(void *a1)
{
  sub_100063814(&qword_1010B09E0);

  return sub_1005B3A98(a1);
}

uint64_t sub_1005B58B0@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_1005B7588();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtCV5Music4Uber13Configuration__mode;
  swift_beginAccess();
  return sub_1005B76A0(v3, a1);
}

uint64_t sub_1005B594C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtCV5Music4Uber13Configuration__mode;
  swift_beginAccess();
  sub_1005B7498(a2, v3);
  return swift_endAccess();
}

uint64_t sub_1005B59B8()
{
  swift_getKeyPath();
  sub_1005B7588();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtCV5Music4Uber13Configuration__artworkUsedChanged);
  sub_10007B674(v1);
  return v1;
}

uint64_t sub_1005B5A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (uint64_t *)(a1 + OBJC_IVAR____TtCV5Music4Uber13Configuration__artworkUsedChanged);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtCV5Music4Uber13Configuration__artworkUsedChanged);
  *uint64_t v3 = a2;
  v3[1] = a3;
  sub_10007B674(a2);
  return sub_10006ADFC(v4);
}

double sub_1005B5AA0()
{
  swift_getKeyPath();
  sub_1005B7588();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + OBJC_IVAR____TtCV5Music4Uber13Configuration__metrics);
}

uint64_t sub_1005B5B1C(uint64_t result, double a2, double a3)
{
  uint64_t v3 = (double *)(result + OBJC_IVAR____TtCV5Music4Uber13Configuration__metrics);
  *uint64_t v3 = a2;
  v3[1] = a3;
  return result;
}

uint64_t sub_1005B5B30()
{
  swift_getKeyPath();
  sub_1005B7588();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtCV5Music4Uber13Configuration__accessibilityArtworkLabel);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1005B5BBC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1005B7588();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtCV5Music4Uber13Configuration__accessibilityArtworkLabel + 8);
  *a2 = *(void *)(v3 + OBJC_IVAR____TtCV5Music4Uber13Configuration__accessibilityArtworkLabel);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1005B5C44()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005B5CF8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100063814((uint64_t *)&unk_1010ABF30);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100063814((uint64_t *)&unk_10109EF90);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = _s13ConfigurationC4ModeOMa(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1005B74FC(a1, (uint64_t)v34);
  uint64_t v13 = v35;
  if (v35)
  {
    uint64_t v14 = v36;
    sub_100068990(v34, v35);
    (*(void (**)(uint64_t))(*(void *)(v14 + 8) + 8))(v13);
    sub_1000760E4((uint64_t)v34);
  }
  else
  {
    sub_1000637B8((uint64_t)v34, &qword_1010A99B8);
    uint64_t v15 = type metadata accessor for VideoArtwork();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
  }
  sub_1005B74FC(a1, (uint64_t)v34);
  uint64_t v16 = v35;
  if (v35)
  {
    uint64_t v17 = v36;
    sub_100068990(v34, v35);
    (*(void (**)(uint64_t))(*(void *)(v17 + 16) + 8))(v16);
    sub_1000760E4((uint64_t)v34);
  }
  else
  {
    sub_1000637B8((uint64_t)v34, &qword_1010A99B8);
    uint64_t v18 = type metadata accessor for Artwork();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v9, 1, 1, v18);
  }
  uint64_t v19 = &v12[*(int *)(sub_100063814(&qword_1010A9978) + 48)];
  sub_1005B74FC(a1, (uint64_t)v34);
  uint64_t v20 = type metadata accessor for Artwork();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, v20) == 1)
  {
    sub_1005B74FC((uint64_t)v34, (uint64_t)v31);
    uint64_t v22 = v32;
    if (v32)
    {
      uint64_t v23 = v33;
      sub_100068990(v31, v32);
      (*(void (**)(uint64_t))(*(void *)(v23 + 8) + 8))(v22);
      uint64_t v24 = type metadata accessor for VideoArtwork();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v25 + 48))(v6, 1, v24) != 1)
      {
        VideoArtwork.previewFrame.getter();
        sub_1000637B8((uint64_t)v34, &qword_1010A99B8);
        (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v6, v24);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
        sub_1000760E4((uint64_t)v31);
        goto LABEL_15;
      }
      sub_1000637B8((uint64_t)v34, &qword_1010A99B8);
      sub_1000760E4((uint64_t)v31);
      int v26 = (uint64_t *)&unk_1010ABF30;
      uint64_t v27 = v6;
    }
    else
    {
      sub_1000637B8((uint64_t)v34, &qword_1010A99B8);
      uint64_t v27 = v31;
      int v26 = &qword_1010A99B8;
    }
    sub_1000637B8((uint64_t)v27, v26);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
LABEL_15:
    sub_1000637B8((uint64_t)v9, (uint64_t *)&unk_10109EF90);
    goto LABEL_16;
  }
  sub_1000637B8((uint64_t)v34, &qword_1010A99B8);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(v19, v9, v20);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
LABEL_16:
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  *(void *)&v30[-16] = v2;
  *(void *)&v30[-8] = v12;
  v34[0] = v2;
  sub_1005B7588();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return sub_1005B75E0((uint64_t)v12);
}

void sub_1005B624C()
{
  qword_101129B00 = Int.seconds.getter(5);
}

uint64_t sub_1005B6270()
{
  sub_1005B75E0(v0 + OBJC_IVAR____TtCV5Music4Uber13Configuration__mode);
  sub_10006ADFC(*(void *)(v0 + OBJC_IVAR____TtCV5Music4Uber13Configuration__artworkUsedChanged));
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtCV5Music4Uber13Configuration___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1005B6348()
{
  return _s13ConfigurationCMa(0);
}

uint64_t _s13ConfigurationCMa(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B0A40);
}

void sub_1005B6370()
{
  sub_1005B64E0(319, (unint64_t *)&qword_10109ADA0, (void (*)(uint64_t))&type metadata accessor for VideoArtwork);
  if (v0 <= 0x3F)
  {
    sub_1005B64E0(319, (unint64_t *)&qword_1010ABE30, (void (*)(uint64_t))&type metadata accessor for Artwork);
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v4[4] = v4;
      v4[5] = &unk_100E38A88;
      v4[6] = &unk_100E38AA0;
      v4[7] = &unk_100E38AB8;
      v4[8] = &unk_100E38AD0;
      uint64_t v2 = type metadata accessor for ObservationRegistrar();
      if (v3 <= 0x3F)
      {
        v4[9] = *(void *)(v2 - 8) + 64;
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1005B64E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *_s13ConfigurationC7MetricsVMa()
{
  return &_s13ConfigurationC7MetricsVN;
}

uint64_t *sub_1005B6544(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = type metadata accessor for VideoArtwork();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = sub_100063814((uint64_t *)&unk_1010ABF30);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v10 = *(int *)(sub_100063814(&qword_1010A9978) + 48);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for Artwork();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_100063814((uint64_t *)&unk_10109EF90);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  return a1;
}

uint64_t sub_1005B678C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VideoArtwork();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  uint64_t v4 = a1 + *(int *)(sub_100063814(&qword_1010A9978) + 48);
  uint64_t v5 = type metadata accessor for Artwork();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

char *sub_1005B68F0(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for VideoArtwork();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_100063814((uint64_t *)&unk_1010ABF30);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  uint64_t v7 = *(int *)(sub_100063814(&qword_1010A9978) + 48);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Artwork();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100063814((uint64_t *)&unk_10109EF90);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

char *sub_1005B6AEC(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for VideoArtwork();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    uint64_t v9 = sub_100063814((uint64_t *)&unk_1010ABF30);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
LABEL_7:
  uint64_t v10 = *(int *)(sub_100063814(&qword_1010A9978) + 48);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Artwork();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_12;
  }
  if (v17)
  {
LABEL_12:
    uint64_t v18 = sub_100063814((uint64_t *)&unk_10109EF90);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

char *sub_1005B6DA8(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for VideoArtwork();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_100063814((uint64_t *)&unk_1010ABF30);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  uint64_t v7 = *(int *)(sub_100063814(&qword_1010A9978) + 48);
  int v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Artwork();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100063814((uint64_t *)&unk_10109EF90);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

char *sub_1005B6FA4(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for VideoArtwork();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    uint64_t v9 = sub_100063814((uint64_t *)&unk_1010ABF30);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(a1, a2, v4);
LABEL_7:
  uint64_t v10 = *(int *)(sub_100063814(&qword_1010A9978) + 48);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Artwork();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_12;
  }
  if (v17)
  {
LABEL_12:
    uint64_t v18 = sub_100063814((uint64_t *)&unk_10109EF90);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_1005B7260(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010A9978);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1005B72D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100063814(&qword_1010A9978);
  int v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, a2, a3, v6);
}

uint64_t _s13ConfigurationC4ModeOMa(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010B0C68);
}

void sub_1005B7370(uint64_t a1)
{
  sub_1005B64E0(319, (unint64_t *)&qword_10109ADA0, (void (*)(uint64_t))&type metadata accessor for VideoArtwork);
  if (v2 <= 0x3F)
  {
    sub_1005B64E0(319, (unint64_t *)&qword_1010ABE30, (void (*)(uint64_t))&type metadata accessor for Artwork);
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      swift_initEnumMetadataSingleCase();
      *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
    }
  }
}

uint64_t sub_1005B7498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s13ConfigurationC4ModeOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005B74FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010A99B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005B756C()
{
  return sub_1005B594C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_1005B7588()
{
  unint64_t result = qword_1010ABEF0;
  if (!qword_1010ABEF0)
  {
    _s13ConfigurationCMa(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010ABEF0);
  }
  return result;
}

uint64_t sub_1005B75E0(uint64_t a1)
{
  uint64_t v2 = _s13ConfigurationC4ModeOMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005B7644()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)(v0[2] + OBJC_IVAR____TtCV5Music4Uber13Configuration__accessibilityArtworkLabel);
  void *v2 = v0[3];
  v2[1] = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005B76A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s13ConfigurationC4ModeOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005B7704(unsigned __int8 *a1, char *a2)
{
  return sub_10052236C(*a1, *a2);
}

Swift::Int sub_1005B7710()
{
  return sub_1004EBE34();
}

uint64_t sub_1005B7718()
{
  return sub_1000C5510();
}

Swift::Int sub_1005B7720()
{
  return sub_1004EC47C();
}

unint64_t sub_1005B7728@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1005BB7A8(*a1);
  *a2 = result;
  return result;
}

void sub_1005B7758(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x736B636950706F74;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA0000000000756FLL;
      uint64_t v3 = 0x59726F466564616DLL;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x726F4673646F6F6DLL;
      *(void *)(a1 + 8) = 0xEB00000000756F59;
      break;
    case 3:
      *(void *)a1 = 0x61656C655277656ELL;
      *(void *)(a1 + 8) = 0xEB00000000736573;
      break;
    case 4:
      strcpy((char *)a1, "stationsForYou");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 5:
      *(void *)a1 = 0xD000000000000015;
      *(void *)(a1 + 8) = 0x8000000100DAD440;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

void sub_1005B7858(void *a1@<X8>)
{
  *a1 = &off_100FC7430;
}

uint64_t sub_1005B7868()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1005B78C8()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1005B7918()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v34 = 0xD00000000000001ALL;
  unint64_t v35 = 0x8000000100DC1120;
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  strcpy((char *)&v33, "fetchDate: \"");
  BYTE5(v33._object) = 0;
  HIWORD(v33._object) = -5120;
  sub_1005BB990(&qword_1010A6688, (void (*)(uint64_t))&type metadata accessor for Date);
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 2108450;
  v6._object = (void *)0xE300000000000000;
  String.append(_:)(v6);
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v33._countAndFlagsBits = 0x617A696C61636F6CLL;
  v33._object = (void *)0xEF22203A6E6F6974;
  int v7 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  int v8 = (uint64_t *)(v0 + v7[5]);
  uint64_t v9 = v8[1];
  uint64_t v31 = *v8;
  uint64_t v32 = v9;
  swift_bridgeObjectRetain();
  sub_100063814(&qword_10109EB50);
  v10._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 2108450;
  v11._object = (void *)0xE300000000000000;
  String.append(_:)(v11);
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  v33._countAndFlagsBits = 0xD000000000000012;
  v33._object = (void *)0x8000000100DC1140;
  if (qword_101098470 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100050A90((uint64_t)v7, (uint64_t)qword_101129B18);
  if ((sub_1005BAFF0(v0, v12) & 1) == 0)
  {
    if (qword_101097DE8 != -1) {
      swift_once();
    }
    if (qword_101129370) {
      sub_1002CE5B4();
    }
  }
  Date.addingTimeInterval(_:)();
  uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v16._countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 2108450;
  v17._object = (void *)0xE300000000000000;
  String.append(_:)(v17);
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  strcpy((char *)&v33, "title: \"");
  BYTE1(v33._object) = 0;
  WORD1(v33._object) = 0;
  HIDWORD(v33._object) = -402653184;
  uint64_t v18 = (uint64_t *)(v0 + v7[6]);
  uint64_t v19 = v18[1];
  uint64_t v31 = *v18;
  uint64_t v32 = v19;
  swift_bridgeObjectRetain();
  v20._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 2108450;
  v21._object = (void *)0xE300000000000000;
  String.append(_:)(v21);
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  strcpy((char *)&v33, "kind: \"");
  v33._object = (void *)0xE700000000000000;
  LOBYTE(v31) = *(unsigned char *)(v0 + v7[7]);
  sub_100063814(&qword_1010B0F18);
  v22._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 2108450;
  v23._object = (void *)0xE300000000000000;
  String.append(_:)(v23);
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  strcpy((char *)&v33, "items: \"");
  BYTE1(v33._object) = 0;
  WORD1(v33._object) = 0;
  HIDWORD(v33._object) = -402653184;
  type metadata accessor for WidgetMusicItem();
  swift_bridgeObjectRetain();
  uint64_t v24 = Array.description.getter();
  int v26 = v25;
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = v24;
  v27._object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  v28._countAndFlagsBits = 2108450;
  v28._object = (void *)0xE300000000000000;
  String.append(_:)(v28);
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  v29._countAndFlagsBits = 41;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  return v34;
}

uint64_t sub_1005B7E60()
{
  uint64_t v0 = type metadata accessor for WidgetMusicItem();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v28 = v4;
  __chkstk_darwin(v4);
  Swift::String v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v7 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  sub_100014CA4((uint64_t)v7, qword_101129B18);
  uint64_t v8 = sub_100050A90((uint64_t)v7, (uint64_t)qword_101129B18);
  static Date.now.getter();
  id v9 = [self mainBundle];
  id v10 = [v9 preferredLocalizations];

  Swift::String v11 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  if (v11[2])
  {
    uint64_t v12 = v11[4];
    uint64_t v25 = v11[5];
    uint64_t v26 = v12;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v26 = 0;
  }
  swift_bridgeObjectRelease();
  if (qword_101098598 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void *)algn_101129CD0;
  uint64_t v24 = qword_101129CC8;
  uint64_t v14 = qword_101097FD8;
  swift_bridgeObjectRetain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100050A90(v0, (uint64_t)qword_1011295F0);
  sub_1005BA164(v15, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for WidgetMusicItem);
  uint64_t v16 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v16 + 16) = 8;
  uint64_t v17 = v16 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  sub_1005BA164((uint64_t)v3, v17, (uint64_t (*)(void))type metadata accessor for WidgetMusicItem);
  uint64_t v18 = *(void *)(v1 + 72);
  sub_1005BA164((uint64_t)v3, v17 + v18, (uint64_t (*)(void))type metadata accessor for WidgetMusicItem);
  sub_1005BA164((uint64_t)v3, v17 + 2 * v18, (uint64_t (*)(void))type metadata accessor for WidgetMusicItem);
  sub_1005BA164((uint64_t)v3, v17 + 3 * v18, (uint64_t (*)(void))type metadata accessor for WidgetMusicItem);
  sub_1005BA164((uint64_t)v3, v17 + 4 * v18, (uint64_t (*)(void))type metadata accessor for WidgetMusicItem);
  sub_1005BA164((uint64_t)v3, v17 + 5 * v18, (uint64_t (*)(void))type metadata accessor for WidgetMusicItem);
  sub_1005BA164((uint64_t)v3, v17 + 6 * v18, (uint64_t (*)(void))type metadata accessor for WidgetMusicItem);
  sub_1005BB9D8((uint64_t)v3, v17 - v18 + 8 * v18, (uint64_t (*)(void))type metadata accessor for WidgetMusicItem);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v8, v6, v28);
  Swift::String v20 = (void *)(v8 + v7[5]);
  uint64_t v21 = v25;
  *Swift::String v20 = v26;
  v20[1] = v21;
  Swift::String v22 = (uint64_t *)(v8 + v7[6]);
  uint64_t *v22 = v24;
  v22[1] = v13;
  *(unsigned char *)(v8 + v7[7]) = 6;
  *(void *)(v8 + v7[8]) = v16;
  return result;
}

uint64_t sub_1005B820C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100063814(&qword_1010B0ED0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100068990(a1, a1[3]);
  sub_1005BAF48();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v17 = 0;
  type metadata accessor for Date();
  sub_1005BB990(&qword_1010A6670, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for WidgetMusicRecommendation(0);
    char v16 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v15 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v14 = *(unsigned char *)(v3 + *(int *)(v9 + 28));
    char v13 = 3;
    sub_1005BAF9C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 32));
    v11[15] = 4;
    sub_100063814(&qword_1010B0EE8);
    sub_1005BB89C(&qword_1010B0EF0, &qword_1010A6440);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1005B84C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v25 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v26 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100063814(&qword_1010B0F00);
  uint64_t v24 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for WidgetMusicRecommendation(0);
  __chkstk_darwin(v8);
  id v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100068990(a1, a1[3]);
  sub_1005BAF48();
  uint64_t v28 = v7;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_1000760E4((uint64_t)a1);
  }
  Swift::String v22 = a1;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v12 = v25;
  char v35 = 0;
  sub_1005BB990(&qword_1010A6660, (void (*)(uint64_t))&type metadata accessor for Date);
  char v13 = v26;
  uint64_t v14 = v27;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v13, v4);
  char v34 = 1;
  uint64_t v15 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  char v16 = (uint64_t *)(v11 + v8[5]);
  *char v16 = v15;
  v16[1] = v17;
  char v33 = 2;
  uint64_t v18 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v19 = (uint64_t *)(v11 + v8[6]);
  *uint64_t v19 = v18;
  v19[1] = v20;
  char v31 = 3;
  sub_1005BB848();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  *(unsigned char *)(v11 + v8[7]) = v32;
  sub_100063814(&qword_1010B0EE8);
  char v30 = 4;
  sub_1005BB89C(&qword_1010B0F10, &qword_1010A6438);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v14);
  *(void *)(v11 + v8[8]) = v29;
  sub_1005BA164(v11, v23, type metadata accessor for WidgetMusicRecommendation);
  sub_1000760E4((uint64_t)v22);
  return sub_1005BB930(v11, type metadata accessor for WidgetMusicRecommendation);
}

uint64_t sub_1005B89AC()
{
  uint64_t result = 0x7461446863746566;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x617A696C61636F6CLL;
      break;
    case 2:
      uint64_t result = 0x656C746974;
      break;
    case 3:
      uint64_t result = 1684957547;
      break;
    case 4:
      uint64_t result = 0x736D657469;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1005B8A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005BBC4C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1005B8A7C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1005B8A88(uint64_t a1)
{
  unint64_t v2 = sub_1005BAF48();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005B8AC4(uint64_t a1)
{
  unint64_t v2 = sub_1005BAF48();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005B8B00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005B84C4(a1, a2);
}

uint64_t sub_1005B8B18(void *a1)
{
  return sub_1005B820C(a1);
}

uint64_t sub_1005B8B38()
{
  uint64_t v1 = type metadata accessor for WidgetDiskCache();
  uint64_t v56 = *(void *)(v1 - 8);
  uint64_t v2 = *(void *)(v56 + 64);
  __chkstk_darwin(v1 - 8);
  uint64_t v55 = (uint64_t)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = &qword_10109BA40;
  uint64_t v4 = sub_100063814(&qword_10109BA40);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v45 - v8;
  uint64_t v10 = sub_100063814(&qword_1010B0E08);
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v52 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v45 - v13;
  uint64_t v15 = type metadata accessor for WidgetRecommendationDiskCache(0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = 0;
  uint64_t v51 = v0 + OBJC_IVAR____TtC5Music33RecommendationsWidgetDataProvider_cache;
  uint64_t v50 = v2 + 7;
  uint64_t v48 = v9;
  uint64_t v49 = (char *)&type metadata for () + 8;
  uint64_t v46 = v17;
  double v47 = v14;
  do
  {
    uint64_t v57 = v18;
    char v20 = *((unsigned char *)&off_100FC6520 + v18 + 32);
    sub_1005BA164(v51, (uint64_t)v17, type metadata accessor for WidgetRecommendationDiskCache);
    uint64_t v21 = type metadata accessor for WidgetMusicRecommendation(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v14, 1, 1, v21);
    char v65 = v20;
    uint64_t v22 = String.init<A>(describing:)();
    uint64_t v59 = v23;
    uint64_t v60 = v22;
    static TaskPriority.userInitiated.getter();
    uint64_t v24 = type metadata accessor for TaskPriority();
    uint64_t v58 = *(void *)(v24 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v9, 0, 1, v24);
    uint64_t v25 = v55;
    sub_1005BA164((uint64_t)v17, v55, (uint64_t (*)(void))type metadata accessor for WidgetDiskCache);
    uint64_t v26 = (uint64_t)v14;
    uint64_t v27 = v52;
    sub_10006CAB8(v26, v52, &qword_1010B0E08);
    unint64_t v28 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
    uint64_t v29 = v7;
    unint64_t v30 = (v50 + v28) & 0xFFFFFFFFFFFFFFF8;
    char v31 = v3;
    unint64_t v32 = (*(unsigned __int8 *)(v54 + 80) + v30 + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = 0;
    char v34 = (void *)(v33 + 16);
    *(void *)(v33 + 24) = 0;
    uint64_t v35 = v25;
    uint64_t v36 = v59;
    sub_1005BB9D8(v35, v33 + v28, (uint64_t (*)(void))type metadata accessor for WidgetDiskCache);
    uint64_t v37 = (uint64_t *)(v33 + v30);
    uint64_t v7 = v29;
    uint64_t v9 = v48;
    uint64_t *v37 = v60;
    v37[1] = v36;
    uint64_t v38 = v33 + v32;
    uint64_t v3 = v31;
    uint64_t v39 = v27;
    uint64_t v40 = v58;
    sub_1005BA470(v39, v38);
    sub_10006CAB8((uint64_t)v9, (uint64_t)v7, v31);
    LODWORD(v31) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v7, 1, v24);
    swift_bridgeObjectRetain();
    if (v31 == 1)
    {
      sub_1000637B8((uint64_t)v7, v3);
      if (*v34) {
        goto LABEL_6;
      }
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v24);
      if (*v34)
      {
LABEL_6:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v41 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v43 = v42;
        swift_unknownObjectRelease();
        goto LABEL_9;
      }
    }
    uint64_t v41 = 0;
    uint64_t v43 = 0;
LABEL_9:
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = &unk_1010B0E10;
    *(void *)(v44 + 24) = v33;
    if (v43 | v41)
    {
      uint64_t v61 = 0;
      uint64_t v62 = 0;
      uint64_t v63 = v41;
      uint64_t v64 = v43;
    }
    uint64_t v17 = v46;
    uint64_t v14 = v47;
    uint64_t v18 = v57 + 1;
    swift_task_create();
    swift_release();
    sub_1000637B8((uint64_t)v9, v3);
    swift_bridgeObjectRelease();
    sub_1000637B8((uint64_t)v14, &qword_1010B0E08);
    uint64_t result = sub_1005BB930((uint64_t)v17, type metadata accessor for WidgetRecommendationDiskCache);
  }
  while (v18 != 6);
  return result;
}

id sub_1005B90D8()
{
  type metadata accessor for RecommendationsWidgetDataProvider(0);
  swift_allocObject();
  id result = sub_1005B9118();
  qword_101129B30 = (uint64_t)result;
  return result;
}

id sub_1005B9118()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MusicDataRequest.ExecutionMethod();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10047BF28(0x6E656D6D6F636552, 0xEF736E6F69746164, (char *)(v1 + OBJC_IVAR____TtC5Music33RecommendationsWidgetDataProvider_cache));
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for MusicDataRequest.ExecutionMethod.firstParty(_:), v2);
  static MusicDataRequest.preferredExecutionMethod.setter();
  id v6 = [self processInfo];
  id v7 = [v6 processName];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  if (v8 == 0x646957636973754DLL && v10 == 0xEC00000073746567)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      return (id)v1;
    }
  }
  if (qword_101098480 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100050A90(v13, (uint64_t)qword_1010B0C78);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "running in widget process, disabling fallback cache", v16, 2u);
    swift_slowDealloc();
  }

  id v17 = [self defaultMediaLibrary];
  if ([v17 artworkDataSource])
  {
    self;
    uint64_t v18 = (void *)swift_dynamicCastObjCClass();
    if (v18) {
      [v18 setUsesFallbackCache:0];
    }
    swift_unknownObjectRelease();
  }
  id result = [self sharedStoreArtworkDataSource];
  if (result)
  {
    char v20 = result;
    [result setUsesFallbackCache:0];

    return (id)v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005B9458()
{
  sub_1005BB930(v0 + OBJC_IVAR____TtC5Music33RecommendationsWidgetDataProvider_cache, type metadata accessor for WidgetRecommendationDiskCache);

  return swift_deallocClassInstance();
}

uint64_t sub_1005B94D0()
{
  return type metadata accessor for RecommendationsWidgetDataProvider(0);
}

uint64_t type metadata accessor for RecommendationsWidgetDataProvider(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B0CC0);
}

uint64_t sub_1005B94F8()
{
  uint64_t result = type metadata accessor for WidgetDiskCache();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1005B9588(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for WidgetDiskCache();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100063814((uint64_t *)&unk_10109BF50);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(v6 + 20);
    char v12 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v12;
    uint64_t v13 = *(int *)(v6 + 24);
    uint64_t v14 = (char *)a1 + v13;
    os_log_type_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for Logger();
    id v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    id v18 = v12;
    v17(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_1005B9760(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  uint64_t v4 = type metadata accessor for WidgetDiskCache();

  uint64_t v5 = a1 + *(int *)(v4 + 24);
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

char *sub_1005B9874(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_100063814((uint64_t *)&unk_10109BF50);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  uint64_t v7 = type metadata accessor for WidgetDiskCache();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = *(void **)&a2[v8];
  *(void *)&a1[v8] = v9;
  uint64_t v10 = *(int *)(v7 + 24);
  uint64_t v11 = &a1[v10];
  char v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  id v15 = v9;
  v14(v11, v12, v13);
  return a1;
}

char *sub_1005B99F8(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = sub_100063814((uint64_t *)&unk_10109BF50);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
LABEL_7:
  uint64_t v10 = type metadata accessor for WidgetDiskCache();
  uint64_t v11 = *(int *)(v10 + 20);
  char v12 = *(void **)&a2[v11];
  uint64_t v13 = *(void **)&a1[v11];
  *(void *)&a1[v11] = v12;
  id v14 = v12;

  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = &a1[v15];
  id v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

char *sub_1005B9BE0(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_100063814((uint64_t *)&unk_10109BF50);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  uint64_t v7 = type metadata accessor for WidgetDiskCache();
  *(void *)&a1[*(int *)(v7 + 20)] = *(void *)&a2[*(int *)(v7 + 20)];
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

char *sub_1005B9D4C(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 40))(a1, a2, v4);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v9 = sub_100063814((uint64_t *)&unk_10109BF50);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
LABEL_7:
  uint64_t v10 = type metadata accessor for WidgetDiskCache();
  uint64_t v11 = *(int *)(v10 + 20);
  char v12 = *(void **)&a1[v11];
  *(void *)&a1[v11] = *(void *)&a2[v11];

  uint64_t v13 = *(int *)(v10 + 24);
  id v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for Logger();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_1005B9F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005B9F44);
}

uint64_t sub_1005B9F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetDiskCache();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1005B9FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005B9FC4);
}

uint64_t sub_1005B9FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetDiskCache();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WidgetRecommendationDiskCache(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B0DD0);
}

uint64_t sub_1005BA054()
{
  uint64_t result = type metadata accessor for WidgetDiskCache();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1005BA0E0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100014CA4(v0, qword_1010B0C78);
  sub_100050A90(v0, (uint64_t)qword_1010B0C78);
  return static Logger.music(_:)();
}

uint64_t type metadata accessor for WidgetMusicRecommendation(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B0E70);
}

uint64_t sub_1005BA164(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005BA1CC()
{
  uint64_t v1 = type metadata accessor for WidgetDiskCache();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  unint64_t v3 = (*(void *)(*(void *)(v1 - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010B0E08) - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  swift_unknownObjectRelease();
  uint64_t v6 = v0 + v2;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }

  uint64_t v9 = v6 + *(int *)(v1 + 24);
  uint64_t v10 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for WidgetMusicRecommendation(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v5, 1, v11))
  {
    uint64_t v12 = type metadata accessor for Date();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v0 + v5, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_1005BA470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010B0E08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005BA4D8(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for WidgetDiskCache() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_100063814(&qword_1010B0E08) - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v1 + v6;
  uint64_t v13 = v1 + v7;
  uint64_t v14 = *(void *)(v1 + v7);
  uint64_t v15 = *(void *)(v13 + 8);
  uint64_t v16 = v1 + v9;
  id v17 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v17;
  *id v17 = v3;
  v17[1] = sub_1000154F4;
  return sub_1006A8E58(a1, v10, v11, v12, v14, v15, v16);
}

uint64_t sub_1005BA658()
{
  swift_release();

  return swift_deallocObject();
}

unsigned char *storeEnumTagSinglePayload for WidgetMusicRecommendationKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005BA75CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetMusicRecommendationKind()
{
  return &type metadata for WidgetMusicRecommendationKind;
}

void *sub_1005BA794(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1005BA8A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005BA934(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1005BA9F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005BAAE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t sub_1005BAB78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005BAC3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005BAC50);
}

uint64_t sub_1005BAC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1005BAD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005BAD24);
}

uint64_t sub_1005BAD24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Date();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1005BADE0()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1005BAE94()
{
  unint64_t result = qword_1010B0EB8;
  if (!qword_1010B0EB8)
  {
    sub_10006389C(&qword_1010B0EC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0EB8);
  }
  return result;
}

unint64_t sub_1005BAEF4()
{
  unint64_t result = qword_1010B0EC8;
  if (!qword_1010B0EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0EC8);
  }
  return result;
}

unint64_t sub_1005BAF48()
{
  unint64_t result = qword_1010B0ED8;
  if (!qword_1010B0ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0ED8);
  }
  return result;
}

unint64_t sub_1005BAF9C()
{
  unint64_t result = qword_1010B0EE0;
  if (!qword_1010B0EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0EE0);
  }
  return result;
}

uint64_t sub_1005BAFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WidgetMusicRecommendation(0);
  __chkstk_darwin(v4);
  uint64_t v59 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v58 = (uint64_t)&v56 - v7;
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v56 - v9;
  __chkstk_darwin(v11);
  uint64_t v57 = (uint64_t)&v56 - v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v56 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v56 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v56 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v56 - v23;
  char v25 = static Date.== infix(_:_:)();
  sub_1005BA164(a1, (uint64_t)v24, type metadata accessor for WidgetMusicRecommendation);
  sub_1005BA164(a2, (uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
  if ((v25 & 1) == 0)
  {
    sub_1005BB930((uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
    sub_1005BB930((uint64_t)v24, type metadata accessor for WidgetMusicRecommendation);
LABEL_15:
    sub_1005BA164(a1, (uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
    sub_1005BA164(a2, (uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
    goto LABEL_16;
  }
  uint64_t v56 = v4;
  uint64_t v26 = *(int *)(v4 + 20);
  uint64_t v27 = &v24[v26];
  uint64_t v28 = *(void *)&v24[v26 + 8];
  uint64_t v29 = &v21[v26];
  uint64_t v30 = *((void *)v29 + 1);
  if (!v28)
  {
    swift_bridgeObjectRetain();
    sub_1005BB930((uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
    sub_1005BB930((uint64_t)v24, type metadata accessor for WidgetMusicRecommendation);
    if (!v30)
    {
LABEL_23:
      sub_1005BA164(a1, (uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
      sub_1005BA164(a2, (uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
      goto LABEL_24;
    }
    goto LABEL_14;
  }
  if (!v30)
  {
    swift_bridgeObjectRetain();
    sub_1005BB930((uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
    sub_1005BB930((uint64_t)v24, type metadata accessor for WidgetMusicRecommendation);
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (*(void *)v27 == *(void *)v29 && v28 == v30)
  {
    swift_bridgeObjectRetain();
    sub_1005BB930((uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
    sub_1005BB930((uint64_t)v24, type metadata accessor for WidgetMusicRecommendation);
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  sub_1005BB930((uint64_t)v21, type metadata accessor for WidgetMusicRecommendation);
  sub_1005BB930((uint64_t)v24, type metadata accessor for WidgetMusicRecommendation);
  swift_bridgeObjectRelease();
  sub_1005BA164(a1, (uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
  sub_1005BA164(a2, (uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
  if ((v32 & 1) == 0)
  {
LABEL_16:
    sub_1005BB930((uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
    sub_1005BB930((uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
    goto LABEL_17;
  }
LABEL_24:
  uint64_t v40 = v56;
  uint64_t v41 = *(int *)(v56 + 24);
  uint64_t v42 = &v18[v41];
  uint64_t v43 = *(void *)&v18[v41 + 8];
  uint64_t v44 = &v15[v41];
  uint64_t v45 = *((void *)v44 + 1);
  if (!v43)
  {
    swift_bridgeObjectRetain();
    sub_1005BB930((uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
    sub_1005BB930((uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
    if (!v45)
    {
LABEL_36:
      uint64_t v33 = v57;
      sub_1005BA164(a1, v57, type metadata accessor for WidgetMusicRecommendation);
      sub_1005BA164(a2, (uint64_t)v10, type metadata accessor for WidgetMusicRecommendation);
      goto LABEL_37;
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v33 = v57;
    sub_1005BA164(a1, v57, type metadata accessor for WidgetMusicRecommendation);
    sub_1005BA164(a2, (uint64_t)v10, type metadata accessor for WidgetMusicRecommendation);
    goto LABEL_18;
  }
  if (!v45)
  {
    swift_bridgeObjectRetain();
    sub_1005BB930((uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
    sub_1005BB930((uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (*(void *)v42 == *(void *)v44 && v43 == v45)
  {
    swift_bridgeObjectRetain();
    sub_1005BB930((uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
    sub_1005BB930((uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain();
  sub_1005BB930((uint64_t)v15, type metadata accessor for WidgetMusicRecommendation);
  sub_1005BB930((uint64_t)v18, type metadata accessor for WidgetMusicRecommendation);
  swift_bridgeObjectRelease();
  uint64_t v33 = v57;
  sub_1005BA164(a1, v57, type metadata accessor for WidgetMusicRecommendation);
  sub_1005BA164(a2, (uint64_t)v10, type metadata accessor for WidgetMusicRecommendation);
  if ((v47 & 1) == 0) {
    goto LABEL_18;
  }
LABEL_37:
  uint64_t v48 = *(int *)(v40 + 28);
  int v49 = *(unsigned __int8 *)(v33 + v48);
  int v50 = v10[v48];
  if (v49 == 6)
  {
    sub_1005BB930((uint64_t)v10, type metadata accessor for WidgetMusicRecommendation);
    sub_1005BB930(v33, type metadata accessor for WidgetMusicRecommendation);
    if (v50 == 6)
    {
      uint64_t v51 = a1;
      uint64_t v35 = v58;
      sub_1005BA164(v51, v58, type metadata accessor for WidgetMusicRecommendation);
      uint64_t v52 = a2;
      uint64_t v37 = v59;
      sub_1005BA164(v52, v59, type metadata accessor for WidgetMusicRecommendation);
LABEL_42:
      char v38 = sub_1007AA99C(*(void *)(v35 + *(int *)(v40 + 32)), *(void *)(v37 + *(int *)(v40 + 32)));
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  if (v50 == 6)
  {
LABEL_18:
    sub_1005BB930((uint64_t)v10, type metadata accessor for WidgetMusicRecommendation);
    sub_1005BB930(v33, type metadata accessor for WidgetMusicRecommendation);
LABEL_19:
    uint64_t v34 = a1;
    uint64_t v35 = v58;
    sub_1005BA164(v34, v58, type metadata accessor for WidgetMusicRecommendation);
    uint64_t v36 = a2;
    uint64_t v37 = v59;
    sub_1005BA164(v36, v59, type metadata accessor for WidgetMusicRecommendation);
    goto LABEL_20;
  }
  char v53 = sub_10052236C(v49, v10[v48]);
  sub_1005BB930((uint64_t)v10, type metadata accessor for WidgetMusicRecommendation);
  sub_1005BB930(v33, type metadata accessor for WidgetMusicRecommendation);
  uint64_t v54 = a1;
  uint64_t v35 = v58;
  sub_1005BA164(v54, v58, type metadata accessor for WidgetMusicRecommendation);
  uint64_t v55 = a2;
  uint64_t v37 = v59;
  sub_1005BA164(v55, v59, type metadata accessor for WidgetMusicRecommendation);
  if (v53) {
    goto LABEL_42;
  }
LABEL_20:
  char v38 = 0;
LABEL_21:
  sub_1005BB930(v35, type metadata accessor for WidgetMusicRecommendation);
  sub_1005BB930(v37, type metadata accessor for WidgetMusicRecommendation);
  return v38 & 1;
}

unint64_t sub_1005BB7A8(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100FC7380, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 6) {
    return 6;
  }
  else {
    return v3;
  }
}

unint64_t sub_1005BB7F4()
{
  unint64_t result = qword_1010B0EF8;
  if (!qword_1010B0EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0EF8);
  }
  return result;
}

unint64_t sub_1005BB848()
{
  unint64_t result = qword_1010B0F08;
  if (!qword_1010B0F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0F08);
  }
  return result;
}

uint64_t sub_1005BB89C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(&qword_1010B0EE8);
    sub_1005BB990(a2, (void (*)(uint64_t))type metadata accessor for WidgetMusicItem);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005BB930(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005BB990(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005BB9D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for WidgetMusicRecommendation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005BBB0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetMusicRecommendation.CodingKeys()
{
  return &type metadata for WidgetMusicRecommendation.CodingKeys;
}

unint64_t sub_1005BBB48()
{
  unint64_t result = qword_1010B0F20;
  if (!qword_1010B0F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0F20);
  }
  return result;
}

unint64_t sub_1005BBBA0()
{
  unint64_t result = qword_1010B0F28;
  if (!qword_1010B0F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0F28);
  }
  return result;
}

unint64_t sub_1005BBBF8()
{
  unint64_t result = qword_1010B0F30;
  if (!qword_1010B0F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B0F30);
  }
  return result;
}

uint64_t sub_1005BBC4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461446863746566 && a2 == 0xE900000000000065;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617A696C61636F6CLL && a2 == 0xEC0000006E6F6974 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1005BBE70(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v24 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v25 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = a2 + 56;
LABEL_7:
  if (v7)
  {
    unint64_t v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v10 = v9 | (v4 << 6);
    goto LABEL_23;
  }
  int64_t v11 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v11 < v25)
    {
      unint64_t v12 = *(void *)(v24 + 8 * v11);
      ++v4;
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v25) {
        return 1;
      }
      unint64_t v12 = *(void *)(v24 + 8 * v4);
      if (v12) {
        goto LABEL_22;
      }
      int64_t v4 = v11 + 2;
      if (v11 + 2 >= v25) {
        return 1;
      }
      unint64_t v12 = *(void *)(v24 + 8 * v4);
      if (v12)
      {
LABEL_22:
        unint64_t v7 = (v12 - 1) & v12;
        unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
        int v14 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v10);
        Hasher.init(_seed:)();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v15 = Hasher._finalize()();
        uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v17 = v15 & ~v16;
        if ((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
        {
          int64_t v26 = v4;
          uint64_t v18 = ~v16;
          while (1)
          {
            if (*(unsigned char *)(*(void *)(a2 + 48) + v17))
            {
              if (*(unsigned char *)(*(void *)(a2 + 48) + v17) == 1) {
                uint64_t v19 = 0x657469726F766166;
              }
              else {
                uint64_t v19 = 0x64616F6C6E776F64;
              }
              unint64_t v20 = 0xE900000000000073;
              if (v14)
              {
LABEL_33:
                if (v14 == 1) {
                  uint64_t v22 = 0x657469726F766166;
                }
                else {
                  uint64_t v22 = 0x64616F6C6E776F64;
                }
                unint64_t v21 = 0xE900000000000073;
                if (v19 != v22) {
                  goto LABEL_38;
                }
                goto LABEL_37;
              }
            }
            else
            {
              unint64_t v20 = 0xE300000000000000;
              uint64_t v19 = 7105633;
              if (v14) {
                goto LABEL_33;
              }
            }
            unint64_t v21 = 0xE300000000000000;
            if (v19 != 7105633) {
              goto LABEL_38;
            }
LABEL_37:
            if (v20 == v21)
            {
              unint64_t result = swift_bridgeObjectRelease_n();
              int64_t v4 = v26;
              goto LABEL_7;
            }
LABEL_38:
            char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            unint64_t result = swift_bridgeObjectRelease();
            if (v23)
            {
              int64_t v4 = v26;
              goto LABEL_7;
            }
            unint64_t v17 = (v17 + 1) & v18;
            if (((*(void *)(v8 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
              return 0;
            }
          }
        }
        return 0;
      }
      int64_t v13 = v11 + 3;
      if (v13 < v25)
      {
        unint64_t v12 = *(void *)(v24 + 8 * v13);
        if (v12)
        {
          int64_t v4 = v13;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v4 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_46;
          }
          if (v4 >= v25) {
            return 1;
          }
          unint64_t v12 = *(void *)(v24 + 8 * v4);
          ++v13;
          if (v12) {
            goto LABEL_22;
          }
        }
      }
    }
    return 1;
  }
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1005BC1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Playlist.Variant();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v45 = (char *)&v34 - v10;
  uint64_t result = __chkstk_darwin(v9);
  int64_t v13 = (char *)&v34 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v36 = a1;
  uint64_t v37 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  int64_t v38 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v42 = v5 + 32;
  uint64_t v43 = a2 + 56;
  uint64_t v44 = v5 + 16;
  uint64_t v19 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v34 = v13;
  uint64_t v35 = v5;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v40 = (v18 - 1) & v18;
  int64_t v41 = v14;
  for (unint64_t i = __clz(__rbit64(v18)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = *(void *)(v5 + 72);
    int64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v26(v13, *(void *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v13, v4);
    sub_1005BF980((unint64_t *)&unk_101099120);
    uint64_t v27 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v29 = v27 & ~v28;
    if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*v19)(v45, v4);
      return 0;
    }
    uint64_t v39 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v30 = a2;
    uint64_t v31 = ~v28;
    while (1)
    {
      v26(v8, *(void *)(v30 + 48) + v29 * v25, v4);
      sub_1005BF980((unint64_t *)&unk_10109C660);
      char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v33 = *v19;
      (*v19)(v8, v4);
      if (v32) {
        break;
      }
      unint64_t v29 = (v29 + 1) & v31;
      if (((*(void *)(v43 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v33(v45, v4);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v45, v4);
    a2 = v30;
    uint64_t v5 = v35;
    a1 = v36;
    int64_t v13 = v34;
    unint64_t v18 = v40;
    int64_t v14 = v41;
    if (v40) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v21);
    int64_t v23 = v14 + 1;
    if (!v22)
    {
      int64_t v23 = v14 + 2;
      if (v14 + 2 >= v38) {
        return 1;
      }
      unint64_t v22 = *(void *)(v37 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v14 + 3;
        if (v14 + 3 >= v38) {
          return 1;
        }
        unint64_t v22 = *(void *)(v37 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v14 + 4;
          if (v14 + 4 >= v38) {
            return 1;
          }
          unint64_t v22 = *(void *)(v37 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v40 = (v22 - 1) & v22;
    int64_t v41 = v23;
  }
  uint64_t v24 = v14 + 5;
  if (v14 + 5 >= v38) {
    return 1;
  }
  unint64_t v22 = *(void *)(v37 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v14 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      return 1;
    }
    unint64_t v22 = *(void *)(v37 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

Swift::Int sub_1005BC5CC(Swift::Int result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  Swift::Int v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  uint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (!v7)
    {
      int64_t v10 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v10 >= v8) {
        return 1;
      }
      uint64_t v7 = *(void *)(v4 + 8 * v10);
      ++v3;
      if (!v7)
      {
        int64_t v3 = v10 + 1;
        if (v10 + 1 >= v8) {
          return 1;
        }
        uint64_t v7 = *(void *)(v4 + 8 * v3);
        if (!v7)
        {
          int64_t v3 = v10 + 2;
          if (v10 + 2 >= v8) {
            return 1;
          }
          uint64_t v7 = *(void *)(v4 + 8 * v3);
          if (!v7)
          {
            int64_t v3 = v10 + 3;
            if (v10 + 3 >= v8) {
              return 1;
            }
            uint64_t v7 = *(void *)(v4 + 8 * v3);
            if (!v7) {
              break;
            }
          }
        }
      }
    }
LABEL_8:
    v7 &= v7 - 1;
    Hasher.init(_seed:)();
    Hasher._combine(_:)(0);
    uint64_t result = Hasher._finalize()();
    unint64_t v9 = result & ~(-1 << *(unsigned char *)(a2 + 32));
    if (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      return 0;
    }
  }
  int64_t v11 = v10 + 4;
  if (v11 >= v8) {
    return 1;
  }
  uint64_t v7 = *(void *)(v4 + 8 * v11);
  if (v7)
  {
    int64_t v3 = v11;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v3 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    uint64_t v7 = *(void *)(v4 + 8 * v3);
    ++v11;
    if (v7) {
      goto LABEL_8;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1005BC750(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      a2 = a1;
    }
    else {
      a2 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (v2 < 0) {
        a1 = v2;
      }
      else {
        a1 = v2 & 0xFFFFFFFFFFFFFF8;
      }
      return __CocoaSet.isEqual(to:)(a1, a2);
    }
    uint64_t v5 = a2;
    uint64_t v6 = v2;
LABEL_18:
    return sub_1005BD6B8(v5, v6);
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v5 = a2;
    }
    else {
      uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v6 = v3;
    goto LABEL_18;
  }
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = a1 + 56;
    uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(a1 + 56);
    int64_t v25 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = a2 + 56;
    if (!v12) {
      goto LABEL_29;
    }
LABEL_27:
    unint64_t v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    for (unint64_t i = v14 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v8 << 6))
    {
      uint64_t v19 = *(void *)(*(void *)(v3 + 48) + 8 * i);
      Hasher.init(_seed:)();
      Swift::UInt v20 = sub_1003FFBD4();
      Hasher._combine(_:)(v20);
      Swift::Int v21 = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v23 = v21 & ~v22;
      if (((*(void *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
        return 0;
      }
      uint64_t v24 = ~v22;
      while (1)
      {
        a1 = sub_1003FFBD4();
        if (a1 == *(void *)(v19 + 56)) {
          break;
        }
        unint64_t v23 = (v23 + 1) & v24;
        if (((*(void *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          return 0;
        }
      }
      if (v12) {
        goto LABEL_27;
      }
LABEL_29:
      int64_t v16 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        break;
      }
      if (v16 >= v25) {
        return 1;
      }
      unint64_t v17 = *(void *)(v9 + 8 * v16);
      ++v8;
      if (!v17)
      {
        int64_t v8 = v16 + 1;
        if (v16 + 1 >= v25) {
          return 1;
        }
        unint64_t v17 = *(void *)(v9 + 8 * v8);
        if (!v17)
        {
          int64_t v8 = v16 + 2;
          if (v16 + 2 >= v25) {
            return 1;
          }
          unint64_t v17 = *(void *)(v9 + 8 * v8);
          if (!v17)
          {
            int64_t v8 = v16 + 3;
            if (v16 + 3 >= v25) {
              return 1;
            }
            unint64_t v17 = *(void *)(v9 + 8 * v8);
            if (!v17)
            {
              int64_t v18 = v16 + 4;
              if (v18 >= v25) {
                return 1;
              }
              unint64_t v17 = *(void *)(v9 + 8 * v18);
              if (!v17)
              {
                while (1)
                {
                  int64_t v8 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_53;
                  }
                  if (v8 >= v25) {
                    return 1;
                  }
                  unint64_t v17 = *(void *)(v9 + 8 * v8);
                  ++v18;
                  if (v17) {
                    goto LABEL_44;
                  }
                }
              }
              int64_t v8 = v18;
            }
          }
        }
      }
LABEL_44:
      unint64_t v12 = (v17 - 1) & v17;
    }
    __break(1u);
LABEL_53:
    __break(1u);
    return __CocoaSet.isEqual(to:)(a1, a2);
  }
  return 0;
}

uint64_t sub_1005BCA10(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain_n();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v18 = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1005BCCC0()
{
  _s11PreferencesCMa();
  swift_allocObject();
  uint64_t result = sub_1005BCD74();
  qword_101129B38 = result;
  return result;
}

uint64_t sub_1005BCD00()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1005BCD74()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtCO5Music14ClarityUIMusic11Preferences_selectedPlaylistsObserver;
  *(void *)(v0 + OBJC_IVAR____TtCO5Music14ClarityUIMusic11Preferences_selectedPlaylistsObserver) = 0;
  sub_1005BD57C();
  id v3 = [(id)swift_getObjCClassFromMetadata() sharedInstance];
  uint64_t v4 = &selRef_setManagingNavigationController_;
  id v5 = [v3 selectedPlaylists];
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  int64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v24 = v2;
    sub_1005BD944(0, v7, 0);
    unint64_t v8 = _swiftEmptyArrayStorage;
    uint64_t v9 = v6 + 40;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = MusicItemID.init(rawValue:)();
      uint64_t v12 = v11;
      aBlock[0] = v8;
      unint64_t v14 = v8[2];
      unint64_t v13 = v8[3];
      if (v14 >= v13 >> 1)
      {
        sub_1005BD944(v13 > 1, v14 + 1, 1);
        unint64_t v8 = (void *)aBlock[0];
      }
      v9 += 16;
      v8[2] = v14 + 1;
      uint64_t v15 = &v8[2 * v14];
      v15[4] = v10;
      v15[5] = v12;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v2 = v24;
    uint64_t v4 = &selRef_setManagingNavigationController_;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v8 = _swiftEmptyArrayStorage;
  }
  uint64_t v16 = sub_1005F697C((uint64_t)v8);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  void aBlock[6] = v16;
  sub_100063814((uint64_t *)&unk_1010B0F90);
  Published.init(initialValue:)();
  swift_endAccess();
  uint64_t v17 = v4[296];
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v3;
  *(void *)(v19 + 24) = v18;
  aBlock[4] = sub_1005BF970;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100020238;
  aBlock[3] = &unk_100FE15A0;
  unint64_t v20 = _Block_copy(aBlock);
  id v21 = v3;
  swift_release();
  id v22 = [v21 observeUpdatesForSelector:v17 handler:v20];

  _Block_release(v20);
  *(void *)(v1 + v2) = v22;
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1005BD034(void *a1)
{
  id v1 = [a1 selectedPlaylists];
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    sub_1005BD944(0, v3, 0);
    uint64_t v4 = v2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = MusicItemID.init(rawValue:)();
      uint64_t v7 = v6;
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1) {
        sub_1005BD944(v8 > 1, v9 + 1, 1);
      }
      v4 += 16;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      uint64_t v10 = &_swiftEmptyArrayStorage[2 * v9];
      v10[4] = v5;
      v10[5] = v7;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1005F697C((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  if (!*(void *)(v11 + 16))
  {
    if (qword_101097958 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100050A90(v12, (uint64_t)qword_101128E90);
    unint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Error: Playlist should not be empty", v15, 2u);
      swift_slowDealloc();
    }
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v16 = swift_bridgeObjectRetain();
    char v17 = sub_1005BCA10(v16, v11);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (v17) {
      return swift_bridgeObjectRelease();
    }
  }
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return swift_bridgeObjectRelease();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  return static Published.subscript.setter();
}

uint64_t sub_1005BD340()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCO5Music14ClarityUIMusic11Preferences__selectedPlaylists;
  uint64_t v2 = sub_100063814((uint64_t *)&unk_1010B10D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1005BD3F4()
{
  return _s11PreferencesCMa();
}

uint64_t _s11PreferencesCMa()
{
  uint64_t result = qword_1010B0F78;
  if (!qword_1010B0F78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005BD448()
{
  sub_1005BD4E0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1005BD4E0()
{
  if (!qword_1010B0F88)
  {
    sub_10006389C((uint64_t *)&unk_1010B0F90);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1010B0F88);
    }
  }
}

uint64_t sub_1005BD53C@<X0>(uint64_t *a1@<X8>)
{
  _s11PreferencesCMa();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1005BD57C()
{
  unint64_t result = qword_1010B1060;
  if (!qword_1010B1060)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010B1060);
  }
  return result;
}

uint64_t sub_1005BD5BC@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1005BD63C()
{
  return static Published.subscript.setter();
}

uint64_t sub_1005BD6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = __CocoaSet.count.getter();
  if (v3 != result) {
    return 0;
  }
  int64_t v5 = 0;
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v9 &= v9 - 1;
LABEL_6:
    swift_retain();
    char v11 = __CocoaSet.contains(_:)();
    uint64_t result = swift_release();
    if ((v11 & 1) == 0) {
      return 0;
    }
  }
  int64_t v12 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v12 >= v10) {
    return 1;
  }
  uint64_t v13 = *(void *)(v6 + 8 * v12);
  ++v5;
  if (v13) {
    goto LABEL_19;
  }
  int64_t v5 = v12 + 1;
  if (v12 + 1 >= v10) {
    return 1;
  }
  uint64_t v13 = *(void *)(v6 + 8 * v5);
  if (v13)
  {
LABEL_19:
    uint64_t v9 = (v13 - 1) & v13;
    goto LABEL_6;
  }
  int64_t v14 = v12 + 2;
  if (v14 >= v10) {
    return 1;
  }
  uint64_t v13 = *(void *)(v6 + 8 * v14);
  if (v13)
  {
    int64_t v5 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v5 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v5 >= v10) {
      return 1;
    }
    uint64_t v13 = *(void *)(v6 + 8 * v5);
    ++v14;
    if (v13) {
      goto LABEL_19;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1005BD810(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BDDD0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BD830(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BDF5C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1005BD850(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000777B8(a1, a2, a3, (void *)*v3, &qword_1010A9040, (uint64_t (*)(void))&type metadata accessor for AudioVariant);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BD88C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000777B8(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1010A11F0, (uint64_t (*)(void))&type metadata accessor for Track);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BD8C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000777B8(a1, a2, a3, (void *)*v3, &qword_1010B1098, type metadata accessor for PlaylistCurators.Curator);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BD904(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BE0DC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1005BD924(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BE23C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BD944(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BE484(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1005BD964(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BE8AC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BD984(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BF61C(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1010A98B0, &qword_1010AE2B0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BD9B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000777B8(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1010B1100, (uint64_t (*)(void))&type metadata accessor for Playlist.Entry.Reaction);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BD9F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BEA50(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1005BDA10(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BE5F0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1005BDA30(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BF7AC(a1, a2, a3, *v3, &qword_1010B1128);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1005BDA58(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000777B8(a1, a2, a3, (void *)*v3, &qword_1010A1258, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BDA94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000777B8(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1010A11B0, type metadata accessor for SidebarMenu.Item);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BDAD0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000777B8(a1, a2, a3, (void *)*v3, &qword_1010A1270, (uint64_t (*)(void))&type metadata accessor for Playlist);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BDB0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000777B8(a1, a2, a3, (void *)*v3, &qword_1010B1070, (uint64_t (*)(void))&type metadata accessor for MusicPlayActivityFields);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BDB48(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BEBD0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1005BDB68(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BF61C(a1, a2, a3, (void *)*v3, &qword_10109BA60, (uint64_t *)&unk_1010B10C0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BDB98(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BED3C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1005BDBB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BEEA8(a1, a2, a3, (void *)*v3, &qword_1010B1078, &qword_1010B1080);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BDBE8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000777B8(a1, a2, a3, (void *)*v3, &qword_1010A1230, (uint64_t (*)(void))&type metadata accessor for IndexPath);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BDC24(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BEEA8(a1, a2, a3, (void *)*v3, &qword_1010A75D0, (uint64_t *)&unk_1010A12E0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BDC54(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BF35C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1005BDC74(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000777B8(a1, a2, a3, (void *)*v3, &qword_1010B1140, (uint64_t (*)(void))&type metadata accessor for LayoutSubview);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BDCB0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BF4BC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1005BDCD0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BF61C(a1, a2, a3, (void *)*v3, &qword_1010B1150, &qword_1010A9048);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BDD00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BF61C(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1010A14F0, &qword_10109F968);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BDD30(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000777B8(a1, a2, a3, (void *)*v3, &qword_1010A1200, (uint64_t (*)(void))&type metadata accessor for Playlist.Entry);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BDD6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000777B8(a1, a2, a3, (void *)*v3, &qword_1010B6FD0, type metadata accessor for SharePlayTogetherSessionManagementViewController.SnapshotIdentifier);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1005BDDA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1005BF7AC(a1, a2, a3, *v3, &qword_1010B1120);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1005BDDD0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814((uint64_t *)&unk_1010B10B0);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_100063814(&qword_1010A66A0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BDF5C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814((uint64_t *)&unk_1010B1110);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BE0BC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000777B8(a1, a2, a3, a4, &qword_1010A9040, (uint64_t (*)(void))&type metadata accessor for AudioVariant);
}

uint64_t sub_1005BE0DC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814(&qword_1010D2130);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BE23C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100063814(&qword_1010B1088);
  uint64_t v10 = *(void *)(sub_100063814(&qword_1010B1090) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100063814(&qword_1010B1090) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  id v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BE484(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814(&qword_10109C9E0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BE5F0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814((uint64_t *)&unk_1010A11E0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BE740(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814(&qword_1010A14C0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BE8AC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814((uint64_t *)&unk_1010A11C0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_100063814(&qword_10109AEB0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BEA50(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814(&qword_10109FD18);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 104 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BEBD0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814((uint64_t *)&unk_1010B1130);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BED3C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814(&qword_1010A12A8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BEEA8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_100063814(a5);
    unint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 17;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 16 * v11) {
      memmove(v13 + 4, a4 + 4, 16 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 16 * v11 || v16 >= v17 + 16 * v11)
  {
    sub_100063814(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BF038(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814((uint64_t *)&unk_1010B10E0);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 < a4 || v12 >= v13 + 96 * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v10 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v13 >= v12 + 96 * v8 || v12 >= v13 + 96 * v8)
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BF1E0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814(qword_1010A8FB8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    memcpy(v12, v13, 24 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BF35C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814(&qword_1010998C0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BF4BC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814(&qword_1010B1148);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BF61C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_100063814(a5);
    unint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 25;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11) {
      memmove(v13 + 4, a4 + 4, 8 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    sub_100063814(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BF7AC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    sub_100063814(a5);
    uint64_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v11 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005BF8F8()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005BF930()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005BF970()
{
  return sub_1005BD034(*(void **)(v0 + 16));
}

uint64_t sub_1005BF980(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Playlist.Variant();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_1005BF9C4(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  int64_t v10 = &v4[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_completionHandler];
  *(void *)int64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  uint64_t v11 = &v4[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dismissedHandler];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_sourceTracks] = _swiftEmptyArrayStorage;
  uint64_t v12 = OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dataSource;
  type metadata accessor for PickerDataSource();
  swift_allocObject();
  unint64_t v13 = v4;
  *(void *)&v4[v12] = sub_1005C01F4();

  v31.receiver = v13;
  v31.super_class = ObjectType;
  int64_t v14 = [super initWithFrame:a1, a2, a3, a4];
  uint64_t v15 = OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dataSource;
  sub_1005C1004(&qword_1010B1320, (void (*)(uint64_t))type metadata accessor for PickerDataSource);
  unint64_t v16 = v14;
  swift_retain();
  uint64_t v29 = ObservedObject.init(wrappedValue:)();
  uint64_t v30 = v17;
  id v18 = objc_allocWithZone((Class)sub_100063814(&qword_1010B1328));
  uint64_t v19 = (void *)_UIHostingView.init(rootView:)();
  [v16 addSubview:v19];

  uint64_t v20 = *(void *)&v16[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_completionHandler];
  uint64_t v21 = *(void *)&v16[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_completionHandler + 8];
  unint64_t v22 = (uint64_t *)(*(void *)&v14[v15]
                  + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_completionHandler);
  uint64_t v23 = *v22;
  uint64_t *v22 = v20;
  v22[1] = v21;
  sub_10007B674(v20);
  sub_10006ADFC(v23);
  uint64_t v24 = *(void *)&v16[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dismissedHandler];
  uint64_t v25 = *(void *)&v16[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dismissedHandler + 8];
  uint64_t v26 = (uint64_t *)(*(void *)&v14[v15]
                  + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler);
  uint64_t v27 = *v26;
  *uint64_t v26 = v24;
  v26[1] = v25;
  sub_10007B674(v24);
  sub_10006ADFC(v27);
  return v16;
}

uint64_t type metadata accessor for MusicPickerSheetContainerView()
{
  return self;
}

uint64_t sub_1005BFD60()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1005BFDD4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1005BFE48()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  if ((v6 & 1) == 0)
  {
    uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler);
    uint64_t v3 = *(void (**)(uint64_t))(v0
                                        + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler);
    if (v3)
    {
      uint64_t v4 = swift_retain();
      v3(v4);
      sub_10006ADFC((uint64_t)v3);
      uint64_t v5 = *v2;
    }
    else
    {
      uint64_t v5 = 0;
    }
    uint64_t *v2 = 0;
    v2[1] = 0;
    return sub_10006ADFC(v5);
  }
  return result;
}

uint64_t sub_1005BFF58()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource__sourceTracks;
  uint64_t v2 = sub_100063814(&qword_1010B5140);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource__isPresentingPicker;
  uint64_t v4 = sub_100063814(&qword_10109C180);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_10006ADFC(*(void *)(v0
                          + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_completionHandler));
  sub_10006ADFC(*(void *)(v0
                          + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler));

  return swift_deallocClassInstance();
}

uint64_t sub_1005C006C()
{
  return type metadata accessor for PickerDataSource();
}

uint64_t type metadata accessor for PickerDataSource()
{
  uint64_t result = qword_1010B11E8;
  if (!qword_1010B11E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005C00C0()
{
  sub_1005C0198();
  if (v0 <= 0x3F)
  {
    sub_10000E1C4();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1005C0198()
{
  if (!qword_1010B11F8)
  {
    sub_10006389C((uint64_t *)&unk_1010A9910);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1010B11F8);
    }
  }
}

uint64_t sub_1005C01F4()
{
  uint64_t v1 = sub_100063814(&qword_10109C180);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100063814(&qword_1010B5140);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource__sourceTracks;
  uint64_t v15 = _swiftEmptyArrayStorage;
  sub_100063814((uint64_t *)&unk_1010A9910);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v6 + 32))(v9, v8, v5);
  uint64_t v10 = v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource__isPresentingPicker;
  v14[7] = 0;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v2 + 32))(v10, v4, v1);
  uint64_t v11 = (void *)(v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_completionHandler);
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = (void *)(v0 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler);
  *uint64_t v12 = 0;
  v12[1] = 0;
  return v0;
}

uint64_t sub_1005C03DC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for PickerDataSource();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1005C041C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v15 = a3;
  uint64_t v5 = sub_100063814(&qword_1010B5100);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PickerDataSource();
  sub_1005C1004(&qword_1010B1320, (void (*)(uint64_t))type metadata accessor for PickerDataSource);
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v14 = v16;
  v13[3] = v17;
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  if (qword_101097EA8 != -1) {
    swift_once();
  }
  (*(void (**)(void))(*(void *)qword_101129410 + 680))();
  MusicPicker.Reason.PlaybackSessionAttributes.init(isCollaborative:)();
  uint64_t v8 = enum case for MusicPicker.Reason.playbackQueue(_:);
  uint64_t v9 = type metadata accessor for MusicPicker.Reason();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  swift_retain();
  sub_100063814((uint64_t *)&unk_1010B5120);
  type metadata accessor for Track();
  sub_1000D1318();
  sub_1005C1004((unint64_t *)&unk_1010B5130, (void (*)(uint64_t))&type metadata accessor for Track);
  View.musicPicker<A>(isPresented:selection:reason:onCompletion:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1005C104C((uint64_t)v7);
}

uint64_t sub_1005C0794@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1005C0818()
{
  return sub_1005BFE48();
}

uint64_t sub_1005C0840@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1005C08C4()
{
  return static Published.subscript.setter();
}

uint64_t sub_1005C0944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a1;
  v3[4] = a3;
  sub_100063814(&qword_1010A1C60);
  v3[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[6] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1005C0A0C, v5, v4);
}

uint64_t sub_1005C0A0C()
{
  uint64_t v1 = v0[3];
  swift_release();
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = v0[5];
    uint64_t v3 = v0[3];
    sub_10013CF98();
    v0[2] = v3;
    uint64_t v4 = type metadata accessor for Track();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
    swift_bridgeObjectRetain();
    sub_100063814((uint64_t *)&unk_1010A9910);
    sub_1005C10AC();
    uint64_t v5 = (void *)MPCPlaybackIntent.init<A, B>(for:startingAt:)();
    if (qword_101097EA8 != -1) {
      swift_once();
    }
    uint64_t v6 = (void *)(*(uint64_t (**)(void))(*(void *)qword_101129410 + 528))();
    if (v6) {

    }
    uint64_t v7 = v0[4];
    MPCPlaybackIntent.isInGroupSession.setter();
    uint64_t v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_completionHandler);
    uint64_t v9 = *(void (**)(void *))(v7
                                       + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_completionHandler);
    if (v9)
    {
      swift_retain();
      v9(v5);

      sub_10006ADFC((uint64_t)v9);
    }
    else
    {
    }
    uint64_t v10 = v0[4];
    uint64_t v11 = *v8;
    *uint64_t v8 = 0;
    v8[1] = 0;
    sub_10006ADFC(v11);
    uint64_t v12 = (void *)(v10 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler);
    uint64_t v13 = *(void *)(v10 + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler);
    *uint64_t v12 = 0;
    v12[1] = 0;
    sub_10006ADFC(v13);
  }
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1005C0C38@<X0>(uint64_t a1@<X8>)
{
  return sub_1005C041C(*v1, v1[1], a1);
}

id sub_1005C0C40(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for MusicPickerSheetContainerView();
  uint64_t v8 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v8[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_sourceTracks] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dataSource;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  swift_bridgeObjectRetain();
  static Published.subscript.setter();
  uint64_t v10 = (uint64_t *)&v8[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_completionHandler];
  uint64_t v11 = *(void *)&v8[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_completionHandler];
  *uint64_t v10 = a3;
  v10[1] = a4;
  swift_retain_n();
  sub_10006ADFC(v11);
  uint64_t v12 = *v10;
  uint64_t v13 = v10[1];
  uint64_t v14 = (uint64_t *)(*(void *)&v8[v9]
                  + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_completionHandler);
  uint64_t v15 = *v14;
  *uint64_t v14 = *v10;
  v14[1] = v13;
  sub_10007B674(v12);
  sub_10006ADFC(v15);
  swift_release();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v8;
  v16[3] = a3;
  v16[4] = a4;
  unsigned __int8 v17 = (uint64_t *)&v8[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dismissedHandler];
  uint64_t v18 = *(void *)&v8[OBJC_IVAR____TtC5Music29MusicPickerSheetContainerView_dismissedHandler];
  *unsigned __int8 v17 = (uint64_t)sub_1005C0EBC;
  v17[1] = (uint64_t)v16;
  swift_retain();
  uint64_t v19 = v8;
  swift_retain();
  sub_10006ADFC(v18);
  uint64_t v20 = *v17;
  uint64_t v21 = v17[1];
  unint64_t v22 = (uint64_t *)(*(void *)&v8[v9]
                  + OBJC_IVAR____TtC5MusicP33_9483708C00E732EC5A275F87AB02BE8316PickerDataSource_dismissedHandler);
  uint64_t v23 = *v22;
  uint64_t *v22 = *v17;
  v22[1] = v21;
  sub_10007B674(v20);
  sub_10006ADFC(v23);
  swift_release();
  id result = [a1 view];
  if (result)
  {
    uint64_t v25 = result;
    [result addSubview:v19];

    swift_retain();
    sub_1005BFE48();

    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005C0E7C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005C0EBC()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 24);
  [*(id *)(v0 + 16) removeFromSuperview];
  return v1(0);
}

ValueMetadata *type metadata accessor for MediaPickerWrapper()
{
  return &type metadata for MediaPickerWrapper;
}

uint64_t sub_1005C0F08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005C0F24()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005C0F5C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1000154F4;
  return sub_1005C0944(a1, v5, v4);
}

uint64_t sub_1005C1004(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005C104C(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010B5100);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1005C10AC()
{
  unint64_t result = qword_1010AAFD0;
  if (!qword_1010AAFD0)
  {
    sub_10006389C((uint64_t *)&unk_1010A9910);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1010AAFD0);
  }
  return result;
}

uint64_t sub_1005C1108()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1005C11B8()
{
  unint64_t result = qword_1010B1340;
  if (!qword_1010B1340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B1340);
  }
  return result;
}

unint64_t sub_1005C1210()
{
  unint64_t result = qword_1010B1348;
  if (!qword_1010B1348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B1348);
  }
  return result;
}

uint64_t sub_1005C1264()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1005C1298()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005C12B4()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100014CA4(v0, qword_101129B40);
  sub_100050A90(v0, (uint64_t)qword_101129B40);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1005C1318()
{
  uint64_t v0 = sub_100063814(&qword_1010B1390);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100063814(&qword_1010B1398);
  __chkstk_darwin(v1);
  sub_1005C2FD8();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x8000000100DC12F0;
  v2._countAndFlagsBits = 0xD000000000000015;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_100063814(&qword_1010B13A0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1005C14A8(uint64_t a1, uint64_t a2)
{
  v2[30] = a1;
  v2[31] = a2;
  uint64_t v3 = type metadata accessor for MusicLibrary.UndoDislikeAction.UnsupportedReason();
  v2[32] = v3;
  v2[33] = *(void *)(v3 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  v2[37] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MusicLibrary.UndoDislikeAction();
  v2[38] = v4;
  v2[39] = *(void *)(v4 - 8);
  v2[40] = swift_task_alloc();
  uint64_t v5 = sub_100063814(&qword_1010B1378);
  v2[41] = v5;
  v2[42] = *(void *)(v5 - 8);
  v2[43] = swift_task_alloc();
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  type metadata accessor for GenericMusicItemEntity();
  v2[47] = swift_task_alloc();
  v2[48] = swift_task_alloc();
  v2[49] = swift_task_alloc();
  v2[50] = swift_task_alloc();
  return _swift_task_switch(sub_1005C16C8, 0, 0);
}

uint64_t sub_1005C16C8()
{
  v86 = v0;
  uint64_t v1 = (long long *)(v0 + 7);
  if (qword_101097FC8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  v0[51] = sub_100050A90(v2, (uint64_t)qword_101129580);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[50];
    uint64_t v6 = swift_slowAlloc();
    v85[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    v0[27] = &type metadata for UndoSuggestLessMusicItemAppIntent;
    sub_100063814(&qword_1010B1388);
    uint64_t v7 = String.init<A>(describing:)();
    v0[28] = sub_100075D94(v7, v8, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    IntentParameter.wrappedValue.getter();
    uint64_t v9 = sub_1004647FC();
    unint64_t v11 = v10;
    sub_1000F5900(v5);
    v0[29] = sub_100075D94(v9, v11, v85);
    uint64_t v1 = (long long *)(v0 + 7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s – undoing suggest less of item %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  uint64_t v12 = v0[49];
  IntentParameter.wrappedValue.getter();
  sub_100467018((uint64_t)v1);
  sub_1000F5900(v12);
  if (!v0[10])
  {
    sub_1005C302C((uint64_t)v1);
    swift_retain_n();
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    BOOL v39 = os_log_type_enabled(v37, v38);
    uint64_t v40 = v0[31];
    if (v39)
    {
      uint64_t v41 = swift_slowAlloc();
      v85[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136446466;
      v0[12] = &type metadata for UndoSuggestLessMusicItemAppIntent;
      sub_100063814(&qword_1010B1388);
      uint64_t v42 = String.init<A>(describing:)();
      v0[13] = sub_100075D94(v42, v43, v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2082;
      v0[14] = v40;
      swift_retain();
      uint64_t v44 = String.init<A>(describing:)();
      v0[15] = sub_100075D94(v44, v45, v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "%{public}s – unsupported type %{public}s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    sub_1005C308C();
    swift_allocError();
    unsigned char *v50 = 5;
    swift_willThrow();
    goto LABEL_36;
  }
  uint64_t v13 = v0[46];
  uint64_t v14 = v0[42];
  uint64_t v79 = v0[41];
  *(void *)type = v0[45];
  uint64_t v16 = v0[39];
  uint64_t v15 = v0[40];
  uint64_t v17 = v0[38];
  sub_100068978(v1, (uint64_t)(v0 + 2));
  type metadata accessor for MusicLibrary();
  v0[52] = static MusicLibrary.shared.getter();
  sub_100068990(v0 + 2, v0[5]);
  static MusicLibraryAction<>.undoDislike.getter();
  MusicLibrary.supportedStatus<A, B>(for:action:)();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v18(*(void *)type, v13, v79);
  int v19 = (*(uint64_t (**)(os_log_type_t *, uint64_t))(v14 + 88))(*(os_log_type_t **)type, v79);
  if (v19 == enum case for MusicLibrary.SupportedStatus.unsupported<A>(_:))
  {
    uint64_t v20 = v0[45];
    uint64_t v22 = v0[36];
    uint64_t v21 = v0[37];
    uint64_t v23 = v0[32];
    uint64_t v24 = v0[33];
    (*(void (**)(uint64_t, void))(v0[42] + 96))(v20, v0[41]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v21, v20, v23);
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
    v25(v22, v21, v23);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v29 = v0[36];
    if (v28)
    {
      uint64_t v30 = v0[35];
      *(void *)v84 = v0[33];
      uint64_t v80 = v0[32];
      uint64_t v31 = swift_slowAlloc();
      v85[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 136446466;
      v0[19] = &type metadata for UndoSuggestLessMusicItemAppIntent;
      sub_100063814(&qword_1010B1388);
      uint64_t v32 = String.init<A>(describing:)();
      v0[20] = sub_100075D94(v32, v33, v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2082;
      v25(v30, v29, v80);
      uint64_t v34 = String.init<A>(describing:)();
      v0[21] = sub_100075D94(v34, v35, v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v36 = *(void (**)(uint64_t, uint64_t))(*(void *)v84 + 8);
      v36(v29, v80);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "%{public}s – unsupported reason %{public}s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v0[33] + 8);
      v36(v0[36], v0[32]);
    }

    uint64_t v52 = v0[33];
    uint64_t v51 = v0[34];
    uint64_t v53 = v0[32];
    v25(v51, v0[37], v53);
    int v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 88))(v51, v53);
    if (v54 == enum case for MusicLibrary.UndoDislikeAction.UnsupportedReason.unsupportedType(_:))
    {
      char v55 = 5;
    }
    else if (v54 == enum case for MusicLibrary.UndoDislikeAction.UnsupportedReason.notDisliked(_:))
    {
      char v55 = 1;
    }
    else if (v54 == enum case for MusicLibrary.UndoDislikeAction.UnsupportedReason.subscriptionRequired(_:))
    {
      char v55 = 3;
    }
    else if (v54 == enum case for MusicLibrary.UndoDislikeAction.UnsupportedReason.cloudLibraryRequired(_:))
    {
      char v55 = 0;
    }
    else if (v54 == enum case for MusicLibrary.UndoDislikeAction.UnsupportedReason.sharedLibrary(_:))
    {
      char v55 = 2;
    }
    else
    {
      v36(v0[34], v0[32]);
      char v55 = 4;
    }
    uint64_t v71 = v0[46];
    uint64_t v72 = v0[41];
    uint64_t v73 = v0[42];
    uint64_t v74 = v0[37];
    uint64_t v75 = v0[32];
    sub_1005C308C();
    swift_allocError();
    char *v76 = v55;
    swift_willThrow();
    swift_release();
    v36(v74, v75);
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v71, v72);
    uint64_t v70 = (uint64_t)(v0 + 2);
LABEL_35:
    sub_1000760E4(v70);
LABEL_36:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v77 = (uint64_t (*)(void))v0[1];
    return v77();
  }
  if (v19 != enum case for MusicLibrary.SupportedStatus.supported<A>(_:))
  {
    v18(v0[44], v0[46], v0[41]);
    uint64_t v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = v0[42];
      uint64_t v59 = v0[43];
      uint64_t v81 = v0[44];
      *(void *)typea = v0[41];
      uint64_t v60 = swift_slowAlloc();
      v85[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 136446466;
      v0[16] = &type metadata for UndoSuggestLessMusicItemAppIntent;
      sub_100063814(&qword_1010B1388);
      uint64_t v61 = String.init<A>(describing:)();
      v0[17] = sub_100075D94(v61, v62, v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 12) = 2082;
      v18(v59, v81, *(void *)typea);
      uint64_t v63 = String.init<A>(describing:)();
      v0[18] = sub_100075D94(v63, v64, v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      char v65 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
      v65(v81, *(void *)typea);
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "%{public}s – unknown supported status %{public}s", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      char v65 = *(void (**)(uint64_t, uint64_t))(v0[42] + 8);
      v65(v0[44], v0[41]);
    }

    uint64_t v67 = v0[45];
    uint64_t v66 = v0[46];
    uint64_t v68 = v0[41];
    sub_1005C308C();
    swift_allocError();
    unsigned char *v69 = 4;
    swift_willThrow();
    swift_release();
    v65(v66, v68);
    v65(v67, v68);
    uint64_t v70 = (uint64_t)(v0 + 2);
    goto LABEL_35;
  }
  uint64_t v47 = v0[5];
  uint64_t v46 = v0[6];
  uint64_t v48 = sub_100068990(v0 + 2, v47);
  int v49 = (void *)swift_task_alloc();
  v0[53] = v49;
  *int v49 = v0;
  v49[1] = sub_1005C236C;
  return MusicLibrary.new_undoDislike<A>(_:)(v48, v47, v46);
}

uint64_t sub_1005C236C()
{
  *(void *)(*(void *)v1 + 432) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005C2644;
  }
  else {
    uint64_t v2 = sub_1005C2480;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005C2480()
{
  uint64_t v1 = v0[50];
  uint64_t v2 = v0[47];
  uint64_t v3 = v0[48];
  uint64_t v4 = v0[46];
  uint64_t v5 = v0[42];
  uint64_t v6 = v0[41];
  IntentParameter.wrappedValue.getter();
  uint64_t v7 = sub_10064CA68();
  sub_1000F589C(v1, v3);
  sub_1000F589C(v3, v2);
  IntentParameter.wrappedValue.setter();
  sub_1000F5900(v3);
  sub_1000F5900(v1);
  v0[26] = v7;
  sub_1000F59B4();
  static IntentResult.result<A>(opensIntent:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_release();
  sub_1000760E4((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1005C2644()
{
  uint64_t v16 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[54];
    uint64_t v4 = swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    v0[22] = &type metadata for UndoSuggestLessMusicItemAppIntent;
    sub_100063814(&qword_1010B1388);
    uint64_t v5 = String.init<A>(describing:)();
    v0[23] = sub_100075D94(v5, v6, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2082;
    v0[24] = v3;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010991A0);
    uint64_t v7 = String.init<A>(describing:)();
    v0[25] = sub_100075D94(v7, v8, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%{public}s – error undoing suggest less of item %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v9 = v0[46];
  uint64_t v11 = v0[41];
  uint64_t v10 = v0[42];
  sub_1005C308C();
  swift_allocError();
  *uint64_t v12 = 4;
  swift_willThrow();
  swift_release();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  sub_1000760E4((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1005C2974@<X0>(uint64_t a1@<X8>)
{
  if (qword_101098490 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100050A90(v2, (uint64_t)qword_101129B40);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1005C2A20(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000154F4;
  return sub_1005C14A8(a1, v4);
}

uint64_t sub_1005C2AC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1005C2C50();
  *a1 = result;
  return result;
}

uint64_t sub_1005C2AE8(uint64_t a1)
{
  unint64_t v2 = sub_1005C2FD8();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for UndoSuggestLessMusicItemAppIntent()
{
  return &type metadata for UndoSuggestLessMusicItemAppIntent;
}

uint64_t sub_1005C2B34()
{
  return sub_100063858(&qword_1010B1358, &qword_1010B1360);
}

uint64_t sub_1005C2B70()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_1005C2C48()
{
  return sub_1005C2B70();
}

uint64_t sub_1005C2C50()
{
  uint64_t v22 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  unint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100063814(&qword_10109A618);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = sub_100063814(&qword_10109A648);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100063814(&qword_10109A628);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v21 = sub_100063814(&qword_1010A59B0);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  uint64_t v17 = type metadata accessor for GenericMusicItemEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  uint64_t v18 = type metadata accessor for IntentDialog();
  int v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v8, 1, 1, v18);
  v19(v5, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v22);
  sub_10037346C();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

unint64_t sub_1005C2FD8()
{
  unint64_t result = qword_1010B1368;
  if (!qword_1010B1368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1010B1368);
  }
  return result;
}

uint64_t sub_1005C302C(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010A91A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1005C308C()
{
  unint64_t result = qword_1010B1380;
  if (!qword_1010B1380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B1380);
  }
  return result;
}

uint64_t sub_1005C30E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for UndoSuggestLessMusicItemIntentError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005C31D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UndoSuggestLessMusicItemIntentError()
{
  return &type metadata for UndoSuggestLessMusicItemIntentError;
}

unint64_t sub_1005C3214()
{
  unint64_t result = qword_1010B13A8;
  if (!qword_1010B13A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B13A8);
  }
  return result;
}

void *sub_1005C3268(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    _s10TVEpisodesV5ScopeOMa(0);
    swift_retain();
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v11 = type metadata accessor for TVSeason();
    }
    else {
      uint64_t v11 = type metadata accessor for TVShow();
    }
    (*(void (**)(char *, char *))(*(void *)(v11 - 8) + 16))(v9, v10);
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[7];
    *((unsigned char *)v7 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    uint64_t v13 = (void *)((char *)v7 + v12);
    uint64_t v14 = (void *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[9];
    *(_WORD *)((char *)v7 + a3[8]) = *(_WORD *)((char *)a2 + a3[8]);
    *(void *)((char *)v7 + v16) = *(void *)((char *)a2 + v16);
    uint64_t v17 = a3[11];
    *(void *)((char *)v7 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    *((unsigned char *)v7 + v17) = *((unsigned char *)a2 + v17);
    uint64_t v18 = a3[12];
    uint64_t v19 = a3[13];
    uint64_t v20 = (void *)((char *)v7 + v18);
    uint64_t v21 = (void *)((char *)a2 + v18);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    *(void *)((char *)v7 + v19) = *(void *)((char *)a2 + v19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t _s10TVEpisodesV5ScopeOMa(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B14D0);
}

uint64_t sub_1005C343C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  _s10TVEpisodesV5ScopeOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v5 = type metadata accessor for TVSeason();
  }
  else {
    uint64_t v5 = type metadata accessor for TVShow();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *sub_1005C3528(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a2 + v6;
  _s10TVEpisodesV5ScopeOMa(0);
  swift_retain();
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v8 = type metadata accessor for TVSeason();
  }
  else {
    uint64_t v8 = type metadata accessor for TVShow();
  }
  (*(void (**)(char *, char *))(*(void *)(v8 - 8) + 16))(&a1[v6], v7);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = a3[7];
  a1[a3[6]] = *((unsigned char *)a2 + a3[6]);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (void *)((char *)a2 + v9);
  uint64_t v12 = v11[1];
  *(void *)uint64_t v10 = *v11;
  *((void *)v10 + 1) = v12;
  uint64_t v13 = a3[9];
  *(_WORD *)&a1[a3[8]] = *(_WORD *)((char *)a2 + a3[8]);
  *(void *)&a1[v13] = *(void *)((char *)a2 + v13);
  uint64_t v14 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)((char *)a2 + a3[10]);
  a1[v14] = *((unsigned char *)a2 + v14);
  uint64_t v15 = a3[12];
  uint64_t v16 = a3[13];
  uint64_t v17 = &a1[v15];
  uint64_t v18 = (void *)((char *)a2 + v15);
  uint64_t v19 = v18[1];
  *(void *)uint64_t v17 = *v18;
  *((void *)v17 + 1) = v19;
  *(void *)&a1[v16] = *(void *)((char *)a2 + v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1005C3690(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1005C67D0((uint64_t)a1 + v6, _s10TVEpisodesV5ScopeOMa);
    _s10TVEpisodesV5ScopeOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v9 = type metadata accessor for TVSeason();
    }
    else {
      uint64_t v9 = type metadata accessor for TVShow();
    }
    (*(void (**)(char *, char *))(*(void *)(v9 - 8) + 16))(v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  uint64_t v16 = a3[12];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1005C3880(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a2 + v6;
  _s10TVEpisodesV5ScopeOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v8 = type metadata accessor for TVSeason();
  }
  else {
    uint64_t v8 = type metadata accessor for TVShow();
  }
  (*(void (**)(char *, char *))(*(void *)(v8 - 8) + 32))(&a1[v6], v7);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = a3[7];
  a1[a3[6]] = *((unsigned char *)a2 + a3[6]);
  *(_OWORD *)&a1[v9] = *(_OWORD *)((char *)a2 + v9);
  uint64_t v10 = a3[9];
  *(_WORD *)&a1[a3[8]] = *(_WORD *)((char *)a2 + a3[8]);
  *(void *)&a1[v10] = *(void *)((char *)a2 + v10);
  uint64_t v11 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)((char *)a2 + a3[10]);
  a1[v11] = *((unsigned char *)a2 + v11);
  uint64_t v12 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)((char *)a2 + a3[12]);
  *(void *)&a1[v12] = *(void *)((char *)a2 + v12);
  return a1;
}

void *sub_1005C39AC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1005C67D0((uint64_t)a1 + v6, _s10TVEpisodesV5ScopeOMa);
    _s10TVEpisodesV5ScopeOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v9 = type metadata accessor for TVSeason();
    }
    else {
      uint64_t v9 = type metadata accessor for TVShow();
    }
    (*(void (**)(char *, char *))(*(void *)(v9 - 8) + 32))(v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005C3B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005C3B64);
}

uint64_t sub_1005C3B64(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = _s10TVEpisodesV5ScopeOMa(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1005C3C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005C3C28);
}

void *sub_1005C3C28(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = _s10TVEpisodesV5ScopeOMa(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10TVEpisodesVMa(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B1408);
}

uint64_t sub_1005C3CF0()
{
  uint64_t result = _s10TVEpisodesV5ScopeOMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1005C3DC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v6 = type metadata accessor for TVSeason();
    }
    else {
      uint64_t v6 = type metadata accessor for TVShow();
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005C3EF8(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v2 = type metadata accessor for TVSeason();
  }
  else {
    uint64_t v2 = type metadata accessor for TVShow();
  }
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1005C3F74(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v4 = type metadata accessor for TVSeason();
  }
  else {
    uint64_t v4 = type metadata accessor for TVShow();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1005C4020(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1005C67D0(a1, _s10TVEpisodesV5ScopeOMa);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v4 = type metadata accessor for TVSeason();
    }
    else {
      uint64_t v4 = type metadata accessor for TVShow();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005C40F0(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v4 = type metadata accessor for TVSeason();
  }
  else {
    uint64_t v4 = type metadata accessor for TVShow();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1005C419C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1005C67D0(a1, _s10TVEpisodesV5ScopeOMa);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v4 = type metadata accessor for TVSeason();
    }
    else {
      uint64_t v4 = type metadata accessor for TVShow();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005C426C()
{
  uint64_t result = type metadata accessor for TVShow();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TVSeason();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1005C4330@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100068990(a1, a1[3]);
  uint64_t result = dispatch thunk of LibraryTVEpisodeFilter.id.getter();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1005C4378@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v2 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v2);
  v18[7] = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v18[10] = (char *)v18 - v5;
  uint64_t v6 = type metadata accessor for TVEpisode();
  v18[9] = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v20 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814(&qword_1010B15F8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  v18[6] = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v18 - v12;
  type metadata accessor for TVSeason();
  sub_1005C5FB0(&qword_1010B1518, (void (*)(uint64_t))&type metadata accessor for TVSeason);
  sub_1005C5FB0(&qword_10109A8B8, (void (*)(uint64_t))&type metadata accessor for TVEpisode);
  MusicLibrarySectionedRequest.init()();
  sub_1005C5398();
  swift_retain();
  MusicLibrarySectionedRequest.library.setter();
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter();
  v18[8] = v2;
  MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)(v1 + *(int *)(v2 + 28)));
  swift_getKeyPath();
  v25[0] = TVEpisode.id.getter();
  v25[1] = v14;
  MusicLibrarySectionedRequest.filterItems<A>(matching:equalTo:)();
  swift_bridgeObjectRelease();
  swift_release();
  v25[3] = v8;
  v25[4] = sub_1005C670C();
  uint64_t v15 = sub_100068018(v25);
  uint64_t v19 = v9;
  (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(v15, v13, v8);
  uint64_t v24 = 0;
  long long v22 = 0u;
  long long v23 = 0u;
  MusicPlaybackIntentDescriptor.init(request:startingAt:)();
  uint64_t v16 = type metadata accessor for MusicPlaybackIntentDescriptor();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v21, 0, 1, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v13, v8);
}

uint64_t sub_1005C4B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v31 = a2;
  uint64_t v5 = sub_100063814(&qword_1010B15F8);
  __chkstk_darwin(v5);
  BOOL v28 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s10TVEpisodesVMa(0);
  __chkstk_darwin(v7);
  v26[6] = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v30 = (char *)v26 - v10;
  __chkstk_darwin(v11);
  uint64_t v29 = (char *)v26 - v12;
  uint64_t v27 = sub_100063814(&qword_10109A7D0);
  __chkstk_darwin(v27);
  v26[8] = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v26 - v16;
  v35[3] = v5;
  v35[4] = sub_1005C670C();
  sub_100068018(v35);
  uint64_t v18 = type metadata accessor for TVSeason();
  uint64_t v19 = type metadata accessor for TVEpisode();
  uint64_t v20 = sub_1005C5FB0(&qword_1010B1518, (void (*)(uint64_t))&type metadata accessor for TVSeason);
  uint64_t v21 = sub_1005C5FB0(&qword_10109A8B8, (void (*)(uint64_t))&type metadata accessor for TVEpisode);
  v26[9] = v18;
  v26[7] = v20;
  v26[5] = v21;
  MusicLibrarySectionedRequest.init()();
  sub_1005C5398();
  swift_retain();
  MusicLibrarySectionedRequest.library.setter();
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter();
  MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)(v3 + *(int *)(v7 + 28)));
  sub_1005C6830(a1, (uint64_t)v17);
  uint64_t v22 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v19) == 1)
  {
    sub_1000637B8((uint64_t)v17, &qword_10109A7D0);
    long long v32 = 0u;
    long long v33 = 0u;
    uint64_t v34 = 0;
  }
  else
  {
    *((void *)&v33 + 1) = v19;
    uint64_t v34 = sub_1005C5FB0(&qword_1010A6710, (void (*)(uint64_t))&type metadata accessor for TVEpisode);
    long long v23 = sub_100068018((uint64_t *)&v32);
    (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 32))(v23, v17, v19);
  }
  MusicPlaybackIntentDescriptor.init(request:startingAt:)();
  uint64_t v24 = type metadata accessor for MusicPlaybackIntentDescriptor();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v31, 0, 1, v24);
}

uint64_t sub_1005C5398()
{
  uint64_t v1 = type metadata accessor for TVSeason();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TVShow();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s10TVEpisodesV5ScopeOMa(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _s10TVEpisodesVMa(0);
  sub_1005C6768(v0 + *(int *)(v12 + 20), (uint64_t)v11, _s10TVEpisodesV5ScopeOMa);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v11, v1);
    swift_getKeyPath();
    sub_100063814(&qword_1010B15F8);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    swift_getKeyPath();
    sub_100063814(&qword_1010B15F8);
    MusicLibrarySectionedRequest.filterItems<A>(matching:contains:)();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1005C563C()
{
  uint64_t v1 = type metadata accessor for TVSeason();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TVShow();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s10TVEpisodesV5ScopeOMa(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005C6768(v0, (uint64_t)v11, _s10TVEpisodesV5ScopeOMa);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v11, v1);
    Hasher._combine(_:)(1uLL);
    sub_1005C5FB0(&qword_1010B1600, (void (*)(uint64_t))&type metadata accessor for TVSeason);
    dispatch thunk of Hashable.hash(into:)();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    Hasher._combine(_:)(0);
    sub_1005C5FB0(&qword_1010B1608, (void (*)(uint64_t))&type metadata accessor for TVShow);
    dispatch thunk of Hashable.hash(into:)();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

Swift::Int sub_1005C5908(uint64_t a1, uint64_t a2)
{
  return sub_1005C5EBC(a1, a2, (void (*)(unsigned char *))sub_1005C563C);
}

Swift::Int sub_1005C5924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005C5F20(a1, a2, a3, (void (*)(unsigned char *))sub_1005C563C);
}

uint64_t sub_1005C5940()
{
  return sub_1005C5FB0(&qword_1010B1508, (void (*)(uint64_t))_s10TVEpisodesV5ScopeOMa);
}

uint64_t sub_1005C5988(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for MusicLibrary();
  sub_1005C5FB0((unint64_t *)&qword_1010990F8, (void (*)(uint64_t))&type metadata accessor for MusicLibrary);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v4 = (int *)_s10TVEpisodesVMa(0);
  sub_1005C563C();
  Hasher._combine(_:)(*(unsigned char *)(v1 + v4[6]));
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::UInt8 v5 = *(unsigned char *)(v1 + v4[8] + 1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v5);
  uint64_t v6 = *(void *)(v2 + v4[9]);
  swift_bridgeObjectRetain();
  sub_1000C6D30(a1, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v2 + v4[10]);
  swift_bridgeObjectRetain();
  sub_1000C6834(a1, v7);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v2 + v4[11]) == 7)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v2 + v4[13]);
  swift_bridgeObjectRetain();
  sub_1000C6C70(a1, v8);
  return swift_bridgeObjectRelease();
}

void sub_1005C5D74(uint64_t a1)
{
  type metadata accessor for TVSeason();
  type metadata accessor for TVEpisode();
  sub_1005C5FB0(&qword_1010B1518, (void (*)(uint64_t))&type metadata accessor for TVSeason);
  sub_1005C5FB0(&qword_10109A8B8, (void (*)(uint64_t))&type metadata accessor for TVEpisode);
  MusicLibrarySectionedRequest.init()();
  sub_1005C5398();
  swift_retain();
  sub_100063814(&qword_1010B15F8);
  MusicLibrarySectionedRequest.library.setter();
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter();
  MusicLibrarySectionedRequest.filterItems(text:)(*(Swift::String *)(v1 + *(int *)(a1 + 28)));
}

Swift::Int sub_1005C5EA4(uint64_t a1, uint64_t a2)
{
  return sub_1005C5EBC(a1, a2, (void (*)(unsigned char *))sub_1005C5988);
}

Swift::Int sub_1005C5EBC(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  Hasher.init(_seed:)();
  a3(v5);
  return Hasher._finalize()();
}

Swift::Int sub_1005C5F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005C5F20(a1, a2, a3, (void (*)(unsigned char *))sub_1005C5988);
}

Swift::Int sub_1005C5F20(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  Hasher.init(_seed:)();
  a4(v6);
  return Hasher._finalize()();
}

uint64_t sub_1005C5F68()
{
  return sub_1005C5FB0(&qword_1010B1510, (void (*)(uint64_t))_s10TVEpisodesVMa);
}

uint64_t sub_1005C5FB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005C5FF8()
{
  return sub_1005C5FB0(&qword_10109A8B8, (void (*)(uint64_t))&type metadata accessor for TVEpisode);
}

uint64_t sub_1005C6040()
{
  return sub_1005C5FB0(&qword_1010B1518, (void (*)(uint64_t))&type metadata accessor for TVSeason);
}

uint64_t sub_1005C6088(uint64_t a1)
{
  uint64_t result = sub_1005C5FB0(&qword_1010B15F0, (void (*)(uint64_t))_s10TVEpisodesVMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1005C60E0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005C6110(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTVEpisodeFilter.tvSeasons.getter);
}

uint64_t sub_1005C60F8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005C6110(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t))&dispatch thunk of LibraryTVEpisodeFilter.tvShows.getter);
}

uint64_t sub_1005C6110(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_100068990(a1, v5);
  return a4(v5, v6);
}

uint64_t sub_1005C6160(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v2 = type metadata accessor for TVSeason();
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TVShow();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s10TVEpisodesV5ScopeOMa(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v15 = sub_100063814(&qword_1010B1610);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t)&v17[*(int *)(v18 + 56)];
  sub_1005C6768(v28, (uint64_t)v17, _s10TVEpisodesV5ScopeOMa);
  sub_1005C6768(v29, v19, _s10TVEpisodesV5ScopeOMa);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1005C6768((uint64_t)v17, (uint64_t)v11, _s10TVEpisodesV5ScopeOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = v26;
      uint64_t v20 = v27;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v4, v19, v27);
      char v22 = static TVSeason.== infix(_:_:)();
      long long v23 = *(void (**)(char *, uint64_t))(v21 + 8);
      v23(v4, v20);
      v23(v11, v20);
LABEL_9:
      sub_1005C67D0((uint64_t)v17, _s10TVEpisodesV5ScopeOMa);
      return v22 & 1;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v27);
  }
  else
  {
    sub_1005C6768((uint64_t)v17, (uint64_t)v14, _s10TVEpisodesV5ScopeOMa);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v19, v5);
      char v22 = static TVShow.== infix(_:_:)();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v6 + 8);
      v24(v8, v5);
      v24(v14, v5);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  sub_1000637B8((uint64_t)v17, &qword_1010B1610);
  char v22 = 0;
  return v22 & 1;
}

uint64_t sub_1005C652C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MusicLibrary();
  if ((static MusicLibrary.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)_s10TVEpisodesVMa(0);
  if ((sub_1005C6160(a1 + v4[5], a2 + v4[5]) & 1) == 0
    || *(unsigned __int8 *)(a1 + v4[6]) != *(unsigned __int8 *)(a2 + v4[6]))
  {
    return 0;
  }
  uint64_t v6 = v4[7];
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  BOOL v10 = v7 == *v9 && v8 == v9[1];
  if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  uint64_t v11 = v4[8];
  uint64_t v12 = (unsigned __int8 *)(a1 + v11);
  int v13 = *(unsigned __int8 *)(a1 + v11 + 1);
  uint64_t v14 = a2 + v11;
  int v15 = *(unsigned __int8 *)(v14 + 1);
  if ((sub_10052092C(*v12, *(unsigned char *)v14) & 1) == 0
    || ((v13 ^ v15) & 1) != 0
    || (sub_1007AA4F4(*(void *)(a1 + v4[9]), *(void *)(a2 + v4[9])) & 1) == 0
    || (sub_1005BBE70(*(void *)(a1 + v4[10]), *(void *)(a2 + v4[10])) & 1) == 0)
  {
    return 0;
  }
  uint64_t v16 = v4[11];
  int v17 = *(unsigned __int8 *)(a1 + v16);
  int v18 = *(unsigned __int8 *)(a2 + v16);
  if (v17 != 7)
  {
    if (v18 != 7 && (sub_1005206C0(v17, v18) & 1) != 0) {
      goto LABEL_19;
    }
    return 0;
  }
  if (v18 != 7) {
    return 0;
  }
LABEL_19:
  uint64_t v19 = v4[12];
  uint64_t v20 = *(void *)(a1 + v19);
  uint64_t v21 = *(void *)(a1 + v19 + 8);
  char v22 = (void *)(a2 + v19);
  if ((v20 != *v22 || v21 != v22[1]) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  uint64_t v23 = v4[13];
  uint64_t v24 = *(void *)(a1 + v23);
  uint64_t v25 = *(void *)(a2 + v23);

  return sub_1007AA7F8(v24, v25);
}

uint64_t sub_1005C66C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100068990(a1, a1[3]);
  uint64_t result = dispatch thunk of LibraryTVEpisodeFilter.id.getter();
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t sub_1005C670C()
{
  unint64_t result = qword_1010B1618;
  if (!qword_1010B1618)
  {
    sub_10006389C(&qword_1010B15F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B1618);
  }
  return result;
}

uint64_t sub_1005C6768(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005C67D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005C6830(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_10109A7D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s14descr100FBDFB1O11AttributionVwxx()
{
  sub_100556BB0();

  return swift_release();
}

uint64_t _s14descr100FBDFB1O11AttributionVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_100556B8C();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  swift_retain();
  return a1;
}

uint64_t _s14descr100FBDFB1O11AttributionVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_100556B8C();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_100556BB0();
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  return a1;
}

uint64_t _s14descr100FBDFB1O11AttributionVwta(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_100556BB0();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t _s14descr100FBDFB1O11AttributionVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr100FBDFB1O11AttributionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s14descr100FBDFB1O11AttributionVMa()
{
  return &_s14descr100FBDFB1O11AttributionVN;
}

uint64_t _s14descr100FBDFB1O11AttributionV4DataOwxx()
{
  return sub_100556BB0();
}

uint64_t _s14descr100FBDFB1O11AttributionV4DataOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_100556B8C();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s14descr100FBDFB1O11AttributionV4DataOwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_100556B8C();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100556BB0();
  return a1;
}

uint64_t _s14descr100FBDFB1O11AttributionV4DataOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_100556BB0();
  return a1;
}

ValueMetadata *_s14descr100FBDFB1O11AttributionV4DataOMa()
{
  return &_s14descr100FBDFB1O11AttributionV4DataON;
}

uint64_t sub_1005C6BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _ConditionalContent.Storage();
  __n128 v5 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a2 - 8) + 16))((char *)&v8 - v6, a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_1005C6CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for _ConditionalContent.Storage();
  __n128 v6 = __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a3 - 8) + 16))((char *)&v9 - v7, a1, a3, v6);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_1005C6DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Optional();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t sub_1005C6E3C@<X0>(unsigned char *a1@<X8>)
{
  sub_10024BE38();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1005C6E8C()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_1005C6ED8()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_1005C6EFC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RedactionReasons();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.redactionReasons.setter();
}

uint64_t sub_1005C6FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
      return sub_1007AA924(v3, *(void *)a2);
    }
    return 0;
  }
  if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v3 == *(void *)a2 && v4 == *(void *)(a2 + 8)) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t sub_1005C701C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v42 = a1;
  uint64_t v43 = sub_100063814(&qword_1010B1660);
  __chkstk_darwin(v43);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v38 - v6;
  __chkstk_darwin(v8);
  BOOL v10 = (char *)&v38 - v9;
  uint64_t v11 = sub_100063814(&qword_1010B1668);
  __chkstk_darwin(v11);
  int v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100063814(&qword_1010B1670);
  __chkstk_darwin(v41);
  int v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  int v18 = (char *)&v38 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v38 - v20;
  sub_1005C8D60((long long *)v2, (uint64_t)&v44);
  sub_1005C8D60(&v44, (uint64_t)v45);
  if (v46)
  {
    uint64_t v22 = v45[0];
    uint64_t v23 = v45[1];
    if (*(unsigned char *)(v2 + 40))
    {
      uint64_t v24 = 0;
      uint64_t v28 = *(void *)(v2 + 32);
      uint64_t v39 = 0;
      uint64_t v40 = v28;
    }
    else
    {
      uint64_t v24 = *(void *)(v2 + 32);
      uint64_t v39 = *(void *)(v2 + 24);
      swift_retain();
      uint64_t v40 = v24;
    }
    uint64_t v29 = swift_allocObject();
    long long v30 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v29 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v29 + 32) = v30;
    *(_OWORD *)(v29 + 41) = *(_OWORD *)(v2 + 25);
    *(void *)(v29 + 64) = v22;
    *(void *)(v29 + 72) = v23;
    *((void *)v4 + 4) = swift_getKeyPath();
    v4[40] = 0;
    *((void *)v4 + 6) = swift_getKeyPath();
    v4[56] = 0;
    uint64_t v31 = (uint64_t *)&v4[*(int *)(v43 + 48)];
    *uint64_t v31 = swift_getKeyPath();
    sub_100063814(&qword_1010A57E0);
    swift_storeEnumTagMultiPayload();
    *(void *)uint64_t v4 = sub_1005C8DC4;
    *((void *)v4 + 1) = v29;
    *((void *)v4 + 2) = v39;
    *((void *)v4 + 3) = v24;
    sub_10003CABC((uint64_t)v4, (uint64_t)v7, &qword_1010B1660);
    sub_10003CABC((uint64_t)v7, (uint64_t)v10, &qword_1010B1660);
    sub_10006CAB8((uint64_t)v10, (uint64_t)v13, &qword_1010B1660);
    swift_storeEnumTagMultiPayload();
    sub_1005C8EE8((uint64_t)&v44);
    sub_1005C8EE8((uint64_t)&v44);
    sub_100063858(&qword_1010B1678, &qword_1010B1670);
    sub_100063858(&qword_1010B1680, &qword_1010B1660);
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    uint64_t v32 = (uint64_t)v10;
    long long v33 = &qword_1010B1660;
  }
  else
  {
    uint64_t v25 = v45[0];
    if (*(unsigned char *)(v2 + 40))
    {
      uint64_t v40 = 0;
      uint64_t v27 = 0;
    }
    else
    {
      uint64_t v26 = *(void *)(v2 + 32);
      uint64_t v40 = *(void *)(v2 + 24);
      swift_retain();
      uint64_t v27 = v26;
    }
    uint64_t v34 = swift_allocObject();
    long long v35 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v34 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v34 + 32) = v35;
    *(_OWORD *)(v34 + 41) = *(_OWORD *)(v2 + 25);
    *(void *)(v34 + 64) = v25;
    *((void *)v15 + 4) = swift_getKeyPath();
    v15[40] = 0;
    *((void *)v15 + 6) = swift_getKeyPath();
    v15[56] = 0;
    uint64_t v36 = (uint64_t *)&v15[*(int *)(v41 + 48)];
    *uint64_t v36 = swift_getKeyPath();
    sub_100063814(&qword_1010A57E0);
    swift_storeEnumTagMultiPayload();
    *(void *)int v15 = sub_1005C8F68;
    *((void *)v15 + 1) = v34;
    *((void *)v15 + 2) = v40;
    *((void *)v15 + 3) = v27;
    sub_10003CABC((uint64_t)v15, (uint64_t)v18, &qword_1010B1670);
    sub_10003CABC((uint64_t)v18, (uint64_t)v21, &qword_1010B1670);
    sub_10006CAB8((uint64_t)v21, (uint64_t)v13, &qword_1010B1670);
    swift_storeEnumTagMultiPayload();
    sub_1005C8EE8((uint64_t)&v44);
    sub_1005C8EE8((uint64_t)&v44);
    sub_100063858(&qword_1010B1678, &qword_1010B1670);
    sub_100063858(&qword_1010B1680, &qword_1010B1660);
    swift_retain();
    _ConditionalContent<>.init(storage:)();
    uint64_t v32 = (uint64_t)v21;
    long long v33 = &qword_1010B1670;
  }
  return sub_1000637B8(v32, v33);
}

uint64_t sub_1005C7540@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = _s14descr100FBDFB1O11AttributionV4TextV5SpecsVMa();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = type metadata accessor for PlaylistCurators.View(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(unsigned char *)(v1 + 16))
  {
    swift_getKeyPath();
    sub_100556B8C();
    uint64_t v12 = swift_retain();
    char v13 = sub_1004DA7CC(v12, 0);
    swift_release();
    if (v13)
    {
      if (qword_101098498 != -1) {
        swift_once();
      }
      uint64_t v14 = qword_1010B1628;
    }
    else
    {
      if (qword_1010984A0 != -1) {
        swift_once();
      }
      uint64_t v14 = qword_1010B1640;
    }
    uint64_t v16 = sub_100050A90(v3, (uint64_t)v14);
    sub_1005C962C(v16, (uint64_t)v5);
    sub_1005C9690((uint64_t)v5, (uint64_t)v8);
    uint64_t v17 = type metadata accessor for Font.TextStyle();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, v8, v17);
    sub_100556BB0();
    return swift_release();
  }
  else
  {
    PlaylistCurators.View.init(configuration:)(*(void *)v1, v11);
    swift_bridgeObjectRetain();
    PlaylistCurators.View.fontTextStyle.getter(a1);
    return sub_1005CA950((uint64_t)v11, type metadata accessor for PlaylistCurators.View);
  }
}

uint64_t sub_1005C77A0@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  uint64_t v68 = a1;
  uint64_t v79 = v3;
  uint64_t v78 = type metadata accessor for Button();
  uint64_t v102 = v78;
  uint64_t v103 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v77 = v103;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v104 = WitnessTable;
  uint64_t v105 = sub_1005CA8FC((unint64_t *)&qword_101099BB0, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  uint64_t v74 = v105;
  swift_getOpaqueTypeMetadata2();
  uint64_t v73 = type metadata accessor for _ConditionalContent();
  uint64_t v5 = type metadata accessor for Group();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v61 - v7;
  sub_10006389C(&qword_1010AF288);
  uint64_t v75 = v5;
  uint64_t v9 = type metadata accessor for ModifiedContent();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v61 - v11;
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v69 = v9;
  uint64_t v13 = type metadata accessor for ModifiedContent();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v67 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v61 - v17;
  uint64_t v72 = v19;
  uint64_t v71 = type metadata accessor for Optional();
  uint64_t v20 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  __n128 v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v61 - v24;
  if (*v2)
  {
    uint64_t v66 = v18;
    __chkstk_darwin(v2[1]);
    uint64_t v65 = v14;
    *(&v61 - 6) = v4;
    uint64_t v26 = v79;
    *(&v61 - 5) = v79;
    *(&v61 - 4) = (uint64_t)v2;
    *(&v61 - 3) = v28;
    *(&v61 - 2) = v27;
    uint64_t v63 = v27;
    uint64_t v64 = v29;
    uint64_t v62 = v28;
    swift_retain();
    uint64_t v102 = v78;
    uint64_t v103 = v77;
    uint64_t v104 = WitnessTable;
    uint64_t v105 = v74;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v86 = v26;
    uint64_t v61 = v10;
    uint64_t v30 = swift_getWitnessTable();
    Group<A>.init(content:)();
    uint64_t v102 = sub_1005C8A88();
    uint64_t v84 = v30;
    uint64_t v31 = v75;
    uint64_t v32 = swift_getWitnessTable();
    View.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v31);
    AccessibilityIdentifier.containerDetailHeaderAttribution.unsafeMutableAddressor();
    uint64_t v68 = v25;
    long long v33 = v12;
    uint64_t v34 = sub_100063858((unint64_t *)&unk_1010B02E0, &qword_1010AF288);
    uint64_t v82 = v32;
    uint64_t v83 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v35 = v69;
    uint64_t v36 = swift_getWitnessTable();
    uint64_t v37 = v67;
    uint64_t v38 = v71;
    uint64_t v39 = v72;
    View.accessibilityIdentifier(_:)();
    sub_10006ADFC(v62);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v33, v35);
    uint64_t v40 = sub_1005CA8FC((unint64_t *)&qword_10109D020, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t v80 = v36;
    uint64_t v81 = v40;
    uint64_t v41 = swift_getWitnessTable();
    uint64_t v42 = v66;
    sub_1005CF83C(v37, v39, v41);
    uint64_t v43 = v65;
    long long v44 = *(void (**)(char *, uint64_t))(v65 + 8);
    v44(v37, v39);
    uint64_t v45 = v64;
    sub_1005CF83C(v42, v39, v41);
    v44(v42, v39);
    uint64_t v46 = v45;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v45, 0, 1, v39);
    uint64_t v25 = v68;
    (*(void (**)(void))(v20 + 16))();
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v47(v46, v38);
  }
  else
  {
    uint64_t v48 = v22;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56))(v22, 1, 1, v72, v23);
    uint64_t v102 = v78;
    uint64_t v103 = v77;
    uint64_t v104 = WitnessTable;
    uint64_t v105 = v74;
    uint64_t v100 = swift_getOpaqueTypeConformance2();
    uint64_t v101 = v79;
    uint64_t v99 = swift_getWitnessTable();
    uint64_t v49 = swift_getWitnessTable();
    uint64_t v50 = sub_100063858((unint64_t *)&unk_1010B02E0, &qword_1010AF288);
    uint64_t v97 = v49;
    uint64_t v98 = v50;
    uint64_t v51 = swift_getWitnessTable();
    uint64_t v52 = sub_1005CA8FC((unint64_t *)&qword_10109D020, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t v95 = v51;
    uint64_t v96 = v52;
    swift_getWitnessTable();
    uint64_t v53 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v25, v48, v71);
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v47(v48, v53);
  }
  uint64_t v102 = v78;
  uint64_t v103 = v77;
  uint64_t v104 = WitnessTable;
  uint64_t v105 = v74;
  uint64_t v93 = swift_getOpaqueTypeConformance2();
  uint64_t v94 = v79;
  uint64_t v92 = swift_getWitnessTable();
  uint64_t v54 = swift_getWitnessTable();
  uint64_t v55 = sub_100063858((unint64_t *)&unk_1010B02E0, &qword_1010AF288);
  uint64_t v90 = v54;
  uint64_t v91 = v55;
  uint64_t v56 = swift_getWitnessTable();
  uint64_t v57 = sub_1005CA8FC((unint64_t *)&qword_10109D020, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v88 = v56;
  uint64_t v89 = v57;
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v58 = v71;
  uint64_t v59 = swift_getWitnessTable();
  sub_1005CF83C(v25, v58, v59);
  return ((uint64_t (*)(char *, uint64_t))v47)(v25, v58);
}

uint64_t sub_1005C8274@<X0>(uint64_t a1@<X0>, void (*a2)(__n128)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  uint64_t v60 = a1;
  uint64_t v66 = a6;
  uint64_t v8 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v59 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v56 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = a5;
  uint64_t v10 = type metadata accessor for Button();
  uint64_t v57 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v55 - v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = sub_1005CA8FC((unint64_t *)&qword_101099BB0, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  uint64_t v67 = v10;
  uint64_t v68 = v14;
  uint64_t v73 = v10;
  uint64_t v74 = v8;
  uint64_t v65 = v8;
  uint64_t v69 = WitnessTable;
  uint64_t v75 = WitnessTable;
  uint64_t v76 = v14;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v58 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v17 = (char *)v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v55 - v19;
  uint64_t v21 = *(void *)(a4 - 8);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)v55 - v26;
  uint64_t v28 = a4;
  uint64_t v29 = type metadata accessor for _ConditionalContent();
  uint64_t v64 = *(void *)(v29 - 8);
  __n128 v32 = __chkstk_darwin(v29);
  uint64_t v63 = (char *)v55 - v33;
  uint64_t v34 = *(void *)(v31 + 16);
  if (v34)
  {
    v55[0] = v55;
    uint64_t v60 = *(void *)(v31 + 24);
    __chkstk_darwin(v30);
    v55[-4] = v28;
    v55[1] = v28;
    uint64_t v35 = v61;
    v55[-3] = v70;
    v55[-2] = v35;
    v55[-1] = v62;
    swift_retain_n();
    Button.init(action:label:)();
    uint64_t v36 = v56;
    BorderlessButtonStyle.init()();
    uint64_t v37 = v65;
    uint64_t v38 = v69;
    uint64_t v62 = v34;
    uint64_t v39 = v67;
    uint64_t v40 = v29;
    uint64_t v41 = v68;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v36, v37);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v12, v39);
    uint64_t v73 = v39;
    uint64_t v74 = v37;
    uint64_t v75 = v38;
    uint64_t v76 = v41;
    uint64_t v29 = v40;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    sub_1005CF83C(v17, OpaqueTypeMetadata2, OpaqueTypeConformance2);
    uint64_t v43 = *(void (**)(char *, uint64_t))(v58 + 8);
    v43(v17, OpaqueTypeMetadata2);
    sub_1005CF83C(v20, OpaqueTypeMetadata2, OpaqueTypeConformance2);
    long long v44 = v63;
    sub_1005C6BE0((uint64_t)v17, OpaqueTypeMetadata2);
    sub_10006ADFC(v62);
    v43(v17, OpaqueTypeMetadata2);
    v43(v20, OpaqueTypeMetadata2);
  }
  else
  {
    v61(v32);
    uint64_t v45 = v28;
    uint64_t v46 = v28;
    uint64_t v47 = v70;
    sub_1005CF83C(v24, v46, v70);
    uint64_t v48 = *(void (**)(char *, uint64_t))(v21 + 8);
    v48(v24, v45);
    sub_1005CF83C(v27, v45, v47);
    uint64_t v49 = v65;
    uint64_t v73 = v67;
    uint64_t v74 = v65;
    uint64_t v75 = v69;
    uint64_t v76 = v68;
    swift_getOpaqueTypeConformance2();
    uint64_t v50 = v63;
    sub_1005C6CD8((uint64_t)v24, OpaqueTypeMetadata2, v45);
    uint64_t v51 = v24;
    long long v44 = v50;
    v48(v51, v45);
    uint64_t v52 = v27;
    uint64_t v37 = v49;
    v48(v52, v45);
  }
  uint64_t v73 = v67;
  uint64_t v74 = v37;
  uint64_t v75 = v69;
  uint64_t v76 = v68;
  uint64_t v71 = swift_getOpaqueTypeConformance2();
  uint64_t v72 = v70;
  uint64_t v53 = swift_getWitnessTable();
  sub_1005CF83C(v44, v29, v53);
  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v44, v29);
}

uint64_t sub_1005C8954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void (*)(void))__chkstk_darwin(v7);
  uint64_t v12 = (char *)&v15 - v11;
  v10();
  sub_1005CF83C(v9, a3, a4);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, a3);
  sub_1005CF83C(v12, a3, a4);
  return ((uint64_t (*)(char *, uint64_t))v13)(v12, a3);
}

uint64_t sub_1005C8A88()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RedactionReasons();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v18 - v7;
  sub_1004DAA50((uint64_t)&v18 - v7);
  static RedactionReasons.placeholder.getter();
  sub_1005CA8FC(&qword_1010B17B8, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  char v9 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  v10(v8, v2);
  if (v9) {
    return static Color.primary.getter();
  }
  uint64_t v12 = *(void *)(v1 + 32);
  char v13 = *(unsigned char *)(v1 + 40);
  sub_100237EDC(v12, v13);
  char v14 = sub_1004DA7CC(v12, v13);
  sub_100237F44(v12, v13);
  if ((v14 & 1) == 0)
  {
    uint64_t v15 = *(void *)(v1 + 48);
    char v16 = *(unsigned char *)(v1 + 56);
    sub_100237EDC(v15, v16);
    char v17 = sub_1004DA7FC(v15, v16);
    sub_100237F44(v15, v16);
    if ((v17 & 0xFE) != 2) {
      return static Color.primary.getter();
    }
  }
  if (*(void *)(v1 + 16)) {
    return static Color.accentColor.getter();
  }
  return static Color.secondary.getter();
}

uint64_t sub_1005C8C88@<X0>(uint64_t a1@<X8>)
{
  return sub_1005C701C(a1);
}

unint64_t sub_1005C8CC8(uint64_t a1)
{
  unint64_t result = sub_1005C8CF0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1005C8CF0()
{
  unint64_t result = qword_1010B1658;
  if (!qword_1010B1658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B1658);
  }
  return result;
}

uint64_t sub_1005C8D44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005C8D60(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  *(unsigned char *)(a2 + 16) = *((unsigned char *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_1005C8D78()
{
  sub_100556BB0();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1005C8DC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = KeyPath;
  *(unsigned char *)(a1 + 24) = 0;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1005C8E24@<X0>(unsigned char *a1@<X8>)
{
  sub_10024BE38();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1005C8E74()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_1005C8EC0()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_1005C8EE8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005C8F1C()
{
  sub_100556BB0();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1005C8F68@<X0>(void *a1@<X8>)
{
  PlaylistCurators.View.init(configuration:)(*(void *)(v1 + 64), a1);

  return swift_bridgeObjectRetain();
}

uint64_t _s14descr100FBDFB1O11AttributionV4TextV5SpecsVMa()
{
  uint64_t result = qword_1010B16E0;
  if (!qword_1010B16E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005C8FF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v9 = a4 & 1;
  uint64_t v10 = sub_100063814(&qword_1010B4020);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v46[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = _s14descr100FBDFB1O11AttributionV4TextV5SpecsVMa();
  __chkstk_darwin(v13);
  uint64_t v51 = &v46[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v52 = &v46[-v16];
  __chkstk_darwin(v17);
  uint64_t v19 = &v46[-v18];
  __chkstk_darwin(v20);
  uint64_t v22 = &v46[-v21];
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  sub_10005D180();
  swift_bridgeObjectRetain();
  uint64_t v23 = Text.init<A>(_:)();
  uint64_t v25 = v24;
  LODWORD(v49) = v26;
  uint64_t v50 = v27;
  sub_100237EDC(a3, v9);
  LOBYTE(a1) = sub_1004DA7CC(a3, v9);
  sub_100237F44(a3, v9);
  if (a1)
  {
    if (qword_101098498 != -1) {
      swift_once();
    }
    uint64_t v28 = qword_1010B1628;
  }
  else
  {
    if (qword_1010984A0 != -1) {
      swift_once();
    }
    uint64_t v28 = qword_1010B1640;
  }
  uint64_t v29 = sub_100050A90(v13, (uint64_t)v28);
  sub_1005C962C(v29, (uint64_t)v19);
  sub_1005C9690((uint64_t)v19, (uint64_t)v22);
  uint64_t v30 = type metadata accessor for Font.Design();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v12, 1, 1, v30);
  static Font.system(_:design:weight:)();
  sub_1000637B8((uint64_t)v12, &qword_1010B4020);
  sub_1005CA950((uint64_t)v22, (uint64_t (*)(void))_s14descr100FBDFB1O11AttributionV4TextV5SpecsVMa);
  char v31 = v49 & 1;
  uint64_t v32 = Text.font(_:)();
  uint64_t v48 = v33;
  uint64_t v49 = v34;
  int v47 = v35;
  sub_1000D1500(v23, v25, v31);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100237EDC(a3, v9);
  char v37 = sub_1004DA7CC(a3, v9);
  sub_100237F44(a3, v9);
  if (v37)
  {
    if (qword_101098498 != -1) {
      swift_once();
    }
    uint64_t v38 = qword_1010B1628;
  }
  else
  {
    if (qword_1010984A0 != -1) {
      swift_once();
    }
    uint64_t v38 = qword_1010B1640;
  }
  uint64_t v39 = sub_100050A90(v13, (uint64_t)v38);
  uint64_t v40 = v51;
  sub_1005C962C(v39, (uint64_t)v51);
  uint64_t v41 = (uint64_t)v40;
  uint64_t v42 = v52;
  sub_1005C9690(v41, (uint64_t)v52);
  char v43 = v42[*(int *)(v13 + 24)];
  sub_1005CA950((uint64_t)v42, (uint64_t (*)(void))_s14descr100FBDFB1O11AttributionV4TextV5SpecsVMa);
  uint64_t result = swift_getKeyPath();
  uint64_t v45 = v48;
  *(void *)a5 = v32;
  *(void *)(a5 + 8) = v45;
  *(unsigned char *)(a5 + 16) = v47 & 1;
  *(void *)(a5 + 24) = v49;
  *(void *)(a5 + 32) = KeyPath;
  *(void *)(a5 + 40) = 3;
  *(unsigned char *)(a5 + 48) = 0;
  *(void *)(a5 + 56) = result;
  *(unsigned char *)(a5 + 64) = v43;
  return result;
}

uint64_t sub_1005C9444()
{
  uint64_t v0 = _s14descr100FBDFB1O11AttributionV4TextV5SpecsVMa();
  sub_100014CA4(v0, qword_1010B1628);
  uint64_t v1 = sub_100050A90(v0, (uint64_t)qword_1010B1628);
  uint64_t v2 = enum case for Font.TextStyle.title(_:);
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(v1, v2, v3);
  uint64_t result = static Font.Weight.regular.getter();
  *(void *)(v1 + *(int *)(v0 + 20)) = v5;
  *(unsigned char *)(v1 + *(int *)(v0 + 24)) = 0;
  return result;
}

uint64_t sub_1005C94F0()
{
  uint64_t v0 = type metadata accessor for Font.TextStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s14descr100FBDFB1O11AttributionV4TextV5SpecsVMa();
  sub_100014CA4(v4, qword_1010B1640);
  uint64_t v5 = sub_100050A90(v4, (uint64_t)qword_1010B1640);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.TextStyle.title3(_:), v0);
  static Font.Weight.regular.getter();
  uint64_t v7 = v6;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  *(void *)(v5 + *(int *)(v4 + 20)) = v7;
  *(unsigned char *)(v5 + *(int *)(v4 + 24)) = 1;
  return result;
}

uint64_t sub_1005C962C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr100FBDFB1O11AttributionV4TextV5SpecsVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005C9690(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s14descr100FBDFB1O11AttributionV4TextV5SpecsVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005C96F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005C9708);
}

uint64_t sub_1005C9708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Font.TextStyle();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 3) {
      return v10 - 2;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1005C97C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005C97D8);
}

uint64_t sub_1005C97D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Font.TextStyle();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  }
  return result;
}

uint64_t sub_1005C9894()
{
  uint64_t result = type metadata accessor for Font.TextStyle();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s14descr100FBDFB1O11AttributionV4TextVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);

  return sub_100237F44(v2, v3);
}

uint64_t _s14descr100FBDFB1O11AttributionV4TextVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_100237EDC(v4, v5);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return a1;
}

uint64_t _s14descr100FBDFB1O11AttributionV4TextVwca(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[2];
  LOBYTE(v2) = *((unsigned char *)v2 + 24);
  sub_100237EDC(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = (_BYTE)v2;
  sub_100237F44(v5, v6);
  return a1;
}

uint64_t _s14descr100FBDFB1O11AttributionV4TextVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v5;
  sub_100237F44(v6, v7);
  return a1;
}

ValueMetadata *_s14descr100FBDFB1O11AttributionV4TextVMa()
{
  return &_s14descr100FBDFB1O11AttributionV4TextVN;
}

void sub_1005C9AA8()
{
  sub_10036D1B4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

_OWORD *sub_1005C9B4C(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2)
    {
      uint64_t v7 = a2[1];
      *(void *)uint64_t v4 = *a2;
      *((void *)v4 + 1) = v7;
      swift_retain();
    }
    else
    {
      *a1 = *(_OWORD *)a2;
    }
    uint64_t v9 = a2[2];
    if (v9)
    {
      uint64_t v10 = a2[3];
      *((void *)v4 + 2) = v9;
      *((void *)v4 + 3) = v10;
      swift_retain();
    }
    else
    {
      v4[1] = *((_OWORD *)a2 + 1);
    }
    uint64_t v11 = a2[4];
    char v12 = *((unsigned char *)a2 + 40);
    sub_100237EDC(v11, v12);
    *((void *)v4 + 4) = v11;
    *((unsigned char *)v4 + 40) = v12;
    uint64_t v13 = a2[6];
    char v14 = *((unsigned char *)a2 + 56);
    sub_100237EDC(v13, v14);
    *((void *)v4 + 6) = v13;
    *((unsigned char *)v4 + 56) = v14;
    uint64_t v15 = *(int *)(a3 + 48);
    uint64_t v16 = (void *)((char *)v4 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    sub_100063814(&qword_1010A57E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_1005C9CF0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1) {
    swift_release();
  }
  if (*(void *)(a1 + 16)) {
    swift_release();
  }
  sub_100237F44(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  sub_100237F44(*(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  sub_100063814(&qword_1010A57E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for RedactionReasons();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1005C9DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)a2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  uint64_t v9 = *(void *)(a2 + 32);
  char v10 = *(unsigned char *)(a2 + 40);
  sub_100237EDC(v9, v10);
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v10;
  uint64_t v11 = *(void *)(a2 + 48);
  char v12 = *(unsigned char *)(a2 + 56);
  sub_100237EDC(v11, v12);
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 56) = v12;
  uint64_t v13 = *(int *)(a3 + 48);
  char v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  sub_100063814(&qword_1010A57E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for RedactionReasons();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *char v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1005C9F24(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if (*(void *)a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = v7;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v8;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v9 = a2[2];
  if (*(void *)(a1 + 16))
  {
    if (v9)
    {
      uint64_t v10 = a2[3];
      *(void *)(a1 + 16) = v9;
      *(void *)(a1 + 24) = v10;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v9)
  {
    uint64_t v11 = a2[3];
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v11;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v12 = a2[4];
  char v13 = *((unsigned char *)a2 + 40);
  sub_100237EDC(v12, v13);
  uint64_t v14 = *(void *)(a1 + 32);
  char v15 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v12;
  *(unsigned char *)(a1 + 40) = v13;
  sub_100237F44(v14, v15);
  uint64_t v16 = a2[6];
  char v17 = *((unsigned char *)a2 + 56);
  sub_100237EDC(v16, v17);
  uint64_t v18 = *(void *)(a1 + 48);
  char v19 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v16;
  *(unsigned char *)(a1 + 56) = v17;
  sub_100237F44(v18, v19);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v20 = *(int *)(a3 + 48);
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    sub_1000637B8(a1 + v20, &qword_1010A57E0);
    sub_100063814(&qword_1010A57E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *uint64_t v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005CA100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(int *)(a3 + 48);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_100063814(&qword_1010A57E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for RedactionReasons();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1005CA22C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if (*(void *)a1)
  {
    if (v6)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v6)
  {
    uint64_t v8 = a2[1];
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v8;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v9 = a2[2];
  if (*(void *)(a1 + 16))
  {
    if (v9)
    {
      uint64_t v10 = a2[3];
      *(void *)(a1 + 16) = v9;
      *(void *)(a1 + 24) = v10;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v9)
  {
    uint64_t v11 = a2[3];
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v11;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  char v12 = *((unsigned char *)a2 + 40);
  uint64_t v13 = *(void *)(a1 + 32);
  char v14 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = a2[4];
  *(unsigned char *)(a1 + 40) = v12;
  sub_100237F44(v13, v14);
  char v15 = *((unsigned char *)a2 + 56);
  uint64_t v16 = *(void *)(a1 + 48);
  char v17 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = a2[6];
  *(unsigned char *)(a1 + 56) = v15;
  sub_100237F44(v16, v17);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v18 = *(int *)(a3 + 48);
    char v19 = (void *)(a1 + v18);
    uint64_t v20 = (char *)a2 + v18;
    sub_1000637B8(a1 + v18, &qword_1010A57E0);
    uint64_t v21 = sub_100063814(&qword_1010A57E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for RedactionReasons();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1005CA3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005CA3FC);
}

uint64_t sub_1005CA3FC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100063814(&qword_1010A57E8);
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    char v12 = (char *)a1 + *(int *)(a3 + 48);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1005CA4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005CA4D0);
}

void *sub_1005CA4D0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010A57E8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 48);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s14descr100FBDFB1O11AttributionV7ContentVMa()
{
  return sub_10004CF5C();
}

unint64_t sub_1005CA598()
{
  unint64_t result = qword_1010B17A0;
  if (!qword_1010B17A0)
  {
    sub_10006389C(&qword_1010B17A8);
    sub_100063858(&qword_1010B1678, &qword_1010B1670);
    sub_100063858(&qword_1010B1680, &qword_1010B1660);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B17A0);
  }
  return result;
}

uint64_t sub_1005CA658@<X0>(uint64_t a1@<X8>)
{
  return sub_1005C8FF0(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), a1);
}

uint64_t sub_1005CA668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = _s14descr100FBDFB1O11AttributionV4TextV5SpecsVMa();
  __chkstk_darwin(v3);
  int v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(v1 + 16);
  char v10 = *(unsigned char *)(v1 + 24);
  sub_100237EDC(v9, v10);
  char v11 = sub_1004DA7CC(v9, v10);
  sub_100237F44(v9, v10);
  if (v11)
  {
    if (qword_101098498 != -1) {
      swift_once();
    }
    char v12 = qword_1010B1628;
  }
  else
  {
    if (qword_1010984A0 != -1) {
      swift_once();
    }
    char v12 = qword_1010B1640;
  }
  uint64_t v13 = sub_100050A90(v3, (uint64_t)v12);
  sub_1005C962C(v13, (uint64_t)v5);
  sub_1005C9690((uint64_t)v5, (uint64_t)v8);
  uint64_t v14 = type metadata accessor for Font.TextStyle();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, v8, v14);
}

unint64_t sub_1005CA810(uint64_t a1)
{
  unint64_t result = sub_1005CA838();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1005CA838()
{
  unint64_t result = qword_1010B17B0;
  if (!qword_1010B17B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B17B0);
  }
  return result;
}

uint64_t sub_1005CA88C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005CA8A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005CA8EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1005C8274(*(void *)(v1 + 32), *(void (**)(__n128))(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1005CA8FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005CA944()
{
  return sub_1005C8954(v0[4], v0[5], v0[2], v0[3]);
}

uint64_t sub_1005CA950(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005CA9C0()
{
  return swift_getWitnessTable();
}

unint64_t sub_1005CAC48()
{
  unint64_t result = qword_1010B17C0;
  if (!qword_1010B17C0)
  {
    sub_10006389C(&qword_1010B17C8);
    sub_1001EFF88();
    sub_100063858((unint64_t *)&unk_1010A1CC0, &qword_101099C90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B17C0);
  }
  return result;
}

uint64_t sub_1005CACE8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100014CA4(v0, qword_101129B58);
  sub_100050A90(v0, (uint64_t)qword_101129B58);
  return static Logger.music(_:)();
}

char *sub_1005CAD4C(void *a1)
{
  unint64_t result = (char *)[a1 state];
  if ((unint64_t)(result - 3) >= 3)
  {
    if (result == (char *)1)
    {
      *(unsigned char *)(v1 + 56) = 1;
      uint64_t v4 = *(uint64_t (**)(void))(v1 + 24);
      if (v4) {
        return (char *)v4();
      }
    }
  }
  else
  {
    if (*(unsigned char *)(v1 + 56) == 1)
    {
      uint64_t v3 = *(uint64_t (**)(void))(v1 + 40);
      if (v3) {
        unint64_t result = (char *)v3();
      }
    }
    *(unsigned char *)(v1 + 56) = 0;
  }
  return result;
}

uint64_t sub_1005CAE20()
{
  sub_10006ADFC(*(void *)(v0 + 24));
  sub_10006ADFC(*(void *)(v0 + 40));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InteractionController()
{
  return self;
}

id sub_1005CAEDC()
{
  return sub_1005CB1EC(type metadata accessor for CatchAllPassiveGestureRecognizer.AlwaysSimultaneousGestureRecognizerDelegate);
}

id sub_1005CAEF4()
{
  uint64_t v1 = OBJC_IVAR____TtC5Music32CatchAllPassiveGestureRecognizer____lazy_storage___alwaysSimultaneousGestureRecognizerDelegate;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC5Music32CatchAllPassiveGestureRecognizer____lazy_storage___alwaysSimultaneousGestureRecognizerDelegate);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC5Music32CatchAllPassiveGestureRecognizer____lazy_storage___alwaysSimultaneousGestureRecognizerDelegate);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)type metadata accessor for CatchAllPassiveGestureRecognizer.AlwaysSimultaneousGestureRecognizerDelegate()) init];
    int v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1005CAF64(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC5Music32CatchAllPassiveGestureRecognizer____lazy_storage___alwaysSimultaneousGestureRecognizerDelegate] = 0;
  sub_100058D80(a1, (uint64_t)v18);
  uint64_t v5 = v19;
  if (v19)
  {
    id v6 = sub_100068990(v18, v19);
    uint64_t v7 = *(void *)(v5 - 8);
    __n128 v8 = __chkstk_darwin(v6);
    char v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v7 + 16))(v10, v8);
    uint64_t v11 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
    sub_1000760E4((uint64_t)v18);
  }
  else
  {
    uint64_t v11 = 0;
  }
  char v12 = (objc_class *)type metadata accessor for CatchAllPassiveGestureRecognizer();
  v17.receiver = v2;
  v17.super_class = v12;
  [super initWithTarget:v11 action:a2];
  swift_unknownObjectRelease();
  id v14 = v13;
  id v15 = sub_1005CAEF4();
  [v14 setDelegate:v15];

  [v14 setMinimumPressDuration:0.0];
  [v14 setCancelsTouchesInView:0];
  [v14 setDelaysTouchesBegan:0];
  [v14 setDelaysTouchesEnded:0];

  sub_10005DDF8(a1);
  return v14;
}

id sub_1005CB1D4()
{
  return sub_1005CB1EC(type metadata accessor for CatchAllPassiveGestureRecognizer);
}

id sub_1005CB1EC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for CatchAllPassiveGestureRecognizer()
{
  return self;
}

uint64_t type metadata accessor for CatchAllPassiveGestureRecognizer.AlwaysSimultaneousGestureRecognizerDelegate()
{
  return self;
}

void sub_1005CB27C()
{
  qword_101129B70 = 0x4030000000000000;
}

void sub_1005CB28C()
{
  qword_101129B78 = 0x4071800000000000;
}

void sub_1005CB2A0()
{
  qword_101129B80 = 0x4030000000000000;
}

void sub_1005CB2B0(uint64_t a1)
{
}

void sub_1005CB2C8()
{
  qword_101129B90 = 0x4028000000000000;
}

id sub_1005CB2D8(uint64_t a1)
{
  return sub_1005CB49C(a1, &qword_101129B98);
}

id sub_1005CB2E4(uint64_t a1)
{
  return sub_1005CB314(24.0, a1, &qword_101129BA0);
}

void sub_1005CB2F4()
{
  qword_101129BA8 = 0x4018000000000000;
}

id sub_1005CB304(uint64_t a1)
{
  return sub_1005CB314(20.0, a1, &qword_101129BB0);
}

id sub_1005CB314(double a1, uint64_t a2, void *a3)
{
  id result = [self systemFontOfSize:a1 weight:UIFontWeightBold];
  *a3 = result;
  return result;
}

void sub_1005CB374()
{
  qword_101129BB8 = 0x4010000000000000;
}

void sub_1005CB384(uint64_t a1)
{
}

int64x2_t sub_1005CB398()
{
  int64x2_t result = vdupq_n_s64(0x404A000000000000uLL);
  xmmword_101129BD0 = (__int128)result;
  return result;
}

void sub_1005CB3AC()
{
  qword_101129BE0 = 0x4010000000000000;
}

double sub_1005CB3BC()
{
  double result = 0.0;
  xmmword_101129BF0 = xmmword_100E39900;
  return result;
}

void sub_1005CB3D0()
{
  qword_101129C00 = 0x4010000000000000;
}

void sub_1005CB3E0(uint64_t a1)
{
}

void sub_1005CB3F4(double a1, uint64_t a2, void *a3)
{
  id v5 = [self blackColor];
  id v6 = [v5 colorWithAlphaComponent:a1];

  *a3 = v6;
}

void sub_1005CB470()
{
  qword_101129C10 = 0xC000000000000000;
}

void sub_1005CB480()
{
  qword_101129C18 = 0x4028000000000000;
}

id sub_1005CB490(uint64_t a1)
{
  return sub_1005CB49C(a1, &qword_101129C20);
}

id sub_1005CB49C(uint64_t a1, void *a2)
{
  id result = [self whiteColor];
  *a2 = result;
  return result;
}

uint64_t sub_1005CB4E0(uint64_t a1)
{
  return sub_1005CB508(a1, (uint64_t)&UIFontWeightBold, &qword_101129C28);
}

uint64_t sub_1005CB4F4(uint64_t a1)
{
  return sub_1005CB508(a1, (uint64_t)&UIFontWeightRegular, &qword_101129C30);
}

uint64_t sub_1005CB508(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100057778(0, (unint64_t *)&qword_10109BA80);
  uint64_t result = static UIFont.preferredFont(forTextStyle:weight:)();
  *a3 = result;
  return result;
}

void sub_1005CB564()
{
  qword_101129C38 = 0x4008000000000000;
}

double sub_1005CB574()
{
  double result = 46.0;
  xmmword_101129C40 = xmmword_100E39910;
  return result;
}

id sub_1005CB588()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.4];
  qword_101129C50 = (uint64_t)result;
  return result;
}

uint64_t sub_1005CB5C8(void *a1)
{
  id v131 = String._bridgeToObjectiveC()();
  objc_super v3 = (Class *)String._bridgeToObjectiveC()();
  id v134 = String._bridgeToObjectiveC()();
  id v4 = self;
  id v5 = [v4 defaultParagraphStyle];
  [v5 mutableCopy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  uint64_t v6 = sub_100057778(0, &qword_1010ABCE0);
  swift_dynamicCast();
  id v7 = v142[0];
  if (qword_1010984E8 != -1) {
    swift_once();
  }
  [v142[0] setParagraphSpacing:*(double *)&qword_101129BA8];
  [v142[0] setLineBreakStrategy:1];
  if (*(void *)(*(void *)&v1 + 96))
  {
    swift_bridgeObjectRetain();
    [v142[0] setAlignment:NSTextAlignment.init(languageCode:)()];
  }
  CGFloat v124 = v1;
  v125 = v3;
  id v8 = [v4 defaultParagraphStyle];
  [v8 mutableCopy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  uint64_t v9 = v6;
  swift_dynamicCast();
  id v10 = v142[0];
  [v142[0] setAlignment:0];
  uint64_t rect = sub_100063814((uint64_t *)&unk_1010B8A90);
  uint64_t inited = swift_initStackObject();
  uint64_t v132 = 3;
  *(_OWORD *)(inited + 16) = xmmword_100E251F0;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v12 = qword_1010984D8;
  id v13 = NSForegroundColorAttributeName;
  if (v12 != -1) {
    swift_once();
  }
  id v14 = (void *)qword_101129B98;
  uint64_t v15 = sub_100057778(0, (unint64_t *)&qword_10109BAA0);
  *(void *)(inited + 40) = v14;
  *(void *)(inited + 64) = v15;
  *(void *)(inited + 72) = NSParagraphStyleAttributeName;
  *(void *)(inited + 80) = v7;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 112) = NSFontAttributeName;
  uint64_t v16 = qword_1010984E0;
  id v17 = v14;
  uint64_t v18 = NSParagraphStyleAttributeName;
  id v127 = v7;
  uint64_t v19 = NSFontAttributeName;
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v20 = (void *)qword_101129BA0;
  uint64_t v129 = sub_100057778(0, (unint64_t *)&qword_10109BA80);
  *(void *)(inited + 144) = v129;
  *(void *)(inited + 120) = v20;
  id v21 = v20;
  unint64_t v128 = sub_10001A1B8(inited);
  unint64_t v144 = v128;
  uint64_t v22 = swift_initStackObject();
  *(_OWORD *)(v22 + 16) = xmmword_100E251F0;
  *(void *)(v22 + 32) = v13;
  uint64_t v23 = qword_101098540;
  uint64_t v24 = v13;
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v25 = (void *)qword_101129C20;
  *(void *)(v22 + 40) = qword_101129C20;
  *(void *)(v22 + 64) = v15;
  *(void *)(v22 + 72) = v18;
  *(void *)(v22 + 80) = v10;
  *(void *)(v22 + 104) = v9;
  *(void *)(v22 + 112) = v19;
  uint64_t v26 = qword_101098548;
  id v27 = v25;
  uint64_t v28 = v18;
  uint64_t v29 = v9;
  id v30 = v10;
  char v31 = v19;
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v32 = (void *)qword_101129C28;
  *(void *)(v22 + 144) = v129;
  *(void *)(v22 + 120) = v32;
  id v33 = v32;
  unint64_t v130 = sub_10001A1B8(v22);
  uint64_t v34 = swift_initStackObject();
  *(_OWORD *)(v34 + 16) = xmmword_100E251F0;
  int v35 = (void *)qword_101129C20;
  *(void *)(v34 + 32) = v24;
  *(void *)(v34 + 40) = v35;
  *(void *)(v34 + 64) = v15;
  *(void *)(v34 + 72) = v28;
  *(void *)(v34 + 80) = v30;
  *(void *)(v34 + 104) = v29;
  *(void *)(v34 + 112) = v31;
  uint64_t v36 = qword_101098550;
  id v123 = v30;
  char v37 = v24;
  id v38 = v35;
  uint64_t v39 = v28;
  uint64_t v40 = v31;
  if (v36 != -1) {
    swift_once();
  }
  uint64_t v41 = (void *)qword_101129C30;
  *(void *)(v34 + 144) = v129;
  *(void *)(v34 + 120) = v41;
  id v42 = v41;
  v121 = (objc_class *)sub_10001A1B8(v34);
  if (qword_1010984B8 != -1) {
    swift_once();
  }
  double v43 = *(double *)&qword_101129B78;
  if (qword_1010984B0 != -1) {
    swift_once();
  }
  long long v44 = (double *)&qword_101129000;
  double v45 = v43 - (*(double *)&qword_101129B70 + *(double *)&qword_101129B70);
  uint64_t v46 = (Class *)&MPModelRelationshipMediaClipStaticAssets_ptr;
  int v47 = &selRef_nowPlayingViewControllerCanShowMore_;
  id v48 = [objc_allocWithZone((Class)NSStringDrawingContext) init];
  uint64_t v49 = (SEL *)&selRef_setManagingNavigationController_;
  [v48 setWantsNumberOfLineFragments:1];
  type metadata accessor for Key(0);
  uint64_t v50 = (uint64_t *)sub_1005CCE58();
  swift_bridgeObjectRetain();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v52 = (SEL *)&selRef_setManagingNavigationController_;
  double v53 = INFINITY;
  [v134 boundingRectWithSize:1 options:isa attributes:v48 context:v45];
  double MinY = v54;

  if ((uint64_t)[v48 numberOfLineFragments] < 5) {
    goto LABEL_24;
  }
  uint64_t v56 = qword_1010984F0;
  uint64_t isEscapingClosureAtFileLocation = v40;
  if (v56 != -1) {
    goto LABEL_44;
  }
  while (1)
  {
    uint64_t v58 = (void *)qword_101129BB0;
    v137 = (void *)v129;
    *(void *)&long long aBlock = qword_101129BB0;
    sub_10007664C(&aBlock, v142);
    id v59 = v58;
    unint64_t v60 = v144;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v140[0] = v60;
    sub_100386EA0(v142, (void *)isEscapingClosureAtFileLocation, isUniquelyReferenced_nonNull_native);
    unint64_t v144 = v140[0];

    swift_bridgeObjectRelease();
    if (qword_1010984F8 != -1) {
      swift_once();
    }
    [v127 setParagraphSpacing:*(double *)&qword_101129BB8];
    swift_bridgeObjectRetain();
    Class v62 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v134 v52[303] 1 v62 v48 v45 v53];
    double MinY = v63;

LABEL_24:
    double v64 = *(double *)&qword_101129B78 - (v44[366] + v44[366]);
    if (qword_101098508 != -1) {
      swift_once();
    }
    v122 = v48;
    double v65 = v64 - *(double *)&xmmword_101129BD0;
    if (qword_101098538 != -1) {
      swift_once();
    }
    double v66 = v65 - *(double *)&qword_101129C18;
    id v67 = [objc_allocWithZone(v46[436]) v47[212]];
    [v67 v49[302]:1];
    [v67 setMaximumNumberOfLines:3];
    v68.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    double v69 = INFINITY;
    [v131 v52[303]:1 v68.super.isa:v67 v66:INFINITY];
    CGFloat v71 = v70;
    CGFloat v73 = v72;

    id v74 = [objc_allocWithZone(v46[436]) v47[212]];
    [v74 v49[302]:1];
    id v75 = [v67 numberOfLineFragments];
    if (__OFSUB__(4, v75))
    {
      __break(1u);
LABEL_42:
      swift_once();
      goto LABEL_33;
    }
    uint64_t v132 = *(void *)&v71;
    uint64_t rect = *(void *)&MinY;
    if (4 - (void)v75 < 0) {
      break;
    }
    CGFloat v71 = v45;
    [v74 setMaximumNumberOfLines:];
    v68.super.Class isa = v121;
    Class v76 = Dictionary._bridgeToObjectiveC()().super.isa;
    uint64_t v46 = v125;
    [v125 v52[303] 1 v76 v74 v66 INFINITY];
    unint64_t v128 = v78;
    uint64_t v129 = v77;

    double v79 = 280.0;
    if (*(unsigned char *)(*(void *)&v124 + 16) == 1) {
      double v79 = 348.0;
    }
    double v66 = *(double *)&qword_101129B78;
    double v118 = v79;
    *(double *)v142 = (v79 - *(double *)&qword_101129B78) * 0.5;
    v142[1] = 0;
    v142[2] = (id)qword_101129B78;
    CGFloat v143 = 0.0;
    v145.origin.y = 0.0;
    v145.size.height = 0.0;
    v145.origin.x = *(double *)v142;
    double v69 = *(double *)v142;
    *(void *)&v145.size.width = qword_101129B78;
    uint64_t v50 = &qword_101129000;
    double v2 = CGRectGetMinX(v145) + *(double *)&qword_101129B70;
    v146.origin.y = 0.0;
    v146.size.height = 0.0;
    v146.origin.x = v69;
    v146.size.width = v66;
    double MinY = CGRectGetMinY(v146);
    if (qword_1010984D0 != -1) {
      goto LABEL_42;
    }
LABEL_33:
    double v80 = *(double *)&qword_101129B90;
    CGFloat v81 = MinY + *(double *)&qword_101129B90;
    v147.origin.y = 0.0;
    v147.size.height = 0.0;
    v147.origin.x = v69;
    v147.size.width = v66;
    CGFloat MinX = CGRectGetMinX(v147);
    CGFloat v116 = v81;
    double v117 = v2;
    v148.origin.x = v2;
    v148.origin.y = v81;
    CGFloat v124 = v71;
    v148.size.width = v71;
    *(void *)&v148.size.height = rect;
    CGFloat v83 = v80 + CGRectGetMaxY(v148);
    v149.origin.y = 0.0;
    v149.size.height = 0.0;
    v149.origin.x = v69;
    v149.size.width = v66;
    CGFloat Width = CGRectGetWidth(v149);
    *(CGFloat *)v140 = MinX;
    *(CGFloat *)&v140[1] = v83;
    *(CGFloat *)&v140[2] = Width;
    double v141 = 0.0;
    v150.origin.y = 0.0;
    v150.size.height = 0.0;
    v150.origin.x = v69;
    v150.size.width = v66;
    CGFloat v85 = CGRectGetMinX(v150);
    double v86 = *((double *)v50 + 366);
    CGFloat v87 = v85 + v86;
    v151.size.height = 0.0;
    CGFloat v110 = v83;
    CGFloat v111 = MinX;
    v151.origin.x = MinX;
    v151.origin.y = v83;
    CGFloat v109 = Width;
    v151.size.width = Width;
    CGFloat v88 = v86 + CGRectGetMinY(v151);
    CGSize v89 = (CGSize)xmmword_101129BD0;
    v152.origin.x = v87;
    v152.origin.y = v88;
    v152.size = (CGSize)xmmword_101129BD0;
    double v90 = CGRectGetMaxX(v152) + *(double *)&qword_101129C18;
    CGFloat v114 = v88;
    CGFloat v115 = v87;
    v153.origin.x = v87;
    v153.origin.y = v88;
    v153.size = v89;
    double v91 = CGRectGetMinY(v153);
    if (qword_101098530 != -1) {
      swift_once();
    }
    double v92 = v91 + *(double *)&qword_101129C10;
    v154.origin.x = v90;
    v154.origin.y = v91 + *(double *)&qword_101129C10;
    *(void *)&v154.size.width = v132;
    v154.size.height = v73;
    CGFloat v93 = CGRectGetMinX(v154);
    v155.origin.x = v90;
    v155.origin.y = v92;
    *(void *)&v155.size.width = v132;
    v155.size.height = v73;
    CGFloat MaxY = CGRectGetMaxY(v155);
    v156.origin.x = v90;
    v156.origin.y = v92;
    *(void *)&v156.size.width = v132;
    v156.size.height = v73;
    CGFloat v95 = CGRectGetMinX(v156);
    CGFloat v107 = MaxY;
    CGFloat v108 = v93;
    v157.origin.x = v93;
    v157.origin.y = MaxY;
    *(void *)&v157.size.height = v128;
    *(void *)&v157.size.width = v129;
    double v96 = CGRectGetMaxY(v157);
    if (qword_101098558 != -1) {
      swift_once();
    }
    double v113 = v90;
    CGFloat v119 = v73;
    v120 = v74;
    double v97 = v96 + *(double *)&qword_101129C38;
    if (qword_101098560 != -1) {
      swift_once();
    }
    double v2 = *((double *)&xmmword_101129C40 + 1);
    double v45 = *(double *)&xmmword_101129C40;
    v158.origin.x = v95;
    v158.origin.y = v97;
    v158.size = (CGSize)xmmword_101129C40;
    CGFloat v98 = CGRectGetMaxY(v158);
    double v99 = *((double *)v50 + 366);
    double v106 = v97;
    CGFloat v100 = v98 + v99;
    v159.origin.y = 0.0;
    v159.size.height = 0.0;
    v159.origin.x = v69;
    v159.size.width = v66;
    CGFloat v101 = v100 - CGRectGetMinY(v159);
    CGFloat v143 = v101;
    v160.size.height = 0.0;
    v160.origin.y = v110;
    v160.origin.x = v111;
    v160.size.width = v109;
    CGFloat v112 = v95;
    CGFloat v102 = v101 - CGRectGetMaxY(v160);
    v161.origin.y = 0.0;
    v161.origin.x = v69;
    v161.size.width = v66;
    v161.size.height = v101;
    double v141 = v102 + CGRectGetMinY(v161);
    v162.origin.y = 0.0;
    v162.origin.x = v69;
    v162.size.width = v66;
    v162.size.height = v101;
    double v53 = v99 + CGRectGetMaxY(v162);
    uint64_t v52 = (SEL *)[objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v118 v53];
    uint64_t v50 = (uint64_t *)swift_allocObject();
    v50[2] = (uint64_t)v142;
    v50[3] = (uint64_t)v140;
    v50[4] = (uint64_t)v134;
    *((double *)v50 + 5) = v117;
    *((CGFloat *)v50 + 6) = v116;
    *((CGFloat *)v50 + 7) = v124;
    v50[8] = rect;
    v50[9] = (uint64_t)&v144;
    v50[10] = (uint64_t)v131;
    *((double *)v50 + 11) = v113;
    *((double *)v50 + 12) = v92;
    v50[13] = v132;
    *((CGFloat *)v50 + 14) = v119;
    v50[15] = v130;
    v50[16] = (uint64_t)v46;
    *((CGFloat *)v50 + 17) = v108;
    *((CGFloat *)v50 + 18) = v107;
    v50[19] = v129;
    v50[20] = v128;
    v50[21] = (uint64_t)v68.super.isa;
    *((CGFloat *)v50 + 22) = v112;
    *((double *)v50 + 23) = v106;
    *((double *)v50 + 24) = v45;
    *((double *)v50 + 25) = v2;
    *((CGFloat *)v50 + 26) = v115;
    *((CGFloat *)v50 + 27) = v114;
    *((CGSize *)v50 + 14) = v89;
    v50[30] = (uint64_t)a1;
    uint64_t v103 = swift_allocObject();
    *(void *)(v103 + 16) = sub_1005CCF10;
    *(void *)(v103 + 24) = v50;
    v138 = sub_10001A2EC;
    uint64_t v139 = v103;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    v136 = sub_10001A278;
    v137 = &unk_100FE1A38;
    id v48 = _Block_copy(&aBlock);
    uint64_t v49 = (SEL *)v134;
    long long v44 = (double *)v131;
    uint64_t v46 = v46;
    id v104 = a1;
    swift_retain();
    swift_release();
    int v47 = (char **)[(SEL *)v52 imageWithActions:v48];

    _Block_release(v48);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return (uint64_t)v47;
    }
    __break(1u);
LABEL_44:
    swift_once();
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1005CC4B4(CGRect *a1, double *a2, CGRect *a3, void *a4, uint64_t a5, void *a6, uint64_t a7, void *a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17, double a18, double a19, double a20,uint64_t a21,double a22,double a23,double a24,double a25,double a26,double a27,double a28,double a29,void *a30)
{
  uint64_t v101 = a5;
  double v106 = a3;
  double v104 = a15;
  double v105 = a16;
  double v102 = a13;
  double v103 = a14;
  uint64_t v40 = type metadata accessor for CGPathFillRule();
  uint64_t v108 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  id v42 = (char *)&v88 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v43 = self;
  double v44 = *a2;
  double v45 = a2[1];
  double v46 = a2[2];
  double v47 = a2[3];
  if (qword_1010984C0 != -1) {
    swift_once();
  }
  id v48 = [v43 _bezierPathWithPillRect:v44 cornerRadius:v45];
  if (!v48)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v49 = v48;
  id v97 = a4;
  uint64_t v98 = a7;
  id v99 = a6;
  id v100 = a8;
  uint64_t v107 = v40;
  id v95 = v43;
  uint64_t v96 = a21;
  uint64_t v50 = (CGContext *)[(CGRect *)a1 CGContext];
  uint64_t v51 = (const CGPath *)[v49 CGPath];
  CGContextAddPath(v50, v51);

  uint64_t v52 = (CGContext *)[(CGRect *)a1 CGContext];
  if (qword_1010984C8 != -1) {
    swift_once();
  }
  double v53 = (CGColor *)[(id)qword_101129B88 CGColor];
  CGContextSetFillColorWithColor(v52, v53);

  id v54 = [(CGRect *)a1 CGContext];
  uint64_t v55 = enum case for CGPathFillRule.winding(_:);
  uint64_t v56 = a1;
  uint64_t v57 = v107;
  uint64_t v58 = v108;
  uint64_t v59 = v108 + 104;
  unint64_t v60 = *(void (**)(char *, void, uint64_t))(v108 + 104);
  v60(v42, enum case for CGPathFillRule.winding(_:), v107);
  CGContextRef.fillPath(using:)();

  double v63 = *(void (**)(char *, uint64_t))(v58 + 8);
  uint64_t v61 = v58 + 8;
  Class v62 = v63;
  v63(v42, v57);
  id v93 = v49;
  [v49 addClip];
  CGPathRef v64 = CGPathCreateWithRect(*v106, 0);
  double v65 = (CGContext *)[(CGRect *)v56 CGContext];
  CGPathRef v89 = v64;
  CGContextAddPath(v65, v64);

  double v66 = (CGContext *)[(CGRect *)v56 CGContext];
  if (qword_101098500 != -1) {
    swift_once();
  }
  id v67 = (CGColor *)[(id)qword_101129BC0 CGColor];
  CGContextSetFillColorWithColor(v66, v67);

  double v106 = v56;
  id v68 = [(CGRect *)v56 CGContext];
  unsigned int v92 = v55;
  uint64_t v69 = v55;
  uint64_t v70 = v107;
  uint64_t v94 = v59;
  double v91 = v60;
  v60(v42, v69, v107);
  CGContextRef.fillPath(using:)();

  uint64_t v108 = v61;
  double v90 = v62;
  v62(v42, v70);
  type metadata accessor for Key(0);
  sub_1005CCE58();
  swift_bridgeObjectRetain();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v97 drawWithRect:33 options:isa attributes:0 context:a9, a10, a11, a12];

  Class v72 = Dictionary._bridgeToObjectiveC()().super.isa;
  [v99 drawWithRect:33 options:v72 attributes:0 context:v102 v103 v104 v105];

  Class v73 = Dictionary._bridgeToObjectiveC()().super.isa;
  [v100 drawWithRect:33 options:v73 attributes:0 context:a17, a18, a19, a20];

  id v74 = self;
  NSString v75 = String._bridgeToObjectiveC()();
  if (qword_1010981E0 != -1) {
    swift_once();
  }
  id v76 = [v74 imageNamed:v75 inBundle:qword_1011298A0 compatibleWithTraitCollection:0];

  if (!v76) {
    goto LABEL_24;
  }
  if (qword_101098568 != -1) {
    swift_once();
  }
  id v77 = [v76 flattenedImageWithColor:qword_101129C50];

  [v77 drawInRect:a22, a23, a24, a25];
  unint64_t v78 = (CGContext *)[(CGRect *)v106 CGContext];
  if (qword_101098518 != -1) {
    swift_once();
  }
  CGSize v79 = (CGSize)xmmword_101129BF0;
  if (qword_101098520 != -1) {
    swift_once();
  }
  CGFloat v80 = *(double *)&qword_101129C00;
  if (qword_101098528 != -1) {
    swift_once();
  }
  CGFloat v81 = (CGColor *)[(id)qword_101129C08 CGColor];
  CGContextSetShadowWithColor(v78, v79, v80, v81);

  if (qword_101098510 != -1) {
    swift_once();
  }
  id v82 = [v95 _bezierPathWithPillRect:a26 cornerRadius:a27 a28 a29 *(double *)&qword_101129BE0];
  if (v82)
  {
    CGFloat v83 = v82;
    uint64_t v84 = v106;
    CGFloat v85 = (CGContext *)[(CGRect *)v106 CGContext];
    double v86 = (const CGPath *)[v83 CGPath];
    CGContextAddPath(v85, v86);

    id v87 = [(CGRect *)v84 CGContext];
    v91(v42, v92, v70);
    CGContextRef.fillPath(using:)();

    v90(v42, v70);
    [v83 addClip];
    [a30 drawInRect:a26, a27, a28, a29];

    return;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1005CCDA8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShareLyricsStoryRenderer()
{
  return self;
}

uint64_t sub_1005CCE24()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1005CCE58()
{
  unint64_t result = qword_1010B8AA0;
  if (!qword_1010B8AA0)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B8AA0);
  }
  return result;
}

uint64_t sub_1005CCEB0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1005CCF10(CGRect *a1)
{
  sub_1005CC4B4(a1, *(double **)(v1 + 16), *(CGRect **)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 72), *(void **)(v1 + 80), *(void *)(v1 + 120), *(void **)(v1 + 128), *(double *)(v1 + 40), *(double *)(v1 + 48), *(double *)(v1 + 56), *(double *)(v1 + 64), *(double *)(v1 + 88), *(double *)(v1 + 96), *(double *)(v1 + 104), *(double *)(v1 + 112), *(double *)(v1 + 136), *(double *)(v1 + 144), *(double *)(v1 + 152),
    *(double *)(v1 + 160),
    *(void *)(v1 + 168),
    *(double *)(v1 + 176),
    *(double *)(v1 + 184),
    *(double *)(v1 + 192),
    *(double *)(v1 + 200),
    *(double *)(v1 + 208),
    *(double *)(v1 + 216),
    *(double *)(v1 + 224),
    *(double *)(v1 + 232),
    *(void **)(v1 + 240));
}

uint64_t sub_1005CCF8C()
{
  return swift_deallocObject();
}

ValueMetadata *_s6GenresVMa()
{
  return &_s6GenresVN;
}

uint64_t sub_1005CCFAC(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for MusicLibrary();
  sub_1005CD538();
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(unsigned char *)(v1 + 8) & 1);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  char v4 = *(unsigned char *)(v1 + 33);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._combine(_:)(v4 & 1);
  uint64_t v5 = *(void *)(v1 + 40);
  swift_bridgeObjectRetain();
  sub_1000C6D30(a1, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_1000C6834(a1, v6);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v2 + 56) == 7)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v2 + 80);
  swift_bridgeObjectRetain();
  sub_1000C6C70(a1, v7);
  return swift_bridgeObjectRelease();
}

void sub_1005CD31C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  type metadata accessor for TitledSection();
  type metadata accessor for Genre();
  MusicLibrarySectionedRequest.init()();
  swift_retain();
  sub_100063814(&qword_1010B1AB8);
  MusicLibrarySectionedRequest.library.setter();
  MusicLibrarySectionedRequest.includeOnlyDownloadedContent.setter();
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  MusicLibrarySectionedRequest.filterItems(text:)(v3);
}

Swift::Int sub_1005CD3D8()
{
  Hasher.init(_seed:)();
  sub_1005CCFAC((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_1005CD41C()
{
  Hasher.init(_seed:)();
  sub_1005CCFAC((uint64_t)v1);
  return Hasher._finalize()();
}

unint64_t sub_1005CD45C()
{
  unint64_t result = qword_1010B19D8;
  if (!qword_1010B19D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B19D8);
  }
  return result;
}

void *sub_1005CD4B0()
{
  return &protocol witness table for Genre;
}

unint64_t sub_1005CD4BC(uint64_t a1)
{
  unint64_t result = sub_1005CD4E4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1005CD4E4()
{
  unint64_t result = qword_1010B1AB0;
  if (!qword_1010B1AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B1AB0);
  }
  return result;
}

unint64_t sub_1005CD538()
{
  unint64_t result = qword_1010990F8;
  if (!qword_1010990F8)
  {
    type metadata accessor for MusicLibrary();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010990F8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AudioTrait(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF7)
  {
    unsigned int v2 = a2 + 9;
    if (a2 + 9 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 9;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 9;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1005CD640);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 9;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 3) {
    unsigned int v8 = v7 - 2;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 8) {
    return v8 - 7;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for AudioTrait(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 9;
  if (a3 + 9 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF7) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v7 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1005CD728);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

uint64_t sub_1005CD750(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1005CD764(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioTrait()
{
  return &type metadata for AudioTrait;
}

unsigned char *storeEnumTagSinglePayload for HapticsState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005CD850);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HapticsState()
{
  return &type metadata for HapticsState;
}

unint64_t sub_1005CD88C()
{
  unint64_t result = qword_1010B1AC0;
  if (!qword_1010B1AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B1AC0);
  }
  return result;
}

void *sub_1005CD8E0()
{
  if (![v0 hasLoadedValueForKey:MPModelPropertySongTraits]) {
    return _swiftEmptyArrayStorage;
  }
  unsigned __int8 v1 = [v0 traits];
  unsigned __int8 v2 = v1;
  if ((v1 & 2) == 0)
  {
    int v3 = _swiftEmptyArrayStorage;
    if ((v1 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_9;
  }
  int v3 = sub_10027027C(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v6 = v3[2];
  unint64_t v5 = v3[3];
  unint64_t v7 = v6 + 1;
  if (v6 >= v5 >> 1)
  {
    uint64_t v19 = sub_10027027C((void *)(v5 > 1), v6 + 1, 1, v3);
    unint64_t v7 = v6 + 1;
    int v3 = v19;
  }
  v3[2] = v7;
  *((unsigned char *)v3 + v6 + 32) = 6;
  if ((v2 & 4) != 0)
  {
LABEL_9:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v3 = sub_10027027C(0, v3[2] + 1, 1, v3);
    }
    unint64_t v9 = v3[2];
    unint64_t v8 = v3[3];
    unint64_t v10 = v9 + 1;
    if (v9 >= v8 >> 1)
    {
      uint64_t v20 = sub_10027027C((void *)(v8 > 1), v9 + 1, 1, v3);
      unint64_t v10 = v9 + 1;
      int v3 = v20;
    }
    v3[2] = v10;
    *((unsigned char *)v3 + v9 + 32) = 5;
  }
LABEL_14:
  if ((v2 & 0x20) == 0)
  {
    if ((v2 & 0x10) == 0) {
      goto LABEL_16;
    }
LABEL_23:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v3 = sub_10027027C(0, v3[2] + 1, 1, v3);
    }
    unint64_t v15 = v3[2];
    unint64_t v14 = v3[3];
    unint64_t v16 = v15 + 1;
    if (v15 >= v14 >> 1)
    {
      uint64_t v22 = sub_10027027C((void *)(v14 > 1), v15 + 1, 1, v3);
      unint64_t v16 = v15 + 1;
      int v3 = v22;
    }
    v3[2] = v16;
    *((unsigned char *)v3 + v15 + 32) = 3;
    if ((v2 & 1) == 0) {
      goto LABEL_33;
    }
    goto LABEL_28;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v3 = sub_10027027C(0, v3[2] + 1, 1, v3);
  }
  unint64_t v12 = v3[2];
  unint64_t v11 = v3[3];
  unint64_t v13 = v12 + 1;
  if (v12 >= v11 >> 1)
  {
    id v21 = sub_10027027C((void *)(v11 > 1), v12 + 1, 1, v3);
    unint64_t v13 = v12 + 1;
    int v3 = v21;
  }
  v3[2] = v13;
  *((unsigned char *)v3 + v12 + 32) = 4;
  if ((v2 & 0x10) != 0) {
    goto LABEL_23;
  }
LABEL_16:
  if (v2)
  {
LABEL_28:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v3 = sub_10027027C(0, v3[2] + 1, 1, v3);
    }
    unint64_t v18 = v3[2];
    unint64_t v17 = v3[3];
    if (v18 >= v17 >> 1) {
      int v3 = sub_10027027C((void *)(v17 > 1), v18 + 1, 1, v3);
    }
    v3[2] = v18 + 1;
    *((unsigned char *)v3 + v18 + 32) = 7;
  }
LABEL_33:
  uint64_t v23 = v3;
  swift_bridgeObjectRetain();
  sub_1005CE4E0((uint64_t *)&v23);
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1005CDBDC(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a1)
  {
    case 3u:
      if (a2 == 3) {
        return 1;
      }
      unint64_t v2 = 0;
      goto LABEL_20;
    case 4u:
      if (a2 == 4) {
        return 1;
      }
      unint64_t v2 = 1;
      goto LABEL_20;
    case 5u:
      if (a2 == 5) {
        return 1;
      }
      unint64_t v2 = 2;
      goto LABEL_20;
    case 6u:
      if (a2 == 6) {
        return 1;
      }
      unint64_t v2 = 3;
      goto LABEL_20;
    case 7u:
      if (a2 == 7) {
        return 1;
      }
      unint64_t v2 = 4;
      goto LABEL_20;
    case 8u:
      if (a2 == 8) {
        return 1;
      }
      unint64_t v2 = 5;
      goto LABEL_20;
    case 9u:
      if (a2 == 9) {
        return 1;
      }
      unint64_t v2 = 7;
      goto LABEL_20;
    default:
      if ((a2 - 3) >= 7u)
      {
        BOOL v4 = a1 >= a2;
      }
      else
      {
        unint64_t v2 = 6;
LABEL_20:
        if ((a2 - 3) > 6u) {
          unint64_t v5 = 6;
        }
        else {
          unint64_t v5 = qword_100E39D20[(char)(a2 - 3)];
        }
        BOOL v4 = v2 >= v5;
      }
      int v6 = !v4;
      return v6 ^ 1u;
  }
}

uint64_t sub_1005CDD14(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a2)
  {
    case 3u:
      if (a1 == 3) {
        return 1;
      }
      unint64_t v2 = 0;
      goto LABEL_20;
    case 4u:
      if (a1 == 4) {
        return 1;
      }
      unint64_t v2 = 1;
      goto LABEL_20;
    case 5u:
      if (a1 == 5) {
        return 1;
      }
      unint64_t v2 = 2;
      goto LABEL_20;
    case 6u:
      if (a1 == 6) {
        return 1;
      }
      unint64_t v2 = 3;
      goto LABEL_20;
    case 7u:
      if (a1 == 7) {
        return 1;
      }
      unint64_t v2 = 4;
      goto LABEL_20;
    case 8u:
      if (a1 == 8) {
        return 1;
      }
      unint64_t v2 = 5;
      goto LABEL_20;
    case 9u:
      if (a1 == 9) {
        return 1;
      }
      unint64_t v2 = 7;
      goto LABEL_20;
    default:
      if ((a1 - 3) >= 7u)
      {
        BOOL v4 = a2 >= a1;
      }
      else
      {
        unint64_t v2 = 6;
LABEL_20:
        if ((a1 - 3) > 6u) {
          unint64_t v5 = 6;
        }
        else {
          unint64_t v5 = qword_100E39D20[(char)(a1 - 3)];
        }
        BOOL v4 = v2 >= v5;
      }
      int v6 = !v4;
      return v6 ^ 1u;
  }
}

BOOL sub_1005CDE4C(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a2)
  {
    case 3u:
      if (a1 == 3) {
        return 0;
      }
      unint64_t v2 = 0;
      goto LABEL_20;
    case 4u:
      if (a1 == 4) {
        return 0;
      }
      unint64_t v2 = 1;
      goto LABEL_20;
    case 5u:
      if (a1 == 5) {
        return 0;
      }
      unint64_t v2 = 2;
      goto LABEL_20;
    case 6u:
      if (a1 == 6) {
        return 0;
      }
      unint64_t v2 = 3;
      goto LABEL_20;
    case 7u:
      if (a1 == 7) {
        return 0;
      }
      unint64_t v2 = 4;
      goto LABEL_20;
    case 8u:
      if (a1 == 8) {
        return 0;
      }
      unint64_t v2 = 5;
      goto LABEL_20;
    case 9u:
      if (a1 == 9) {
        return 0;
      }
      unint64_t v2 = 7;
      goto LABEL_20;
    default:
      if ((a1 - 3) >= 7u) {
        return a2 < a1;
      }
      unint64_t v2 = 6;
LABEL_20:
      if ((a1 - 3) > 6u) {
        unint64_t v4 = 6;
      }
      else {
        unint64_t v4 = qword_100E39D20[(char)(a1 - 3)];
      }
      return v2 < v4;
  }
}

uint64_t sub_1005CDF84(char a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v3 - 8);
  uint64_t result = 0x64616673736F7243;
  switch(a1)
  {
    case 9:
      return result;
    default:
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t result = String.init(localized:table:bundle:locale:comment:)();
      break;
  }
  return result;
}

void *sub_1005CE1F8()
{
  uint64_t result = sub_1000C7AD0((uint64_t)&off_100FC51A0);
  qword_101129C58 = (uint64_t)result;
  return result;
}

void sub_1005CE220(uint64_t a1, unsigned __int8 a2)
{
  if ((a2 - 3) >= 7u)
  {
    Hasher._combine(_:)(6uLL);
    Swift::UInt v2 = a2;
  }
  else
  {
    Swift::UInt v2 = qword_100E39D20[(char)(a2 - 3)];
  }
  Hasher._combine(_:)(v2);
}

Swift::Int sub_1005CE278(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  if ((a1 - 3) >= 7u)
  {
    Hasher._combine(_:)(6uLL);
    Swift::UInt v2 = a1;
  }
  else
  {
    Swift::UInt v2 = qword_100E39D20[(char)(a1 - 3)];
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void *sub_1005CE2F0@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1005CF68C();
  *a1 = result;
  return result;
}

BOOL sub_1005CE318(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1005CF524(*a1, *a2);
}

uint64_t sub_1005CE324(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1005CDD14(*a1, *a2);
}

uint64_t sub_1005CE330(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1005CDBDC(*a1, *a2);
}

BOOL sub_1005CE33C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1005CDE4C(*a1, *a2);
}

Swift::Int sub_1005CE348()
{
  return sub_1005CE278(*v0);
}

void sub_1005CE350(uint64_t a1)
{
  sub_1005CE220(a1, *v1);
}

Swift::Int sub_1005CE358()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  if ((v1 - 3) >= 7u) {
    Hasher._combine(_:)(6uLL);
  }
  else {
    Swift::UInt v1 = qword_100E39D20[(char)(v1 - 3)];
  }
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

BOOL sub_1005CE3CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1005CF444(*a1, *a2);
}

void sub_1005CE3D8(void *a1@<X8>)
{
  *a1 = &off_100FC7480;
}

uint64_t sub_1005CE3E8()
{
  return sub_1005CE490(&qword_1010B1AC8, &qword_1010B1AD0);
}

unint64_t sub_1005CE414()
{
  unint64_t result = qword_1010B1AD8;
  if (!qword_1010B1AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B1AD8);
  }
  return result;
}

uint64_t sub_1005CE468()
{
  return sub_1005CE490(&qword_1010B1AE0, &qword_1010B1AE8);
}

uint64_t sub_1005CE490(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int sub_1005CE4E0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10075C724(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1005CE54C(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_1005CE54C(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_212;
    }
    if (v3) {
      return sub_1005CEEB4(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_220;
  }
  Swift::Int v97 = result;
  uint64_t v101 = v1;
  id v95 = a1;
  if (v3 < 2)
  {
    unint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (unsigned __int8 *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_178;
    }
    uint64_t v96 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    uint64_t v96 = (void *)v7;
    __dst = (unsigned __int8 *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  unint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v98 = v3;
  uint64_t v99 = v10;
  do
  {
    Swift::Int v13 = v9++;
    if (v9 < v3)
    {
      unsigned int v14 = *(unsigned __int8 *)(v10 + v9);
      unsigned int v15 = *(unsigned __int8 *)(v10 + v13);
      switch(*(unsigned char *)(v10 + v9))
      {
        case 3:
          if (v15 == 3)
          {
            int v16 = 0;
            goto LABEL_42;
          }
          unint64_t v17 = 0;
          goto LABEL_35;
        case 4:
          if (v15 == 4) {
            goto LABEL_46;
          }
          unint64_t v17 = 1;
          goto LABEL_35;
        case 5:
          if (v15 == 5) {
            goto LABEL_46;
          }
          unint64_t v17 = 2;
          goto LABEL_35;
        case 6:
          if (v15 == 6) {
            goto LABEL_46;
          }
          unint64_t v17 = 3;
          goto LABEL_35;
        case 7:
          if (v15 == 7) {
            goto LABEL_46;
          }
          unint64_t v17 = 4;
          goto LABEL_35;
        case 8:
          if (v15 == 8) {
            goto LABEL_46;
          }
          unint64_t v17 = 5;
          goto LABEL_35;
        case 9:
          if (v15 == 9) {
            goto LABEL_46;
          }
          unint64_t v17 = 7;
          goto LABEL_35;
        default:
          if (v15 - 3 < 7)
          {
            unint64_t v17 = 6;
LABEL_35:
            unsigned int v18 = v15 - 3;
            if (v18 > 6) {
              unint64_t v19 = 6;
            }
            else {
              unint64_t v19 = qword_100E39D20[(char)v18];
            }
            BOOL v20 = v17 >= v19;
LABEL_39:
            int v16 = !v20;
LABEL_42:
            Swift::Int v9 = v13 + 2;
            if (v13 + 2 < v3) {
              goto LABEL_48;
            }
LABEL_43:
            if (v16)
            {
LABEL_82:
              if (v9 < v13) {
                goto LABEL_215;
              }
              if (v13 < v9)
              {
                Swift::Int v28 = v9 - 1;
                Swift::Int v29 = v13;
                while (1)
                {
                  if (v29 != v28)
                  {
                    if (!v10) {
                      goto LABEL_218;
                    }
                    char v30 = *(unsigned char *)(v10 + v29);
                    *(unsigned char *)(v10 + v29) = *(unsigned char *)(v10 + v28);
                    *(unsigned char *)(v10 + v28) = v30;
                  }
                  BOOL v70 = ++v29 < v28--;
                  if (!v70) {
                    goto LABEL_90;
                  }
                }
              }
            }
            break;
          }
          BOOL v20 = v14 >= v15;
          if (v14 != v15) {
            goto LABEL_39;
          }
LABEL_46:
          Swift::Int v9 = v13 + 2;
          if (v13 + 2 < v3)
          {
            int v16 = 0;
LABEL_48:
            if (v3 <= v9 + 1) {
              Swift::Int v21 = v9 + 1;
            }
            else {
              Swift::Int v21 = v3;
            }
            while (2)
            {
              unsigned int v22 = *(unsigned __int8 *)(v10 + v9);
              switch(*(unsigned char *)(v10 + v9))
              {
                case 3:
                  if (v14 == 3) {
                    goto LABEL_51;
                  }
                  unint64_t v23 = 0;
                  goto LABEL_70;
                case 4:
                  if (v14 == 4) {
                    goto LABEL_51;
                  }
                  unint64_t v23 = 1;
                  goto LABEL_70;
                case 5:
                  if (v14 == 5) {
                    goto LABEL_51;
                  }
                  unint64_t v23 = 2;
                  goto LABEL_70;
                case 6:
                  if (v14 == 6) {
                    goto LABEL_51;
                  }
                  unint64_t v23 = 3;
                  goto LABEL_70;
                case 7:
                  if (v14 == 7) {
                    goto LABEL_51;
                  }
                  unint64_t v23 = 4;
                  goto LABEL_70;
                case 8:
                  if (v14 == 8) {
                    goto LABEL_51;
                  }
                  unint64_t v23 = 5;
                  goto LABEL_70;
                case 9:
                  if (v14 == 9) {
                    goto LABEL_51;
                  }
                  unint64_t v23 = 7;
                  goto LABEL_70;
                default:
                  if ((v14 - 3) >= 7u)
                  {
                    BOOL v26 = v22 >= v14;
                    if (v22 == v14)
                    {
LABEL_51:
                      if (v16) {
                        goto LABEL_82;
                      }
                      goto LABEL_52;
                    }
                  }
                  else
                  {
                    unint64_t v23 = 6;
LABEL_70:
                    unsigned __int8 v24 = v14 - 3;
                    if (v24 > 6u) {
                      unint64_t v25 = 6;
                    }
                    else {
                      unint64_t v25 = qword_100E39D20[(char)v24];
                    }
                    BOOL v26 = v23 >= v25;
                  }
                  int v27 = !v26;
                  if (v16 != v27) {
                    goto LABEL_43;
                  }
LABEL_52:
                  ++v9;
                  LOBYTE(v14) = v22;
                  if (v9 < v3) {
                    continue;
                  }
                  Swift::Int v9 = v21;
                  if (v16) {
                    goto LABEL_82;
                  }
                  goto LABEL_90;
              }
            }
          }
          break;
      }
    }
LABEL_90:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_211;
      }
      if (v9 - v13 < v97)
      {
        Swift::Int v31 = v13 + v97;
        if (__OFADD__(v13, v97)) {
          goto LABEL_213;
        }
        if (v31 >= v3) {
          Swift::Int v31 = v3;
        }
        if (v31 >= v13)
        {
          if (v9 != v31)
          {
            uint64_t v32 = (unsigned char *)(v10 + v9);
LABEL_100:
            unsigned int v33 = *(unsigned __int8 *)(v10 + v9);
            Swift::Int v34 = v13;
            int v35 = v32;
            while (2)
            {
              unsigned int v36 = *(v35 - 1);
              switch(v33)
              {
                case 3u:
                  if (v36 == 3) {
                    goto LABEL_99;
                  }
                  unint64_t v37 = 0;
                  goto LABEL_118;
                case 4u:
                  if (v36 == 4) {
                    goto LABEL_99;
                  }
                  unint64_t v37 = 1;
                  goto LABEL_118;
                case 5u:
                  if (v36 == 5) {
                    goto LABEL_99;
                  }
                  unint64_t v37 = 2;
                  goto LABEL_118;
                case 6u:
                  if (v36 == 6) {
                    goto LABEL_99;
                  }
                  unint64_t v37 = 3;
                  goto LABEL_118;
                case 7u:
                  if (v36 == 7) {
                    goto LABEL_99;
                  }
                  unint64_t v37 = 4;
                  goto LABEL_118;
                case 8u:
                  if (v36 == 8) {
                    goto LABEL_99;
                  }
                  unint64_t v37 = 5;
                  goto LABEL_118;
                case 9u:
                  if (v36 == 9) {
                    goto LABEL_99;
                  }
                  unint64_t v37 = 7;
                  goto LABEL_118;
                default:
                  if (v36 - 3 >= 7)
                  {
                    if (v33 >= v36) {
                      goto LABEL_99;
                    }
                  }
                  else
                  {
                    unint64_t v37 = 6;
LABEL_118:
                    if (v36 - 3 > 6)
                    {
                      if (v37 >= 6) {
                        goto LABEL_99;
                      }
                    }
                    else if (v37 >= qword_100E39D20[(char)(v36 - 3)])
                    {
                      goto LABEL_99;
                    }
                  }
                  if (!v10) {
                    goto LABEL_216;
                  }
                  *int v35 = v36;
                  *--int v35 = v33;
                  if (v9 != ++v34) {
                    continue;
                  }
LABEL_99:
                  ++v9;
                  ++v32;
                  if (v9 != v31) {
                    goto LABEL_100;
                  }
                  Swift::Int v9 = v31;
                  break;
              }
              break;
            }
          }
          goto LABEL_128;
        }
LABEL_214:
        __break(1u);
LABEL_215:
        __break(1u);
LABEL_216:
        __break(1u);
LABEL_217:
        __break(1u);
LABEL_218:
        __break(1u);
LABEL_219:
        __break(1u);
LABEL_220:
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        JUMPOUT(0x1005CEE60);
      }
    }
LABEL_128:
    if (v9 < v13) {
      goto LABEL_206;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_10075BBB0(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v39 = *((void *)v11 + 2);
    unint64_t v38 = *((void *)v11 + 3);
    unint64_t v12 = v39 + 1;
    uint64_t v10 = v99;
    if (v39 >= v38 >> 1)
    {
      uint64_t v10 = v99;
      unint64_t v11 = sub_10075BBB0((char *)(v38 > 1), v39 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v40 = v11 + 32;
    uint64_t v41 = &v11[16 * v39 + 32];
    *(void *)uint64_t v41 = v13;
    *((void *)v41 + 1) = v9;
    if (v39)
    {
      while (1)
      {
        unint64_t v42 = v12 - 1;
        if (v12 >= 4)
        {
          double v47 = &v40[16 * v12];
          uint64_t v48 = *((void *)v47 - 8);
          uint64_t v49 = *((void *)v47 - 7);
          BOOL v53 = __OFSUB__(v49, v48);
          uint64_t v50 = v49 - v48;
          if (v53) {
            goto LABEL_195;
          }
          uint64_t v52 = *((void *)v47 - 6);
          uint64_t v51 = *((void *)v47 - 5);
          BOOL v53 = __OFSUB__(v51, v52);
          uint64_t v45 = v51 - v52;
          char v46 = v53;
          if (v53) {
            goto LABEL_196;
          }
          unint64_t v54 = v12 - 2;
          uint64_t v55 = &v40[16 * v12 - 32];
          uint64_t v57 = *(void *)v55;
          uint64_t v56 = *((void *)v55 + 1);
          BOOL v53 = __OFSUB__(v56, v57);
          uint64_t v58 = v56 - v57;
          if (v53) {
            goto LABEL_198;
          }
          BOOL v53 = __OFADD__(v45, v58);
          uint64_t v59 = v45 + v58;
          if (v53) {
            goto LABEL_201;
          }
          if (v59 >= v50)
          {
            id v77 = &v40[16 * v42];
            uint64_t v79 = *(void *)v77;
            uint64_t v78 = *((void *)v77 + 1);
            BOOL v53 = __OFSUB__(v78, v79);
            uint64_t v80 = v78 - v79;
            if (v53) {
              goto LABEL_205;
            }
            BOOL v70 = v45 < v80;
            goto LABEL_165;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v71 = *((void *)v11 + 4);
            uint64_t v72 = *((void *)v11 + 5);
            BOOL v53 = __OFSUB__(v72, v71);
            uint64_t v64 = v72 - v71;
            char v65 = v53;
            goto LABEL_159;
          }
          uint64_t v44 = *((void *)v11 + 4);
          uint64_t v43 = *((void *)v11 + 5);
          BOOL v53 = __OFSUB__(v43, v44);
          uint64_t v45 = v43 - v44;
          char v46 = v53;
        }
        if (v46) {
          goto LABEL_197;
        }
        unint64_t v54 = v12 - 2;
        unint64_t v60 = &v40[16 * v12 - 32];
        uint64_t v62 = *(void *)v60;
        uint64_t v61 = *((void *)v60 + 1);
        BOOL v63 = __OFSUB__(v61, v62);
        uint64_t v64 = v61 - v62;
        char v65 = v63;
        if (v63) {
          goto LABEL_200;
        }
        double v66 = &v40[16 * v42];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v53 = __OFSUB__(v67, v68);
        uint64_t v69 = v67 - v68;
        if (v53) {
          goto LABEL_203;
        }
        if (__OFADD__(v64, v69)) {
          goto LABEL_204;
        }
        if (v64 + v69 >= v45)
        {
          BOOL v70 = v45 < v69;
LABEL_165:
          if (v70) {
            unint64_t v42 = v54;
          }
          goto LABEL_167;
        }
LABEL_159:
        if (v65) {
          goto LABEL_199;
        }
        Class v73 = &v40[16 * v42];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v53 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v53) {
          goto LABEL_202;
        }
        if (v76 < v64) {
          goto LABEL_15;
        }
LABEL_167:
        unint64_t v81 = v42 - 1;
        if (v42 - 1 >= v12)
        {
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
LABEL_209:
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
LABEL_212:
          __break(1u);
LABEL_213:
          __break(1u);
          goto LABEL_214;
        }
        if (!v10) {
          goto LABEL_217;
        }
        id v82 = &v40[16 * v81];
        uint64_t v83 = *(void *)v82;
        uint64_t v84 = &v40[16 * v42];
        uint64_t v85 = *((void *)v84 + 1);
        sub_1005CF00C((unsigned __int8 *)(v10 + *(void *)v82), (unsigned __int8 *)(v10 + *(void *)v84), v10 + v85, __dst);
        if (v101) {
          goto LABEL_175;
        }
        if (v85 < v83) {
          goto LABEL_192;
        }
        if (v42 > *((void *)v11 + 2)) {
          goto LABEL_193;
        }
        *(void *)id v82 = v83;
        *(void *)&v40[16 * v81 + 8] = v85;
        unint64_t v86 = *((void *)v11 + 2);
        if (v42 >= v86) {
          goto LABEL_194;
        }
        unint64_t v12 = v86 - 1;
        memmove(&v40[16 * v42], v84 + 16, 16 * (v86 - 1 - v42));
        *((void *)v11 + 2) = v86 - 1;
        uint64_t v10 = v99;
        if (v86 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v98;
  }
  while (v9 < v98);
  unint64_t v8 = v96;
LABEL_178:
  id v87 = v11;
  uint64_t v96 = v8;
  if (v12 >= 2)
  {
    uint64_t v88 = *v95;
    do
    {
      unint64_t v89 = v12 - 2;
      if (v12 < 2) {
        goto LABEL_207;
      }
      if (!v88) {
        goto LABEL_219;
      }
      double v90 = v87;
      uint64_t v91 = *(void *)&v87[16 * v89 + 32];
      uint64_t v92 = *(void *)&v87[16 * v12 + 24];
      sub_1005CF00C((unsigned __int8 *)(v88 + v91), (unsigned __int8 *)(v88 + *(void *)&v87[16 * v12 + 16]), v88 + v92, __dst);
      if (v101) {
        break;
      }
      if (v92 < v91) {
        goto LABEL_208;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v90 = sub_10075C290((uint64_t)v90);
      }
      if (v89 >= *((void *)v90 + 2)) {
        goto LABEL_209;
      }
      id v93 = &v90[16 * v89 + 32];
      *(void *)id v93 = v91;
      *((void *)v93 + 1) = v92;
      unint64_t v94 = *((void *)v90 + 2);
      if (v12 > v94) {
        goto LABEL_210;
      }
      memmove(&v90[16 * v12 + 16], &v90[16 * v12 + 32], 16 * (v94 - v12));
      id v87 = v90;
      *((void *)v90 + 2) = v94 - 1;
      unint64_t v12 = v94 - 1;
    }
    while (v94 > 2);
  }
LABEL_175:
  swift_bridgeObjectRelease();
  v96[2] = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005CEEB4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = (unsigned char *)(*a4 + a3);
    while (1)
    {
      unsigned int v6 = *(unsigned __int8 *)(v4 + a3);
      uint64_t v7 = result;
      unint64_t v8 = v5;
      while (2)
      {
        unsigned int v9 = *(v8 - 1);
        switch(v6)
        {
          case 3u:
            if (v9 != 3)
            {
              unint64_t v10 = 0;
              goto LABEL_23;
            }
            goto LABEL_4;
          case 4u:
            if (v9 != 4)
            {
              unint64_t v10 = 1;
              goto LABEL_23;
            }
            goto LABEL_4;
          case 5u:
            if (v9 != 5)
            {
              unint64_t v10 = 2;
              goto LABEL_23;
            }
            goto LABEL_4;
          case 6u:
            if (v9 != 6)
            {
              unint64_t v10 = 3;
              goto LABEL_23;
            }
            goto LABEL_4;
          case 7u:
            if (v9 != 7)
            {
              unint64_t v10 = 4;
              goto LABEL_23;
            }
            goto LABEL_4;
          case 8u:
            if (v9 != 8)
            {
              unint64_t v10 = 5;
              goto LABEL_23;
            }
            goto LABEL_4;
          case 9u:
            if (v9 != 9)
            {
              unint64_t v10 = 7;
              goto LABEL_23;
            }
            goto LABEL_4;
          default:
            if (v9 - 3 >= 7)
            {
              if (v6 < v9) {
                goto LABEL_27;
              }
            }
            else
            {
              unint64_t v10 = 6;
LABEL_23:
              if (v9 - 3 > 6) {
                unint64_t v11 = 6;
              }
              else {
                unint64_t v11 = qword_100E39D20[(char)(v9 - 3)];
              }
              if (v10 < v11)
              {
LABEL_27:
                if (!v4)
                {
                  __break(1u);
                  JUMPOUT(0x1005CEFF0);
                }
                *unint64_t v8 = v9;
                *--unint64_t v8 = v6;
                if (a3 != ++v7) {
                  continue;
                }
              }
            }
LABEL_4:
            ++a3;
            ++v5;
            if (a3 == a2) {
              return result;
            }
            break;
        }
        break;
      }
    }
  }
  return result;
}

uint64_t sub_1005CF00C(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  unsigned __int8 v24 = __src;
  uint64_t v4 = __dst;
  unsigned int v6 = a2;
  uint64_t v7 = __src;
  size_t v8 = a2 - __src;
  unint64_t v9 = a3 - (void)a2;
  unint64_t v23 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v9 & 0x8000000000000000) != 0) {
      goto LABEL_83;
    }
    if (__dst != a2 || a3 <= (unint64_t)__dst) {
      memmove(__dst, a2, a3 - (void)a2);
    }
    unsigned int v15 = &v4[v9];
    unsigned int v22 = &v4[v9];
    unsigned __int8 v24 = v6;
    if (v7 >= v6 || (unsigned __int8 *)a3 == v6) {
      goto LABEL_82;
    }
    int v16 = (unsigned __int8 *)(a3 - 1);
    while (1)
    {
      unint64_t v17 = v16 + 1;
      unsigned int v18 = v6 - 1;
      unsigned int v19 = *(v6 - 1);
      switch(*(v15 - 1))
      {
        case 3u:
          if (v19 == 3) {
            goto LABEL_69;
          }
          unint64_t v20 = 0;
          goto LABEL_67;
        case 4u:
          if (v19 == 4) {
            goto LABEL_69;
          }
          unint64_t v20 = 1;
          goto LABEL_67;
        case 5u:
          if (v19 == 5) {
            goto LABEL_69;
          }
          unint64_t v20 = 2;
          goto LABEL_67;
        case 6u:
          if (v19 == 6) {
            goto LABEL_69;
          }
          unint64_t v20 = 3;
          goto LABEL_67;
        case 7u:
          if (v19 == 7) {
            goto LABEL_69;
          }
          unint64_t v20 = 4;
          goto LABEL_67;
        case 8u:
          if (v19 == 8) {
            goto LABEL_69;
          }
          unint64_t v20 = 5;
          goto LABEL_67;
        case 9u:
          if (v19 == 9) {
            goto LABEL_69;
          }
          unint64_t v20 = 7;
          goto LABEL_67;
        default:
          if (v19 - 3 >= 7)
          {
            if (*(v15 - 1) >= v19)
            {
LABEL_69:
              unsigned int v22 = v15 - 1;
              if (v17 < v15 || v16 >= v15 || v17 != v15) {
                *int v16 = *(v15 - 1);
              }
              --v15;
              if (v6 <= v7) {
                goto LABEL_82;
              }
              goto LABEL_49;
            }
          }
          else
          {
            unint64_t v20 = 6;
LABEL_67:
            if (v19 - 3 > 6)
            {
              if (v20 >= 6) {
                goto LABEL_69;
              }
            }
            else if (v20 >= qword_100E39D20[(char)(v19 - 3)])
            {
              goto LABEL_69;
            }
          }
          if (v17 != v6 || v16 >= v6) {
            *int v16 = v19;
          }
          unsigned __int8 v24 = --v6;
          if (v18 <= v7) {
            goto LABEL_82;
          }
LABEL_49:
          --v16;
          if (v15 <= v4) {
            goto LABEL_82;
          }
          break;
      }
    }
  }
  if ((v8 & 0x8000000000000000) != 0)
  {
LABEL_83:
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    JUMPOUT(0x1005CF40CLL);
  }
  if (__dst != __src || a2 <= __dst) {
    memmove(__dst, __src, v8);
  }
  unint64_t v10 = &v4[v8];
  unsigned int v22 = &v4[v8];
  if (v6 != v7 && (unint64_t)v6 < a3)
  {
    while (2)
    {
      unsigned int v11 = *v6;
      unsigned int v12 = *v4;
      switch(*v6)
      {
        case 3u:
          if (v12 == 3) {
            goto LABEL_27;
          }
          unint64_t v13 = 0;
          goto LABEL_25;
        case 4u:
          if (v12 == 4) {
            goto LABEL_27;
          }
          unint64_t v13 = 1;
          goto LABEL_25;
        case 5u:
          if (v12 == 5) {
            goto LABEL_27;
          }
          unint64_t v13 = 2;
          goto LABEL_25;
        case 6u:
          if (v12 == 6) {
            goto LABEL_27;
          }
          unint64_t v13 = 3;
          goto LABEL_25;
        case 7u:
          if (v12 == 7) {
            goto LABEL_27;
          }
          unint64_t v13 = 4;
          goto LABEL_25;
        case 8u:
          if (v12 == 8) {
            goto LABEL_27;
          }
          unint64_t v13 = 5;
          goto LABEL_25;
        case 9u:
          if (v12 == 9) {
            goto LABEL_27;
          }
          unint64_t v13 = 7;
          goto LABEL_25;
        default:
          if (v12 - 3 >= 7)
          {
            if (v11 >= v12)
            {
LABEL_27:
              if (v7 != v4) {
                *uint64_t v7 = v12;
              }
              unint64_t v23 = ++v4;
              unsigned int v14 = v6;
              goto LABEL_35;
            }
          }
          else
          {
            unint64_t v13 = 6;
LABEL_25:
            if (v12 - 3 > 6)
            {
              if (v13 >= 6) {
                goto LABEL_27;
              }
            }
            else if (v13 >= qword_100E39D20[(char)(v12 - 3)])
            {
              goto LABEL_27;
            }
          }
          unsigned int v14 = v6 + 1;
          if (v7 < v6 || v7 >= v14 || v7 != v6) {
            *uint64_t v7 = v11;
          }
LABEL_35:
          ++v7;
          if (v4 < v10)
          {
            unsigned int v6 = v14;
            if ((unint64_t)v14 < a3) {
              continue;
            }
          }
          unsigned __int8 v24 = v7;
          break;
      }
      break;
    }
  }
LABEL_82:
  sub_10075BCAC((void **)&v24, (const void **)&v23, &v22);
  return 1;
}

BOOL sub_1005CF444(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a1)
  {
    case 3u:
      if (a2 != 3) {
        goto LABEL_18;
      }
      BOOL result = 1;
      break;
    case 4u:
      if (a2 != 4) {
        goto LABEL_18;
      }
      BOOL result = 1;
      break;
    case 5u:
      if (a2 != 5) {
        goto LABEL_18;
      }
      BOOL result = 1;
      break;
    case 6u:
      if (a2 != 6) {
        goto LABEL_18;
      }
      BOOL result = 1;
      break;
    case 7u:
      if (a2 != 7) {
        goto LABEL_18;
      }
      BOOL result = 1;
      break;
    case 8u:
      if (a2 != 8) {
        goto LABEL_18;
      }
      BOOL result = 1;
      break;
    case 9u:
      if (a2 != 9) {
        goto LABEL_18;
      }
      BOOL result = 1;
      break;
    default:
      if (a2 - 3 < 7) {
LABEL_18:
      }
        BOOL result = 0;
      else {
        BOOL result = a1 == a2;
      }
      break;
  }
  return result;
}

BOOL sub_1005CF524(unsigned __int8 a1, unsigned __int8 a2)
{
  switch(a1)
  {
    case 3u:
      if (a2 != 3)
      {
        unint64_t v3 = 0;
        goto LABEL_26;
      }
      BOOL result = 0;
      break;
    case 4u:
      if (a2 != 4)
      {
        unint64_t v3 = 1;
        goto LABEL_26;
      }
      BOOL result = 0;
      break;
    case 5u:
      if (a2 != 5)
      {
        unint64_t v3 = 2;
        goto LABEL_26;
      }
      BOOL result = 0;
      break;
    case 6u:
      if (a2 != 6)
      {
        unint64_t v3 = 3;
        goto LABEL_26;
      }
      BOOL result = 0;
      break;
    case 7u:
      if (a2 != 7)
      {
        unint64_t v3 = 4;
        goto LABEL_26;
      }
      BOOL result = 0;
      break;
    case 8u:
      if (a2 != 8)
      {
        unint64_t v3 = 5;
        goto LABEL_26;
      }
      BOOL result = 0;
      break;
    case 9u:
      if (a2 != 9)
      {
        unint64_t v3 = 7;
        goto LABEL_26;
      }
      BOOL result = 0;
      break;
    default:
      if ((a2 - 3) >= 7u)
      {
        BOOL result = a1 < a2;
      }
      else
      {
        unint64_t v3 = 6;
LABEL_26:
        if ((a2 - 3) > 6u) {
          unint64_t v4 = 6;
        }
        else {
          unint64_t v4 = qword_100E39D20[(char)(a2 - 3)];
        }
        BOOL result = v3 < v4;
      }
      break;
  }
  return result;
}

void *sub_1005CF68C()
{
  sub_1005BDA10(0, 3, 0);
  unint64_t v1 = _swiftEmptyArrayStorage[2];
  unint64_t v0 = _swiftEmptyArrayStorage[3];
  int64_t v2 = v0 >> 1;
  unint64_t v3 = v1 + 1;
  if (v0 >> 1 <= v1)
  {
    sub_1005BDA10(v0 > 1, v1 + 1, 1);
    unint64_t v0 = _swiftEmptyArrayStorage[3];
    int64_t v2 = v0 >> 1;
  }
  _swiftEmptyArrayStorage[2] = v3;
  *((unsigned char *)&_swiftEmptyArrayStorage[4] + v1) = 0;
  unint64_t v4 = v1 + 2;
  if (v2 < (uint64_t)(v1 + 2))
  {
    sub_1005BDA10(v0 > 1, v1 + 2, 1);
    unint64_t v0 = _swiftEmptyArrayStorage[3];
    int64_t v2 = v0 >> 1;
  }
  _swiftEmptyArrayStorage[2] = v4;
  *((unsigned char *)&_swiftEmptyArrayStorage[4] + v3) = 1;
  if (v2 < (uint64_t)(v1 + 3)) {
    sub_1005BDA10(v0 > 1, v1 + 3, 1);
  }
  _swiftEmptyArrayStorage[2] = v1 + 3;
  *((unsigned char *)&_swiftEmptyArrayStorage[4] + v4) = 2;
  sub_100524040((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRetain();
  uint64_t v5 = &off_100FC7458;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_10027027C(0, 7, 1, &off_100FC7458);
  }
  unint64_t v7 = v5[2];
  unint64_t v6 = v5[3];
  if (v7 >= v6 >> 1) {
    uint64_t v5 = sub_10027027C((void *)(v6 > 1), v7 + 1, 1, v5);
  }
  uint64_t v5[2] = v7 + 1;
  *((unsigned char *)v5 + v7 + 32) = 9;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1005CF840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

id sub_1005CF878()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionSnapshot);
  if (v1) {
    [v1 removeFromSuperview];
  }
  int64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
  if (v2) {
    [v2 removeFromSuperview];
  }
  id result = *(id *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot);
  if (result)
  {
    return [result removeFromSuperview];
  }
  return result;
}

void sub_1005CF8F8()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_100063814(&qword_1010B1F08);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100063814(&qword_1010B1BC8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  unint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unsigned int v11 = (char *)&v24 - v10;
  uint64_t v12 = (uint64_t)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainer];
  swift_beginAccess();
  sub_10006CAB8(v12, (uint64_t)v4, &qword_1010B1F08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    unint64_t v13 = &qword_1010B1F08;
    uint64_t v14 = (uint64_t)v4;
LABEL_11:
    sub_1000637B8(v14, v13);
    return;
  }
  sub_10003CABC((uint64_t)v4, (uint64_t)v11, &qword_1010B1BC8);
  if (*(unsigned __int16 *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode] < 0x4000u
    || (v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_isBeingDonated] & 1) != 0)
  {
LABEL_10:
    unint64_t v13 = &qword_1010B1BC8;
    uint64_t v14 = (uint64_t)v11;
    goto LABEL_11;
  }
  [*(id *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView] setHidden:1];
  uint64_t v15 = OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView;
  int v16 = *(void **)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView];
  if (v16) {
    [v16 removeFromSuperview];
  }
  sub_10006CAB8((uint64_t)v11, (uint64_t)v9, &qword_1010B1BC8);
  id v17 = objc_allocWithZone((Class)sub_100063814(&qword_1010B1F10));
  uint64_t v18 = _UIHostingView.init(rootView:)();
  unsigned int v19 = *(void **)&v1[v15];
  *(void *)&v1[v15] = v18;

  unint64_t v20 = *(void **)&v1[v15];
  if (v20)
  {
    id v21 = v20;
    [v1 bounds];
    Artwork.View.sizeThatFits(_:)(v22, v23);
    [v21 frame];
    [v21 setFrame:];

    if (*(void *)&v1[v15])
    {
      [v1 addSubview:];
      goto LABEL_10;
    }
  }
  __break(1u);
}

id sub_1005CFBD0(unsigned __int8 a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_isSquareMotionSizeTransitioning) = 1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  if (a1 - 1 >= 2)
  {
    if (!a1)
    {
      sub_1005D0770();
      sub_1005D0914();
    }
    sub_1005D007C(0);
  }
  else
  {
    sub_1005D0770();
    sub_1005D0914();
  }
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView);
  if (v3) {
    [v3 setAlpha:0.0];
  }
  id result = *(id *)(v1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
  if (result) {
    return [result setAlpha:1.0];
  }
  return result;
}

void sub_1005CFCD0()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_isSquareMotionSizeTransitioning) = 0;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  uint64_t v1 = OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView);
  if (v2) {
    [v2 setAlpha:1.0];
  }
  sub_1005CF878();
  sub_10006AFAC();
  uint64_t v3 = *(void **)(v0 + v1);
  if (v3 && (id v4 = [v3 superview]) != 0) {

  }
  else {
    sub_1005CF8F8();
  }
}

void sub_1005CFDAC(void *a1, char a2)
{
  id v5 = a1;
  sub_10002CD70(a1, &OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot);
  sub_1005D1790();
  if ((a2 & 1) == 0)
  {
    id v6 = [v2 layer];
    [v6 setZPosition:-1.0];
  }
  uint64_t v7 = OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot;
  uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot];
  if (v8)
  {
    id v9 = [v8 layer];
    [v9 setZPosition:-1.0];
  }
  id v10 = [v2 window];
  if (v10)
  {
    unsigned int v11 = v10;
    [v10 bounds];
    double v13 = v12;
    double v15 = v14;
    double v17 = v16;
    double v19 = v18;

    [v2 setFrame:v13, v15, v17, v19];
  }
  [*(id *)&v2[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView] setAlpha:0.0];
  if ((a2 & 1) == 0)
  {
    sub_1005D1214(0, 1);
    unint64_t v20 = *(void **)&v2[v7];
    if (v20)
    {
      id v21 = self;
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v2;
      *(void *)(v22 + 24) = v20;
      unsigned int v33 = sub_100545164;
      uint64_t v34 = v22;
      Swift::Int v29 = _NSConcreteStackBlock;
      uint64_t v30 = 1107296256;
      Swift::Int v31 = sub_100020238;
      uint64_t v32 = &unk_100FE1E10;
      double v23 = _Block_copy(&v29);
      id v24 = v20;
      unint64_t v25 = v2;
      swift_release();
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v24;
      unsigned int v33 = sub_10054516C;
      uint64_t v34 = v26;
      Swift::Int v29 = _NSConcreteStackBlock;
      uint64_t v30 = 1107296256;
      Swift::Int v31 = sub_1001695E8;
      uint64_t v32 = &unk_100FE1E60;
      int v27 = _Block_copy(&v29);
      id v28 = v24;
      swift_release();
      [v21 animateWithDuration:0 delay:v23 options:v27 animations:0.2 completion:0.1];

      _Block_release(v27);
      _Block_release(v23);
    }
  }
}

void sub_1005D007C(char a1)
{
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView];
  if (v3)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v4 = v3;
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if (LOBYTE(v16[0]) == 1)
    {
      [v4 bounds];
      double v9 = v8;
    }
    else
    {
      [v4 frame];
      double v9 = CGRectGetWidth(v17) * 0.135;
      [v4 bounds];
      CGSize.scaled(_:)();
      double v6 = v10;
      double v7 = v11;
      double v5 = v9;
    }
    sub_10002CD70([v4 resizableSnapshotViewFromRect:0 afterScreenUpdates:v9 withCapInsets:v5, v6, v7, UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right], &OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionSnapshot);
  }
  sub_1005D047C();
  if (a1)
  {
    double v12 = self;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v1;
    v16[4] = sub_1005D4604;
    v16[5] = v13;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_100020238;
    v16[3] = &unk_100FE1F00;
    double v14 = _Block_copy(v16);
    double v15 = v1;
    swift_release();
    [v12 animateWithDuration:0 delay:v14 options:0 animations:0.2 completion:0.15];
    _Block_release(v14);
  }
}

uint64_t sub_1005D02C0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return sub_1005D41A0(*a1, *a2);
}

id sub_1005D02CC(uint64_t a1)
{
  uint64_t v2 = v1;
  if (a1)
  {
    uint64_t v3 = (void *)(*(uint64_t (**)(void))(*(void *)a1 + 216))();
    id v4 = [v3 playerViewController];

    id v5 = [v4 view];
    if (v5)
    {
      if ([v5 isDescendantOfView:v2]) {
        [v5 removeFromSuperview];
      }
    }
  }
  uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext];
  if (v6)
  {
    double v7 = *(uint64_t (**)(uint64_t))(*(void *)v6 + 216);
    uint64_t v8 = swift_retain();
    double v9 = (void *)v7(v8);
    swift_release();
    id v10 = [v9 playerViewController];

    id v11 = [v10 view];
    if (v11)
    {
      if (([v11 isDescendantOfView:v2] & 1) == 0) {
        [v2 addSubview:v11];
      }
    }
  }
  sub_10006B488();

  return [v2 setNeedsLayout];
}

void sub_1005D0470(void *a1)
{
}

void sub_1005D047C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionSnapshot);
  if (v1)
  {
    id v21 = v1;
    id v2 = [v21 superview];

    if (v2)
    {
      Class v3 = (Class)v21;
    }
    else
    {
      id v4 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView);
      id v5 = UIView.forAutolayout.getter();
      [v4 addSubview:v5];

      uint64_t v6 = self;
      sub_100063814((uint64_t *)&unk_1010A0980);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_100E251E0;
      id v8 = [v21 topAnchor];
      id v9 = [v4 topAnchor];
      id v10 = [v8 constraintEqualToAnchor:v9];

      *(void *)(v7 + 32) = v10;
      id v11 = [v21 bottomAnchor];
      id v12 = [v4 bottomAnchor];
      id v13 = [v11 constraintEqualToAnchor:v12];

      *(void *)(v7 + 40) = v13;
      id v14 = [v21 leftAnchor];
      id v15 = [v4 leftAnchor];
      id v16 = [v14 constraintEqualToAnchor:v15];

      *(void *)(v7 + 48) = v16;
      id v17 = [v21 rightAnchor];
      id v18 = [v4 rightAnchor];
      id v19 = [v17 constraintEqualToAnchor:v18];

      *(void *)(v7 + 56) = v19;
      specialized Array._endMutation()();
      sub_100057778(0, (unint64_t *)&qword_10109B980);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v6 activateConstraints:isa];

      Class v3 = isa;
    }
  }
}

id sub_1005D0760(uint64_t a1)
{
  return sub_1005D0C98(a1, &OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionSnapshot);
}

void sub_1005D0770()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v8 != 255)
    {
      if (v8)
      {
        sub_100232CBC(v6, v7, 1);
      }
      else
      {
        sub_100232CBC(v6, v7, 0);
        sub_10002CD70(0, &OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
        sub_10002CD70([objc_allocWithZone((Class)UIImageView) initWithImage:v6], &OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
        uint64_t v1 = OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView;
        id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
        if (v2)
        {
          [v2 setClipsToBounds:1];
          Class v3 = *(void **)(v0 + v1);
          if (v3)
          {
            id v4 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView);
            id v5 = v3;
            [v4 bounds];
            [v5 setFrame:];
            sub_10023535C(v6, v7, v8);
            sub_10023535C(v6, v7, v8);

            goto LABEL_10;
          }
        }
        sub_10023535C(v6, v7, v8);
      }
      sub_10023535C(v6, v7, v8);
    }
LABEL_10:
    swift_release();
  }
}

void sub_1005D0914()
{
  uint64_t v1 = sub_100063814(&qword_10109BB20);
  __chkstk_darwin(v1 - 8);
  Class v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
  if (v4)
  {
    id v5 = v4;
    [v5 setAlpha:0.0];
    uint64_t v6 = *(char **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView);
    uint64_t v7 = &v6[OBJC_IVAR____TtCV11MusicCoreUI7Artwork4View_typedConfiguration];
    swift_beginAccess();
    uint64_t v8 = type metadata accessor for Artwork(0);
    uint64_t v9 = *(int *)(v8 + 24);
    uint64_t v10 = type metadata accessor for Artwork.Decoration(0);
    sub_10006CAB8((uint64_t)&v7[v9 + *(int *)(v10 + 20)], (uint64_t)v3, &qword_10109BB20);
    UIView.corner.setter();
    id v11 = (uint64_t *)&v7[*(int *)(v8 + 24)];
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    id v14 = (void *)v11[2];
    id v15 = v14;
    UIView.border.setter(v12, v13, v14);
    id v16 = UIView.forAutolayout.getter();
    [v6 addSubview:v16];

    id v17 = self;
    sub_100063814((uint64_t *)&unk_1010A0980);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_100E251E0;
    id v19 = [v5 topAnchor];
    id v20 = [v6 topAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    *(void *)(v18 + 32) = v21;
    id v22 = [v5 bottomAnchor];
    id v23 = [v6 bottomAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    *(void *)(v18 + 40) = v24;
    id v25 = [v5 leftAnchor];
    id v26 = [v6 leftAnchor];
    id v27 = [v25 constraintEqualToAnchor:v26];

    *(void *)(v18 + 48) = v27;
    id v28 = [v5 rightAnchor];
    id v29 = [v6 rightAnchor];
    id v30 = [v28 constraintEqualToAnchor:v29];

    *(void *)(v18 + 56) = v30;
    uint64_t v32 = v18;
    specialized Array._endMutation()();
    sub_100057778(0, (unint64_t *)&qword_10109B980);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v17 activateConstraints:isa];
  }
}

id sub_1005D0C88(uint64_t a1)
{
  return sub_1005D0C98(a1, &OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView);
}

id sub_1005D0C98(uint64_t a1, void *a2)
{
  id result = *(id *)(a1 + *a2);
  if (result) {
    return [result setAlpha:];
  }
  return result;
}

uint64_t sub_1005D0CB4()
{
  uint64_t v1 = sub_100063814(&qword_1010B1F08);
  __chkstk_darwin(v1 - 8);
  Class v3 = (uint64_t *)((char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for URL();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100063814(&qword_1010B1F18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData)) {
    goto LABEL_7;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unsigned __int8 v9 = v25;
  if (v25 == 255)
  {
LABEL_6:
    swift_release();
LABEL_7:
    uint64_t v18 = sub_100063814(&qword_1010B1BC8);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v3, 1, 1, v18);
    uint64_t v17 = v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainer;
    goto LABEL_8;
  }
  uint64_t v22 = v6;
  id v11 = v23;
  uint64_t v10 = v24;
  if (v25)
  {
    sub_100232CBC(v23, v24, 1);

    sub_10023535C(v11, v10, v9);
    goto LABEL_6;
  }
  sub_100232CBC(v23, v24, 0);
  uint64_t v12 = VideoArtwork.url.getter();
  uint64_t v13 = __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  MotionViewV2.init(url:keyframe:fallback:)();
  type metadata accessor for SquareMotionState(0);
  sub_1005D4658();
  uint64_t v21 = v0;
  swift_retain();
  *Class v3 = ObservedObject.init(wrappedValue:)();
  v3[1] = v14;
  uint64_t v15 = sub_100063814(&qword_1010B1BC8);
  uint64_t v16 = v22;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))((char *)v3 + *(int *)(v15 + 36), v8, v5);
  sub_10023535C(v11, v10, v9);
  sub_10023535C(v11, v10, v9);
  swift_release();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v5);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v3, 0, 1, v15);
  uint64_t v17 = v21 + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainer;
LABEL_8:
  swift_beginAccess();
  sub_10002D09C((uint64_t)v3, v17, &qword_1010B1F08);
  return swift_endAccess();
}

uint64_t sub_1005D10EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Image.ResizingMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = a1;
  Image.init(uiImage:)();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
  uint64_t v9 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v9;
  return result;
}

void sub_1005D1214(char a1, char a2)
{
  id v5 = [v2 traitCollection];
  [v5 displayCornerRadius];
  double v7 = v6;

  id v8 = *(void **)&v2[OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView];
  [v8 setClipsToBounds:1];
  id v9 = [v8 layer];
  uint64_t v10 = v9;
  if (a2)
  {
    uint64_t v11 = &kCACornerCurveContinuous;
    int v12 = a1 & 1;
    if (v12)
    {
      uint64_t v11 = &kCACornerCurveCircular;
      double v13 = 6.5;
    }
    else
    {
      double v13 = v7;
    }
    [v9 setCornerCurve:*v11];

    id v14 = [v8 layer];
    [v14 setCornerRadius:v13];

    uint64_t v15 = self;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v2;
    *(unsigned char *)(v16 + 24) = v12;
    *(double *)(v16 + 32) = v7;
    *(void *)(v16 + 40) = 0x401A000000000000;
    aBlock[4] = sub_1005D45F4;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100020238;
    aBlock[3] = &unk_100FE1EB0;
    uint64_t v17 = _Block_copy(aBlock);
    uint64_t v18 = v2;
    swift_release();
    [v15 animateWithDuration:v17 animations:0.35];
    _Block_release(v17);
  }
  else
  {
    double v19 = 6.5;
    if (a1)
    {
      double v19 = v7;
      uint64_t v20 = &kCACornerCurveContinuous;
    }
    else
    {
      uint64_t v20 = &kCACornerCurveCircular;
    }
    [v9 setCornerRadius:v19];

    id v21 = [v8 layer];
    [v21 setCornerCurve:*v20];
  }
}

void sub_1005D148C(uint64_t a1, char a2, double a3, double a4)
{
  double v7 = *(void **)(a1 + OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView);
  id v8 = [v7 layer];
  id v9 = v8;
  if (a2) {
    double v10 = a3;
  }
  else {
    double v10 = a4;
  }
  if (a2) {
    uint64_t v11 = &kCACornerCurveContinuous;
  }
  else {
    uint64_t v11 = &kCACornerCurveCircular;
  }
  [v8 setCornerRadius:v10];

  id v12 = [v7 layer];
  [v12 setCornerCurve:*v11];
}

void sub_1005D155C()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    unsigned __int8 v1 = v11;
    if (v11 != 255)
    {
      uint64_t v2 = v9;
      Class v3 = (void *)v10;
      if (v11)
      {
        id v4 = (id)v10;
        sub_10002CD70((void *)v10, &OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot);
        [v4 removeFromSuperview];
        if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize + 16) & 1) == 0)
        {
          [*(id *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView) frame];
          [v4 frame];
          [v4 setFrame:];
        }
        [v4 setAlpha:0.0];
        sub_1005D1790();
        id v5 = self;
        uint64_t v6 = swift_allocObject();
        *(void *)(v6 + 16) = v4;
        double v13 = sub_1004B4560;
        uint64_t v14 = v6;
        id v9 = _NSConcreteStackBlock;
        uint64_t v10 = 1107296256;
        uint64_t v11 = sub_100020238;
        id v12 = &unk_100FE1F50;
        double v7 = _Block_copy(&v9);
        id v8 = v4;
        swift_release();
        [v5 animateWithDuration:v7 animations:0.15];
        _Block_release(v7);
      }
      sub_10023535C(v2, v3, v1);
    }
  }
}

void sub_1005D1790()
{
  unsigned __int8 v1 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot);
  if (v1)
  {
    uint64_t v2 = v0;
    id v21 = v1;
    [v21 setContentMode:2];
    Class v3 = *(void **)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView);
    id v4 = UIView.forAutolayout.getter();
    [v3 addSubview:v4];

    if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize + 16) & 1) == 0)
    {
      double v5 = *(double *)(v2 + OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize + 8)
         / *(double *)(v2 + OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize);
      uint64_t v6 = self;
      sub_100063814((uint64_t *)&unk_1010A0980);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_100E251E0;
      id v8 = [v21 topAnchor];
      id v9 = [v3 topAnchor];
      id v10 = [v8 constraintEqualToAnchor:v9];

      *(void *)(v7 + 32) = v10;
      id v11 = [v21 leftAnchor];
      id v12 = [v3 leftAnchor];
      id v13 = [v11 constraintEqualToAnchor:v12];

      *(void *)(v7 + 40) = v13;
      id v14 = [v21 rightAnchor];
      id v15 = [v3 rightAnchor];
      id v16 = [v14 constraintEqualToAnchor:v15];

      *(void *)(v7 + 48) = v16;
      id v17 = [v21 heightAnchor];
      id v18 = [v21 widthAnchor];
      id v19 = [v17 constraintEqualToAnchor:v18 multiplier:v5];

      *(void *)(v7 + 56) = v19;
      specialized Array._endMutation()();
      sub_100057778(0, (unint64_t *)&qword_10109B980);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v6 activateConstraints:isa];
    }
  }
}

id sub_1005D1A90(char *a1, void *a2)
{
  [*(id *)&a1[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView] setAlpha:1.0];
  id v4 = [a1 layer];
  [v4 setZPosition:0.0];

  return [a2 setAlpha:0.0];
}

void sub_1005D1B24(int a1, id a2)
{
  [a2 removeFromSuperview];
  id v3 = [a2 layer];
  [v3 setZPosition:0.0];
}

void sub_1005D1C08()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext);
  if (v1)
  {
    uint64_t v2 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 216);
    uint64_t v3 = swift_retain();
    id v4 = (void *)v2(v3);
    swift_release();
    id v5 = [v4 playerViewController];

    id v6 = [v5 view];
    if (v6)
    {
      id v7 = [v6 layer];

      if (v7)
      {
        self;
        if (!swift_dynamicCastObjCClass()) {
      }
        }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1005D1E1C()
{
  return type metadata accessor for NowPlayingContentView(0);
}

void sub_1005D1E24(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = (void *)(*(uint64_t (**)(void))(*(void *)a1 + 216))();
  id v10 = [v4 playerViewController];

  id v5 = [v10 parentViewController];
  if (v5)
  {
    [v10 willMoveToParentViewController:0];
    [v10 removeFromParentViewController];
  }
  id v6 = *(void **)(v2 + 32);
  type metadata accessor for NowPlayingContentView(0);
  uint64_t v7 = swift_dynamicCastClass();
  if (v7)
  {
    uint64_t v8 = *(void *)(v7 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext);
    *(void *)(v7 + OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext) = a1;
    swift_retain_n();
    id v9 = v6;
    sub_1005D02CC(v8);

    swift_release();
    swift_release();
  }
  else
  {
  }
}

uint64_t sub_1005D1F94(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 72);
  if (v3)
  {
    swift_retain();
    v3(v2, a1);
    sub_10006ADFC((uint64_t)v3);
  }
  if (qword_101097980 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_101128F08;
  uint64_t v6 = *(void *)(qword_101128F08 + 32);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = *(void *)(v6 + 16 * v7 + 16);
    swift_unknownObjectRetain();
    uint64_t result = sub_1005D3824(v2, v5);
    if (*(unsigned char *)(v2 + 104))
    {
      if (v8)
      {
        swift_getObjectType();
        uint64_t v10 = swift_unknownObjectRetain();
        sub_1001285C8(v10, v5);
        return swift_unknownObjectRelease_n();
      }
      return result;
    }
  }
  else
  {
    uint64_t result = sub_1005D3824(v2, qword_101128F08);
    if (*(unsigned char *)(v2 + 104)) {
      return result;
    }
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_1005D20D0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  id v4 = *(void (**)(void, uint64_t))(v2 + 88);
  if (v4)
  {
    swift_retain();
    v4(a2 & 1, a1);
    sub_10006ADFC((uint64_t)v4);
  }
  if (qword_101097980 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_101128F08;

  return sub_1005D3F4C(v3, v7);
}

uint64_t sub_1005D2188()
{
  swift_bridgeObjectRelease();

  swift_release();
  sub_10006ADFC(*(void *)(v0 + 56));
  sub_10006ADFC(*(void *)(v0 + 72));
  sub_10006ADFC(*(void *)(v0 + 88));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NowPlayingContentViewDonationItem()
{
  return self;
}

uint64_t sub_1005D220C()
{
  uint64_t v1 = *(void **)(v0 + 32);
  type metadata accessor for NowPlayingContentView(0);
  uint64_t v2 = swift_dynamicCastClass();
  if (v2) {
    id v3 = v1;
  }
  return v2;
}

uint64_t sub_1005D2254()
{
  return sub_1001E2174();
}

uint64_t sub_1005D2268()
{
  return sub_1001E2174();
}

uint64_t sub_1005D227C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5MusicP33_F1E3C2770AD101679EE581A908D0EFAF17SquareMotionState__isExpanded;
  uint64_t v2 = sub_100063814(&qword_10109C180);
  id v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC5MusicP33_F1E3C2770AD101679EE581A908D0EFAF17SquareMotionState__isPlaying, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1005D2350()
{
  return type metadata accessor for SquareMotionState(0);
}

uint64_t getEnumTagSinglePayload for NowPlayingContentView.ViewMode(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x3FFE) {
    goto LABEL_17;
  }
  if (a2 + 49154 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 49154 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 49154;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 49154;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 49154;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0x3E00 | (*a1 >> 14) & 0xFFFFFE03 | (4 * (*a1 >> 1))) ^ 0x3FFF;
  if (v6 >= 0x3FFD) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for NowPlayingContentView.ViewMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 49154 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 49154 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3FFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3FFD)
  {
    unsigned int v6 = ((a2 - 16382) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 16382;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005D24F4);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2)
        {
LABEL_18:
          unsigned int v7 = ((-a2 >> 2) & 0xFFF) - (a2 << 12);
          *(_WORD *)uint64_t result = (4 * v7) & 0xFE00 | (2 * (v7 & 0x7F));
        }
        break;
    }
  }
  return result;
}

_WORD *sub_1005D251C(_WORD *result, unsigned int a2)
{
  if (a2 < 2) {
    *uint64_t result = *result & 0x101 | ((_WORD)a2 << 14);
  }
  else {
    *uint64_t result = (a2 & 1 | (((a2 >> 1) & 1) << 8)) ^ 0x8100;
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingContentView.ViewMode()
{
  return &type metadata for NowPlayingContentView.ViewMode;
}

uint64_t *sub_1005D2564(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    id v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_1005D266C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_1005D26E0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  swift_retain();
  v6(v8, v9, v5);
  return a1;
}

void *sub_1005D2770(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_1005D2808(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1005D2878(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1005D2938()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005D297C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SquareMotionState(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1005D29BC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  id v77 = a2;
  uint64_t v3 = type metadata accessor for MotionCacheDownloadPolicy();
  uint64_t v75 = *(void *)(v3 - 8);
  uint64_t v76 = v3;
  __chkstk_darwin(v3);
  uint64_t v74 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for MotionPlaybackPolicy();
  uint64_t v72 = *(void *)(v5 - 8);
  uint64_t v73 = v5;
  __chkstk_darwin(v5);
  uint64_t v71 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  v49[1] = a1;
  uint64_t v82 = v8;
  uint64_t v83 = v7;
  uint64_t v9 = v7;
  uint64_t v52 = v7;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v56 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v12 = (char *)v49 - v11;
  uint64_t v82 = v8;
  uint64_t v83 = v9;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v82 = OpaqueTypeMetadata2;
  uint64_t v83 = OpaqueTypeConformance2;
  uint64_t v14 = OpaqueTypeConformance2;
  v49[2] = OpaqueTypeConformance2;
  uint64_t v57 = swift_getOpaqueTypeMetadata2();
  uint64_t v63 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v50 = (char *)v49 - v15;
  uint64_t v16 = type metadata accessor for ModifiedContent();
  uint64_t v68 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  BOOL v53 = (char *)v49 - v17;
  sub_10006389C(&qword_1010B1F28);
  uint64_t v55 = v16;
  uint64_t v18 = type metadata accessor for ModifiedContent();
  uint64_t v70 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v60 = (char *)v49 - v19;
  uint64_t v82 = OpaqueTypeMetadata2;
  uint64_t v83 = v14;
  uint64_t v51 = swift_getOpaqueTypeConformance2();
  uint64_t v80 = v51;
  unint64_t v81 = &protocol witness table for _ScaleEffect;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v54 = WitnessTable;
  unint64_t v21 = sub_1005D46B0();
  uint64_t v78 = WitnessTable;
  unint64_t v79 = v21;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v82 = v18;
  uint64_t v83 = v22;
  uint64_t v23 = v22;
  uint64_t v62 = v22;
  uint64_t v24 = swift_getOpaqueTypeMetadata2();
  uint64_t v65 = v24;
  uint64_t v69 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v61 = (char *)v49 - v25;
  uint64_t v82 = v18;
  uint64_t v83 = v23;
  uint64_t v66 = swift_getOpaqueTypeConformance2();
  uint64_t v82 = v24;
  uint64_t v83 = v66;
  uint64_t v67 = swift_getOpaqueTypeMetadata2();
  uint64_t v58 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v59 = (char *)v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v64 = (char *)v49 - v28;
  Corner.large.unsafeMutableAddressor();
  View.corner(_:)();
  Border.artwork.unsafeMutableAddressor();
  swift_retain();
  id v29 = v50;
  View.border(_:corner:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v12, OpaqueTypeMetadata2);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  static UnitPoint.center.getter();
  id v30 = v53;
  uint64_t v31 = v57;
  View.scaleEffect(_:anchor:)();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v29, v31);
  sub_1005D33DC();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v32 = v60;
  uint64_t v33 = v55;
  View.animation<A>(_:value:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v30, v33);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  int v35 = v71;
  uint64_t v34 = v72;
  *uint64_t v71 = v82;
  uint64_t v36 = v73;
  (*(void (**)(unsigned char *, void, uint64_t))(v34 + 104))(v35, enum case for MotionPlaybackPolicy.custom(_:), v73);
  unint64_t v37 = v61;
  View.motionCollection(policy:)();
  (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v32, v18);
  unint64_t v39 = v74;
  uint64_t v38 = v75;
  uint64_t v40 = v76;
  (*(void (**)(char *, void, uint64_t))(v75 + 104))(v74, enum case for MotionCacheDownloadPolicy.whileVisible(_:), v76);
  uint64_t v41 = v59;
  uint64_t v42 = v65;
  View.motionCacheDownload(policy:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v37, v42);
  uint64_t v43 = v58;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  uint64_t v45 = v64;
  uint64_t v46 = v67;
  v44(v64, v41, v67);
  double v47 = *(void (**)(char *, uint64_t))(v43 + 8);
  v47(v41, v46);
  v44(v77, v45, v46);
  return ((uint64_t (*)(char *, uint64_t))v47)(v45, v46);
}

uint64_t sub_1005D33DC()
{
  return static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
}

uint64_t sub_1005D34A8@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1005D3528()
{
  return static Published.subscript.setter();
}

uint64_t sub_1005D359C(uint64_t result, uint64_t a2)
{
  char v3 = (void *)result;
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5 || *(void *)(v4 + 16 * v5 + 16) != result)
  {
    if (qword_101097988 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100050A90(v6, (uint64_t)qword_10109AB30);
    swift_unknownObjectRetain_n();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136446210;
      swift_unknownObjectRetain();
      sub_100063814(&qword_10109ACC8);
      uint64_t v10 = String.init<A>(describing:)();
      sub_100075D94(v10, v11, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Become active container=%{public}s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v12 = *(void **)(a2 + 32);
    id v13 = v3;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_100016814(0, v12[2] + 1, 1, v12);
    }
    unint64_t v15 = v12[2];
    unint64_t v14 = v12[3];
    if (v15 >= v14 >> 1) {
      uint64_t v12 = sub_100016814((void *)(v14 > 1), v15 + 1, 1, v12);
    }
    v12[2] = v15 + 1;
    uint64_t v16 = &v12[2 * v15];
    v16[4] = v13;
    v16[5] = &off_100FC9480;
    uint64_t v17 = *(void *)(a2 + 32);
    *(void *)(a2 + 32) = v12;
    sub_100016828(v17);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1005D3824(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5 || *(void *)(v4 + 16 * v5 + 16) != result)
  {
    if (qword_101097988 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100050A90(v6, (uint64_t)qword_10109AB30);
    swift_unknownObjectRetain_n();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136446210;
      swift_unknownObjectRetain();
      sub_100063814(&qword_10109ACC8);
      uint64_t v10 = String.init<A>(describing:)();
      sub_100075D94(v10, v11, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Become active container=%{public}s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v12 = *(void **)(a2 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_100016814(0, v12[2] + 1, 1, v12);
    }
    unint64_t v14 = v12[2];
    unint64_t v13 = v12[3];
    if (v14 >= v13 >> 1) {
      uint64_t v12 = sub_100016814((void *)(v13 > 1), v14 + 1, 1, v12);
    }
    v12[2] = v14 + 1;
    unint64_t v15 = &v12[2 * v14];
    v15[4] = v3;
    v15[5] = &off_100FE1DB0;
    uint64_t v16 = *(void *)(a2 + 32);
    *(void *)(a2 + 32) = v12;
    sub_100016828(v16);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1005D3AB4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 32);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v5 = (void *)result;
    uint64_t v6 = 1 - v3;
    for (unint64_t i = (void *)(v2 + 16 * v3 + 16); *i != result; i -= 2)
    {
      if (++v6 == 1) {
        return result;
      }
    }
    unint64_t v8 = -v6;
    if (qword_101097988 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100050A90(v9, (uint64_t)qword_10109AB30);
    swift_unknownObjectRetain_n();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446210;
      uint64_t v18 = v13;
      swift_unknownObjectRetain();
      sub_100063814(&qword_10109ACC8);
      uint64_t v14 = String.init<A>(describing:)();
      sub_100075D94(v14, v15, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Resign active container=%{public}s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v17 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    sub_1006558E8(v8);
    swift_unknownObjectRelease();
    uint64_t v16 = *(void *)(a2 + 32);
    *(void *)(a2 + 32) = v17;
    sub_100016828(v16);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1005D3D00(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 32);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v5 = (void *)result;
    uint64_t v6 = 1 - v3;
    for (unint64_t i = (void *)(v2 + 16 * v3 + 16); *i != result; i -= 2)
    {
      if (++v6 == 1) {
        return result;
      }
    }
    unint64_t v8 = -v6;
    if (qword_101097988 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100050A90(v9, (uint64_t)qword_10109AB30);
    swift_unknownObjectRetain_n();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446210;
      uint64_t v18 = v13;
      swift_unknownObjectRetain();
      sub_100063814(&qword_10109ACC8);
      uint64_t v14 = String.init<A>(describing:)();
      sub_100075D94(v14, v15, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Resign active container=%{public}s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v17 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    sub_1006558E8(v8);
    swift_unknownObjectRelease();
    uint64_t v16 = *(void *)(a2 + 32);
    *(void *)(a2 + 32) = v17;
    sub_100016828(v16);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1005D3F4C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 32);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v5 = 1 - v3;
    for (unint64_t i = (void *)(v2 + 16 * v3 + 16); *i != result; i -= 2)
    {
      if (++v5 == 1) {
        return result;
      }
    }
    unint64_t v7 = -v5;
    if (qword_101097988 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100050A90(v8, (uint64_t)qword_10109AB30);
    swift_unknownObjectRetain_n();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v11 = 136446210;
      uint64_t v17 = v12;
      swift_unknownObjectRetain();
      sub_100063814(&qword_10109ACC8);
      uint64_t v13 = String.init<A>(describing:)();
      sub_100075D94(v13, v14, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Resign active container=%{public}s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v16 = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    sub_1006558E8(v7);
    swift_unknownObjectRelease();
    uint64_t v15 = *(void *)(a2 + 32);
    *(void *)(a2 + 32) = v16;
    sub_100016828(v15);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1005D41A0(unsigned __int16 a1, unsigned __int16 a2)
{
  if (a1 >> 14)
  {
    if (a1 >> 14 != 1) {
      return a2 == 0x8000;
    }
    if ((a2 & 0xC000) != 0x4000) {
      return 0;
    }
  }
  else if (a2 >= 0x4000u)
  {
    return 0;
  }
  if (((a1 & 1) == 0) == (a2 & 1)) {
    return 0;
  }
  else {
    return ((a1 & 0x100) == 0) ^ ((unsigned __int16)(a2 & 0x100) >> 8);
  }
}

double sub_1005D4210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for NowPlayingContentViewDonationItem();
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_OWORD *)(v6 + 88) = 0u;
  *(unsigned char *)(v6 + 104) = 0;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 40) = 0;
  return result;
}

void sub_1005D4270()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Artwork(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  unint64_t v7 = &v19[-v6];
  *(_WORD *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_mode] = 1;
  *(void *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_videoContext] = 0;
  uint64_t v8 = &v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkDidChangeHandler];
  *uint64_t v8 = 0;
  v8[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkCachingReference] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView__internalCatalog] = 0;
  uint64_t v9 = OBJC_IVAR____TtC5Music21NowPlayingContentView_artworkView;
  Artwork.init()((uint64_t)&v19[-v6]);
  sub_100080984((uint64_t)v7, (uint64_t)v4);
  id v10 = objc_allocWithZone((Class)type metadata accessor for Artwork.View(0));
  os_log_type_t v11 = Artwork.View.init(configuration:)((uint64_t)v4);
  sub_100080928((uint64_t)v7);
  *(void *)&v1[v9] = v11;
  uint64_t v12 = OBJC_IVAR____TtC5Music21NowPlayingContentView_containerView;
  *(void *)&v1[v12] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v13 = &v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_lastSeenBounds];
  *uint64_t v13 = 0u;
  v13[1] = 0u;
  *(void *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionSnapshot] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionKeyframeView] = 0;
  v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_isBeingDonated] = 0;
  unint64_t v14 = &v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_windowSize];
  *(void *)unint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  uint64_t v15 = &v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainer];
  uint64_t v16 = sub_100063814(&qword_1010B1BC8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(void *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionContainerView] = 0;
  uint64_t v17 = OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionState;
  type metadata accessor for SquareMotionState(0);
  uint64_t v18 = swift_allocObject();
  v19[15] = 1;
  Published.init(initialValue:)();
  v19[14] = 1;
  Published.init(initialValue:)();
  *(void *)&v1[v17] = v18;
  v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_isSquareMotionSizeTransitioning] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionData] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_motionBackgroundSnapshot] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_playerPath] = 0;
  v1[OBJC_IVAR____TtC5Music21NowPlayingContentView_deferArtworkUpdates] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1005D4544()
{
  return swift_deallocObject();
}

uint64_t sub_1005D4584()
{
  return swift_deallocObject();
}

uint64_t sub_1005D45BC()
{
  return swift_deallocObject();
}

void sub_1005D45F4()
{
  sub_1005D148C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

id sub_1005D4604()
{
  id result = *(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC5Music21NowPlayingContentView_squareMotionSnapshot);
  if (result) {
    return [result setAlpha:0.0];
  }
  return result;
}

uint64_t sub_1005D463C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1005D10EC(*(void **)(v1 + 16), a1);
}

unint64_t sub_1005D4658()
{
  unint64_t result = qword_1010B1F20;
  if (!qword_1010B1F20)
  {
    type metadata accessor for SquareMotionState(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B1F20);
  }
  return result;
}

unint64_t sub_1005D46B0()
{
  unint64_t result = qword_1010B1F30;
  if (!qword_1010B1F30)
  {
    sub_10006389C(&qword_1010B1F28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B1F30);
  }
  return result;
}

unint64_t sub_1005D4714()
{
  unint64_t result = qword_1010B1F38;
  if (!qword_1010B1F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B1F38);
  }
  return result;
}

uint64_t sub_1005D4768()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005D47A0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005D47D8()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_1005D49B4(uint64_t a1)
{
  uint64_t v31 = sub_100063814(&qword_1010A1508);
  uint64_t v3 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v5 = (void *)((char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v8 = (void *)((char *)v28 - v7);
  int64_t v9 = *(void *)(a1 + 16);
  id v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v28[0] = v1;
    uint64_t v34 = _swiftEmptyArrayStorage;
    sub_1005BDCB0(0, v9, 0);
    os_log_type_t v11 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
    uint64_t v30 = *(void *)(v3 + 72);
    uint64_t v12 = type metadata accessor for LayoutSubview();
    uint64_t v13 = *(void *)(v12 - 8);
    unint64_t v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v28[1] = v13 + 16;
    id v29 = v14;
    uint64_t v15 = (void (**)(char *, char *, uint64_t))(v13 + 32);
    do
    {
      uint64_t v16 = v31;
      uint64_t v17 = *(int *)(v31 + 48);
      uint64_t v18 = (char *)v8 + v17;
      uint64_t v19 = *v11;
      *uint64_t v8 = *v11;
      v29((char *)v8 + v17, (char *)v11 + v17, v12);
      uint64_t v20 = (char *)v5 + *(int *)(v16 + 48);
      *uint64_t v5 = v19;
      (*v15)(v20, v18, v12);
      static ProposedViewSize.zero.getter();
      char v33 = v21 & 1;
      char v32 = v22 & 1;
      LayoutSubview.sizeThatFits(_:)();
      uint64_t v24 = v23;
      sub_1000637B8((uint64_t)v5, &qword_1010A1508);
      id v10 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1005BDCB0(0, v10[2] + 1, 1);
        id v10 = v34;
      }
      unint64_t v26 = v10[2];
      unint64_t v25 = v10[3];
      if (v26 >= v25 >> 1)
      {
        sub_1005BDCB0(v25 > 1, v26 + 1, 1);
        id v10 = v34;
      }
      os_log_type_t v11 = (uint64_t *)((char *)v11 + v30);
      v10[2] = v26 + 1;
      v10[v26 + 4] = v24;
      --v9;
    }
    while (v9);
  }
  return v10;
}

char *sub_1005D4C2C(uint64_t a1)
{
  uint64_t v35 = sub_100063814(&qword_1010A1508);
  uint64_t v3 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  char v33 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v34 = (uint64_t *)((char *)&v27 - v6);
  uint64_t v7 = type metadata accessor for LayoutSubview();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  if (v11)
  {
    uint64_t v27 = v1;
    unint64_t v39 = (char *)_swiftEmptyArrayStorage;
    sub_1005BDC74(0, v11, 0);
    uint64_t v13 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
    uint64_t v14 = *(void *)(v3 + 72);
    uint64_t v31 = v10;
    uint64_t v32 = v8;
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    uint64_t v29 = v8 + 16;
    uint64_t v30 = v14;
    uint64_t v38 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v15 = v28;
    do
    {
      int64_t v37 = v11;
      uint64_t v16 = (char *)v34;
      uint64_t v17 = v35;
      uint64_t v18 = *(int *)(v35 + 48);
      uint64_t v19 = (char *)v34 + v18;
      uint64_t v20 = *v13;
      uint64_t *v34 = *v13;
      v15(&v16[v18], (char *)v13 + v18, v7);
      uint64_t v21 = (uint64_t)v33;
      char v22 = (char *)v33 + *(int *)(v17 + 48);
      void *v33 = v20;
      uint64_t v36 = *v38;
      v36(v22, v19, v7);
      v15(v10, v22, v7);
      sub_1000637B8(v21, &qword_1010A1508);
      uint64_t v12 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1005BDC74(0, *((void *)v12 + 2) + 1, 1);
        uint64_t v12 = v39;
      }
      unint64_t v24 = *((void *)v12 + 2);
      unint64_t v23 = *((void *)v12 + 3);
      int64_t v25 = v37;
      if (v24 >= v23 >> 1)
      {
        sub_1005BDC74(v23 > 1, v24 + 1, 1);
        uint64_t v12 = v39;
      }
      id v10 = v31;
      uint64_t v13 = (uint64_t *)((char *)v13 + v30);
      *((void *)v12 + 2) = v24 + 1;
      v36(&v12[((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v24], v10, v7);
      unint64_t v39 = v12;
      int64_t v11 = v25 - 1;
    }
    while (v11);
  }
  return v12;
}

uint64_t sub_1005D4F48@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v37 = type metadata accessor for LayoutSubview();
  uint64_t v3 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_1010B1F70);
  __chkstk_darwin(v6 - 8);
  double v47 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LayoutSubviews();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  int64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100063814(&qword_1010B1F80);
  uint64_t v13 = v12 - 8;
  __n128 v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v9;
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  uint64_t v45 = v9 + 16;
  v44(v11, a1, v8, v14);
  sub_1005D8274(&qword_1010B1F78);
  uint64_t v46 = v11;
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v18 = &v16[*(int *)(v13 + 44)];
  sub_1005D8274(&qword_1010B1F88);
  uint64_t v19 = *(void *)v18;
  uint64_t v49 = v16;
  dispatch thunk of Collection.endIndex.getter();
  if (v19 == v48[0])
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    uint64_t v21 = v37;
    uint64_t v22 = (uint64_t)v49;
    v20(v47, 1, 1, v37);
LABEL_8:
    uint64_t v31 = v36;
    uint64_t v32 = v22;
LABEL_10:
    sub_1000637B8(v32, &qword_1010B1F80);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v20)(v31, 1, 1, v21);
  }
  else
  {
    uint64_t v42 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v43 = (void (**)(char *))(v3 + 16);
    unint64_t v23 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    uint64_t v41 = (unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
    unint64_t v39 = v5;
    uint64_t v40 = (void (**)(char *, char *, uint64_t))(v3 + 32);
    uint64_t v38 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v21 = v37;
    uint64_t v22 = (uint64_t)v49;
    while (1)
    {
      unint64_t v24 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
      int64_t v25 = v47;
      (*v43)(v47);
      v24(v48, 0);
      unint64_t v26 = v46;
      ((void (*)(char *, uint64_t, uint64_t))v44)(v46, v22, v8);
      dispatch thunk of Collection.formIndex(after:)();
      (*v42)(v26, v8);
      uint64_t v20 = *v23;
      (*v23)(v25, 0, 1, v21);
      if ((*v41)(v25, 1, v21) == 1)
      {
        uint64_t v31 = v36;
        uint64_t v32 = (uint64_t)v49;
        goto LABEL_10;
      }
      uint64_t v27 = v25;
      uint64_t v28 = v39;
      uint64_t v29 = *v40;
      (*v40)(v39, v27, v21);
      sub_1005D7404();
      LayoutSubview.subscript.getter();
      if (LOBYTE(v48[0]) == 1) {
        break;
      }
      (*v38)(v28, v21);
      uint64_t v30 = *(void *)v18;
      uint64_t v22 = (uint64_t)v49;
      dispatch thunk of Collection.endIndex.getter();
      if (v30 == v48[0])
      {
        v20(v47, 1, 1, v21);
        goto LABEL_8;
      }
    }
    sub_1000637B8((uint64_t)v49, &qword_1010B1F80);
    uint64_t v34 = v36;
    v29(v36, v28, v21);
    return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v20)(v34, 0, 1, v21);
  }
}

uint64_t sub_1005D5424()
{
  uint64_t v0 = type metadata accessor for LayoutProperties();
  sub_100014CA4(v0, qword_101129C80);
  sub_100050A90(v0, (uint64_t)qword_101129C80);
  LayoutProperties.init()();
  return LayoutProperties.stackOrientation.setter();
}

double sub_1005D547C(uint64_t a1, char a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, char a9)
{
  sub_1005D5634(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8, a9 & 1);
  uint64_t v13 = type metadata accessor for HeightConstrainedHStackLayout.Cache();
  uint64_t v14 = *(void *)(a6 + *(int *)(v13 + 24));
  uint64_t v15 = *(void *)(v14 + 16);
  double v16 = 0.0;
  double v17 = 0.0;
  if (v15)
  {
    if (v15 == 1)
    {
      uint64_t v18 = 0;
LABEL_7:
      uint64_t v23 = v15 - v18;
      unint64_t v24 = (double *)(v14 + 16 * v18 + 32);
      do
      {
        double v25 = *v24;
        v24 += 2;
        double v17 = v17 + v25;
        --v23;
      }
      while (v23);
      goto LABEL_9;
    }
    uint64_t v18 = v15 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v19 = (double *)(v14 + 48);
    uint64_t v20 = v15 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v21 = *(v19 - 2);
      double v22 = *v19;
      v19 += 4;
      double v17 = v17 + v21 + v22;
      v20 -= 2;
    }
    while (v20);
    if (v15 != v18) {
      goto LABEL_7;
    }
  }
LABEL_9:
  unint64_t v26 = sub_1005D67E8(a5, a7, (uint64_t)a8, a9 & 1);
  uint64_t v27 = v26[2];
  if (!v27) {
    goto LABEL_17;
  }
  if (v27 == 1)
  {
    uint64_t v28 = 0;
    double v16 = 0.0;
LABEL_15:
    uint64_t v31 = v27 - v28;
    uint64_t v32 = (double *)&v26[v28 + 4];
    do
    {
      double v33 = *v32++;
      double v16 = v16 + v33;
      --v31;
    }
    while (v31);
    goto LABEL_17;
  }
  uint64_t v28 = v27 & 0x7FFFFFFFFFFFFFFELL;
  uint64_t v29 = (double *)(v26 + 5);
  double v16 = 0.0;
  uint64_t v30 = v27 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    double v16 = v16 + *(v29 - 1) + *v29;
    v29 += 2;
    v30 -= 2;
  }
  while (v30);
  if (v27 != v28) {
    goto LABEL_15;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a6 + *(int *)(v13 + 20) + 8))
  {
    uint64_t v34 = *(void *)(v14 + 16);
    if (v34)
    {
      uint64_t v35 = (double *)(v14 + 40);
      double v36 = 0.0;
      do
      {
        double v37 = *v35;
        v35 += 2;
        double v38 = v37;
        if (v36 <= v37) {
          double v36 = v38;
        }
        --v34;
      }
      while (v34);
    }
  }
  return v17 + v16;
}

uint64_t sub_1005D5634(uint64_t a1, int a2, unint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, char a9)
{
  v165 = a8;
  uint64_t v163 = a7;
  LODWORD(v183) = a4;
  unint64_t v187 = a3;
  uint64_t v185 = sub_100063814(&qword_1010A1508);
  uint64_t v188 = *(void *)(v185 - 8);
  __chkstk_darwin(v185);
  v184 = (void *)((char *)v156 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v172 = type metadata accessor for ViewSpacing();
  uint64_t v158 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  v171 = (char *)v156 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v170 = (char *)v156 - v16;
  uint64_t v17 = type metadata accessor for LayoutSubview();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  v191 = (char *)v156 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v169 = (char *)v156 - v21;
  __chkstk_darwin(v22);
  v176 = (char *)v156 - v23;
  __chkstk_darwin(v24);
  v192 = (char *)v156 - v25;
  uint64_t v26 = type metadata accessor for LayoutSubviews();
  v182 = *(char **)(v26 - 8);
  __chkstk_darwin(v26);
  v193 = (void (**)(char *, uint64_t))((char *)v156 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v190 = (int *)sub_100063814(&qword_1010B1F80);
  __chkstk_darwin(v190);
  v174 = (char *)v156 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_100063814(&qword_1010B1F60);
  __chkstk_darwin(v189);
  uint64_t v30 = (char *)v156 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100063814(&qword_1010B1F70);
  __chkstk_darwin(v31 - 8);
  uint64_t v175 = (uint64_t)v156 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v178 = (char *)v156 - v34;
  __chkstk_darwin(v35);
  uint64_t v180 = (uint64_t)v156 - v36;
  __chkstk_darwin(v37);
  v167 = (char *)v156 - v38;
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)v156 - v40;
  v168 = (void (**)(char *, uint64_t))a5;
  sub_1005D4F48(a5, (char *)v156 - v40);
  uint64_t v166 = 0;
  uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v194 = v17;
  uint64_t v173 = v18 + 48;
  unsigned int v186 = v42(v41, 1, v17);
  int v159 = a2;
  double v157 = *(double *)&a1;
  if (v186 == 1)
  {
    sub_1000637B8((uint64_t)v41, &qword_1010B1F70);
    uint64_t v43 = 0;
  }
  else
  {
    LOBYTE(v197) = a2 & 1;
    char v196 = v183 & 1;
    LayoutSubview.sizeThatFits(_:)();
    uint64_t v45 = v44;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v41, v194);
    uint64_t v43 = v45;
  }
  uint64_t v46 = a6;
  int v162 = a9 & 1;
  BOOL v47 = v186 == 1;
  uint64_t v48 = type metadata accessor for HeightConstrainedHStackLayout.Cache();
  uint64_t v49 = a6 + *(int *)(v48 + 20);
  uint64_t v183 = v43;
  *(void *)uint64_t v49 = v43;
  *(unsigned char *)(v49 + 8) = v47;
  uint64_t v50 = v48;
  uint64_t v51 = (uint64_t)v168;
  char v52 = static LayoutSubviews.== infix(_:_:)();
  v179 = v42;
  uint64_t v164 = v18;
  uint64_t v160 = v50;
  if ((v52 & 1) != 0 && *(void *)(v46 + *(int *)(v50 + 28)))
  {
    uint64_t v53 = swift_bridgeObjectRetain();
    uint64_t v54 = sub_1003FF4B4(v53);
    swift_bridgeObjectRelease();
    uint64_t v55 = (void (*)(char *, uint64_t, uint64_t))*((void *)v182 + 2);
    unint64_t v56 = (unint64_t)(v182 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v57 = v26;
  }
  else
  {
    uint64_t v58 = (void (**)(uint64_t, uint64_t, uint64_t))v182;
    uint64_t v55 = (void (*)(char *, uint64_t, uint64_t))*((void *)v182 + 2);
    unint64_t v56 = (unint64_t)(v182 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v55(v30, v51, v26);
    swift_getKeyPath();
    sub_1005D8328();
    uint64_t v59 = Sequence.sorted<A>(by:comparator:)();
    swift_release();
    sub_1000637B8((uint64_t)v30, &qword_1010B1F60);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v54 = sub_1005D6CC0(KeyPath, v59);
    swift_bridgeObjectRelease();
    uint64_t v57 = v26;
    swift_release();
    uint64_t v61 = sub_1003FF4DC((uint64_t)v54);
    uint64_t v62 = *(int *)(v50 + 28);
    swift_bridgeObjectRelease();
    *(void *)(v46 + v62) = v61;
    v58[3](v46, v51, v26);
  }
  uint64_t v63 = v174;
  uint64_t v64 = v190;
  unint64_t v65 = v56;
  v55((char *)v193, v51, v57);
  sub_1005D8274(&qword_1010B1F78);
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v66 = &v63[v64[9]];
  sub_1005D8274(&qword_1010B1F88);
  uint64_t v67 = *(void **)v66;
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v161 = v46;
  if (v67 == v197)
  {
    uint64_t v68 = *(char **)(v164 + 56);
    double v77 = 0.0;
    uint64_t v69 = v178;
    uint64_t v70 = (uint64_t)v165;
    uint64_t v71 = v163;
    uint64_t v72 = v167;
    uint64_t v73 = v164;
    char v74 = v162;
LABEL_14:
    v182 = v68;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v68)(v72, 1, 1, v194);
  }
  else
  {
    uint64_t v189 = v65;
    v190 = (int *)v55;
    unint64_t v187 = v164 + 16;
    v181 = (void (**)(char *, uint64_t))(v182 + 8);
    uint64_t v75 = (char **)(v164 + 56);
    v177 = (void (**)(char *, char *, uint64_t))(v164 + 32);
    uint64_t v76 = (void (**)(char *, uint64_t))(v164 + 8);
    double v77 = 0.0;
    v156[1] = (v164 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v78 = v174;
    unint64_t v79 = v167;
    while (1)
    {
      uint64_t v80 = (void (*)(void **, void))dispatch thunk of Collection.subscript.read();
      uint64_t v81 = v194;
      (*(void (**)(char *))v187)(v79);
      v80(&v197, 0);
      uint64_t v82 = (char *)v193;
      ((void (*)(void (**)(char *, uint64_t), char *, uint64_t))v190)(v193, v78, v57);
      dispatch thunk of Collection.formIndex(after:)();
      (*v181)(v82, v57);
      v182 = *v75;
      ((void (*)(char *, void, uint64_t, uint64_t))v182)(v79, 0, 1, v81);
      if (v179(v79, 1, v81) == 1) {
        break;
      }
      uint64_t v83 = v192;
      uint64_t v84 = v194;
      (*v177)(v192, v79, v194);
      static ProposedViewSize.zero.getter();
      LOBYTE(v197) = v85 & 1;
      char v196 = v86 & 1;
      LayoutSubview.sizeThatFits(_:)();
      double v77 = v77 + v87;
      (*v76)(v83, v84);
      uint64_t v88 = *(void **)v66;
      dispatch thunk of Collection.endIndex.getter();
      if (v88 == v197)
      {
        uint64_t v73 = v164;
        uint64_t v69 = v178;
        uint64_t v51 = (uint64_t)v168;
        uint64_t v68 = v182;
        uint64_t v70 = (uint64_t)v165;
        uint64_t v71 = v163;
        uint64_t v72 = v79;
        char v74 = v162;
        goto LABEL_14;
      }
    }
    uint64_t v73 = v164;
    uint64_t v69 = v178;
    uint64_t v51 = (uint64_t)v168;
    uint64_t v70 = (uint64_t)v165;
    uint64_t v71 = v163;
    char v74 = v162;
  }
  sub_1000637B8((uint64_t)v174, &qword_1010B1F80);
  unint64_t v89 = sub_1005D67E8(v51, v71, v70, v74);
  uint64_t v90 = v89[2];
  if (!v90)
  {
    double v92 = 0.0;
    goto LABEL_25;
  }
  if (v90 == 1)
  {
    uint64_t v91 = 0;
    double v92 = 0.0;
LABEL_23:
    uint64_t v95 = v90 - v91;
    uint64_t v96 = (double *)&v89[v91 + 4];
    do
    {
      double v97 = *v96++;
      double v92 = v92 + v97;
      --v95;
    }
    while (v95);
    goto LABEL_25;
  }
  uint64_t v91 = v90 & 0x7FFFFFFFFFFFFFFELL;
  id v93 = (double *)(v89 + 5);
  double v92 = 0.0;
  uint64_t v94 = v90 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    double v92 = v92 + *(v93 - 1) + *v93;
    v93 += 2;
    v94 -= 2;
  }
  while (v94);
  if (v90 != v91) {
    goto LABEL_23;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  unint64_t v98 = dispatch thunk of Collection.distance(from:to:)();
  uint64_t v99 = sub_1006AEC90(v98, 0.0, 0.0);
  v197 = v54;
  if (v54[2])
  {
    double v100 = v157;
    if (v159) {
      double v100 = 10.0;
    }
    v181 = (void (**)(char *, uint64_t))(v73 + 56);
    double v101 = v100 - v77 - v92;
    v177 = (void (**)(char *, char *, uint64_t))(v73 + 16);
    double v102 = (char *)(v73 + 32);
    v168 = (void (**)(char *, uint64_t))(v158 + 8);
    v192 = (char *)(v73 + 32);
    v193 = (void (**)(char *, uint64_t))(v73 + 8);
    while (1)
    {
      v165 = v99;
      uint64_t v103 = v54[4];
      swift_bridgeObjectRetain();
      sub_1002350F8(0, 1);
      uint64_t v104 = v166;
      double v105 = sub_1005D49B4(v103);
      uint64_t v106 = v105[2];
      double v107 = 0.0;
      double v108 = 0.0;
      if (v106)
      {
        CGFloat v109 = (double *)(v105 + 4);
        do
        {
          double v110 = *v109++;
          double v108 = v108 + v110;
          --v106;
        }
        while (v106);
      }
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v182)(v180, 1, 1, v194);
      uint64_t v189 = v103;
      CGFloat v111 = sub_1005D4C2C(v103);
      uint64_t v166 = v104;
      v167 = v111;
      uint64_t v112 = *((void *)v111 + 2);
      uint64_t v113 = v173;
      if (v112)
      {
        CGFloat v114 = &v167[(*(unsigned __int8 *)(v164 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v164 + 80)];
        unint64_t v187 = *(void *)(v164 + 72);
        v190 = *(int **)(v164 + 16);
        double v107 = 0.0;
        while (1)
        {
          uint64_t v125 = v194;
          ((void (*)(char *, char *, uint64_t))v190)(v69, v114, v194);
          ((void (*)(char *, void, uint64_t, uint64_t))v182)(v69, 0, 1, v125);
          v126 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v179;
          if (v179(v69, 1, v125) == 1) {
            break;
          }
          id v127 = v69;
          unint64_t v128 = v176;
          uint64_t v129 = v113;
          uint64_t v130 = v194;
          id v131 = *(char **)v102;
          (*(void (**)(char *, char *, uint64_t))v102)(v176, v127, v194);
          uint64_t v132 = v180;
          uint64_t v133 = v175;
          sub_10006CAB8(v180, v175, &qword_1010B1F70);
          uint64_t v134 = v130;
          uint64_t v113 = v129;
          if (v126(v133, 1, v134) == 1)
          {
            (*v193)(v128, v194);
            sub_1000637B8(v133, &qword_1010B1F70);
            uint64_t v69 = v178;
            double v102 = v192;
          }
          else
          {
            CGFloat v115 = v169;
            v174 = v131;
            ((void (*)(char *, uint64_t, uint64_t))v131)(v169, v133, v194);
            CGFloat v116 = v170;
            LayoutSubview.spacing.getter();
            double v117 = v171;
            LayoutSubview.spacing.getter();
            ViewSpacing.distance(to:along:)();
            double v119 = v118;
            v120 = *v168;
            v121 = v117;
            uint64_t v122 = v172;
            (*v168)(v121, v172);
            v120(v116, v122);
            uint64_t v123 = v194;
            (*v193)(v115, v194);
            sub_1000637B8(v132, &qword_1010B1F70);
            double v107 = v107 + v119;
            ((void (*)(uint64_t, char *, uint64_t))v174)(v132, v128, v123);
            uint64_t v124 = v132;
            double v102 = v192;
            uint64_t v113 = v173;
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v182)(v124, 0, 1, v123);
            uint64_t v69 = v178;
          }
          v114 += v187;
          if (!--v112) {
            goto LABEL_40;
          }
        }
      }
      else
      {
LABEL_40:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v182)(v69, 1, 1, v194);
      }
      uint64_t result = swift_bridgeObjectRelease();
      double v101 = v101 + v108 + v107;
      uint64_t v136 = v189;
      uint64_t v137 = *(void *)(v189 + 16);
      uint64_t v99 = v165;
      if (v137) {
        break;
      }
LABEL_29:
      sub_1000637B8(v180, &qword_1010B1F70);
      swift_bridgeObjectRelease();
      uint64_t v54 = v197;
      uint64_t v69 = v178;
      if (!v197[2]) {
        goto LABEL_54;
      }
    }
    unint64_t v138 = 0;
    unint64_t v187 = v189 + ((*(unsigned __int8 *)(v188 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80));
    while (v138 < *(void *)(v136 + 16))
    {
      BOOL v139 = v186 == 1;
      uint64_t v140 = v187 + *(void *)(v188 + 72) * v138;
      double v141 = v99;
      v142 = v184;
      sub_10006CAB8(v140, (uint64_t)v184, &qword_1010A1508);
      unint64_t v143 = *v142;
      uint64_t v144 = v185;
      CGRect v145 = (char *)v142 + *(int *)(v185 + 48);
      uint64_t v146 = v194;
      v190 = (int *)*v193;
      ((void (*)(char *, uint64_t))v190)(v145, v194);
      sub_10006CAB8(v140, (uint64_t)v142, &qword_1010A1508);
      uint64_t v147 = v146;
      CGRect v148 = (char *)v142 + *(int *)(v144 + 48);
      uint64_t v99 = v141;
      double v102 = v192;
      (*(void (**)(char *, char *, uint64_t))v192)(v191, v148, v147);
      char v196 = 0;
      BOOL v195 = v139;
      LayoutSubview.sizeThatFits(_:)();
      double v150 = v149;
      uint64_t v152 = v151;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if (result)
      {
        uint64_t v136 = v189;
        if ((v143 & 0x8000000000000000) != 0) {
          goto LABEL_53;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_1006598FC(v141);
        uint64_t v99 = (void *)result;
        uint64_t v136 = v189;
        if ((v143 & 0x8000000000000000) != 0)
        {
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
      }
      if (v143 >= v99[2]) {
        goto LABEL_56;
      }
      CGRect v153 = (double *)&v99[2 * v143];
      v153[4] = v150;
      *((void *)v153 + 5) = v152;
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v190)(v191, v194);
      if (v101 - v150 >= 0.0) {
        double v101 = v101 - v150;
      }
      else {
        double v101 = 0.0;
      }
      ++v138;
      if (!--v137) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_56:
    __break(1u);
  }
  else
  {
LABEL_54:
    swift_bridgeObjectRelease();
    uint64_t v154 = *(int *)(v160 + 24);
    uint64_t v155 = v161;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v155 + v154) = v99;
  }
  return result;
}

void *sub_1005D67E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
  {
    type metadata accessor for LayoutSubviews();
    sub_1005D8274(&qword_1010B1F88);
    dispatch thunk of Collection.startIndex.getter();
    dispatch thunk of Collection.endIndex.getter();
    uint64_t v6 = dispatch thunk of Collection.distance(from:to:)();
    BOOL v7 = __OFSUB__(v6, 1);
    uint64_t result = (void *)(v6 - 1);
    if (!v7) {
      return sub_1006AEB9C((unint64_t)result, *(double *)&a3);
    }
    __break(1u);
    goto LABEL_14;
  }
  type metadata accessor for LayoutSubviews();
  sub_1005D8274(&qword_1010B1F88);
  dispatch thunk of Collection.startIndex.getter();
  uint64_t result = (void *)dispatch thunk of Collection.endIndex.getter();
  uint64_t v9 = v17;
  uint64_t v10 = v16 - v17;
  if (v16 < v17)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (__OFSUB__(v16, v17))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  BOOL v7 = __OFSUB__(v10, 1);
  uint64_t v11 = v10 - 1;
  if (v7)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return result;
  }
  uint64_t result = (void *)sub_1005D7528(v17, v11 & ~(v11 >> 63), v16, v17, v16);
  if (v12) {
    uint64_t v13 = v16;
  }
  else {
    uint64_t v13 = (uint64_t)result;
  }
  if (v13 < v17) {
    goto LABEL_17;
  }
  __chkstk_darwin(result);
  uint64_t v15[2] = a1;
  return sub_100316840(sub_1005D8304, (uint64_t)v15, v9, v14);
}

uint64_t sub_1005D698C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v5 = type metadata accessor for ViewSpacing();
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  __chkstk_darwin(v5);
  BOOL v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v25 - v9;
  uint64_t v11 = type metadata accessor for LayoutSubview();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v25 - v16;
  uint64_t v18 = *a1;
  v25[1] = a2;
  LayoutSubviews.subscript.getter();
  LayoutSubview.spacing.getter();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v17, v11);
  uint64_t result = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
  }
  else
  {
    LayoutSubviews.subscript.getter();
    LayoutSubview.spacing.getter();
    v19(v14, v11);
    ViewSpacing.distance(to:along:)();
    uint64_t v22 = v21;
    uint64_t v23 = v27;
    uint64_t v24 = *(void (**)(char *, uint64_t))(v26 + 8);
    v24(v7, v27);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v24)(v10, v23);
    void *v28 = v22;
  }
  return result;
}

double sub_1005D6BD0()
{
  static ProposedViewSize.infinity.getter();
  LayoutSubview.sizeThatFits(_:)();
  double v1 = v0;
  static ProposedViewSize.zero.getter();
  LayoutSubview.sizeThatFits(_:)();
  return v1 - v2;
}

double sub_1005D6C34@<D0>(double *a1@<X8>)
{
  static ProposedViewSize.infinity.getter();
  LayoutSubview.sizeThatFits(_:)();
  double v3 = v2;
  static ProposedViewSize.zero.getter();
  LayoutSubview.sizeThatFits(_:)();
  double result = v3 - v4;
  *a1 = result;
  return result;
}

BOOL sub_1005D6CAC(double *a1, double *a2)
{
  return *a1 < *a2;
}

void *sub_1005D6CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a1;
  uint64_t v3 = sub_100063814(&qword_1010A1508);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v37 = (uint64_t)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v30 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v30 - v10;
  uint64_t v12 = *(void *)(a2 + 16);
  if (!v12) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v13 = sub_100063814(&qword_1010A1500);
  uint64_t v14 = *(void *)(v4 + 72);
  uint64_t v15 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v16 = (v15 + 32) & ~v15;
  uint64_t v33 = v16 + v14;
  uint64_t v34 = v13;
  uint64_t v32 = v15 | 7;
  unint64_t v17 = swift_allocObject();
  long long v31 = xmmword_100E251D0;
  *(_OWORD *)(v17 + 16) = xmmword_100E251D0;
  sub_10006CAB8(a2 + v16, v17 + v16, &qword_1010A1508);
  uint64_t v18 = v12 - 1;
  if (v12 == 1)
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
LABEL_20:
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_21;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v30[1] = a2;
    uint64_t v20 = a2 + v14 + v16;
    uint64_t v19 = _swiftEmptyArrayStorage;
    uint64_t v35 = v14;
    while (1)
    {
      sub_10006CAB8(v20, (uint64_t)v11, &qword_1010A1508);
      if (!*(void *)(v17 + 16)) {
        break;
      }
      sub_10006CAB8(v17 + v16, (uint64_t)v8, &qword_1010A1508);
      swift_getAtKeyPath();
      sub_1000637B8((uint64_t)v8, &qword_1010A1508);
      swift_getAtKeyPath();
      if (v39 == v38)
      {
        sub_10006CAB8((uint64_t)v11, v37, &qword_1010A1508);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v17 = sub_100271940(0, *(void *)(v17 + 16) + 1, 1, v17);
        }
        unint64_t v23 = *(void *)(v17 + 16);
        unint64_t v22 = *(void *)(v17 + 24);
        if (v23 >= v22 >> 1) {
          unint64_t v17 = sub_100271940(v22 > 1, v23 + 1, 1, v17);
        }
        *(void *)(v17 + 16) = v23 + 1;
        uint64_t v21 = v35;
        sub_10003CABC(v37, v17 + v16 + v23 * v35, &qword_1010A1508);
        sub_1000637B8((uint64_t)v11, &qword_1010A1508);
      }
      else
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_10027192C(0, v19[2] + 1, 1, v19);
        }
        unint64_t v25 = v19[2];
        unint64_t v24 = v19[3];
        if (v25 >= v24 >> 1) {
          uint64_t v19 = sub_10027192C((void *)(v24 > 1), v25 + 1, 1, v19);
        }
        v19[2] = v25 + 1;
        v19[v25 + 4] = v17;
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = v31;
        sub_10003CABC((uint64_t)v11, v26 + v16, &qword_1010A1508);
        swift_bridgeObjectRelease();
        unint64_t v17 = v26;
        uint64_t v21 = v35;
      }
      v20 += v21;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  uint64_t v19 = sub_10027192C(0, v19[2] + 1, 1, v19);
LABEL_21:
  unint64_t v28 = v19[2];
  unint64_t v27 = v19[3];
  if (v28 >= v27 >> 1) {
    uint64_t v19 = sub_10027192C((void *)(v27 > 1), v28 + 1, 1, v19);
  }
  v19[2] = v28 + 1;
  v19[v28 + 4] = v17;
  return v19;
}

uint64_t sub_1005D7098@<X0>(uint64_t a1@<X8>)
{
  if (qword_101098580 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LayoutProperties();
  uint64_t v3 = sub_100050A90(v2, (uint64_t)qword_101129C80);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

int *sub_1005D7140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LayoutSubviews();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  double result = (int *)type metadata accessor for HeightConstrainedHStackLayout.Cache();
  uint64_t v6 = a2 + result[5];
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  *(void *)(a2 + result[6]) = _swiftEmptyArrayStorage;
  *(void *)(a2 + result[7]) = 0;
  return result;
}

double sub_1005D71DC(uint64_t a1, char a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return sub_1005D547C(a1, a2 & 1, a3, a4 & 1, a5, a6, *(void *)v6, *(void **)(v6 + 8), *(unsigned char *)(v6 + 16));
}

uint64_t sub_1005D7218(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (**a9)(char *, uint64_t, uint64_t), uint64_t a10)
{
  return sub_1005D7590(a9, a10, *(void *)v10, *(void *)(v10 + 8), *(unsigned __int8 *)(v10 + 16), a1, a2, a3, a4);
}

uint64_t sub_1005D722C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1005D729C(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_1005D7264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1005D729C(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_1005D729C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_1005D72E0(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return sub_1005D7350;
}

void sub_1005D7350(void *a1)
{
  double v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_1005D739C()
{
  return View.layoutValue<A>(key:value:)();
}

unint64_t sub_1005D7404()
{
  unint64_t result = qword_1010B1F40;
  if (!qword_1010B1F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B1F40);
  }
  return result;
}

ValueMetadata *type metadata accessor for HeightConstrainingElement()
{
  return &type metadata for HeightConstrainingElement;
}

ValueMetadata *type metadata accessor for HeightConstrainedHStackLayout()
{
  return &type metadata for HeightConstrainedHStackLayout;
}

unint64_t sub_1005D747C()
{
  unint64_t result = qword_1010B1F48;
  if (!qword_1010B1F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B1F48);
  }
  return result;
}

unint64_t sub_1005D74D4()
{
  unint64_t result = qword_1010B1F50;
  if (!qword_1010B1F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B1F50);
  }
  return result;
}

uint64_t sub_1005D7528(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (a2 >= 1)
  {
    if (v5 < 0 || v5 >= (unint64_t)a2) {
      goto LABEL_9;
    }
    return 0;
  }
  if (v5 <= 0 && v5 > a2) {
    return 0;
  }
LABEL_9:
  BOOL v6 = __OFADD__(result, a2);
  result += a2;
  if (v6)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  if (result < a4 || result > a5) {
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_1005D7590(void (**a1)(char *, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, int a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  int v114 = a5;
  uint64_t v133 = a4;
  uint64_t v123 = a3;
  uint64_t v124 = a2;
  uint64_t v136 = a1;
  uint64_t v109 = type metadata accessor for ViewSpacing();
  uint64_t v122 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  double v108 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  double v107 = (char *)&v104 - v15;
  uint64_t v16 = sub_100063814(&qword_1010A1508);
  uint64_t v130 = *(unsigned int (***)(unint64_t *, uint64_t, uint64_t))(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v112 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for LayoutSubview();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  v126 = (char *)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v125 = (char *)&v104 - v22;
  __chkstk_darwin(v23);
  id v127 = (char *)&v104 - v24;
  __chkstk_darwin(v25);
  unint64_t v27 = (char *)&v104 - v26;
  __chkstk_darwin(v28);
  CGFloat v111 = (char *)&v104 - v29;
  uint64_t v30 = sub_100063814(&qword_1010B1F58);
  __chkstk_darwin(v30 - 8);
  uint64_t v134 = (uint64_t *)((char *)&v104 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v32);
  v120 = (char *)&v104 - v33;
  uint64_t v34 = type metadata accessor for LayoutSubviews();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v104 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100063814(&qword_1010B1F60);
  __chkstk_darwin(v38 - 8);
  uint64_t v40 = (char *)&v104 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100063814(&qword_1010B1F68);
  uint64_t v42 = v41 - 8;
  __chkstk_darwin(v41);
  uint64_t v44 = (char *)&v104 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100063814(&qword_1010B1F70);
  __chkstk_darwin(v45 - 8);
  uint64_t v128 = (uint64_t)&v104 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  uint64_t v132 = (char *)&v104 - v48;
  __n128 v50 = __chkstk_darwin(v49);
  unint64_t v138 = *(void (**)(__n128))(v19 + 56);
  uint64_t v139 = v19 + 56;
  uint64_t v137 = (uint64_t)&v104 - v51;
  v138(v50);
  char v52 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  uint64_t v53 = v34;
  uint64_t v118 = v35 + 16;
  double v117 = v52;
  v52(v40, (uint64_t)v136, v34);
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v37, v40, v34);
  sub_1005D8274(&qword_1010B1F78);
  double v119 = v37;
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v110 = *(int *)(v42 + 44);
  *(void *)&v44[v110] = 0;
  uint64_t v54 = &v44[*(int *)(sub_100063814(&qword_1010B1F80) + 36)];
  uint64_t v55 = sub_1005D8274(&qword_1010B1F88);
  uint64_t v56 = (uint64_t)v44;
  uint64_t v129 = (void (**)(char *))(v139 - 40);
  CGFloat v116 = (void (**)(char *, uint64_t))(v35 + 8);
  v135 = (unsigned int (**)(char *, uint64_t, uint64_t))(v139 - 8);
  uint64_t v136 = (void (**)(char *, uint64_t, uint64_t))(v139 - 24);
  id v131 = (void (**)(void *, uint64_t, uint64_t, uint64_t))(v130 + 7);
  v130 += 6;
  uint64_t v106 = (void (**)(char *, uint64_t))(v122 + 8);
  uint64_t v113 = (void (**)(char *, uint64_t))(v139 - 48);
  uint64_t v57 = (unint64_t *)v120;
  double v58 = 0.0;
  uint64_t v59 = v133;
  uint64_t v122 = v34;
  uint64_t v133 = v56;
  CGFloat v115 = v54;
  uint64_t v121 = v55;
  double v105 = v27;
  while (1)
  {
    uint64_t v61 = *(void *)v54;
    uint64_t v62 = v56;
    dispatch thunk of Collection.endIndex.getter();
    if (v61 == v141)
    {
      uint64_t v63 = (uint64_t)v132;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v138)(v132, 1, 1, v18);
LABEL_7:
      sub_1000637B8(v63, &qword_1010B1F70);
      uint64_t v68 = 1;
      uint64_t v69 = (void (**)(char *, char *, uint64_t))v136;
      goto LABEL_10;
    }
    uint64_t v64 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
    unint64_t v65 = v132;
    (*v129)(v132);
    v64(&v141, 0);
    uint64_t v66 = v119;
    v117(v119, v62, v53);
    dispatch thunk of Collection.formIndex(after:)();
    uint64_t v67 = v66;
    uint64_t v63 = (uint64_t)v65;
    (*v116)(v67, v53);
    ((void (*)(char *, void, uint64_t, uint64_t))v138)(v65, 0, 1, v18);
    if ((*v135)(v65, 1, v18) == 1) {
      goto LABEL_7;
    }
    uint64_t v69 = (void (**)(char *, char *, uint64_t))v136;
    uint64_t v70 = *v136;
    uint64_t v71 = v111;
    (*v136)(v111, v63, v18);
    uint64_t v72 = &v112[*(int *)(v16 + 48)];
    uint64_t v73 = v133;
    uint64_t v74 = v110;
    uint64_t v75 = *(void *)(v133 + v110);
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v70)(v72, v71, v18);
    if (__OFADD__(v75, 1)) {
      goto LABEL_27;
    }
    *(void *)(v73 + v74) = v75 + 1;
    double v77 = (char *)v134 + *(int *)(v16 + 48);
    *uint64_t v134 = v75;
    v70(v77, (uint64_t)v72, v18);
    uint64_t v68 = 0;
    uint64_t v57 = (unint64_t *)v120;
    uint64_t v54 = v115;
LABEL_10:
    uint64_t v78 = (uint64_t)v134;
    (*v131)(v134, v68, 1, v16);
    sub_10003CABC(v78, (uint64_t)v57, &qword_1010B1F58);
    if ((*v130)(v57, 1, v16) == 1)
    {
      sub_1000637B8(v133, &qword_1010B1F68);
      return sub_1000637B8(v137, &qword_1010B1F70);
    }
    unint64_t v79 = *v57;
    uint64_t v80 = *v69;
    (*v69)(v27, (char *)v57 + *(int *)(v16 + 48), v18);
    uint64_t v81 = v128;
    sub_10006CAB8(v137, v128, &qword_1010B1F70);
    if ((*v135)((char *)v81, 1, v18) == 1)
    {
      sub_1000637B8(v81, &qword_1010B1F70);
    }
    else
    {
      uint64_t v82 = v127;
      v80(v127, (char *)v81, v18);
      uint64_t v83 = *v129;
      ((void (*)(char *, char *, uint64_t))*v129)(v125, v82, v18);
      ((void (*)(char *, char *, uint64_t))v83)(v126, v27, v18);
      if (v114)
      {
        char v86 = v126;
        double v87 = v107;
        uint64_t v88 = v125;
        LayoutSubview.spacing.getter();
        unint64_t v89 = v88;
        uint64_t v90 = v16;
        uint64_t v91 = v108;
        LayoutSubview.spacing.getter();
        ViewSpacing.distance(to:along:)();
        double v85 = v92;
        id v93 = *v106;
        uint64_t v94 = v91;
        uint64_t v95 = v109;
        (*v106)(v94, v109);
        uint64_t v96 = v87;
        double v97 = v127;
        uint64_t v98 = v95;
        uint64_t v16 = v90;
        uint64_t v99 = v89;
        unint64_t v27 = v105;
        v93(v96, v98);
        double v100 = *v113;
        (*v113)(v86, v18);
        v100(v99, v18);
        double v101 = v97;
        uint64_t v54 = v115;
        v100(v101, v18);
      }
      else
      {
        uint64_t v84 = *v113;
        (*v113)(v126, v18);
        v84(v125, v18);
        v84(v127, v18);
        double v85 = *(double *)&v59;
      }
      uint64_t v57 = (unint64_t *)v120;
      double v58 = v58 + v85;
    }
    uint64_t result = type metadata accessor for HeightConstrainedHStackLayout.Cache();
    if ((v79 & 0x8000000000000000) != 0) {
      break;
    }
    uint64_t v102 = *(void *)(v124 + *(int *)(result + 24));
    if (v79 >= *(void *)(v102 + 16)) {
      goto LABEL_26;
    }
    double v103 = *(double *)(v102 + 16 * v79 + 32);
    static VerticalAlignment.top.getter();
    if (static VerticalAlignment.== infix(_:_:)())
    {
LABEL_2:
      static UnitPoint.topLeading.getter();
      goto LABEL_3;
    }
    static VerticalAlignment.center.getter();
    if (static VerticalAlignment.== infix(_:_:)())
    {
      v142.origin.x = a6;
      v142.origin.y = a7;
      v142.size.width = a8;
      v142.size.height = a9;
      CGRectGetHeight(v142);
      static UnitPoint.leading.getter();
    }
    else
    {
      static VerticalAlignment.bottom.getter();
      if ((static VerticalAlignment.== infix(_:_:)() & 1) == 0) {
        goto LABEL_2;
      }
      v143.origin.x = a6;
      v143.origin.y = a7;
      v143.size.width = a8;
      v143.size.height = a9;
      CGRectGetHeight(v143);
      static UnitPoint.bottomLeading.getter();
    }
LABEL_3:
    LOBYTE(v141) = 0;
    char v140 = 0;
    LayoutSubview.place(at:anchor:proposal:)();
    uint64_t v60 = v137;
    sub_1000637B8(v137, &qword_1010B1F70);
    double v58 = v58 + v103;
    v80((char *)v60, v27, v18);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v138)(v60, 0, 1, v18);
    uint64_t v53 = v122;
    uint64_t v56 = v133;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1005D8274(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LayoutSubviews();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for HeightConstrainedHStackLayout.Cache()
{
  uint64_t result = qword_1010B1FF0;
  if (!qword_1010B1FF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005D8304@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1005D698C(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_1005D8328()
{
  unint64_t result = qword_1010B1F90;
  if (!qword_1010B1F90)
  {
    sub_10006389C(&qword_1010B1F60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B1F90);
  }
  return result;
}

uint64_t sub_1005D8384@<X0>(void *a1@<X8>)
{
  uint64_t result = LayoutSubview.priority.getter();
  *a1 = v3;
  return result;
}

uint64_t *sub_1005D83B0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for LayoutSubviews();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)uint64_t v10 = *(void *)v11;
    v10[8] = v11[8];
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1005D84AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LayoutSubviews();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005D852C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LayoutSubviews();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1005D85D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LayoutSubviews();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005D869C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LayoutSubviews();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1005D873C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LayoutSubviews();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1005D87EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005D8800);
}

uint64_t sub_1005D8800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LayoutSubviews();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1005D88C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005D88D4);
}

uint64_t sub_1005D88D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for LayoutSubviews();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1005D8990()
{
  uint64_t result = type metadata accessor for LayoutSubviews();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1005D8A3C(uint64_t a1)
{
  uint64_t v59 = a1;
  uint64_t v57 = sub_100063814(&qword_1010B21F0);
  uint64_t v1 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B21F8);
  __chkstk_darwin(v4);
  sub_1005E08EC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x656874206E65704FLL;
  v5._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v6 = sub_1005E18B8();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 1650553888;
  v7._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v55 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v60 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v8 = v57;
  v60(v3, v57);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0x20656D20776F6853;
  v9._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  unint64_t v58 = v6;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 1650553888;
  v10._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v54 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v56 = v1 + 8;
  v60(v3, v8);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x20656D20656B6154;
  v11._object = (void *)0xEF20656874206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 1650553888;
  v12._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v53 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v57;
  v60(v3, v57);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x6874206F74206F47;
  v14._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 1650553888;
  v15._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v52 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v60;
  v60(v3, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0x7420686374697753;
  v17._object = (void *)0xEE0020656874206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 1650553888;
  v18._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v16(v3, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._countAndFlagsBits = 0x207075206C6C7550;
  v19._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 1650553888;
  v20._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v16(v3, v57);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._countAndFlagsBits = 0x206E65704FLL;
  v21._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v60(v3, v57);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._countAndFlagsBits = 0x20656D20776F6853;
  v23._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v25 = v57;
  v60(v3, v57);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._countAndFlagsBits = 0x20656D20656B6154;
  v26._object = (void *)0xEB00000000206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v60(v3, v25);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._countAndFlagsBits = 0x206F74206F47;
  v28._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v46 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v60(v3, v57);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v30._object = (void *)0xEA0000000000206FLL;
  v30._countAndFlagsBits = 0x7420686374697753;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v32 = v57;
  uint64_t v33 = v60;
  v60(v3, v57);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v34._countAndFlagsBits = 0x207075206C6C7550;
  v34._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v33(v3, v32);
  sub_100063814(qword_1010B2208);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_100E338C0;
  uint64_t v38 = v54;
  *(void *)(v37 + 32) = v55;
  *(void *)(v37 + 40) = v38;
  uint64_t v39 = v52;
  *(void *)(v37 + 48) = v53;
  *(void *)(v37 + 56) = v39;
  uint64_t v40 = v50;
  *(void *)(v37 + 64) = v51;
  *(void *)(v37 + 72) = v40;
  uint64_t v41 = v48;
  *(void *)(v37 + 80) = v49;
  *(void *)(v37 + 88) = v41;
  uint64_t v42 = v46;
  *(void *)(v37 + 96) = v47;
  *(void *)(v37 + 104) = v42;
  *(void *)(v37 + 112) = v45;
  *(void *)(v37 + 120) = v36;
  uint64_t v43 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_1005D95F0(uint64_t a1)
{
  uint64_t v57 = a1;
  uint64_t v58 = sub_100063814(&qword_1010B21D8);
  uint64_t v1 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B21E0);
  __chkstk_darwin(v4);
  sub_100268F50();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x656874206E65704FLL;
  v5._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v6 = sub_100267D10();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0x6C20796D206E6920;
  v7._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v55 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v60 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v8 = v58;
  v60(v3, v58);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0x20656D20776F6853;
  v9._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  unint64_t v59 = v6;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x6C20796D206E6920;
  v10._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v54 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v56 = v1 + 8;
  v60(v3, v8);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x20656D20656B6154;
  v11._object = (void *)0xEF20656874206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x6C20796D206E6920;
  v12._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v53 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v58;
  v60(v3, v58);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x6874206F74206F47;
  v14._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0x6C20796D206E6920;
  v15._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v52 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v60;
  v60(v3, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._countAndFlagsBits = 0x7420686374697753;
  v17._object = (void *)0xEE0020656874206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._countAndFlagsBits = 0x6C20796D206E6920;
  v18._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v16(v3, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._countAndFlagsBits = 0x207075206C6C7550;
  v19._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0x6C20796D206E6920;
  v20._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v16(v3, v58);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._countAndFlagsBits = 0x20796D206E65704FLL;
  v21._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v60(v3, v58);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._countAndFlagsBits = 0x20796D20776F6853;
  v23._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v25 = v58;
  v60(v3, v58);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._countAndFlagsBits = 0x20656D20656B6154;
  v26._object = (void *)0xEE0020796D206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v60(v3, v25);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._countAndFlagsBits = 0x796D206F74206F47;
  v28._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v46 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v60(v3, v58);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v30._countAndFlagsBits = 0x7420686374697753;
  v30._object = (void *)0xED000020796D206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v30);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v45 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v32 = v58;
  uint64_t v33 = v60;
  v60(v3, v58);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v34._countAndFlagsBits = 0x207075206C6C7550;
  v34._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v33(v3, v32);
  sub_100063814(&qword_1010B21E8);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_100E338C0;
  uint64_t v38 = v54;
  *(void *)(v37 + 32) = v55;
  *(void *)(v37 + 40) = v38;
  uint64_t v39 = v52;
  *(void *)(v37 + 48) = v53;
  *(void *)(v37 + 56) = v39;
  uint64_t v40 = v50;
  *(void *)(v37 + 64) = v51;
  *(void *)(v37 + 72) = v40;
  uint64_t v41 = v48;
  *(void *)(v37 + 80) = v49;
  *(void *)(v37 + 88) = v41;
  uint64_t v42 = v46;
  *(void *)(v37 + 96) = v47;
  *(void *)(v37 + 104) = v42;
  *(void *)(v37 + 112) = v45;
  *(void *)(v37 + 120) = v36;
  uint64_t v43 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_1005DA24C(uint64_t a1)
{
  uint64_t v35 = a1;
  uint64_t v1 = sub_100063814(&qword_1010B21C0);
  uint64_t v36 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B21C8);
  __chkstk_darwin(v4);
  sub_1000F5790();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._object = (void *)0x8000000100DC1C70;
  v5._countAndFlagsBits = 0xD00000000000001CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  unint64_t v32 = sub_1005E1820();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v7 = *(void (**)(char *, uint64_t))(v36 + 8);
  v36 += 8;
  uint64_t v33 = v1;
  Swift::String v34 = v7;
  v7(v3, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0xD000000000000020;
  unint64_t v28 = 0xD000000000000020;
  v8._object = (void *)0x8000000100DC1C90;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v10 = v34;
  v34(v3, v1);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0xD00000000000001ELL;
  unint64_t v27 = 0xD00000000000001ELL;
  v11._object = (void *)0x8000000100DC1CC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v3, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._object = (void *)0x8000000100DC1CE0;
  v13._countAndFlagsBits = v27;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v27 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v15 = v33;
  v34(v3, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._object = (void *)0x8000000100DC1D00;
  v16._countAndFlagsBits = v28;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v18 = v34;
  v34(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._object = (void *)0x8000000100DC1D30;
  v19._countAndFlagsBits = 0xD00000000000001CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v18(v3, v15);
  sub_100063814(&qword_1010B21D0);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100E25700;
  uint64_t v23 = v30;
  *(void *)(v22 + 32) = v31;
  *(void *)(v22 + 40) = v23;
  unint64_t v24 = v27;
  *(void *)(v22 + 48) = v29;
  *(void *)(v22 + 56) = v24;
  *(void *)(v22 + 64) = v28;
  *(void *)(v22 + 72) = v21;
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_1005DA8F4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1005E1820();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1000F5790();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100063814(&qword_1010B2080);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100E251D0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1005DAA5C()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_100063814(&qword_1010B2040);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100E251F0;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1005DAB28(uint64_t a1)
{
  uint64_t v28 = sub_100063814(&qword_1010B21A0);
  uint64_t v30 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B21A8);
  __chkstk_darwin(v4);
  sub_1003DC080();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x64616F6C6E776F44;
  v5._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  uint64_t v23 = sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  uint64_t v29 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v26 = v7;
  unint64_t v27 = v8;
  v30 += 8;
  uint64_t v9 = v28;
  v8(v3, v28);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0x64616F6C6E776F44;
  v10._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._object = (void *)0xEC000000656E6F68;
  v11._countAndFlagsBits = 0x7020796D206F7420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v12 = v27;
  v27(v3, v9);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v13._countAndFlagsBits = 0x2065766153;
  v13._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v14._countAndFlagsBits = 0x66666F20726F6620;
  v14._object = (void *)0xEC000000656E696CLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v15 = v28;
  v12(v3, v28);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0x2065766153;
  v16._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._object = (void *)0x8000000100DC1C50;
  v17._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v27(v3, v15);
  sub_100063814(&qword_1010B21B0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_100E26B70;
  uint64_t v20 = v25;
  *(void *)(v19 + 32) = v26;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 48) = v24;
  *(void *)(v19 + 56) = v18;
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1005DB078()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1003DC080();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100063814(&qword_1010B2080);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100E251D0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1005DB214(uint64_t a1)
{
  v15[1] = a1;
  uint64_t v17 = sub_100063814(&qword_1010B2188);
  uint64_t v1 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B2190);
  __chkstk_darwin(v4);
  sub_1003734C4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x2065766F6D6552;
  v5._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x796D206D6F726620;
  v6._object = (void *)0xEE00656E6F687020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v8 = v17;
  v7(v3, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0x206574656C6544;
  v9._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x796D206D6F726620;
  v10._object = (void *)0xED00006461506920;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v11 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v7(v3, v8);
  sub_100063814(&qword_1010B2198);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100E251B0;
  *(void *)(v12 + 32) = v16;
  *(void *)(v12 + 40) = v11;
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1005DB590()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1003734C4();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100063814(&qword_1010B2080);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100E251D0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1005DB728(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010B2170);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  uint64_t v44 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_1010B2178);
  __chkstk_darwin(v6);
  sub_1005E1330();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v7._countAndFlagsBits = 0x657469726F766146;
  v7._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  swift_getKeyPath();
  uint64_t v40 = sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  uint64_t v42 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v39 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = v44 + 8;
  uint64_t v41 = *(void (**)(char *, uint64_t))(v44 + 8);
  v41(v5, v2);
  uint64_t v44 = v9;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 543450177;
  v10._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._object = (void *)0x8000000100DC1C10;
  uint64_t v36 = (void *)0x8000000100DC1C10;
  v11._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v38 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v12 = v43;
  uint64_t v13 = v41;
  v41(v5, v43);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 544503120;
  v14._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._object = (void *)0x8000000100DC1C30;
  v15._countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v37 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v13(v5, v12);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0x2065766153;
  v16._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0xD000000000000010;
  v17._object = v36;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = (void *)static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v18 = v41;
  v41(v5, v43);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._countAndFlagsBits = 0x207472616548;
  v19._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v18(v5, v43);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v21._countAndFlagsBits = 0x2065766F6C2049;
  v21._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v23 = v43;
  v41(v5, v43);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v24._countAndFlagsBits = 0x20656B696C2049;
  v24._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v41(v5, v23);
  sub_100063814(&qword_1010B2180);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_100E26F30;
  uint64_t v28 = v38;
  *(void *)(v27 + 32) = v39;
  *(void *)(v27 + 40) = v28;
  uint64_t v29 = v36;
  *(void *)(v27 + 48) = v37;
  *(void *)(v27 + 56) = v29;
  uint64_t v30 = v34;
  *(void *)(v27 + 64) = v35;
  *(void *)(v27 + 72) = v30;
  *(void *)(v27 + 80) = v26;
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1005DBECC()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1005E1330();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100063814(&qword_1010B2080);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100E251D0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1005DC064(uint64_t a1)
{
  uint64_t v16 = a1;
  uint64_t v1 = sub_100063814(&qword_1010B2158);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v18 = v1;
  uint64_t v19 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100063814(&qword_1010B2160);
  __chkstk_darwin(v5);
  sub_1005E1384();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0x2065766F6D6552;
  v6._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0xD000000000000012;
  v7._object = (void *)0x8000000100DC1BF0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = v18;
  uint64_t v9 = *(void (**)(char *, uint64_t))(v19 + 8);
  v19 += 8;
  v9(v4, v18);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0x206574656C6544;
  v10._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0xD000000000000012;
  v11._object = (void *)0x8000000100DC1BF0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v12 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v9(v4, v8);
  sub_100063814(&qword_1010B2168);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100E251B0;
  *(void *)(v13 + 32) = v17;
  *(void *)(v13 + 40) = v12;
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1005DC3CC()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1005E1384();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100063814(&qword_1010B2080);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100E251D0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1005DC564()
{
  uint64_t v0 = sub_100063814(&qword_1010B2140);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v22 = v0;
  uint64_t v23 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B2148);
  __chkstk_darwin(v4);
  sub_1005E13D8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._object = (void *)0x8000000100DC1BD0;
  v5._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = v22;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v23 + 8);
  v23 += 8;
  v19(v3, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0x20657461682049;
  v8._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v10 = v19;
  v19(v3, v7);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x746F6E206F642049;
  v11._object = (void *)0xEE0020656B696C20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v3, v22);
  sub_100063814(&qword_1010B2150);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100E251F0;
  uint64_t v15 = v20;
  *(void *)(v14 + 32) = v21;
  *(void *)(v14 + 40) = v15;
  *(void *)(v14 + 48) = v13;
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1005DC99C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1005E13D8();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100063814(&qword_1010B2080);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100E251D0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1005DCB34(uint64_t a1)
{
  v15[1] = a1;
  uint64_t v17 = sub_100063814(&qword_1010B2128);
  uint64_t v1 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B2130);
  __chkstk_darwin(v4);
  sub_1005C2FD8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._object = (void *)0x8000000100DC1BB0;
  v5._countAndFlagsBits = 0xD000000000000017;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v8 = v17;
  v7(v3, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0x2073706168726550;
  v9._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x20746F6E20736920;
  v10._object = (void *)0xEE00646162206F73;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v11 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v7(v3, v8);
  sub_100063814(&qword_1010B2138);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100E251B0;
  *(void *)(v12 + 32) = v16;
  *(void *)(v12 + 40) = v11;
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1005DCE9C()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1005C2FD8();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100063814(&qword_1010B2080);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100E251D0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1005DD034(uint64_t a1)
{
  uint64_t v21 = sub_100063814(&qword_1010B2110);
  uint64_t v23 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B2118);
  __chkstk_darwin(v4);
  sub_100551460();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 543450177;
  v5._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  v19[1] = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x6C20796D206F7420;
  v6._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19[0] = *(void *)(v23 + 8);
  uint64_t v22 = v7;
  v23 += 8;
  uint64_t v8 = v21;
  ((void (*)(char *, uint64_t))v19[0])(v3, v21);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 544503120;
  v9._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._countAndFlagsBits = 0x6C20796D206E6920;
  v10._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v11 = (void (*)(char *, uint64_t))v19[0];
  ((void (*)(char *, uint64_t))v19[0])(v3, v8);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v12._countAndFlagsBits = 0x2065766153;
  v12._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v13._countAndFlagsBits = 0x6C20796D206F7420;
  v13._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v11(v3, v8);
  sub_100063814(&qword_1010B2120);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100E251F0;
  uint64_t v16 = v20;
  *(void *)(v15 + 32) = v22;
  *(void *)(v15 + 40) = v16;
  *(void *)(v15 + 48) = v14;
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1005DD498()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100551460();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100063814(&qword_1010B2080);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100E251D0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1005DD630(uint64_t a1)
{
  uint64_t v16 = a1;
  uint64_t v1 = sub_100063814(&qword_1010B20F8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v18 = v1;
  uint64_t v19 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100063814(&qword_1010B2100);
  __chkstk_darwin(v5);
  sub_100553360();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v6._countAndFlagsBits = 0x206574656C6544;
  v6._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  swift_getKeyPath();
  sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v7._countAndFlagsBits = 0xD000000000000010;
  v7._object = (void *)0x8000000100DC1B90;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v17 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v8 = v18;
  Swift::String v9 = *(void (**)(char *, uint64_t))(v19 + 8);
  v19 += 8;
  v9(v4, v18);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._countAndFlagsBits = 0x2065766F6D6552;
  v10._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._countAndFlagsBits = 0xD000000000000010;
  v11._object = (void *)0x8000000100DC1B90;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v12 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v9(v4, v8);
  sub_100063814(&qword_1010B2108);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100E251B0;
  *(void *)(v13 + 32) = v17;
  *(void *)(v13 + 40) = v12;
  uint64_t v14 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1005DD998()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100553360();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100063814(&qword_1010B2080);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100E251D0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1005DDB30(uint64_t a1)
{
  uint64_t v36 = a1;
  uint64_t v35 = sub_100063814(&qword_1010B20E0);
  uint64_t v1 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B20F0);
  __chkstk_darwin(v4);
  sub_1005E142C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x656874206E65704FLL;
  v5._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  v28[1] = sub_1005E15BC(&qword_1010B20D0, &qword_1010AE9B0, (void (*)(void))sub_1005E1634);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = v1 + 8;
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v32 = v7;
  uint64_t v33 = v8;
  uint64_t v10 = v35;
  v8(v3, v35);
  uint64_t v34 = v9;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x20656D20776F6853;
  v11._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v33;
  v33(v3, v10);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x6874206F74206F47;
  v14._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v13(v3, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0x207075206C6C7550;
  v16._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v18 = v35;
  uint64_t v19 = v33;
  v33(v3, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0x20656D20656B6154;
  v20._object = (void *)0xEF20656874206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v3, v18);
  sub_100063814(&qword_1010B20E8);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_100E338D0;
  uint64_t v24 = v31;
  *(void *)(v23 + 32) = v32;
  *(void *)(v23 + 40) = v24;
  uint64_t v25 = v29;
  *(void *)(v23 + 48) = v30;
  *(void *)(v23 + 56) = v25;
  *(void *)(v23 + 64) = v22;
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1005DE12C()
{
  uint64_t v0 = sub_100063814(&qword_1010B20E0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E142C();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v4(v3, v0);
  sub_100063814(&qword_1010B20E8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100E338D0;
  *(void *)(v9 + 32) = v13;
  *(void *)(v9 + 40) = v5;
  *(void *)(v9 + 48) = v6;
  *(void *)(v9 + 56) = v7;
  *(void *)(v9 + 64) = v8;
  uint64_t v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1005DE3E0()
{
  uint64_t v0 = sub_100063814(&qword_1010B20B8);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v22 = v0;
  uint64_t v23 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B20C8);
  __chkstk_darwin(v4);
  sub_10055F4AC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x68742065736F6C43;
  v5._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005E15BC(&qword_1010B20D0, &qword_1010AE9B0, (void (*)(void))sub_1005E1634);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = v22;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v23 + 8);
  v23 += 8;
  v19(v3, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0x6568742065646948;
  v8._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v19;
  v19(v3, v7);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x207373696D736944;
  v11._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v3, v22);
  sub_100063814(&qword_1010B20C0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100E251F0;
  uint64_t v15 = v20;
  *(void *)(v14 + 32) = v21;
  *(void *)(v14 + 40) = v15;
  *(void *)(v14 + 48) = v13;
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1005DE80C()
{
  uint64_t v0 = sub_100063814(&qword_1010B20B8);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10055F4AC();
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v4 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_100063814(&qword_1010B20C0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100E251F0;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v6;
  *(void *)(v8 + 48) = v7;
  uint64_t v9 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1005DEA18(uint64_t a1)
{
  uint64_t v36 = a1;
  uint64_t v35 = sub_100063814(&qword_1010B20A0);
  uint64_t v1 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B20A8);
  __chkstk_darwin(v4);
  sub_1000F59B4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x206E65704FLL;
  v5._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  v28[1] = sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v9 = v1 + 8;
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v32 = v7;
  uint64_t v33 = v8;
  uint64_t v10 = v35;
  v8(v3, v35);
  uint64_t v34 = v9;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x20656D20776F6853;
  v11._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v31 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v13 = v33;
  v33(v3, v10);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v14._countAndFlagsBits = 0x206F74206F47;
  v14._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v13(v3, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0x207075206C6C7550;
  v16._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v18 = v35;
  uint64_t v19 = v33;
  v33(v3, v35);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v20._countAndFlagsBits = 0x20656D20656B6154;
  v20._object = (void *)0xEB00000000206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v19(v3, v18);
  sub_100063814(&qword_1010B20B0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_100E338D0;
  uint64_t v24 = v31;
  *(void *)(v23 + 32) = v32;
  *(void *)(v23 + 40) = v24;
  uint64_t v25 = v29;
  *(void *)(v23 + 48) = v30;
  *(void *)(v23 + 56) = v25;
  *(void *)(v23 + 64) = v22;
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1005DEFF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GenericMusicItemEntity();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1000F589C(a1, (uint64_t)&v9 - v6);
  sub_1000F589C((uint64_t)v7, (uint64_t)v4);
  IntentParameter.wrappedValue.setter();
  return sub_1000F5900((uint64_t)v7);
}

uint64_t sub_1005DF0B8()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1005E1534((unint64_t *)&qword_10109A660, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1000F59B4();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100063814(&qword_1010B2080);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100E251D0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1005DF250()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_100063814(&qword_1010B2040);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100E26B70;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1005DF344()
{
  uint64_t v0 = sub_100063814(&qword_1010B2088);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v22 = v0;
  uint64_t v23 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B2090);
  __chkstk_darwin(v4);
  sub_100253224();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x6620686372616553;
  v5._object = (void *)0xEB0000000020726FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005E1534(&qword_1010B2070, (void (*)(uint64_t))&type metadata accessor for StringSearchCriteria);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = v22;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v23 + 8);
  v23 += 8;
  v19(v3, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0x20646E6946;
  v8._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v19;
  v19(v3, v7);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x726F66206B6F6F4CLL;
  v11._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v3, v22);
  sub_100063814(&qword_1010B2098);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100E251F0;
  uint64_t v15 = v20;
  *(void *)(v14 + 32) = v21;
  *(void *)(v14 + 40) = v15;
  *(void *)(v14 + 48) = v13;
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1005DF774(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StringSearchCriteria();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::String v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = __chkstk_darwin(v6);
  Swift::String v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_1005DF8A8()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1005E1534(&qword_1010B2070, (void (*)(uint64_t))&type metadata accessor for StringSearchCriteria);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100253224();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100063814(&qword_1010B2080);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100E251D0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1005DFA44()
{
  uint64_t v0 = sub_100063814(&qword_1010B2088);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v22 = v0;
  uint64_t v23 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B2090);
  __chkstk_darwin(v4);
  sub_100253224();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x6620686372616553;
  v5._object = (void *)0xEB0000000020726FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005E1534(&qword_1010B2070, (void (*)(uint64_t))&type metadata accessor for StringSearchCriteria);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x6C707041206E6920;
  v6._object = (void *)0xEF636973754D2065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = v22;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v23 + 8);
  v23 += 8;
  v19(v3, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0x20646E6946;
  v8._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x6C707041206E6920;
  v9._object = (void *)0xEF636973754D2065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v19;
  v19(v3, v7);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x726F66206B6F6F4CLL;
  v11._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x6C707041206E6920;
  v12._object = (void *)0xEF636973754D2065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v3, v22);
  sub_100063814(&qword_1010B2098);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100E251F0;
  uint64_t v15 = v20;
  *(void *)(v14 + 32) = v21;
  *(void *)(v14 + 40) = v15;
  *(void *)(v14 + 48) = v13;
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1005DFEBC()
{
  return sub_1005E03A4();
}

uint64_t sub_1005DFEE8()
{
  return sub_1005E0738();
}

uint64_t sub_1005DFF00()
{
  uint64_t v0 = sub_100063814(&qword_1010B2088);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v22 = v0;
  uint64_t v23 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B2090);
  __chkstk_darwin(v4);
  sub_100253224();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v5._countAndFlagsBits = 0x6620686372616553;
  v5._object = (void *)0xEB0000000020726FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v5);
  swift_getKeyPath();
  sub_1005E1534(&qword_1010B2070, (void (*)(uint64_t))&type metadata accessor for StringSearchCriteria);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v6._countAndFlagsBits = 0x6C20796D206E6920;
  v6._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v6);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v7 = v22;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v23 + 8);
  v23 += 8;
  v19(v3, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._countAndFlagsBits = 0x20646E6946;
  v8._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._countAndFlagsBits = 0x6C20796D206E6920;
  v9._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v10 = v19;
  v19(v3, v7);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._countAndFlagsBits = 0x726F66206B6F6F4CLL;
  v11._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v12._countAndFlagsBits = 0x6C20796D206E6920;
  v12._object = (void *)0xEE00797261726269;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v10(v3, v22);
  sub_100063814(&qword_1010B2098);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100E251F0;
  uint64_t v15 = v20;
  *(void *)(v14 + 32) = v21;
  *(void *)(v14 + 40) = v15;
  *(void *)(v14 + 48) = v13;
  uint64_t v16 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1005E0378()
{
  return sub_1005E03A4();
}

uint64_t sub_1005E03A4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1005E1534(&qword_1010B2070, (void (*)(uint64_t))&type metadata accessor for StringSearchCriteria);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_100253224();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  Swift::String v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  swift_getKeyPath();
  sub_1005E15BC(&qword_1010B2078, &qword_1010A06C8, (void (*)(void))sub_1002517A8);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  v5(v3, v0);
  sub_100063814(&qword_1010B2080);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100E251B0;
  *(void *)(v7 + 32) = v4;
  *(void *)(v7 + 40) = v6;
  uint64_t v8 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1005E05D0()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_100063814(&qword_1010B2040);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100E25700;
  *(void *)(v6 + 32) = v0;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 72) = v5;
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1005E0704()
{
  return sub_1005E0738();
}

uint64_t sub_1005E071C()
{
  return sub_1005E0738();
}

uint64_t sub_1005E0738()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_100063814(&qword_1010B2040);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100E251D0;
  *(void *)(v1 + 32) = v0;
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1005E07A4()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E08EC();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  uint64_t v4 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100063814(&qword_1010B2038);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100E251D0;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

ValueMetadata *type metadata accessor for MusicAssistantIntentsProvider()
{
  return &type metadata for MusicAssistantIntentsProvider;
}

unint64_t sub_1005E08EC()
{
  unint64_t result = qword_1010B2030;
  if (!qword_1010B2030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2030);
  }
  return result;
}

uint64_t sub_1005E0940()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1007AE300();
  sub_1005E08EC();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v36 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  uint64_t v37 = sub_10026A2EC();
  sub_100268F50();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v35 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_1000F5454();
  sub_1000F5790();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v34 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_1003DBCF8();
  sub_1003DC080();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v33 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_1003730E4();
  sub_1003734C4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v32 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_1007C2AF4();
  sub_1005E1330();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v31 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_10079661C();
  sub_1005E1384();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v30 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_1007B2930();
  sub_1005E13D8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v29 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_1005C2C50();
  sub_1005C2FD8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v28 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_1005510D8();
  sub_100551460();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v27 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_100552FD8();
  sub_100553360();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v26 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_100649F08();
  sub_1005E142C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v25 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_100649F08();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v24 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_10055F144();
  sub_10055F4AC();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v23 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_10055F144();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v5 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_10064CA68();
  sub_1000F59B4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v6 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_100253A14();
  uint64_t v38 = v7;
  sub_100253224();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v8 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_100253A14();
  uint64_t v38 = v9;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v10 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v37 = sub_100253A14();
  uint64_t v38 = v11;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v12 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  sub_100063814(&qword_1010B2068);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100E3A240;
  uint64_t v14 = v35;
  *(void *)(v13 + 32) = v36;
  *(void *)(v13 + 40) = v14;
  uint64_t v15 = v33;
  *(void *)(v13 + 48) = v34;
  *(void *)(v13 + 56) = v15;
  uint64_t v16 = v31;
  *(void *)(v13 + 64) = v32;
  *(void *)(v13 + 72) = v16;
  uint64_t v17 = v29;
  *(void *)(v13 + 80) = v30;
  *(void *)(v13 + 88) = v17;
  uint64_t v18 = v27;
  *(void *)(v13 + 96) = v28;
  *(void *)(v13 + 104) = v18;
  uint64_t v19 = v25;
  *(void *)(v13 + 112) = v26;
  *(void *)(v13 + 120) = v19;
  uint64_t v20 = v23;
  *(void *)(v13 + 128) = v24;
  *(void *)(v13 + 136) = v20;
  *(void *)(v13 + 144) = v5;
  *(void *)(v13 + 152) = v6;
  *(void *)(v13 + 160) = v8;
  *(void *)(v13 + 168) = v10;
  *(void *)(v13 + 176) = v12;
  uint64_t v21 = static _AssistantIntent.Builder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v21;
}

unint64_t sub_1005E1330()
{
  unint64_t result = qword_1010B2048;
  if (!qword_1010B2048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2048);
  }
  return result;
}

unint64_t sub_1005E1384()
{
  unint64_t result = qword_1010B2050;
  if (!qword_1010B2050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2050);
  }
  return result;
}

unint64_t sub_1005E13D8()
{
  unint64_t result = qword_1010B2058;
  if (!qword_1010B2058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2058);
  }
  return result;
}

unint64_t sub_1005E142C()
{
  unint64_t result = qword_1010B2060;
  if (!qword_1010B2060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2060);
  }
  return result;
}

uint64_t sub_1005E1480()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1005E14A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1005E14E4()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1005E151C(uint64_t a1)
{
  return sub_1005DEFF8(a1);
}

uint64_t sub_1005E1534(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005E157C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1005E15BC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005E1634()
{
  unint64_t result = qword_1010B20D8;
  if (!qword_1010B20D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B20D8);
  }
  return result;
}

uint64_t sub_1005E168C()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t sub_1005E16C4()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1005E16E8(uint64_t a1)
{
  return sub_1005DEFF8(a1);
}

uint64_t sub_1005E1700(uint64_t a1)
{
  return sub_1005DEFF8(a1);
}

uint64_t sub_1005E1718(uint64_t a1)
{
  return sub_1005DEFF8(a1);
}

uint64_t sub_1005E1730(uint64_t a1)
{
  return sub_1005DEFF8(a1);
}

uint64_t sub_1005E1748(uint64_t a1)
{
  return sub_1005DEFF8(a1);
}

uint64_t sub_1005E1760(uint64_t a1)
{
  return sub_1005DEFF8(a1);
}

uint64_t sub_1005E1778(uint64_t a1)
{
  return sub_1005DEFF8(a1);
}

uint64_t sub_1005E1790(uint64_t a1)
{
  return sub_1005DEFF8(a1);
}

uint64_t sub_1005E17A8@<X0>(void *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1005E17E4()
{
  return IntentParameter.wrappedValue.setter();
}

unint64_t sub_1005E1820()
{
  unint64_t result = qword_1010B21B8;
  if (!qword_1010B21B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B21B8);
  }
  return result;
}

uint64_t sub_1005E1874@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

unint64_t sub_1005E18B8()
{
  unint64_t result = qword_1010B2200;
  if (!qword_1010B2200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2200);
  }
  return result;
}

uint64_t sub_1005E1938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v29 = a2;
  uint64_t v5 = type metadata accessor for DynamicTypeSize();
  __chkstk_darwin(v5 - 8);
  v25[1] = a1;
  uint64_t v26 = (uint64_t)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v27 = type metadata accessor for AdaptativeContainerStack._LayoutProvider();
  __chkstk_darwin(v27);
  uint64_t v10 = (char *)v25 - v9;
  uint64_t v30 = v11;
  uint64_t v31 = v7;
  uint64_t v32 = &off_100FE2138;
  uint64_t v33 = v8;
  uint64_t v12 = type metadata accessor for LayoutProviderStack();
  uint64_t v28 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v25 - v16;
  uint64_t v18 = *(void *)(v2 + 48);
  char v19 = *(unsigned char *)(v2 + 56);
  sub_100237EDC(v18, v19);
  char v20 = sub_1004DA7CC(v18, v19);
  sub_100237F44(v18, v19);
  uint64_t v21 = v26;
  sub_1004DA4FC(v26);
  sub_1005E1BE8(v20, v21, v10);
  LayoutProviderStack.init(layoutProvider:alignment:spacing:content:)((uint64_t)v10, *(void *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(unsigned char *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), v27, (uint64_t)v14);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1005CF83C(v14, v12, WitnessTable);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v28 + 8);
  swift_retain();
  v23(v14, v12);
  sub_1005CF83C(v17, v12, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v23)(v17, v12);
}

uint64_t sub_1005E1BE8@<X0>(char a1@<W0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = &a3[*(int *)(type metadata accessor for AdaptativeContainerStack._LayoutProvider() + 36)];
  uint64_t v5 = type metadata accessor for DynamicTypeSize();
  uint64_t v6 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

unint64_t sub_1005E1C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v11 = *v5;
  char v12 = DynamicTypeSize.isAccessibilitySize.getter();
  if (v11)
  {
    if (v12)
    {
      uint64_t v14 = static VerticalAlignment.top.getter();
      *(void *)(a5 + 24) = &type metadata for HStackLayout;
      unint64_t result = sub_1005E2DF4();
      *(void *)(a5 + 32) = result;
      *(void *)a5 = v14;
    }
    else
    {
      *(void *)(a5 + 24) = &type metadata for HeightConstrainedHStackLayout;
      unint64_t result = sub_1005E2DA0();
      *(void *)(a5 + 32) = result;
      *(void *)a5 = a2;
    }
  }
  else
  {
    *(void *)(a5 + 24) = &type metadata for VStackLayout;
    unint64_t result = sub_1005E2D4C();
    *(void *)(a5 + 32) = result;
    *(void *)a5 = a1;
  }
  *(void *)(a5 + 8) = a3;
  *(unsigned char *)(a5 + 16) = a4 & 1;
  return result;
}

uint64_t sub_1005E1D34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(unsigned char *)(a7 + 24) = a4 & 1;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  *(void *)(a7 + 48) = swift_getKeyPath();
  *(unsigned char *)(a7 + 56) = 0;
  uint64_t v8 = (uint64_t *)(a7 + *(int *)(type metadata accessor for AdaptativeContainerStack() + 48));
  *uint64_t v8 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_10109C850);

  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for AdaptativeContainerStack()
{
  return sub_10004CF5C();
}

void sub_1005E1E04()
{
  sub_1000D0540();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1005E1EBC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v7 = a2[5];
    *(void *)(v4 + 32) = a2[4];
    *(void *)(v4 + 40) = v7;
    uint64_t v8 = a2[6];
    char v9 = *((unsigned char *)a2 + 56);
    swift_retain();
    sub_100237EDC(v8, v9);
    *(void *)(v4 + 48) = v8;
    *(unsigned char *)(v4 + 56) = v9;
    uint64_t v10 = *(int *)(a3 + 48);
    char v11 = (void *)(v4 + v10);
    char v12 = (uint64_t *)((char *)a2 + v10);
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *char v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_1005E2020(uint64_t a1, uint64_t a2)
{
  swift_release();
  sub_100237F44(*(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  uint64_t v4 = a1 + *(int *)(a2 + 48);
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1005E20E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  char v8 = *(unsigned char *)(a2 + 56);
  swift_retain();
  sub_100237EDC(v7, v8);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = v8;
  uint64_t v9 = *(int *)(a3 + 48);
  uint64_t v10 = (void *)(a1 + v9);
  char v11 = (void *)(a2 + v9);
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1005E21F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(a2 + 48);
  char v9 = *(unsigned char *)(a2 + 56);
  sub_100237EDC(v8, v9);
  uint64_t v10 = *(void *)(a1 + 48);
  char v11 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = v9;
  sub_100237F44(v10, v11);
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 48);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_1005E232C(a1 + v12);
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005E232C(uint64_t a1)
{
  uint64_t v2 = sub_100063814((uint64_t *)&unk_10109C850);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005E238C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v4 = *(int *)(a3 + 48);
  uint64_t v5 = (const void *)(a2 + v4);
  uint64_t v6 = (void *)(a1 + v4);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v5, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v5, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1005E2488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  char v6 = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void *)(a1 + 48);
  char v8 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = v6;
  sub_100237F44(v7, v8);
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 48);
    uint64_t v10 = (void *)(a1 + v9);
    char v11 = (const void *)(a2 + v9);
    sub_1005E232C(a1 + v9);
    uint64_t v12 = sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1005E25B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005E25C4);
}

uint64_t sub_1005E25C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010B71B0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 48);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1005E2678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005E268C);
}

uint64_t sub_1005E268C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010B71B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 48);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1005E2738()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1005E277C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  return sub_1005E1C70(a1, a2, a3, a4 & 1, a5);
}

uint64_t type metadata accessor for AdaptativeContainerStack._LayoutProvider()
{
  return sub_10004CF5C();
}

uint64_t sub_1005E27A0()
{
  uint64_t result = type metadata accessor for DynamicTypeSize();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1005E2838(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 36);
    char v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1005E2904(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 36);
  uint64_t v3 = type metadata accessor for DynamicTypeSize();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

unsigned char *sub_1005E296C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = &a1[v4];
  char v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *sub_1005E29E8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = &a1[v4];
  char v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

unsigned char *sub_1005E2A64(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = &a1[v4];
  char v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *sub_1005E2AE0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = &a1[v4];
  char v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1005E2B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005E2B70);
}

uint64_t sub_1005E2B70(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    if (*a1 <= 2u) {
      int v4 = 2;
    }
    else {
      int v4 = *a1;
    }
    unsigned int v5 = v4 - 2;
    if (*a1 >= 2u) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    uint64_t v10 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = &a1[*(int *)(a3 + 36)];
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1005E2C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005E2C38);
}

unsigned char *sub_1005E2C38(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  unsigned int v5 = result;
  if (a3 == 253)
  {
    *uint64_t result = a2 + 2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 36)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1005E2CDC()
{
  return swift_getWitnessTable();
}

unint64_t sub_1005E2D4C()
{
  unint64_t result = qword_1010B2310;
  if (!qword_1010B2310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2310);
  }
  return result;
}

unint64_t sub_1005E2DA0()
{
  unint64_t result = qword_1010B2318;
  if (!qword_1010B2318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2318);
  }
  return result;
}

unint64_t sub_1005E2DF4()
{
  unint64_t result = qword_1010B2320;
  if (!qword_1010B2320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2320);
  }
  return result;
}

uint64_t sub_1005E2E48()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1005E2E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for ShareActivityItemProvider();
  if (objc_msgSendSuper2(&v16, "activityViewController:itemForActivityType:", a1, a2))
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v14 = 0u;
    long long v15 = 0u;
  }
  sub_10003CABC((uint64_t)&v14, (uint64_t)v17, (uint64_t *)&unk_10109BF40);
  sub_100058D80((uint64_t)v17, (uint64_t)&v14);
  if (*((void *)&v15 + 1))
  {
    sub_100058D80((uint64_t)&v14, (uint64_t)v13);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0) {
        uint64_t v7 = v11 & 0xFFFFFFFFFFFFLL;
      }
      if (!v7) {
        goto LABEL_19;
      }
    }
    if (swift_dynamicCast())
    {
      switch(v12 >> 62)
      {
        case 1uLL:
          sub_10007A5C4(v11, v12);
          uint64_t v8 = (int)v11;
          uint64_t v9 = v11 >> 32;
          break;
        case 2uLL:
          uint64_t v8 = *(void *)(v11 + 16);
          uint64_t v9 = *(void *)(v11 + 24);
          sub_10007A5C4(v11, v12);
          break;
        case 3uLL:
          sub_10007A5C4(v11, v12);
          goto LABEL_19;
        default:
          sub_10007A5C4(v11, v12);
          if ((v12 & 0xFF000000000000) == 0) {
            goto LABEL_19;
          }
          goto LABEL_16;
      }
      if (v8 == v9)
      {
LABEL_19:
        sub_1000637B8((uint64_t)v17, (uint64_t *)&unk_10109BF40);
        *a3 = 0u;
        a3[1] = 0u;
        sub_1000760E4((uint64_t)v13);
        return sub_1000637B8((uint64_t)&v14, (uint64_t *)&unk_10109BF40);
      }
    }
LABEL_16:
    sub_1000760E4((uint64_t)v13);
  }
  sub_10003CABC((uint64_t)v17, (uint64_t)a3, (uint64_t *)&unk_10109BF40);
  return sub_1000637B8((uint64_t)&v14, (uint64_t *)&unk_10109BF40);
}

id sub_1005E30D4(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_1005E2E8C((uint64_t)v6, (uint64_t)a4, &v17);

  uint64_t v9 = v18;
  if (v18)
  {
    uint64_t v10 = sub_100068990(&v17, v18);
    uint64_t v11 = *(void *)(v9 - 8);
    __n128 v12 = __chkstk_darwin(v10);
    long long v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
    long long v15 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    sub_1000760E4((uint64_t)&v17);
  }
  else
  {
    long long v15 = 0;
  }

  return v15;
}

void sub_1005E3238()
{
}

id sub_1005E32CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShareActivityItemProvider();
  return [super dealloc];
}

void sub_1005E3340(uint64_t a1)
{
}

uint64_t type metadata accessor for ShareActivityItemProvider()
{
  return sub_10004CF5C();
}

id sub_1005E3368(void *a1)
{
  id v1 = a1;
  sub_1005E33D8((uint64_t)v4);

  sub_100068990(v4, v4[3]);
  objc_super v2 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
  sub_1000760E4((uint64_t)v4);

  return v2;
}

_OWORD *sub_1005E33D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100063814((uint64_t *)&unk_10109BF50);
  __chkstk_darwin(v3 - 8);
  unsigned int v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v7 = __chkstk_darwin(v6).n128_u64[0];
  uint64_t v9 = (char *)v18 - v8;
  uint64_t v10 = *(void **)(v1 + qword_1010B2328);
  if (!v10)
  {
    uint64_t v14 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
LABEL_7:
    unint64_t result = (_OWORD *)sub_1000637B8((uint64_t)v9, (uint64_t *)&unk_10109BF50);
    *(void *)(a1 + 24) = &type metadata for String;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0xE000000000000000;
    return result;
  }
  id v11 = [v10 originalURL:v7];
  if (v11)
  {
    __n128 v12 = v11;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 0, 1, v13);
  }
  else
  {
    uint64_t v13 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  }
  sub_10003CABC((uint64_t)v5, (uint64_t)v9, (uint64_t *)&unk_10109BF50);
  type metadata accessor for URL();
  uint64_t v15 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v13) == 1) {
    goto LABEL_7;
  }
  uint64_t v19 = v13;
  long long v17 = sub_100068018(v18);
  (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 32))(v17, v9, v13);
  return sub_10007664C(v18, (_OWORD *)a1);
}

id sub_1005E3628(uint64_t a1)
{
  return *(id *)(a1 + qword_1010B2328);
}

id sub_1005E3638()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShareURLActivityItemProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for ShareURLActivityItemProvider()
{
  uint64_t result = qword_1010B23D8;
  if (!qword_1010B23D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005E36BC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1005E36F4()
{
  return type metadata accessor for ShareURLActivityItemProvider();
}

void sub_1005E36FC()
{
}

uint64_t sub_1005E372C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  if (qword_101098590 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100050A90(v11, (uint64_t)qword_101129CB0);
  swift_retain_n();
  __n128 v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  uint64_t v14 = &selRef_setObject_forKey_;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136447234;
    swift_retain();
    uint64_t v16 = sub_1005E61FC();
    uint64_t v91 = a7;
    unint64_t v18 = v17;
    swift_release();
    sub_100075D94(v16, v18, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2050;
    [*(id *)(a1 + 32) state];
    swift_release();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v15 + 22) = 2048;
    [*(id *)(a1 + 40) state];
    swift_release();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v15 + 32) = 2050;
    [*(id *)(a1 + 48) state];
    swift_release();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v15 + 42) = 2050;
    [*(id *)(a1 + 56) state];
    swift_release();
    a7 = v91;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Reversing %{public}s, tCVPA=%{public}ld fPOA=%ld sPOA=%{public}ld aA=%{public}ld", (uint8_t *)v15, 0x34u);
    swift_arrayDestroy();
    uint64_t v14 = &selRef_setObject_forKey_;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  _s13AnimationDataC7ContextCMa();
  uint64_t v19 = swift_allocObject();
  *(void *)(a1 + 80) = v19;
  swift_retain();
  swift_release();
  char v20 = &selRef_nowPlayingViewControllerCanShowMore_;
  if (*(unsigned char *)(a1 + 73) != 1)
  {
    int v34 = *(unsigned __int8 *)(a1 + 72);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.default.getter();
    BOOL v37 = os_log_type_enabled(v35, v36);
    if (v34 != 1)
    {
      if (v37)
      {
        uint64_t v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v48 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "reverse path 3", v48, 2u);
        swift_slowDealloc();
      }

      uint64_t v49 = *(void **)(a1 + 40);
      uint64_t v50 = swift_allocObject();
      *(void *)(v50 + 16) = v19;
      *(void *)(v50 + 24) = a1;
      double v100 = (uint64_t (*)())sub_1005E75D0;
      double v101 = (void *)v50;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v97 = 1107296256;
      uint64_t v98 = sub_1002DE0E4;
      uint64_t v99 = &unk_100FE23E8;
      uint64_t v51 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      id v52 = v49;
      swift_release();
      [v52 addCompletion:v51];
      _Block_release(v51);

      if ([*(id *)(a1 + 40) v14[183]] == (id)1)
      {
        id v53 = *(id *)(a1 + 40);
        objc_msgSend(v53, "setReversed:", objc_msgSend(v53, "isReversed") ^ 1);

        char v20 = &selRef_nowPlayingViewControllerCanShowMore_;
        uint64_t v27 = &selRef_setManagingNavigationController_;
        goto LABEL_37;
      }
      [*(id *)(a1 + 24) setAlpha:0.0];
      uint64_t v69 = *(void **)(a1 + 40);
      uint64_t v70 = swift_allocObject();
      *(void *)(v70 + 16) = a1;
      *(unsigned char *)(v70 + 24) = 0;
      double v100 = sub_1005E7610;
      double v101 = (void *)v70;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v97 = 1107296256;
      uint64_t v98 = sub_100020238;
      uint64_t v99 = &unk_100FE2438;
      uint64_t v71 = _Block_copy(&aBlock);
      swift_retain();
      id v72 = v69;
      swift_release();
      [v72 addAnimations:v71];
      _Block_release(v71);

      [*(id *)(a1 + 40) startAnimation];
      char v20 = &selRef_nowPlayingViewControllerCanShowMore_;
      goto LABEL_36;
    }
    if (v37)
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "reverse path 2 - secondPhaseStarted", v38, 2u);
      swift_slowDealloc();
    }

    if ([*(id *)(a1 + 48) v14[183]] == (id)1)
    {
      uint64_t v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.default.getter();
      uint64_t v41 = &selRef_setManagingNavigationController_;
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v42 = 0;
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "reverse path 2 - secondPhaseStarted - active", v42, 2u);
        swift_slowDealloc();
      }

      [*(id *)(a1 + 48) stopAnimation:0];
    }
    else
    {
      if ([*(id *)(a1 + 48) v14[183]] != (id)2)
      {
LABEL_31:
        uint64_t v57 = *(void **)(a1 + 48);
        uint64_t v58 = swift_allocObject();
        *(void *)(v58 + 16) = v8;
        *(unsigned char *)(v58 + 24) = 0;
        double v100 = (uint64_t (*)())sub_1005E7718;
        double v101 = (void *)v58;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v97 = 1107296256;
        uint64_t v98 = sub_100020238;
        uint64_t v99 = &unk_100FE2528;
        unint64_t v59 = _Block_copy(&aBlock);
        id v60 = v8;
        id v61 = v57;
        swift_release();
        [v61 addAnimations:v59];
        _Block_release(v59);

        uint64_t v62 = *(void **)(a1 + 48);
        uint64_t v63 = swift_allocObject();
        *(void *)(v63 + 16) = v19;
        *(void *)(v63 + 24) = a1;
        *(unsigned char *)(v63 + 32) = 0;
        double v100 = (uint64_t (*)())sub_1005E77A8;
        double v101 = (void *)v63;
        char v20 = &selRef_nowPlayingViewControllerCanShowMore_;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v97 = 1107296256;
        uint64_t v98 = sub_1002DE0E4;
        uint64_t v99 = &unk_100FE2578;
        uint64_t v64 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        id v65 = v62;
        swift_release();
        [v65 addCompletion:v64];
        _Block_release(v64);

        [*(id *)(a1 + 48) startAnimation];
LABEL_36:
        uint64_t v27 = &selRef_setManagingNavigationController_;
        goto LABEL_37;
      }
      uint64_t v54 = Logger.logObject.getter();
      os_log_type_t v55 = static os_log_type_t.default.getter();
      uint64_t v41 = &selRef_setManagingNavigationController_;
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v56 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "reverse path 2 - secondPhaseStarted - stopped", v56, 2u);
        swift_slowDealloc();
      }
    }
    [*(id *)(a1 + 48) v41[324]:2];
    goto LABEL_31;
  }
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "reverse path 1 - isReversed", v23, 2u);
    swift_slowDealloc();
  }

  if ([*(id *)(a1 + 48) v14[183]] == (id)1)
  {
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "reverse path 1 - reversing second phase", v26, 2u);
      swift_slowDealloc();
    }

    [*(id *)(a1 + 48) stopAnimation:0];
    uint64_t v27 = &selRef_setManagingNavigationController_;
    [*(id *)(a1 + 48) finishAnimationAtPosition:2];
    uint64_t v28 = *(void **)(a1 + 48);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v8;
    double v100 = sub_1005E7808;
    double v101 = (void *)v29;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v97 = 1107296256;
    uint64_t v98 = sub_100020238;
    uint64_t v99 = &unk_100FE2640;
    uint64_t v30 = _Block_copy(&aBlock);
    id v31 = v28;
    id v32 = v8;
    swift_release();
    [v31 addAnimations:v30];
    _Block_release(v30);

    uint64_t v33 = *(void **)(a1 + 48);
  }
  else
  {
    uint64_t v43 = *(void **)(a1 + 40);
    uint64_t v44 = (void *)swift_allocObject();
    v44[2] = v19;
    v44[3] = a1;
    v44[4] = v8;
    double v100 = (uint64_t (*)())sub_1005E77FC;
    double v101 = v44;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v97 = 1107296256;
    uint64_t v98 = sub_1002DE0E4;
    uint64_t v99 = &unk_100FE25C8;
    uint64_t v45 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    id v46 = v8;
    id v47 = v43;
    swift_release();
    [v47 addCompletion:v45];
    _Block_release(v45);

    if ([*(id *)(a1 + 40) v14[183]] == (id)1) {
      [*(id *)(a1 + 48) stopAnimation:0];
    }
    else {
      [*(id *)(a1 + 24) setAlpha:1.0];
    }
    uint64_t v27 = &selRef_setManagingNavigationController_;
    uint64_t v66 = *(void **)(a1 + 40);
    double v100 = (uint64_t (*)())sub_10054564C;
    double v101 = (void *)a1;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v97 = 1107296256;
    uint64_t v98 = sub_100020238;
    uint64_t v99 = &unk_100FE25F0;
    uint64_t v67 = _Block_copy(&aBlock);
    swift_retain();
    id v68 = v66;
    swift_release();
    [v68 addAnimations:v67];
    _Block_release(v67);

    uint64_t v33 = *(void **)(a1 + 40);
  }
  [v33 startAnimation];
LABEL_37:
  id v73 = *(id *)(a1 + 32);
  [v73 setReversed:[v73 isReversed] ^ 1];

  uint64_t v74 = *(void **)(a1 + 56);
  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 16) = a2;
  *(void *)(v75 + 24) = a3;
  id v76 = v74;
  swift_retain();
  UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(1, (uint64_t)sub_10007A644, v75);

  swift_release();
  id v77 = [*(id *)(a1 + 56) v14[183]];
  if (!v77) {
    id v77 = [*(id *)(a1 + 56) v20[484]];
  }
  a4(v77);
  [*(id *)(a1 + 64) stopAnimation:0];
  [*(id *)(a1 + 64) v27[324] 2];
  uint64_t v78 = *(void **)(a1 + 64);
  uint64_t v79 = swift_allocObject();
  *(void *)(v79 + 16) = v8;
  id v80 = v8;
  id v81 = v78;
  UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(1, (uint64_t)sub_1005E7684, v79);

  swift_release();
  [*(id *)(a1 + 64) v20[484]];
  *(unsigned char *)(a1 + 73) = (*(unsigned char *)(a1 + 73) & 1) == 0;
  *(unsigned char *)(a1 + 72) = 1;
  uint64_t v82 = (void *)swift_allocObject();
  v82[2] = v19;
  v82[3] = a1;
  v82[4] = a6;
  v82[5] = a7;
  uint64_t v83 = swift_allocObject();
  *(void *)(v83 + 16) = sub_1005E76D4;
  *(void *)(v83 + 24) = v82;
  uint64_t v84 = (void *)(a1 + 88);
  swift_beginAccess();
  double v85 = *(void **)(a1 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 88) = v85;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    double v85 = sub_10000EDA8(0, v85[2] + 1, 1, v85);
    *uint64_t v84 = v85;
  }
  unint64_t v88 = v85[2];
  unint64_t v87 = v85[3];
  if (v88 >= v87 >> 1)
  {
    double v85 = sub_10000EDA8((void *)(v87 > 1), v88 + 1, 1, v85);
    *uint64_t v84 = v85;
  }
  uint64_t v85[2] = v88 + 1;
  unint64_t v89 = &v85[2 * v88];
  v89[4] = sub_10013DD14;
  v89[5] = v83;
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_1005E463C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1005E4664(uint64_t a1)
{
  return sub_100014C44(a1, qword_101129C98);
}

uint64_t sub_1005E4688(uint64_t a1)
{
  return sub_100014C44(a1, qword_101129CB0);
}

id sub_1005E46AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Locale();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned int v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel____lazy_storage___dateFormatter;
  double v7 = *(void **)(v1 + OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel____lazy_storage___dateFormatter);
  if (v7)
  {
    id v8 = *(id *)(v1 + OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel____lazy_storage___dateFormatter);
  }
  else
  {
    id v9 = [objc_allocWithZone((Class)NSDateFormatter) init];
    Locale.init(identifier:)();
    Class isa = Locale._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    [v9 setLocale:isa];

    NSString v11 = String._bridgeToObjectiveC()();
    [v9 setDateFormat:v11];

    __n128 v12 = *(void **)(v1 + v6);
    *(void *)(v1 + v6) = v9;
    id v8 = v9;

    double v7 = 0;
  }
  id v13 = v7;
  return v8;
}

void sub_1005E4850(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel_displayLink] = 0;
  *(void *)&v4[OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel____lazy_storage___dateFormatter] = 0;
  v26.receiver = v4;
  v26.super_class = (Class)_s9TimeLabelCMa();
  id v9 = [super initWithFrame:a1, a2, a3, a4];
  uint64_t v10 = self;
  id v11 = v9;
  id v12 = [v10 grayColor];
  [v11 setBackgroundColor:v12];

  id v13 = self;
  uint64_t v14 = (char *)v11;
  id v15 = [v13 monospacedDigitSystemFontOfSize:17.0 weight:UIFontWeightRegular];
  [v14 setFont:v15];

  sub_1005E7548();
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v17 = CADisplayLink.init(handler:)((uint64_t)sub_1005E75C0, v16);
  uint64_t v18 = OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel_displayLink;
  uint64_t v19 = *(void **)&v14[OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel_displayLink];
  *(void *)&v14[OBJC_IVAR____TtCC5Music24NowPlayingViewController9TimeLabel_displayLink] = v17;

  char v20 = *(void **)&v14[v18];
  if (v20)
  {
    id v21 = v20;
    CAFrameRateRange v27 = CAFrameRateRange.init(minimum:maximum:preferred:)(80.0, 120.0, (Swift::Float_optional *)0x42F00000);
    [v21 setPreferredFrameRateRange:*(double *)&v27.minimum, *(double *)&v27.maximum, *(double *)&v27.preferred];

    os_log_type_t v22 = *(void **)&v14[v18];
    if (v22)
    {
      uint64_t v23 = self;
      id v24 = v22;
      id v25 = [v23 mainRunLoop];
      [v24 addToRunLoop:v25 forMode:NSRunLoopCommonModes];

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1005E4AAC()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = Strong;
    id v6 = sub_1005E46AC();
    Date.init()();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    id v8 = [v6 stringFromDate:isa];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v5 setText:v9];
  }
}

id sub_1005E4CDC()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s9TimeLabelCMa();
  return [super dealloc];
}

uint64_t _s9TimeLabelCMa()
{
  return self;
}

id sub_1005E4D80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(unsigned char *)(v3 + 72) = 0;
  id v6 = *(void **)(v3 + 16);
  double v7 = (void *)swift_allocObject();
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  v16[4] = sub_1005E747C;
  v16[5] = v7;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_1002DE0E4;
  v16[3] = &unk_100FE2370;
  id v8 = _Block_copy(v16);
  id v9 = v6;
  swift_retain();
  swift_retain();
  swift_release();
  [v9 addCompletion:v8];
  _Block_release(v8);

  uint64_t v10 = *(void (**)(uint64_t))(v3 + 24);
  uint64_t v11 = swift_retain();
  v10(v11);
  swift_release();
  uint64_t v12 = *(void *)(v3 + 40);
  uint64_t v13 = *(void *)(v3 + 48);
  id v14 = *(id *)(v3 + 16);
  swift_retain();
  UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(1, v12, v13);

  swift_release();
  return [*(id *)(v3 + 16) startAnimationAfterDelay:*(double *)(v3 + 56)];
}

id sub_1005E4EF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  *(unsigned char *)(v3 + 72) = 0;
  id v6 = *(void **)(v3 + 16);
  double v7 = (void *)swift_allocObject();
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  v16[4] = sub_1005E747C;
  v16[5] = v7;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_1002DE0E4;
  v16[3] = &unk_100FE2320;
  id v8 = _Block_copy(v16);
  id v9 = v6;
  swift_retain();
  swift_retain();
  swift_release();
  [v9 addCompletion:v8];
  _Block_release(v8);

  uint64_t v10 = *(void (**)(uint64_t))(v3 + 40);
  uint64_t v11 = swift_retain();
  v10(v11);
  swift_release();
  uint64_t v12 = *(void *)(v3 + 24);
  uint64_t v13 = *(void *)(v3 + 32);
  id v14 = *(id *)(v3 + 16);
  swift_retain();
  UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(1, v12, v13);

  swift_release();
  return [*(id *)(v3 + 16) startAnimationAfterDelay:*(double *)(v3 + 64)];
}

uint64_t sub_1005E5068()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1005E50B0()
{
  uint64_t v1 = v0;
  unint64_t v2 = *(void *)(v0 + 56);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    if (v2 >> 62)
    {
      if (v2 >> 62 == 1)
      {
        id v5 = *(void **)(v0 + 64);
        id v6 = *(void **)(v1 + 80);
        double v7 = *(void **)(v1 + 88);
        id v8 = (void *)(v2 & 0x3FFFFFFFFFFFFFFFLL);
        sub_1000E0054(v2, *(void **)(v1 + 64), *(void **)(v1 + 72), v6, v7, *(void **)(v1 + 96));
        swift_bridgeObjectRelease();

        uint64_t v3 = (void *)0xE600000000000000;
        uint64_t v4 = 0x73636972796CLL;
      }
      else
      {
        uint64_t v3 = (void *)0xE700000000000000;
        uint64_t v4 = 0x72616C75676572;
      }
    }
    else
    {
      uint64_t v3 = (void *)0xE500000000000000;
      uint64_t v4 = 0x6575657571;
    }
  }
  else
  {
    uint64_t v3 = (void *)0xE300000000000000;
    uint64_t v4 = 7104878;
  }
  _StringGuts.grow(_:)(31);
  v9._object = (void *)0x8000000100DC2220;
  v9._countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v9);
  _print_unlocked<A, B>(_:_:)();
  v10._countAndFlagsBits = 0x3D65646F6D20;
  v10._object = (void *)0xE600000000000000;
  String.append(_:)(v10);
  v11._countAndFlagsBits = v4;
  v11._object = v3;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 62;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  return 0;
}

uint64_t sub_1005E523C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0xF000000000000007;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1005E4D80((uint64_t)sub_1005E6C70, v3);
  swift_release_n();
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_1005E4D80((uint64_t)sub_1005E6C94, v4);
  swift_release_n();
  swift_release();
  swift_release();
  return v2;
}

void sub_1005E5374(uint64_t a1, const char *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    if (qword_101098588 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100050A90(v5, (uint64_t)qword_101129C98);
    swift_retain_n();
    id v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      v20[0] = swift_slowAlloc();
      *(_DWORD *)id v8 = 136446210;
      swift_retain();
      uint64_t v9 = sub_1005E50B0();
      unint64_t v11 = v10;
      swift_release();
      sub_100075D94(v9, v11, v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, a2, v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v12 = *(void *)(v4 + 16);
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v4 + 16) = v14;
      if (v14 == 2)
      {
        swift_beginAccess();
        uint64_t v15 = *(void *)(v4 + 24);
        uint64_t v16 = *(void *)(v15 + 16);
        if (v16)
        {
          swift_bridgeObjectRetain();
          uint64_t v17 = v15 + 40;
          do
          {
            uint64_t v18 = *(void (**)(uint64_t))(v17 - 8);
            uint64_t v19 = swift_retain();
            v18(v19);
            swift_release();
            v17 += 16;
            --v16;
          }
          while (v16);
          swift_bridgeObjectRelease();
        }
        *(void *)(v4 + 24) = _swiftEmptyArrayStorage;
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
  }
}

void sub_1005E560C()
{
  uint64_t v1 = v0;
  uint64_t v2 = 0xD000000000000012;
  *(unsigned char *)(v0 + 48) = (*(unsigned char *)(v0 + 48) & 1) == 0;
  id v3 = [*(id *)(*(void *)(v0 + 32) + 16) state];
  uint64_t v4 = *(void *)(v0 + 32);
  if (v3)
  {
    id v5 = *(id *)(v4 + 16);
    [v5 setReversed:[v5 isReversed] ^ 1];

    uint64_t v6 = 0xD000000000000013;
    os_log_type_t v7 = "Position: reversing";
LABEL_14:
    unint64_t v18 = (unint64_t)(v7 - 32) | 0x8000000000000000;
    goto LABEL_15;
  }
  if (*(unsigned char *)(v4 + 72) != 1)
  {
    uint64_t v6 = 0xD000000000000023;
    os_log_type_t v7 = "Position: inactive but not complete";
    goto LABEL_14;
  }
  uint64_t v8 = *(void *)(v0 + 16);
  BOOL v9 = __OFSUB__(v8, 1);
  uint64_t v10 = v8 - 1;
  if (v9)
  {
    __break(1u);
    goto LABEL_36;
  }
  *(void *)(v0 + 16) = v10;
  if (v10 == 2)
  {
    swift_beginAccess();
    uint64_t v11 = *(void *)(v0 + 24);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = v11 + 40;
      do
      {
        uint64_t v14 = *(void (**)(uint64_t))(v13 - 8);
        uint64_t v15 = swift_retain();
        v14(v15);
        swift_release();
        v13 += 16;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      uint64_t v2 = 0xD000000000000012;
    }
    *(void *)(v0 + 24) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
  }
  char v16 = *(unsigned char *)(v0 + 48);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  if (v16)
  {
    sub_1005E4EF4((uint64_t)sub_1005E7524, v17);
    swift_release();
    swift_release_n();
    uint64_t v6 = 0xD00000000000001BLL;
    os_log_type_t v7 = "Position: starting reversed";
    goto LABEL_14;
  }
  sub_1005E4D80((uint64_t)sub_1005E7500, v17);
  swift_release();
  swift_release_n();
  unint64_t v18 = 0x8000000100DC21E0;
  uint64_t v6 = 0xD000000000000012;
LABEL_15:
  id v19 = [*(id *)(*(void *)(v1 + 40) + 16) state];
  uint64_t v20 = *(void *)(v1 + 40);
  if (!v19)
  {
    if (*(unsigned char *)(v20 + 72) != 1)
    {
      uint64_t v2 = 0xD000000000000022;
      os_log_type_t v22 = "Opacity: inactive but not complete";
      goto LABEL_30;
    }
    uint64_t v23 = *(void *)(v1 + 16);
    BOOL v9 = __OFSUB__(v23, 1);
    uint64_t v24 = v23 - 1;
    if (!v9)
    {
      *(void *)(v1 + 16) = v24;
      if (v24 == 2)
      {
        swift_beginAccess();
        uint64_t v25 = *(void *)(v1 + 24);
        uint64_t v26 = *(void *)(v25 + 16);
        if (v26)
        {
          unint64_t v27 = v18;
          swift_bridgeObjectRetain();
          uint64_t v28 = v25 + 40;
          do
          {
            uint64_t v29 = *(void (**)(uint64_t))(v28 - 8);
            uint64_t v30 = swift_retain();
            v29(v30);
            swift_release();
            v28 += 16;
            --v26;
          }
          while (v26);
          swift_bridgeObjectRelease();
          unint64_t v18 = v27;
        }
        *(void *)(v1 + 24) = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
      }
      char v31 = *(unsigned char *)(v1 + 48);
      uint64_t v32 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      swift_retain();
      if (v31)
      {
        sub_1005E4EF4((uint64_t)sub_1005E74DC, v32);
        swift_release();
        swift_release_n();
        uint64_t v2 = 0xD00000000000001ALL;
        os_log_type_t v22 = "Opacity: starting reversed";
      }
      else
      {
        sub_1005E4D80((uint64_t)sub_1005E74B8, v32);
        swift_release();
        swift_release_n();
        uint64_t v2 = 0xD000000000000011;
        os_log_type_t v22 = "Opacity: starting";
      }
      goto LABEL_30;
    }
LABEL_36:
    __break(1u);
    return;
  }
  id v21 = *(id *)(v20 + 16);
  objc_msgSend(v21, "setReversed:", objc_msgSend(v21, "isReversed") ^ 1);

  os_log_type_t v22 = "Opacity: reversing";
LABEL_30:
  unint64_t v33 = (unint64_t)(v22 - 32) | 0x8000000000000000;
  if (qword_101098588 != -1) {
    swift_once();
  }
  uint64_t v34 = type metadata accessor for Logger();
  sub_100050A90(v34, (uint64_t)qword_101129C98);
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136446722;
    swift_retain();
    uint64_t v38 = sub_1005E50B0();
    unint64_t v40 = v39;
    swift_release();
    sub_100075D94(v38, v40, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_100075D94(v6, v18, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 22) = 2082;
    swift_bridgeObjectRetain();
    sub_100075D94(v2, v33, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "%{public}s %{public}s %{public}s", (uint8_t *)v37, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
}

uint64_t sub_1005E5C54(uint64_t a1, const char *a2)
{
  if (qword_101098588 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100050A90(v3, (uint64_t)qword_101129C98);
  swift_retain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    v19[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    swift_beginAccess();
    swift_weakLoadStrong();
    sub_100063814(&qword_1010ADE68);
    uint64_t v7 = String.init<A>(describing:)();
    sub_100075D94(v7, v8, v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, a2, v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = *(void *)(result + 16);
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12)
    {
      __break(1u);
    }
    else
    {
      *(void *)(result + 16) = v13;
      if (v13 == 2)
      {
        swift_beginAccess();
        uint64_t v14 = *(void *)(v10 + 24);
        uint64_t v15 = *(void *)(v14 + 16);
        if (v15)
        {
          swift_bridgeObjectRetain();
          uint64_t v16 = v14 + 40;
          do
          {
            uint64_t v17 = *(void (**)(uint64_t))(v16 - 8);
            uint64_t v18 = swift_retain();
            v17(v18);
            swift_release();
            v16 += 16;
            --v15;
          }
          while (v15);
          swift_bridgeObjectRelease();
        }
        *(void *)(v10 + 24) = _swiftEmptyArrayStorage;
        swift_release();
        return swift_bridgeObjectRelease();
      }
      else
      {
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1005E5F04()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_100545084(*(void *)(v0 + 56), *(void **)(v0 + 64), *(void **)(v0 + 72), *(void **)(v0 + 80), *(void **)(v0 + 88), *(void **)(v0 + 96));

  return swift_deallocClassInstance();
}

uint64_t _s13AnimationDataCMa_0()
{
  return self;
}

uint64_t _s13AnimationDataC19AnimationDescriptorCMa()
{
  return self;
}

uint64_t sub_1005E5FA8()
{
  return sub_1005E50B0();
}

uint64_t sub_1005E5FCC(char *a1, char *a2)
{
  return sub_100521028(*a1, *a2);
}

Swift::Int sub_1005E5FD8()
{
  return Hasher._finalize()();
}

uint64_t sub_1005E6060()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1005E60D4()
{
  return Hasher._finalize()();
}

uint64_t sub_1005E6158@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100FC74F8, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_1005E61B8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x72616C75676572;
  if (*v1) {
    uint64_t v2 = 0x657370616C6C6F63;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000064;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1005E61FC()
{
  _StringGuts.grow(_:)(32);
  v1._object = (void *)0x8000000100DC20E0;
  v1._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v1);
  _print_unlocked<A, B>(_:_:)();
  v2._countAndFlagsBits = 0x3D646E696B20;
  v2._object = (void *)0xE600000000000000;
  String.append(_:)(v2);
  if (*(unsigned char *)(v0 + 16)) {
    uint64_t v3 = 0x657370616C6C6F63;
  }
  else {
    uint64_t v3 = 0x72616C75676572;
  }
  if (*(unsigned char *)(v0 + 16)) {
    unint64_t v4 = 0xE900000000000064;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  unint64_t v5 = v4;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 62;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  return 0;
}

uint64_t sub_1005E6304(char a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7)
{
  *(_WORD *)(v7 + 72) = 0;
  char v14 = a1 & 1;
  _s13AnimationDataC7ContextCMa();
  *(void *)(v7 + 80) = swift_allocObject();
  *(void *)(v7 + 88) = _swiftEmptyArrayStorage;
  *(void *)(v7 + 96) = 0;
  *(unsigned char *)(v7 + 16) = v14;
  *(void *)(v7 + 24) = a2;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 48) = a5;
  *(void *)(v7 + 56) = a6;
  *(void *)(v7 + 64) = a7;
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  os_log_type_t v36 = sub_1005E7860;
  uint64_t v37 = v15;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256;
  uint64_t v34 = sub_1002DE0E4;
  uint64_t v35 = &unk_100FE2730;
  uint64_t v16 = _Block_copy(&aBlock);
  id v31 = a2;
  id v30 = a3;
  id v17 = a4;
  id v18 = a5;
  id v19 = a6;
  id v20 = a7;
  swift_release();
  [v30 addCompletion:v16];
  _Block_release(v16);
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  os_log_type_t v36 = sub_1005E7884;
  uint64_t v37 = v21;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256;
  uint64_t v34 = sub_1002DE0E4;
  uint64_t v35 = &unk_100FE2758;
  os_log_type_t v22 = _Block_copy(&aBlock);
  swift_release();
  [v17 addCompletion:v22];
  _Block_release(v22);
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  os_log_type_t v36 = sub_1005E78A8;
  uint64_t v37 = v23;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256;
  uint64_t v34 = sub_1002DE0E4;
  uint64_t v35 = &unk_100FE2780;
  uint64_t v24 = _Block_copy(&aBlock);
  swift_release();
  [v18 addCompletion:v24];
  _Block_release(v24);
  uint64_t v25 = swift_allocObject();
  swift_weakInit();
  os_log_type_t v36 = sub_1005E78CC;
  uint64_t v37 = v25;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256;
  uint64_t v34 = sub_1002DE0E4;
  uint64_t v35 = &unk_100FE27A8;
  uint64_t v26 = _Block_copy(&aBlock);
  swift_release();
  [v19 addCompletion:v26];
  _Block_release(v26);
  uint64_t v27 = swift_allocObject();
  swift_weakInit();
  os_log_type_t v36 = sub_1005E78F0;
  uint64_t v37 = v27;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v33 = 1107296256;
  uint64_t v34 = sub_1002DE0E4;
  uint64_t v35 = &unk_100FE27D0;
  uint64_t v28 = _Block_copy(&aBlock);
  swift_release();
  [v20 addCompletion:v28];

  _Block_release(v28);
  return v7;
}

uint64_t sub_1005E6708(uint64_t a1, uint64_t a2, const char *a3)
{
  if (qword_101098590 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100050A90(v4, (uint64_t)qword_101129CB0);
  swift_retain_n();
  unint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    v11[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    swift_beginAccess();
    swift_weakLoadStrong();
    sub_100063814(&qword_1010B2A80);
    uint64_t v8 = String.init<A>(describing:)();
    sub_100075D94(v8, v9, v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, a3, v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1005E691C();
    return swift_release();
  }
  return result;
}

void sub_1005E691C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  BOOL v2 = __OFADD__(v1, 1);
  uint64_t v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v0 + 96) = v3;
    if (v3 == 5)
    {
      swift_beginAccess();
      uint64_t v4 = *(void *)(v0 + 88);
      uint64_t v5 = *(void *)(v4 + 16);
      if (v5)
      {
        swift_bridgeObjectRetain();
        uint64_t v6 = v4 + 40;
        do
        {
          uint64_t v7 = *(void (**)(uint64_t))(v6 - 8);
          uint64_t v8 = swift_retain();
          v7(v8);
          swift_release();
          v6 += 16;
          --v5;
        }
        while (v5);
        swift_bridgeObjectRelease();
      }
      *(void *)(v0 + 88) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
    }
  }
}

id *sub_1005E69E4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1005E6A3C()
{
  sub_1005E69E4();

  return swift_deallocClassInstance();
}

uint64_t _s13AnimationDataCMa()
{
  return self;
}

uint64_t _s13AnimationDataC7ContextCMa()
{
  return self;
}

unsigned char *_s13AnimationDataC4KindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005E6B84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13AnimationDataC4KindOMa()
{
  return &_s13AnimationDataC4KindON;
}

unint64_t sub_1005E6BC0()
{
  unint64_t result = qword_1010B2A78;
  if (!qword_1010B2A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2A78);
  }
  return result;
}

uint64_t sub_1005E6C14()
{
  return sub_1005E61FC();
}

uint64_t sub_1005E6C38()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_1005E6C70()
{
  sub_1005E5374(v0, "%{public}s Position Animator Completion - init");
}

void sub_1005E6C94()
{
  sub_1005E5374(v0, "%{public}s Opacity Animator Completion - init");
}

void sub_1005E6CB8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  if (*(void *)(a3 + 80) == a2)
  {
    if (qword_101098590 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100050A90(v6, (uint64_t)qword_101129CB0);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      unint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "reverse path 1 - completion", v9, 2u);
      swift_slowDealloc();
    }

    [*(id *)(a3 + 24) setAlpha:0.0];
    uint64_t v10 = *(void **)&a4[OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView];
    if (v10)
    {
      [v10 setAlpha:0.0];
      if ([*(id *)(a3 + 48) state] == (id)2) {
        [*(id *)(a3 + 48) finishAnimationAtPosition:2];
      }
      uint64_t v11 = *(void **)(a3 + 48);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = a4;
      v16[4] = sub_1005E7808;
      v16[5] = v12;
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 1107296256;
      v16[2] = sub_100020238;
      v16[3] = &unk_100FE2690;
      uint64_t v13 = _Block_copy(v16);
      id v14 = v11;
      uint64_t v15 = a4;
      swift_release();
      [v14 addAnimations:v13];
      _Block_release(v13);

      [*(id *)(a3 + 48) startAnimation];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1005E6EE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(a3 + 80) == a2)
  {
    if (qword_101098590 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100050A90(v6, (uint64_t)qword_101129CB0);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      unint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v9 = 67240192;
      LODWORD(v18[0]) = a4 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "reverse path 2 - secondPhaseStarted - completion isReversed=%{BOOL,public}d", v9, 8u);
      swift_slowDealloc();
    }

    if ([*(id *)(a3 + 40) state] == (id)1)
    {
      uint64_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "reverse path 2 - secondPhaseStarted - completion stopping first phase", v12, 2u);
        swift_slowDealloc();
      }

      [*(id *)(a3 + 40) stopAnimation:0];
      [*(id *)(a3 + 40) finishAnimationAtPosition:2];
    }
    double v13 = 0.0;
    if (a4) {
      double v13 = 1.0;
    }
    [*(id *)(a3 + 24) setAlpha:v13, v18[0]];
    id v14 = *(void **)(a3 + 40);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a3;
    *(unsigned char *)(v15 + 24) = a4 & 1;
    v18[4] = sub_1005E7610;
    v18[5] = v15;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    v18[2] = sub_100020238;
    uint64_t v18[3] = &unk_100FE26E0;
    uint64_t v16 = _Block_copy(v18);
    id v17 = v14;
    swift_retain();
    swift_release();
    [v17 addAnimations:v16];
    _Block_release(v16);

    [*(id *)(a3 + 40) startAnimation];
  }
}

void sub_1005E71AC(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3[10] == a2)
  {
    uint64_t v4 = a3[12];
    BOOL v5 = __OFADD__(v4, 1);
    uint64_t v6 = v4 + 1;
    if (v5)
    {
      __break(1u);
    }
    else
    {
      a3[12] = v6;
      if (v6 == 5)
      {
        uint64_t v7 = a3 + 11;
        swift_beginAccess();
        uint64_t v8 = a3[11];
        uint64_t v9 = *(void *)(v8 + 16);
        if (v9)
        {
          swift_bridgeObjectRetain();
          uint64_t v10 = v8 + 40;
          do
          {
            os_log_type_t v11 = *(void (**)(uint64_t))(v10 - 8);
            uint64_t v12 = swift_retain();
            v11(v12);
            swift_release();
            v10 += 16;
            --v9;
          }
          while (v9);
          swift_bridgeObjectRelease();
        }
        *uint64_t v7 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_1005E7284(uint64_t result, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (*(void *)(a2 + 80) == result)
  {
    if (qword_101098590 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100050A90(v4, (uint64_t)qword_101129CB0);
    swift_retain_n();
    BOOL v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      double v13 = a3;
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      swift_retain();
      uint64_t v8 = sub_1005E61FC();
      unint64_t v10 = v9;
      swift_release();
      sub_100075D94(v8, v10, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "reverse %s completion", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return v13(v11);
    }
    else
    {

      uint64_t v12 = swift_release_n();
      return a3(v12);
    }
  }
  return result;
}

uint64_t sub_1005E7484()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 24);
  *(unsigned char *)(*(void *)(v0 + 16) + 72) = 1;
  return v1();
}

uint64_t sub_1005E74B8()
{
  return sub_1005E5C54(v0, "%{public}s Opacity Animator Completion - reverse() - isReverse=false");
}

uint64_t sub_1005E74DC()
{
  return sub_1005E5C54(v0, "%{public}s Opacity Animator Completion - reverse() - isReverse=true");
}

uint64_t sub_1005E7500()
{
  return sub_1005E5C54(v0, "%{public}s Position Animator Completion - reverse() - isReverse=false");
}

uint64_t sub_1005E7524()
{
  return sub_1005E5C54(v0, "%{public}s Position Animator Completion - reverse() - isReverse=true");
}

unint64_t sub_1005E7548()
{
  unint64_t result = qword_1010A2678;
  if (!qword_1010A2678)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010A2678);
  }
  return result;
}

uint64_t sub_1005E7588()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1005E75C0()
{
}

uint64_t sub_1005E75C8()
{
  return sub_1005E775C();
}

void sub_1005E75D0(uint64_t a1)
{
  sub_1005E71AC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1005E75D8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005E7614()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005E764C()
{
  return swift_deallocObject();
}

void sub_1005E7684()
{
  sub_100163DD8(*(void **)(v0 + 16));
}

uint64_t sub_1005E768C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005E76D4()
{
  return sub_1005E7284(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32));
}

uint64_t sub_1005E76E0()
{
  return swift_deallocObject();
}

id sub_1005E7718()
{
  id result = *(id *)(*(void *)(v0 + 16) + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView);
  if (result)
  {
    double v2 = 0.0;
    if (*(unsigned char *)(v0 + 24)) {
      double v2 = 1.0;
    }
    return [result setAlpha:v2];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005E7754()
{
  return sub_1005E775C();
}

uint64_t sub_1005E775C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1005E77A8(uint64_t a1)
{
  sub_1005E6EE0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_1005E77B4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1005E77FC(uint64_t a1)
{
  sub_1005E6CB8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32));
}

id sub_1005E780C()
{
  id result = *(id *)(*(void *)(v0 + 16) + OBJC_IVAR___MusicNowPlayingControlsViewController_topContainerView);
  if (result) {
    return [result setAlpha:1.0];
  }
  __break(1u);
  return result;
}

id sub_1005E7838()
{
  double v1 = 1.0;
  if (*(unsigned char *)(v0 + 24)) {
    double v1 = 0.0;
  }
  return [*(id *)(*(void *)(v0 + 16) + 24) setAlpha:v1];
}

uint64_t sub_1005E7860(uint64_t a1)
{
  return sub_1005E6708(a1, v1, "%{public}s position completion");
}

uint64_t sub_1005E7884(uint64_t a1)
{
  return sub_1005E6708(a1, v1, "%{public}s first phase completion");
}

uint64_t sub_1005E78A8(uint64_t a1)
{
  return sub_1005E6708(a1, v1, "%{public}s second phase completion");
}

uint64_t sub_1005E78CC(uint64_t a1)
{
  return sub_1005E6708(a1, v1, "%{public}s artwork completion");
}

uint64_t sub_1005E78F0(uint64_t a1)
{
  return sub_1005E6708(a1, v1, "%{public}s layout completion");
}

void *sub_1005E79A0(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  id result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_100076F68(0, v2, 0);
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    id result = _swiftEmptyArrayStorage;
    unint64_t v5 = (unint64_t)"LibraryView.RecentlyAdded";
    unint64_t v6 = (unint64_t)"LibraryView.Playlists";
    unint64_t v7 = (unint64_t)"LibraryView.Artists";
    unint64_t v8 = (unint64_t)"LibraryView.Albums";
    unint64_t v9 = (unint64_t)"LibraryView.Songs";
    unint64_t v10 = (unint64_t)"LibraryView.MadeForYou";
    unint64_t v11 = (unint64_t)"LibraryView.MusicVideos";
    unint64_t v12 = (unint64_t)"LibraryView.Compilations";
    unint64_t v13 = (unint64_t)"LibraryView.Composers";
    unint64_t v14 = (unint64_t)"LibraryView.Shows";
    unint64_t v15 = (unint64_t)"LibraryView.Downloaded";
    do
    {
      int v16 = *v4++;
      unint64_t v17 = 0xD000000000000029;
      unint64_t v18 = 0x8000000100DAC960;
      switch(v16)
      {
        case 1:
          unint64_t v17 = 0xD000000000000025;
          unint64_t v18 = v5 | 0x8000000000000000;
          break;
        case 2:
          unint64_t v17 = 0xD000000000000023;
          unint64_t v18 = v6 | 0x8000000000000000;
          break;
        case 3:
          unint64_t v17 = 0xD000000000000022;
          unint64_t v18 = v7 | 0x8000000000000000;
          break;
        case 4:
          unint64_t v18 = v8 | 0x8000000000000000;
          goto LABEL_14;
        case 5:
          unint64_t v17 = 0xD000000000000026;
          unint64_t v18 = v9 | 0x8000000000000000;
          break;
        case 6:
          unint64_t v17 = 0xD000000000000027;
          unint64_t v18 = v10 | 0x8000000000000000;
          break;
        case 7:
          unint64_t v17 = 0xD000000000000022;
          unint64_t v18 = v11 | 0x8000000000000000;
          break;
        case 8:
          unint64_t v17 = 0xD000000000000028;
          unint64_t v18 = 0x8000000100DACAE0;
          break;
        case 9:
          unint64_t v17 = 0xD000000000000025;
          unint64_t v18 = v12 | 0x8000000000000000;
          break;
        case 10:
          unint64_t v18 = v13 | 0x8000000000000000;
LABEL_14:
          unint64_t v17 = 0xD000000000000021;
          break;
        case 11:
          unint64_t v17 = 0xD000000000000026;
          unint64_t v18 = v14 | 0x8000000000000000;
          break;
        case 12:
          unint64_t v17 = 0xD000000000000027;
          unint64_t v18 = v15 | 0x8000000000000000;
          break;
        default:
          break;
      }
      uint64_t v33 = result;
      unint64_t v20 = result[2];
      unint64_t v19 = result[3];
      if (v20 >= v19 >> 1)
      {
        uint64_t v24 = (char *)v13;
        uint64_t v25 = (char *)v12;
        id v31 = (char *)v6;
        uint64_t v32 = (char *)v5;
        uint64_t v29 = (char *)v8;
        id v30 = (char *)v7;
        uint64_t v27 = (char *)v10;
        uint64_t v28 = (char *)v9;
        uint64_t v26 = (char *)v11;
        os_log_type_t v22 = (char *)v15;
        uint64_t v23 = (char *)v14;
        sub_100076F68(v19 > 1, v20 + 1, 1);
        unint64_t v15 = (unint64_t)v22;
        unint64_t v14 = (unint64_t)v23;
        unint64_t v13 = (unint64_t)v24;
        unint64_t v12 = (unint64_t)v25;
        unint64_t v11 = (unint64_t)v26;
        unint64_t v10 = (unint64_t)v27;
        unint64_t v9 = (unint64_t)v28;
        unint64_t v8 = (unint64_t)v29;
        unint64_t v7 = (unint64_t)v30;
        unint64_t v6 = (unint64_t)v31;
        unint64_t v5 = (unint64_t)v32;
        id result = v33;
      }
      result[2] = v20 + 1;
      uint64_t v21 = &result[2 * v20];
      v21[4] = v17;
      v21[5] = v18;
      --v2;
    }
    while (v2);
  }
  return result;
}

void *sub_1005E7C2C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100076F68(0, v1, 0);
  id result = (void *)sub_1004F516C(a1);
  uint64_t v4 = (uint64_t)result;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(a1 + 36) != v6) {
      goto LABEL_14;
    }
    char v17 = v8;
    unint64_t v9 = Library.Menu.Identifier.rawValue.getter(*(unsigned char *)(*(void *)(a1 + 48) + v4));
    uint64_t v11 = v10;
    unint64_t v13 = _swiftEmptyArrayStorage[2];
    unint64_t v12 = _swiftEmptyArrayStorage[3];
    if (v13 >= v12 >> 1) {
      sub_100076F68(v12 > 1, v13 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v13 + 1;
    unint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
    v14[4] = v9;
    v14[5] = v11;
    id result = (void *)sub_1004F5210(v4, v6, v17 & 1, a1);
    uint64_t v4 = (uint64_t)result;
    uint64_t v6 = v15;
    char v8 = v16 & 1;
    if (!--v1)
    {
      sub_1001995CC((uint64_t)result, v15, v8);
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

void sub_1005E7DA4(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    __CocoaDictionary.count.getter();
  }
  sub_100057778(0, &qword_10109A4F0);
  sub_10004697C((unint64_t *)&unk_1010B9840, &qword_10109A4F0);
  v19[1] = (id)Set.init(minimumCapacity:)();
  if (v2)
  {
    uint64_t v3 = __CocoaDictionary.makeIterator()();
    unint64_t v18 = 0;
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    unint64_t v1 = v3 | 0x8000000000000000;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(v1 + 32);
    unint64_t v18 = v1 + 64;
    uint64_t v4 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(v1 + 64);
  }
  uint64_t v9 = 0;
  int64_t v17 = (unint64_t)(v4 + 64) >> 6;
  while ((v1 & 0x8000000000000000) != 0)
  {
    if (!__CocoaDictionary.Iterator.nextKey()()) {
      goto LABEL_34;
    }
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = v19[0];
    swift_unknownObjectRelease();
    if (!v13) {
      goto LABEL_34;
    }
    uint64_t v10 = v5;
    uint64_t v12 = v9;
LABEL_12:
    sub_100025F38(v19, v13, &qword_10109A4F0, (uint64_t)MPCPlayerPath_ptr, &qword_1010B2AA0);

    uint64_t v9 = v12;
    unint64_t v5 = v10;
  }
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v9 << 6);
    uint64_t v12 = v9;
LABEL_11:
    id v13 = *(id *)(*(void *)(v1 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_34;
    }
    goto LABEL_12;
  }
  int64_t v14 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v14 >= v17) {
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v18 + 8 * v14);
    uint64_t v12 = v9 + 1;
    if (!v15)
    {
      uint64_t v12 = v9 + 2;
      if (v9 + 2 >= v17) {
        goto LABEL_34;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v9 + 3;
        if (v9 + 3 >= v17) {
          goto LABEL_34;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v9 + 4;
          if (v9 + 4 >= v17) {
            goto LABEL_34;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v9 + 5;
            if (v9 + 5 >= v17) {
              goto LABEL_34;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v9 + 6;
              while (v17 != v16)
              {
                unint64_t v15 = *(void *)(v18 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_100048F1C();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_1005E8098@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UITraitOverrides();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, v3, v6);
  if (Library.Menu.Identifier.rawValue.getter(a1) == 0xD000000000000026 && v7 == 0x8000000100DACB70)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return result;
    }
  }
  sub_1000C79F4((uint64_t)&off_100FC5128);
  sub_1001B74E0();
  return dispatch thunk of UIMutableTraits.subscript.setter();
}

id sub_1005E81BC(void *a1, char a2)
{
  uint64_t v4 = sub_100063814(&qword_1010A4440);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s9PlaylistsV5ScopeVMa(0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v12 = (uint64_t *)((char *)&v35 - v11);
  uint64_t v13 = _s6AlbumsV5ScopeOMa(0);
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B74E0();
  UITraitCollection.subscript.getter();
  char v16 = sub_1000362CC();
  swift_bridgeObjectRelease();
  switch(a2)
  {
    case 1:
      id v19 = [a1 horizontalSizeClass];
      uint64_t v20 = type metadata accessor for Playlist.Folder();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
      if (qword_101097E88 != -1) {
        swift_once();
      }
      char v21 = v19 != (id)2;
      uint64_t v22 = qword_1011293F0;
      sub_1005F6BD0((uint64_t)v6, (uint64_t)v12 + *(int *)(v7 + 20));
      *uint64_t v12 = v22;
      swift_bridgeObjectRetain();
      sub_1005F6C38((uint64_t)v6);
      objc_allocWithZone((Class)type metadata accessor for LibraryPlaylistsViewController());
      int v23 = v16 & 1;
      uint64_t v24 = v12;
      goto LABEL_11;
    case 2:
      char v25 = sub_1003DFF30(a1) & 1;
      id v26 = objc_allocWithZone((Class)type metadata accessor for LibraryArtistsContainerViewController());
      id result = sub_1003DC340(v25, v16 & 1);
      break;
    case 3:
    case 8:
      swift_storeEnumTagMultiPayload();
      id v31 = objc_allocWithZone((Class)type metadata accessor for LibraryAlbumsViewController());
      id result = sub_100678C50((uint64_t)v15, v16 & 1);
      break;
    case 4:
      id v27 = objc_allocWithZone((Class)type metadata accessor for LibrarySongsViewController());
      id result = sub_1004944C0(v16 & 1);
      break;
    case 5:
      if (qword_1010979F0 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_100050A90(v7, (uint64_t)qword_101128FC8);
      sub_1005F6D34(v28, (uint64_t)v10, _s9PlaylistsV5ScopeVMa);
      char v21 = [a1 horizontalSizeClass] != (id)2;
      objc_allocWithZone((Class)type metadata accessor for LibraryPlaylistsViewController());
      int v23 = v16 & 1;
      uint64_t v24 = v10;
LABEL_11:
      id result = sub_1003169AC(v24, v23, v21);
      break;
    case 6:
      id v29 = objc_allocWithZone((Class)type metadata accessor for LibraryMusicVideosViewController());
      id result = sub_10047C6C0(v16 & 1);
      break;
    case 7:
      id v30 = objc_allocWithZone((Class)type metadata accessor for LibraryGenresViewController());
      id result = sub_10034B9FC(v16 & 1);
      break;
    case 9:
      id v32 = objc_allocWithZone((Class)type metadata accessor for LibraryComposersViewController());
      id result = sub_1002FFC28(v16 & 1);
      break;
    case 10:
      id v33 = objc_allocWithZone((Class)type metadata accessor for LibraryTVShowsMoviesViewController(0));
      id result = sub_100761D34(v16 & 1);
      break;
    case 11:
      id v34 = objc_allocWithZone((Class)type metadata accessor for LibraryMainViewController());
      id result = sub_100033298(1);
      break;
    case 12:
      id result = [objc_allocWithZone((Class)type metadata accessor for LibraryDownloadingViewController()) init];
      break;
    default:
      id v17 = objc_allocWithZone((Class)type metadata accessor for LibraryRecentlyAddedViewController());
      id result = sub_1007A1158(v16 & 1);
      break;
  }
  return result;
}

void *NSUserDefaults.libraryMenuOrderedIdentifiers.getter()
{
  NSUserDefaults.libraryMenuRevision.getter();
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1005E79A0(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t NSUserDefaults.libraryMenuSelectedIdentifiers.getter()
{
  NSUserDefaults.libraryMenuRevision.getter();
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1005E7C2C(v1);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_1005F63B4((uint64_t)v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1005E88C0(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for AudioVariant();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1005F6C98((unint64_t *)&unk_10109C6F0, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
  swift_bridgeObjectRetain();
  id v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    char v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    id v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1005F6C98(&qword_1010AE930, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1005EF394((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1005E8BE4(unsigned char *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  uint64_t v18 = v2;
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v18;
    *uint64_t v18 = 0x8000000000000000;
    sub_1005EF650(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v18 = v19;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_21;
  }
  uint64_t v9 = ~v7;
  while (!*(unsigned char *)(*(void *)(v5 + 48) + v8))
  {
    unint64_t v11 = 0xE300000000000000;
    uint64_t v10 = 7105633;
    int v12 = a2;
    if ((_BYTE)a2) {
      goto LABEL_11;
    }
LABEL_7:
    unint64_t v13 = 0xE300000000000000;
    if (v10 == 7105633) {
      goto LABEL_15;
    }
LABEL_16:
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_20;
    }
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_18;
    }
  }
  if (*(unsigned char *)(*(void *)(v5 + 48) + v8) == 1) {
    uint64_t v10 = 0x657469726F766166;
  }
  else {
    uint64_t v10 = 0x64616F6C6E776F64;
  }
  unint64_t v11 = 0xE900000000000073;
  int v12 = a2;
  if (!(_BYTE)a2) {
    goto LABEL_7;
  }
LABEL_11:
  if (v12 == 1) {
    uint64_t v14 = 0x657469726F766166;
  }
  else {
    uint64_t v14 = 0x64616F6C6E776F64;
  }
  unint64_t v13 = 0xE900000000000073;
  if (v10 != v14) {
    goto LABEL_16;
  }
LABEL_15:
  if (v11 != v13) {
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_20:
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v18 + 48) + v8);
LABEL_21:
  *a1 = a2;
  return result;
}

uint64_t sub_1005E8E64(unsigned char *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  uint64_t v18 = a1;
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_1005EF8D4(a2, v8, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v19;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    id v17 = v18;
    goto LABEL_27;
  }
  uint64_t v9 = ~v7;
  while (2)
  {
    unint64_t v10 = 0xE700000000000000;
    uint64_t v11 = 0x7972617262696CLL;
    switch(*(unsigned char *)(*(void *)(v5 + 48) + v8))
    {
      case 1:
        uint64_t v11 = 0x6F4E6E657473696CLL;
        unint64_t v10 = 0xE900000000000077;
        break;
      case 2:
        unint64_t v10 = 0xE600000000000000;
        uint64_t v11 = 0x6573776F7262;
        break;
      case 3:
        unint64_t v10 = 0xE500000000000000;
        uint64_t v11 = 0x6F69646172;
        break;
      case 4:
        unint64_t v10 = 0xE600000000000000;
        uint64_t v11 = 0x686372616573;
        break;
      case 5:
        unint64_t v10 = 0xE600000000000000;
        uint64_t v11 = 0x736F65646976;
        break;
      default:
        break;
    }
    unint64_t v12 = 0xE700000000000000;
    uint64_t v13 = 0x7972617262696CLL;
    switch((char)a2)
    {
      case 1:
        unint64_t v12 = 0xE900000000000077;
        if (v11 == 0x6F4E6E657473696CLL) {
          goto LABEL_18;
        }
        goto LABEL_19;
      case 2:
        unint64_t v12 = 0xE600000000000000;
        if (v11 != 0x6573776F7262) {
          goto LABEL_19;
        }
        goto LABEL_18;
      case 3:
        unint64_t v12 = 0xE500000000000000;
        if (v11 != 0x6F69646172) {
          goto LABEL_19;
        }
        goto LABEL_18;
      case 4:
        unint64_t v12 = 0xE600000000000000;
        uint64_t v13 = 0x686372616573;
        goto LABEL_17;
      case 5:
        unint64_t v12 = 0xE600000000000000;
        if (v11 != 0x736F65646976) {
          goto LABEL_19;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (v11 != v13) {
          goto LABEL_19;
        }
LABEL_18:
        if (v10 != v12)
        {
LABEL_19:
          char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v14) {
            goto LABEL_26;
          }
          unint64_t v8 = (v8 + 1) & v9;
          if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            goto LABEL_24;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_26:
        id v17 = v18;
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_27:
        *id v17 = a2;
        return result;
    }
  }
}

uint64_t sub_1005E9250(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for SidebarMenu.Item(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  sub_1002F05EC();
  Swift::Int v11 = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1005F6D34(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, type metadata accessor for SidebarMenu.Item);
      char v16 = sub_1002F3734((uint64_t)v9, a2);
      sub_1005F6D9C((uint64_t)v9, type metadata accessor for SidebarMenu.Item);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1005F6D9C(a2, type metadata accessor for SidebarMenu.Item);
    sub_1005F6D34(*(void *)(*v3 + 48) + v15 * v13, v19, type metadata accessor for SidebarMenu.Item);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1005F6D34(a2, (uint64_t)v9, type metadata accessor for SidebarMenu.Item);
    uint64_t v20 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1005EFCD0((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20;
    swift_bridgeObjectRelease();
    sub_1005F6DFC(a2, a1, type metadata accessor for SidebarMenu.Item);
    return 1;
  }
}

BOOL sub_1005E94D4()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  unint64_t v2 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(v1 + 32));
  uint64_t v3 = (1 << v2) & *(void *)(v1 + ((v2 >> 3) & 0xFFFFFFFFFFFFFF8) + 56);
  if (!v3)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v0;
    *uint64_t v0 = 0x8000000000000000;
    sub_1005EFF54(v2, isUniquelyReferenced_nonNull_native);
    *uint64_t v0 = v6;
    swift_bridgeObjectRelease();
  }
  return v3 == 0;
}

uint64_t sub_1005E9598(uint64_t a1, unsigned char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  Hasher.init(_seed:)();
  char v21 = a2;
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v7 = Hasher._finalize()();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v20 = a1;
    uint64_t v10 = ~v8;
    while (1)
    {
      sub_1001C46F4(*(void *)(v6 + 48) + 96 * v9, (uint64_t)v23);
      if (v23[0])
      {
        unint64_t v11 = v23[0] == 1 ? 0xD00000000000001CLL : 0xD000000000000029;
        unint64_t v12 = v23[0] == 1 ? 0x8000000100DAD330 : 0x8000000100DAD350;
      }
      else
      {
        unint64_t v11 = 0xD00000000000002CLL;
        unint64_t v12 = 0x8000000100DAD300;
      }
      unint64_t v13 = 0xD000000000000029;
      if (*v21 == 1)
      {
        unint64_t v13 = 0xD00000000000001CLL;
        unint64_t v14 = 0x8000000100DAD330;
      }
      else
      {
        unint64_t v14 = 0x8000000100DAD350;
      }
      unint64_t v15 = *v21 ? v13 : 0xD00000000000002CLL;
      unint64_t v16 = *v21 ? v14 : 0x8000000100DAD300;
      if (v11 == v15 && v12 == v16) {
        break;
      }
      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100176B98((uint64_t)v23);
      if (v17) {
        goto LABEL_28;
      }
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v20;
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease_n();
    sub_100176B98((uint64_t)v23);
LABEL_28:
    swift_bridgeObjectRelease();
    sub_100176B98((uint64_t)v21);
    sub_1001C46F4(*(void *)(*v3 + 48) + 96 * v9, v20);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_26:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1001C46F4((uint64_t)v21, (uint64_t)v23);
    uint64_t v22 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1005F0054(v23, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v22;
    swift_bridgeObjectRelease();
    sub_1001C4750((uint64_t)v21, a1);
    return 1;
  }
}

uint64_t sub_1005E9854(unsigned char *a1, Swift::Int a2)
{
  return sub_1005EA06C(a1, a2, &qword_101099280);
}

uint64_t sub_1005E9868(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1005F02E0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1005E9A18(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = __CocoaSet.member(for:)();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for AnyCancellable();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = sub_1005EAF48(v7, result + 1);
    uint64_t v20 = v16;
    if (*(void *)(v16 + 24) <= *(void *)(v16 + 16))
    {
      swift_retain();
      sub_1005ED194();
      uint64_t v17 = v20;
    }
    else
    {
      uint64_t v17 = v16;
      swift_retain();
    }
    sub_1005EF180(a2, v17);
    *uint64_t v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  type metadata accessor for AnyCancellable();
  sub_1005F6C98((unint64_t *)&unk_10109CA70, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
  swift_bridgeObjectRetain();
  uint64_t v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    uint64_t v15 = swift_retain();
    sub_1005F047C(v15, v12, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  uint64_t v13 = ~v11;
  sub_1005F6C98(&qword_101099200, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
  while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    unint64_t v12 = (v12 + 1) & v13;
    if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_11;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t sub_1005E9D14(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  Lyrics.TextLine.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v33 = a1;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v36 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_100262270(a2);
    sub_1005F0668(a2, v8, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v36;
    swift_bridgeObjectRelease();
    long long v21 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(v33 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(v33 + 80) = v21;
    *(void *)(v33 + 96) = *(void *)(a2 + 96);
    long long v22 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)a2;
    *(_OWORD *)(v33 + 16) = v22;
    long long v23 = *(_OWORD *)(a2 + 48);
    uint64_t result = 1;
    *(_OWORD *)(v33 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v33 + 48) = v23;
    return result;
  }
  uint64_t v9 = ~v7;
  uint64_t v10 = *(void *)(a2 + 16);
  while (1)
  {
    uint64_t v11 = *(void *)(v5 + 48);
    uint64_t v12 = v11 + 104 * v8;
    if (*(void *)(v12 + 16) != v10
      || *(double *)(v11 + 104 * v8) != *(double *)a2
      || *(double *)(v12 + 8) != *(double *)(a2 + 8)
      || *(double *)(v12 + 40) != *(double *)(a2 + 40)
      || *(double *)(v12 + 48) != *(double *)(a2 + 48))
    {
      goto LABEL_3;
    }
    uint64_t v34 = *(uint64_t (**)(uint64_t))(v12 + 56);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v13 = swift_retain();
    uint64_t v14 = v34(v13);
    uint64_t v16 = v15;
    if (v14 == (*(uint64_t (**)(void))(a2 + 56))() && v16 == v17) {
      break;
    }
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
LABEL_3:
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_18:
  sub_1002E4B40(a2);
  uint64_t v25 = *(void *)(*v2 + 48) + 104 * v8;
  uint64_t v26 = *(void *)(v25 + 16);
  char v27 = *(unsigned char *)(v25 + 24);
  char v28 = *(unsigned char *)(v25 + 25);
  char v29 = *(unsigned char *)(v25 + 26);
  uint64_t v30 = *(void *)(v25 + 32);
  uint64_t v31 = *(void *)(v25 + 56);
  uint64_t v32 = *(void *)(v25 + 96);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v25;
  *(void *)(v33 + 16) = v26;
  *(unsigned char *)(v33 + 24) = v27;
  *(unsigned char *)(v33 + 25) = v28;
  *(unsigned char *)(v33 + 26) = v29;
  *(void *)(v33 + 32) = v30;
  *(_OWORD *)(v33 + 40) = *(_OWORD *)(v25 + 40);
  *(void *)(v33 + 56) = v31;
  long long v35 = *(_OWORD *)(v25 + 80);
  *(_OWORD *)(v33 + 64) = *(_OWORD *)(v25 + 64);
  *(_OWORD *)(v33 + 80) = v35;
  *(void *)(v33 + 96) = v32;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return 0;
}

uint64_t sub_1005EA058(unsigned char *a1, Swift::Int a2)
{
  return sub_1005EA06C(a1, a2, &qword_101099218);
}

uint64_t sub_1005EA06C(unsigned char *a1, Swift::Int a2, uint64_t *a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a2);
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1005F0924(a2, v10, isUniquelyReferenced_nonNull_native, a3);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v7 + 48);
  if (*(unsigned __int8 *)(v11 + v10) != a2)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v12;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v11 + v10) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v10);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1005EA1A4(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Song();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1005F6C98((unint64_t *)&unk_10109CB20, (void (*)(uint64_t))&type metadata accessor for Song);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    char v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1005F6C98((unint64_t *)&unk_1010AAEB0, (void (*)(uint64_t))&type metadata accessor for Song);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      long long v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1005F0A80((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1005EA4C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = static Hasher._hash(seed:_:)();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1005F0D3C(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1005EA5C4(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = _s23QueueSnapshotIdentifierOMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  unint64_t v9 = (char *)&v20[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  sub_1003AEBF8((uint64_t)v20);
  Swift::Int v11 = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1005F6D34(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, _s23QueueSnapshotIdentifierOMa);
      char v16 = sub_1003B1D80((uint64_t)v9, a2);
      sub_1005F6D9C((uint64_t)v9, _s23QueueSnapshotIdentifierOMa);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1005F6D9C((uint64_t)a2, _s23QueueSnapshotIdentifierOMa);
    sub_1005F6D34(*(void *)(*v3 + 48) + v15 * v13, v19, _s23QueueSnapshotIdentifierOMa);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1005F6D34((uint64_t)a2, (uint64_t)v9, _s23QueueSnapshotIdentifierOMa);
    v20[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1005F0E60(v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v20[0];
    swift_bridgeObjectRelease();
    sub_1005F6DFC((uint64_t)a2, a1, _s23QueueSnapshotIdentifierOMa);
    return 1;
  }
}

uint64_t sub_1005EA848(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v8 = __CocoaSet.member(for:)();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for ImpressionTracker();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v19;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v17 = sub_1005EB1A0(v7, result + 1);
    Swift::Int v21 = v17;
    if (*(void *)(v17 + 24) <= *(void *)(v17 + 16))
    {
      swift_retain();
      sub_1005EE78C();
      uint64_t v18 = v21;
    }
    else
    {
      uint64_t v18 = v17;
      swift_retain();
    }
    sub_1005EF268(a2, v18);
    *uint64_t v3 = v18;
    goto LABEL_18;
  }
  Hasher.init(_seed:)();
  Swift::UInt v10 = sub_1003FFBD4();
  Hasher._combine(_:)(v10);
  Swift::Int v11 = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = v11 & ~v12;
  if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_11:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    Swift::Int v16 = swift_retain();
    sub_1005F10E4(v16, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v20;
LABEL_18:
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  uint64_t v14 = ~v12;
  while (sub_1003FFBD4() != *(void *)(a2 + 56))
  {
    unint64_t v13 = (v13 + 1) & v14;
    if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
      goto LABEL_11;
    }
  }
  swift_release();
  *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v13);
  swift_retain();
  return 0;
}

uint64_t sub_1005EAA98(void *a1, void *a2)
{
  return sub_100025F38(a1, a2, (unint64_t *)&qword_101099260, (uint64_t)UIViewController_ptr, &qword_101099258);
}

uint64_t sub_1005EAAB4(unsigned char *a1, Swift::Int a2)
{
  uint64_t v4 = *v2;
  Hasher.init(_seed:)();
  Library.Menu.Identifier.rawValue.getter(a2);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v5 = Hasher._finalize()();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  Swift::Int v23 = a2;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_38:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *v24;
    uint64_t *v24 = 0x8000000000000000;
    char v21 = v23;
    sub_1005F1254(v23, v7, isUniquelyReferenced_nonNull_native);
    uint64_t *v24 = v26;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_42;
  }
  uint64_t v8 = ~v6;
  uint64_t v9 = a2;
  while (2)
  {
    unint64_t v10 = 0xD000000000000029;
    unint64_t v11 = 0x8000000100DAC960;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v10 = 0xD000000000000025;
        uint64_t v12 = "LibraryView.RecentlyAdded";
        goto LABEL_17;
      case 2:
        unint64_t v10 = 0xD000000000000023;
        uint64_t v12 = "LibraryView.Playlists";
        goto LABEL_17;
      case 3:
        unint64_t v10 = 0xD000000000000022;
        uint64_t v12 = "LibraryView.Artists";
        goto LABEL_17;
      case 4:
        unint64_t v13 = "LibraryView.Albums";
        goto LABEL_14;
      case 5:
        unint64_t v10 = 0xD000000000000026;
        uint64_t v12 = "LibraryView.Songs";
        goto LABEL_17;
      case 6:
        unint64_t v10 = 0xD000000000000027;
        uint64_t v12 = "LibraryView.MadeForYou";
        goto LABEL_17;
      case 7:
        unint64_t v10 = 0xD000000000000022;
        uint64_t v12 = "LibraryView.MusicVideos";
        goto LABEL_17;
      case 8:
        unint64_t v10 = 0xD000000000000028;
        uint64_t v12 = "LibraryView.Genres";
        goto LABEL_17;
      case 9:
        unint64_t v10 = 0xD000000000000025;
        uint64_t v12 = "LibraryView.Compilations";
        goto LABEL_17;
      case 0xA:
        unint64_t v13 = "LibraryView.Composers";
LABEL_14:
        unint64_t v11 = (unint64_t)v13 | 0x8000000000000000;
        unint64_t v10 = 0xD000000000000021;
        break;
      case 0xB:
        unint64_t v10 = 0xD000000000000026;
        uint64_t v12 = "LibraryView.Shows";
        goto LABEL_17;
      case 0xC:
        unint64_t v10 = 0xD000000000000027;
        uint64_t v12 = "LibraryView.Downloaded";
LABEL_17:
        unint64_t v11 = (unint64_t)v12 | 0x8000000000000000;
        break;
      default:
        break;
    }
    unint64_t v14 = 0xD000000000000029;
    unint64_t v15 = 0x8000000100DAC960;
    switch(v9)
    {
      case 1:
        unint64_t v16 = 0xD000000000000025;
        Swift::Int v17 = "LibraryView.RecentlyAdded";
        goto LABEL_34;
      case 2:
        unint64_t v16 = 0xD000000000000023;
        Swift::Int v17 = "LibraryView.Playlists";
        goto LABEL_34;
      case 3:
        unint64_t v16 = 0xD000000000000022;
        Swift::Int v17 = "LibraryView.Artists";
        goto LABEL_34;
      case 4:
        uint64_t v18 = "LibraryView.Albums";
        goto LABEL_29;
      case 5:
        unint64_t v16 = 0xD000000000000026;
        Swift::Int v17 = "LibraryView.Songs";
        goto LABEL_34;
      case 6:
        unint64_t v16 = 0xD000000000000027;
        Swift::Int v17 = "LibraryView.MadeForYou";
        goto LABEL_34;
      case 7:
        unint64_t v16 = 0xD000000000000022;
        Swift::Int v17 = "LibraryView.MusicVideos";
        goto LABEL_34;
      case 8:
        unint64_t v16 = 0xD000000000000028;
        Swift::Int v17 = "LibraryView.Genres";
        goto LABEL_34;
      case 9:
        unint64_t v16 = 0xD000000000000025;
        Swift::Int v17 = "LibraryView.Compilations";
        goto LABEL_34;
      case 10:
        uint64_t v18 = "LibraryView.Composers";
LABEL_29:
        unint64_t v15 = (unint64_t)v18 | 0x8000000000000000;
        unint64_t v14 = 0xD000000000000021;
        goto LABEL_30;
      case 11:
        unint64_t v16 = 0xD000000000000026;
        Swift::Int v17 = "LibraryView.Shows";
        goto LABEL_34;
      case 12:
        unint64_t v16 = 0xD000000000000027;
        Swift::Int v17 = "LibraryView.Downloaded";
LABEL_34:
        unint64_t v15 = (unint64_t)v17 | 0x8000000000000000;
        if (v10 == v16) {
          goto LABEL_35;
        }
        goto LABEL_36;
      default:
LABEL_30:
        if (v10 != v14) {
          goto LABEL_36;
        }
LABEL_35:
        if (v11 == v15)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_41;
        }
LABEL_36:
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_38;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_41:
        uint64_t result = 0;
        char v21 = *(unsigned char *)(*(void *)(*v24 + 48) + v7);
LABEL_42:
        *a1 = v21;
        return result;
    }
  }
}

uint64_t sub_1005EAF10(void *a1, void *a2)
{
  return sub_100025F38(a1, a2, (unint64_t *)&qword_10109AB10, (uint64_t)UITab_ptr, (uint64_t *)&unk_101099100);
}

uint64_t sub_1005EAF2C(void *a1, void *a2)
{
  return sub_100025F38(a1, a2, &qword_10109A4F0, (uint64_t)MPCPlayerPath_ptr, &qword_1010B2AA0);
}

uint64_t sub_1005EAF48(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100063814((uint64_t *)&unk_1010991F0);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v14 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      type metadata accessor for AnyCancellable();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1005ED194();
          uint64_t v2 = v14;
        }
        sub_1005F6C98((unint64_t *)&unk_10109CA70, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
        uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  return v2;
}

Swift::Int sub_1005EB184(uint64_t a1, uint64_t a2)
{
  return sub_1005EB3C8(a1, a2, &qword_1010B2AC8, (unint64_t *)&qword_10109BA70);
}

Swift::Int sub_1005EB1A0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100063814(&qword_101099228);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v15 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      type metadata accessor for ImpressionTracker();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        if (*(void *)(v15 + 24) <= *(void *)(v15 + 16))
        {
          sub_1005EE78C();
          uint64_t v2 = v15;
        }
        Hasher.init(_seed:)();
        Swift::UInt v3 = sub_1003FFBD4();
        Hasher._combine(_:)(v3);
        Swift::Int result = Hasher._finalize()();
        uint64_t v5 = v2 + 56;
        uint64_t v6 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v7 = result & ~v6;
        unint64_t v8 = v7 >> 6;
        if (((-1 << v7) & ~*(void *)(v2 + 56 + 8 * (v7 >> 6))) != 0)
        {
          unint64_t v9 = __clz(__rbit64((-1 << v7) & ~*(void *)(v2 + 56 + 8 * (v7 >> 6)))) | v7 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v6) >> 6;
          do
          {
            if (++v8 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v8 == v11;
            if (v8 == v11) {
              unint64_t v8 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v5 + 8 * v8);
          }
          while (v13 == -1);
          unint64_t v9 = __clz(__rbit64(~v13)) + (v8 << 6);
        }
        *(void *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        *(void *)(*(void *)(v2 + 48) + 8 * v9) = v14;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

Swift::Int sub_1005EB3AC(uint64_t a1, uint64_t a2)
{
  return sub_1005EB3C8(a1, a2, &qword_101099258, (unint64_t *)&qword_101099260);
}

Swift::Int sub_1005EB3C8(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    sub_100063814(a3);
    uint64_t v6 = static _SetStorage.convert(_:capacity:)();
    uint64_t v19 = v6;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_100057778(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_1005EEEE4(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v6;
}

Swift::Int sub_1005EB5CC(uint64_t a1, uint64_t a2)
{
  return sub_1005EB3C8(a1, a2, (uint64_t *)&unk_101099100, (unint64_t *)&qword_10109AB10);
}

Swift::Int sub_1005EB5E8(uint64_t a1, uint64_t a2)
{
  return sub_1005EB3C8(a1, a2, &qword_1010B2AA0, &qword_10109A4F0);
}

uint64_t sub_1005EB604()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for AudioVariant();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100063814(&qword_10109C6E8);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    long long v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    char v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1005F6C98((unint64_t *)&unk_10109C6F0, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1005EBA00()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_101099110);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t result = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005EBD0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_1010B2AC0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v12 = Hasher._finalize()();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1005EC070);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005EC088()
{
  uint64_t v1 = v0;
  uint64_t v54 = type metadata accessor for Playlist.Folder.Item();
  uint64_t v2 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  id v53 = (char *)v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SidebarMenu.Item(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v57 = (unsigned __int8 *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v58 = (uint64_t)v47 - v8;
  uint64_t v9 = *v0;
  sub_100063814(&qword_1010B2AB0);
  uint64_t v10 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_46;
  }
  uint64_t v48 = v0;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 56);
  uint64_t v56 = (void *)(v9 + 56);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v55 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v50 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v2 + 32);
  uint64_t v16 = v10 + 56;
  swift_retain();
  int64_t v17 = 0;
  uint64_t v49 = "";
  v47[12] = "LibraryView.RecentlyAdded";
  v47[11] = "LibraryView.Playlists";
  v47[10] = "LibraryView.Artists";
  v47[9] = "LibraryView.Albums";
  v47[8] = "LibraryView.Songs";
  v47[7] = "LibraryView.MadeForYou";
  v47[6] = "LibraryView.MusicVideos";
  v47[5] = "LibraryView.Genres";
  v47[4] = "LibraryView.Compilations";
  v47[3] = "LibraryView.Composers";
  v47[2] = "LibraryView.Shows";
  v47[1] = "LibraryView.Downloaded";
  uint64_t v18 = (uint64_t)v57;
  uint64_t v52 = v5;
  while (1)
  {
    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      goto LABEL_47;
    }
    if (v22 >= v55) {
      break;
    }
    unint64_t v23 = v56[v22];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v55) {
        break;
      }
      unint64_t v23 = v56[v17];
      if (!v23)
      {
        int64_t v17 = v22 + 2;
        if (v22 + 2 >= v55) {
          break;
        }
        unint64_t v23 = v56[v17];
        if (!v23)
        {
          int64_t v24 = v22 + 3;
          if (v24 >= v55) {
            break;
          }
          unint64_t v23 = v56[v24];
          if (!v23)
          {
            while (1)
            {
              int64_t v17 = v24 + 1;
              if (__OFADD__(v24, 1)) {
                goto LABEL_48;
              }
              if (v17 >= v55) {
                goto LABEL_42;
              }
              unint64_t v23 = v56[v17];
              ++v24;
              if (v23) {
                goto LABEL_23;
              }
            }
          }
          int64_t v17 = v24;
        }
      }
    }
LABEL_23:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_24:
    uint64_t v25 = *(void *)(v5 + 72);
    uint64_t v26 = v58;
    sub_1005F6DFC(*(void *)(v9 + 48) + v25 * v21, v58, type metadata accessor for SidebarMenu.Item);
    Hasher.init(_seed:)();
    sub_1005F6D34(v26, v18, type metadata accessor for SidebarMenu.Item);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        Swift::UInt v27 = *v57;
        Swift::UInt v28 = 1;
        goto LABEL_27;
      case 2u:
        Hasher._combine(_:)(2uLL);
        String.hash(into:)();
        swift_bridgeObjectRelease();
        uint64_t v18 = (uint64_t)v57;
        goto LABEL_33;
      case 3u:
        uint64_t v30 = v4;
        uint64_t v31 = v9;
        BOOL v32 = v53;
        uint64_t v33 = v18;
        uint64_t v34 = v54;
        (*v51)(v53, v33, v54);
        Hasher._combine(_:)(3uLL);
        sub_1005F6C98(&qword_1010A4600, (void (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item);
        dispatch thunk of Hashable.hash(into:)();
        long long v35 = v32;
        uint64_t v9 = v31;
        uint64_t v4 = v30;
        uint64_t v5 = v52;
        uint64_t v36 = v34;
        uint64_t v18 = (uint64_t)v57;
        (*v50)(v35, v36);
        goto LABEL_33;
      case 4u:
        Swift::UInt v29 = 4;
        goto LABEL_32;
      case 5u:
        Swift::UInt v29 = 5;
        goto LABEL_32;
      default:
        Swift::UInt v27 = *v57;
        Swift::UInt v28 = 0;
LABEL_27:
        Hasher._combine(_:)(v28);
        Swift::UInt v29 = v27;
        uint64_t v18 = (uint64_t)v57;
LABEL_32:
        Hasher._combine(_:)(v29);
LABEL_33:
        Swift::Int v37 = Hasher._finalize()();
        uint64_t v38 = -1 << *(unsigned char *)(v11 + 32);
        unint64_t v39 = v37 & ~v38;
        unint64_t v40 = v39 >> 6;
        if (((-1 << v39) & ~*(void *)(v16 + 8 * (v39 >> 6))) != 0)
        {
          unint64_t v19 = __clz(__rbit64((-1 << v39) & ~*(void *)(v16 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
          goto LABEL_7;
        }
        char v41 = 0;
        unint64_t v42 = (unint64_t)(63 - v38) >> 6;
        break;
    }
    do
    {
      if (++v40 == v42 && (v41 & 1) != 0)
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        JUMPOUT(0x1005EC880);
      }
      BOOL v43 = v40 == v42;
      if (v40 == v42) {
        unint64_t v40 = 0;
      }
      v41 |= v43;
      uint64_t v44 = *(void *)(v16 + 8 * v40);
    }
    while (v44 == -1);
    unint64_t v19 = __clz(__rbit64(~v44)) + (v40 << 6);
LABEL_7:
    *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    sub_1005F6DFC(v58, *(void *)(v11 + 48) + v19 * v25, type metadata accessor for SidebarMenu.Item);
    ++*(void *)(v11 + 16);
  }
LABEL_42:
  swift_release();
  uint64_t v1 = v48;
  uint64_t v45 = 1 << *(unsigned char *)(v9 + 32);
  if (v45 > 63) {
    bzero(v56, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v56 = -1 << v45;
  }
  *(void *)(v9 + 16) = 0;
LABEL_46:
  uint64_t result = swift_release();
  *uint64_t v1 = v11;
  return result;
}

uint64_t sub_1005EC8CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_101098FB8);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    uint64_t v23 = v2;
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    uint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (!v9)
      {
        int64_t v13 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v13 >= v10) {
          goto LABEL_31;
        }
        uint64_t v9 = v6[v13];
        ++v5;
        if (!v9)
        {
          int64_t v5 = v13 + 1;
          if (v13 + 1 >= v10) {
            goto LABEL_31;
          }
          uint64_t v9 = v6[v5];
          if (!v9)
          {
            int64_t v5 = v13 + 2;
            if (v13 + 2 >= v10) {
              goto LABEL_31;
            }
            uint64_t v9 = v6[v5];
            if (!v9)
            {
              int64_t v14 = v13 + 3;
              if (v14 >= v10)
              {
LABEL_31:
                uint64_t v22 = 1 << *(unsigned char *)(v23 + 32);
                if (v22 > 63) {
                  bzero(v6, ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v22;
                }
                uint64_t v1 = v0;
                *(void *)(v23 + 16) = 0;
                break;
              }
              uint64_t v9 = v6[v14];
              if (!v9)
              {
                while (1)
                {
                  int64_t v5 = v14 + 1;
                  if (__OFADD__(v14, 1)) {
                    goto LABEL_37;
                  }
                  if (v5 >= v10) {
                    goto LABEL_31;
                  }
                  uint64_t v9 = v6[v5];
                  ++v14;
                  if (v9) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v5 = v14;
            }
          }
        }
      }
LABEL_22:
      Hasher.init(_seed:)();
      Hasher._combine(_:)(0);
      uint64_t result = Hasher._finalize()();
      uint64_t v15 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v18 = 0;
        unint64_t v19 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v19 && (v18 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          BOOL v20 = v17 == v19;
          if (v17 == v19) {
            unint64_t v17 = 0;
          }
          v18 |= v20;
          uint64_t v21 = *(void *)(v11 + 8 * v17);
        }
        while (v21 == -1);
        unint64_t v12 = __clz(__rbit64(~v21)) + (v17 << 6);
      }
      v9 &= v9 - 1;
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005ECB44()
{
  uint64_t v1 = *v0;
  sub_100063814(&qword_1010B2AA8);
  uint64_t v2 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    uint64_t v25 = (void *)(v1 + 56);
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v24 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v7 = v2 + 56;
    uint64_t result = swift_retain();
    int64_t v9 = 0;
    while (1)
    {
      if (v6)
      {
        unint64_t v11 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        unint64_t v12 = v11 | (v9 << 6);
      }
      else
      {
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v13 >= v24) {
          goto LABEL_33;
        }
        unint64_t v14 = v25[v13];
        ++v9;
        if (!v14)
        {
          int64_t v9 = v13 + 1;
          if (v13 + 1 >= v24) {
            goto LABEL_33;
          }
          unint64_t v14 = v25[v9];
          if (!v14)
          {
            int64_t v9 = v13 + 2;
            if (v13 + 2 >= v24) {
              goto LABEL_33;
            }
            unint64_t v14 = v25[v9];
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v24)
              {
LABEL_33:
                swift_release();
                uint64_t v23 = 1 << *(unsigned char *)(v1 + 32);
                if (v23 > 63) {
                  bzero(v25, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v25 = -1 << v23;
                }
                *(void *)(v1 + 16) = 0;
                break;
              }
              unint64_t v14 = v25[v15];
              if (!v14)
              {
                while (1)
                {
                  int64_t v9 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_39;
                  }
                  if (v9 >= v24) {
                    goto LABEL_33;
                  }
                  unint64_t v14 = v25[v9];
                  ++v15;
                  if (v14) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v9 = v15;
            }
          }
        }
LABEL_23:
        unint64_t v6 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
      }
      sub_1001C4750(*(void *)(v1 + 48) + 96 * v12, (uint64_t)v26);
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t result = Hasher._finalize()();
      uint64_t v16 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v7 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v10 = __clz(__rbit64((-1 << v17) & ~*(void *)(v7 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v19 = 0;
        unint64_t v20 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v20 && (v19 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v21 = v18 == v20;
          if (v18 == v20) {
            unint64_t v18 = 0;
          }
          v19 |= v21;
          uint64_t v22 = *(void *)(v7 + 8 * v18);
        }
        while (v22 == -1);
        unint64_t v10 = __clz(__rbit64(~v22)) + (v18 << 6);
      }
      *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      uint64_t result = sub_1001C4750((uint64_t)v26, *(void *)(v3 + 48) + 96 * v10);
      ++*(void *)(v3 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_1005ECEB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_101099268);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      char v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *int64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005ED194()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814((uint64_t *)&unk_1010991F0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    BOOL v27 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v26) {
          goto LABEL_33;
        }
        unint64_t v15 = v27[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v26) {
            goto LABEL_33;
          }
          unint64_t v15 = v27[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v26) {
              goto LABEL_33;
            }
            unint64_t v15 = v27[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v26)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v25 = 1 << *(unsigned char *)(v2 + 32);
                if (v25 > 63) {
                  bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v27 = -1 << v25;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v27[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v26) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v27[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      type metadata accessor for AnyCancellable();
      sub_1005F6C98((unint64_t *)&unk_10109CA70, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = result & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v21 = 0;
        unint64_t v22 = (unint64_t)(63 - v18) >> 6;
        do
        {
          if (++v20 == v22 && (v21 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v23 = v20 == v22;
          if (v20 == v22) {
            unint64_t v20 = 0;
          }
          v21 |= v23;
          uint64_t v24 = *(void *)(v8 + 8 * v20);
        }
        while (v24 == -1);
        unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005ED4BC()
{
  uint64_t v1 = *v0;
  sub_100063814(&qword_1010B2AD0);
  uint64_t v2 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v3 = v2;
  if (*(void *)(v1 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
    BOOL v27 = (void *)(v1 + 56);
    if (v4 < 64) {
      uint64_t v5 = ~(-1 << v4);
    }
    else {
      uint64_t v5 = -1;
    }
    unint64_t v6 = v5 & *(void *)(v1 + 56);
    int64_t v7 = (unint64_t)(v4 + 63) >> 6;
    uint64_t v8 = v2 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v6)
      {
        unint64_t v13 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v7) {
          goto LABEL_33;
        }
        unint64_t v16 = v27[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v7) {
            goto LABEL_33;
          }
          unint64_t v16 = v27[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v7) {
              goto LABEL_33;
            }
            unint64_t v16 = v27[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v7)
              {
LABEL_33:
                swift_release();
                uint64_t v26 = 1 << *(unsigned char *)(v1 + 32);
                if (v26 > 63) {
                  bzero(v27, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v27 = -1 << v26;
                }
                *(void *)(v1 + 16) = 0;
                break;
              }
              unint64_t v16 = v27[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v7) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v27[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v6 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = *(void *)(v1 + 48) + 104 * v14;
      long long v32 = *(_OWORD *)(v18 + 64);
      long long v33 = *(_OWORD *)(v18 + 80);
      uint64_t v34 = *(void *)(v18 + 96);
      long long v28 = *(_OWORD *)v18;
      long long v29 = *(_OWORD *)(v18 + 16);
      long long v30 = *(_OWORD *)(v18 + 32);
      long long v31 = *(_OWORD *)(v18 + 48);
      Hasher.init(_seed:)();
      Lyrics.TextLine.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v3 + 48) + 104 * v11;
      *(_OWORD *)(v12 + 64) = v32;
      *(_OWORD *)(v12 + 80) = v33;
      *(void *)(v12 + 96) = v34;
      *(_OWORD *)uint64_t v12 = v28;
      *(_OWORD *)(v12 + 16) = v29;
      *(_OWORD *)(v12 + 32) = v30;
      *(_OWORD *)(v12 + 48) = v31;
      ++*(void *)(v3 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_1005ED7D8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100063814(a2);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    uint64_t v8 = (void *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v28;
                }
                uint64_t v3 = v2;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      Swift::UInt v20 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v16);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v20);
      uint64_t result = Hasher._finalize()();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1005EDA80()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for Song();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  char v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100063814(&qword_1010B2A90);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    Swift::Int v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    long long v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      BOOL v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1005F6C98((unint64_t *)&unk_10109CB20, (void (*)(uint64_t))&type metadata accessor for Song);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1005EDE7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_1010B2A98);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005EE100()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_10109C700);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005EE3F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s23QueueSnapshotIdentifierOMa(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100063814(&qword_1010B2AD8);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v10 = *(void *)(v6 + 56);
    uint64_t v33 = (void *)(v6 + 56);
    if (v9 < 64) {
      uint64_t v11 = ~(-1 << v9);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & v10;
    unint64_t v31 = v0;
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = v7 + 56;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v15 << 6);
      }
      else
      {
        int64_t v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = v33[v19];
        ++v15;
        if (!v20)
        {
          int64_t v15 = v19 + 1;
          if (v19 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v20 = v33[v15];
          if (!v20)
          {
            int64_t v15 = v19 + 2;
            if (v19 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v20 = v33[v15];
            if (!v20)
            {
              int64_t v21 = v19 + 3;
              if (v21 >= v32)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v31;
                uint64_t v30 = 1 << *(unsigned char *)(v6 + 32);
                if (v30 > 63) {
                  bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v33 = -1 << v30;
                }
                *(void *)(v6 + 16) = 0;
                break;
              }
              unint64_t v20 = v33[v21];
              if (!v20)
              {
                while (1)
                {
                  int64_t v15 = v21 + 1;
                  if (__OFADD__(v21, 1)) {
                    goto LABEL_39;
                  }
                  if (v15 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v33[v15];
                  ++v21;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v15 = v21;
            }
          }
        }
LABEL_23:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      uint64_t v22 = *(void *)(v3 + 72);
      sub_1005F6DFC(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, _s23QueueSnapshotIdentifierOMa);
      Hasher.init(_seed:)();
      sub_1003AEBF8((uint64_t)v34);
      uint64_t result = Hasher._finalize()();
      uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = sub_1005F6DFC((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, _s23QueueSnapshotIdentifierOMa);
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v8;
  return result;
}

uint64_t sub_1005EE78C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_101099228);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      Hasher.init(_seed:)();
      Swift::UInt v19 = sub_1003FFBD4();
      Hasher._combine(_:)(v19);
      uint64_t result = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v11 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005EEA3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_101099148);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_37;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  BOOL v28 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v27 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_38;
    }
    if (v13 >= v27) {
      break;
    }
    unint64_t v14 = v28[v13];
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v27) {
        break;
      }
      unint64_t v14 = v28[v9];
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v27) {
          break;
        }
        unint64_t v14 = v28[v9];
        if (!v14)
        {
          int64_t v15 = v13 + 3;
          if (v15 >= v27) {
            break;
          }
          unint64_t v14 = v28[v15];
          if (!v14)
          {
            while (1)
            {
              int64_t v9 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_39;
              }
              if (v9 >= v27) {
                goto LABEL_33;
              }
              unint64_t v14 = v28[v9];
              ++v15;
              if (v14) {
                goto LABEL_23;
              }
            }
          }
          int64_t v9 = v15;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    char v16 = *(unsigned char *)(*(void *)(v2 + 48) + v12);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v17 = Hasher._finalize()();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v21 = 0;
    unint64_t v22 = (unint64_t)(63 - v18) >> 6;
    do
    {
      if (++v20 == v22 && (v21 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1005EEEB0);
      }
      BOOL v23 = v20 == v22;
      if (v20 == v22) {
        unint64_t v20 = 0;
      }
      v21 |= v23;
      uint64_t v24 = *(void *)(v8 + 8 * v20);
    }
    while (v24 == -1);
    unint64_t v10 = __clz(__rbit64(~v24)) + (v20 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(unsigned char *)(*(void *)(v4 + 48) + v10) = v16;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v25 = 1 << *(unsigned char *)(v2 + 32);
  if (v25 > 63) {
    bzero(v28, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v28 = -1 << v25;
  }
  *(void *)(v2 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005EEEE4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100063814(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

unint64_t sub_1005EF180(uint64_t a1, uint64_t a2)
{
  type metadata accessor for AnyCancellable();
  sub_1005F6C98((unint64_t *)&unk_10109CA70, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
  dispatch thunk of Hashable._rawHashValue(seed:)();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_1005EF268(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  Swift::UInt v4 = sub_1003FFBD4();
  Hasher._combine(_:)(v4);
  Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_1005EF310(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_1005EF394(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for AudioVariant();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1005EB604();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1005F1E0C((uint64_t (*)(void))&type metadata accessor for AudioVariant, &qword_10109C6E8);
      goto LABEL_12;
    }
    sub_1005F2B84();
  }
  uint64_t v12 = *v3;
  sub_1005F6C98((unint64_t *)&unk_10109C6F0, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    unint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1005F6C98(&qword_1010AE930, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1005EF650(Swift::Int result, unint64_t a2, char a3)
{
  unsigned __int8 v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1005EBA00();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_1005F283C(&qword_101099110);
        goto LABEL_25;
      }
      sub_1005F2F34();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      do
      {
        if (*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          if (*(unsigned char *)(*(void *)(v8 + 48) + a2) == 1) {
            uint64_t v11 = 0x657469726F766166;
          }
          else {
            uint64_t v11 = 0x64616F6C6E776F64;
          }
          unint64_t v12 = 0xE900000000000073;
          int v13 = v5;
          if (!v5)
          {
LABEL_14:
            unint64_t v14 = 0xE300000000000000;
            if (v11 == 7105633) {
              goto LABEL_22;
            }
            goto LABEL_23;
          }
        }
        else
        {
          unint64_t v12 = 0xE300000000000000;
          uint64_t v11 = 7105633;
          int v13 = v5;
          if (!v5) {
            goto LABEL_14;
          }
        }
        if (v13 == 1) {
          uint64_t v15 = 0x657469726F766166;
        }
        else {
          uint64_t v15 = 0x64616F6C6E776F64;
        }
        unint64_t v14 = 0xE900000000000073;
        if (v11 == v15)
        {
LABEL_22:
          if (v12 == v14) {
            goto LABEL_28;
          }
        }
LABEL_23:
        char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_29;
        }
        a2 = (a2 + 1) & v10;
      }
      while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_25:
  uint64_t v17 = *v21;
  *(void *)(*v21 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v17 + 48) + a2) = v5;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
LABEL_28:
    swift_bridgeObjectRelease_n();
LABEL_29:
    uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    *(void *)(v17 + 16) = v20;
  }
  return result;
}

Swift::Int sub_1005EF8D4(Swift::Int result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1005EBD0C();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_1005F283C(&qword_1010B2AC0);
        goto LABEL_31;
      }
      sub_1005F320C();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x7972617262696CLL;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            uint64_t v12 = 0x6F4E6E657473696CLL;
            unint64_t v11 = 0xE900000000000077;
            break;
          case 2:
            unint64_t v11 = 0xE600000000000000;
            uint64_t v12 = 0x6573776F7262;
            break;
          case 3:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v12 = 0x6F69646172;
            break;
          case 4:
            unint64_t v11 = 0xE600000000000000;
            uint64_t v12 = 0x686372616573;
            break;
          case 5:
            unint64_t v11 = 0xE600000000000000;
            uint64_t v12 = 0x736F65646976;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE700000000000000;
        uint64_t v14 = 0x7972617262696CLL;
        switch(v5)
        {
          case 1:
            unint64_t v13 = 0xE900000000000077;
            if (v12 != 0x6F4E6E657473696CLL) {
              goto LABEL_26;
            }
            goto LABEL_25;
          case 2:
            unint64_t v13 = 0xE600000000000000;
            if (v12 != 0x6573776F7262) {
              goto LABEL_26;
            }
            goto LABEL_25;
          case 3:
            unint64_t v13 = 0xE500000000000000;
            uint64_t v14 = 0x6F69646172;
            goto LABEL_24;
          case 4:
            unint64_t v13 = 0xE600000000000000;
            if (v12 != 0x686372616573) {
              goto LABEL_26;
            }
            goto LABEL_25;
          case 5:
            unint64_t v13 = 0xE600000000000000;
            if (v12 != 0x736F65646976) {
              goto LABEL_26;
            }
            goto LABEL_25;
          default:
LABEL_24:
            if (v12 != v14) {
              goto LABEL_26;
            }
LABEL_25:
            if (v11 == v13) {
              goto LABEL_34;
            }
LABEL_26:
            char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_35;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_31:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_34:
    swift_bridgeObjectRelease_n();
LABEL_35:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    JUMPOUT(0x1005EFC88);
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

uint64_t sub_1005EFCD0(uint64_t a1, unint64_t a2, char a3)
{
  Swift::UInt v4 = v3;
  uint64_t v8 = type metadata accessor for SidebarMenu.Item(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005EC088();
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_1005F3554();
LABEL_8:
    uint64_t v15 = *v4;
    Hasher.init(_seed:)();
    sub_1002F05EC();
    Swift::Int v16 = Hasher._finalize()();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_1005F6D34(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, type metadata accessor for SidebarMenu.Item);
        char v20 = sub_1002F3734((uint64_t)v11, a1);
        sub_1005F6D9C((uint64_t)v11, type metadata accessor for SidebarMenu.Item);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_1005F2408(type metadata accessor for SidebarMenu.Item, &qword_1010B2AB0, type metadata accessor for SidebarMenu.Item, type metadata accessor for SidebarMenu.Item);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1005F6DFC(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, type metadata accessor for SidebarMenu.Item);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1005EFF54(Swift::Int result, char a2)
{
  unint64_t v3 = result;
  unint64_t v4 = *(void *)(*v2 + 16);
  unint64_t v5 = *(void *)(*v2 + 24);
  if (v5 <= v4 || (a2 & 1) == 0)
  {
    if (a2)
    {
      sub_1005EC8CC();
      goto LABEL_8;
    }
    if (v5 <= v4)
    {
      sub_1005F3D48();
LABEL_8:
      uint64_t v6 = *v2;
      Hasher.init(_seed:)();
      Hasher._combine(_:)(0);
      uint64_t result = Hasher._finalize()();
      unint64_t v3 = result & ~(-1 << *(unsigned char *)(v6 + 32));
      if ((*(void *)(v6 + ((v3 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v3)) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
    uint64_t result = (Swift::Int)sub_1005F16C8();
  }
LABEL_9:
  uint64_t v7 = *v2;
  *(void *)(*v2 + 8 * (v3 >> 6) + 56) |= 1 << v3;
  uint64_t v8 = *(void *)(v7 + 16);
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (!v9)
  {
    *(void *)(v7 + 16) = v10;
    return result;
  }
  __break(1u);
LABEL_12:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1005F0054(unsigned __int8 *a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1005ECB44();
    }
    else
    {
      if (v7 > v6)
      {
        sub_1005F1848();
        goto LABEL_31;
      }
      sub_1005F3F8C();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    int v9 = *a1;
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v10 = Hasher._finalize()();
    uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
    a2 = v10 & ~v11;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v12 = ~v11;
      while (1)
      {
        sub_1001C46F4(*(void *)(v8 + 48) + 96 * a2, (uint64_t)v25);
        unint64_t v13 = 0xD00000000000002CLL;
        unint64_t v14 = 0x8000000100DAD300;
        if (v25[0]) {
          break;
        }
        unint64_t v15 = 0xD00000000000002CLL;
        unint64_t v16 = 0x8000000100DAD300;
        if (v9) {
          goto LABEL_18;
        }
LABEL_24:
        if (v15 == v13 && v16 == v14) {
          goto LABEL_34;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100176B98((uint64_t)v25);
        if (v17) {
          goto LABEL_35;
        }
        a2 = (a2 + 1) & v12;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_31;
        }
      }
      if (v25[0] == 1) {
        unint64_t v15 = 0xD00000000000001CLL;
      }
      else {
        unint64_t v15 = 0xD000000000000029;
      }
      if (v25[0] == 1) {
        unint64_t v16 = 0x8000000100DAD330;
      }
      else {
        unint64_t v16 = 0x8000000100DAD350;
      }
      if (!v9) {
        goto LABEL_24;
      }
LABEL_18:
      if (v9 == 1) {
        unint64_t v13 = 0xD00000000000001CLL;
      }
      else {
        unint64_t v13 = 0xD000000000000029;
      }
      if (v9 == 1) {
        unint64_t v14 = 0x8000000100DAD330;
      }
      else {
        unint64_t v14 = 0x8000000100DAD350;
      }
      goto LABEL_24;
    }
  }
LABEL_31:
  uint64_t v18 = *v23;
  *(void *)(*v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1001C4750((uint64_t)a1, *(void *)(v18 + 48) + 96 * a2);
  uint64_t v20 = *(void *)(v18 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
LABEL_34:
    swift_bridgeObjectRelease_n();
    sub_100176B98((uint64_t)v25);
LABEL_35:
    uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    *(void *)(v18 + 16) = v22;
  }
  return result;
}

Swift::Int sub_1005F02E0(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  unint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1005ECEB4();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_1005F1A0C();
      goto LABEL_22;
    }
    sub_1005F42C4();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  BOOL v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *BOOL v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1005F047C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1005ED194();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1005F268C((uint64_t *)&unk_1010991F0);
      goto LABEL_12;
    }
    sub_1005F4574();
  }
  uint64_t v8 = *v3;
  type metadata accessor for AnyCancellable();
  sub_1005F6C98((unint64_t *)&unk_10109CA70, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
  uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    sub_1005F6C98(&qword_101099200, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    do
    {
      uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
      if (result) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v11 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v11 + 48) + 8 * a2) = v5;
  uint64_t v12 = *(void *)(v11 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (!v13)
  {
    *(void *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1005F0668(Swift::Int result, unint64_t a2, char a3)
{
  unint64_t v4 = v3;
  Swift::Int v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1005ED4BC();
    }
    else
    {
      if (v8 > v7)
      {
        uint64_t result = (Swift::Int)sub_1005F1BCC();
        goto LABEL_22;
      }
      sub_1005F4874();
    }
    uint64_t v9 = *v3;
    Hasher.init(_seed:)();
    Lyrics.TextLine.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      uint64_t v12 = *(void *)(v6 + 16);
      do
      {
        uint64_t v13 = *(void *)(v9 + 48);
        uint64_t v14 = v13 + 104 * a2;
        if (*(void *)(v14 + 16) == v12
          && *(double *)(v13 + 104 * a2) == *(double *)v6
          && *(double *)(v14 + 8) == *(double *)(v6 + 8)
          && *(double *)(v14 + 40) == *(double *)(v6 + 40)
          && *(double *)(v14 + 48) == *(double *)(v6 + 48))
        {
          unint64_t v15 = *(uint64_t (**)(uint64_t))(v14 + 56);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          uint64_t v16 = swift_retain();
          uint64_t v17 = v15(v16);
          uint64_t v19 = v18;
          if (v17 == (*(uint64_t (**)(void))(v6 + 56))() && v19 == v20) {
            goto LABEL_25;
          }
          char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          unint64_t v4 = v3;
          if (v22) {
            goto LABEL_26;
          }
        }
        a2 = (a2 + 1) & v11;
      }
      while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_22:
  uint64_t v23 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v24 = *(void *)(v23 + 48) + 104 * a2;
  long long v25 = *(_OWORD *)(v6 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v6;
  *(_OWORD *)(v24 + 16) = v25;
  *(void *)(v24 + 96) = *(void *)(v6 + 96);
  long long v26 = *(_OWORD *)(v6 + 80);
  *(_OWORD *)(v24 + 64) = *(_OWORD *)(v6 + 64);
  *(_OWORD *)(v24 + 80) = v26;
  long long v27 = *(_OWORD *)(v6 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v6 + 32);
  *(_OWORD *)(v24 + 48) = v27;
  uint64_t v28 = *(void *)(v23 + 16);
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
    __break(1u);
LABEL_25:
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
LABEL_26:
    uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    *(void *)(v23 + 16) = v30;
  }
  return result;
}

Swift::Int sub_1005F0924(Swift::Int result, unint64_t a2, char a3, uint64_t *a4)
{
  Swift::UInt v6 = result;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v9 = v7 + 1;
  if (a3)
  {
    sub_1005ED7D8(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (Swift::Int)sub_1005F283C(a4);
      goto LABEL_14;
    }
    sub_1005F4B70(v9, a4);
  }
  uint64_t v10 = *v4;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v6);
  uint64_t result = Hasher._finalize()();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = *(void *)(v10 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == v6)
    {
LABEL_13:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v12 + a2) == v6) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v14 + 48) + a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

uint64_t sub_1005F0A80(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = type metadata accessor for Song();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  BOOL v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1005EDA80();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1005F1E0C((uint64_t (*)(void))&type metadata accessor for Song, &qword_1010B2A90);
      goto LABEL_12;
    }
    sub_1005F4DE8();
  }
  uint64_t v13 = *v3;
  sub_1005F6C98((unint64_t *)&unk_10109CB20, (void (*)(uint64_t))&type metadata accessor for Song);
  uint64_t v14 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_1005F6C98((unint64_t *)&unk_1010AAEB0, (void (*)(uint64_t))&type metadata accessor for Song);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1005F0D3C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005EDE7C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1005F20BC();
      goto LABEL_14;
    }
    sub_1005F5198();
  }
  uint64_t v8 = *v3;
  uint64_t result = static Hasher._hash(seed:_:)();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1005F0E60(void *a1, unint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = _s23QueueSnapshotIdentifierOMa(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005EE3F0();
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_1005F56B8();
LABEL_8:
    uint64_t v15 = *v4;
    Hasher.init(_seed:)();
    sub_1003AEBF8((uint64_t)v27);
    Swift::Int v16 = Hasher._finalize()();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_1005F6D34(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, _s23QueueSnapshotIdentifierOMa);
        char v20 = sub_1003B1D80((uint64_t)v11, a1);
        sub_1005F6D9C((uint64_t)v11, _s23QueueSnapshotIdentifierOMa);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_1005F2408(_s23QueueSnapshotIdentifierOMa, &qword_1010B2AD8, _s23QueueSnapshotIdentifierOMa, _s23QueueSnapshotIdentifierOMa);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1005F6DFC((uint64_t)a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, _s23QueueSnapshotIdentifierOMa);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1005F10E4(Swift::Int result, unint64_t a2, char a3)
{
  Swift::Int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1005EE78C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1005F268C(&qword_101099228);
      goto LABEL_12;
    }
    sub_1005F5A1C();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  Swift::UInt v9 = sub_1003FFBD4();
  Hasher._combine(_:)(v9);
  uint64_t result = Hasher._finalize()();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = ~v10;
    type metadata accessor for ImpressionTracker();
    do
    {
      uint64_t result = sub_1003FFBD4();
      if (result == *(void *)(v5 + 56)) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v11;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (!v14)
  {
    *(void *)(v12 + 16) = v15;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1005F1254(Swift::Int result, unint64_t a2, char a3)
{
  unsigned __int8 v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1005EEA3C();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_1005F283C(&qword_101099148);
        goto LABEL_46;
      }
      sub_1005F5CA0();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    Library.Menu.Identifier.rawValue.getter(v5);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      uint64_t v11 = v5;
      while (1)
      {
        unint64_t v12 = 0xD000000000000029;
        unint64_t v13 = 0x8000000100DAC960;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v12 = 0xD000000000000025;
            BOOL v14 = "LibraryView.RecentlyAdded";
            goto LABEL_22;
          case 2:
            unint64_t v12 = 0xD000000000000023;
            BOOL v14 = "LibraryView.Playlists";
            goto LABEL_22;
          case 3:
            unint64_t v12 = 0xD000000000000022;
            BOOL v14 = "LibraryView.Artists";
            goto LABEL_22;
          case 4:
            uint64_t v15 = "LibraryView.Albums";
            goto LABEL_33;
          case 5:
            unint64_t v12 = 0xD000000000000026;
            BOOL v14 = "LibraryView.Songs";
            goto LABEL_22;
          case 6:
            unint64_t v12 = 0xD000000000000027;
            BOOL v14 = "LibraryView.MadeForYou";
            goto LABEL_22;
          case 7:
            unint64_t v12 = 0xD000000000000022;
            BOOL v14 = "LibraryView.MusicVideos";
            goto LABEL_22;
          case 8:
            unint64_t v12 = 0xD000000000000028;
            BOOL v14 = "LibraryView.Genres";
            goto LABEL_22;
          case 9:
            unint64_t v12 = 0xD000000000000025;
            BOOL v14 = "LibraryView.Compilations";
            goto LABEL_22;
          case 0xA:
            uint64_t v15 = "LibraryView.Composers";
LABEL_33:
            unint64_t v13 = (unint64_t)v15 | 0x8000000000000000;
            unint64_t v12 = 0xD000000000000021;
            break;
          case 0xB:
            unint64_t v12 = 0xD000000000000026;
            BOOL v14 = "LibraryView.Shows";
            goto LABEL_22;
          case 0xC:
            unint64_t v12 = 0xD000000000000027;
            BOOL v14 = "LibraryView.Downloaded";
LABEL_22:
            unint64_t v13 = (unint64_t)v14 | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v16 = 0xD000000000000029;
        unint64_t v17 = 0x8000000100DAC960;
        switch(v11)
        {
          case 1:
            unint64_t v16 = 0xD000000000000025;
            uint64_t v18 = "LibraryView.RecentlyAdded";
            goto LABEL_37;
          case 2:
            unint64_t v16 = 0xD000000000000023;
            uint64_t v18 = "LibraryView.Playlists";
            goto LABEL_37;
          case 3:
            unint64_t v16 = 0xD000000000000022;
            uint64_t v18 = "LibraryView.Artists";
            goto LABEL_37;
          case 4:
            uint64_t v19 = "LibraryView.Albums";
            goto LABEL_44;
          case 5:
            unint64_t v16 = 0xD000000000000026;
            uint64_t v18 = "LibraryView.Songs";
            goto LABEL_37;
          case 6:
            unint64_t v16 = 0xD000000000000027;
            uint64_t v18 = "LibraryView.MadeForYou";
            goto LABEL_37;
          case 7:
            unint64_t v16 = 0xD000000000000022;
            uint64_t v18 = "LibraryView.MusicVideos";
            goto LABEL_37;
          case 8:
            unint64_t v16 = 0xD000000000000028;
            uint64_t v18 = "LibraryView.Genres";
            goto LABEL_37;
          case 9:
            unint64_t v16 = 0xD000000000000025;
            uint64_t v18 = "LibraryView.Compilations";
            goto LABEL_37;
          case 10:
            uint64_t v19 = "LibraryView.Composers";
LABEL_44:
            unint64_t v17 = (unint64_t)v19 | 0x8000000000000000;
            if (v12 != 0xD000000000000021) {
              goto LABEL_40;
            }
            goto LABEL_39;
          case 11:
            unint64_t v16 = 0xD000000000000026;
            uint64_t v18 = "LibraryView.Shows";
            goto LABEL_37;
          case 12:
            unint64_t v16 = 0xD000000000000027;
            uint64_t v18 = "LibraryView.Downloaded";
LABEL_37:
            unint64_t v17 = (unint64_t)v18 | 0x8000000000000000;
            break;
          default:
            break;
        }
        if (v12 == v16)
        {
LABEL_39:
          if (v13 == v17) {
            goto LABEL_49;
          }
        }
LABEL_40:
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          break;
        }
        a2 = (a2 + 1) & v10;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_50:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      JUMPOUT(0x1005F1654);
    }
  }
LABEL_46:
  uint64_t v21 = *v25;
  *(void *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v21 + 48) + a2) = v26;
  uint64_t v22 = *(void *)(v21 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
LABEL_49:
    swift_bridgeObjectRelease_n();
    goto LABEL_50;
  }
  *(void *)(v21 + 16) = v24;
  return result;
}

void *sub_1005F16BC()
{
  return sub_1005F283C(&qword_101099110);
}

void *sub_1005F16C8()
{
  uint64_t v1 = v0;
  sub_100063814(&qword_101098FB8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_27:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  uint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (!v12)
    {
      int64_t v14 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v14 >= v13) {
        goto LABEL_27;
      }
      uint64_t v12 = *(void *)(v6 + 8 * v14);
      ++v9;
      if (!v12)
      {
        int64_t v9 = v14 + 1;
        if (v14 + 1 >= v13) {
          goto LABEL_27;
        }
        uint64_t v12 = *(void *)(v6 + 8 * v9);
        if (!v12)
        {
          int64_t v9 = v14 + 2;
          if (v14 + 2 >= v13) {
            goto LABEL_27;
          }
          uint64_t v12 = *(void *)(v6 + 8 * v9);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_12:
    v12 &= v12 - 1;
  }
  int64_t v15 = v14 + 3;
  if (v15 >= v13) {
    goto LABEL_27;
  }
  uint64_t v12 = *(void *)(v6 + 8 * v15);
  if (v12)
  {
    int64_t v9 = v15;
    goto LABEL_12;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_27;
    }
    uint64_t v12 = *(void *)(v6 + 8 * v9);
    ++v15;
    if (v12) {
      goto LABEL_12;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

void *sub_1005F1828()
{
  return sub_1005F1E0C((uint64_t (*)(void))&type metadata accessor for Playlist.Variant, &qword_101099118);
}

void *sub_1005F1848()
{
  uint64_t v1 = v0;
  sub_100063814(&qword_1010B2AA8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v13) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 96 * v15;
    sub_1001C46F4(*(void *)(v2 + 48) + 96 * v15, (uint64_t)v20);
    uint64_t result = (void *)sub_1001C4750((uint64_t)v20, *(void *)(v4 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v13) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005F1A0C()
{
  uint64_t v1 = v0;
  sub_100063814(&qword_101099268);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005F1BC0()
{
  return sub_1005F268C((uint64_t *)&unk_1010991F0);
}

void *sub_1005F1BCC()
{
  uint64_t v1 = v0;
  sub_100063814(&qword_1010B2AD0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v13) {
      goto LABEL_28;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28)
      {
        int64_t v9 = v27 + 2;
        if (v27 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v28 = *(void *)(v6 + 8 * v9);
        if (!v28) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 104 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)(v17 + 16);
    char v19 = *(unsigned char *)(v17 + 24);
    char v20 = *(unsigned char *)(v17 + 25);
    char v21 = *(unsigned char *)(v17 + 26);
    uint64_t v22 = *(void *)(v17 + 32);
    uint64_t v23 = *(void *)(v4 + 48) + v16;
    long long v24 = *(_OWORD *)(v17 + 56);
    long long v30 = *(_OWORD *)(v17 + 72);
    long long v25 = *(_OWORD *)(v17 + 88);
    long long v26 = *(_OWORD *)(v17 + 40);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v17;
    *(void *)(v23 + 16) = v18;
    *(unsigned char *)(v23 + 24) = v19;
    *(unsigned char *)(v23 + 25) = v20;
    *(unsigned char *)(v23 + 26) = v21;
    *(void *)(v23 + 32) = v22;
    *(_OWORD *)(v23 + 40) = v26;
    *(_OWORD *)(v23 + 56) = v24;
    *(_OWORD *)(v23 + 72) = v30;
    *(_OWORD *)(v23 + 88) = v25;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v29 = v27 + 3;
  if (v29 >= v13) {
    goto LABEL_28;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005F1E00()
{
  return sub_1005F283C(&qword_101099218);
}

void *sub_1005F1E0C(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - v7;
  sub_100063814(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = static _SetStorage.copy(original:)();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  uint64_t result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  long long v26 = v4;
  int64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    uint64_t result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1005F20BC()
{
  uint64_t v1 = v0;
  sub_100063814(&qword_1010B2A98);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005F2254()
{
  uint64_t v1 = v0;
  sub_100063814(&qword_10109C700);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005F2408(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v8 = v4;
  uint64_t v9 = a1(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  unint64_t v12 = (char *)&v30 - v11;
  sub_100063814(a2);
  uint64_t v13 = *v4;
  uint64_t v14 = static _SetStorage.copy(original:)();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v8 = v15;
    return result;
  }
  uint64_t result = (void *)(v14 + 56);
  unint64_t v17 = (unint64_t)((1 << *(unsigned char *)(v15 + 32)) + 63) >> 6;
  long long v30 = v8;
  uint64_t v31 = (const void *)(v13 + 56);
  if (v15 != v13 || (unint64_t)result >= v13 + 56 + 8 * v17) {
    uint64_t result = memmove(result, v31, 8 * v17);
  }
  int64_t v19 = 0;
  *(void *)(v15 + 16) = *(void *)(v13 + 16);
  uint64_t v20 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & *(void *)(v13 + 56);
  int64_t v23 = (unint64_t)(v20 + 63) >> 6;
  while (1)
  {
    if (v22)
    {
      unint64_t v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v25 = v24 | (v19 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v27 >= v23) {
      goto LABEL_28;
    }
    unint64_t v28 = *((void *)v31 + v27);
    ++v19;
    if (!v28)
    {
      int64_t v19 = v27 + 1;
      if (v27 + 1 >= v23) {
        goto LABEL_28;
      }
      unint64_t v28 = *((void *)v31 + v19);
      if (!v28)
      {
        int64_t v19 = v27 + 2;
        if (v27 + 2 >= v23) {
          goto LABEL_28;
        }
        unint64_t v28 = *((void *)v31 + v19);
        if (!v28) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v19 << 6);
LABEL_12:
    unint64_t v26 = *(void *)(v10 + 72) * v25;
    sub_1005F6D34(*(void *)(v13 + 48) + v26, (uint64_t)v12, a3);
    uint64_t result = (void *)sub_1005F6DFC((uint64_t)v12, *(void *)(v15 + 48) + v26, a4);
  }
  int64_t v29 = v27 + 3;
  if (v29 >= v23)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v8 = v30;
    goto LABEL_30;
  }
  unint64_t v28 = *((void *)v31 + v29);
  if (v28)
  {
    int64_t v19 = v29;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v19 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v19 >= v23) {
      goto LABEL_28;
    }
    unint64_t v28 = *((void *)v31 + v19);
    ++v29;
    if (v28) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_1005F2680()
{
  return sub_1005F29E0(&qword_1010B2AC8);
}

void *sub_1005F268C(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100063814(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(void *)(*(void *)(v5 + 48) + 8 * v16) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    uint64_t result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1005F2830()
{
  return sub_1005F29E0(&qword_101099258);
}

void *sub_1005F283C(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100063814(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1005F29C8()
{
  return sub_1005F29E0((uint64_t *)&unk_101099100);
}

id sub_1005F29D4()
{
  return sub_1005F29E0(&qword_1010B2AA0);
}

id sub_1005F29E0(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100063814(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    unint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1005F2B84()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AudioVariant();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100063814(&qword_10109C6E8);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1005F6C98((unint64_t *)&unk_10109C6F0, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005F2F34()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_101099110);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005F320C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_1010B2AC0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v12 = Hasher._finalize()();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x1005F353CLL);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005F3554()
{
  uint64_t v1 = v0;
  uint64_t v50 = type metadata accessor for Playlist.Folder.Item();
  uint64_t v2 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v49 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SidebarMenu.Item(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v53 = (unsigned __int8 *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v54 = (uint64_t)v43 - v8;
  uint64_t v9 = *v0;
  sub_100063814(&qword_1010B2AB0);
  uint64_t v10 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_44;
  }
  uint64_t v44 = v0;
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 56);
  uint64_t v51 = v9 + 56;
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v52 = (unint64_t)(v12 + 63) >> 6;
  id v46 = (void (**)(char *, uint64_t))(v2 + 8);
  id v47 = (void (**)(char *, unsigned __int8 *, uint64_t))(v2 + 32);
  uint64_t v16 = v10 + 56;
  swift_retain();
  int64_t v17 = 0;
  uint64_t v45 = "";
  v43[12] = "LibraryView.RecentlyAdded";
  v43[11] = "LibraryView.Playlists";
  v43[10] = "LibraryView.Artists";
  v43[9] = "LibraryView.Albums";
  v43[8] = "LibraryView.Songs";
  v43[7] = "LibraryView.MadeForYou";
  v43[6] = "LibraryView.MusicVideos";
  v43[5] = "LibraryView.Genres";
  v43[4] = "LibraryView.Compilations";
  v43[3] = "LibraryView.Composers";
  v43[2] = "LibraryView.Shows";
  v43[1] = "LibraryView.Downloaded";
  uint64_t v48 = v9;
  while (1)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      goto LABEL_45;
    }
    if (v21 >= v52) {
      break;
    }
    unint64_t v22 = *(void *)(v51 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v52) {
        break;
      }
      unint64_t v22 = *(void *)(v51 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v52) {
          break;
        }
        unint64_t v22 = *(void *)(v51 + 8 * v17);
        if (!v22)
        {
          int64_t v23 = v21 + 3;
          if (v23 >= v52) {
            break;
          }
          unint64_t v22 = *(void *)(v51 + 8 * v23);
          if (!v22)
          {
            while (1)
            {
              int64_t v17 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_46;
              }
              if (v17 >= v52) {
                goto LABEL_42;
              }
              unint64_t v22 = *(void *)(v51 + 8 * v17);
              ++v23;
              if (v22) {
                goto LABEL_23;
              }
            }
          }
          int64_t v17 = v23;
        }
      }
    }
LABEL_23:
    unint64_t v15 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    uint64_t v24 = *(void *)(v5 + 72);
    uint64_t v25 = v54;
    sub_1005F6D34(*(void *)(v9 + 48) + v24 * v20, v54, type metadata accessor for SidebarMenu.Item);
    Hasher.init(_seed:)();
    sub_1005F6D34(v25, (uint64_t)v53, type metadata accessor for SidebarMenu.Item);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        Swift::UInt v26 = *v53;
        Swift::UInt v27 = 1;
        goto LABEL_27;
      case 2u:
        Hasher._combine(_:)(2uLL);
        String.hash(into:)();
        swift_bridgeObjectRelease();
        goto LABEL_33;
      case 3u:
        uint64_t v29 = v5;
        uint64_t v30 = v4;
        uint64_t v32 = v49;
        uint64_t v31 = v50;
        (*v47)(v49, v53, v50);
        Hasher._combine(_:)(3uLL);
        sub_1005F6C98(&qword_1010A4600, (void (*)(uint64_t))&type metadata accessor for Playlist.Folder.Item);
        dispatch thunk of Hashable.hash(into:)();
        uint64_t v33 = v32;
        uint64_t v4 = v30;
        uint64_t v5 = v29;
        uint64_t v9 = v48;
        (*v46)(v33, v31);
        goto LABEL_33;
      case 4u:
        Swift::UInt v28 = 4;
        goto LABEL_32;
      case 5u:
        Swift::UInt v28 = 5;
        goto LABEL_32;
      default:
        Swift::UInt v26 = *v53;
        Swift::UInt v27 = 0;
LABEL_27:
        Hasher._combine(_:)(v27);
        Swift::UInt v28 = v26;
LABEL_32:
        Hasher._combine(_:)(v28);
LABEL_33:
        Swift::Int v34 = Hasher._finalize()();
        uint64_t v35 = -1 << *(unsigned char *)(v11 + 32);
        unint64_t v36 = v34 & ~v35;
        unint64_t v37 = v36 >> 6;
        if (((-1 << v36) & ~*(void *)(v16 + 8 * (v36 >> 6))) != 0)
        {
          unint64_t v18 = __clz(__rbit64((-1 << v36) & ~*(void *)(v16 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
          goto LABEL_7;
        }
        char v38 = 0;
        unint64_t v39 = (unint64_t)(63 - v35) >> 6;
        break;
    }
    do
    {
      if (++v37 == v39 && (v38 & 1) != 0)
      {
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        JUMPOUT(0x1005F3CFCLL);
      }
      BOOL v40 = v37 == v39;
      if (v37 == v39) {
        unint64_t v37 = 0;
      }
      v38 |= v40;
      uint64_t v41 = *(void *)(v16 + 8 * v37);
    }
    while (v41 == -1);
    unint64_t v18 = __clz(__rbit64(~v41)) + (v37 << 6);
LABEL_7:
    *(void *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    sub_1005F6DFC(v54, *(void *)(v11 + 48) + v18 * v24, type metadata accessor for SidebarMenu.Item);
    ++*(void *)(v11 + 16);
  }
LABEL_42:
  uint64_t result = swift_release_n();
  uint64_t v1 = v44;
LABEL_44:
  *uint64_t v1 = v11;
  return result;
}

uint64_t sub_1005F3D48()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_101098FB8);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_33:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  uint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (!v9)
    {
      int64_t v13 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if (v13 >= v10) {
        goto LABEL_31;
      }
      uint64_t v9 = *(void *)(v6 + 8 * v13);
      ++v5;
      if (!v9)
      {
        int64_t v5 = v13 + 1;
        if (v13 + 1 >= v10) {
          goto LABEL_31;
        }
        uint64_t v9 = *(void *)(v6 + 8 * v5);
        if (!v9)
        {
          int64_t v5 = v13 + 2;
          if (v13 + 2 >= v10) {
            goto LABEL_31;
          }
          uint64_t v9 = *(void *)(v6 + 8 * v5);
          if (!v9) {
            break;
          }
        }
      }
    }
LABEL_22:
    Hasher.init(_seed:)();
    Hasher._combine(_:)(0);
    uint64_t result = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v18 = 0;
      unint64_t v19 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v19 && (v18 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        BOOL v20 = v17 == v19;
        if (v17 == v19) {
          unint64_t v17 = 0;
        }
        v18 |= v20;
        uint64_t v21 = *(void *)(v11 + 8 * v17);
      }
      while (v21 == -1);
      unint64_t v12 = __clz(__rbit64(~v21)) + (v17 << 6);
    }
    v9 &= v9 - 1;
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    ++*(void *)(v4 + 16);
  }
  int64_t v14 = v13 + 3;
  if (v14 >= v10)
  {
LABEL_31:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_33;
  }
  uint64_t v9 = *(void *)(v6 + 8 * v14);
  if (v9)
  {
    int64_t v5 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v5 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_31;
    }
    uint64_t v9 = *(void *)(v6 + 8 * v5);
    ++v14;
    if (v9) {
      goto LABEL_22;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1005F3F8C()
{
  uint64_t v1 = *v0;
  sub_100063814(&qword_1010B2AA8);
  uint64_t v2 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v23 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v24 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v24) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v23 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v24) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v9);
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v24) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v23 + 8 * v9);
        if (!v14) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    sub_1001C46F4(*(void *)(v1 + 48) + 96 * v12, (uint64_t)v25);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v16 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v7 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v17) & ~*(void *)(v7 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v19 = 0;
      unint64_t v20 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v20 && (v19 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v21 = v18 == v20;
        if (v18 == v20) {
          unint64_t v18 = 0;
        }
        v19 |= v21;
        uint64_t v22 = *(void *)(v7 + 8 * v18);
      }
      while (v22 == -1);
      unint64_t v10 = __clz(__rbit64(~v22)) + (v18 << 6);
    }
    *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t result = sub_1001C4750((uint64_t)v25, *(void *)(v3 + 48) + 96 * v10);
    ++*(void *)(v3 + 16);
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v24)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v23 + 8 * v15);
  if (v14)
  {
    int64_t v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v24) {
      goto LABEL_33;
    }
    unint64_t v14 = *(void *)(v23 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005F42C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_101099268);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    char v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005F4574()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814((uint64_t *)&unk_1010991F0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v25 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v26) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v26) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v26) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    type metadata accessor for AnyCancellable();
    sub_1005F6C98((unint64_t *)&unk_10109CA70, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    swift_retain();
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v21 = 0;
      unint64_t v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v23 = v20 == v22;
        if (v20 == v22) {
          unint64_t v20 = 0;
        }
        v21 |= v23;
        uint64_t v24 = *(void *)(v8 + 8 * v20);
      }
      while (v24 == -1);
      unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v26)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v25 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v26) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005F4874()
{
  uint64_t v1 = *v0;
  sub_100063814(&qword_1010B2AD0);
  uint64_t v2 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = v1 + 56;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v1 + 56);
  int64_t v36 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v18 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v19 = v18 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v5 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v5 + 8 * v10);
      if (!v21)
      {
        int64_t v10 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v5 + 8 * v10);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_24:
    uint64_t v23 = *(void *)(v1 + 48) + 104 * v19;
    long long v25 = *(_OWORD *)v23;
    long long v24 = *(_OWORD *)(v23 + 16);
    long long v39 = *(_OWORD *)(v23 + 32);
    long long v26 = *(_OWORD *)(v23 + 48);
    long long v27 = *(_OWORD *)(v23 + 64);
    long long v28 = *(_OWORD *)(v23 + 80);
    uint64_t v43 = *(void *)(v23 + 96);
    long long v41 = v27;
    long long v42 = v28;
    long long v40 = v26;
    long long v37 = v25;
    long long v38 = v24;
    Hasher.init(_seed:)();
    sub_100262270((uint64_t)&v37);
    Lyrics.TextLine.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v29 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v8 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v30) & ~*(void *)(v8 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v8 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v11 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v3 + 48) + 104 * v11;
    long long v13 = v39;
    long long v14 = v37;
    *(_OWORD *)(v12 + 16) = v38;
    *(_OWORD *)(v12 + 32) = v13;
    long long v15 = v40;
    long long v16 = v41;
    long long v17 = v42;
    *(void *)(v12 + 96) = v43;
    *(_OWORD *)(v12 + 64) = v16;
    *(_OWORD *)(v12 + 80) = v17;
    *(_OWORD *)(v12 + 48) = v15;
    *(_OWORD *)uint64_t v12 = v14;
    ++*(void *)(v3 + 16);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v5 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v5 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005F4B70(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100063814(a2);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    Swift::UInt v20 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v16);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v20);
    uint64_t result = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005F4DE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Song();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100063814(&qword_1010B2A90);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  BOOL v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1005F6C98((unint64_t *)&unk_10109CB20, (void (*)(uint64_t))&type metadata accessor for Song);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005F5198()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_1010B2A98);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = static Hasher._hash(seed:_:)();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005F53FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_10109C700);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain_n();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005F56B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s23QueueSnapshotIdentifierOMa(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100063814(&qword_1010B2AD8);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v3 + 72);
    sub_1005F6D34(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, _s23QueueSnapshotIdentifierOMa);
    Hasher.init(_seed:)();
    sub_1003AEBF8((uint64_t)v33);
    uint64_t result = Hasher._finalize()();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_1005F6DFC((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, _s23QueueSnapshotIdentifierOMa);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005F5A1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_101099228);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_23;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v15 >= v10) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v10)
          {
LABEL_32:
            uint64_t result = swift_release();
            uint64_t v1 = v0;
            goto LABEL_34;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          int64_t v5 = v17;
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_23:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    Hasher.init(_seed:)();
    Swift::UInt v19 = sub_1003FFBD4();
    Hasher._combine(_:)(v19);
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_35;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v11 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_retain();
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1005F5CA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100063814(&qword_101099148);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_35;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v26 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v27 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_36;
    }
    if (v13 >= v27) {
      break;
    }
    unint64_t v14 = *(void *)(v26 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v27) {
        break;
      }
      unint64_t v14 = *(void *)(v26 + 8 * v9);
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v27) {
          break;
        }
        unint64_t v14 = *(void *)(v26 + 8 * v9);
        if (!v14)
        {
          int64_t v15 = v13 + 3;
          if (v15 >= v27) {
            break;
          }
          unint64_t v14 = *(void *)(v26 + 8 * v15);
          if (!v14)
          {
            while (1)
            {
              int64_t v9 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_37;
              }
              if (v9 >= v27) {
                goto LABEL_33;
              }
              unint64_t v14 = *(void *)(v26 + 8 * v9);
              ++v15;
              if (v14) {
                goto LABEL_23;
              }
            }
          }
          int64_t v9 = v15;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    char v16 = *(unsigned char *)(*(void *)(v2 + 48) + v12);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v17 = Hasher._finalize()();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v21 = 0;
    unint64_t v22 = (unint64_t)(63 - v18) >> 6;
    do
    {
      if (++v20 == v22 && (v21 & 1) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        JUMPOUT(0x1005F60DCLL);
      }
      BOOL v23 = v20 == v22;
      if (v20 == v22) {
        unint64_t v20 = 0;
      }
      v21 |= v23;
      uint64_t v24 = *(void *)(v8 + 8 * v20);
    }
    while (v24 == -1);
    unint64_t v10 = __clz(__rbit64(~v24)) + (v20 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(unsigned char *)(*(void *)(v4 + 48) + v10) = v16;
    ++*(void *)(v4 + 16);
  }
LABEL_33:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_35:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005F6110(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AudioVariant();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1005F6C98((unint64_t *)&unk_10109C6F0, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v17 = result;
  if (v9)
  {
    int64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1005E88C0((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1005F62AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_100478E5C();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1005EA06C(&v6, v5, &qword_101099218);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1005F6340(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1005F6CE0();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1005E8E64(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1005F63B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1005E9868(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1005F644C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1002E5008();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v9 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      long long v5 = *(_OWORD *)(v4 + 80);
      v10[4] = *(_OWORD *)(v4 + 64);
      v10[5] = v5;
      uint64_t v11 = *(void *)(v4 + 96);
      long long v6 = *(_OWORD *)(v4 + 16);
      v10[0] = *(_OWORD *)v4;
      v10[1] = v6;
      long long v7 = *(_OWORD *)(v4 + 48);
      v10[2] = *(_OWORD *)(v4 + 32);
      v10[3] = v7;
      sub_100262270((uint64_t)v10);
      sub_1005E9D14((uint64_t)&v8, (uint64_t)v10);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v4 += 104;
      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_1005F6520(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_47:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ImpressionTracker();
  sub_1005F6C98(&qword_1010A8FA0, (void (*)(uint64_t))type metadata accessor for ImpressionTracker);
  uint64_t v3 = Set.init(minimumCapacity:)();
  if (v2)
  {
    swift_bridgeObjectRetain();
    unint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      return v3;
    }
  }
  else
  {
    unint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      return v3;
    }
  }
  unint64_t v4 = 0;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v6 = __OFADD__(v4++, 1);
      if (v6) {
        goto LABEL_43;
      }
    }
    else
    {
      if (v4 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_44;
      }
      uint64_t v5 = *(void *)(a1 + 32 + 8 * v4);
      swift_retain();
      BOOL v6 = __OFADD__(v4++, 1);
      if (v6)
      {
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
    }
    if ((v3 & 0xC000000000000001) != 0)
    {
      if (v3 < 0) {
        uint64_t v7 = v3;
      }
      else {
        uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v8 = __CocoaSet.member(for:)();
      swift_release();
      if (v8)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v9 = __CocoaSet.count.getter();
        if (__OFADD__(v9, 1)) {
          goto LABEL_46;
        }
        Swift::Int v10 = sub_1005EB1A0(v7, v9 + 1);
        Swift::Int v26 = v10;
        if (*(void *)(v10 + 24) <= *(void *)(v10 + 16))
        {
          swift_retain();
          sub_1005EE78C();
          uint64_t v11 = v26;
        }
        else
        {
          uint64_t v11 = v10;
          swift_retain();
        }
        sub_1005EF268(v5, v11);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v3 = v11;
      }
      goto LABEL_8;
    }
    Hasher.init(_seed:)();
    Swift::UInt v12 = sub_1003FFBD4();
    Hasher._combine(_:)(v12);
    Swift::Int v13 = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v15 = v13 & ~v14;
    if ((*(void *)(v3 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
    {
      uint64_t v16 = ~v14;
      while (sub_1003FFBD4() != *(void *)(v5 + 56))
      {
        unint64_t v15 = (v15 + 1) & v16;
        if (((*(void *)(v3 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
          goto LABEL_27;
        }
      }
      swift_release();
      goto LABEL_8;
    }
LABEL_27:
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v18 = *(void *)(v3 + 16);
    unint64_t v19 = *(void *)(v3 + 24);
    swift_retain();
    if (v19 > v18)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1005F268C(&qword_101099228);
      }
      goto LABEL_40;
    }
    if (isUniquelyReferenced_nonNull_native) {
      sub_1005EE78C();
    }
    else {
      sub_1005F5A1C();
    }
    Hasher.init(_seed:)();
    Hasher._combine(_:)(*(void *)(v5 + 56));
    Swift::Int v20 = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v15 = v20 & ~v21;
    if ((*(void *)(v3 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15)) {
      break;
    }
LABEL_40:
    *(void *)(v3 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v15;
    *(void *)(*(void *)(v3 + 48) + 8 * v15) = v5;
    uint64_t v23 = *(void *)(v3 + 16);
    BOOL v6 = __OFADD__(v23, 1);
    uint64_t v24 = v23 + 1;
    if (v6) {
      goto LABEL_45;
    }
    *(void *)(v3 + 16) = v24;
    swift_release();
    swift_bridgeObjectRelease();
LABEL_8:
    if (v4 == v2) {
      return v3;
    }
  }
  uint64_t v22 = ~v21;
  while (sub_1003FFBD4() != *(void *)(v5 + 56))
  {
    unint64_t v15 = (v15 + 1) & v22;
    if (((*(void *)(v3 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
      goto LABEL_40;
    }
  }
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1005F697C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_10006F5EC();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v8 = result;
  if (v2)
  {
    unint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_100073690(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1005F6A14(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  sub_100057778(0, (unint64_t *)&qword_10109AB10);
  sub_10004697C((unint64_t *)&qword_1010A1B50, (unint64_t *)&qword_10109AB10);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        Swift::Int v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_100025F38(&v9, v6, (unint64_t *)&qword_10109AB10, (uint64_t)UITab_ptr, (uint64_t *)&unk_101099100);
      }
    }
    else
    {
      Swift::Int v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_100025F38(&v9, v8, (unint64_t *)&qword_10109AB10, (uint64_t)UITab_ptr, (uint64_t *)&unk_101099100);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005F6BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010A4440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005F6C38(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010A4440);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005F6C98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005F6CE0()
{
  unint64_t result = qword_1010B2AB8;
  if (!qword_1010B2AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2AB8);
  }
  return result;
}

uint64_t sub_1005F6D34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005F6D9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005F6DFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id sub_1005F6F1C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingShuffleButton();
  return [super dealloc];
}

uint64_t sub_1005F6FBC()
{
  _s16PlaylistsManagerCMa();
  uint64_t v0 = swift_allocObject();
  sub_100063814(&qword_1010AA968);
  Published.init(initialValue:)();
  uint64_t v1 = OBJC_IVAR____TtCO5Music14ClarityUIMusic16PlaylistsManager_preferences;
  if (qword_101098488 != -1) {
    swift_once();
  }
  *(void *)(v0 + v1) = qword_101129B38;
  type metadata accessor for Playlist();
  swift_retain();
  MusicLibraryRequest.init()();
  return v0;
}

uint64_t *sub_1005F70B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100063814((uint64_t *)&unk_1010A3958);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for MultimodalListStyle.Layout();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *((void *)v11 + 1);
    char v14 = v11[16];
    KeyValueObservationTrigger.keyPath.getter();
    *(void *)uint64_t v10 = v12;
    *((void *)v10 + 1) = v13;
    v10[16] = v14;
    uint64_t v15 = *(int *)(a3 + 24);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *((void *)v17 + 1);
    LOBYTE(v12) = v17[16];
    KeyValueObservationTrigger.keyPath.getter();
    *(void *)uint64_t v16 = v18;
    *((void *)v16 + 1) = v19;
    v16[16] = v12;
  }
  return a1;
}

uint64_t sub_1005F7228(uint64_t a1)
{
  sub_100063814((uint64_t *)&unk_1010A3958);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for MultimodalListStyle.Layout();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  sub_10020EEF0();

  return sub_10020EEF0();
}

void *sub_1005F72E4(void *a1, void *a2, uint64_t a3)
{
  sub_100063814((uint64_t *)&unk_1010A3958);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for MultimodalListStyle.Layout();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  char v12 = v9[16];
  KeyValueObservationTrigger.keyPath.getter();
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  v8[16] = v12;
  uint64_t v13 = *(int *)(a3 + 24);
  char v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *(void *)v15;
  uint64_t v17 = *((void *)v15 + 1);
  LOBYTE(v10) = v15[16];
  KeyValueObservationTrigger.keyPath.getter();
  *(void *)char v14 = v16;
  *((void *)v14 + 1) = v17;
  v14[16] = v10;
  return a1;
}

void *sub_1005F740C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000637B8((uint64_t)a1, (uint64_t *)&unk_1010A3958);
    sub_100063814((uint64_t *)&unk_1010A3958);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for MultimodalListStyle.Layout();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *((void *)v9 + 1);
  char v12 = v9[16];
  KeyValueObservationTrigger.keyPath.getter();
  *(void *)uint64_t v8 = v10;
  *((void *)v8 + 1) = v11;
  v8[16] = v12;
  sub_10020EEF0();
  uint64_t v13 = *(int *)(a3 + 24);
  char v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *(void *)v15;
  uint64_t v17 = *((void *)v15 + 1);
  LOBYTE(v10) = v15[16];
  KeyValueObservationTrigger.keyPath.getter();
  *(void *)char v14 = v16;
  *((void *)v14 + 1) = v17;
  v14[16] = v10;
  sub_10020EEF0();
  return a1;
}

char *sub_1005F7564(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_100063814((uint64_t *)&unk_1010A3958);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for MultimodalListStyle.Layout();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  v10[16] = v11[16];
  char v12 = &a1[v9];
  uint64_t v13 = &a2[v9];
  *(_OWORD *)char v12 = *(_OWORD *)v13;
  v12[16] = v13[16];
  return a1;
}

char *sub_1005F7660(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000637B8((uint64_t)a1, (uint64_t *)&unk_1010A3958);
    uint64_t v6 = sub_100063814((uint64_t *)&unk_1010A3958);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for MultimodalListStyle.Layout();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  char v11 = v10[16];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  v9[16] = v11;
  sub_10020EEF0();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  char v14 = &a2[v12];
  char v15 = v14[16];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  v13[16] = v15;
  sub_10020EEF0();
  return a1;
}

uint64_t sub_1005F7790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005F77A4);
}

uint64_t sub_1005F77A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100063814(&qword_1010A8410);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1005F7868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005F787C);
}

uint64_t sub_1005F787C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100063814(&qword_1010A8410);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 16) = -(char)a2;
  }
  return result;
}

uint64_t _s17RootPlaylistsViewVMa()
{
  uint64_t result = qword_1010B2B88;
  if (!qword_1010B2B88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005F798C()
{
  sub_1003EBFC8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1005F7A24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005F7A40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100063814(&qword_1010B2BC8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = v1;
  sub_100063814(&qword_1010B2BD0);
  uint64_t v7 = sub_10006389C(&qword_1010B2BD8);
  unint64_t v8 = sub_1005FA9E4();
  uint64_t v16 = v7;
  uint64_t v17 = &type metadata for Int;
  unint64_t v18 = v8;
  uint64_t v19 = &protocol witness table for Int;
  swift_getOpaqueTypeConformance2();
  NavigationStack.init<>(root:)();
  uint64_t v9 = *Color.MusicTint.normal.unsafeMutableAddressor();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v16 = v9;
  swift_retain_n();
  uint64_t v11 = AnyShapeStyle.init<A>(_:)();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 16))(a1, v6, v3);
  swift_release();
  uint64_t v12 = (uint64_t *)(a1 + *(int *)(sub_100063814(&qword_1010B2BF8) + 36));
  *uint64_t v12 = KeyPath;
  v12[1] = v11;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1005F7C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = _s17RootPlaylistsViewVMa();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010B2BF0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100063814(&qword_1010B2BD8);
  uint64_t v22 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = static HorizontalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v13 = sub_100063814(&qword_1010B2C00);
  sub_1005F7F9C((uint64_t)&v9[*(int *)(v13 + 44)]);
  uint64_t v21 = _s17RootPlaylistsViewVMa;
  sub_1005FB328(a1, (uint64_t)v6, (uint64_t (*)(void))_s17RootPlaylistsViewVMa);
  unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v20[1] = v14 + v5;
  uint64_t v15 = swift_allocObject();
  sub_1005FAD68((uint64_t)v6, v15 + v14);
  sub_10006CAB8((uint64_t)v9, (uint64_t)v12, &qword_1010B2BF0);
  uint64_t v16 = (uint64_t (**)())&v12[*(int *)(v10 + 36)];
  *uint64_t v16 = sub_1005FADCC;
  v16[1] = (uint64_t (*)())v15;
  v16[2] = 0;
  v16[3] = 0;
  sub_1000637B8((uint64_t)v9, &qword_1010B2BF0);
  _s16PlaylistsManagerCMa();
  sub_1005FB3F0(&qword_1010B2C08, (void (*)(uint64_t))_s16PlaylistsManagerCMa);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v17 = *(void *)(v24 + 16);
  swift_bridgeObjectRelease();
  uint64_t v24 = v17;
  sub_1005FB328(a1, (uint64_t)v6, (uint64_t (*)(void))v21);
  uint64_t v18 = swift_allocObject();
  sub_1005FAD68((uint64_t)v6, v18 + v14);
  sub_1005FA9E4();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return sub_1000637B8((uint64_t)v12, &qword_1010B2BD8);
}

uint64_t sub_1005F7F9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v92 = a1;
  uint64_t v93 = _s19PlaylistDetailsViewVMa();
  __chkstk_darwin(v93);
  uint64_t v71 = (uint64_t *)((char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_100063814(&qword_10109EC90);
  __chkstk_darwin(v3 - 8);
  uint64_t v82 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for Playlist();
  uint64_t v5 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v70 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v83 = (char *)&v69 - v8;
  uint64_t v90 = sub_100063814(&qword_1010B2C18);
  __chkstk_darwin(v90);
  uint64_t v91 = (uint64_t)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100063814(&qword_1010B2C20);
  __chkstk_darwin(v87);
  unint64_t v89 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100063814(&qword_1010B2C28);
  __chkstk_darwin(v94);
  double v85 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for MultimodalListStyle.IconStyle();
  uint64_t v78 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  id v77 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v76 = (char *)&v69 - v14;
  uint64_t v15 = sub_100063814(&qword_1010A84C0);
  __chkstk_darwin(v15 - 8);
  uint64_t v73 = (uint64_t)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v69 - v18;
  uint64_t v86 = type metadata accessor for MultimodalListStyle();
  uint64_t v75 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010B2C30);
  uint64_t v74 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100063814(&qword_1010B2C38);
  uint64_t v81 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  id v72 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  id v80 = (char *)&v69 - v27;
  _s17RootPlaylistsViewVMa();
  uint64_t v28 = v1;
  _s16PlaylistsManagerCMa();
  sub_1005FB3F0(&qword_1010B2C08, (void (*)(uint64_t))_s16PlaylistsManagerCMa);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v29 = swift_release();
  uint64_t v30 = v95;
  unint64_t v31 = *(void *)(v95 + 16);
  if (v31 < 2)
  {
    uint64_t v81 = v22;
    uint64_t v44 = (uint64_t)v89;
    uint64_t v45 = (int *)v93;
    uint64_t v46 = v91;
    if (v31)
    {
      uint64_t v47 = v5;
      uint64_t v48 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      unint64_t v49 = v95 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      uint64_t v50 = (uint64_t)v82;
      uint64_t v51 = v84;
      v48(v82, v49, v84);
      uint64_t v52 = 0;
    }
    else
    {
      uint64_t v52 = 1;
      uint64_t v51 = v84;
      uint64_t v47 = v5;
      uint64_t v50 = (uint64_t)v82;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 56))(v50, v52, 1, v51);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v50, 1, v51) == 1)
    {
      sub_1000637B8(v50, &qword_10109EC90);
      if (qword_101097958 != -1) {
        swift_once();
      }
      uint64_t v53 = type metadata accessor for Logger();
      sub_100050A90(v53, (uint64_t)qword_101128E90);
      uint64_t v54 = Logger.logObject.getter();
      os_log_type_t v55 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v56 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "No Content", v56, 2u);
        swift_slowDealloc();
      }

      *(void *)uint64_t v46 = 0;
      *(unsigned char *)(v46 + 8) = 1;
      swift_storeEnumTagMultiPayload();
      sub_1005FAFB4();
      return _ConditionalContent<>.init(storage:)();
    }
    else
    {
      uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 32);
      uint64_t v58 = v83;
      v57(v83, v50, v51);
      unint64_t v59 = v70;
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v70, v58, v51);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v61 = (uint64_t)v71;
      *uint64_t v71 = KeyPath;
      sub_100063814((uint64_t *)&unk_1010A3958);
      swift_storeEnumTagMultiPayload();
      uint64_t v62 = v61 + v45[5];
      *(void *)uint64_t v62 = sub_1003E85C0;
      *(void *)(v62 + 8) = 0;
      *(unsigned char *)(v62 + 16) = 0;
      uint64_t v63 = v61 + v45[6];
      *(void *)uint64_t v63 = sub_10020E810;
      *(void *)(v63 + 8) = 0;
      *(unsigned char *)(v63 + 16) = 0;
      uint64_t v64 = v61 + v45[7];
      *(void *)uint64_t v64 = sub_1003E861C;
      *(void *)(v64 + 8) = 0;
      *(unsigned char *)(v64 + 16) = 0;
      uint64_t v65 = v61 + v45[8];
      char v99 = 0;
      State.init(wrappedValue:)();
      uint64_t v66 = v96;
      *(unsigned char *)uint64_t v65 = v95;
      *(void *)(v65 + 8) = v66;
      v57((char *)(v61 + v45[9]), (uint64_t)v59, v51);
      sub_1005FB328(v61, v44, (uint64_t (*)(void))_s19PlaylistDetailsViewVMa);
      swift_storeEnumTagMultiPayload();
      uint64_t v67 = sub_100063858(&qword_1010B2C48, &qword_1010B2C30);
      uint64_t v95 = v81;
      uint64_t v96 = v86;
      uint64_t v97 = v67;
      uint64_t v98 = &protocol witness table for MultimodalListStyle;
      swift_getOpaqueTypeConformance2();
      sub_1005FB3F0(&qword_1010B2C50, (void (*)(uint64_t))_s19PlaylistDetailsViewVMa);
      uint64_t v68 = (uint64_t)v85;
      _ConditionalContent<>.init(storage:)();
      sub_10006CAB8(v68, v46, &qword_1010B2C28);
      swift_storeEnumTagMultiPayload();
      sub_1005FAFB4();
      _ConditionalContent<>.init(storage:)();
      sub_1000637B8(v68, &qword_1010B2C28);
      sub_1005FB390(v61, (uint64_t (*)(void))_s19PlaylistDetailsViewVMa);
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v83, v51);
    }
  }
  else
  {
    __chkstk_darwin(v29);
    *(&v69 - 2) = v28;
    *(&v69 - 1) = v30;
    sub_100063814(&qword_1010B2C58);
    sub_100063858(&qword_1010B2C60, &qword_1010B2C58);
    List<>.init(content:)();
    swift_bridgeObjectRelease();
    sub_1004DAF44((uint64_t)v19);
    uint64_t v32 = type metadata accessor for MultimodalListStyle.Layout();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v19, 0, 1, v32);
    uint64_t v33 = v78;
    BOOL v34 = v76;
    uint64_t v35 = v79;
    (*(void (**)(char *, void, uint64_t))(v78 + 104))(v76, enum case for MultimodalListStyle.IconStyle.square(_:), v79);
    sub_10006CAB8((uint64_t)v19, v73, &qword_1010A84C0);
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v77, v34, v35);
    MultimodalListStyle.init(layout:iconStyle:)();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
    sub_1000637B8((uint64_t)v19, &qword_1010A84C0);
    uint64_t v36 = sub_100063858(&qword_1010B2C48, &qword_1010B2C30);
    uint64_t v37 = v72;
    uint64_t v38 = v86;
    View.listStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v21, v38);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v24, v22);
    long long v40 = v80;
    uint64_t v39 = v81;
    uint64_t v41 = v88;
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v80, v37, v88);
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v89, v40, v41);
    swift_storeEnumTagMultiPayload();
    uint64_t v95 = v22;
    uint64_t v96 = v38;
    uint64_t v97 = v36;
    uint64_t v98 = &protocol witness table for MultimodalListStyle;
    swift_getOpaqueTypeConformance2();
    sub_1005FB3F0(&qword_1010B2C50, (void (*)(uint64_t))_s19PlaylistDetailsViewVMa);
    uint64_t v42 = (uint64_t)v85;
    _ConditionalContent<>.init(storage:)();
    sub_10006CAB8(v42, v91, &qword_1010B2C28);
    swift_storeEnumTagMultiPayload();
    sub_1005FAFB4();
    _ConditionalContent<>.init(storage:)();
    sub_1000637B8(v42, &qword_1010B2C28);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v40, v41);
  }
}

uint64_t sub_1005F8DB4()
{
  uint64_t v0 = sub_100063814(&qword_10109BA40);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s17RootPlaylistsViewVMa();
  _s16PlaylistsManagerCMa();
  sub_1005FB3F0(&qword_1010B2C08, (void (*)(uint64_t))_s16PlaylistsManagerCMa);
  uint64_t v3 = StateObject.wrappedValue.getter();
  uint64_t v4 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v5 = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = v3;
  sub_100066A3C((uint64_t)v2, (uint64_t)&unk_1010B2C10, (uint64_t)v6);
  swift_release();
  return swift_release();
}

void sub_1005F8F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = _s17RootPlaylistsViewVMa();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v25 - v8;
  if (qword_101097958 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = sub_100050A90(v10, (uint64_t)qword_101128E90);
  uint64_t v28 = a3;
  sub_1005FB328(a3, (uint64_t)v9, (uint64_t (*)(void))_s17RootPlaylistsViewVMa);
  uint64_t v27 = v11;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = v6;
    *(_DWORD *)uint64_t v14 = 134217984;
    v25[1] = v14 + 4;
    _s16PlaylistsManagerCMa();
    sub_1005FB3F0(&qword_1010B2C08, (void (*)(uint64_t))_s16PlaylistsManagerCMa);
    StateObject.wrappedValue.getter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v15 = *(void *)(v29 + 16);
    swift_bridgeObjectRelease();
    sub_1005FB390((uint64_t)v9, (uint64_t (*)(void))_s17RootPlaylistsViewVMa);
    uint64_t v29 = v15;
    uint64_t v6 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Playlists loaded: %ld", v14, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    sub_1005FB390((uint64_t)v9, (uint64_t (*)(void))_s17RootPlaylistsViewVMa);
  }

  if (qword_101098488 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v16 = *(void *)(v29 + 16);
  swift_bridgeObjectRelease();
  uint64_t v17 = v28;
  _s16PlaylistsManagerCMa();
  sub_1005FB3F0(&qword_1010B2C08, (void (*)(uint64_t))_s16PlaylistsManagerCMa);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v18 = *(void *)(v29 + 16);
  swift_bridgeObjectRelease();
  if (v16 != v18)
  {
    sub_1005FB328(v17, (uint64_t)v6, (uint64_t (*)(void))_s17RootPlaylistsViewVMa);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    int v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 134218240;
      LODWORD(v28) = v21;
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      uint64_t v23 = *(void *)(v29 + 16);
      swift_bridgeObjectRelease();
      uint64_t v29 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 12) = 2048;
      StateObject.wrappedValue.getter();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v24 = *(void *)(v29 + 16);
      swift_bridgeObjectRelease();
      sub_1005FB390((uint64_t)v6, (uint64_t (*)(void))_s17RootPlaylistsViewVMa);
      uint64_t v29 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v28, "Playlists mismatch between Preferences.shared.selectedPlaylists count (%ld) and playlistsManager.playlists.count (%ld)", (uint8_t *)v22, 0x16u);
      swift_slowDealloc();
    }
    else
    {
      sub_1005FB390((uint64_t)v6, (uint64_t (*)(void))_s17RootPlaylistsViewVMa);
    }
  }
}

uint64_t sub_1005F9578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100063814(&qword_1010B2C68);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v22 - v11;
  uint64_t v13 = _s17RootPlaylistsViewVMa();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13 - 8);
  sub_1005FB328(a1, (uint64_t)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))_s17RootPlaylistsViewVMa);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1005FAD68((uint64_t)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  v22[1] = a2;
  swift_bridgeObjectRetain();
  sub_100063814(&qword_1010AA968);
  sub_100063814(&qword_1010B2C70);
  sub_100063858(&qword_1010B2C78, &qword_1010AA968);
  sub_100063858(&qword_1010B2C80, &qword_1010B2C70);
  sub_1005FB3F0(&qword_1010B2C88, (void (*)(uint64_t))&type metadata accessor for Playlist);
  ForEach<>.init(_:content:)();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v18(v9, v12, v6);
  *(void *)a3 = sub_10020E810;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = sub_1005FB224;
  *(void *)(a3 + 32) = v17;
  uint64_t v19 = sub_100063814(&qword_1010B2C90);
  v18((char *)(a3 + *(int *)(v19 + 48)), v9, v6);
  KeyValueObservationTrigger.keyPath.getter();
  os_log_type_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  swift_retain();
  v20(v12, v6);
  v20(v9, v6);
  sub_10020EEF0();
  return swift_release();
}

uint64_t sub_1005F98F4()
{
  uint64_t v1 = sub_100063814((uint64_t *)&unk_1010B51F0);
  __chkstk_darwin(v1 - 8);
  uint64_t v37 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100063814(&qword_10109BA40);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100063814(&qword_1010B2CB8);
  __chkstk_darwin(v41);
  uint64_t v38 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_10109EC90);
  __chkstk_darwin(v7 - 8);
  long long v40 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = type metadata accessor for Playlist();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v42 = (uint64_t)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s17RootPlaylistsViewVMa();
  uint64_t v39 = v0;
  _s16PlaylistsManagerCMa();
  sub_1005FB3F0(&qword_1010B2C08, (void (*)(uint64_t))_s16PlaylistsManagerCMa);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v15 = *((void *)v43 + 2);
  uint64_t v36 = v5;
  if (v15)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, &v43[(*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)], v12);
    uint64_t v16 = 0;
  }
  else
  {
    uint64_t v16 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v16, 1, v12);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v17(v11, 1, v12) == 1)
  {
    uint64_t v18 = &qword_10109EC90;
    uint64_t v19 = (uint64_t)v11;
    return sub_1000637B8(v19, v18);
  }
  uint64_t v35 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v17;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v42, v11, v12);
  uint64_t v20 = _s20PlaybackStateManagerCMa();
  uint64_t v39 = sub_1005FB3F0((unint64_t *)&qword_1010A8510, (void (*)(uint64_t))_s20PlaybackStateManagerCMa);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  int v21 = v43;
  if (v43)
  {
    id v22 = [v43 state];
    swift_release();
  }
  else
  {
    swift_release();
    id v22 = 0;
  }
  uint64_t v23 = v38;
  uint64_t v38 = (char *)v20;
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v24 = (uint64_t)v40;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v25 = (uint64_t)v23 + *(int *)(v41 + 48);
  void *v23 = v22;
  sub_1003D4604(v24, v25);
  if (v22 != (id)4 && v22 != (id)2 || v35(v25, 1, v12) == 1)
  {
    StateObject.wrappedValue.getter();
    uint64_t v26 = type metadata accessor for Playlist.Entry();
    uint64_t v27 = (uint64_t)v37;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v37, 1, 1, v26);
    uint64_t v28 = v42;
    sub_100392280(v42, v27);
    swift_release();
    sub_1000637B8(v27, (uint64_t *)&unk_1010B51F0);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v28, v12);
    uint64_t v18 = &qword_1010B2CB8;
    uint64_t v19 = (uint64_t)v23;
    return sub_1000637B8(v19, v18);
  }
  sub_1000637B8(v25, &qword_10109EC90);
  StateObject.wrappedValue.getter();
  uint64_t v30 = type metadata accessor for TaskPriority();
  uint64_t v31 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v36, 1, 1, v30);
  type metadata accessor for MainActor();
  uint64_t v32 = static MainActor.shared.getter();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v32;
  *(void *)(v33 + 24) = &protocol witness table for MainActor;
  sub_100194A54(v31, (uint64_t)&unk_1010A8560, v33);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v42, v12);
}

uint64_t sub_1005F9FF8(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010B2C98);
  __chkstk_darwin(v2);
  uint64_t v11 = a1;
  sub_1005FA1B0(a1, (uint64_t)&v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  _s16PlaylistCellViewVMa();
  sub_1005FB3F0(&qword_1010B2CA0, (void (*)(uint64_t))_s16PlaylistCellViewVMa);
  uint64_t v4 = _s19PlaylistDetailsViewVMa();
  uint64_t v5 = sub_10006389C(&qword_1010B2CA8);
  uint64_t v6 = sub_1005FB3F0(&qword_1010B2C50, (void (*)(uint64_t))_s19PlaylistDetailsViewVMa);
  unint64_t v7 = sub_10005D180();
  unint64_t v8 = sub_1005FB288();
  uint64_t v12 = v4;
  uint64_t v13 = &type metadata for String;
  uint64_t v14 = v5;
  uint64_t v15 = v6;
  unint64_t v16 = v7;
  unint64_t v17 = v8;
  swift_getOpaqueTypeConformance2();
  return NavigationLink.init(destination:label:)();
}

uint64_t sub_1005FA1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v63 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin(v63);
  uint64_t v62 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v60 = *(void *)(v4 - 8);
  uint64_t v61 = v4;
  __chkstk_darwin(v4);
  unint64_t v59 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814((uint64_t *)&unk_1010A1D20);
  __chkstk_darwin(v9 - 8);
  uint64_t v53 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100063814((uint64_t *)&unk_1010B40D0);
  uint64_t v56 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v54 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100063814(&qword_1010AD548);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100063814(&qword_1010B2CA8);
  __chkstk_darwin(v57);
  os_log_type_t v55 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Playlist();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v21 = (int *)_s19PlaylistDetailsViewVMa();
  __n128 v22 = __chkstk_darwin(v21);
  uint64_t v24 = (uint64_t *)((char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16))(v20, a1, v17, v22);
  uint64_t *v24 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_1010A3958);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = (char *)v24 + v21[5];
  *(void *)uint64_t v25 = sub_1003E85C0;
  *((void *)v25 + 1) = 0;
  v25[16] = 0;
  uint64_t v26 = (char *)v24 + v21[6];
  *(void *)uint64_t v26 = sub_10020E810;
  *((void *)v26 + 1) = 0;
  v26[16] = 0;
  uint64_t v27 = (char *)v24 + v21[7];
  *(void *)uint64_t v27 = sub_1003E861C;
  *((void *)v27 + 1) = 0;
  v27[16] = 0;
  uint64_t v28 = (char *)v24 + v21[8];
  LOBYTE(v65) = 0;
  State.init(wrappedValue:)();
  uint64_t v29 = v68;
  char *v28 = v67[0];
  *((void *)v28 + 1) = v29;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))((char *)v24 + v21[9], v20, v17);
  uint64_t v65 = Playlist.name.getter();
  uint64_t v66 = v30;
  uint64_t v31 = v53;
  Playlist.artworkViewModel.getter(v53);
  Playlist.variant.getter();
  uint64_t v32 = sub_100063814(&qword_1010A4530);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v8, 0, 10, v32);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)v67);
  uint64_t v34 = (uint64_t)v59;
  uint64_t v33 = v60;
  uint64_t v35 = v61;
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v59, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v61);
  uint64_t v36 = v54;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v31, (uint64_t)v8, (uint64_t)v67, v34, v54);
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v35);
  sub_1005FB390((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder);
  sub_1000637B8(v31, (uint64_t *)&unk_1010A1D20);
  uint64_t v37 = v56;
  uint64_t v38 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v15, v36, v58);
  uint64_t v39 = &v15[*(int *)(v13 + 44)];
  *(void *)uint64_t v39 = 0;
  *((_WORD *)v39 + 4) = 257;
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
  long long v40 = v62;
  uint64_t v41 = &v62[*(int *)(v63 + 28)];
  uint64_t v42 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v43 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 104))(v41, v42, v43);
  __asm { FMOV            V0.2D, #10.0 }
  _OWORD *v40 = _Q0;
  uint64_t v49 = (uint64_t)v55;
  uint64_t v50 = (uint64_t)&v55[*(int *)(v57 + 36)];
  sub_1005FB328((uint64_t)v40, v50, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v50 + *(int *)(sub_100063814(&qword_10109D3E8) + 36)) = 256;
  sub_10006CAB8((uint64_t)v15, v49, &qword_1010AD548);
  sub_1005FB390((uint64_t)v40, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000637B8((uint64_t)v15, &qword_1010AD548);
  sub_1005FB3F0(&qword_1010B2C50, (void (*)(uint64_t))_s19PlaylistDetailsViewVMa);
  sub_10005D180();
  sub_1005FB288();
  View.navigationTitle<A, B>(_:icon:)();
  sub_1000637B8(v49, &qword_1010B2CA8);
  swift_bridgeObjectRelease();
  return sub_1005FB390((uint64_t)v24, (uint64_t (*)(void))_s19PlaylistDetailsViewVMa);
}

uint64_t sub_1005FA930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a2 + *(int *)(_s16PlaylistCellViewVMa() + 24);
  uint64_t v5 = type metadata accessor for Playlist();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v4, a1, v5);
  *(void *)a2 = sub_1003E85C0;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = sub_10020E810;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 0;
  return result;
}

uint64_t sub_1005FA9DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1005F7C20(*(void *)(v1 + 16), a1);
}

unint64_t sub_1005FA9E4()
{
  unint64_t result = qword_1010B2BE0;
  if (!qword_1010B2BE0)
  {
    sub_10006389C(&qword_1010B2BD8);
    sub_100063858(&qword_1010B2BE8, &qword_1010B2BF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2BE0);
  }
  return result;
}

uint64_t sub_1005FAA84()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_1005FAB00(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_10109EC90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_10006CAB8(a1, (uint64_t)&v9 - v6, &qword_10109EC90);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10006CAB8((uint64_t)v7, (uint64_t)v4, &qword_10109EC90);
  swift_retain();
  static Published.subscript.setter();
  return sub_1000637B8((uint64_t)v7, &qword_10109EC90);
}

uint64_t sub_1005FAC10@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1005FAC90()
{
  return static Published.subscript.setter();
}

uint64_t sub_1005FAD0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1005FAD38()
{
  return EnvironmentValues.tint.setter();
}

uint64_t sub_1005FAD68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s17RootPlaylistsViewVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005FADCC()
{
  _s17RootPlaylistsViewVMa();

  return sub_1005F8DB4();
}

void sub_1005FAE38(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(_s17RootPlaylistsViewVMa() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_1005F8F58(a1, a2, v6);
}

uint64_t sub_1005FAEC0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1005FAF00(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000154F4;
  return sub_100479658(a1, v4, v5, v6);
}

unint64_t sub_1005FAFB4()
{
  unint64_t result = qword_1010B2C40;
  if (!qword_1010B2C40)
  {
    sub_10006389C(&qword_1010B2C28);
    sub_10006389C(&qword_1010B2C30);
    type metadata accessor for MultimodalListStyle();
    sub_100063858(&qword_1010B2C48, &qword_1010B2C30);
    swift_getOpaqueTypeConformance2();
    sub_1005FB3F0(&qword_1010B2C50, (void (*)(uint64_t))_s19PlaylistDetailsViewVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2C40);
  }
  return result;
}

uint64_t sub_1005FB0DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1005F9578(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1005FB0E8()
{
  uint64_t v1 = *(void *)(_s17RootPlaylistsViewVMa() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_100063814((uint64_t *)&unk_1010A3958);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for MultimodalListStyle.Layout();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  sub_10020EEF0();
  sub_10020EEF0();

  return swift_deallocObject();
}

uint64_t sub_1005FB224()
{
  return sub_1005F98F4();
}

uint64_t sub_1005FB280@<X0>(uint64_t a1@<X8>)
{
  return sub_1005FA930(*(void *)(v1 + 16), a1);
}

unint64_t sub_1005FB288()
{
  unint64_t result = qword_1010B2CB0;
  if (!qword_1010B2CB0)
  {
    sub_10006389C(&qword_1010B2CA8);
    sub_1004FF5B0();
    sub_100063858(qword_1010B76D0, &qword_10109D3E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2CB0);
  }
  return result;
}

uint64_t sub_1005FB328(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005FB390(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005FB3F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005FB448()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_1005FB484()
{
  unint64_t result = qword_1010B2CC0;
  if (!qword_1010B2CC0)
  {
    sub_10006389C(&qword_1010B2BF8);
    sub_100063858(&qword_1010B2CC8, &qword_1010B2BC8);
    sub_100063858(&qword_1010B2CD0, &qword_1010B2CD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2CC0);
  }
  return result;
}

uint64_t sub_1005FB548()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v1 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t result = String.init(localized:table:bundle:locale:comment:)();
  qword_101129CC8 = result;
  *(void *)algn_101129CD0 = v3;
  return result;
}

char *sub_1005FB658(char *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC5Music29MCDSharePlayTogetherViewModel_session;
  uint64_t v4 = *(void **)&a1[OBJC_IVAR____TtC5Music29MCDSharePlayTogetherViewModel_session];
  id v5 = objc_allocWithZone((Class)type metadata accessor for SharePlayTogetherSessionManagementViewController(0));
  uint64_t v6 = v1;
  *(void *)&v6[OBJC_IVAR____TtC5Music41MCDSharePlayTogetherSessionViewController_contentViewController] = sub_1006DE068((uint64_t)v4);

  v18.receiver = v6;
  v18.super_class = (Class)type metadata accessor for MCDSharePlayTogetherSessionViewController();
  uint64_t v7 = (char *)objc_msgSendSuper2(&v18, "initWithNibName:bundle:", 0, 0);
  uint64_t v8 = OBJC_IVAR____TtC5Music41MCDSharePlayTogetherSessionViewController_contentViewController;
  uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC5Music41MCDSharePlayTogetherSessionViewController_contentViewController];
  uint64_t v10 = v7;
  [v10 addChildViewController:v9];
  uint64_t result = (char *)[v10 view];
  if (result)
  {
    uint64_t v12 = result;
    uint64_t result = (char *)[*(id *)&v7[v8] view];
    if (result)
    {
      uint64_t v13 = result;
      [v12 addSubview:result];

      sub_1005FBD58();
      uint64_t v14 = *(void **)&a1[v3];
      uint64_t v15 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v16 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))((swift_isaMask & *v14) + 0x360);
      uint64_t v17 = v14;
      swift_retain();
      v16(sub_1005FC328, v15);

      swift_release_n();
      return v10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1005FB83C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100057778(0, &qword_10109C1F0);
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_1005FC330;
  aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100020238;
  aBlock[3] = &unk_100FE28E8;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001D0E4();
  sub_100063814((uint64_t *)&unk_10109EB90);
  sub_10007B08C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1005FBAB4()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong navigationController];

    if (v2)
    {
      id v3 = [v2 popViewControllerAnimated:1];
    }
  }
}

void sub_1005FBBCC()
{
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for MCDSharePlayTogetherSessionViewController();
  [super viewDidLayoutSubviews];
  id v1 = [*(id *)&v0[OBJC_IVAR____TtC5Music41MCDSharePlayTogetherSessionViewController_contentViewController] view];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v0 view];
    if (v3)
    {
      uint64_t v4 = v3;
      [v3 bounds];
      double v6 = v5;
      double v8 = v7;
      double v10 = v9;
      double v12 = v11;

      [v2 setFrame:v6, v8, v10, v12];
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1005FBD58()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v1 - 8);
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [self _systemImageNamed:v2];

  id v4 = [objc_allocWithZone((Class)UIImageView) initWithImage:v3];
  id v5 = UIView.forAutolayout.getter();

  sub_100057778(0, (unint64_t *)&qword_10109BA80);
  double v6 = (void *)static UIFont.preferredFont(forTextStyle:weight:)();
  double v7 = self;
  id v8 = [v7 configurationWithFont:v6];

  id v9 = [v7 configurationWithScale:3];
  id v10 = [v8 configurationByApplyingConfiguration:v9];

  sub_100063814((uint64_t *)&unk_1010A0980);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100E252E0;
  double v12 = self;
  *(void *)(v11 + 32) = [v12 labelColor];
  *(void *)(v11 + 40) = [v12 _carSystemFocusColor];
  specialized Array._endMutation()();
  sub_100057778(0, (unint64_t *)&qword_10109BAA0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [v7 configurationWithPaletteColors:isa];

  id v15 = [v10 configurationByApplyingConfiguration:v14];
  [v5 setSymbolConfiguration:v15];

  [v5 setContentMode:1];
  id v16 = [objc_allocWithZone((Class)UILabel) init];
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v16 setText:v17];

  objc_super v18 = (void *)static UIFont.preferredFont(forTextStyle:weight:)();
  [v16 setFont:v18];

  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_100E252E0;
  *(void *)(v19 + 32) = v5;
  *(void *)(v19 + 40) = v16;
  specialized Array._endMutation()();
  id v20 = objc_allocWithZone((Class)UIStackView);
  sub_100057778(0, (unint64_t *)&qword_1010A0A30);
  id v21 = v5;
  id v22 = v16;
  Class v23 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v24 = [v20 initWithArrangedSubviews:v23];

  [v24 setAxis:0];
  [v24 setSpacing:3.0];
  id v25 = [v26 navigationItem];
  [v25 setTitleView:v24];
}

id sub_1005FC288()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MCDSharePlayTogetherSessionViewController();
  [super dealloc];
}

uint64_t type metadata accessor for MCDSharePlayTogetherSessionViewController()
{
  return self;
}

uint64_t sub_1005FC2F0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005FC328(uint64_t a1)
{
  return sub_1005FB83C(a1, v1);
}

void sub_1005FC330()
{
}

uint64_t sub_1005FC338(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  id v4 = (uint64_t *)TupleTypeMetadata;
  id v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    __chkstk_darwin(TupleTypeMetadata);
    id v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      id v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        id v16 = &v8[8 * v9];
        NSString v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)id v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  __chkstk_darwin(TupleTypeMetadata);
  id v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return TupleView.init(_:)();
}

uint64_t sub_1005FC4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for PreviewOverlay.ArtworkVariant(0);
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = qword_101097960;
  swift_bridgeObjectRetain();
  if (v15 != -1) {
    swift_once();
  }
  *(void *)unint64_t v14 = a1;
  *((void *)v14 + 1) = a2;
  unsigned char v14[16] = a3;
  v14[17] = a4 & 1;
  uint64_t v16 = qword_101097EA8;
  swift_retain();
  if (v16 != -1) {
    swift_once();
  }
  *((void *)v14 + 3) = (*(uint64_t (**)(void))(*(void *)qword_101129410 + 408))();
  type metadata accessor for PreviewPlaybackController(0);
  sub_100616A1C(&qword_10109D620, (void (*)(uint64_t))type metadata accessor for PreviewPlaybackController);
  *((void *)v14 + 4) = ObservedObject.init(wrappedValue:)();
  *((void *)v14 + 5) = v17;
  uint64_t v18 = (uint64_t *)&v14[*(int *)(v12 + 36)];
  *uint64_t v18 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_10109C850);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = sub_100063814((uint64_t *)&unk_1010B40D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(a5, v6, v19);
  uint64_t v20 = sub_100063814(&qword_10109DF30);
  return sub_100616C18((uint64_t)v14, a5 + *(int *)(v20 + 36), type metadata accessor for PreviewOverlay.ArtworkVariant);
}

id sub_1005FC838()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s13TracklistCellCMa();
  return [super dealloc];
}

uint64_t _s13TracklistCellCMa()
{
  return self;
}

uint64_t *_s13TracklistCellC8DataTypeOwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_10045C064(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t _s13TracklistCellC8DataTypeOwxx(uint64_t a1)
{
  return sub_10045C094(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *_s13TracklistCellC8DataTypeOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_10045C064(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_10045C094(v5, v6);
  return a1;
}

uint64_t *_s13TracklistCellC8DataTypeOwta(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_10045C094(v3, v4);
  return a1;
}

uint64_t _s13TracklistCellC8DataTypeOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 57) >> 5) | (4
                                                          * ((*(void *)(a1 + 8) >> 57) & 0x18 | *(void *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s13TracklistCellC8DataTypeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)uint64_t result = a2 - 126;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1005FCA20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8) >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1005FCA3C(uint64_t result)
{
  *(void *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_1005FCA4C(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    result[1] = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    *uint64_t result = (a2 - 2);
    result[1] = 0x8000000000000000;
  }
  return result;
}

ValueMetadata *_s13TracklistCellC8DataTypeOMa()
{
  return &_s13TracklistCellC8DataTypeON;
}

void *sub_1005FCA84(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void **)((char *)a1 + v6);
  id v8 = (void **)((char *)a2 + v6);
  uint64_t v9 = _s7ContextV6SourceOMa(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        unint64_t v14 = *v8;
        *uint64_t v7 = *v8;
        uint64_t v15 = v8[1];
        v7[1] = v15;
        id v16 = v14;
        id v17 = v15;
      }
      else
      {
        uint64_t v23 = type metadata accessor for Playlist.Entry();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v23 - 8) + 16))(v7, v8, v23);
        uint64_t v24 = *(int *)(sub_100063814(&qword_10109E970) + 48);
        uint64_t v25 = (char *)v7 + v24;
        uint64_t v26 = (char *)v8 + v24;
        uint64_t v27 = type metadata accessor for Playlist();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void **, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_14;
    }
LABEL_7:
    uint64_t v18 = sub_100063814(&qword_10109EA20);
    memcpy(v7, v8, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_14;
  }
  if (v13)
  {
    sub_100616E84((uint64_t)v7, _s7ContextV6SourceOMa);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_100616E84((uint64_t)v7, _s7ContextV6SourceOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = *v8;
      *uint64_t v7 = *v8;
      uint64_t v20 = v8[1];
      v7[1] = v20;
      id v21 = v19;
      id v22 = v20;
    }
    else
    {
      uint64_t v41 = type metadata accessor for Playlist.Entry();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v41 - 8) + 16))(v7, v8, v41);
      uint64_t v42 = *(int *)(sub_100063814(&qword_10109E970) + 48);
      uint64_t v43 = (char *)v7 + v42;
      uint64_t v44 = (char *)v8 + v42;
      uint64_t v45 = type metadata accessor for Playlist();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  uint64_t v28 = (int *)_s7ContextVMa(0);
  uint64_t v29 = v28[5];
  uint64_t v30 = (uint64_t)v7 + v29;
  uint64_t v31 = (char *)v8 + v29;
  int v32 = *((unsigned __int8 *)v7 + v29 + 8);
  int v33 = *((unsigned __int8 *)v8 + v29 + 8);
  if (v32 == 255)
  {
    if (v33 == 255)
    {
      uint64_t v35 = *(void *)v31;
      *(unsigned char *)(v30 + 8) = v31[8];
      *(void *)uint64_t v30 = v35;
    }
    else
    {
      *(void *)uint64_t v30 = *(void *)v31;
      *(unsigned char *)(v30 + 8) = v33 & 1;
      swift_bridgeObjectRetain();
    }
  }
  else if (v33 == 255)
  {
    sub_100219BC4(v30);
    char v34 = v31[8];
    *(void *)uint64_t v30 = *(void *)v31;
    *(unsigned char *)(v30 + 8) = v34;
  }
  else
  {
    *(void *)uint64_t v30 = *(void *)v31;
    *(unsigned char *)(v30 + 8) = v33 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v36 = v28[6];
  uint64_t v37 = *(void **)((char *)v7 + v36);
  uint64_t v38 = *(void **)((char *)v8 + v36);
  *(void **)((char *)v7 + v36) = v38;
  id v39 = v38;

  *((unsigned char *)v7 + v28[7]) = *((unsigned char *)v8 + v28[7]);
  *((unsigned char *)v7 + v28[8]) = *((unsigned char *)v8 + v28[8]);
  return a1;
}

void *sub_1005FCE8C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = _s7ContextV6SourceOMa(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_100616E84((uint64_t)v7, _s7ContextV6SourceOMa);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v28 = type metadata accessor for Playlist.Entry();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v7, v8, v28);
        uint64_t v29 = *(int *)(sub_100063814(&qword_10109E970) + 48);
        uint64_t v30 = &v7[v29];
        uint64_t v31 = &v8[v29];
        uint64_t v32 = type metadata accessor for Playlist();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v14 = *(void *)(v10 + 64);
LABEL_8:
      memcpy(v7, v8, v14);
      goto LABEL_14;
    }
    sub_100616E84((uint64_t)v7, _s7ContextV6SourceOMa);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(sub_100063814(&qword_10109EA20) - 8) + 64);
    goto LABEL_8;
  }
  if (v13) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(void *)(v10 + 64));
  }
  else
  {
    uint64_t v15 = type metadata accessor for Playlist.Entry();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v7, v8, v15);
    uint64_t v16 = *(int *)(sub_100063814(&qword_10109E970) + 48);
    id v17 = &v7[v16];
    uint64_t v18 = &v8[v16];
    uint64_t v19 = type metadata accessor for Playlist();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  uint64_t v20 = (int *)_s7ContextVMa(0);
  uint64_t v21 = v20[5];
  uint64_t v22 = (uint64_t)&v7[v21];
  uint64_t v23 = &v8[v21];
  if (v7[v21 + 8] != 255)
  {
    int v24 = v23[8];
    if (v24 != 255)
    {
      *(void *)uint64_t v22 = *(void *)v23;
      *(unsigned char *)(v22 + 8) = v24 & 1;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_100219BC4(v22);
  }
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = v23[8];
LABEL_19:
  uint64_t v25 = v20[6];
  uint64_t v26 = *(void **)&v7[v25];
  *(void *)&v7[v25] = *(void *)&v8[v25];

  v7[v20[7]] = v8[v20[7]];
  v7[v20[8]] = v8[v20[8]];
  return a1;
}

uint64_t sub_1005FD214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005FD228);
}

uint64_t sub_1005FD228(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = _s7ContextVMa(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1005FD2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005FD2EC);
}

void *sub_1005FD2EC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = _s7ContextVMa(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for Tracklist.ReactionsConfiguration(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B2DA0);
}

ValueMetadata *type metadata accessor for Tracklist()
{
  return &type metadata for Tracklist;
}

uint64_t getEnumTagSinglePayload for Tracklist.LeadingNumberState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 8) & 0x7E | (*(unsigned __int8 *)(a1 + 8) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for Tracklist.LeadingNumberState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(unsigned char *)(result + 8) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1005FD468(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 7;
}

uint64_t sub_1005FD474(uint64_t result)
{
  *(unsigned char *)(result + 8) &= ~0x80u;
  return result;
}

uint64_t sub_1005FD484(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for Tracklist.LeadingNumberState()
{
  return &type metadata for Tracklist.LeadingNumberState;
}

uint64_t sub_1005FD4A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v145 = a2;
  uint64_t v3 = type metadata accessor for AccessibilityTraits();
  uint64_t v143 = *(void *)(v3 - 8);
  uint64_t v144 = v3;
  __chkstk_darwin(v3);
  CGRect v142 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v140 = *(void *)(v5 - 8);
  uint64_t v141 = v5;
  __chkstk_darwin(v5);
  uint64_t v139 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = type metadata accessor for DynamicTypeSize();
  uint64_t v136 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v135 = (uint64_t)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814(&qword_10109F0F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v137 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v134 = (char *)&v92 - v11;
  uint64_t v12 = type metadata accessor for Tracklist.LeadingIcon(255);
  uint64_t v182 = v12;
  uint64_t v183 = sub_10006389C(&qword_1010B3058);
  uint64_t v184 = sub_10006389C(&qword_1010B3060);
  uint64_t v185 = sub_10006389C(&qword_1010B3068);
  unsigned int v186 = &type metadata for Spacer;
  uint64_t v133 = a1;
  uint64_t v14 = a1[2];
  uint64_t v13 = a1[3];
  uint64_t v15 = a1[4];
  uint64_t v153 = a1[5];
  uint64_t v16 = a1[6];
  uint64_t v177 = v14;
  uint64_t v178 = v13;
  uint64_t v17 = v13;
  uint64_t v150 = v16;
  uint64_t v151 = v13;
  uint64_t v179 = v15;
  uint64_t v180 = v153;
  uint64_t v181 = v16;
  uint64_t v187 = type metadata accessor for Tracklist.TrailingIcons();
  swift_getTupleTypeMetadata();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for HStack();
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  type metadata accessor for Tracklist.VerticalTextStack();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for VStack();
  uint64_t v182 = v12;
  uint64_t v183 = sub_10006389C(&qword_1010B3070);
  uint64_t v184 = sub_10006389C(&qword_1010B3078);
  sub_10006389C(&qword_1010B3080);
  uint64_t v146 = v14;
  uint64_t v152 = v15;
  type metadata accessor for Tracklist.HorizontalTextStack();
  type metadata accessor for _ConditionalContent();
  type metadata accessor for Group();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  type metadata accessor for Group();
  type metadata accessor for ModifiedContent();
  sub_10006389C(&qword_1010A8A20);
  uint64_t v185 = type metadata accessor for ModifiedContent();
  unsigned int v186 = (void *)sub_10006389C(&qword_1010B3088);
  uint64_t v177 = v14;
  uint64_t v178 = v17;
  uint64_t v179 = v15;
  uint64_t v180 = v153;
  uint64_t v181 = v16;
  uint64_t v187 = type metadata accessor for Tracklist.TrailingIcons();
  swift_getTupleTypeMetadata();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for HStack();
  uint64_t v94 = type metadata accessor for _ConditionalContent();
  uint64_t v18 = type metadata accessor for Group();
  uint64_t v102 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  char v99 = (char *)&v92 - v19;
  uint64_t v20 = type metadata accessor for ModifiedContent();
  uint64_t v116 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  CGRect v148 = (char *)&v92 - v21;
  uint64_t v97 = v20;
  uint64_t v22 = type metadata accessor for ModifiedContent();
  uint64_t v125 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  double v103 = (char *)&v92 - v23;
  uint64_t v24 = type metadata accessor for ModifiedContent();
  uint64_t v131 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v128 = (char *)&v92 - v25;
  sub_10006389C(&qword_1010B3090);
  uint64_t v26 = type metadata accessor for ModifiedContent();
  uint64_t v129 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v127 = (char *)&v92 - v27;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v175 = WitnessTable;
  uint64_t v176 = v29;
  uint64_t v93 = swift_getWitnessTable();
  uint64_t v174 = v93;
  uint64_t v95 = swift_getWitnessTable();
  uint64_t v172 = v95;
  uint64_t v173 = &protocol witness table for _PaddingLayout;
  uint64_t v96 = swift_getWitnessTable();
  uint64_t v170 = v96;
  v171 = &protocol witness table for _PaddingLayout;
  uint64_t v126 = v22;
  uint64_t v101 = swift_getWitnessTable();
  uint64_t v168 = v101;
  v169 = &protocol witness table for _FlexFrameLayout;
  uint64_t v132 = v24;
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v31 = sub_100063858((unint64_t *)&unk_1010B7810, &qword_1010B3090);
  uint64_t v105 = v30;
  uint64_t v166 = v30;
  uint64_t v167 = v31;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v182 = v26;
  uint64_t v183 = v32;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v115 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v109 = (char *)&v92 - v34;
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v117 = OpaqueTypeMetadata2;
  uint64_t v35 = type metadata accessor for ModifiedContent();
  uint64_t v119 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  int v114 = (char *)&v92 - v36;
  uint64_t v37 = type metadata accessor for ModifiedContent();
  uint64_t v123 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  v120 = (char *)&v92 - v38;
  uint64_t v39 = _s17ContextMenuButtonVMa(255);
  uint64_t v130 = v26;
  uint64_t v182 = v26;
  uint64_t v183 = v32;
  uint64_t v104 = v32;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v41 = sub_100616A1C((unint64_t *)&qword_10109D020, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v98 = OpaqueTypeConformance2;
  uint64_t v164 = OpaqueTypeConformance2;
  uint64_t v165 = v41;
  uint64_t v122 = v35;
  uint64_t v100 = swift_getWitnessTable();
  uint64_t v162 = v100;
  uint64_t v163 = v41;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v43 = sub_100616A1C(&qword_1010AF0E0, (void (*)(uint64_t))_s17ContextMenuButtonVMa);
  uint64_t v124 = v37;
  uint64_t v182 = v37;
  uint64_t v183 = v39;
  uint64_t v106 = v43;
  uint64_t v107 = v39;
  uint64_t v111 = v42;
  uint64_t v184 = v42;
  uint64_t v185 = v43;
  uint64_t v44 = swift_getOpaqueTypeMetadata2();
  uint64_t v112 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v147 = (char *)&v92 - v45;
  sub_10006389C(&qword_1010B1F28);
  uint64_t v113 = v44;
  uint64_t v121 = type metadata accessor for ModifiedContent();
  uint64_t v118 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  double v108 = (char *)&v92 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  uint64_t v110 = (char *)&v92 - v48;
  uint64_t v49 = v146;
  uint64_t v154 = v146;
  uint64_t v50 = v152;
  uint64_t v155 = v151;
  uint64_t v156 = v152;
  uint64_t v157 = v153;
  uint64_t v158 = v150;
  uint64_t v159 = v149;
  uint64_t v51 = v99;
  Group<A>.init(content:)();
  static Edge.Set.trailing.getter();
  View.padding(_:_:)();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v51, v18);
  LODWORD(v99) = static Edge.Set.vertical.getter();
  uint64_t v102 = *(void *)(v50 + 24);
  uint64_t v52 = (void (*)(uint64_t, uint64_t))v102;
  swift_unknownObjectRetain();
  uint64_t v53 = (uint64_t)v134;
  v52(v49, v50);
  swift_unknownObjectRelease();
  uint64_t v54 = type metadata accessor for ArtworkImage.Info(0);
  os_log_type_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48);
  v55(v53, 1, v54);
  sub_1000637B8(v53, &qword_10109F0F0);
  uint64_t v56 = v135;
  sub_1004DA4FC(v135);
  uint64_t v57 = v103;
  sub_100612FC8();
  (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v56, v138);
  uint64_t v58 = v97;
  unint64_t v59 = v148;
  View.padding(_:_:)();
  (*(void (**)(char *, uint64_t))(v116 + 8))(v59, v58);
  swift_unknownObjectRetain();
  uint64_t v60 = (uint64_t)v137;
  ((void (*)(uint64_t, uint64_t))v102)(v49, v152);
  swift_unknownObjectRelease();
  v55(v60, 1, v54);
  sub_1000637B8(v60, &qword_10109F0F0);
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  uint64_t v61 = v126;
  uint64_t v62 = v128;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v63 = (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v57, v61);
  __chkstk_darwin(v63);
  static Alignment.center.getter();
  sub_100063814(&qword_1010B3098);
  sub_100616AF4();
  uint64_t v64 = v127;
  uint64_t v65 = v132;
  View.background<A>(alignment:content:)();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v62, v65);
  uint64_t v66 = v139;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v67 = v109;
  uint64_t v68 = v130;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v140 + 8))(v66, v141);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v64, v68);
  uint64_t v69 = v142;
  static AccessibilityTraits.isButton.getter();
  uint64_t v70 = v114;
  uint64_t v71 = v117;
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v143 + 8))(v69, v144);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v67, v71);
  AccessibilityIdentifier.trackListCell.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v72 = v120;
  uint64_t v73 = v122;
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v74 = (*(uint64_t (**)(char *, uint64_t))(v119 + 8))(v70, v73);
  __chkstk_darwin(v74);
  uint64_t v75 = v152;
  uint64_t v76 = swift_checkMetadataState();
  uint64_t v77 = v124;
  uint64_t v78 = v111;
  uint64_t v79 = v106;
  View.accessibilityActions<A>(_:)();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v72, v77);
  static Animation.linear(duration:)();
  id v80 = *(uint64_t (**)(uint64_t, uint64_t))(v75 + 120);
  swift_unknownObjectRetain();
  char v81 = v80(v146, v75);
  swift_unknownObjectRelease();
  LOBYTE(v177) = v81 & 1;
  uint64_t v182 = v77;
  uint64_t v183 = v76;
  uint64_t v184 = v78;
  uint64_t v185 = v79;
  uint64_t v82 = swift_getOpaqueTypeConformance2();
  uint64_t v83 = v108;
  uint64_t v84 = v113;
  double v85 = v147;
  View.animation<A>(_:value:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v85, v84);
  uint64_t v86 = sub_100063858((unint64_t *)&qword_1010B1F30, &qword_1010B1F28);
  uint64_t v160 = v82;
  uint64_t v161 = v86;
  uint64_t v87 = v121;
  uint64_t v88 = swift_getWitnessTable();
  unint64_t v89 = v110;
  sub_1005CF83C(v83, v87, v88);
  uint64_t v90 = *(void (**)(char *, uint64_t))(v118 + 8);
  v90(v83, v87);
  sub_1005CF83C(v89, v87, v88);
  return ((uint64_t (*)(char *, uint64_t))v90)(v89, v87);
}

uint64_t sub_1005FE8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v79 = a1;
  uint64_t v81 = a7;
  uint64_t v12 = sub_100063814(&qword_10109F0F0);
  __chkstk_darwin(v12 - 8);
  uint64_t v75 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Tracklist.LeadingIcon(255);
  uint64_t v91 = v14;
  uint64_t v92 = sub_10006389C(&qword_1010B3070);
  uint64_t v93 = sub_10006389C(&qword_1010B3078);
  sub_10006389C(&qword_1010B3080);
  type metadata accessor for Tracklist.VerticalTextStack();
  type metadata accessor for Tracklist.HorizontalTextStack();
  type metadata accessor for _ConditionalContent();
  type metadata accessor for Group();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  type metadata accessor for Group();
  type metadata accessor for ModifiedContent();
  sub_10006389C(&qword_1010A8A20);
  uint64_t v94 = type metadata accessor for ModifiedContent();
  uint64_t v95 = (void *)sub_10006389C(&qword_1010B3088);
  uint64_t v86 = a2;
  uint64_t v87 = a3;
  uint64_t v88 = a4;
  uint64_t v89 = a5;
  uint64_t v82 = a5;
  uint64_t v90 = a6;
  uint64_t v96 = type metadata accessor for Tracklist.TrailingIcons();
  swift_getTupleTypeMetadata();
  uint64_t v15 = type metadata accessor for TupleView();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v71 = v15;
  uint64_t v70 = WitnessTable;
  uint64_t v17 = type metadata accessor for HStack();
  uint64_t v74 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v73 = (char *)v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v69 = (char *)v66 - v20;
  __chkstk_darwin(v21);
  id v72 = (char *)v66 - v22;
  uint64_t v91 = v14;
  uint64_t v92 = sub_10006389C(&qword_1010B3058);
  uint64_t v93 = sub_10006389C(&qword_1010B3060);
  uint64_t v94 = sub_10006389C(&qword_1010B3068);
  uint64_t v95 = &type metadata for Spacer;
  uint64_t v86 = a2;
  uint64_t v87 = a3;
  uint64_t v88 = a4;
  uint64_t v89 = a5;
  uint64_t v90 = a6;
  uint64_t v96 = type metadata accessor for Tracklist.TrailingIcons();
  swift_getTupleTypeMetadata();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for HStack();
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  uint64_t v23 = type metadata accessor for TupleView();
  uint64_t v24 = swift_getWitnessTable();
  v66[2] = v23;
  v66[1] = v24;
  uint64_t v25 = type metadata accessor for VStack();
  uint64_t v68 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v67 = (char *)v66 - v29;
  uint64_t v80 = v17;
  uint64_t v30 = type metadata accessor for _ConditionalContent();
  uint64_t v77 = *(void *)(v30 - 8);
  uint64_t v78 = v30;
  __chkstk_darwin(v30);
  uint64_t v76 = (char *)v66 - v31;
  uint64_t v83 = a2;
  uint64_t v91 = a2;
  uint64_t v92 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = v82;
  uint64_t v93 = a4;
  uint64_t v94 = v82;
  uint64_t v34 = a6;
  uint64_t v95 = a6;
  type metadata accessor for Tracklist.Cell();
  uint64_t v35 = v79;
  swift_retain();
  char v36 = sub_1005FF2C0();
  swift_release();
  uint64_t v37 = v35;
  if (sub_1005FF620())
  {
    uint64_t v38 = static HorizontalAlignment.leading.getter();
    __chkstk_darwin(v38);
    v66[-8] = v83;
    v66[-7] = a3;
    v66[-6] = v32;
    v66[-5] = v33;
    v66[-4] = v34;
    v66[-3] = v35;
    LOBYTE(v66[-2]) = v36 & 1;
    VStack.init(alignment:spacing:content:)();
    uint64_t v39 = swift_getWitnessTable();
    long long v40 = v67;
    sub_1005CF83C(v27, v25, v39);
    uint64_t v41 = *(void (**)(char *, uint64_t))(v68 + 8);
    v41(v27, v25);
    sub_1005CF83C(v40, v25, v39);
    swift_getWitnessTable();
    uint64_t v42 = v76;
    sub_1005C6BE0((uint64_t)v27, v25);
    v41(v27, v25);
    v41(v40, v25);
  }
  else
  {
    char v43 = v36;
    uint64_t v68 = v25;
    uint64_t v44 = a3;
    uint64_t v45 = v37;
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v32 + 24);
    swift_unknownObjectRetain();
    uint64_t v47 = (uint64_t)v75;
    v46(v83, v32);
    swift_unknownObjectRelease();
    uint64_t v48 = type metadata accessor for ArtworkImage.Info(0);
    int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v47, 1, v48);
    sub_1000637B8(v47, &qword_10109F0F0);
    if (qword_1010985A0 != -1) {
      swift_once();
    }
    uint64_t v50 = v45;
    uint64_t v52 = v82;
    uint64_t v51 = v83;
    uint64_t v53 = v80;
    if (byte_1010B2D10 == 1 || v49 != 1) {
      uint64_t v54 = static VerticalAlignment.center.getter();
    }
    else {
      uint64_t v54 = static VerticalAlignment.firstTextLineCenter.getter();
    }
    __chkstk_darwin(v54);
    v66[-8] = v51;
    v66[-7] = v44;
    v66[-6] = v32;
    v66[-5] = v52;
    v66[-4] = v34;
    v66[-3] = v50;
    LOBYTE(v66[-2]) = v43 & 1;
    os_log_type_t v55 = v69;
    HStack.init(alignment:spacing:content:)();
    uint64_t v56 = swift_getWitnessTable();
    uint64_t v57 = v72;
    sub_1005CF83C(v55, v53, v56);
    uint64_t v58 = *(void (**)(char *, uint64_t))(v74 + 8);
    v58(v55, v53);
    uint64_t v59 = (uint64_t)v73;
    sub_1005CF83C(v57, v53, v56);
    uint64_t v60 = v68;
    swift_getWitnessTable();
    uint64_t v42 = v76;
    sub_1005C6CD8(v59, v60, v53);
    v58((char *)v59, v53);
    v58(v57, v53);
  }
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v84 = v61;
  uint64_t v85 = v62;
  uint64_t v63 = v78;
  uint64_t v64 = swift_getWitnessTable();
  sub_1005CF83C(v42, v63, v64);
  return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v42, v63);
}

uint64_t sub_1005FF2C0()
{
  uint64_t v28 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason();
  uint64_t v31 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v29 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v30 = (char *)&v27 - v3;
  uint64_t v4 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v32 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v27 - v8;
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = *(void (**)(__n128))(*(void *)v0 + 256);
  v14(v11);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v9, enum case for MusicPlayer.PlayabilityStatus.playable(_:), v4);
  char v15 = static MusicPlayer.PlayabilityStatus.== infix(_:_:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v9, v4);
  uint64_t v17 = ((uint64_t (*)(char *, uint64_t))v16)(v13, v4);
  if (v15) {
    return 1;
  }
  uint64_t v19 = v30;
  uint64_t v18 = v31;
  uint64_t v20 = v32;
  ((void (*)(uint64_t))v14)(v17);
  if ((*(unsigned int (**)(char *, uint64_t))(v5 + 88))(v20, v4) == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    uint64_t v21 = v32;
    (*(void (**)(char *, uint64_t))(v5 + 96))(v32, v4);
    uint64_t v22 = v28;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v19, v21, v28);
    uint64_t v23 = v29;
    (*(void (**)(char *, void, uint64_t))(v18 + 104))(v29, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.subscriptionRequired(_:), v22);
    char v24 = static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v18 + 8);
    v25(v23, v22);
    v25(v19, v22);
    if (v24) {
      return 1;
    }
  }
  else
  {
    v16(v32, v4);
  }
  return 0;
}

uint64_t sub_1005FF620()
{
  uint64_t v0 = type metadata accessor for DynamicTypeSize();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B5280);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004DA53C((uint64_t)v6);
  sub_1004DA4FC((uint64_t)v3);
  char v7 = sub_10061306C((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1000637B8((uint64_t)v6, &qword_1010B5280);
  return v7 & 1;
}

uint64_t sub_1005FF77C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  int v84 = a2;
  uint64_t v83 = a8;
  uint64_t v14 = type metadata accessor for Tracklist.VerticalTextStack();
  uint64_t v77 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v76 = (uint64_t)&v60 - v15;
  uint64_t v78 = v16;
  uint64_t v82 = type metadata accessor for ModifiedContent();
  uint64_t v79 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v81 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v80 = (char *)&v60 - v19;
  uint64_t v70 = (void *)type metadata accessor for DynamicTypeSize();
  uint64_t v62 = *(v70 - 1);
  __chkstk_darwin(v70);
  uint64_t v60 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v61 = (char *)&v60 - v22;
  uint64_t v106 = type metadata accessor for Tracklist.LeadingIcon(255);
  uint64_t v107 = sub_10006389C(&qword_1010B3058);
  uint64_t v108 = sub_10006389C(&qword_1010B3060);
  uint64_t v109 = sub_10006389C(&qword_1010B3068);
  uint64_t v110 = &type metadata for Spacer;
  uint64_t v101 = a3;
  uint64_t v102 = a4;
  uint64_t v103 = a5;
  uint64_t v104 = a6;
  uint64_t v105 = a7;
  uint64_t v111 = type metadata accessor for Tracklist.TrailingIcons();
  swift_getTupleTypeMetadata();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v23 = type metadata accessor for HStack();
  uint64_t v64 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v60 - v24;
  uint64_t v26 = type metadata accessor for ModifiedContent();
  uint64_t v68 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v67 = (char *)&v60 - v27;
  uint64_t v66 = v28;
  uint64_t v73 = type metadata accessor for ModifiedContent();
  uint64_t v71 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  id v72 = (char *)&v60 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v65 = (char *)&v60 - v31;
  __chkstk_darwin(v32);
  uint64_t v85 = (char *)&v60 - v33;
  static VerticalAlignment.center.getter();
  uint64_t v86 = a3;
  uint64_t v87 = a4;
  uint64_t v88 = a5;
  uint64_t v89 = a6;
  uint64_t v90 = a7;
  uint64_t v91 = a1;
  char v92 = v84;
  uint64_t v63 = v25;
  HStack.init(alignment:spacing:content:)();
  uint64_t v74 = a3;
  uint64_t v106 = a3;
  uint64_t v107 = a4;
  uint64_t v75 = a5;
  uint64_t v108 = a5;
  uint64_t v109 = a6;
  uint64_t v34 = (uint64_t)v61;
  uint64_t v110 = a7;
  type metadata accessor for Tracklist.Cell();
  uint64_t v69 = a1;
  sub_1004DA4FC(v34);
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if (byte_1010B2D10 == 1)
  {
    uint64_t v35 = *(void (**)(char *, void *))(v62 + 8);
    char v36 = v70;
  }
  else
  {
    uint64_t v37 = v62;
    uint64_t v38 = v60;
    char v36 = v70;
    (*(void (**)(char *, void, void *))(v62 + 104))(v60, enum case for DynamicTypeSize.accessibility3(_:), v70);
    static DynamicTypeSize.< infix(_:_:)();
    uint64_t v35 = *(void (**)(char *, void *))(v37 + 8);
    v35(v38, v36);
  }
  uint64_t v39 = v67;
  v35((char *)v34, v36);
  static Alignment.center.getter();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v41 = v63;
  View.frame(width:height:alignment:)();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v41, v23);
  static Edge.Set.bottom.getter();
  if (qword_101098620 != -1) {
    swift_once();
  }
  uint64_t v99 = WitnessTable;
  uint64_t v100 = &protocol witness table for _FrameLayout;
  uint64_t v42 = v66;
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = v65;
  View.padding(_:_:)();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v42);
  uint64_t v97 = v43;
  uint64_t v98 = &protocol witness table for _PaddingLayout;
  uint64_t v45 = v73;
  uint64_t v67 = (char *)swift_getWitnessTable();
  sub_1005CF83C(v44, v45, v67);
  uint64_t v46 = v71;
  uint64_t v47 = *(void **)(v71 + 8);
  uint64_t v68 = v71 + 8;
  uint64_t v70 = v47;
  ((void (*)(char *, uint64_t))v47)(v44, v45);
  swift_unknownObjectRetain();
  uint64_t v48 = v76;
  sub_1006017B4(v84 & 1, v76);
  static Edge.Set.leading.getter();
  uint64_t v49 = v78;
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v51 = v81;
  View.padding(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v48, v49);
  uint64_t v95 = v50;
  uint64_t v96 = &protocol witness table for _PaddingLayout;
  uint64_t v52 = v82;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v54 = v80;
  sub_1005CF83C(v51, v52, v53);
  uint64_t v55 = v79;
  uint64_t v56 = *(void (**)(char *, uint64_t))(v79 + 8);
  v56(v51, v52);
  uint64_t v57 = v72;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v72, v85, v45);
  uint64_t v106 = (uint64_t)v57;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v51, v54, v52);
  uint64_t v107 = (uint64_t)v51;
  uint64_t v101 = v45;
  uint64_t v102 = v52;
  uint64_t v93 = v67;
  uint64_t v94 = v53;
  sub_1005FC338((uint64_t)&v106, 2uLL, (uint64_t)&v101);
  v56(v54, v52);
  uint64_t v58 = (uint64_t (*)(char *, uint64_t))v70;
  ((void (*)(char *, uint64_t))v70)(v85, v45);
  v56(v51, v52);
  return v58(v57, v45);
}

uint64_t sub_1006001E4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  LODWORD(v154) = a2;
  uint64_t v153 = a1;
  uint64_t v149 = a8;
  *(void *)&long long v171 = a3;
  *((void *)&v171 + 1) = a4;
  *(void *)&long long v172 = a5;
  *((void *)&v172 + 1) = a6;
  *(void *)uint64_t v173 = a7;
  uint64_t v150 = type metadata accessor for Tracklist.TrailingIcons();
  uint64_t v145 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v148 = (uint64_t)v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v147 = (char *)v120 - v15;
  uint64_t v151 = type metadata accessor for Tracklist.LeadingNumber(0);
  uint64_t v140 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v125 = (void *)((char *)v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v143 = sub_100063814(&qword_1010B3060);
  __chkstk_darwin(v143);
  uint64_t v146 = (uint64_t)v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v156 = (uint64_t)v120 - v19;
  uint64_t v139 = type metadata accessor for Tracklist.Artwork(0);
  uint64_t v138 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v124 = (uint64_t)v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for ArtworkImage.Info(0);
  uint64_t v21 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v123 = (uint64_t)v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v122 = (uint64_t)v120 - v24;
  uint64_t v141 = sub_100063814(&qword_1010B3058);
  __chkstk_darwin(v141);
  uint64_t v144 = (uint64_t)v120 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v158 = (uint64_t)v120 - v27;
  uint64_t v137 = type metadata accessor for Font.TextStyle();
  unint64_t v134 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v133 = (char *)v120 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100063814(&qword_10109F0F0);
  __chkstk_darwin(v29 - 8);
  uint64_t v121 = (char *)v120 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v135 = (char *)v120 - v32;
  __chkstk_darwin(v33);
  uint64_t v136 = (long long *)((char *)v120 - v34);
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)v120 - v36;
  uint64_t v155 = type metadata accessor for Tracklist.LeadingIcon(0);
  __chkstk_darwin(v155);
  uint64_t v142 = (uint64_t)v120 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)v120 - v40;
  __chkstk_darwin(v42);
  uint64_t v157 = (uint64_t)v120 - v43;
  uint64_t WitnessTable = a3;
  *(void *)&long long v171 = a3;
  *((void *)&v171 + 1) = a4;
  *(void *)&long long v172 = a5;
  *((void *)&v172 + 1) = a6;
  *(void *)uint64_t v173 = a7;
  uint64_t v44 = type metadata accessor for Tracklist.Cell();
  uint64_t v45 = v153;
  int v127 = sub_100601308(v44);
  uint64_t v131 = (void (*)(uint64_t, void *))a5[3];
  uint64_t v46 = v131;
  uint64_t v132 = a5 + 3;
  swift_unknownObjectRetain();
  v46(a3, a5);
  swift_unknownObjectRelease();
  uint64_t v47 = v21 + 48;
  uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v49 = v152;
  unsigned int v50 = v48(v37, 1, v152);
  uint64_t v51 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v48;
  uint64_t v129 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v48;
  uint64_t v130 = v47;
  BOOL v126 = v50 != 1;
  sub_1000637B8((uint64_t)v37, &qword_10109F0F0);
  uint64_t v52 = v45;
  uint64_t v128 = a5;
  uint64_t v53 = (void (*)(uint64_t, void *))a5[12];
  swift_unknownObjectRetain();
  uint64_t v54 = (uint64_t)v136;
  v120[1] = a5 + 12;
  v120[0] = v53;
  v53(WitnessTable, a5);
  swift_unknownObjectRelease();
  LOBYTE(v47) = v51(v54, 1, v49) != 1;
  sub_1000637B8(v54, &qword_10109F0F0);
  long long v55 = *(_OWORD *)(v52 + 64);
  v52 += 64;
  uint64_t v56 = *(void *)(v52 + 16);
  __int16 v57 = *(_WORD *)(v52 + 24);
  char v58 = *(unsigned char *)(v52 + 26);
  uint64_t v59 = *(void *)(v52 + 48);
  char v60 = *(unsigned char *)(v52 + 56);
  char *v41 = v127;
  v41[1] = v126;
  v41[2] = v47;
  v41[3] = v154;
  *(_OWORD *)(v41 + 8) = v55;
  *((void *)v41 + 3) = v56;
  *((_WORD *)v41 + 16) = v57;
  v41[34] = v58;
  uint64_t v136 = (long long *)v52;
  *(_OWORD *)(v41 + 40) = *(_OWORD *)(v52 + 32);
  *((void *)v41 + 7) = v59;
  v41[64] = v60;
  uint64_t v61 = v155;
  *(void *)&long long v171 = 0x4020000000000000;
  uint64_t v62 = enum case for Font.TextStyle.largeTitle(_:);
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t))(v134 + 104);
  uint64_t v64 = v133;
  uint64_t v65 = v137;
  v63(v133, enum case for Font.TextStyle.largeTitle(_:), v137);
  unint64_t v66 = sub_100303D88();
  ScaledMetric.init(wrappedValue:relativeTo:)();
  *(void *)&long long v171 = 0x4018000000000000;
  v63(v64, v62, v65);
  uint64_t v67 = v153;
  uint64_t v68 = v128;
  uint64_t v69 = WitnessTable;
  unint64_t v134 = v66;
  uint64_t v70 = (uint64_t)v135;
  ScaledMetric.init(wrappedValue:relativeTo:)();
  uint64_t v71 = (uint64_t *)&v41[*(int *)(v61 + 44)];
  *uint64_t v71 = swift_getKeyPath();
  uint64_t v72 = sub_100063814((uint64_t *)&unk_10109C850);
  swift_storeEnumTagMultiPayload();
  sub_100616C18((uint64_t)v41, v157, type metadata accessor for Tracklist.LeadingIcon);
  swift_unknownObjectRetain();
  v131(v69, v68);
  swift_unknownObjectRelease();
  int v73 = v129(v70, 1, v152);
  uint64_t v137 = v72;
  if (v73 == 1)
  {
    sub_1000637B8(v70, &qword_10109F0F0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v138 + 56))(v158, 1, 1, v139);
  }
  else
  {
    uint64_t v74 = v122;
    sub_100616C18(v70, v122, type metadata accessor for ArtworkImage.Info);
    uint64_t v75 = v123;
    sub_100616C80(v74, v123, type metadata accessor for ArtworkImage.Info);
    swift_unknownObjectRetain();
    uint64_t v76 = (uint64_t)v121;
    uint64_t v77 = WitnessTable;
    ((void (*)(uint64_t, void *))v120[0])(WitnessTable, v68);
    swift_unknownObjectRelease();
    uint64_t v78 = (uint64_t (*)(uint64_t, void *))v68[11];
    swift_unknownObjectRetain();
    uint64_t v79 = v78(v77, v68);
    uint64_t v81 = v80;
    swift_unknownObjectRelease();
    sub_100616E84(v74, type metadata accessor for ArtworkImage.Info);
    uint64_t v82 = *(void *)(v67 + 56);
    uint64_t v83 = v75;
    uint64_t v84 = v124;
    sub_100616C18(v83, v124, type metadata accessor for ArtworkImage.Info);
    uint64_t v85 = (int *)v139;
    sub_10003CABC(v76, v84 + *(int *)(v139 + 20), &qword_10109F0F0);
    uint64_t v86 = (uint64_t *)(v84 + v85[6]);
    uint64_t *v86 = v79;
    v86[1] = v81;
    *(void *)(v84 + v85[7]) = v82;
    uint64_t v87 = (uint64_t *)(v84 + v85[8]);
    *uint64_t v87 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    uint64_t v88 = v158;
    sub_100616C18(v84, v158, type metadata accessor for Tracklist.Artwork);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v138 + 56))(v88, 0, 1, v85);
    swift_retain();
  }
  int v89 = v154 & 1;
  uint64_t v90 = (uint64_t (*)(uint64_t, void *))v68[4];
  swift_unknownObjectRetain();
  uint64_t v91 = v90(WitnessTable, v68);
  unsigned __int8 v93 = v92;
  unsigned int v94 = v92;
  swift_unknownObjectRelease();
  uint64_t v95 = 1;
  if (v94 <= 0xFD)
  {
    uint64_t v96 = WitnessTable;
    uint64_t v97 = (uint64_t (*)(uint64_t, void *))v68[11];
    swift_unknownObjectRetain();
    uint64_t v98 = v97(v96, v68);
    uint64_t v154 = v99;
    swift_unknownObjectRelease();
    uint64_t v100 = (uint64_t (*)(uint64_t, void *))v68[15];
    swift_unknownObjectRetain();
    LOBYTE(v97) = v100(v96, v68);
    swift_unknownObjectRelease();
    uint64_t v101 = (uint64_t)v125;
    uint64_t *v125 = v91;
    *(unsigned char *)(v101 + 8) = v93;
    *(unsigned char *)(v101 + 9) = v89;
    uint64_t v102 = v154;
    *(void *)(v101 + 16) = v98;
    *(void *)(v101 + 24) = v102;
    *(unsigned char *)(v101 + 32) = v97 & 1;
    *(void *)(v101 + 40) = 0;
    uint64_t v103 = v151;
    *(void *)&long long v171 = 0x4044000000000000;
    ScaledMetric.init(wrappedValue:)();
    *(void *)&long long v171 = 0x4036000000000000;
    ScaledMetric.init(wrappedValue:)();
    uint64_t v104 = (uint64_t *)(v101 + *(int *)(v103 + 44));
    *uint64_t v104 = swift_getKeyPath();
    swift_storeEnumTagMultiPayload();
    uint64_t v105 = (uint64_t *)(v101 + *(int *)(v103 + 48));
    *uint64_t v105 = swift_getKeyPath();
    sub_100063814((uint64_t *)&unk_10109C920);
    swift_storeEnumTagMultiPayload();
    sub_100616C18(v101, v156, type metadata accessor for Tracklist.LeadingNumber);
    uint64_t v95 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v140 + 56))(v156, v95, 1, v151);
  uint64_t v106 = (uint64_t (*)(uint64_t, void *))v68[5];
  swift_unknownObjectRetain();
  char v107 = v106(WitnessTable, v68);
  swift_unknownObjectRelease();
  if (v107) {
    int v108 = v89;
  }
  else {
    int v108 = 2;
  }
  LODWORD(v154) = v108;
  long long v109 = v136[1];
  long long v171 = *v136;
  long long v172 = v109;
  *(_OWORD *)uint64_t v173 = v136[2];
  *(_OWORD *)&v173[9] = *(long long *)((char *)v136 + 41);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v110 = v148;
  sub_1006015CC(&v171, v148);
  uint64_t v111 = v150;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v112 = v147;
  sub_1005CF83C(v110, v111, WitnessTable);
  uint64_t v113 = v145;
  int v114 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
  v114(v110, v111);
  uint64_t v115 = v142;
  sub_100616C80(v157, v142, type metadata accessor for Tracklist.LeadingIcon);
  v170[0] = v115;
  uint64_t v116 = v144;
  sub_10006CAB8(v158, v144, &qword_1010B3058);
  v170[1] = v116;
  uint64_t v117 = v156;
  uint64_t v118 = v146;
  sub_10006CAB8(v156, v146, &qword_1010B3060);
  char v169 = v154;
  v170[2] = v118;
  v170[3] = &v169;
  uint64_t v167 = 0;
  char v168 = 1;
  v170[4] = &v167;
  (*(void (**)(uint64_t, char *, uint64_t))(v113 + 16))(v110, v112, v111);
  v170[5] = v110;
  v166[0] = v155;
  v166[1] = v141;
  v166[2] = v143;
  v166[3] = sub_100063814(&qword_1010B3068);
  v166[4] = &type metadata for Spacer;
  v166[5] = v111;
  uint64_t v160 = sub_100616A1C(&qword_1010B30A8, (void (*)(uint64_t))type metadata accessor for Tracklist.LeadingIcon);
  unint64_t v161 = sub_100616CE8();
  unint64_t v162 = sub_100616D8C();
  uint64_t v163 = sub_10062160C(&qword_1010B30D0, &qword_1010B3068, (void (*)(void))sub_100616E30);
  uint64_t v164 = &protocol witness table for Spacer;
  uint64_t v165 = WitnessTable;
  sub_1005FC338((uint64_t)v170, 6uLL, (uint64_t)v166);
  v114((uint64_t)v112, v111);
  sub_1000637B8(v117, &qword_1010B3060);
  sub_1000637B8(v158, &qword_1010B3058);
  sub_100616E84(v157, type metadata accessor for Tracklist.LeadingIcon);
  v114(v110, v111);
  sub_1000637B8(v118, &qword_1010B3060);
  sub_1000637B8(v116, &qword_1010B3058);
  return sub_100616E84(v115, type metadata accessor for Tracklist.LeadingIcon);
}

uint64_t sub_100601308(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MusicFavoriteStatus();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v15 - v7;
  swift_retain();
  dispatch thunk of MusicLibrary.ItemState.favoriteStatus.getter();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for MusicFavoriteStatus.favorited(_:), v2);
  char v9 = static MusicFavoriteStatus.== infix(_:_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  v10(v8, v2);
  if (v9) {
    return 0;
  }
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  uint64_t v14 = *(void *)(a1 + 16);
  swift_unknownObjectRetain();
  LOBYTE(v14) = v13(v14, v12);
  swift_unknownObjectRelease();
  if (v14) {
    return 1;
  }
  else {
    return 2;
  }
}

uint64_t sub_1006014B4@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(void *)a8 = a1;
  *(unsigned char *)(a8 + 8) = a2;
  *(unsigned char *)(a8 + 9) = a3;
  *(void *)(a8 + 16) = a4;
  *(void *)(a8 + 24) = a5;
  *(unsigned char *)(a8 + 32) = a6;
  *(void *)(a8 + 40) = a7;
  uint64_t v9 = type metadata accessor for Tracklist.LeadingNumber(0);
  sub_100303D88();
  ScaledMetric.init(wrappedValue:)();
  ScaledMetric.init(wrappedValue:)();
  uint64_t v10 = (uint64_t *)(a8 + *(int *)(v9 + 44));
  *uint64_t v10 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_10109C850);
  swift_storeEnumTagMultiPayload();
  __n128 v11 = (uint64_t *)(a8 + *(int *)(v9 + 48));
  *__n128 v11 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_10109C920);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1006015CC@<X0>(_OWORD *a1@<X3>, uint64_t a2@<X8>)
{
  *(void *)a2 = ObservedObject.init(wrappedValue:)();
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = sub_100572918();
  *(void *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = sub_100572888();
  *(void *)(a2 + 40) = v6;
  long long v7 = a1[1];
  *(_OWORD *)(a2 + 48) = *a1;
  *(_OWORD *)(a2 + 64) = v7;
  *(_OWORD *)(a2 + 80) = a1[2];
  *(_OWORD *)(a2 + 89) = *(_OWORD *)((char *)a1 + 41);
  uint64_t v8 = type metadata accessor for Tracklist.TrailingIcons();
  uint64_t v9 = (uint64_t *)(a2 + *(int *)(v8 + 72));
  *uint64_t v9 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_10109C850);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = (uint64_t *)(a2 + *(int *)(v8 + 76));
  *uint64_t v10 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_10109C920);
  swift_storeEnumTagMultiPayload();
  if (qword_101098668 != -1) {
    swift_once();
  }
  sub_100303D88();
  return ScaledMetric.init(wrappedValue:)();
}

uint64_t sub_1006017B4@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  *(void *)a2 = ObservedObject.init(wrappedValue:)();
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = a1;
  uint64_t v5 = (uint64_t *)(a2 + *(int *)(type metadata accessor for Tracklist.VerticalTextStack() + 40));
  *uint64_t v5 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_10109C850);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10060184C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void (*a7)(char *, uint64_t)@<X6>, uint64_t a8@<X8>)
{
  int v142 = a2;
  uint64_t v156 = a1;
  uint64_t v138 = a8;
  uint64_t v172 = a3;
  uint64_t v173 = a4;
  uint64_t v140 = a4;
  uint64_t v141 = a7;
  uint64_t v174 = (uint64_t)a5;
  uint64_t v175 = a6;
  uint64_t v143 = a6;
  uint64_t v176 = a7;
  uint64_t v139 = type metadata accessor for Tracklist.TrailingIcons();
  uint64_t v135 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v137 = (uint64_t)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v136 = (char *)&v117 - v15;
  sub_10006389C(&qword_1010B3080);
  type metadata accessor for Tracklist.VerticalTextStack();
  type metadata accessor for Tracklist.HorizontalTextStack();
  type metadata accessor for _ConditionalContent();
  type metadata accessor for Group();
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata2();
  uint64_t v127 = type metadata accessor for TupleView();
  uint64_t v16 = type metadata accessor for Group();
  uint64_t v129 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v128 = (char *)&v117 - v17;
  uint64_t v130 = v18;
  uint64_t v19 = type metadata accessor for ModifiedContent();
  uint64_t v132 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v144 = (char *)&v117 - v20;
  sub_10006389C(&qword_1010A8A20);
  uint64_t v133 = v19;
  uint64_t v151 = type metadata accessor for ModifiedContent();
  uint64_t v134 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v150 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v131 = (char *)&v117 - v23;
  __chkstk_darwin(v24);
  uint64_t v149 = (char *)&v117 - v25;
  uint64_t v26 = sub_100063814(&qword_1010B30E0);
  __chkstk_darwin(v26 - 8);
  uint64_t v125 = (uint64_t)&v117 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_100063814(&qword_1010B3070);
  __chkstk_darwin(v146);
  uint64_t v148 = (uint64_t)&v117 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v124 = (uint64_t)&v117 - v30;
  __chkstk_darwin(v31);
  uint64_t v154 = (uint64_t)&v117 - v32;
  uint64_t v33 = type metadata accessor for Font.TextStyle();
  uint64_t v122 = *(void *)(v33 - 8);
  uint64_t v123 = v33;
  __chkstk_darwin(v33);
  uint64_t v121 = (char *)&v117 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100063814(&qword_10109F0F0);
  __chkstk_darwin(v35 - 8);
  BOOL v126 = (_OWORD *)((char *)&v117 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v117 - v38;
  uint64_t v145 = type metadata accessor for Tracklist.LeadingIcon(0);
  __chkstk_darwin(v145);
  uint64_t v147 = (uint64_t)&v117 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v117 - v42;
  __chkstk_darwin(v44);
  uint64_t v153 = (uint64_t)&v117 - v45;
  uint64_t v155 = a3;
  uint64_t v172 = a3;
  uint64_t v173 = a4;
  uint64_t v174 = (uint64_t)a5;
  uint64_t v175 = a6;
  uint64_t v176 = a7;
  uint64_t v117 = type metadata accessor for Tracklist.Cell();
  LODWORD(v120) = sub_100601308(v117);
  uint64_t v46 = (void (*)(uint64_t, void *))a5[3];
  swift_unknownObjectRetain();
  uint64_t v152 = a5;
  v46(a3, a5);
  swift_unknownObjectRelease();
  uint64_t v47 = type metadata accessor for ArtworkImage.Info(0);
  uint64_t v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48);
  LODWORD(v119) = v48(v39, 1, v47) != 1;
  sub_1000637B8((uint64_t)v39, &qword_10109F0F0);
  uint64_t v49 = (void (*)(uint64_t, void *))a5[12];
  swift_unknownObjectRetain();
  uint64_t v50 = (uint64_t)v126;
  v49(v155, a5);
  swift_unknownObjectRelease();
  LOBYTE(v19) = v48((char *)v50, 1, v47) != 1;
  sub_1000637B8(v50, &qword_10109F0F0);
  uint64_t v51 = v156;
  long long v52 = *(_OWORD *)(v156 + 64);
  BOOL v126 = (_OWORD *)(v156 + 64);
  uint64_t v53 = *(void *)(v156 + 80);
  __int16 v54 = *(_WORD *)(v156 + 88);
  char v55 = *(unsigned char *)(v156 + 90);
  uint64_t v56 = *(void *)(v156 + 112);
  char v57 = *(unsigned char *)(v156 + 120);
  *uint64_t v43 = v120;
  v43[1] = v119;
  v43[2] = v19;
  int v118 = v142 & 1;
  v43[3] = v142;
  *(_OWORD *)(v43 + 8) = v52;
  *((void *)v43 + 3) = v53;
  *((_WORD *)v43 + 16) = v54;
  v43[34] = v55;
  *(_OWORD *)(v43 + 40) = *(_OWORD *)(v51 + 96);
  *((void *)v43 + 7) = v56;
  v43[64] = v57;
  uint64_t v58 = v145;
  uint64_t v172 = 0x4020000000000000;
  uint64_t v59 = enum case for Font.TextStyle.largeTitle(_:);
  char v60 = v121;
  uint64_t v61 = *(void (**)(char *, void, uint64_t))(v122 + 104);
  uint64_t v62 = v123;
  v61(v121, enum case for Font.TextStyle.largeTitle(_:), v123);
  sub_100303D88();
  ScaledMetric.init(wrappedValue:relativeTo:)();
  uint64_t v172 = 0x4018000000000000;
  v61(v60, v59, v62);
  uint64_t v63 = v156;
  ScaledMetric.init(wrappedValue:relativeTo:)();
  uint64_t v64 = (uint64_t *)&v43[*(int *)(v58 + 44)];
  *uint64_t v64 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_10109C850);
  swift_storeEnumTagMultiPayload();
  sub_100616C18((uint64_t)v43, v153, type metadata accessor for Tracklist.LeadingIcon);
  uint64_t v65 = v125;
  unint64_t v66 = v152;
  sub_1006028B0(v63, v142, v155, v140, v152, v143, (uint64_t)v141, v125);
  LOBYTE(v61) = *(unsigned char *)(v63 + 16);
  uint64_t v67 = v117;
  uint64_t v68 = sub_1006032C0(v117);
  LOBYTE(v59) = v69;
  uint64_t v70 = v124;
  sub_10006CAB8(v65, v124, &qword_1010B30E0);
  uint64_t v71 = v70 + *(int *)(v146 + 36);
  *(unsigned char *)uint64_t v71 = (_BYTE)v61;
  *(unsigned char *)(v71 + 1) = 1;
  *(void *)(v71 + 8) = v68;
  *(unsigned char *)(v71 + 16) = v59 & 1;
  sub_1000637B8(v65, &qword_1010B30E0);
  sub_10003CABC(v70, v154, &qword_1010B3070);
  uint64_t v72 = (uint64_t (*)(uint64_t, void *))v66[5];
  swift_unknownObjectRetain();
  LODWORD(v59) = v72(v155, v66);
  uint64_t v73 = swift_unknownObjectRelease();
  uint64_t v74 = 0;
  uint64_t v75 = 0;
  uint64_t v76 = 0;
  uint64_t v77 = 0;
  unint64_t v78 = 0;
  uint64_t v79 = 0;
  uint64_t v80 = 0;
  int v142 = v59;
  if ((v59 & 1) == 0)
  {
    sub_1006035AC(v67);
    static Alignment.center.getter();
    uint64_t v74 = 1;
    uint64_t v73 = _FrameLayout.init(width:height:alignment:)();
    uint64_t v75 = v181[11];
    uint64_t v76 = v182;
    uint64_t v77 = v183;
    unint64_t v78 = v184;
    uint64_t v79 = v185;
    uint64_t v80 = v186;
  }
  uint64_t v119 = v80;
  uint64_t v120 = v79;
  uint64_t v121 = (char *)v78;
  uint64_t v122 = v77;
  uint64_t v123 = v76;
  uint64_t v124 = v75;
  uint64_t v125 = v74;
  __chkstk_darwin(v73);
  uint64_t v81 = v155;
  uint64_t v82 = v156;
  uint64_t v83 = v140;
  *(&v117 - 8) = v155;
  *(&v117 - 7) = v83;
  uint64_t v84 = v152;
  uint64_t v85 = v143;
  *(&v117 - 6) = (uint64_t)v152;
  *(&v117 - 5) = v85;
  *(&v117 - 4) = (uint64_t)v141;
  *(&v117 - 3) = v82;
  *((unsigned char *)&v117 - 16) = v118;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v87 = v128;
  Group<A>.init(content:)();
  unsigned __int8 v88 = *(unsigned char *)(v82 + 16);
  uint64_t v89 = sub_100604510(v67);
  char v91 = v90;
  v181[10] = WitnessTable;
  uint64_t v92 = v130;
  uint64_t v93 = swift_getWitnessTable();
  LOWORD(v172) = v88;
  uint64_t v173 = v89;
  LOBYTE(v174) = v91 & 1;
  View.modifier<A>(_:)();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v87, v92);
  unsigned int v94 = (uint64_t (*)(uint64_t, void *))v84[15];
  swift_unknownObjectRetain();
  LOBYTE(v94) = v94(v81, v84);
  swift_unknownObjectRelease();
  if (v94)
  {
    uint64_t v95 = v151;
    if (qword_101098660 != -1) {
      swift_once();
    }
    swift_retain();
  }
  else
  {
    uint64_t v95 = v151;
  }
  unint64_t v96 = sub_100616EFC();
  v181[8] = v93;
  v181[9] = v96;
  uint64_t v97 = v133;
  uint64_t v98 = swift_getWitnessTable();
  uint64_t v99 = v131;
  uint64_t v100 = v144;
  View.foregroundColor(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v100, v97);
  uint64_t v101 = sub_100063858((unint64_t *)&unk_10109CF50, &qword_1010A8A20);
  v181[6] = v98;
  v181[7] = v101;
  uint64_t v144 = (char *)swift_getWitnessTable();
  sub_1005CF83C(v99, v95, v144);
  uint64_t v102 = v134;
  uint64_t v103 = *(void (**)(char *, uint64_t))(v134 + 8);
  uint64_t v143 = v134 + 8;
  uint64_t v141 = v103;
  v103(v99, v95);
  if (qword_101098640 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v140 = v187;
  LODWORD(v133) = v188;
  uint64_t v132 = v189;
  LODWORD(v131) = v190;
  uint64_t v129 = v192;
  uint64_t v130 = v191;
  long long v104 = v126[1];
  v193[0] = *v126;
  v193[1] = v104;
  v194[0] = v126[2];
  *(_OWORD *)((char *)v194 + 9) = *(_OWORD *)((char *)v126 + 41);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v105 = v137;
  sub_1006015CC(v193, v137);
  uint64_t v106 = v139;
  uint64_t v107 = swift_getWitnessTable();
  int v108 = v136;
  sub_1005CF83C(v105, v106, v107);
  uint64_t v109 = v135;
  uint64_t v156 = *(void *)(v135 + 8);
  ((void (*)(uint64_t, uint64_t))v156)(v105, v106);
  uint64_t v110 = v147;
  sub_100616C80(v153, v147, type metadata accessor for Tracklist.LeadingIcon);
  v181[0] = v110;
  uint64_t v111 = v148;
  sub_10006CAB8(v154, v148, &qword_1010B3070);
  uint64_t v172 = 0;
  uint64_t v173 = v125;
  uint64_t v174 = v124;
  uint64_t v175 = v123;
  uint64_t v176 = (void (*)(char *, uint64_t))v122;
  uint64_t v177 = v121;
  uint64_t v178 = v120;
  uint64_t v179 = v119;
  char v180 = v142 & 1;
  v181[1] = v111;
  v181[2] = &v172;
  uint64_t v112 = v150;
  uint64_t v113 = v151;
  (*(void (**)(void))(v102 + 16))();
  uint64_t v164 = 0;
  char v165 = 1;
  uint64_t v166 = v140;
  char v167 = v133;
  uint64_t v168 = v132;
  char v169 = (char)v131;
  uint64_t v170 = v130;
  uint64_t v171 = v129;
  v181[3] = v112;
  v181[4] = &v164;
  (*(void (**)(uint64_t, char *, uint64_t))(v109 + 16))(v105, v108, v106);
  v181[5] = v105;
  v163[0] = v145;
  v163[1] = v146;
  v163[2] = sub_100063814(&qword_1010B3078);
  v163[3] = v113;
  v163[4] = sub_100063814(&qword_1010B3088);
  v163[5] = v106;
  uint64_t v157 = sub_100616A1C(&qword_1010B30A8, (void (*)(uint64_t))type metadata accessor for Tracklist.LeadingIcon);
  unint64_t v158 = sub_100616F50();
  unint64_t v159 = sub_100617064();
  uint64_t v160 = v144;
  uint64_t v161 = sub_100586390(&qword_1010B3118, &qword_1010B3088);
  uint64_t v162 = v107;
  sub_1005FC338((uint64_t)v181, 6uLL, (uint64_t)v163);
  int v114 = (void (*)(uint64_t, uint64_t))v156;
  ((void (*)(char *, uint64_t))v156)(v108, v106);
  uint64_t v115 = v141;
  v141(v149, v113);
  sub_1000637B8(v154, &qword_1010B3070);
  sub_100616E84(v153, type metadata accessor for Tracklist.LeadingIcon);
  v114(v105, v106);
  v115(v150, v113);
  sub_1000637B8(v148, &qword_1010B3070);
  return sub_100616E84(v147, type metadata accessor for Tracklist.LeadingIcon);
}

uint64_t sub_1006028B0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int v82 = a2;
  uint64_t v99 = a8;
  uint64_t v14 = type metadata accessor for Tracklist.LeadingNumber(0);
  uint64_t v101 = *(void *)(v14 - 8);
  uint64_t v102 = v14;
  __chkstk_darwin(v14);
  unsigned __int8 v88 = &v81[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v84 = type metadata accessor for Tracklist.Artwork(0);
  __chkstk_darwin(v84);
  uint64_t v87 = &v81[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v100 = sub_100063814(&qword_1010B3138);
  uint64_t v95 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v86 = &v81[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_100063814(&qword_10109F0F0);
  __chkstk_darwin(v18 - 8);
  char v91 = &v81[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v90 = type metadata accessor for ArtworkImage.Info(0);
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v85 = &v81[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = sub_100063814(&qword_1010B3140);
  __chkstk_darwin(v21 - 8);
  uint64_t v98 = &v81[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v23);
  uint64_t v97 = &v81[-v24];
  uint64_t v25 = sub_100063814(&qword_1010B3060);
  __chkstk_darwin(v25 - 8);
  unint64_t v96 = &v81[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v27);
  uint64_t v92 = &v81[-v28];
  __chkstk_darwin(v29);
  uint64_t v93 = &v81[-v30];
  __chkstk_darwin(v31);
  uint64_t v33 = &v81[-v32];
  uint64_t v103 = a3;
  uint64_t v104 = a4;
  uint64_t v83 = a4;
  uint64_t v105 = a5;
  uint64_t v106 = a6;
  uint64_t v107 = a7;
  type metadata accessor for Tracklist.Cell();
  uint64_t v34 = (uint64_t (*)(uint64_t, void *))a5[4];
  swift_unknownObjectRetain();
  uint64_t v35 = a3;
  uint64_t v36 = v34(a3, a5);
  unsigned __int8 v38 = v37;
  LODWORD(a3) = v37;
  swift_unknownObjectRelease();
  unsigned int v94 = v33;
  if (a3 <= 0xFD)
  {
    uint64_t v103 = v36;
    LOBYTE(v104) = v38;
    sub_1006031B0((uint64_t)&v103, v82 & 1, a1, v35, (uint64_t)a5, (uint64_t)v33);
    uint64_t v39 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v101 + 56);
    v39(v33, 0, 1, v102);
  }
  else
  {
    uint64_t v39 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v101 + 56);
    v39(v33, 1, 1, v102);
  }
  uint64_t v40 = (void (*)(uint64_t, void *))a5[3];
  swift_unknownObjectRetain();
  uint64_t v41 = (uint64_t)v91;
  v40(v35, a5);
  swift_unknownObjectRelease();
  int v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v41, 1, v90);
  uint64_t v43 = v100;
  if (v42 == 1)
  {
    sub_1000637B8(v41, &qword_10109F0F0);
    uint64_t v44 = 1;
    uint64_t v46 = v101;
    uint64_t v45 = v102;
    uint64_t v47 = v97;
    uint64_t v49 = (uint64_t)v93;
    uint64_t v48 = (uint64_t)v94;
  }
  else
  {
    uint64_t v90 = (uint64_t)v39;
    uint64_t v50 = v85;
    sub_100616C18(v41, (uint64_t)v85, type metadata accessor for ArtworkImage.Info);
    uint64_t v51 = v87;
    sub_100616C80((uint64_t)v50, (uint64_t)v87, type metadata accessor for ArtworkImage.Info);
    long long v52 = (void (*)(uint64_t, void *))a5[12];
    uint64_t v53 = (int *)v84;
    swift_unknownObjectRetain();
    v52(v35, a5);
    swift_unknownObjectRelease();
    __int16 v54 = (uint64_t (*)(uint64_t, void *))a5[11];
    swift_unknownObjectRetain();
    uint64_t v55 = v54(v35, a5);
    uint64_t v57 = v56;
    swift_unknownObjectRelease();
    uint64_t v58 = *(void *)(a1 + 56);
    uint64_t v59 = (uint64_t *)&v51[v53[6]];
    uint64_t *v59 = v55;
    v59[1] = v57;
    *(void *)&v51[v53[7]] = v58;
    char v60 = (uint64_t *)&v51[v53[8]];
    *char v60 = swift_getKeyPath();
    sub_100063814((uint64_t *)&unk_10109C850);
    swift_storeEnumTagMultiPayload();
    swift_retain();
    char v61 = static Edge.Set.leading.getter();
    if (qword_101098610 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    uint64_t v67 = v66;
    uint64_t v69 = v68;
    uint64_t v70 = v86;
    sub_100616C80((uint64_t)v51, (uint64_t)v86, type metadata accessor for Tracklist.Artwork);
    uint64_t v43 = v100;
    uint64_t v71 = &v70[*(int *)(v100 + 36)];
    *uint64_t v71 = v61;
    *((void *)v71 + 1) = v63;
    *((void *)v71 + 2) = v65;
    *((void *)v71 + 3) = v67;
    *((void *)v71 + 4) = v69;
    v71[40] = 0;
    sub_100616E84((uint64_t)v51, type metadata accessor for Tracklist.Artwork);
    sub_100616E84((uint64_t)v50, type metadata accessor for ArtworkImage.Info);
    uint64_t v47 = v97;
    sub_10003CABC((uint64_t)v70, (uint64_t)v97, &qword_1010B3138);
    uint64_t v44 = 0;
    uint64_t v46 = v101;
    uint64_t v45 = v102;
    uint64_t v49 = (uint64_t)v93;
    uint64_t v48 = (uint64_t)v94;
    uint64_t v39 = (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v90;
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v95 + 56))(v47, v44, 1, v43);
  uint64_t v72 = v92;
  sub_10006CAB8(v48, (uint64_t)v92, &qword_1010B3060);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v46 + 48))(v72, 1, v45) == 1)
  {
    sub_1000637B8((uint64_t)v72, &qword_1010B3060);
    uint64_t v73 = 1;
  }
  else
  {
    uint64_t v74 = (uint64_t)v72;
    uint64_t v75 = v88;
    sub_100616C18(v74, (uint64_t)v88, type metadata accessor for Tracklist.LeadingNumber);
    sub_100616C18((uint64_t)v75, v49, type metadata accessor for Tracklist.LeadingNumber);
    uint64_t v73 = 0;
  }
  v39((unsigned char *)v49, v73, 1, v45);
  uint64_t v76 = v98;
  sub_10006CAB8((uint64_t)v47, (uint64_t)v98, &qword_1010B3140);
  uint64_t v77 = v96;
  sub_10006CAB8(v49, (uint64_t)v96, &qword_1010B3060);
  uint64_t v78 = v99;
  sub_10006CAB8((uint64_t)v76, v99, &qword_1010B3140);
  uint64_t v79 = sub_100063814(qword_1010B3148);
  sub_10006CAB8((uint64_t)v77, v78 + *(int *)(v79 + 48), &qword_1010B3060);
  sub_1000637B8(v49, &qword_1010B3060);
  sub_1000637B8((uint64_t)v47, &qword_1010B3140);
  sub_1000637B8(v48, &qword_1010B3060);
  sub_1000637B8((uint64_t)v77, &qword_1010B3060);
  return sub_1000637B8((uint64_t)v76, &qword_1010B3140);
}

uint64_t sub_1006031B0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v9 = *(void *)a1;
  char v10 = *(unsigned char *)(a1 + 8);
  type metadata accessor for Tracklist.Cell();
  __n128 v11 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 88);
  swift_unknownObjectRetain();
  uint64_t v12 = v11(a4, a5);
  uint64_t v14 = v13;
  swift_unknownObjectRelease();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 120);
  swift_unknownObjectRetain();
  LOBYTE(a5) = v15(a4, a5);
  swift_unknownObjectRelease();
  uint64_t v16 = *(void *)(a3 + 56);
  swift_retain();
  return sub_1006014B4(v9, v10, a2, v12, v14, a5 & 1, v16, a6);
}

uint64_t sub_1006032C0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DynamicTypeSize();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = *(void *)(a1 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v14 = sub_10060487C(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v1, a1);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a1);
    goto LABEL_10;
  }
  char v15 = v13[16];
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, a1);
  if (v15)
  {
LABEL_10:
    *(double *)&uint64_t result = 0.0;
    return result;
  }
  if (qword_101098690 != -1) {
    swift_once();
  }
  double v16 = *(double *)&qword_101129DD8;
  sub_1004DA4FC((uint64_t)v9);
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if (byte_1010B2D10 == 1)
  {
    double v17 = 48.0;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for DynamicTypeSize.accessibility3(_:), v3);
    char v19 = static DynamicTypeSize.< infix(_:_:)();
    uint64_t v20 = *(void (**)(char *, uint64_t))(v4 + 8);
    v20(v6, v3);
    if (v19) {
      double v17 = 48.0;
    }
    else {
      double v17 = 72.0;
    }
    v20(v9, v3);
  }
  *(double *)&uint64_t result = v16 + v17;
  return result;
}

double sub_1006035AC(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_10109F0F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(a1 + 32);
  uint64_t v6 = (void (*)(uint64_t, void *))v5[4];
  uint64_t v7 = *(void *)(a1 + 16);
  swift_unknownObjectRetain();
  v6(v7, v5);
  char v9 = v8;
  swift_unknownObjectRelease();
  double result = 0.0;
  if (v9 >= -2)
  {
    uint64_t v11 = (uint64_t (*)(uint64_t, void *))v5[5];
    swift_unknownObjectRetain();
    char v12 = v11(v7, v5);
    swift_unknownObjectRelease();
    if (v12)
    {
      if (qword_1010985E8 != -1) {
        swift_once();
      }
      return *(double *)&qword_101129D20;
    }
    else
    {
      uint64_t v13 = (void (*)(uint64_t, void *))v5[3];
      swift_unknownObjectRetain();
      v13(v7, v5);
      swift_unknownObjectRelease();
      uint64_t v14 = type metadata accessor for ArtworkImage.Info(0);
      int v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v4, 1, v14);
      sub_1000637B8((uint64_t)v4, &qword_10109F0F0);
      if (v15 == 1)
      {
        if (qword_101098630 != -1) {
          swift_once();
        }
        return *(double *)&qword_101129D78;
      }
      else
      {
        if (qword_101098618 != -1) {
          swift_once();
        }
        return *(double *)&qword_101129D50;
      }
    }
  }
  return result;
}

uint64_t sub_1006037E0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v55 = a7;
  uint64_t v47 = type metadata accessor for Tracklist.VerticalTextStack();
  uint64_t v46 = type metadata accessor for Tracklist.HorizontalTextStack();
  uint64_t v51 = type metadata accessor for _ConditionalContent();
  uint64_t v12 = type metadata accessor for Group();
  uint64_t v52 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  int v42 = (char *)&v35 - v13;
  uint64_t v43 = v14;
  uint64_t v15 = type metadata accessor for ModifiedContent();
  uint64_t v53 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  double v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  __int16 v54 = (char *)&v35 - v19;
  uint64_t v59 = a2;
  uint64_t v48 = a3;
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  uint64_t v49 = a5;
  uint64_t v62 = a5;
  uint64_t v63 = a6;
  uint64_t v50 = a6;
  uint64_t v20 = type metadata accessor for Tracklist.Cell();
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 40);
  swift_unknownObjectRetain();
  LOBYTE(a5) = v21(a2, a4);
  uint64_t v22 = swift_unknownObjectRelease();
  if (a5)
  {
    sub_1006035AC(v20);
    static Alignment.center.getter();
    uint64_t v45 = 1;
    uint64_t v22 = _FrameLayout.init(width:height:alignment:)();
    uint64_t v41 = v68[7];
    uint64_t v40 = v69;
    uint64_t v39 = v70;
    uint64_t v38 = v71;
    uint64_t v23 = v44 & 1;
    uint64_t v36 = v72;
    uint64_t v37 = v73;
  }
  else
  {
    uint64_t v45 = 0;
    uint64_t v41 = 0;
    uint64_t v40 = 0;
    uint64_t v39 = 0;
    uint64_t v38 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v23 = 2;
  }
  __chkstk_darwin(v22);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v25 = swift_getWitnessTable();
  v68[5] = WitnessTable;
  v68[6] = v25;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = v42;
  Group<A>.init(content:)();
  static Alignment.center.getter();
  v68[4] = v26;
  uint64_t v33 = v43;
  uint64_t v34 = swift_getWitnessTable();
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v27, v33);
  v68[2] = v34;
  v68[3] = &protocol witness table for _FlexFrameLayout;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = v54;
  sub_1005CF83C(v17, v15, v28);
  uint64_t v30 = v53;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v53 + 8);
  v31(v17, v15);
  uint64_t v59 = v23;
  uint64_t v60 = 0;
  uint64_t v61 = v45;
  uint64_t v62 = v41;
  uint64_t v63 = v40;
  uint64_t v64 = v39;
  uint64_t v65 = v38;
  uint64_t v66 = v36;
  uint64_t v67 = v37;
  v68[0] = &v59;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v17, v29, v15);
  v68[1] = v17;
  v58[0] = sub_100063814(&qword_1010B3080);
  v58[1] = v15;
  unint64_t v56 = sub_10061712C();
  uint64_t v57 = v28;
  sub_1005FC338((uint64_t)v68, 2uLL, (uint64_t)v58);
  v31(v29, v15);
  return ((uint64_t (*)(char *, uint64_t))v31)(v17, v15);
}

uint64_t sub_100603E20@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v51 = a7;
  uint64_t v50 = a6;
  uint64_t v54 = a4;
  int v52 = a2;
  uint64_t v58 = a8;
  uint64_t v11 = type metadata accessor for Tracklist.HorizontalTextStack();
  uint64_t v49 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v48 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v47 = (char *)&v45 - v14;
  uint64_t v15 = type metadata accessor for Tracklist.VerticalTextStack();
  uint64_t v46 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  double v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v45 = (char *)&v45 - v19;
  uint64_t v20 = type metadata accessor for DynamicTypeSize();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100063814(&qword_1010B5280);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for _ConditionalContent();
  uint64_t v56 = *(void *)(v27 - 8);
  uint64_t v57 = v27;
  __chkstk_darwin(v27);
  uint64_t v55 = (char *)&v45 - v28;
  double v29 = *(double *)(a1 + 96);
  *(void *)&long long v61 = a3;
  *((void *)&v61 + 1) = v54;
  uint64_t v53 = a3;
  uint64_t v54 = a5;
  *(void *)&long long v62 = a5;
  *((void *)&v62 + 1) = v50;
  *(void *)&v63[0] = v51;
  type metadata accessor for Tracklist.Cell();
  sub_1004DA53C((uint64_t)v26);
  sub_1004DA4FC((uint64_t)v23);
  LOBYTE(a3) = sub_1006160C0((uint64_t)v26, (uint64_t)v23, v29);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_1000637B8((uint64_t)v26, &qword_1010B5280);
  if (a3)
  {
    swift_unknownObjectRetain();
    sub_1006017B4(v52 & 1, (uint64_t)v17);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v31 = v45;
    sub_1005CF83C(v17, v15, WitnessTable);
    uint64_t v32 = *(void (**)(char *, uint64_t))(v46 + 8);
    v32(v17, v15);
    sub_1005CF83C(v31, v15, WitnessTable);
    swift_getWitnessTable();
    uint64_t v33 = v55;
    sub_1005C6BE0((uint64_t)v17, v15);
    v32(v17, v15);
    uint64_t v34 = v31;
    uint64_t v35 = v15;
  }
  else
  {
    long long v36 = *(_OWORD *)(a1 + 80);
    long long v61 = *(_OWORD *)(a1 + 64);
    long long v62 = v36;
    v63[0] = *(_OWORD *)(a1 + 96);
    *(_OWORD *)((char *)v63 + 9) = *(_OWORD *)(a1 + 105);
    swift_unknownObjectRetain();
    uint64_t v37 = v48;
    sub_100604450(v52 & 1, &v61, v48);
    uint64_t v38 = swift_getWitnessTable();
    uint64_t v39 = v47;
    sub_1005CF83C(v37, v11, v38);
    uint64_t v32 = *(void (**)(char *, uint64_t))(v49 + 8);
    v32((char *)v37, v11);
    sub_1005CF83C(v39, v11, v38);
    swift_getWitnessTable();
    uint64_t v33 = v55;
    sub_1005C6CD8(v37, v15, v11);
    v32((char *)v37, v11);
    uint64_t v34 = v39;
    uint64_t v35 = v11;
  }
  v32(v34, v35);
  uint64_t v40 = swift_getWitnessTable();
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v59 = v40;
  uint64_t v60 = v41;
  uint64_t v42 = v57;
  uint64_t v43 = swift_getWitnessTable();
  sub_1005CF83C(v33, v42, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v33, v42);
}

uint64_t sub_100604450@<X0>(char a1@<W1>, _OWORD *a2@<X2>, uint64_t a3@<X8>)
{
  *(void *)a3 = ObservedObject.init(wrappedValue:)();
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = a1;
  long long v7 = a2[1];
  *(_OWORD *)(a3 + 24) = *a2;
  *(_OWORD *)(a3 + 40) = v7;
  *(_OWORD *)(a3 + 56) = a2[2];
  *(_OWORD *)(a3 + 65) = *(_OWORD *)((char *)a2 + 41);
  char v8 = (uint64_t *)(a3 + *(int *)(type metadata accessor for Tracklist.HorizontalTextStack() + 44));
  *char v8 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_10109C850);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100604510(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v7 + 32);
  char v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 40);
  uint64_t v10 = *(void *)(v7 + 16);
  swift_unknownObjectRetain();
  LOBYTE(v8) = v9(v10, v8);
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, a1);
  if ((v8 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
LABEL_7:
    if (sub_1005FF620()) {
      return *(void *)(v2 + 80);
    }
    else {
      return 0;
    }
  }
  char v11 = v6[16];
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  if (v11) {
    goto LABEL_7;
  }
  if (qword_101098698 != -1) {
    swift_once();
  }
  return qword_101129DE0;
}

uint64_t sub_1006046C0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  type metadata accessor for Tracklist.Cell();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 120);
  swift_unknownObjectRetain();
  LOBYTE(a2) = v6(a1, a2);
  swift_unknownObjectRelease();
  uint64_t result = 0;
  if (a2)
  {
    id v8 = [(id)*HI.Color.prominentBackgroundColor.unsafeMutableAddressor() colorWithAlphaComponent:0.22];
    uint64_t result = Color.init(_:)();
  }
  *a3 = result;
  return result;
}

uint64_t sub_100604784@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  type metadata accessor for Tracklist.Cell();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 104);
  swift_unknownObjectRetain();
  uint64_t v7 = v6(a1, a2);
  uint64_t v9 = v8;
  swift_unknownObjectRelease();
  *a3 = v7;
  a3[1] = v9;
  _s17ContextMenuButtonVMa(0);
  sub_100303D88();
  ScaledMetric.init(wrappedValue:)();
  return ScaledMetric.init(wrappedValue:)();
}

BOOL sub_10060487C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v1 + 32);
  uint64_t v3 = *(void *)(a1 + 16);
  swift_unknownObjectRetain();
  v2(v3, v1);
  LOBYTE(v1) = v4;
  swift_unknownObjectRelease();
  return (char)v1 < -2;
}

uint64_t sub_1006048F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v82 = a1;
  uint64_t v3 = sub_100063814(&qword_1010B35A8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for DynamicTypeSize();
  uint64_t v79 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v75 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v74 = (char *)&v70 - v8;
  __chkstk_darwin(v9);
  uint64_t v80 = (uint64_t)&v70 - v10;
  uint64_t v11 = sub_100063814(&qword_1010B35B0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100063814(&qword_1010B35B8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100063814(&qword_1010B35C0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100063814(&qword_1010B35C8);
  __chkstk_darwin(v81);
  uint64_t v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010B35D0);
  __chkstk_darwin(v22);
  __chkstk_darwin(v23);
  int v26 = *(unsigned __int8 *)v2;
  if (v26 == 2)
  {
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v27 = v83;
    char v28 = BYTE8(v83);
    uint64_t v29 = v84;
    char v30 = BYTE8(v84);
    *(void *)uint64_t v5 = 0;
    v5[8] = 1;
    *((void *)v5 + 2) = v27;
    v5[24] = v28;
    *((void *)v5 + 4) = v29;
    v5[40] = v30;
    *((_OWORD *)v5 + 3) = v85;
    swift_storeEnumTagMultiPayload();
    sub_100063814(&qword_1010B3088);
    sub_10062144C();
    sub_100586390(&qword_1010B3118, &qword_1010B3088);
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v72 = v25;
    uint64_t v73 = (uint64_t)&v70 - v24;
    uint64_t v77 = v22;
    uint64_t v78 = v3;
    sub_100605204(v26 & 1, (uint64_t)v13);
    double v32 = v2[3];
    if (qword_1010985B8 != -1) {
      swift_once();
    }
    if (v32 >= *(double *)&qword_101129CF0 && qword_1010985A0 != -1) {
      swift_once();
    }
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    sub_10006CAB8((uint64_t)v13, (uint64_t)v16, &qword_1010B35B0);
    uint64_t v33 = &v16[*(int *)(v14 + 36)];
    long long v34 = v84;
    *(_OWORD *)uint64_t v33 = v83;
    *((_OWORD *)v33 + 1) = v34;
    *((_OWORD *)v33 + 2) = v85;
    sub_1000637B8((uint64_t)v13, &qword_1010B35B0);
    char v35 = static Edge.Set.leading.getter();
    uint64_t v36 = v77;
    if (v2[3] >= *(double *)&qword_101129CF0 && qword_1010985A0 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v38 = v37;
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    sub_10006CAB8((uint64_t)v16, (uint64_t)v19, &qword_1010B35B8);
    uint64_t v45 = &v19[*(int *)(v17 + 36)];
    char *v45 = v35;
    *((void *)v45 + 1) = v38;
    *((void *)v45 + 2) = v40;
    *((void *)v45 + 3) = v42;
    *((void *)v45 + 4) = v44;
    v45[40] = 0;
    sub_1000637B8((uint64_t)v16, &qword_1010B35B8);
    int v46 = static Edge.Set.bottom.getter();
    char v47 = v46;
    if (*((unsigned char *)v2 + 2) == 1)
    {
      int v71 = v46;
      uint64_t v48 = type metadata accessor for Tracklist.LeadingIcon(0);
      uint64_t v49 = v80;
      uint64_t v70 = (unsigned __int8 *)v2 + *(int *)(v48 + 44);
      sub_1004DA4FC(v80);
      if (qword_1010985A0 != -1) {
        swift_once();
      }
      if (byte_1010B2D10 == 1)
      {
        uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
        uint64_t v51 = v76;
        v50(v49, v76);
      }
      else
      {
        uint64_t v52 = v79;
        uint64_t v53 = v74;
        uint64_t v51 = v76;
        (*(void (**)(char *, void, uint64_t))(v79 + 104))(v74, enum case for DynamicTypeSize.accessibility3(_:), v76);
        static DynamicTypeSize.< infix(_:_:)();
        uint64_t v54 = v52;
        uint64_t v55 = v80;
        uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
        v50((uint64_t)v53, v51);
        v50(v55, v51);
      }
      uint64_t v56 = v75;
      sub_1004DA4FC(v75);
      if ((byte_1010B2D10 & 1) == 0)
      {
        uint64_t v57 = v74;
        (*(void (**)(char *, void, uint64_t))(v79 + 104))(v74, enum case for DynamicTypeSize.accessibility3(_:), v51);
        static DynamicTypeSize.< infix(_:_:)();
        v50((uint64_t)v57, v51);
      }
      v50(v56, v51);
      uint64_t v36 = v77;
      char v47 = v71;
    }
    EdgeInsets.init(_all:)();
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    sub_10006CAB8((uint64_t)v19, (uint64_t)v21, &qword_1010B35C0);
    uint64_t v66 = &v21[*(int *)(v81 + 36)];
    *uint64_t v66 = v47;
    *((void *)v66 + 1) = v59;
    *((void *)v66 + 2) = v61;
    *((void *)v66 + 3) = v63;
    *((void *)v66 + 4) = v65;
    v66[40] = 0;
    sub_1000637B8((uint64_t)v19, &qword_1010B35C0);
    if (*((unsigned char *)v2 + 3)) {
      double v67 = 1.0;
    }
    else {
      double v67 = 0.5;
    }
    uint64_t v68 = v72;
    sub_10006CAB8((uint64_t)v21, v72, &qword_1010B35C8);
    *(double *)(v68 + *(int *)(v36 + 36)) = v67;
    sub_1000637B8((uint64_t)v21, &qword_1010B35C8);
    uint64_t v69 = v73;
    sub_10003CABC(v68, v73, &qword_1010B35D0);
    sub_10006CAB8(v69, (uint64_t)v5, &qword_1010B35D0);
    swift_storeEnumTagMultiPayload();
    sub_100063814(&qword_1010B3088);
    sub_10062144C();
    sub_100586390(&qword_1010B3118, &qword_1010B3088);
    _ConditionalContent<>.init(storage:)();
    return sub_1000637B8(v69, &qword_1010B35D0);
  }
}

uint64_t sub_100605204@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v37 = sub_100063814(&qword_1010B3640);
  __chkstk_darwin(v37);
  uint64_t v38 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010B4020);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100063814(&qword_1010B3628);
  __chkstk_darwin(v34);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100063814(&qword_1010B3618);
  __chkstk_darwin(v36);
  char v35 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v34 - v11;
  if (a1)
  {
    uint64_t v23 = Image.init(systemName:)();
    type metadata accessor for Tracklist.LeadingIcon(0);
    sub_100063814(&qword_1010A5D00);
    ScaledMetric.wrappedValue.getter();
    static Font.Weight.bold.getter();
    uint64_t v24 = type metadata accessor for Font.Design();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v6, 1, 1, v24);
    uint64_t v25 = static Font.system(size:weight:design:)();
    sub_1000637B8((uint64_t)v6, &qword_1010B4020);
    uint64_t KeyPath = swift_getKeyPath();
    if (qword_1010985C8 != -1) {
      swift_once();
    }
    uint64_t v40 = v23;
    uint64_t v41 = KeyPath;
    uint64_t v42 = v25;
    uint64_t v43 = qword_101129D00;
    swift_retain();
    uint64_t v27 = (uint64_t *)AccessibilityString.popularBadgeLabel.unsafeMutableAddressor();
    uint64_t v28 = *v27;
    unint64_t v29 = v27[1];
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_100063814(&qword_1010B3638);
    unint64_t v31 = sub_100621844();
    View.accessibilityLabel(_:)(v28, v29, v30, v31);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    AccessibilityIdentifier.trackListCellPopularBadge.unsafeMutableAddressor();
    sub_100621798();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = (uint64_t)v35;
    View.accessibilityIdentifier(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000637B8((uint64_t)v8, &qword_1010B3628);
    sub_10003CABC(v32, (uint64_t)v12, &qword_1010B3618);
    sub_10006CAB8((uint64_t)v12, v38, &qword_1010B3618);
  }
  else
  {
    uint64_t v13 = Image.init(systemName:)();
    type metadata accessor for Tracklist.LeadingIcon(0);
    sub_100063814(&qword_1010A5D00);
    ScaledMetric.wrappedValue.getter();
    static Font.Weight.bold.getter();
    uint64_t v14 = type metadata accessor for Font.Design();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 1, 1, v14);
    uint64_t v15 = static Font.system(size:weight:design:)();
    sub_1000637B8((uint64_t)v6, &qword_1010B4020);
    uint64_t v16 = swift_getKeyPath();
    if (qword_1010985C0 != -1) {
      swift_once();
    }
    uint64_t v40 = v13;
    uint64_t v41 = v16;
    uint64_t v42 = v15;
    uint64_t v43 = qword_101129CF8;
    swift_retain();
    uint64_t v17 = (uint64_t *)AccessibilityString.favoriteBadgeLabel.unsafeMutableAddressor();
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_100063814(&qword_1010B3638);
    unint64_t v21 = sub_100621844();
    View.accessibilityLabel(_:)(v18, v19, v20, v21);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    AccessibilityIdentifier.trackListCellFavoriteBadge.unsafeMutableAddressor();
    sub_100621798();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = (uint64_t)v35;
    View.accessibilityIdentifier(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000637B8((uint64_t)v8, &qword_1010B3628);
    sub_10003CABC(v22, (uint64_t)v12, &qword_1010B3618);
    sub_10006CAB8((uint64_t)v12, v38, &qword_1010B3618);
  }
  swift_storeEnumTagMultiPayload();
  sub_1006216EC();
  _ConditionalContent<>.init(storage:)();
  return sub_1000637B8((uint64_t)v12, &qword_1010B3618);
}

uint64_t sub_100605830@<X0>(uint64_t a1@<X8>)
{
  uint64_t v144 = a1;
  uint64_t v141 = sub_100063814(&qword_1010B3650);
  __chkstk_darwin(v141);
  uint64_t v143 = (uint64_t)&v98 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_100063814(&qword_1010B3658);
  __chkstk_darwin(v142);
  uint64_t v99 = (uint64_t *)((char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for ArtworkImage.Info(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v146 = v4;
  uint64_t v147 = v5;
  __chkstk_darwin(v4);
  uint64_t v98 = (uint64_t)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010B3660);
  __chkstk_darwin(v7 - 8);
  uint64_t v140 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = type metadata accessor for AccessibilityTraits();
  uint64_t v137 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  uint64_t v136 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v133 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v131 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for WaveformState();
  uint64_t v122 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v119 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_100063814(&qword_1010AF2D0);
  __chkstk_darwin(v117);
  int v118 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100063814(&qword_10109F770);
  __chkstk_darwin(v13 - 8);
  uint64_t v106 = (uint64_t)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v114 = (uint64_t)&v98 - v16;
  uint64_t v105 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v103 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v101 = (char *)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100063814((uint64_t *)&unk_1010B40D0);
  uint64_t v102 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v100 = (uint64_t)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100063814(&qword_10109DF30);
  __chkstk_darwin(v19 - 8);
  uint64_t v145 = (uint64_t)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_100063814(&qword_1010B3668);
  __chkstk_darwin(v108);
  uint64_t v107 = (uint64_t)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_100063814(&qword_1010B3670);
  uint64_t v112 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v110 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_100063814(&qword_1010B3678);
  uint64_t v116 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v113 = (char *)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_100063814(&qword_1010B3680);
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v120 = (char *)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_100063814(&qword_1010B3688);
  __chkstk_darwin(v127);
  BOOL v126 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_100063814(&qword_1010B3690);
  __chkstk_darwin(v129);
  uint64_t v130 = (char *)&v98 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_100063814(&qword_1010B3698);
  __chkstk_darwin(v132);
  uint64_t v135 = (char *)&v98 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100063814(&qword_10109F0F0);
  __chkstk_darwin(v28 - 8);
  uint64_t v128 = (uint64_t)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v98 - v31;
  uint64_t v33 = type metadata accessor for DynamicTypeSize();
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v98 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v98 - v38;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v98 - v41;
  uint64_t v43 = (int *)type metadata accessor for Tracklist.Artwork(0);
  sub_1004DA4FC((uint64_t)v42);
  uint64_t v44 = v43[5];
  uint64_t v139 = v1;
  uint64_t v109 = v1 + v44;
  sub_10006CAB8(v1 + v44, (uint64_t)v32, &qword_10109F0F0);
  uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v147 + 48);
  v147 += 48;
  uint64_t v111 = v45;
  char v46 = v45((uint64_t)v32, 1, v146) != 1;
  sub_1000637B8((uint64_t)v32, &qword_10109F0F0);
  uint64_t v47 = sub_1006135C4((uint64_t)v42, v46);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v34 + 8);
  v48(v42, v33);
  sub_1004DA4FC((uint64_t)v39);
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if (byte_1010B2D10)
  {
    double v49 = 48.0;
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v34 + 104))(v36, enum case for DynamicTypeSize.accessibility3(_:), v33);
    char v50 = static DynamicTypeSize.< infix(_:_:)();
    v48(v36, v33);
    if (v50) {
      double v49 = 48.0;
    }
    else {
      double v49 = 72.0;
    }
  }
  uint64_t v51 = v122;
  uint64_t v52 = v119;
  v48(v39, v33);
  uint64_t v53 = v146;
  uint64_t v54 = v139;
  uint64_t v55 = v139 + *(int *)(v146 + 24);
  double v56 = *(double *)v55;
  if (*(unsigned char *)(v55 + 8)) {
    double v56 = 1.0;
  }
  uint64_t v57 = v139 + *(int *)(v146 + 20);
  ArtworkImage.Size.init(height:aspectRatio:fittingAspectRatio:)(v47, 0, 0.0, 1, (uint64_t)v151, v56);
  uint64_t v58 = v103;
  uint64_t v59 = (uint64_t)v101;
  uint64_t v60 = v105;
  (*(void (**)(char *, void, uint64_t))(v103 + 104))(v101, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v105);
  uint64_t v61 = v100;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v54, v57, (uint64_t)v151, v59, v100);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v59, v60);
  sub_1005FC4FC(*(void *)(v54 + v43[6]), *(void *)(v54 + v43[6] + 8), 2, 0, v145);
  (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v61, v104);
  uint64_t v122 = v43[7];
  uint64_t v62 = *(void *)(v54 + v122);
  if (v62)
  {
    swift_getKeyPath();
    uint64_t v148 = v62;
    sub_100616A1C(&qword_10109F778, (void (*)(uint64_t))type metadata accessor for WaveformPlayer.ListenerToken);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v63 = v62 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState;
    swift_beginAccess();
    uint64_t v64 = v114;
    sub_10006CAB8(v63, v114, &qword_10109F770);
    uint64_t v65 = v123;
  }
  else
  {
    uint64_t v64 = v114;
    uint64_t v65 = v123;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v114, 1, 1, v123);
  }
  uint64_t v66 = v106;
  sub_10006CAB8(v64, v106, &qword_10109F770);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v66, 1, v65) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v52, enum case for WaveformState.hidden(_:), v65);
    sub_1000637B8(v66, &qword_10109F770);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v52, v66, v65);
  }
  static Color.black.getter();
  uint64_t v67 = Color.opacity(_:)();
  swift_release();
  uint64_t v68 = (uint64_t)v118;
  *(void *)&v118[*(int *)(v117 + 36)] = v67;
  (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v68, v52, v65);
  uint64_t v69 = v145;
  uint64_t v70 = v107;
  sub_10006CAB8(v145, v107, &qword_10109DF30);
  uint64_t v71 = v108;
  sub_10003CABC(v68, v70 + *(int *)(v108 + 36), &qword_1010AF2D0);
  sub_1000637B8(v64, &qword_10109F770);
  sub_1000637B8(v69, &qword_10109DF30);
  unint64_t v72 = sub_100621958();
  uint64_t v73 = v110;
  View.corner(_:)();
  sub_1000637B8(v70, &qword_1010B3668);
  Border.artwork.unsafeMutableAddressor();
  swift_retain();
  uint64_t v149 = v71;
  unint64_t v150 = v72;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v75 = v113;
  uint64_t v76 = v115;
  View.border(_:corner:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v73, v76);
  uint64_t v77 = v131;
  static AccessibilityChildBehavior.ignore.getter();
  uint64_t v149 = v76;
  unint64_t v150 = OpaqueTypeConformance2;
  uint64_t v78 = swift_getOpaqueTypeConformance2();
  uint64_t v79 = v120;
  uint64_t v80 = v121;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v77, v134);
  (*(void (**)(char *, uint64_t))(v116 + 8))(v75, v80);
  AccessibilityIdentifier.trackListCellArtwork.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v149 = v80;
  unint64_t v150 = v78;
  swift_getOpaqueTypeConformance2();
  uint64_t v81 = (uint64_t)v126;
  uint64_t v82 = v125;
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v79, v82);
  uint64_t v83 = *(void *)(v54 + v122);
  if (v83)
  {
    uint64_t v83 = sub_10022F5BC();
    unint64_t v85 = v84;
  }
  else
  {
    unint64_t v85 = 0;
  }
  uint64_t v86 = (uint64_t)v140;
  uint64_t v87 = (uint64_t)v135;
  unint64_t v88 = sub_1006219F8();
  uint64_t v89 = (uint64_t)v130;
  View.accessibilityLabel(_:)(v83, v85, v127, v88);
  swift_bridgeObjectRelease();
  sub_1000637B8(v81, &qword_1010B3688);
  uint64_t v90 = v136;
  static AccessibilityTraits.updatesFrequently.getter();
  sub_100621B48();
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v137 + 8))(v90, v138);
  sub_1000637B8(v89, &qword_1010B3690);
  uint64_t v91 = v128;
  sub_10006CAB8(v109, v128, &qword_10109F0F0);
  if (v111(v91, 1, v53) == 1)
  {
    sub_1000637B8(v91, &qword_10109F0F0);
    sub_10006CAB8(v87, v143, &qword_1010B3698);
    swift_storeEnumTagMultiPayload();
    sub_100063858(&qword_1010B36B8, &qword_1010B3658);
    sub_100621BF4();
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v92 = v98;
    sub_100616C18(v91, v98, type metadata accessor for ArtworkImage.Info);
    uint64_t v93 = static Alignment.center.getter();
    uint64_t v94 = (uint64_t)v99;
    *uint64_t v99 = v93;
    *(void *)(v94 + 8) = v95;
    uint64_t v96 = sub_100063814(&qword_1010B36C8);
    sub_100606C04(v87, v54, v92, v94 + *(int *)(v96 + 44), v49, v47);
    sub_10006CAB8(v94, v143, &qword_1010B3658);
    swift_storeEnumTagMultiPayload();
    sub_100063858(&qword_1010B36B8, &qword_1010B3658);
    sub_100621BF4();
    _ConditionalContent<>.init(storage:)();
    sub_1000637B8(v94, &qword_1010B3658);
    sub_100616E84(v92, type metadata accessor for ArtworkImage.Info);
  }
  sub_10003CABC(v86, v144, &qword_1010B3660);
  return sub_1000637B8(v87, &qword_1010B3698);
}

uint64_t sub_100606C04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, uint64_t a6@<D1>)
{
  uint64_t v79 = a3;
  uint64_t v80 = a2;
  uint64_t v78 = a4;
  uint64_t v64 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v9 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100063814((uint64_t *)&unk_1010B40D0);
  uint64_t v69 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v13 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100063814((uint64_t *)&unk_1010B5450);
  uint64_t v77 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v63 = (char *)v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100063814((uint64_t *)&unk_1010B7420);
  uint64_t v72 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v65 = (char *)v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100063814((uint64_t *)&unk_1010B5460);
  __chkstk_darwin(v70);
  uint64_t v66 = (char *)v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100063814(&qword_1010B36D0);
  __chkstk_darwin(v17 - 8);
  uint64_t v67 = (char *)v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100063814(&qword_1010B36D8) - 8;
  __chkstk_darwin(v75);
  uint64_t v71 = (uint64_t)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v74 = (uint64_t)v61 - v21;
  uint64_t v22 = sub_100063814(&qword_1010B36E0);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100063814(&qword_1010B36E8);
  uint64_t v27 = v26 - 8;
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)v61 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)v61 - v31;
  uint64_t v62 = (uint64_t)v61 - v31;
  sub_10006CAB8(a1, (uint64_t)v25, &qword_1010B3698);
  *(_WORD *)&v25[*(int *)(v23 + 44)] = 256;
  sub_100607500();
  *(double *)&v61[1] = a5;
  static Alignment.topLeading.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10006CAB8((uint64_t)v25, (uint64_t)v29, &qword_1010B36E0);
  uint64_t v33 = &v29[*(int *)(v27 + 44)];
  long long v34 = v82;
  *(_OWORD *)uint64_t v33 = v81;
  *((_OWORD *)v33 + 1) = v34;
  *((_OWORD *)v33 + 2) = v83;
  sub_1000637B8((uint64_t)v25, &qword_1010B36E0);
  sub_10003CABC((uint64_t)v29, (uint64_t)v32, &qword_1010B36E8);
  uint64_t v35 = type metadata accessor for ArtworkImage.Info(0);
  uint64_t v36 = v79;
  uint64_t v37 = v79 + *(int *)(v35 + 20);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(a6, 0, a6, 0, 0, 1, 2, (uint64_t)v84);
  uint64_t v38 = v64;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v64);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v36, v37, (uint64_t)v84, (uint64_t)v11, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v38);
  uint64_t v39 = sub_10006389C((uint64_t *)&unk_1010B4170);
  unint64_t v40 = sub_10012D48C();
  *(void *)&long long v85 = v39;
  *((void *)&v85 + 1) = v40;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v42 = v63;
  uint64_t v43 = v68;
  View.corner(_:)();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v13, v43);
  Border.artwork.unsafeMutableAddressor();
  swift_retain();
  *(void *)&long long v85 = v43;
  *((void *)&v85 + 1) = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v44 = v65;
  uint64_t v45 = v73;
  View.border(_:corner:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v42, v45);
  uint64_t v46 = v79 + *(int *)(v35 + 24);
  uint64_t v47 = *(void *)v46;
  LOBYTE(v36) = *(unsigned char *)(v46 + 8);
  uint64_t v48 = v72;
  uint64_t v49 = (uint64_t)v66;
  uint64_t v50 = v76;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v66, v44, v76);
  uint64_t v51 = v49 + *(int *)(v70 + 36);
  *(void *)uint64_t v51 = v47;
  *(unsigned char *)(v51 + 8) = v36;
  *(unsigned char *)(v51 + 9) = 0;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v44, v50);
  sub_1004788B0();
  uint64_t v52 = (uint64_t)v67;
  View.accessibilityHidden(_:)();
  sub_1000637B8(v49, (uint64_t *)&unk_1010B5460);
  sub_100607500();
  static Alignment.bottomTrailing.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v53 = v71;
  sub_10006CAB8(v52, v71, &qword_1010B36D0);
  uint64_t v54 = (_OWORD *)(v53 + *(int *)(v75 + 44));
  long long v55 = v86;
  _OWORD *v54 = v85;
  v54[1] = v55;
  v54[2] = v87;
  sub_1000637B8(v52, &qword_1010B36D0);
  uint64_t v56 = v74;
  sub_10003CABC(v53, v74, &qword_1010B36D8);
  uint64_t v57 = v62;
  sub_10006CAB8(v62, (uint64_t)v29, &qword_1010B36E8);
  sub_10006CAB8(v56, v53, &qword_1010B36D8);
  uint64_t v58 = v78;
  sub_10006CAB8((uint64_t)v29, v78, &qword_1010B36E8);
  uint64_t v59 = sub_100063814(&qword_1010B36F0);
  sub_10006CAB8(v53, v58 + *(int *)(v59 + 48), &qword_1010B36D8);
  sub_1000637B8(v56, &qword_1010B36D8);
  sub_1000637B8(v57, &qword_1010B36E8);
  sub_1000637B8(v53, &qword_1010B36D8);
  return sub_1000637B8((uint64_t)v29, &qword_1010B36E8);
}

double sub_100607500()
{
  uint64_t v1 = type metadata accessor for DynamicTypeSize();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v8 = v0 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 24);
  double v9 = *(double *)v8;
  int v10 = *(unsigned __int8 *)(v8 + 8);
  type metadata accessor for Tracklist.Artwork(0);
  sub_1004DA4FC((uint64_t)v7);
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if (byte_1010B2D10 == 1)
  {
    uint64_t v11 = *(void (**)(char *, uint64_t))(v2 + 8);
    double v12 = 32.0;
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for DynamicTypeSize.accessibility3(_:), v1);
    char v13 = static DynamicTypeSize.< infix(_:_:)();
    uint64_t v11 = *(void (**)(char *, uint64_t))(v2 + 8);
    v11(v4, v1);
    double v12 = 48.0;
    if (v13) {
      double v12 = 32.0;
    }
  }
  double v14 = 1.0;
  if (!v10) {
    double v14 = v9;
  }
  double v15 = v14 * v12 + v12 * 0.5;
  v11(v7, v1);
  return v15;
}

uint64_t sub_100607700@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100063814(&qword_1010B36F8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010B3700);
  __chkstk_darwin(v7);
  double v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10060788C(v2, (uint64_t)v6);
  if (*(unsigned char *)(v2 + 32) == 1)
  {
    if (qword_101098660 != -1) {
      swift_once();
    }
    uint64_t v10 = qword_101129DA8;
    swift_retain();
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006CAB8((uint64_t)v6, (uint64_t)v9, &qword_1010B36F8);
  double v12 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  *double v12 = KeyPath;
  v12[1] = v10;
  sub_1000637B8((uint64_t)v6, &qword_1010B36F8);
  return sub_10003CABC((uint64_t)v9, a1, &qword_1010B3700);
}

uint64_t sub_10060788C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v104 = sub_100063814(&qword_1010AF430);
  __chkstk_darwin(v104);
  uint64_t v5 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_1010B3708);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AccessibilityTraits();
  uint64_t v100 = *(void *)(v9 - 8);
  uint64_t v101 = v9;
  __chkstk_darwin(v9);
  uint64_t v99 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for WaveformState();
  uint64_t v11 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v97 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DancingPlaybackBarsConditionalModifier();
  __chkstk_darwin(v13 - 8);
  uint64_t v96 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100063814(&qword_10109F770);
  __chkstk_darwin(v15 - 8);
  uint64_t v93 = (uint64_t)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v105 = (char *)&v88 - v18;
  uint64_t v19 = sub_100063814(&qword_1010B3710);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010B3718);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100063814(&qword_1010B3720);
  __chkstk_darwin(v94);
  uint64_t v95 = (uint64_t)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100063814(&qword_1010B3728);
  __chkstk_darwin(v26);
  __chkstk_darwin(v27);
  __chkstk_darwin(v28);
  uint64_t v32 = *(void *)a1;
  int v33 = *(char *)(a1 + 8);
  uint64_t v102 = a1;
  uint64_t v103 = a2;
  if (v33 < 0)
  {
    uint64_t v99 = v5;
    uint64_t v100 = v26;
    uint64_t v101 = v6;
    uint64_t v105 = v8;
    v106._countAndFlagsBits = v32;
    sub_1001C715C();
    Swift::String v106 = BinaryInteger.formatted()();
    sub_10005D180();
    uint64_t v40 = a1;
    uint64_t v41 = Text.init<A>(_:)();
    uint64_t v43 = v42;
    char v45 = v44 & 1;
    LODWORD(v106._countAndFlagsBits) = static HierarchicalShapeStyle.primary.getter();
    uint64_t v46 = Text.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v106, *(unsigned char *)(v40 + 9));
    uint64_t v48 = v47;
    char v50 = v49;
    sub_1000D1500(v41, v43, v45);
    swift_bridgeObjectRelease();
    if (qword_1010985D8 != -1) {
      swift_once();
    }
    char v51 = v50 & 1;
    uint64_t v52 = Text.font(_:)();
    uint64_t v54 = v53;
    char v56 = v55;
    sub_1000D1500(v46, v48, v51);
    swift_bridgeObjectRelease();
    if (qword_1010985E0 != -1) {
      swift_once();
    }
    uint64_t v57 = Text.fontWeight(_:)();
    uint64_t v97 = v58;
    uint64_t v98 = v59;
    char v61 = v60;
    sub_1000D1500(v52, v54, v56 & 1);
    swift_bridgeObjectRelease();
    type metadata accessor for Tracklist.LeadingNumber(0);
    sub_100063814(&qword_1010A5D00);
    ScaledMetric.wrappedValue.getter();
    static Alignment.center.getter();
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    uint64_t v62 = v137;
    uint64_t v63 = v139;
    uint64_t v64 = v141;
    uint64_t v65 = v143;
    uint64_t v66 = v145;
    uint64_t v67 = v149;
    uint64_t v94 = v150;
    uint64_t v95 = v147;
    LODWORD(v102) = v61 & 1;
    char v135 = v61 & 1;
    char v134 = v138;
    char v133 = v140;
    char v132 = v142;
    char v131 = v144;
    char v130 = v146;
    char v129 = v148;
    char v68 = static Edge.Set.trailing.getter();
    if (qword_1010985D0 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    char v136 = 0;
    uint64_t v69 = (uint64_t)v97;
    v106._countAndFlagsBits = v57;
    v106._object = v97;
    char v107 = v135;
    uint64_t v96 = (char *)v57;
    uint64_t v108 = v98;
    uint64_t v109 = v62;
    char v110 = v134;
    uint64_t v111 = v63;
    char v112 = v133;
    uint64_t v113 = v64;
    char v114 = v132;
    uint64_t v115 = v65;
    char v116 = v131;
    uint64_t v117 = v66;
    char v118 = v130;
    uint64_t v119 = v95;
    char v120 = v129;
    uint64_t v121 = v67;
    uint64_t v122 = v94;
    char v123 = v68;
    uint64_t v124 = v70;
    uint64_t v125 = v71;
    uint64_t v126 = v72;
    uint64_t v127 = v73;
    char v128 = 0;
    AccessibilityIdentifier.trackListCellChartNumber.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100063814(&qword_101099D40);
    sub_1000D2758();
    uint64_t v74 = (uint64_t)v99;
    View.accessibilityIdentifier(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000D1500((uint64_t)v96, v69, v102);
    swift_bridgeObjectRelease();
    uint64_t v75 = &qword_1010AF430;
    sub_10006CAB8(v74, (uint64_t)v105, &qword_1010AF430);
    swift_storeEnumTagMultiPayload();
    sub_100621CA8();
    sub_1005862E4();
  }
  else
  {
    uint64_t v90 = v31;
    uint64_t v91 = v30;
    uint64_t v92 = (uint64_t)&v88 - v29;
    sub_100608480(v32, v33 & 1, a1, (uint64_t)v21);
    uint64_t v34 = *(void *)(a1 + 16);
    uint64_t v35 = *(void *)(a1 + 24);
    uint64_t v89 = v24;
    sub_100608B14(v34, v35, 2, (uint64_t)v24);
    sub_1000637B8((uint64_t)v21, &qword_1010B3710);
    uint64_t v36 = *(void *)(a1 + 40);
    if (v36)
    {
      swift_getKeyPath();
      v106._countAndFlagsBits = v36;
      sub_100616A1C(&qword_10109F778, (void (*)(uint64_t))type metadata accessor for WaveformPlayer.ListenerToken);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v37 = v36 + OBJC_IVAR____TtCC5Music14WaveformPlayer13ListenerToken__displayState;
      swift_beginAccess();
      uint64_t v38 = (uint64_t)v105;
      sub_10006CAB8(v37, (uint64_t)v105, &qword_10109F770);
      uint64_t v39 = v98;
    }
    else
    {
      uint64_t v38 = (uint64_t)v105;
      uint64_t v39 = v98;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v105, 1, 1, v98);
    }
    uint64_t v76 = v38;
    uint64_t v77 = v93;
    sub_10006CAB8(v76, v93, &qword_10109F770);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v77, 1, v39) == 1)
    {
      uint64_t v78 = v97;
      (*(void (**)(char *, void, uint64_t))(v11 + 104))(v97, enum case for WaveformState.hidden(_:), v39);
      sub_1000637B8(v77, &qword_10109F770);
      uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
    }
    else
    {
      uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
      uint64_t v78 = v97;
      v79(v97, v77, v39);
    }
    uint64_t v80 = (uint64_t)v96;
    v79(v96, (uint64_t)v78, v39);
    uint64_t v81 = (uint64_t)v89;
    uint64_t v82 = v95;
    sub_10006CAB8((uint64_t)v89, v95, &qword_1010B3718);
    sub_100616C18(v80, v82 + *(int *)(v94 + 36), (uint64_t (*)(void))type metadata accessor for DancingPlaybackBarsConditionalModifier);
    sub_1000637B8((uint64_t)v105, &qword_10109F770);
    sub_1000637B8(v81, &qword_1010B3718);
    uint64_t v137 = sub_100608D30();
    uint64_t v138 = v83;
    sub_100621D54();
    sub_10005D180();
    uint64_t v84 = v91;
    View.accessibilityLabel<A>(_:)();
    swift_bridgeObjectRelease();
    sub_1000637B8(v82, &qword_1010B3720);
    long long v85 = v99;
    static AccessibilityTraits.updatesFrequently.getter();
    uint64_t v86 = v90;
    ModifiedContent<>.accessibilityAddTraits(_:)();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v85, v101);
    uint64_t v75 = &qword_1010B3728;
    sub_1000637B8(v84, &qword_1010B3728);
    uint64_t v74 = v92;
    sub_10003CABC(v86, v92, &qword_1010B3728);
    sub_10006CAB8(v74, (uint64_t)v8, &qword_1010B3728);
    swift_storeEnumTagMultiPayload();
    sub_100621CA8();
    sub_1005862E4();
  }
  _ConditionalContent<>.init(storage:)();
  return sub_1000637B8(v74, v75);
}

uint64_t sub_100608480@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v47 = a4;
  uint64_t v41 = type metadata accessor for DynamicTypeSize();
  uint64_t v7 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100063814(&qword_1010B5280);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_100063814(&qword_1010B3768);
  __chkstk_darwin(v13);
  char v45 = &v37[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v46 = &v37[-v16];
  uint64_t v17 = sub_100063814(&qword_1010B3780);
  __chkstk_darwin(v17);
  uint64_t v19 = &v37[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a2)
  {
    type metadata accessor for Tracklist.LeadingNumber(0);
    sub_100063814(&qword_1010A5D00);
    ScaledMetric.wrappedValue.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t countAndFlagsBits = v48._countAndFlagsBits;
    char object = (char)v48._object;
    uint64_t v31 = v49;
    char v32 = v50;
    *(void *)uint64_t v19 = 0;
    v19[8] = 1;
    *((void *)v19 + 2) = countAndFlagsBits;
    v19[24] = object;
    *((void *)v19 + 4) = v31;
    v19[40] = v32;
    *((_OWORD *)v19 + 3) = v51;
    swift_storeEnumTagMultiPayload();
    sub_100063814(&qword_1010B3088);
    sub_100621FE4();
    sub_100586390(&qword_1010B3118, &qword_1010B3088);
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v39 = v17;
    uint64_t v40 = v13;
    v48._uint64_t countAndFlagsBits = a1;
    sub_1001C715C();
    Swift::String v48 = BinaryInteger.formatted()();
    sub_10005D180();
    uint64_t v20 = Text.init<A>(_:)();
    uint64_t v22 = v21;
    char v24 = v23 & 1;
    LODWORD(v48._countAndFlagsBits) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v25 = Text.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v48, *(unsigned char *)(a3 + 9));
    uint64_t v42 = v26;
    uint64_t v43 = v25;
    int v38 = v27;
    uint64_t v44 = v28;
    sub_1000D1500(v20, v22, v24);
    swift_bridgeObjectRelease();
    type metadata accessor for Tracklist.LeadingNumber(0);
    sub_100063814(&qword_1010A5D00);
    ScaledMetric.wrappedValue.getter();
    sub_1004DA53C((uint64_t)v12);
    sub_1004DA4FC((uint64_t)v9);
    LOBYTE(v20) = sub_10061306C((uint64_t)v12);
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v41);
    sub_1000637B8((uint64_t)v12, &qword_1010B5280);
    if (v20) {
      static Alignment.leading.getter();
    }
    else {
      static Alignment.center.getter();
    }
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    char v34 = v38 & 1;
    char v69 = v38 & 1;
    char v68 = v71;
    char v67 = v73;
    char v66 = v75;
    char v65 = v77;
    char v64 = v79;
    char v63 = v81;
    v48._uint64_t countAndFlagsBits = v43;
    v48._char object = v42;
    LOBYTE(v49) = v38 & 1;
    uint64_t v50 = v44;
    *(void *)&long long v51 = v70;
    BYTE8(v51) = v71;
    uint64_t v52 = v72;
    char v53 = v73;
    uint64_t v54 = v74;
    char v55 = v75;
    uint64_t v56 = v76;
    char v57 = v77;
    uint64_t v58 = v78;
    char v59 = v79;
    uint64_t v60 = v80;
    char v61 = v81;
    long long v62 = v82;
    AccessibilityIdentifier.trackListCellTrackNumber.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100063814(&qword_101099D50);
    sub_100586390((unint64_t *)&qword_101099D48, &qword_101099D50);
    uint64_t v35 = (uint64_t)v45;
    View.accessibilityIdentifier(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000D1500(v43, (uint64_t)v42, v34);
    swift_bridgeObjectRelease();
    uint64_t v36 = v46;
    sub_10003CABC(v35, (uint64_t)v46, &qword_1010B3768);
    sub_10006CAB8((uint64_t)v36, (uint64_t)v19, &qword_1010B3768);
    swift_storeEnumTagMultiPayload();
    sub_100063814(&qword_1010B3088);
    sub_100621FE4();
    sub_100586390(&qword_1010B3118, &qword_1010B3088);
    _ConditionalContent<>.init(storage:)();
    return sub_1000637B8((uint64_t)v36, &qword_1010B3768);
  }
}

uint64_t sub_100608B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for PreviewOverlay.TrackNumberVariant(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = qword_101097960;
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  *(void *)uint64_t v12 = a1;
  *((void *)v12 + 1) = a2;
  v12[16] = a3;
  uint64_t v14 = qword_101097EA8;
  swift_retain();
  if (v14 != -1) {
    swift_once();
  }
  *((void *)v12 + 3) = (*(uint64_t (**)(void))(*(void *)qword_101129410 + 408))();
  type metadata accessor for PreviewPlaybackController(0);
  sub_100616A1C(&qword_10109D620, (void (*)(uint64_t))type metadata accessor for PreviewPlaybackController);
  *((void *)v12 + 4) = ObservedObject.init(wrappedValue:)();
  *((void *)v12 + 5) = v15;
  uint64_t v16 = (uint64_t *)&v12[*(int *)(v10 + 32)];
  *uint64_t v16 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_10109C850);
  swift_storeEnumTagMultiPayload();
  sub_10006CAB8(v5, a4, &qword_1010B3710);
  uint64_t v17 = sub_100063814(&qword_1010B3718);
  return sub_100616C18((uint64_t)v12, a4 + *(int *)(v17 + 36), type metadata accessor for PreviewOverlay.TrackNumberVariant);
}

uint64_t sub_100608D30()
{
  if (*(void *)(v0 + 40))
  {
    swift_retain();
    uint64_t v1 = sub_10022F5BC();
    if (v2)
    {
      uint64_t v3 = v1;
      uint64_t v4 = v2;
      uint64_t v5 = sub_100073180(0, 1, 1, _swiftEmptyArrayStorage);
      unint64_t v7 = v5[2];
      unint64_t v6 = v5[3];
      if (v7 >= v6 >> 1) {
        uint64_t v5 = sub_100073180((void *)(v6 > 1), v7 + 1, 1, v5);
      }
      uint64_t v5[2] = v7 + 1;
      uint64_t v8 = &v5[2 * v7];
      v8[4] = v3;
      v8[5] = v4;
    }
    else
    {
      uint64_t v5 = _swiftEmptyArrayStorage;
    }
    swift_release();
  }
  else
  {
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  if ((*(unsigned char *)(v0 + 8) & 0x81) == 0)
  {
    sub_1001C715C();
    Swift::String v9 = BinaryInteger.formatted()();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v5 = sub_100073180(0, v5[2] + 1, 1, v5);
    }
    unint64_t v11 = v5[2];
    unint64_t v10 = v5[3];
    if (v11 >= v10 >> 1) {
      uint64_t v5 = sub_100073180((void *)(v10 > 1), v11 + 1, 1, v5);
    }
    uint64_t v5[2] = v11 + 1;
    *(Swift::String *)&v5[2 * v11 + 4] = v9;
  }
  sub_100063814((uint64_t *)&unk_1010A4130);
  sub_100063858((unint64_t *)&qword_10109BD10, (uint64_t *)&unk_1010A4130);
  uint64_t v12 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_100608F14@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  int v40 = a1;
  uint64_t v46 = a2;
  uint64_t v2 = sub_100063814(&qword_1010B3788);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100063814(&qword_1010B3790);
  __chkstk_darwin(v6);
  uint64_t v8 = &v39[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v42 = sub_100063814(&qword_1010B3798);
  uint64_t v9 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  unint64_t v11 = &v39[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v41 = sub_100063814(&qword_1010B37A0);
  __chkstk_darwin(v41);
  uint64_t v13 = &v39[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v44 = sub_100063814(&qword_1010B37A8);
  __chkstk_darwin(v44);
  char v45 = &v39[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_100063814(&qword_1010B37B0);
  __chkstk_darwin(v15 - 8);
  uint64_t v43 = &v39[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)&long long v48 = Image.init(systemName:)();
  int v47 = static HierarchicalShapeStyle.secondary.getter();
  View.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v47, v40, (uint64_t)&type metadata for Image, (uint64_t)&type metadata for HierarchicalShapeStyle, (uint64_t)&protocol witness table for Image);
  swift_release();
  if (qword_101098600 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_101129D38;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v8, v5, v2);
  uint64_t v19 = (uint64_t *)&v8[*(int *)(v6 + 36)];
  *uint64_t v19 = KeyPath;
  v19[1] = v17;
  uint64_t v20 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  swift_retain();
  v20(v5, v2);
  if (qword_101098608 != -1) {
    swift_once();
  }
  sub_1006220B0();
  View.fontWeight(_:)();
  sub_1000637B8((uint64_t)v8, &qword_1010B3790);
  char v21 = static Edge.Set.trailing.getter();
  if (qword_1010985F0 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v30 = v42;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v13, v11, v42);
  uint64_t v31 = &v13[*(int *)(v41 + 36)];
  *uint64_t v31 = v21;
  *((void *)v31 + 1) = v23;
  *((void *)v31 + 2) = v25;
  *((void *)v31 + 3) = v27;
  *((void *)v31 + 4) = v29;
  v31[40] = 0;
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v30);
  if (qword_1010985F8 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  char v32 = v45;
  sub_10006CAB8((uint64_t)v13, (uint64_t)v45, &qword_1010B37A0);
  int v33 = &v32[*(int *)(v44 + 36)];
  long long v34 = v53;
  v33[4] = v52;
  v33[5] = v34;
  v33[6] = v54;
  long long v35 = v49;
  _OWORD *v33 = v48;
  v33[1] = v35;
  long long v36 = v51;
  v33[2] = v50;
  v33[3] = v36;
  sub_1000637B8((uint64_t)v13, &qword_1010B37A0);
  AccessibilityIdentifier.trackListCellVideoIcon.unsafeMutableAddressor();
  sub_10062147C(&qword_1010B37C0, &qword_1010B37A8, (void (*)(void))sub_100622194);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v37 = (uint64_t)v43;
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000637B8((uint64_t)v32, &qword_1010B37A8);
  return sub_10003CABC(v37, v46, &qword_1010B37B0);
}

uint64_t sub_1006095CC@<X0>(uint64_t a1@<X8>)
{
  return sub_100608F14(*v1, a1);
}

uint64_t sub_1006095D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100063814(&qword_1010B34D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static HorizontalAlignment.leading.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v9 = sub_100063814(&qword_1010B34D8);
  sub_1006096E4(v3, *(void *)(a1 + 16), *(void **)(a1 + 24), (uint64_t)&v8[*(int *)(v9 + 44)]);
  uint64_t v10 = static Alignment.leading.getter();
  sub_100624C78(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a2, 0.0, 1, 0.0, 1, v10, v11);
  return sub_1000637B8((uint64_t)v8, &qword_1010B34D0);
}

uint64_t sub_1006096E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v125 = a4;
  uint64_t v106 = type metadata accessor for DynamicTypeSize();
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v104 = (uint64_t)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for Tracklist.VerticalTextStack();
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v108 = (char *)&v103 - v8;
  uint64_t v9 = sub_100063814(&qword_10109F0F0);
  __chkstk_darwin(v9 - 8);
  char v107 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_100063814(&qword_1010B34E0);
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v111 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100063814((uint64_t *)&unk_1010B4440);
  __chkstk_darwin(v116);
  uint64_t v117 = (uint64_t)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100063814(&qword_1010B34E8);
  uint64_t v122 = *(void *)(v13 - 8);
  uint64_t v123 = v13;
  __chkstk_darwin(v13);
  uint64_t v113 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v112 = (uint64_t)&v103 - v16;
  uint64_t v17 = sub_100063814(&qword_1010B34F0);
  __chkstk_darwin(v17 - 8);
  uint64_t v124 = (uint64_t)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v126 = (uint64_t)&v103 - v20;
  uint64_t v21 = sub_100063814(&qword_1010B34F8);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100063814(&qword_1010B3500);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_100063814(&qword_1010B3508);
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v28 = (char *)&v103 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_100063814((uint64_t *)&unk_1010B4450);
  __chkstk_darwin(v120);
  uint64_t v30 = (char *)&v103 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100063814(&qword_1010B3510);
  __chkstk_darwin(v31 - 8);
  uint64_t v121 = (uint64_t)&v103 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  long long v35 = (char *)&v103 - v34;
  __chkstk_darwin(v36);
  char v128 = a3;
  uint64_t v129 = (uint64_t)&v103 - v37;
  uint64_t v38 = a1;
  uint64_t v127 = a2;
  sub_10060A454(a1, a2, a3, (uint64_t)v23);
  if (qword_101098650 != -1) {
    swift_once();
  }
  uint64_t v39 = qword_101129D98;
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006CAB8((uint64_t)v23, (uint64_t)v26, &qword_1010B34F8);
  uint64_t v41 = (uint64_t *)&v26[*(int *)(v24 + 36)];
  uint64_t *v41 = KeyPath;
  v41[1] = v39;
  swift_retain();
  sub_1000637B8((uint64_t)v23, &qword_1010B34F8);
  LODWORD(v130) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v42 = v38;
  char v43 = *(unsigned char *)(v38 + 16);
  unint64_t v44 = sub_100621078();
  View.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v130, v43, v24, (uint64_t)&type metadata for HierarchicalShapeStyle, v44);
  sub_1000637B8((uint64_t)v26, &qword_1010B3500);
  uint64_t v45 = static Alignment.leading.getter();
  uint64_t v46 = 1;
  double v48 = sub_100624CD4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v30, 0.0, 1, 0.0, 1, v45, v47);
  (*(void (**)(char *, uint64_t, double))(v118 + 8))(v28, v119, v48);
  AccessibilityIdentifier.trackListCellTitle.unsafeMutableAddressor();
  sub_1006224E4(&qword_1010B3538, (uint64_t *)&unk_1010B4450, &qword_1010B3500, (void (*)(void))sub_100621078);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000637B8((uint64_t)v30, (uint64_t *)&unk_1010B4450);
  uint64_t v49 = (uint64_t)v35;
  uint64_t v50 = v129;
  sub_10003CABC(v49, v129, &qword_1010B3510);
  long long v51 = v128;
  long long v52 = (uint64_t (*)(uint64_t, void *))v128[7];
  swift_unknownObjectRetain();
  uint64_t v53 = v52(v127, v51);
  uint64_t v55 = v54;
  swift_unknownObjectRelease();
  if (v55)
  {
    uint64_t v130 = v53;
    uint64_t v131 = v55;
    sub_10005D180();
    uint64_t v56 = Text.init<A>(_:)();
    uint64_t v58 = v57;
    char v60 = v59 & 1;
    LODWORD(v130) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v61 = Text.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v130, *(unsigned char *)(v42 + 16));
    uint64_t v63 = v62;
    char v65 = v64;
    sub_1000D1500(v56, v58, v60);
    swift_bridgeObjectRelease();
    uint64_t v66 = v42;
    if (qword_101098658 != -1) {
      swift_once();
    }
    uint64_t v67 = Text.font(_:)();
    uint64_t v69 = v68;
    char v71 = v70 & 1;
    sub_1000D1500(v61, v63, v65 & 1);
    swift_bridgeObjectRelease();
    static Font.footnote.getter();
    uint64_t v72 = Text.font(_:)();
    uint64_t v74 = v73;
    char v76 = v75;
    uint64_t v120 = v77;
    swift_release();
    sub_1000D1500(v67, v69, v71);
    swift_bridgeObjectRelease();
    uint64_t v78 = v128;
    char v79 = (void (*)(uint64_t, void *))v128[3];
    swift_unknownObjectRetain();
    uint64_t v80 = (uint64_t)v107;
    v79(v127, v78);
    swift_unknownObjectRelease();
    uint64_t v81 = type metadata accessor for ArtworkImage.Info(0);
    int v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 48))(v80, 1, v81);
    sub_1000637B8(v80, &qword_10109F0F0);
    uint64_t v83 = v109;
    uint64_t v84 = v108;
    uint64_t v85 = v110;
    (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v108, v66, v110);
    if (v82 == 1)
    {
      (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
      uint64_t v86 = 0;
    }
    else
    {
      uint64_t v88 = v104;
      sub_1004DA4FC(v104);
      int v82 = DynamicTypeSize.isAccessibilitySize.getter();
      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v88, v106);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
      uint64_t v86 = ~v82 & 1;
    }
    uint64_t v89 = swift_getKeyPath();
    uint64_t v130 = v72;
    uint64_t v131 = v74;
    char v90 = v76 & 1;
    char v132 = v90;
    uint64_t v133 = v120;
    uint64_t v134 = v89;
    uint64_t v135 = v86;
    char v136 = v82 & 1;
    if (qword_101098648 != -1) {
      swift_once();
    }
    sub_100063814(&qword_10109DEA0);
    sub_1001EFF88();
    uint64_t v91 = v111;
    View.minimumLineHeight(_:)();
    sub_1000D1500(v72, v74, v90);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v92 = static Alignment.leading.getter();
    uint64_t v93 = v117;
    double v95 = sub_100624D30(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v117, 0.0, 1, 0.0, 1, v92, v94);
    (*(void (**)(char *, uint64_t, double))(v114 + 8))(v91, v115, v95);
    AccessibilityIdentifier.trackListCellArtist.unsafeMutableAddressor();
    sub_100621384();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v96 = (uint64_t)v113;
    View.accessibilityIdentifier(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000637B8(v93, (uint64_t *)&unk_1010B4440);
    uint64_t v97 = v112;
    sub_10003CABC(v96, v112, &qword_1010B34E8);
    uint64_t v87 = v126;
    sub_10003CABC(v97, v126, &qword_1010B34E8);
    uint64_t v46 = 0;
    uint64_t v50 = v129;
  }
  else
  {
    uint64_t v87 = v126;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v122 + 56))(v87, v46, 1, v123);
  uint64_t v98 = v121;
  sub_10006CAB8(v50, v121, &qword_1010B3510);
  uint64_t v99 = v124;
  sub_10006CAB8(v87, v124, &qword_1010B34F0);
  uint64_t v100 = v125;
  sub_10006CAB8(v98, v125, &qword_1010B3510);
  uint64_t v101 = sub_100063814(&qword_1010B3540);
  sub_10006CAB8(v99, v100 + *(int *)(v101 + 48), &qword_1010B34F0);
  sub_1000637B8(v87, &qword_1010B34F0);
  sub_1000637B8(v50, &qword_1010B3510);
  sub_1000637B8(v99, &qword_1010B34F0);
  return sub_1000637B8(v98, &qword_1010B3510);
}

uint64_t sub_10060A454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v91 = a4;
  uint64_t v7 = type metadata accessor for Text.Suffix();
  uint64_t v78 = *(void *)(v7 - 8);
  uint64_t v79 = v7;
  __chkstk_darwin(v7);
  char v76 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814((uint64_t *)&unk_1010B5430);
  uint64_t v82 = *(void *)(v9 - 8);
  uint64_t v83 = v9;
  __chkstk_darwin(v9);
  uint64_t v80 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_100063814(&qword_10109DE38);
  __chkstk_darwin(v90);
  uint64_t v77 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v81 = (uint64_t)&v76 - v13;
  uint64_t v88 = sub_100063814(&qword_1010B3550);
  __chkstk_darwin(v88);
  uint64_t v89 = (uint64_t *)((char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for DynamicTypeSize();
  uint64_t v85 = *(void *)(v15 - 8);
  uint64_t v86 = v15;
  __chkstk_darwin(v15);
  uint64_t v84 = (uint64_t)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Tracklist.VerticalTextStack();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v76 - v19;
  uint64_t v21 = sub_100063814(&qword_10109F0F0);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (void (*)(uint64_t, void *))a3[3];
  swift_unknownObjectRetain();
  uint64_t v87 = a2;
  v24(a2, a3);
  swift_unknownObjectRelease();
  uint64_t v25 = type metadata accessor for ArtworkImage.Info(0);
  int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v23, 1, v25);
  sub_1000637B8((uint64_t)v23, &qword_10109F0F0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a1, v17);
  if (v26 == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
LABEL_4:
    uint64_t v29 = (uint64_t (*)(uint64_t, void *))a3[6];
    swift_unknownObjectRetain();
    uint64_t v30 = v87;
    uint64_t v31 = v29(v87, a3);
    uint64_t v33 = v32;
    swift_unknownObjectRelease();
    uint64_t v92 = v31;
    uint64_t v93 = v33;
    sub_10005D180();
    uint64_t v34 = Text.init<A>(_:)();
    uint64_t v36 = v35;
    uint64_t v86 = v37;
    LODWORD(v85) = v38 & 1;
    uint64_t v39 = (uint64_t (*)(uint64_t, void *))a3[10];
    swift_unknownObjectRetain();
    char v40 = v39(v30, a3);
    swift_unknownObjectRelease();
    uint64_t v41 = TextBadge.view.getter(v40);
    uint64_t v43 = v42;
    char v45 = v44 & 1;
    uint64_t v46 = static Text.+ infix(_:_:)();
    uint64_t v48 = v47;
    LOBYTE(v39) = v49;
    uint64_t v51 = v50;
    sub_1000D1500(v41, v43, v45);
    swift_bridgeObjectRelease();
    sub_1000D1500(v34, v36, v85);
    swift_bridgeObjectRelease();
    long long v52 = v89;
    *uint64_t v89 = v46;
    v52[1] = v48;
    *((unsigned char *)v52 + 16) = v39 & 1;
    v52[3] = v51;
    swift_storeEnumTagMultiPayload();
    sub_1001EFE0C();
    return _ConditionalContent<>.init(storage:)();
  }
  uint64_t v27 = v84;
  sub_1004DA4FC(v84);
  char v28 = DynamicTypeSize.isAccessibilitySize.getter();
  (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v27, v86);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (v28) {
    goto LABEL_4;
  }
  uint64_t v54 = (uint64_t (*)(uint64_t, void *))a3[6];
  swift_unknownObjectRetain();
  uint64_t v55 = v87;
  uint64_t v56 = v54(v87, a3);
  uint64_t v58 = v57;
  swift_unknownObjectRelease();
  uint64_t v92 = v56;
  uint64_t v93 = v58;
  sub_10005D180();
  uint64_t v92 = Text.init<A>(_:)();
  uint64_t v93 = v59;
  char v94 = v60 & 1;
  uint64_t v95 = v61;
  uint64_t v62 = (uint64_t (*)(uint64_t, void *))a3[10];
  swift_unknownObjectRetain();
  LOBYTE(v58) = v62(v55, a3);
  swift_unknownObjectRelease();
  uint64_t v63 = TextBadge.view.getter(v58);
  uint64_t v65 = v64;
  char v67 = v66 & 1;
  uint64_t v68 = v76;
  static Text.Suffix.alwaysVisible(_:)();
  sub_1000D1500(v63, v65, v67);
  swift_bridgeObjectRelease();
  uint64_t v69 = v80;
  View.textSuffix(_:)();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v68, v79);
  sub_1000D1500(v92, v93, v94);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v72 = v82;
  uint64_t v71 = v83;
  uint64_t v73 = (uint64_t)v77;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v77, v69, v83);
  uint64_t v74 = v73 + *(int *)(v90 + 36);
  *(void *)uint64_t v74 = KeyPath;
  *(void *)(v74 + 8) = 1;
  *(unsigned char *)(v74 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v72 + 8))(v69, v71);
  uint64_t v75 = v81;
  sub_10003CABC(v73, v81, &qword_10109DE38);
  sub_10006CAB8(v75, (uint64_t)v89, &qword_10109DE38);
  swift_storeEnumTagMultiPayload();
  sub_1001EFE0C();
  _ConditionalContent<>.init(storage:)();
  return sub_1000637B8(v75, &qword_10109DE38);
}

uint64_t sub_10060AC50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v60 = a2;
  uint64_t v5 = sub_100063814(&qword_10109F0F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v56 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010B3810);
  __chkstk_darwin(v7 - 8);
  uint64_t v59 = (uint64_t *)((char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v58 = (uint64_t)&v54 - v10;
  uint64_t v11 = sub_100063814(&qword_1010B34F8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100063814(&qword_1010B3818);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100063814((uint64_t *)&unk_1010B4480);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100063814(&qword_1010B3820);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100063814(&qword_1010B3828);
  __chkstk_darwin(v24 - 8);
  uint64_t v55 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(a1 + 16);
  uint64_t v27 = *(void **)(a1 + 24);
  uint64_t v54 = v26;
  sub_10060B23C(v26, v27, (uint64_t)v13);
  int v61 = static HierarchicalShapeStyle.primary.getter();
  uint64_t v57 = v3;
  LOBYTE(v3) = *(unsigned char *)(v3 + 16);
  uint64_t v28 = sub_100621118();
  View.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v61, v3, v11, (uint64_t)&type metadata for HierarchicalShapeStyle, v28);
  sub_1000637B8((uint64_t)v13, &qword_1010B34F8);
  uint64_t v29 = static Alignment.leading.getter();
  double v31 = sub_100624D8C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v20, 0.0, 1, 0.0, 1, v29, v30);
  (*(void (**)(char *, uint64_t, double))(v15 + 8))(v17, v14, v31);
  char v32 = static Edge.Set.trailing.getter();
  if (qword_101098638 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  sub_10006CAB8((uint64_t)v20, (uint64_t)v23, (uint64_t *)&unk_1010B4480);
  uint64_t v41 = &v23[*(int *)(v21 + 36)];
  char *v41 = v32;
  *((void *)v41 + 1) = v34;
  *((void *)v41 + 2) = v36;
  *((void *)v41 + 3) = v38;
  *((void *)v41 + 4) = v40;
  v41[40] = 0;
  sub_1000637B8((uint64_t)v20, (uint64_t *)&unk_1010B4480);
  AccessibilityIdentifier.trackListCellTitle.unsafeMutableAddressor();
  sub_10062243C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v42 = (uint64_t)v55;
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000637B8((uint64_t)v23, &qword_1010B3820);
  uint64_t v43 = v57;
  char v44 = (void (*)(uint64_t, void *))v27[3];
  swift_unknownObjectRetain();
  uint64_t v45 = (uint64_t)v56;
  uint64_t v46 = v54;
  v44(v54, v27);
  swift_unknownObjectRelease();
  uint64_t v47 = type metadata accessor for ArtworkImage.Info(0);
  int v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v45, 1, v47);
  sub_1000637B8(v45, &qword_10109F0F0);
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if (byte_1010B2D10 == 1 || v48 != 1) {
    uint64_t v49 = static VerticalAlignment.center.getter();
  }
  else {
    uint64_t v49 = static VerticalAlignment.firstTextLineCenter.getter();
  }
  uint64_t v50 = (uint64_t)v59;
  uint64_t *v59 = v49;
  *(void *)(v50 + 8) = 0;
  *(unsigned char *)(v50 + 16) = 0;
  uint64_t v51 = sub_100063814(&qword_1010B3840);
  sub_10060B840(v43, v42, v46, (uint64_t)v27, v50 + *(int *)(v51 + 44));
  uint64_t v52 = v58;
  sub_10003CABC(v50, v58, &qword_1010B3810);
  sub_10003CABC(v52, v60, &qword_1010B3810);
  return sub_1000637B8(v42, &qword_1010B3828);
}

uint64_t sub_10060B23C@<X0>(uint64_t a1@<X1>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v69 = a3;
  uint64_t v5 = type metadata accessor for Text.Suffix();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814((uint64_t *)&unk_1010B5430);
  uint64_t v64 = *(void *)(v8 - 8);
  uint64_t v65 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100063814(&qword_10109DE38);
  __chkstk_darwin(v68);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v63 = (uint64_t)&v61 - v14;
  uint64_t v66 = sub_100063814(&qword_1010B3550);
  __chkstk_darwin(v66);
  char v67 = (uint64_t *)((char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_100063814(&qword_10109F0F0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Tracklist.HorizontalTextStack();
  uint64_t v19 = (void (*)(uint64_t, void *))a2[3];
  swift_unknownObjectRetain();
  v19(a1, a2);
  swift_unknownObjectRelease();
  uint64_t v20 = type metadata accessor for ArtworkImage.Info(0);
  LODWORD(v19) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v18, 1, v20);
  sub_1000637B8((uint64_t)v18, &qword_10109F0F0);
  uint64_t v21 = (uint64_t (*)(uint64_t, void *))a2[6];
  swift_unknownObjectRetain();
  uint64_t v22 = v21(a1, a2);
  uint64_t v24 = v23;
  swift_unknownObjectRelease();
  uint64_t v70 = v22;
  uint64_t v71 = v24;
  sub_10005D180();
  if (v19 == 1)
  {
    uint64_t v25 = Text.init<A>(_:)();
    uint64_t v27 = v26;
    uint64_t v65 = v28;
    LODWORD(v64) = v29 & 1;
    uint64_t v30 = (uint64_t (*)(uint64_t, void *))a2[10];
    swift_unknownObjectRetain();
    char v31 = v30(a1, a2);
    swift_unknownObjectRelease();
    uint64_t v32 = TextBadge.view.getter(v31);
    uint64_t v34 = v33;
    char v36 = v35 & 1;
    uint64_t v37 = static Text.+ infix(_:_:)();
    uint64_t v39 = v38;
    char v41 = v40;
    uint64_t v43 = v42;
    sub_1000D1500(v32, v34, v36);
    swift_bridgeObjectRelease();
    sub_1000D1500(v25, v27, v64);
    swift_bridgeObjectRelease();
    char v44 = v67;
    *char v67 = v37;
    v44[1] = v39;
    *((unsigned char *)v44 + 16) = v41 & 1;
    v44[3] = v43;
    swift_storeEnumTagMultiPayload();
    sub_1001EFE0C();
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v70 = Text.init<A>(_:)();
    uint64_t v71 = v46;
    char v72 = v47 & 1;
    uint64_t v73 = v48;
    uint64_t v49 = (uint64_t (*)(uint64_t, void *))a2[10];
    swift_unknownObjectRetain();
    char v50 = v49(a1, a2);
    swift_unknownObjectRelease();
    uint64_t v51 = TextBadge.view.getter(v50);
    uint64_t v53 = v52;
    char v55 = v54 & 1;
    static Text.Suffix.alwaysVisible(_:)();
    sub_1000D1500(v51, v53, v55);
    swift_bridgeObjectRelease();
    View.textSuffix(_:)();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v7, v62);
    sub_1000D1500(v70, v71, v72);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v58 = v64;
    uint64_t v57 = v65;
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v12, v10, v65);
    uint64_t v59 = &v12[*(int *)(v68 + 36)];
    *(void *)uint64_t v59 = KeyPath;
    *((void *)v59 + 1) = 1;
    v59[16] = 0;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v10, v57);
    uint64_t v60 = v63;
    sub_10003CABC((uint64_t)v12, v63, &qword_10109DE38);
    sub_10006CAB8(v60, (uint64_t)v67, &qword_10109DE38);
    swift_storeEnumTagMultiPayload();
    sub_1001EFE0C();
    _ConditionalContent<>.init(storage:)();
    return sub_1000637B8(v60, &qword_10109DE38);
  }
}

uint64_t sub_10060B840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v156 = a2;
  uint64_t v159 = a5;
  uint64_t v152 = sub_100063814(&qword_1010B3848);
  __chkstk_darwin(v152);
  uint64_t v140 = (uint64_t)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814((uint64_t *)&unk_1010B4460);
  __chkstk_darwin(v9 - 8);
  uint64_t v138 = (uint64_t)&v126 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v139 = (uint64_t)&v126 - v12;
  uint64_t v149 = sub_100063814(&qword_1010B3850);
  __chkstk_darwin(v149);
  uint64_t v151 = (uint64_t)&v126 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_100063814(&qword_1010B3858);
  __chkstk_darwin(v150);
  uint64_t v134 = (uint64_t)&v126 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100063814(&qword_1010B3860);
  __chkstk_darwin(v15 - 8);
  uint64_t v132 = (uint64_t)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v133 = (char *)&v126 - v18;
  uint64_t v127 = sub_100063814(&qword_1010B3868);
  __chkstk_darwin(v127);
  uint64_t v130 = (uint64_t)&v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_100063814(&qword_1010B3870);
  __chkstk_darwin(v129);
  uint64_t v131 = (uint64_t)&v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v128 = (uint64_t)&v126 - v22;
  __chkstk_darwin(v23);
  uint64_t v143 = (uint64_t)&v126 - v24;
  uint64_t v146 = sub_100063814(&qword_1010B3878);
  __chkstk_darwin(v146);
  uint64_t v137 = (uint64_t)&v126 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v147 = (uint64_t)&v126 - v27;
  __chkstk_darwin(v28);
  uint64_t v142 = (uint64_t)&v126 - v29;
  uint64_t v158 = sub_100063814(&qword_1010B3880);
  __chkstk_darwin(v158);
  char v148 = (char *)&v126 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100063814(&qword_10109F0F0);
  __chkstk_darwin(v31 - 8);
  uint64_t KeyPath = (char *)&v126 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100063814(&qword_10109DE28);
  __chkstk_darwin(v33 - 8);
  uint64_t v161 = (char *)&v126 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_100063814(&qword_1010B3888);
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v126 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_100063814((uint64_t *)&unk_1010B4470);
  __chkstk_darwin(v157);
  uint64_t v39 = (char *)&v126 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = type metadata accessor for Tracklist.HorizontalTextStack();
  uint64_t v160 = a1;
  char v40 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 56);
  swift_unknownObjectRetain();
  uint64_t v154 = a3;
  uint64_t v155 = a4;
  uint64_t v41 = v40(a3, a4);
  uint64_t v43 = v42;
  swift_unknownObjectRelease();
  if (v43)
  {
    uint64_t v136 = v35;
    uint64_t v141 = v37;
    *(void *)&long long v184 = v41;
    *((void *)&v184 + 1) = v43;
    unint64_t v126 = sub_10005D180();
    uint64_t v44 = Text.init<A>(_:)();
    uint64_t v46 = v45;
    char v48 = v47 & 1;
    LODWORD(v184) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v49 = Text.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v184, *(unsigned char *)(v160 + 16));
    uint64_t v51 = v50;
    uint64_t v153 = v52;
    int v135 = v53 & 1;
    sub_1000D1500(v44, v46, v48);
    swift_bridgeObjectRelease();
    uint64_t v54 = v155;
    char v55 = *(void (**)(uint64_t, uint64_t))(v155 + 24);
    swift_unknownObjectRetain();
    uint64_t v56 = (uint64_t)KeyPath;
    v55(v154, v54);
    swift_unknownObjectRelease();
    uint64_t v57 = type metadata accessor for ArtworkImage.Info(0);
    int v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 48))(v56, 1, v57);
    LOBYTE(v44) = v58 == 1;
    BOOL v59 = v58 != 1;
    sub_1000637B8(v56, &qword_10109F0F0);
    uint64_t KeyPath = (char *)swift_getKeyPath();
    *(void *)&long long v184 = v49;
    *((void *)&v184 + 1) = v51;
    LOBYTE(v56) = v135;
    LOBYTE(v185) = v135;
    *((void *)&v185 + 1) = v153;
    *(void *)&long long v186 = KeyPath;
    *((void *)&v186 + 1) = v59;
    LOBYTE(v187) = v44;
    AccessibilityIdentifier.trackListCellArtist.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100063814(&qword_10109DEA0);
    sub_1001EFF88();
    View.accessibilityIdentifier(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000D1500(v49, v51, v56);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v60 = v160;
    double v61 = *(double *)(v160 + 56);
    if (qword_1010985B0 != -1) {
      swift_once();
    }
    uint64_t v62 = (uint64_t)v141;
    uint64_t v63 = v156;
    if (*(double *)&qword_101129CE8 <= v61
      && (uint64_t v64 = v155,
          uint64_t v65 = *(uint64_t (**)(uint64_t, uint64_t))(v155 + 64),
          swift_unknownObjectRetain(),
          uint64_t v66 = v65(v154, v64),
          uint64_t v68 = v67,
          swift_unknownObjectRelease(),
          v68))
    {
      sub_10060C980(1, v145);
      static Alignment.leading.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v69 = v142;
      sub_10006CAB8(v63, v142, &qword_1010B3828);
      uint64_t v70 = (_OWORD *)(v69 + *(int *)(v146 + 36));
      long long v71 = v196;
      *uint64_t v70 = v195;
      v70[1] = v71;
      v70[2] = v197;
      char v72 = static Edge.Set.trailing.getter();
      uint64_t v73 = v161;
      if (qword_101098638 != -1) {
        swift_once();
      }
      EdgeInsets.init(_all:)();
      uint64_t v75 = v74;
      uint64_t v77 = v76;
      uint64_t v79 = v78;
      uint64_t v81 = v80;
      uint64_t v82 = (uint64_t)v73;
      uint64_t v83 = v130;
      sub_10006CAB8(v82, v130, &qword_10109DE28);
      uint64_t v84 = v83 + *(int *)(v127 + 36);
      *(unsigned char *)uint64_t v84 = v72;
      *(void *)(v84 + 8) = v75;
      *(void *)(v84 + 16) = v77;
      *(void *)(v84 + 24) = v79;
      *(void *)(v84 + 32) = v81;
      *(unsigned char *)(v84 + 40) = 0;
      if (qword_1010985A0 != -1) {
        swift_once();
      }
      static Alignment.leading.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v85 = v128;
      sub_10006CAB8(v83, v128, &qword_1010B3868);
      uint64_t v86 = (_OWORD *)(v85 + *(int *)(v129 + 36));
      long long v87 = v199;
      _OWORD *v86 = v198;
      v86[1] = v87;
      v86[2] = v200;
      sub_1000637B8(v83, &qword_1010B3868);
      sub_10003CABC(v85, v143, &qword_1010B3870);
      *(void *)&long long v184 = v66;
      *((void *)&v184 + 1) = v68;
      uint64_t v88 = Text.init<A>(_:)();
      uint64_t v90 = v89;
      char v92 = v91 & 1;
      LODWORD(v184) = static HierarchicalShapeStyle.secondary.getter();
      uint64_t v93 = Text.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v184, *(unsigned char *)(v60 + 16));
      uint64_t v95 = v94;
      uint64_t v97 = v96;
      char v99 = v98 & 1;
      sub_1000D1500(v88, v90, v92);
      swift_bridgeObjectRelease();
      uint64_t v100 = swift_getKeyPath();
      uint64_t v201 = v93;
      uint64_t v202 = v95;
      char v203 = v99;
      uint64_t v204 = v97;
      uint64_t v205 = v100;
      uint64_t v206 = 1;
      char v207 = 0;
      static Alignment.leading.getter();
      sub_100625040(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v173, 0.0, 1, 0.0, 1);
      sub_1000D1500(v93, v95, v99);
      swift_release();
      swift_bridgeObjectRelease();
      long long v192 = v181;
      long long v193 = v182;
      long long v188 = v177;
      long long v189 = v178;
      long long v190 = v179;
      long long v191 = v180;
      long long v184 = v173;
      long long v185 = v174;
      long long v186 = v175;
      long long v187 = v176;
      long long v170 = v181;
      long long v171 = v182;
      long long v166 = v177;
      long long v167 = v178;
      long long v168 = v179;
      long long v169 = v180;
      long long v162 = v173;
      long long v163 = v174;
      uint64_t v194 = v183;
      uint64_t v172 = v183;
      long long v164 = v175;
      long long v165 = v176;
      AccessibilityIdentifier.trackListCellAlbum.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100063814(&qword_1010B38C0);
      sub_10062147C(&qword_1010B38C8, &qword_1010B38C0, (void (*)(void))sub_1001EFF88);
      uint64_t v101 = (uint64_t)v133;
      View.accessibilityIdentifier(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100622718((uint64_t)&v184);
      uint64_t v102 = v147;
      sub_10006CAB8(v142, v147, &qword_1010B3878);
      uint64_t v103 = v131;
      sub_10006CAB8(v143, v131, &qword_1010B3870);
      uint64_t v104 = v132;
      sub_10006CAB8(v101, v132, &qword_1010B3860);
      uint64_t v105 = v134;
      sub_10006CAB8(v102, v134, &qword_1010B3878);
      uint64_t v106 = sub_100063814(&qword_1010B38D0);
      sub_10006CAB8(v103, v105 + *(int *)(v106 + 48), &qword_1010B3870);
      sub_10006CAB8(v104, v105 + *(int *)(v106 + 64), &qword_1010B3860);
      sub_1000637B8(v104, &qword_1010B3860);
      sub_1000637B8(v103, &qword_1010B3870);
      sub_1000637B8(v102, &qword_1010B3878);
      sub_10006CAB8(v105, v151, &qword_1010B3858);
      swift_storeEnumTagMultiPayload();
      sub_100063858(&qword_1010B3898, &qword_1010B3858);
      sub_100063858(&qword_1010B38A0, &qword_1010B3848);
      uint64_t v107 = (uint64_t)v148;
      _ConditionalContent<>.init(storage:)();
      sub_1000637B8(v105, &qword_1010B3858);
      sub_1000637B8(v101, &qword_1010B3860);
      sub_1000637B8(v143, &qword_1010B3870);
      sub_1000637B8(v142, &qword_1010B3878);
      uint64_t v62 = (uint64_t)v141;
      uint64_t v108 = v161;
    }
    else
    {
      sub_10060C980(0, v145);
      static Alignment.leading.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v109 = v147;
      sub_10006CAB8(v63, v147, &qword_1010B3828);
      uint64_t v110 = (_OWORD *)(v109 + *(int *)(v146 + 36));
      long long v111 = v185;
      *uint64_t v110 = v184;
      v110[1] = v111;
      v110[2] = v186;
      uint64_t v112 = static Alignment.leading.getter();
      uint64_t v113 = v139;
      uint64_t v114 = v161;
      sub_100625228(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v139, 0.0, 1, 0.0, 1, v112, v115);
      uint64_t v116 = v137;
      sub_10006CAB8(v109, v137, &qword_1010B3878);
      uint64_t v117 = v138;
      sub_10006CAB8(v113, v138, (uint64_t *)&unk_1010B4460);
      uint64_t v118 = v140;
      sub_10006CAB8(v116, v140, &qword_1010B3878);
      uint64_t v119 = sub_100063814(&qword_1010B38B8);
      sub_10006CAB8(v117, v118 + *(int *)(v119 + 48), (uint64_t *)&unk_1010B4460);
      sub_1000637B8(v117, (uint64_t *)&unk_1010B4460);
      sub_1000637B8(v116, &qword_1010B3878);
      sub_10006CAB8(v118, v151, &qword_1010B3848);
      swift_storeEnumTagMultiPayload();
      sub_100063858(&qword_1010B3898, &qword_1010B3858);
      sub_100063858(&qword_1010B38A0, &qword_1010B3848);
      uint64_t v107 = (uint64_t)v148;
      _ConditionalContent<>.init(storage:)();
      sub_1000637B8(v118, &qword_1010B3848);
      sub_1000637B8(v113, (uint64_t *)&unk_1010B4460);
      uint64_t v120 = v109;
      uint64_t v108 = v114;
      sub_1000637B8(v120, &qword_1010B3878);
    }
    sub_10006CAB8(v107, v62, &qword_1010B3880);
    swift_storeEnumTagMultiPayload();
    sub_1006225AC();
    sub_10062147C(&qword_1010B38A8, (uint64_t *)&unk_1010B4470, (void (*)(void))sub_10062266C);
    _ConditionalContent<>.init(storage:)();
    sub_1000637B8(v107, &qword_1010B3880);
    uint64_t v121 = &qword_10109DE28;
    uint64_t v122 = (uint64_t)v108;
  }
  else
  {
    uint64_t v123 = static Alignment.leading.getter();
    sub_100624FE4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v39, 0.0, 1, 0.0, 1, v123, v124);
    sub_10006CAB8((uint64_t)v39, (uint64_t)v37, (uint64_t *)&unk_1010B4470);
    swift_storeEnumTagMultiPayload();
    sub_1006225AC();
    sub_10062147C(&qword_1010B38A8, (uint64_t *)&unk_1010B4470, (void (*)(void))sub_10062266C);
    _ConditionalContent<>.init(storage:)();
    uint64_t v122 = (uint64_t)v39;
    uint64_t v121 = (uint64_t *)&unk_1010B4470;
  }
  return sub_1000637B8(v122, v121);
}

double sub_10060C980(int a1, uint64_t a2)
{
  int v31 = a1;
  uint64_t v4 = sub_100063814(&qword_10109F0F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v9 = &v30[-v8];
  uint64_t v10 = type metadata accessor for DynamicTypeSize();
  uint64_t v32 = *(void *)(v10 - 8);
  uint64_t v33 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v13 = *(double *)(v2 + 56);
  sub_1004DA4FC((uint64_t)v12);
  uint64_t v16 = a2 + 16;
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v14 = *(void *)(v16 + 8);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v14 + 24);
  swift_unknownObjectRetain();
  v17(v15, v14);
  swift_unknownObjectRelease();
  uint64_t v18 = type metadata accessor for ArtworkImage.Info(0);
  uint64_t v19 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  if (v19(v9, 1, v18) == 1)
  {
    sub_1000637B8((uint64_t)v9, &qword_10109F0F0);
    double v20 = 1.0;
  }
  else
  {
    uint64_t v21 = (double *)&v9[*(int *)(v18 + 24)];
    double v20 = *v21;
    int v22 = *((unsigned __int8 *)v21 + 8);
    sub_100616E84((uint64_t)v9, type metadata accessor for ArtworkImage.Info);
    if (v22) {
      double v20 = 1.0;
    }
  }
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v14 + 96);
  swift_unknownObjectRetain();
  v23(v15, v14);
  swift_unknownObjectRelease();
  unsigned int v24 = v19(v6, 1, v18);
  sub_1000637B8((uint64_t)v6, &qword_10109F0F0);
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if ((byte_1010B2D10 & 1) == 0)
  {
    char v25 = v24 != 1;
    double v26 = 0.45;
    if (v31) {
      double v26 = 0.3;
    }
    double v27 = v26 * v13;
    double v28 = sub_1006211D0(v25, v20);
    double v13 = v27 - (v28 - sub_1006211D0(v25, 1.0));
  }
  (*(void (**)(unsigned char *, uint64_t))(v32 + 8))(v12, v33);
  return v13;
}

uint64_t sub_10060CCB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v253 = a2;
  uint64_t v247 = _s17ContextMenuButtonVMa(0);
  __chkstk_darwin(v247);
  v259 = (uint64_t *)((char *)&v201 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v250 = sub_100063814(&qword_1010B3558);
  __chkstk_darwin(v250);
  uint64_t v252 = (uint64_t)&v201 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v249 = (uint64_t)&v201 - v7;
  __chkstk_darwin(v8);
  uint64_t v251 = (uint64_t)&v201 - v9;
  uint64_t v10 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy();
  uint64_t v211 = *(void *)(v10 - 8);
  uint64_t v212 = v10;
  __chkstk_darwin(v10);
  v209 = (char *)&v201 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy();
  uint64_t v208 = *(void *)(v210 - 8);
  __chkstk_darwin(v210);
  uint64_t v204 = (char *)&v201 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth();
  uint64_t v203 = *(void *)(v205 - 8);
  __chkstk_darwin(v205);
  uint64_t v201 = (char *)&v201 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Duration.UnitsFormatStyle();
  uint64_t v206 = *(void *)(v14 - 8);
  uint64_t v207 = v14;
  __chkstk_darwin(v14);
  uint64_t v202 = (char *)&v201 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = sub_100063814(&qword_1010AF430);
  __chkstk_darwin(v213);
  v214 = (char *)&v201 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100063814(&qword_1010B3560);
  __chkstk_darwin(v17 - 8);
  v217 = (char *)&v201 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100063814(&qword_1010B3568);
  uint64_t v244 = *(void *)(v19 - 8);
  uint64_t v245 = v19;
  __chkstk_darwin(v19);
  uint64_t v216 = (uint64_t)&v201 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v215 = (uint64_t)&v201 - v22;
  uint64_t v23 = sub_100063814(&qword_1010B5280);
  __chkstk_darwin(v23 - 8);
  v242 = (char *)&v201 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100063814(&qword_1010B3570);
  __chkstk_darwin(v25 - 8);
  uint64_t v248 = (uint64_t)&v201 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v258 = (uint64_t)&v201 - v28;
  uint64_t v241 = _s27DownloadStatusIndicatorViewVMa(0);
  __chkstk_darwin(v241);
  v231 = (char *)&v201 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v238 = sub_100063814(&qword_1010AF0F8);
  __chkstk_darwin(v238);
  uint64_t v240 = (uint64_t)&v201 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for MusicPlayer.PlayabilityStatus();
  uint64_t v235 = *(void *)(v31 - 8);
  uint64_t v236 = v31;
  __chkstk_darwin(v31);
  v234 = (char *)&v201 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v230 = type metadata accessor for MusicPlayer.PlayabilityStatus.UnplayableReason();
  uint64_t v237 = *(void *)(v230 - 8);
  __chkstk_darwin(v230);
  v228 = (char *)&v201 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v229 = (char *)&v201 - v35;
  uint64_t v36 = sub_100063814(&qword_1010AF150);
  __chkstk_darwin(v36 - 8);
  uint64_t v246 = (uint64_t)&v201 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v257 = (uint64_t)&v201 - v39;
  uint64_t v40 = type metadata accessor for DynamicTypeSize();
  unint64_t v41 = *(void *)(v40 - 8);
  uint64_t v255 = v40;
  unint64_t v256 = v41;
  __chkstk_darwin(v40);
  v239 = (char *)&v201 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v220 = (uint64_t)&v201 - v44;
  uint64_t v219 = _s6ButtonVMa(0);
  __chkstk_darwin(v219);
  v223 = (char *)&v201 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v221 = sub_100063814(&qword_1010B3578);
  __chkstk_darwin(v221);
  uint64_t v222 = (uint64_t)&v201 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v224 = sub_100063814(&qword_1010B3580);
  __chkstk_darwin(v224);
  uint64_t v227 = (uint64_t)&v201 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100063814(&qword_1010B3588);
  uint64_t v232 = *(void *)(v48 - 8);
  uint64_t v233 = v48;
  __chkstk_darwin(v48);
  uint64_t v226 = (uint64_t)&v201 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  uint64_t v225 = (uint64_t)&v201 - v51;
  uint64_t v52 = sub_100063814((uint64_t *)&unk_10109F150);
  __chkstk_darwin(v52 - 8);
  uint64_t v54 = (char *)&v201 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for Tracklist.ReactionsConfiguration(0);
  uint64_t v56 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  v218 = (uint64_t *)((char *)&v201 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v58 = sub_100063814(&qword_1010B3590);
  __chkstk_darwin(v58 - 8);
  uint64_t v243 = (uint64_t)&v201 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  uint64_t v262 = v2;
  uint64_t v263 = (uint64_t)&v201 - v61;
  uint64_t v62 = *(void **)(a1 + 32);
  uint64_t v63 = (void (*)(uint64_t, void *))v62[14];
  uint64_t v64 = a1;
  uint64_t v65 = *(void *)(a1 + 16);
  swift_unknownObjectRetain();
  uint64_t v260 = v65;
  v261 = v62;
  v63(v65, v62);
  swift_unknownObjectRelease();
  int v66 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55);
  uint64_t v254 = v64;
  if (v66 == 1)
  {
    sub_1000637B8((uint64_t)v54, (uint64_t *)&unk_10109F150);
    uint64_t v67 = 1;
    uint64_t v69 = v262;
    uint64_t v68 = v263;
    uint64_t v71 = v236;
    uint64_t v70 = v237;
    uint64_t v72 = v233;
    goto LABEL_13;
  }
  uint64_t v73 = v218;
  sub_100616C18((uint64_t)v54, (uint64_t)v218, type metadata accessor for Tracklist.ReactionsConfiguration);
  uint64_t v74 = *v73;
  uint64_t v75 = (uint64_t)v73 + *(int *)(v55 + 20);
  uint64_t v76 = v223;
  sub_100616C80(v75, (uint64_t)&v223[*(int *)(v219 + 20)], _s7ContextVMa);
  void *v76 = v74;
  uint64_t v69 = v262;
  swift_retain();
  uint64_t v77 = v220;
  sub_1004DA4FC(v220);
  static Reactions.StackView.Specs.width(for:)(v77);
  (*(void (**)(uint64_t, uint64_t))(v256 + 8))(v77, v255);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v78 = v222;
  sub_100616C80((uint64_t)v76, v222, _s6ButtonVMa);
  uint64_t v79 = (_OWORD *)(v78 + *(int *)(v221 + 36));
  long long v80 = v294[4];
  *uint64_t v79 = v294[3];
  v79[1] = v80;
  v79[2] = v294[5];
  sub_100616E84((uint64_t)v76, _s6ButtonVMa);
  uint64_t v81 = v75 + *(int *)(_s7ContextVMa(0) + 20);
  int v82 = *(unsigned __int8 *)(v81 + 8);
  uint64_t v68 = v263;
  uint64_t v71 = v236;
  uint64_t v83 = v78;
  if (v82 == 255) {
    goto LABEL_9;
  }
  unint64_t v84 = *(void *)v81;
  if (v82)
  {
    if (v84 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v200 = _CocoaArrayWrapper.endIndex.getter();
      sub_100177670(v84, v82);
      double v85 = 1.0;
      if (v200) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
    double v85 = 1.0;
    if (!*(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
LABEL_9:
    }
      double v85 = 0.0;
  }
  else
  {
    double v85 = 1.0;
    if (!*(void *)(v84 + 16)) {
      goto LABEL_9;
    }
  }
LABEL_10:
  uint64_t v86 = v227;
  sub_10006CAB8(v83, v227, &qword_1010B3578);
  *(double *)(v86 + *(int *)(v224 + 36)) = v85;
  sub_1000637B8(v83, &qword_1010B3578);
  char v87 = static Edge.Set.trailing.getter();
  uint64_t v72 = v233;
  if (qword_101098678 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v89 = v88;
  uint64_t v91 = v90;
  uint64_t v93 = v92;
  uint64_t v95 = v94;
  uint64_t v96 = v226;
  sub_10006CAB8(v86, v226, &qword_1010B3580);
  uint64_t v97 = v96 + *(int *)(v72 + 36);
  *(unsigned char *)uint64_t v97 = v87;
  *(void *)(v97 + 8) = v89;
  *(void *)(v97 + 16) = v91;
  *(void *)(v97 + 24) = v93;
  *(void *)(v97 + 32) = v95;
  *(unsigned char *)(v97 + 40) = 0;
  sub_1000637B8(v86, &qword_1010B3580);
  sub_100616E84((uint64_t)v73, type metadata accessor for Tracklist.ReactionsConfiguration);
  uint64_t v98 = v225;
  sub_10003CABC(v96, v225, &qword_1010B3588);
  sub_10003CABC(v98, v68, &qword_1010B3588);
  uint64_t v67 = 0;
  uint64_t v70 = v237;
LABEL_13:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v232 + 56))(v68, v67, 1, v72);
  char v99 = *(void (**)(uint64_t))(**(void **)(v69 + 40) + 256);
  uint64_t v100 = swift_retain();
  uint64_t v101 = v234;
  v99(v100);
  swift_release();
  uint64_t v102 = v235;
  if ((*(unsigned int (**)(char *, uint64_t))(v235 + 88))(v101, v71) == enum case for MusicPlayer.PlayabilityStatus.unplayable(_:))
  {
    (*(void (**)(char *, uint64_t))(v102 + 96))(v101, v71);
    uint64_t v104 = v229;
    uint64_t v103 = v230;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v229, v101, v230);
    uint64_t v105 = v228;
    (*(void (**)(char *, void, uint64_t))(v70 + 104))(v228, enum case for MusicPlayer.PlayabilityStatus.UnplayableReason.userUploadRequired(_:), v103);
    char v106 = static MusicPlayer.PlayabilityStatus.UnplayableReason.== infix(_:_:)();
    uint64_t v107 = *(void (**)(char *, uint64_t))(v70 + 8);
    v107(v105, v103);
    if (v106)
    {
      swift_storeEnumTagMultiPayload();
      sub_100585178();
      sub_100616A1C(&qword_1010AF168, (void (*)(uint64_t))_s27DownloadStatusIndicatorViewVMa);
      _ConditionalContent<>.init(storage:)();
      v107(v104, v103);
      uint64_t v108 = (uint64_t)v242;
      uint64_t v109 = (uint64_t)v239;
      goto LABEL_19;
    }
    v107(v104, v103);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v102 + 8))(v101, v71);
  }
  swift_retain();
  uint64_t v110 = (uint64_t)v231;
  dispatch thunk of MusicLibrary.ItemState.downloadStatus.getter();
  swift_release();
  uint64_t v111 = type metadata accessor for MusicLibrary.DownloadStatus();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v110, 0, 1, v111);
  *(void *)&long long v284 = 0x4000000000000000;
  sub_100303D88();
  ScaledMetric.init(wrappedValue:)();
  *(void *)&long long v284 = 0x3FF0000000000000;
  ScaledMetric.init(wrappedValue:)();
  sub_100616C80(v110, v240, _s27DownloadStatusIndicatorViewVMa);
  swift_storeEnumTagMultiPayload();
  sub_100585178();
  sub_100616A1C(&qword_1010AF168, (void (*)(uint64_t))_s27DownloadStatusIndicatorViewVMa);
  _ConditionalContent<>.init(storage:)();
  sub_100616E84(v110, _s27DownloadStatusIndicatorViewVMa);
  uint64_t v108 = (uint64_t)v242;
  uint64_t v109 = (uint64_t)v239;
LABEL_19:
  double v112 = *(double *)(v69 + 80);
  sub_1004DA53C(v108);
  sub_1004DA4FC(v109);
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if (byte_1010B2D10)
  {
    (*(void (**)(uint64_t, uint64_t))(v256 + 8))(v109, v255);
    sub_1000637B8(v108, &qword_1010B5280);
  }
  else
  {
    char v113 = sub_1006160C0(v108, v109, v112);
    (*(void (**)(uint64_t, uint64_t))(v256 + 8))(v109, v255);
    sub_1000637B8(v108, &qword_1010B5280);
    if (v113)
    {
LABEL_34:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v244 + 56))(v258, 1, 1, v245);
      goto LABEL_35;
    }
  }
  uint64_t v114 = v261;
  uint64_t v115 = (uint64_t (*)(uint64_t, void *))v261[9];
  swift_unknownObjectRetain();
  double v116 = COERCE_DOUBLE(v115(v260, v114));
  char v118 = v117;
  swift_unknownObjectRelease();
  if (v118) {
    goto LABEL_34;
  }
  if (qword_101098008 != -1) {
    swift_once();
  }
  id v119 = [(id)qword_101129648 stringFromSeconds:v116];
  uint64_t v120 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v122 = v121;

  *(void *)&long long v284 = v120;
  *((void *)&v284 + 1) = v122;
  unint64_t v256 = sub_10005D180();
  uint64_t v123 = Text.init<A>(_:)();
  uint64_t v125 = v124;
  char v127 = v126 & 1;
  LODWORD(v284) = static HierarchicalShapeStyle.secondary.getter();
  swift_retain();
  char v128 = sub_1005FF2C0();
  swift_release();
  uint64_t v129 = Text.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)&v284, v128 & 1);
  uint64_t v131 = v130;
  char v133 = v132 & 1;
  sub_1000D1500(v123, v125, v127);
  swift_bridgeObjectRelease();
  uint64_t v255 = Text.monospacedDigit()();
  uint64_t v241 = v135;
  v242 = v134;
  LODWORD(v240) = v136;
  sub_1000D1500(v129, v131, v133);
  swift_bridgeObjectRelease();
  sub_100063814(&qword_1010A5D00);
  ScaledMetric.wrappedValue.getter();
  static Alignment.trailing.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v137 = v295;
  uint64_t v138 = v297;
  uint64_t v139 = v299;
  uint64_t v140 = v301;
  uint64_t v141 = v303;
  uint64_t v142 = v305;
  uint64_t v144 = v307;
  uint64_t v143 = v308;
  char v282 = v240 & 1;
  char v281 = v296;
  char v280 = v298;
  char v279 = v300;
  char v278 = v302;
  char v277 = v304;
  char v276 = v306;
  char v145 = static Edge.Set.trailing.getter();
  if (qword_101098670 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  char v283 = 0;
  *(void *)&long long v265 = v255;
  *((void *)&v265 + 1) = v242;
  LOBYTE(v266) = v282;
  *((void *)&v266 + 1) = v241;
  *(void *)&long long v267 = v137;
  BYTE8(v267) = v281;
  *(void *)&long long v268 = v138;
  BYTE8(v268) = v280;
  *(void *)&long long v269 = v139;
  BYTE8(v269) = v279;
  *(void *)&long long v270 = v140;
  BYTE8(v270) = v278;
  *(void *)&long long v271 = v141;
  BYTE8(v271) = v277;
  *(void *)&long long v272 = v142;
  BYTE8(v272) = v276;
  *(void *)&long long v273 = v144;
  *((void *)&v273 + 1) = v143;
  LOBYTE(v274) = v145;
  *((void *)&v274 + 1) = v146;
  *(void *)&v275[0] = v147;
  *((void *)&v275[0] + 1) = v148;
  *(void *)&v275[1] = v149;
  BYTE8(v275[1]) = 0;
  static Duration.seconds(_:)();
  sub_100063814((uint64_t *)&unk_1010B9BB0);
  type metadata accessor for Duration.UnitsFormatStyle.Unit();
  uint64_t v150 = swift_allocObject();
  *(_OWORD *)(v150 + 16) = xmmword_100E251F0;
  static Duration.UnitsFormatStyle.Unit.hours.getter();
  static Duration.UnitsFormatStyle.Unit.minutes.getter();
  static Duration.UnitsFormatStyle.Unit.seconds.getter();
  sub_1000C9E60(v150);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v151 = v201;
  static Duration.UnitsFormatStyle.UnitWidth.wide.getter();
  uint64_t v152 = v204;
  static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
  uint64_t v153 = v209;
  static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter();
  uint64_t v154 = v202;
  static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v211 + 8))(v153, v212);
  (*(void (**)(char *, uint64_t))(v208 + 8))(v152, v210);
  (*(void (**)(char *, uint64_t))(v203 + 8))(v151, v205);
  sub_100616A1C(&qword_1010B35A0, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle);
  uint64_t v155 = v207;
  Duration.formatted<A>(_:)();
  (*(void (**)(char *, uint64_t))(v206 + 8))(v154, v155);
  long long v264 = v284;
  uint64_t v156 = Text.init<A>(_:)();
  uint64_t v158 = v157;
  LOBYTE(v154) = v159 & 1;
  sub_100063814(&qword_101099D40);
  sub_1000D2758();
  uint64_t v160 = (uint64_t)v214;
  View.accessibility(label:)();
  sub_1000D1500(v156, v158, (char)v154);
  swift_bridgeObjectRelease();
  long long v292 = v273;
  long long v293 = v274;
  v294[0] = v275[0];
  *(_OWORD *)((char *)v294 + 9) = *(_OWORD *)((char *)v275 + 9);
  long long v288 = v269;
  long long v289 = v270;
  long long v290 = v271;
  long long v291 = v272;
  long long v284 = v265;
  long long v285 = v266;
  long long v286 = v267;
  long long v287 = v268;
  sub_10034B740((uint64_t)&v284);
  AccessibilityIdentifier.trackListCellDuration.unsafeMutableAddressor();
  sub_1005862E4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v161 = (uint64_t)v217;
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000637B8(v160, &qword_1010AF430);
  long long v162 = v261;
  long long v163 = (uint64_t (*)(uint64_t, void *))v261[15];
  swift_unknownObjectRetain();
  LOBYTE(v156) = v163(v260, v162);
  swift_unknownObjectRelease();
  uint64_t v164 = 0;
  if (v156)
  {
    if (qword_101098660 != -1) {
      swift_once();
    }
    uint64_t v164 = qword_101129DA8;
    swift_retain();
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v166 = v216;
  sub_10006CAB8(v161, v216, &qword_1010B3560);
  uint64_t v167 = v245;
  long long v168 = (uint64_t *)(v166 + *(int *)(v245 + 36));
  *long long v168 = KeyPath;
  v168[1] = v164;
  sub_1000637B8(v161, &qword_1010B3560);
  uint64_t v169 = v215;
  sub_10003CABC(v166, v215, &qword_1010B3568);
  uint64_t v170 = v169;
  uint64_t v171 = v258;
  sub_10003CABC(v170, v258, &qword_1010B3568);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v244 + 56))(v171, 0, 1, v167);
LABEL_35:
  uint64_t v172 = v261;
  long long v173 = (uint64_t (*)(uint64_t, void *))v261[13];
  swift_unknownObjectRetain();
  uint64_t v174 = v260;
  uint64_t v175 = v173(v260, v172);
  uint64_t v177 = v176;
  swift_unknownObjectRelease();
  long long v178 = v259;
  uint64_t *v259 = v175;
  v178[1] = v177;
  *(void *)&long long v284 = 0x4046000000000000;
  sub_100303D88();
  ScaledMetric.init(wrappedValue:)();
  *(void *)&long long v284 = 0x403C000000000000;
  ScaledMetric.init(wrappedValue:)();
  swift_unknownObjectRetain();
  uint64_t v179 = v173(v174, v172);
  swift_unknownObjectRelease();
  if (v179) {
    sub_10006ADFC(v179);
  }
  BOOL v180 = v179 == 0;
  uint64_t v181 = swift_getKeyPath();
  uint64_t v182 = swift_allocObject();
  *(unsigned char *)(v182 + 16) = v180;
  uint64_t v183 = v259;
  uint64_t v184 = v249;
  sub_100616C80((uint64_t)v259, v249, _s17ContextMenuButtonVMa);
  long long v185 = (uint64_t *)(v184 + *(int *)(v250 + 36));
  *long long v185 = v181;
  v185[1] = (uint64_t)sub_100478498;
  v185[2] = v182;
  sub_100616E84((uint64_t)v183, _s17ContextMenuButtonVMa);
  uint64_t v186 = v251;
  sub_10003CABC(v184, v251, &qword_1010B3558);
  uint64_t v187 = v263;
  if (qword_101098688 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v262 = v284;
  LODWORD(v261) = BYTE8(v284);
  uint64_t v260 = v285;
  LODWORD(v259) = BYTE8(v285);
  uint64_t v255 = *((void *)&v286 + 1);
  unint64_t v256 = v286;
  uint64_t v188 = v243;
  sub_10006CAB8(v187, v243, &qword_1010B3590);
  uint64_t v189 = v257;
  uint64_t v190 = v246;
  sub_10006CAB8(v257, v246, &qword_1010AF150);
  uint64_t v191 = v258;
  uint64_t v192 = v248;
  sub_10006CAB8(v258, v248, &qword_1010B3570);
  uint64_t v193 = v252;
  sub_10006CAB8(v186, v252, &qword_1010B3558);
  uint64_t v194 = v253;
  sub_10006CAB8(v188, v253, &qword_1010B3590);
  uint64_t v195 = v186;
  long long v196 = (int *)sub_100063814(&qword_1010B3598);
  sub_10006CAB8(v190, v194 + v196[12], &qword_1010AF150);
  sub_10006CAB8(v192, v194 + v196[16], &qword_1010B3570);
  sub_10006CAB8(v193, v194 + v196[20], &qword_1010B3558);
  uint64_t v197 = v194 + v196[24];
  *(void *)uint64_t v197 = 0;
  *(unsigned char *)(v197 + 8) = 1;
  *(void *)(v197 + 16) = v262;
  *(unsigned char *)(v197 + 24) = (_BYTE)v261;
  *(void *)(v197 + 32) = v260;
  *(unsigned char *)(v197 + 40) = (_BYTE)v259;
  uint64_t v198 = v255;
  *(void *)(v197 + 48) = v256;
  *(void *)(v197 + 56) = v198;
  sub_1000637B8(v195, &qword_1010B3558);
  sub_1000637B8(v191, &qword_1010B3570);
  sub_1000637B8(v189, &qword_1010AF150);
  sub_1000637B8(v263, &qword_1010B3590);
  sub_1000637B8(v193, &qword_1010B3558);
  sub_1000637B8(v192, &qword_1010B3570);
  sub_1000637B8(v190, &qword_1010AF150);
  return sub_1000637B8(v188, &qword_1010B3590);
}

double sub_10060EAF4@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_100622E80((uint64_t)v8, a2, a3, a4, a5);
  double result = *(double *)v8;
  long long v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_10060EB40()
{
  return Shape.sizeThatFits(_:)();
}

uint64_t sub_10060EB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100623090();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10060EBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100623090();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10060EC20(uint64_t a1)
{
  unint64_t v2 = sub_100623090();

  return Shape.body.getter(a1, v2);
}

void sub_10060EC6C()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  byte_1010B2D10 = v1 == (id)6;
}

void sub_10060ECD0()
{
  qword_101129CE0 = Int.seconds.getter(465);
}

void sub_10060ECF4()
{
  qword_101129CE8 = Int.seconds.getter(800);
}

uint64_t sub_10060ED18()
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 20.0;
  if (byte_1010B2D10) {
    double v0 = 28.0;
  }
  qword_101129CF0 = *(void *)&v0;
  return result;
}

uint64_t sub_10060ED7C()
{
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if (byte_1010B2D10 == 1) {
    static HierarchicalShapeStyle.secondary.getter();
  }
  else {
    static Color.accentColor.getter();
  }
  uint64_t result = AnyShapeStyle.init<A>(_:)();
  qword_101129CF8 = result;
  return result;
}

uint64_t sub_10060EE20()
{
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if (byte_1010B2D10 == 1) {
    static HierarchicalShapeStyle.secondary.getter();
  }
  else {
    sub_100621904();
  }
  uint64_t result = AnyShapeStyle.init<A>(_:)();
  qword_101129D00 = result;
  return result;
}

uint64_t sub_10060EEB8()
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 0.0;
  if (byte_1010B2D10) {
    double v0 = 4.0;
  }
  qword_101129D08 = *(void *)&v0;
  return result;
}

uint64_t sub_10060EF1C(uint64_t a1)
{
  return sub_10060F400(a1, (uint64_t (*)(void))&static Font.title3.getter, (uint64_t (*)(void))&static Font.body.getter, &qword_101129D10);
}

uint64_t sub_10060EF50(uint64_t a1)
{
  return sub_10060F0D4(a1, &qword_101129D18);
}

uint64_t sub_10060EF5C()
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 0.0;
  if (byte_1010B2D10) {
    double v0 = 12.0;
  }
  qword_101129D20 = *(void *)&v0;
  return result;
}

uint64_t sub_10060EFC0()
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 2.0;
  if (byte_1010B2D10) {
    double v0 = 0.0;
  }
  qword_101129D28 = *(void *)&v0;
  return result;
}

uint64_t sub_10060F024()
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 39.0;
  if (byte_1010B2D10) {
    double v0 = 34.0;
  }
  qword_101129D30 = *(void *)&v0;
  return result;
}

uint64_t sub_10060F094(uint64_t a1)
{
  return sub_10060F400(a1, (uint64_t (*)(void))&static Font.body.getter, (uint64_t (*)(void))&static Font.footnote.getter, &qword_101129D38);
}

uint64_t sub_10060F0C8(uint64_t a1)
{
  return sub_10060F0D4(a1, &qword_101129D40);
}

uint64_t sub_10060F0D4(uint64_t a1, void *a2)
{
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if (byte_1010B2D10 == 1) {
    uint64_t result = static Font.Weight.regular.getter();
  }
  else {
    uint64_t result = static Font.Weight.semibold.getter();
  }
  *a2 = v4;
  return result;
}

uint64_t sub_10060F144()
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 0.0;
  if (byte_1010B2D10) {
    double v0 = 10.0;
  }
  qword_101129D48 = *(void *)&v0;
  return result;
}

void sub_10060F1A8()
{
  qword_101129D50 = 0x4028000000000000;
}

uint64_t sub_10060F1B8(uint64_t a1)
{
  return sub_10060F2C8(a1, (double *)&qword_101129D58);
}

__n128 sub_10060F1C4()
{
  double v0 = (__n128 *)Corner.small.unsafeMutableAddressor();
  char v1 = v0[1].n128_i8[0];
  __n128 result = *v0;
  xmmword_101129D60 = (__int128)*v0;
  byte_101129D70 = v1;
  return result;
}

uint64_t sub_10060F1F4()
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 9.0;
  if (byte_1010B2D10) {
    double v0 = 0.0;
  }
  qword_101129D78 = *(void *)&v0;
  return result;
}

uint64_t sub_10060F258()
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 12.0;
  if (byte_1010B2D10) {
    double v0 = 0.0;
  }
  qword_101129D80 = *(void *)&v0;
  return result;
}

uint64_t sub_10060F2BC(uint64_t a1)
{
  return sub_10060F2C8(a1, (double *)&qword_101129D88);
}

uint64_t sub_10060F2C8(uint64_t a1, double *a2)
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  double v3 = 10.0;
  if (byte_1010B2D10) {
    double v3 = 0.0;
  }
  *a2 = v3;
  return result;
}

uint64_t sub_10060F334()
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 17.0;
  if (byte_1010B2D10) {
    double v0 = 20.0;
  }
  qword_101129D90 = *(void *)&v0;
  return result;
}

uint64_t sub_10060F398(uint64_t a1)
{
  return sub_10060F400(a1, (uint64_t (*)(void))&static Font.body.getter, (uint64_t (*)(void))&static Font.callout.getter, &qword_101129D98);
}

uint64_t sub_10060F3CC(uint64_t a1)
{
  return sub_10060F400(a1, (uint64_t (*)(void))&static Font.callout.getter, (uint64_t (*)(void))&static Font.footnote.getter, &qword_101129DA0);
}

uint64_t sub_10060F400(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if (byte_1010B2D10 == 1) {
    uint64_t result = a2();
  }
  else {
    uint64_t result = a3();
  }
  *a4 = result;
  return result;
}

uint64_t sub_10060F488()
{
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if (byte_1010B2D10)
  {
    uint64_t result = 0;
  }
  else
  {
    id v1 = (id)*HI.Color.prominentTextColor.unsafeMutableAddressor();
    uint64_t result = Color.init(_:)();
  }
  qword_101129DA8 = result;
  return result;
}

uint64_t sub_10060F4F8()
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 44.0;
  if (byte_1010B2D10) {
    double v0 = 57.0;
  }
  qword_101129DB0 = *(void *)&v0;
  return result;
}

uint64_t sub_10060F568()
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 16.0;
  if (byte_1010B2D10) {
    double v0 = 9.0;
  }
  qword_101129DB8 = *(void *)&v0;
  return result;
}

void sub_10060F5CC()
{
  qword_101129DC0 = Int.seconds.getter(4);
}

uint64_t sub_10060F5F0()
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 44.0;
  if (!byte_1010B2D10) {
    double v0 = 28.0;
  }
  qword_101129DC8 = *(void *)&v0;
  return result;
}

uint64_t sub_10060F658()
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 0.0;
  if (byte_1010B2D10) {
    double v0 = 8.0;
  }
  qword_101129DD0 = *(void *)&v0;
  return result;
}

void sub_10060F6BC()
{
  qword_101129DD8 = Int.seconds.getter(12);
}

uint64_t sub_10060F6E0()
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 6.0;
  if (byte_1010B2D10) {
    double v0 = 0.0;
  }
  qword_101129DE0 = *(void *)&v0;
  return result;
}

uint64_t sub_10060F744@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v41 = type metadata accessor for DynamicTypeSize();
  uint64_t v2 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100063814(&qword_1010B2F08);
  __chkstk_darwin(v5 - 8);
  long long v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814(&qword_1010B2F10);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100063814(&qword_1010B2F18);
  __chkstk_darwin(v40);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100063814(&qword_1010B2F20);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)long long v7 = static VerticalAlignment.center.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v17 = sub_100063814(&qword_1010B2F28);
  sub_10060FB50(v1, (uint64_t)&v7[*(int *)(v17 + 44)]);
  char v18 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  sub_10006CAB8((uint64_t)v7, (uint64_t)v11, &qword_1010B2F08);
  uint64_t v27 = &v11[*(int *)(v9 + 44)];
  *uint64_t v27 = v18;
  *((void *)v27 + 1) = v20;
  *((void *)v27 + 2) = v22;
  *((void *)v27 + 3) = v24;
  *((void *)v27 + 4) = v26;
  v27[40] = 0;
  sub_1000637B8((uint64_t)v7, &qword_1010B2F08);
  char v28 = static Edge.Set.vertical.getter();
  type metadata accessor for Tracklist.EmptyCell(0);
  sub_1004DA4FC((uint64_t)v4);
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if ((byte_1010B2D10 & 1) == 0) {
    DynamicTypeSize.isAccessibilitySize.getter();
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v41);
  EdgeInsets.init(_all:)();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_10006CAB8((uint64_t)v11, (uint64_t)v13, &qword_1010B2F10);
  uint64_t v37 = &v13[*(int *)(v40 + 36)];
  char *v37 = v28;
  *((void *)v37 + 1) = v30;
  *((void *)v37 + 2) = v32;
  *((void *)v37 + 3) = v34;
  *((void *)v37 + 4) = v36;
  v37[40] = 0;
  sub_1000637B8((uint64_t)v11, &qword_1010B2F10);
  AccessibilityIdentifier.trackListEmptyCell.unsafeMutableAddressor();
  sub_10062147C(&qword_1010B2F30, &qword_1010B2F18, (void (*)(void))sub_1006165D0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  View.accessibilityIdentifier(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000637B8((uint64_t)v13, &qword_1010B2F18);
  return sub_10003CABC((uint64_t)v16, v42, &qword_1010B2F20);
}

uint64_t sub_10060FB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v282 = a1;
  uint64_t v258 = a2;
  uint64_t v2 = sub_100063814(&qword_1010B2F48);
  __chkstk_darwin(v2 - 8);
  uint64_t v259 = (uint64_t)&v215 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v257 = (uint64_t)&v215 - v5;
  uint64_t v256 = sub_100063814(&qword_1010B2F50);
  __chkstk_darwin(v256);
  uint64_t v226 = (uint64_t)&v215 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010B2F58);
  __chkstk_darwin(v7 - 8);
  uint64_t v222 = (uint64_t)&v215 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814((uint64_t *)&unk_1010B4360);
  __chkstk_darwin(v9 - 8);
  uint64_t v223 = (uint64_t)&v215 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v225 = (uint64_t)&v215 - v12;
  uint64_t v13 = sub_100063814(&qword_1010B2F60);
  __chkstk_darwin(v13 - 8);
  uint64_t v249 = (uint64_t)&v215 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v220 = sub_100063814(&qword_1010B2F68);
  __chkstk_darwin(v220);
  uint64_t v221 = (uint64_t)&v215 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v219 = (uint64_t)&v215 - v17;
  __chkstk_darwin(v18);
  uint64_t v224 = (uint64_t)&v215 - v19;
  uint64_t v251 = sub_100063814(&qword_1010B2F70);
  __chkstk_darwin(v251);
  uint64_t v253 = (uint64_t)&v215 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100063814(&qword_1010B2F78);
  __chkstk_darwin(v21 - 8);
  v217 = (uint64_t *)((char *)&v215 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v252 = sub_100063814((uint64_t *)&unk_1010B4350);
  __chkstk_darwin(v252);
  uint64_t v216 = (uint64_t)&v215 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v218 = (uint64_t)&v215 - v25;
  uint64_t v26 = sub_100063814(&qword_1010B2F80);
  __chkstk_darwin(v26 - 8);
  uint64_t v255 = (uint64_t)&v215 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v273 = (uint64_t)&v215 - v29;
  uint64_t v30 = sub_100063814(&qword_1010B5280);
  __chkstk_darwin(v30 - 8);
  v261 = (char *)&v215 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100063814(&qword_1010B2F88);
  __chkstk_darwin(v32 - 8);
  uint64_t v254 = (uint64_t)&v215 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v283 = (uint64_t)&v215 - v35;
  uint64_t v36 = type metadata accessor for Image.Scale();
  uint64_t v245 = *(void *)(v36 - 8);
  uint64_t v246 = v36;
  __chkstk_darwin(v36);
  uint64_t v244 = (char *)&v215 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100063814(&qword_10109D720);
  uint64_t v242 = *(void *)(v38 - 8);
  uint64_t v243 = v38;
  __chkstk_darwin(v38);
  uint64_t v241 = (char *)&v215 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v240 = sub_100063814(&qword_1010B2F90);
  __chkstk_darwin(v240);
  uint64_t v248 = (char *)&v215 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = sub_100063814(&qword_1010B2F98);
  __chkstk_darwin(v247);
  uint64_t v260 = (char *)&v215 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = sub_100063814(&qword_1010B2FA0);
  uint64_t v250 = *(void *)(v272 - 8);
  __chkstk_darwin(v272);
  uint64_t v277 = (uint64_t)&v215 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v274 = type metadata accessor for Tracklist.EmptyCell(0);
  uint64_t v235 = *(void *)(v274 - 8);
  __chkstk_darwin(v274);
  uint64_t v236 = v43;
  uint64_t v238 = (uint64_t)&v215 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v270 = sub_100063814(&qword_1010B2FA8);
  __chkstk_darwin(v270);
  uint64_t v281 = (uint64_t)&v215 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v237 = (char *)&v215 - v46;
  uint64_t v234 = sub_100063814(&qword_1010B2FB0);
  __chkstk_darwin(v234);
  uint64_t v280 = (uint64_t)&v215 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v276 = type metadata accessor for DynamicTypeSize();
  uint64_t v262 = *(void *)(v276 - 8);
  __chkstk_darwin(v276);
  uint64_t v227 = (uint64_t)&v215 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  long long v285 = (void (*)(uint64_t, uint64_t))((char *)&v215 - v50);
  __chkstk_darwin(v51);
  uint64_t v275 = (uint64_t)&v215 - v52;
  __chkstk_darwin(v53);
  uint64_t v284 = (uint64_t)&v215 - v54;
  uint64_t v263 = sub_100063814(&qword_1010B2FB8);
  uint64_t v269 = *(void *)(v263 - 8);
  __chkstk_darwin(v263);
  uint64_t v56 = (char *)&v215 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100063814(&qword_1010B2FC0);
  uint64_t v229 = *(void *)(v57 - 8);
  uint64_t v230 = v57;
  __chkstk_darwin(v57);
  uint64_t v59 = (char *)&v215 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v228 = sub_100063814(&qword_1010B2FC8);
  __chkstk_darwin(v228);
  uint64_t v61 = (char *)&v215 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v278 = sub_100063814(&qword_1010B2FD0);
  __chkstk_darwin(v278);
  uint64_t v232 = (uint64_t)&v215 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v231 = sub_100063814(&qword_1010B2FD8);
  __chkstk_darwin(v231);
  uint64_t v233 = (uint64_t)&v215 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v271 = sub_100063814(&qword_1010B2FE0);
  uint64_t v239 = *(void *)(v271 - 8);
  __chkstk_darwin(v271);
  uint64_t v279 = (uint64_t)&v215 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101098628 != -1) {
    swift_once();
  }
  unint64_t v65 = sub_1005A9874();
  View.corner(_:)();
  Border.artwork.unsafeMutableAddressor();
  long long v268 = v56;
  swift_retain();
  *(void *)&long long v289 = &type metadata for Rectangle;
  unint64_t v267 = v65;
  *((void *)&v289 + 1) = v65;
  swift_getOpaqueTypeConformance2();
  int v66 = v268;
  uint64_t v67 = v263;
  View.border(_:corner:)();
  swift_release();
  long long v265 = *(void (**)(char *, uint64_t))(v269 + 8);
  uint64_t v266 = v269 + 8;
  v265(v66, v67);
  id v264 = self;
  id v68 = [v264 tertiarySystemFillColor];
  uint64_t v69 = Color.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v72 = v229;
  uint64_t v71 = v230;
  (*(void (**)(char *, char *, uint64_t))(v229 + 16))(v61, v59, v230);
  uint64_t v73 = (uint64_t *)&v61[*(int *)(v228 + 36)];
  *uint64_t v73 = KeyPath;
  v73[1] = v69;
  (*(void (**)(char *, uint64_t))(v72 + 8))(v59, v71);
  uint64_t v74 = v282 + *(int *)(v274 + 44);
  uint64_t v75 = v284;
  sub_1004DA4FC(v284);
  uint64_t v76 = (uint64_t)v61;
  uint64_t v77 = v75;
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  uint64_t v78 = v276;
  uint64_t v79 = v262;
  if (byte_1010B2D10 == 1)
  {
    long long v80 = *(void (**)(uint64_t, uint64_t))(v262 + 8);
    uint64_t v81 = (v262 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  }
  else
  {
    uint64_t v82 = v275;
    (*(void (**)(uint64_t, void, uint64_t))(v262 + 104))(v275, enum case for DynamicTypeSize.accessibility3(_:), v276);
    static DynamicTypeSize.< infix(_:_:)();
    long long v80 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
    uint64_t v81 = (v79 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v80(v82, v78);
  }
  uint64_t v83 = (uint64_t)v285;
  v80(v77, v78);
  sub_1004DA4FC(v83);
  uint64_t v284 = v81;
  long long v285 = v80;
  if ((byte_1010B2D10 & 1) == 0)
  {
    uint64_t v84 = v275;
    (*(void (**)(uint64_t, void, uint64_t))(v262 + 104))(v275, enum case for DynamicTypeSize.accessibility3(_:), v78);
    static DynamicTypeSize.< infix(_:_:)();
    v285(v84, v78);
    long long v80 = v285;
  }
  v80(v83, v78);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v85 = v232;
  sub_10006CAB8(v76, v232, &qword_1010B2FC8);
  uint64_t v86 = (_OWORD *)(v85 + *(int *)(v278 + 36));
  long long v87 = v287;
  _OWORD *v86 = v286;
  v86[1] = v87;
  v86[2] = v288;
  sub_1000637B8(v76, &qword_1010B2FC8);
  char v88 = static Edge.Set.leading.getter();
  if (qword_101098610 != -1) {
    swift_once();
  }
  uint64_t v278 = v74;
  EdgeInsets.init(_all:)();
  uint64_t v90 = v89;
  uint64_t v92 = v91;
  uint64_t v94 = v93;
  uint64_t v96 = v95;
  uint64_t v97 = v233;
  sub_10006CAB8(v85, v233, &qword_1010B2FD0);
  uint64_t v98 = v97 + *(int *)(v231 + 36);
  *(unsigned char *)uint64_t v98 = v88;
  *(void *)(v98 + 8) = v90;
  *(void *)(v98 + 16) = v92;
  *(void *)(v98 + 24) = v94;
  *(void *)(v98 + 32) = v96;
  *(unsigned char *)(v98 + 40) = 0;
  sub_1000637B8(v85, &qword_1010B2FD0);
  char v99 = static Edge.Set.trailing.getter();
  if (qword_101098618 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v101 = v100;
  uint64_t v103 = v102;
  uint64_t v105 = v104;
  uint64_t v107 = v106;
  uint64_t v108 = v279;
  sub_10006CAB8(v97, v279, &qword_1010B2FD8);
  uint64_t v109 = v108 + *(int *)(v271 + 36);
  *(unsigned char *)uint64_t v109 = v99;
  *(void *)(v109 + 8) = v101;
  *(void *)(v109 + 16) = v103;
  *(void *)(v109 + 24) = v105;
  *(void *)(v109 + 32) = v107;
  *(unsigned char *)(v109 + 40) = 0;
  sub_1000637B8(v97, &qword_1010B2FD8);
  uint64_t v110 = v268;
  View.corner(_:)();
  id v111 = [v264 tertiarySystemFillColor];
  uint64_t v112 = Color.init(_:)();
  uint64_t v113 = swift_getKeyPath();
  uint64_t v269 = *(void *)(v269 + 16);
  uint64_t v114 = (uint64_t)v237;
  uint64_t v115 = v263;
  ((void (*)(char *, char *, uint64_t))v269)(v237, v110, v263);
  double v116 = (uint64_t *)(v114 + *(int *)(v270 + 36));
  *double v116 = v113;
  v116[1] = v112;
  v265(v110, v115);
  uint64_t v117 = static HorizontalAlignment.listRowSeparatorLeading.getter();
  uint64_t v118 = v238;
  sub_100616C80(v282, v238, type metadata accessor for Tracklist.EmptyCell);
  unint64_t v119 = (*(unsigned __int8 *)(v235 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v235 + 80);
  uint64_t v120 = swift_allocObject();
  sub_100616C18(v118, v120 + v119, type metadata accessor for Tracklist.EmptyCell);
  uint64_t v121 = v280;
  sub_10006CAB8(v114, v280, &qword_1010B2FA8);
  uint64_t v122 = (uint64_t *)(v121 + *(int *)(v234 + 36));
  uint64_t *v122 = v117;
  v122[1] = (uint64_t)sub_1006168E8;
  v122[2] = v120;
  sub_1000637B8(v114, &qword_1010B2FA8);
  View.corner(_:)();
  id v123 = v264;
  id v124 = [v264 tertiarySystemFillColor];
  uint64_t v125 = Color.init(_:)();
  uint64_t v126 = swift_getKeyPath();
  uint64_t v127 = v281;
  ((void (*)(uint64_t, char *, uint64_t))v269)(v281, v110, v115);
  char v128 = (uint64_t *)(v127 + *(int *)(v270 + 36));
  *char v128 = v126;
  v128[1] = v125;
  v265(v110, v115);
  uint64_t v129 = Image.init(systemName:)();
  id v130 = [v123 tertiarySystemFillColor];
  uint64_t v131 = Color.init(_:)();
  uint64_t v132 = swift_getKeyPath();
  uint64_t v133 = static Font.callout.getter();
  uint64_t v134 = swift_getKeyPath();
  *(void *)&long long v289 = v129;
  *((void *)&v289 + 1) = v132;
  *(void *)&long long v290 = v131;
  *((void *)&v290 + 1) = v134;
  *(void *)&long long v291 = v133;
  static Font.Weight.semibold.getter();
  sub_100063814(&qword_10109D728);
  sub_1001E7AD8();
  uint64_t v135 = v241;
  View.fontWeight(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v137 = v244;
  uint64_t v136 = v245;
  uint64_t v138 = v246;
  (*(void (**)(char *, void, uint64_t))(v245 + 104))(v244, enum case for Image.Scale.medium(_:), v246);
  uint64_t v139 = swift_getKeyPath();
  uint64_t v140 = (uint64_t)v248;
  uint64_t v141 = (uint64_t *)&v248[*(int *)(v240 + 36)];
  uint64_t v142 = sub_100063814(&qword_10109CFF8);
  (*(void (**)(char *, char *, uint64_t))(v136 + 16))((char *)v141 + *(int *)(v142 + 28), v137, v138);
  *uint64_t v141 = v139;
  uint64_t v144 = v242;
  uint64_t v143 = v243;
  (*(void (**)(uint64_t, char *, uint64_t))(v242 + 16))(v140, v135, v243);
  (*(void (**)(char *, uint64_t))(v136 + 8))(v137, v138);
  (*(void (**)(char *, uint64_t))(v144 + 8))(v135, v143);
  if (qword_101098680 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  uint64_t v145 = v283;
  uint64_t v146 = (uint64_t)v260;
  uint64_t v147 = (uint64_t)v261;
  uint64_t v149 = v276;
  uint64_t v148 = v277;
  uint64_t v150 = v274;
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_10006CAB8(v140, v146, &qword_1010B2F90);
  uint64_t v151 = (_OWORD *)(v146 + *(int *)(v247 + 36));
  long long v152 = v294;
  v151[4] = v293;
  v151[5] = v152;
  v151[6] = v295;
  long long v153 = v290;
  *uint64_t v151 = v289;
  v151[1] = v153;
  long long v154 = v292;
  v151[2] = v291;
  v151[3] = v154;
  sub_1000637B8(v140, &qword_1010B2F90);
  char v155 = static Edge.Set.trailing.getter();
  uint64_t v156 = v282;
  if (qword_101098688 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v158 = v157;
  uint64_t v160 = v159;
  uint64_t v162 = v161;
  uint64_t v164 = v163;
  sub_10006CAB8(v146, v148, &qword_1010B2F98);
  uint64_t v165 = v148 + *(int *)(v272 + 36);
  *(unsigned char *)uint64_t v165 = v155;
  *(void *)(v165 + 8) = v158;
  *(void *)(v165 + 16) = v160;
  *(void *)(v165 + 24) = v162;
  *(void *)(v165 + 32) = v164;
  *(unsigned char *)(v165 + 40) = 0;
  sub_1000637B8(v146, &qword_1010B2F98);
  uint64_t v274 = v156 + *(int *)(v150 + 48);
  sub_1004DA53C(v147);
  uint64_t v166 = v275;
  sub_1004DA4FC(v275);
  char v167 = sub_10061306C(v147);
  v285(v166, v149);
  sub_1000637B8(v147, &qword_1010B5280);
  if (v167)
  {
    uint64_t v168 = 1;
  }
  else
  {
    sub_10006CAB8(v279, v145, &qword_1010B2FE0);
    uint64_t v168 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v239 + 56))(v145, v168, 1, v271);
  double v169 = *(double *)(v156 + 48);
  sub_1004DA53C(v147);
  sub_1004DA4FC(v166);
  char v170 = sub_1006160C0(v147, v166, v169);
  v285(v166, v149);
  sub_1000637B8(v147, &qword_1010B5280);
  if (v170)
  {
    uint64_t v171 = static HorizontalAlignment.leading.getter();
    uint64_t v172 = (uint64_t)v217;
    uint64_t *v217 = v171;
    *(void *)(v172 + 8) = 0;
    *(unsigned char *)(v172 + 16) = 0;
    uint64_t v173 = sub_100063814(&qword_1010B3020);
    sub_100611D10(v156, v279, v148, v280, v281, v172 + *(int *)(v173 + 44));
    uint64_t v174 = static Alignment.leading.getter();
    uint64_t v175 = v216;
    sub_100625284(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v216, 0.0, 1, 0.0, 1, v174, v176);
    sub_1000637B8(v172, &qword_1010B2F78);
    uint64_t v177 = v175;
    uint64_t v178 = v218;
    sub_10003CABC(v177, v218, (uint64_t *)&unk_1010B4350);
    sub_10006CAB8(v178, v253, (uint64_t *)&unk_1010B4350);
    swift_storeEnumTagMultiPayload();
    sub_100616980(&qword_1010B3000, (uint64_t *)&unk_1010B4350, &qword_1010B3008, &qword_1010B2F78);
    sub_100063858(&qword_1010B3010, &qword_1010B2F50);
    _ConditionalContent<>.init(storage:)();
    sub_1000637B8(v178, (uint64_t *)&unk_1010B4350);
    uint64_t v179 = v285;
  }
  else
  {
    uint64_t v180 = v156 + *(int *)(v150 + 36);
    uint64_t v181 = sub_100063814(&qword_1010A5D00);
    ScaledMetric.wrappedValue.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v182 = v249;
    sub_10006CAB8(v280, v249, &qword_1010B2FB0);
    uint64_t v183 = (_OWORD *)(v182 + *(int *)(sub_100063814(&qword_1010B2FE8) + 36));
    long long v184 = v297;
    *uint64_t v183 = v296;
    v183[1] = v184;
    v183[2] = v298;
    uint64_t v185 = v227;
    sub_1004DA4FC(v227);
    if (byte_1010B2D10 == 1)
    {
      uint64_t v179 = v285;
      v285(v185, v149);
    }
    else
    {
      uint64_t v270 = v181;
      uint64_t v271 = v180;
      uint64_t v186 = enum case for DynamicTypeSize.accessibility3(_:);
      uint64_t v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v262 + 104);
      v187(v166, enum case for DynamicTypeSize.accessibility3(_:), v149);
      static DynamicTypeSize.< infix(_:_:)();
      uint64_t v179 = v285;
      v285(v166, v149);
      uint64_t v188 = v227;
      if ((byte_1010B2D10 & 1) == 0)
      {
        v187(v166, v186, v149);
        static DynamicTypeSize.< infix(_:_:)();
        v179(v166, v149);
      }
      v179(v188, v149);
    }
    static Alignment.leading.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v189 = v249;
    uint64_t v190 = v219;
    sub_10006CAB8(v249, v219, &qword_1010B2F60);
    uint64_t v191 = (_OWORD *)(v190 + *(int *)(v220 + 36));
    long long v192 = v300;
    _OWORD *v191 = v299;
    v191[1] = v192;
    v191[2] = v301;
    sub_1000637B8(v189, &qword_1010B2F60);
    uint64_t v193 = v224;
    sub_10003CABC(v190, v224, &qword_1010B2F68);
    ScaledMetric.wrappedValue.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v194 = v222;
    sub_10006CAB8(v281, v222, &qword_1010B2FA8);
    uint64_t v195 = (_OWORD *)(v194 + *(int *)(sub_100063814(&qword_1010B2FF0) + 36));
    long long v196 = v303;
    *uint64_t v195 = v302;
    v195[1] = v196;
    v195[2] = v304;
    uint64_t v197 = static Alignment.leading.getter();
    uint64_t v198 = v223;
    sub_1006252E0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v223, 0.0, 1, 0.0, 1, v197, v199);
    sub_1000637B8(v194, &qword_1010B2F58);
    uint64_t v200 = v225;
    sub_10003CABC(v198, v225, (uint64_t *)&unk_1010B4360);
    uint64_t v201 = v221;
    sub_10006CAB8(v193, v221, &qword_1010B2F68);
    sub_10006CAB8(v200, v198, (uint64_t *)&unk_1010B4360);
    uint64_t v202 = v226;
    sub_10006CAB8(v201, v226, &qword_1010B2F68);
    uint64_t v203 = sub_100063814(&qword_1010B2FF8);
    sub_10006CAB8(v198, v202 + *(int *)(v203 + 48), (uint64_t *)&unk_1010B4360);
    sub_1000637B8(v198, (uint64_t *)&unk_1010B4360);
    sub_1000637B8(v201, &qword_1010B2F68);
    sub_10006CAB8(v202, v253, &qword_1010B2F50);
    swift_storeEnumTagMultiPayload();
    sub_100616980(&qword_1010B3000, (uint64_t *)&unk_1010B4350, &qword_1010B3008, &qword_1010B2F78);
    sub_100063858(&qword_1010B3010, &qword_1010B2F50);
    uint64_t v149 = v276;
    _ConditionalContent<>.init(storage:)();
    sub_1000637B8(v202, &qword_1010B2F50);
    sub_1000637B8(v200, (uint64_t *)&unk_1010B4360);
    sub_1000637B8(v193, &qword_1010B2F68);
    uint64_t v147 = (uint64_t)v261;
    uint64_t v148 = v277;
    uint64_t v166 = v275;
  }
  sub_1004DA53C(v147);
  sub_1004DA4FC(v166);
  char v204 = sub_10061306C(v147);
  v179(v166, v149);
  sub_1000637B8(v147, &qword_1010B5280);
  if (v204)
  {
    uint64_t v205 = 1;
    uint64_t v206 = v257;
  }
  else
  {
    uint64_t v206 = v257;
    sub_10006CAB8(v148, v257, &qword_1010B2FA0);
    uint64_t v205 = 0;
  }
  uint64_t v207 = v283;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v250 + 56))(v206, v205, 1, v272);
  uint64_t v208 = v254;
  sub_10006CAB8(v207, v254, &qword_1010B2F88);
  uint64_t v209 = v273;
  uint64_t v210 = v255;
  sub_10006CAB8(v273, v255, &qword_1010B2F80);
  uint64_t v211 = v259;
  sub_10006CAB8(v206, v259, &qword_1010B2F48);
  uint64_t v212 = v258;
  sub_10006CAB8(v208, v258, &qword_1010B2F88);
  uint64_t v213 = sub_100063814(&qword_1010B3018);
  sub_10006CAB8(v210, v212 + *(int *)(v213 + 48), &qword_1010B2F80);
  sub_10006CAB8(v211, v212 + *(int *)(v213 + 64), &qword_1010B2F48);
  sub_1000637B8(v206, &qword_1010B2F48);
  sub_1000637B8(v209, &qword_1010B2F80);
  sub_1000637B8(v283, &qword_1010B2F88);
  sub_1000637B8(v277, &qword_1010B2FA0);
  sub_1000637B8(v281, &qword_1010B2FA8);
  sub_1000637B8(v280, &qword_1010B2FB0);
  sub_1000637B8(v279, &qword_1010B2FE0);
  sub_1000637B8(v211, &qword_1010B2F48);
  sub_1000637B8(v210, &qword_1010B2F80);
  return sub_1000637B8(v208, &qword_1010B2F88);
}

double sub_100611A60()
{
  uint64_t v1 = type metadata accessor for DynamicTypeSize();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = sub_100063814(&qword_1010B5280);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v11 = 0.0;
  if (*v0 == 1)
  {
    type metadata accessor for Tracklist.EmptyCell(0);
    sub_1004DA53C((uint64_t)v10);
    sub_1004DA4FC((uint64_t)v7);
    char v12 = sub_10061306C((uint64_t)v10);
    uint64_t v13 = *(void (**)(char *, uint64_t))(v2 + 8);
    v13(v7, v1);
    sub_1000637B8((uint64_t)v10, &qword_1010B5280);
    if ((v12 & 1) == 0)
    {
      sub_1004DA4FC((uint64_t)v4);
      if (qword_1010985A0 != -1) {
        swift_once();
      }
      if (byte_1010B2D10)
      {
        double v14 = 48.0;
      }
      else
      {
        (*(void (**)(char *, void, uint64_t))(v2 + 104))(v7, enum case for DynamicTypeSize.accessibility3(_:), v1);
        char v15 = static DynamicTypeSize.< infix(_:_:)();
        v13(v7, v1);
        if (v15) {
          double v14 = 48.0;
        }
        else {
          double v14 = 72.0;
        }
      }
      v13(v4, v1);
      double v16 = -v14;
      if (qword_101098618 != -1) {
        swift_once();
      }
      return v16 - *(double *)&qword_101129D50;
    }
  }
  return v11;
}

uint64_t sub_100611D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v70 = a5;
  uint64_t v65 = a4;
  uint64_t v62 = a3;
  uint64_t v61 = a2;
  uint64_t v73 = a6;
  uint64_t v69 = sub_100063814(&qword_1010B2FF0);
  __chkstk_darwin(v69);
  uint64_t v74 = (uint64_t)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v72 = (uint64_t)&v60 - v9;
  uint64_t v64 = sub_100063814(&qword_1010B2FE8);
  __chkstk_darwin(v64);
  uint64_t v71 = (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v68 = (uint64_t)&v60 - v12;
  uint64_t v13 = sub_100063814(&qword_1010B3028);
  __chkstk_darwin(v13 - 8);
  char v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100063814(&qword_1010B3030);
  uint64_t v63 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v60 = (uint64_t)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DynamicTypeSize();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100063814(&qword_1010B5280);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100063814(&qword_1010B3038);
  __chkstk_darwin(v25 - 8);
  uint64_t v66 = (uint64_t)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v60 - v28;
  type metadata accessor for Tracklist.EmptyCell(0);
  sub_1004DA53C((uint64_t)v24);
  uint64_t v67 = a1;
  sub_1004DA4FC((uint64_t)v21);
  char v30 = sub_10061306C((uint64_t)v24);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  sub_1000637B8((uint64_t)v24, &qword_1010B5280);
  uint64_t v31 = 1;
  if (v30)
  {
    *(void *)char v15 = static VerticalAlignment.center.getter();
    *((void *)v15 + 1) = 0;
    v15[16] = 0;
    uint64_t v32 = sub_100063814(&qword_1010B3048);
    sub_100612534(v61, v62, (uint64_t)&v15[*(int *)(v32 + 44)]);
    char v33 = static Edge.Set.bottom.getter();
    if (qword_101098620 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    uint64_t v42 = v60;
    sub_10006CAB8((uint64_t)v15, v60, &qword_1010B3028);
    uint64_t v43 = v42 + *(int *)(v16 + 36);
    *(unsigned char *)uint64_t v43 = v33;
    *(void *)(v43 + 8) = v35;
    *(void *)(v43 + 16) = v37;
    *(void *)(v43 + 24) = v39;
    *(void *)(v43 + 32) = v41;
    *(unsigned char *)(v43 + 40) = 0;
    sub_1000637B8((uint64_t)v15, &qword_1010B3028);
    sub_10003CABC(v42, (uint64_t)v29, &qword_1010B3030);
    uint64_t v31 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v29, v31, 1, v16);
  sub_100063814(&qword_1010A5D00);
  ScaledMetric.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v44 = v68;
  sub_10006CAB8(v65, v68, &qword_1010B2FB0);
  uint64_t v45 = (_OWORD *)(v44 + *(int *)(v64 + 36));
  long long v46 = v76;
  _OWORD *v45 = v75;
  v45[1] = v46;
  void v45[2] = v77;
  ScaledMetric.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v65 = v78;
  LODWORD(v64) = v79;
  uint64_t v63 = v80;
  LODWORD(v62) = v81;
  uint64_t v61 = v82;
  uint64_t v60 = v83;
  ScaledMetric.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v47 = (uint64_t)v29;
  uint64_t v48 = v72;
  sub_10006CAB8(v70, v72, &qword_1010B2FA8);
  uint64_t v49 = (_OWORD *)(v48 + *(int *)(v69 + 36));
  long long v50 = v85;
  *uint64_t v49 = v84;
  v49[1] = v50;
  v49[2] = v86;
  uint64_t v51 = v66;
  sub_10006CAB8(v47, v66, &qword_1010B3038);
  uint64_t v52 = v44;
  uint64_t v53 = v71;
  sub_10006CAB8(v44, v71, &qword_1010B2FE8);
  uint64_t v54 = v74;
  sub_10006CAB8(v48, v74, &qword_1010B2FF0);
  uint64_t v55 = v73;
  sub_10006CAB8(v51, v73, &qword_1010B3038);
  uint64_t v56 = (int *)sub_100063814(&qword_1010B3040);
  sub_10006CAB8(v53, v55 + v56[12], &qword_1010B2FE8);
  uint64_t v57 = v55 + v56[16];
  *(void *)uint64_t v57 = 0;
  *(unsigned char *)(v57 + 8) = 1;
  *(void *)(v57 + 16) = v65;
  *(unsigned char *)(v57 + 24) = v64;
  *(void *)(v57 + 32) = v63;
  *(unsigned char *)(v57 + 40) = v62;
  uint64_t v58 = v60;
  *(void *)(v57 + 48) = v61;
  *(void *)(v57 + 56) = v58;
  sub_10006CAB8(v54, v55 + v56[20], &qword_1010B2FF0);
  sub_1000637B8(v48, &qword_1010B2FF0);
  sub_1000637B8(v52, &qword_1010B2FE8);
  sub_1000637B8(v47, &qword_1010B3038);
  sub_1000637B8(v54, &qword_1010B2FF0);
  sub_1000637B8(v53, &qword_1010B2FE8);
  return sub_1000637B8(v51, &qword_1010B3038);
}

uint64_t sub_100612534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100063814(&qword_1010B2FA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = sub_100063814(&qword_1010B2FE0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v21 - v16;
  sub_10006CAB8(a1, (uint64_t)&v21 - v16, &qword_1010B2FE0);
  sub_10006CAB8(a2, (uint64_t)v11, &qword_1010B2FA0);
  sub_10006CAB8((uint64_t)v17, (uint64_t)v14, &qword_1010B2FE0);
  sub_10006CAB8((uint64_t)v11, (uint64_t)v8, &qword_1010B2FA0);
  sub_10006CAB8((uint64_t)v14, a3, &qword_1010B2FE0);
  uint64_t v18 = sub_100063814(&qword_1010B3050);
  uint64_t v19 = a3 + *(int *)(v18 + 48);
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 1;
  sub_10006CAB8((uint64_t)v8, a3 + *(int *)(v18 + 64), &qword_1010B2FA0);
  sub_1000637B8((uint64_t)v11, &qword_1010B2FA0);
  sub_1000637B8((uint64_t)v17, &qword_1010B2FE0);
  sub_1000637B8((uint64_t)v8, &qword_1010B2FA0);
  return sub_1000637B8((uint64_t)v14, &qword_1010B2FE0);
}

uint64_t sub_10061270C@<X0>(char a1@<W0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X8>)
{
  *(unsigned char *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  long long v5 = a3[1];
  *(_OWORD *)(a4 + 16) = *a3;
  *(_OWORD *)(a4 + 32) = v5;
  *(_OWORD *)(a4 + 48) = a3[2];
  *(_OWORD *)(a4 + 57) = *(_OWORD *)((char *)a3 + 41);
  uint64_t v6 = type metadata accessor for Tracklist.EmptyCell(0);
  sub_100303D88();
  ScaledMetric.init(wrappedValue:)();
  ScaledMetric.init(wrappedValue:)();
  ScaledMetric.init(wrappedValue:)();
  ScaledMetric.init(wrappedValue:)();
  uint64_t v7 = (uint64_t *)(a4 + *(int *)(v6 + 44));
  *uint64_t v7 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_10109C850);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (uint64_t *)(a4 + *(int *)(v6 + 48));
  *uint64_t v8 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_10109C920);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100612870@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v35 = a4;
  uint64_t v34 = a3;
  char v5 = a2;
  uint64_t v36 = a1;
  uint64_t v40 = a5;
  int v6 = a2 & 0x100;
  uint64_t v38 = sub_100063814(&qword_1010B37D0);
  uint64_t v7 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100063814(&qword_1010B37D8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100063814(&qword_1010B37E0);
  __chkstk_darwin(v39);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100063814(&qword_1010B37E8);
  __chkstk_darwin(v37);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100063814(&qword_1010B37F0);
  __n128 v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v5)
  {
    if (!v6) {
      goto LABEL_3;
    }
LABEL_6:
    char v23 = v5 & 1;
    uint64_t v24 = static HorizontalAlignment.listRowSeparatorLeading.getter();
    uint64_t v25 = swift_allocObject();
    *(unsigned char *)(v25 + 16) = v23;
    *(unsigned char *)(v25 + 17) = BYTE1(v6);
    *(void *)(v25 + 24) = v34;
    *(unsigned char *)(v25 + 32) = v35 & 1;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v20, v36, v38);
    uint64_t v26 = (uint64_t *)&v20[*(int *)(v17 + 36)];
    *uint64_t v26 = v24;
    v26[1] = (uint64_t)sub_100622254;
    void v26[2] = v25;
    sub_10006CAB8((uint64_t)v20, (uint64_t)v16, &qword_1010B37F0);
    swift_storeEnumTagMultiPayload();
    sub_1006222B0();
    sub_100622350();
    _ConditionalContent<>.init(storage:)();
    uint64_t v27 = (uint64_t)v20;
    uint64_t v28 = &qword_1010B37F0;
    return sub_1000637B8(v27, v28);
  }
  if (!v6) {
    goto LABEL_6;
  }
LABEL_3:
  if (v35)
  {
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
    uint64_t v22 = v38;
    v21(v9, v36, v38, v18);
    ((void (*)(char *, char *, uint64_t))v21)(v12, v9, v22);
    swift_storeEnumTagMultiPayload();
    sub_1006222B0();
    sub_100063858(&qword_1010B3800, &qword_1010B37D0);
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  }
  else
  {
    uint64_t v29 = static HorizontalAlignment.listRowSeparatorLeading.getter();
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v20, v36, v38);
    uint64_t v31 = (uint64_t *)&v20[*(int *)(v17 + 36)];
    *uint64_t v31 = v29;
    v31[1] = (uint64_t)sub_100622400;
    v31[2] = v30;
    sub_10006CAB8((uint64_t)v20, (uint64_t)v12, &qword_1010B37F0);
    swift_storeEnumTagMultiPayload();
    sub_1006222B0();
    sub_100063858(&qword_1010B3800, &qword_1010B37D0);
    _ConditionalContent<>.init(storage:)();
    sub_1000637B8((uint64_t)v20, &qword_1010B37F0);
  }
  sub_10006CAB8((uint64_t)v14, (uint64_t)v16, &qword_1010B37E0);
  swift_storeEnumTagMultiPayload();
  sub_1006222B0();
  sub_100622350();
  _ConditionalContent<>.init(storage:)();
  uint64_t v27 = (uint64_t)v14;
  uint64_t v28 = &qword_1010B37E0;
  return sub_1000637B8(v27, v28);
}

uint64_t sub_100612D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (v2[1]) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100612870(a1, v3 | *v2, *((void *)v2 + 1), v2[16], a2);
}

uint64_t sub_100612D94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ColorScheme();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v15 - v11;
  EnvironmentValues.colorScheme.getter();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for ColorScheme.light(_:), v6);
  static ColorScheme.== infix(_:_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  v13(v12, v6);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Color.RGBColorSpace.sRGB(_:), v2);
  uint64_t result = Color.init(_:red:green:blue:opacity:)();
  *a1 = result;
  return result;
}

uint64_t sub_100612FC8()
{
  if (qword_1010985A0 != -1) {
    uint64_t result = swift_once();
  }
  if (byte_1010B2D10 != 1) {
    return DynamicTypeSize.isAccessibilitySize.getter();
  }
  return result;
}

uint64_t sub_10061306C(uint64_t a1)
{
  uint64_t v32 = a1;
  uint64_t v1 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v31 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v30 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100063814(&qword_10109D430);
  __chkstk_darwin(v3);
  char v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_1010B5280);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v29 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v15 = type metadata accessor for DynamicTypeSize();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  __n128 v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if (byte_1010B2D10) {
    goto LABEL_13;
  }
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for DynamicTypeSize.accessibility3(_:), v15);
  sub_100616A1C((unint64_t *)&qword_101099CD0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  char v19 = dispatch thunk of static Comparable.< infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_10006CAB8(v32, (uint64_t)v14, &qword_1010B5280);
  if (v19)
  {
    uint64_t v20 = &qword_1010B5280;
    uint64_t v21 = (uint64_t)v14;
LABEL_12:
    sub_1000637B8(v21, v20);
LABEL_13:
    char v25 = 0;
    return v25 & 1;
  }
  uint64_t v22 = v31;
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v11, enum case for UserInterfaceSizeClass.compact(_:), v1);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v11, 0, 1, v1);
  uint64_t v23 = (uint64_t)&v5[*(int *)(v3 + 48)];
  sub_10006CAB8((uint64_t)v14, (uint64_t)v5, &qword_1010B5280);
  sub_10006CAB8((uint64_t)v11, v23, &qword_1010B5280);
  uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v24((uint64_t)v5, 1, v1) != 1)
  {
    sub_10006CAB8((uint64_t)v5, (uint64_t)v8, &qword_1010B5280);
    if (v24(v23, 1, v1) != 1)
    {
      uint64_t v27 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v30, v23, v1);
      sub_100616A1C(&qword_10109D438, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v22 + 8);
      v28(v27, v1);
      sub_1000637B8((uint64_t)v11, &qword_1010B5280);
      sub_1000637B8((uint64_t)v14, &qword_1010B5280);
      v28(v8, v1);
      sub_1000637B8((uint64_t)v5, &qword_1010B5280);
      return v25 & 1;
    }
    sub_1000637B8((uint64_t)v11, &qword_1010B5280);
    sub_1000637B8((uint64_t)v14, &qword_1010B5280);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v1);
    goto LABEL_11;
  }
  sub_1000637B8((uint64_t)v11, &qword_1010B5280);
  sub_1000637B8((uint64_t)v14, &qword_1010B5280);
  if (v24(v23, 1, v1) != 1)
  {
LABEL_11:
    uint64_t v20 = &qword_10109D430;
    uint64_t v21 = (uint64_t)v5;
    goto LABEL_12;
  }
  sub_1000637B8((uint64_t)v5, &qword_1010B5280);
  char v25 = 1;
  return v25 & 1;
}

double sub_1006135C4(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for DynamicTypeSize();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if (byte_1010B2D10 != 1)
  {
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for DynamicTypeSize.accessibility3(_:), v3);
    char v8 = static DynamicTypeSize.< infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v8)
    {
      if (a2) {
        return 32.0;
      }
    }
    else if ((a2 & 1) == 0)
    {
      return 72.0;
    }
    return 48.0;
  }
  double result = 48.0;
  if (a2) {
    return 32.0;
  }
  return result;
}

uint64_t type metadata accessor for Tracklist.EmptyCell(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B2EB0);
}

uint64_t sub_100613774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 72);
}

void sub_10061377C()
{
  sub_10061FA5C(319, (unint64_t *)&qword_1010B7220, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_1001E41C8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1006138A0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = a2[7];
    long long v10 = *((_OWORD *)a2 + 4);
    long long v11 = *((_OWORD *)a2 + 5);
    long long v12 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)((char *)a2 + 105);
    *(_OWORD *)(a1 + 80) = v11;
    *(_OWORD *)(a1 + 96) = v12;
    uint64_t v13 = *(int *)(a3 + 80);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    *(_OWORD *)(a1 + 64) = v10;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = *(int *)(a3 + 84);
    char v19 = (void *)(a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    sub_100063814((uint64_t *)&unk_10109C920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = sub_100063814(&qword_1010B5280);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
    }
    else
    {
      *char v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100613B5C(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 80);
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 84);
  sub_100063814((uint64_t *)&unk_10109C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v10 = *(void *)(v7 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
    if (!result)
    {
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
      return v9(v6, v7);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_100613D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v9 = *(_OWORD *)(a2 + 64);
  long long v10 = *(_OWORD *)(a2 + 80);
  long long v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  *(_OWORD *)(a1 + 80) = v10;
  *(_OWORD *)(a1 + 96) = v11;
  uint64_t v12 = *(int *)(a3 + 80);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *(_OWORD *)(a1 + 64) = v9;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = *(int *)(a3 + 84);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  sub_100063814((uint64_t *)&unk_10109C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_100063814(&qword_1010B5280);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100613F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 80);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_1000637B8(a1 + v6, (uint64_t *)&unk_10109C850);
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = *(int *)(a3 + 84);
    long long v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_1000637B8(a1 + v10, (uint64_t *)&unk_10109C920);
    sub_100063814((uint64_t *)&unk_10109C920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = sub_100063814(&qword_1010B5280);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    else
    {
      *long long v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100614284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v7 = *(int *)(a3 + 80);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  uint64_t v10 = sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = *(int *)(a3 + 84);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_100063814((uint64_t *)&unk_10109C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
    {
      uint64_t v18 = sub_100063814(&qword_1010B5280);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v13, v14, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006144E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_release();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 80);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (const void *)(a2 + v9);
    sub_1000637B8(a1 + v9, (uint64_t *)&unk_10109C850);
    uint64_t v12 = sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    uint64_t v14 = *(int *)(a3 + 84);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    sub_1000637B8(a1 + v14, (uint64_t *)&unk_10109C920);
    uint64_t v17 = sub_100063814((uint64_t *)&unk_10109C920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      {
        uint64_t v20 = sub_100063814(&qword_1010B5280);
        memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v15, v16, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1006147AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006147C0);
}

uint64_t sub_1006147C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010B71B0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 80);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100063814(&qword_10109D278);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 84);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1006148F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100614908);
}

uint64_t sub_100614908(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010B71B0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 80);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100063814(&qword_10109D278);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 84);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for Tracklist.Cell()
{
  return swift_getGenericMetadata();
}

void *sub_100614A54(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = a2[1];
    long long v7 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    uint64_t v8 = a3[7];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)((char *)a2 + 57);
    uint64_t v11 = sub_100063814(&qword_1010A5D00);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12((uint64_t)v4 + a3[8], (uint64_t)a2 + a3[8], v11);
    v12((uint64_t)v4 + a3[9], (uint64_t)a2 + a3[9], v11);
    v12((uint64_t)v4 + a3[10], (uint64_t)a2 + a3[10], v11);
    uint64_t v13 = a3[11];
    uint64_t v14 = (void *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[12];
    uint64_t v19 = (void *)((char *)v4 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    sub_100063814((uint64_t *)&unk_10109C920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = sub_100063814(&qword_1010B5280);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_100614D80(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_100063814(&qword_1010A5D00);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[8], v5);
  v6(a1 + a2[9], v5);
  v6(a1 + a2[10], v5);
  uint64_t v7 = a1 + a2[11];
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[12];
  sub_100063814((uint64_t *)&unk_10109C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v13 = *(void *)(v10 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v10);
    if (!result)
    {
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
      return v12(v9, v10);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_100614FBC(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  uint64_t v10 = sub_100063814(&qword_1010A5D00);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v11(a1 + a3[9], a2 + a3[9], v10);
  v11(a1 + a3[10], a2 + a3[10], v10);
  uint64_t v12 = a3[11];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[12];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  sub_100063814((uint64_t *)&unk_10109C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_100063814(&qword_1010B5280);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100615298(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100063814(&qword_1010A5D00);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + a3[8], a2 + a3[8], v9);
  v10(a1 + a3[9], a2 + a3[9], v9);
  v10(a1 + a3[10], a2 + a3[10], v9);
  if (a1 != a2)
  {
    uint64_t v11 = a3[11];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    sub_1000637B8(a1 + v11, (uint64_t *)&unk_10109C850);
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = a3[12];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (void *)(a2 + v15);
    sub_1000637B8(a1 + v15, (uint64_t *)&unk_10109C920);
    sub_100063814((uint64_t *)&unk_10109C920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = sub_100063814(&qword_1010B5280);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
    }
    else
    {
      *uint64_t v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1006155D4(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  uint64_t v10 = sub_100063814(&qword_1010A5D00);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v11(a1 + a3[9], a2 + a3[9], v10);
  v11(a1 + a3[10], a2 + a3[10], v10);
  uint64_t v12 = a3[11];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = sub_100063814((uint64_t *)&unk_10109C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
    {
      uint64_t v23 = sub_100063814(&qword_1010B5280);
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v18, v19, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006158C8(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + 64) = v6;
  uint64_t v10 = sub_100063814(&qword_1010A5D00);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  v11(a1 + a3[9], a2 + a3[9], v10);
  v11(a1 + a3[10], a2 + a3[10], v10);
  if (a1 != a2)
  {
    uint64_t v12 = a3[11];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_1000637B8(a1 + v12, (uint64_t *)&unk_10109C850);
    uint64_t v15 = sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    uint64_t v17 = a3[12];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (const void *)(a2 + v17);
    sub_1000637B8(a1 + v17, (uint64_t *)&unk_10109C920);
    uint64_t v20 = sub_100063814((uint64_t *)&unk_10109C920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
      {
        uint64_t v23 = sub_100063814(&qword_1010B5280);
        memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v18, v19, v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100615C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100615C18);
}

uint64_t sub_100615C18(unsigned __int8 *a1, uint64_t a2, int *a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  uint64_t v10 = sub_100063814(&qword_1010A5D00);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(v10 - 8);
    uint64_t v13 = a3[7];
LABEL_9:
    uint64_t v15 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v12 + 48);
    return v15(&a1[v13], a2, v11);
  }
  uint64_t v14 = sub_100063814(&qword_1010B71B0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v11 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_9;
  }
  uint64_t v16 = sub_100063814(&qword_10109D278);
  uint64_t v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = &a1[a3[12]];

  return v17(v19, a2, v18);
}

uint64_t sub_100615D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100615DB0);
}

unsigned char *sub_100615DB0(unsigned char *result, uint64_t a2, int a3, int *a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
    return result;
  }
  uint64_t v8 = sub_100063814(&qword_1010A5D00);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[7];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return (unsigned char *)v13(&v5[v11], a2, a2, v9);
  }
  uint64_t v12 = sub_100063814(&qword_1010B71B0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[11];
    goto LABEL_7;
  }
  uint64_t v14 = sub_100063814(&qword_10109D278);
  uint64_t v15 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = &v5[a4[12]];

  return (unsigned char *)v15(v17, a2, a2, v16);
}

void sub_100615F30()
{
  sub_10037C634();
  if (v0 <= 0x3F)
  {
    sub_10061FA5C(319, (unint64_t *)&qword_1010B7220, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_1001E41C8();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_10061608C()
{
  return sub_100620FF8();
}

uint64_t sub_1006160A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1006160C0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v32 = a2;
  uint64_t v5 = type metadata accessor for DynamicTypeSize();
  uint64_t v33 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100063814(&qword_10109D430);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100063814(&qword_1010B5280);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v30 - v19;
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if ((byte_1010B2D10 & 1) == 0)
  {
    uint64_t v31 = v5;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v20, enum case for UserInterfaceSizeClass.compact(_:), v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v20, 0, 1, v8);
    uint64_t v22 = (uint64_t)&v14[*(int *)(v12 + 48)];
    sub_10006CAB8(a1, (uint64_t)v14, &qword_1010B5280);
    sub_10006CAB8((uint64_t)v20, v22, &qword_1010B5280);
    uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v23((uint64_t)v14, 1, v8) == 1)
    {
      sub_1000637B8((uint64_t)v20, &qword_1010B5280);
      if (v23(v22, 1, v8) == 1)
      {
        sub_1000637B8((uint64_t)v14, &qword_1010B5280);
LABEL_16:
        uint64_t v25 = v33;
        uint64_t v26 = v31;
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v7, v32, v31);
        goto LABEL_17;
      }
    }
    else
    {
      sub_10006CAB8((uint64_t)v14, (uint64_t)v17, &qword_1010B5280);
      if (v23(v22, 1, v8) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v11, v22, v8);
        sub_100616A1C(&qword_10109D438, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
        char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v28 = *(void (**)(char *, uint64_t))(v9 + 8);
        v28(v11, v8);
        sub_1000637B8((uint64_t)v20, &qword_1010B5280);
        v28(v17, v8);
        sub_1000637B8((uint64_t)v14, &qword_1010B5280);
        if (v27) {
          goto LABEL_16;
        }
LABEL_11:
        if (qword_1010985A8 != -1) {
          swift_once();
        }
        double v24 = *(double *)&qword_101129CE0;
        uint64_t v25 = v33;
        uint64_t v26 = v31;
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v7, v32, v31);
        if (v24 <= a3)
        {
          char v21 = DynamicTypeSize.isAccessibilitySize.getter();
LABEL_18:
          (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
          return v21 & 1;
        }
LABEL_17:
        char v21 = 1;
        goto LABEL_18;
      }
      sub_1000637B8((uint64_t)v20, &qword_1010B5280);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    }
    sub_1000637B8((uint64_t)v14, &qword_10109D430);
    goto LABEL_11;
  }
  char v21 = 1;
  return v21 & 1;
}

unint64_t sub_1006165D0()
{
  unint64_t result = qword_1010B2F38;
  if (!qword_1010B2F38)
  {
    sub_10006389C(&qword_1010B2F10);
    sub_100063858(&qword_1010B2F40, &qword_1010B2F08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B2F38);
  }
  return result;
}

uint64_t sub_100616678()
{
  unint64_t v1 = (int *)type metadata accessor for Tracklist.EmptyCell(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  uint64_t v3 = v2 + v1[7];
  uint64_t v4 = sub_100063814(&qword_1010A5D00);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v2 + v1[8], v4);
  v5(v2 + v1[9], v4);
  v5(v2 + v1[10], v4);
  uint64_t v6 = v2 + v1[11];
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v2 + v1[12];
  sub_100063814((uint64_t *)&unk_10109C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

double sub_1006168E8()
{
  type metadata accessor for Tracklist.EmptyCell(0);
  static HorizontalAlignment.leading.getter();
  ViewDimensions.subscript.getter();
  return v0 + sub_100611A60();
}

uint64_t sub_100616980(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    sub_100063858(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100616A1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for Tracklist.LeadingIcon(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B3478);
}

uint64_t type metadata accessor for Tracklist.TrailingIcons()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for Tracklist.VerticalTextStack()
{
  return sub_10004CF5C();
}

uint64_t type metadata accessor for Tracklist.HorizontalTextStack()
{
  return sub_10004CF5C();
}

uint64_t sub_100616ACC()
{
  return sub_100616B78((uint64_t (*)(void, void, void, void, void, void))sub_1005FE8BC);
}

uint64_t sub_100616AE4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1006046C0(*(void *)(v1 + 16), *(void *)(v1 + 32), a1);
}

unint64_t sub_100616AF4()
{
  unint64_t result = qword_1010B30A0;
  if (!qword_1010B30A0)
  {
    sub_10006389C(&qword_1010B3098);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B30A0);
  }
  return result;
}

uint64_t sub_100616B60()
{
  return sub_100616B78((uint64_t (*)(void, void, void, void, void, void))sub_100604784);
}

uint64_t sub_100616B78(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[7], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_100616B90()
{
  return sub_100617110((uint64_t (*)(void, void, void, void, void, void, void))sub_10060184C);
}

uint64_t sub_100616BA8()
{
  return sub_100617110((uint64_t (*)(void, void, void, void, void, void, void))sub_1005FF77C);
}

uint64_t sub_100616BC0()
{
  return sub_100617110((uint64_t (*)(void, void, void, void, void, void, void))sub_1006001E4);
}

uint64_t type metadata accessor for Tracklist.LeadingNumber(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B3328);
}

uint64_t type metadata accessor for Tracklist.Artwork(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B33D8);
}

uint64_t sub_100616C18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100616C80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_100616CE8()
{
  unint64_t result = qword_1010B30B0;
  if (!qword_1010B30B0)
  {
    sub_10006389C(&qword_1010B3058);
    sub_100616A1C(&qword_1010B30B8, (void (*)(uint64_t))type metadata accessor for Tracklist.Artwork);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B30B0);
  }
  return result;
}

unint64_t sub_100616D8C()
{
  unint64_t result = qword_1010B30C0;
  if (!qword_1010B30C0)
  {
    sub_10006389C(&qword_1010B3060);
    sub_100616A1C(&qword_1010B30C8, (void (*)(uint64_t))type metadata accessor for Tracklist.LeadingNumber);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B30C0);
  }
  return result;
}

unint64_t sub_100616E30()
{
  unint64_t result = qword_1010B30D8;
  if (!qword_1010B30D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B30D8);
  }
  return result;
}

uint64_t sub_100616E84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100616EE4()
{
  return sub_100617110((uint64_t (*)(void, void, void, void, void, void, void))sub_1006037E0);
}

unint64_t sub_100616EFC()
{
  unint64_t result = qword_1010B30E8;
  if (!qword_1010B30E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B30E8);
  }
  return result;
}

unint64_t sub_100616F50()
{
  unint64_t result = qword_1010B30F0;
  if (!qword_1010B30F0)
  {
    sub_10006389C(&qword_1010B3070);
    sub_100616FCC();
    sub_100616EFC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B30F0);
  }
  return result;
}

unint64_t sub_100616FCC()
{
  unint64_t result = qword_1010B30F8;
  if (!qword_1010B30F8)
  {
    sub_10006389C(&qword_1010B30E0);
    sub_100063858(&qword_1010B3100, &qword_1010B3108);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B30F8);
  }
  return result;
}

unint64_t sub_100617064()
{
  unint64_t result = qword_1010B3110;
  if (!qword_1010B3110)
  {
    sub_10006389C(&qword_1010B3078);
    sub_100586390(&qword_1010B3118, &qword_1010B3088);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3110);
  }
  return result;
}

uint64_t sub_1006170F8()
{
  return sub_100617110((uint64_t (*)(void, void, void, void, void, void, void))sub_100603E20);
}

uint64_t sub_100617110(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(*(void *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

unint64_t sub_10061712C()
{
  unint64_t result = qword_1010B3120;
  if (!qword_1010B3120)
  {
    sub_10006389C(&qword_1010B3080);
    sub_100063858(&qword_1010B3128, &qword_1010B3130);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3120);
  }
  return result;
}

void sub_1006171C4()
{
  sub_10061FA5C(319, (unint64_t *)&qword_1010B7220, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1006172A0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    uint64_t v6 = *(int *)(a3 + 44);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    *(_OWORD *)(a1 + 65) = *(_OWORD *)((char *)a2 + 65);
    swift_unknownObjectRetain();
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1006173E8(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1006174A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 44);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  swift_unknownObjectRetain();
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100617590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 44);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_1000637B8(a1 + v6, (uint64_t *)&unk_10109C850);
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1006176E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v4 = *(int *)(a3 + 44);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  uint64_t v7 = sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006177E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 44);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_1000637B8(a1 + v7, (uint64_t *)&unk_10109C850);
    uint64_t v10 = sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10061791C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100617930);
}

uint64_t sub_100617930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010B71B0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1006179E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006179F8);
}

uint64_t sub_1006179F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010B71B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SeparatorAlignmentModifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[17]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SeparatorAlignmentModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeparatorAlignmentModifier()
{
  return &type metadata for SeparatorAlignmentModifier;
}

void sub_100617B4C()
{
  sub_10061FA5C(319, (unint64_t *)&qword_1010B7220, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100617C1C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = *(int *)(a3 + 40);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_unknownObjectRetain();
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100617D44(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100617DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 40);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  swift_unknownObjectRetain();
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100617ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 40);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_1000637B8(a1 + v6, (uint64_t *)&unk_10109C850);
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100617FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 40);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1006180AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 40);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_1000637B8(a1 + v7, (uint64_t *)&unk_10109C850);
    uint64_t v10 = sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1006181B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006181C4);
}

uint64_t sub_1006181C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010B71B0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100618278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10061828C);
}

uint64_t sub_10061828C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010B71B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100618338()
{
  sub_10061FA5C(319, (unint64_t *)&qword_1010B7220, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_1001E41C8();
    if (v1 <= 0x3F)
    {
      sub_10037C634();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100618484(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    long long v10 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v10;
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    uint64_t v11 = a3[18];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    *(_OWORD *)(a1 + 89) = *(_OWORD *)((char *)a2 + 89);
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a3[19];
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    sub_100063814((uint64_t *)&unk_10109C920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        uint64_t v21 = sub_100063814(&qword_1010B5280);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[20];
    uint64_t v23 = a1 + v22;
    uint64_t v24 = (uint64_t)a2 + v22;
    uint64_t v25 = sub_100063814(&qword_1010A5D00);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return a1;
}

uint64_t sub_100618774(uint64_t a1, int *a2)
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + a2[18];
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[19];
  sub_100063814((uint64_t *)&unk_10109C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[20];
  uint64_t v10 = sub_100063814(&qword_1010A5D00);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t sub_100618938(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  long long v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  uint64_t v10 = a3[18];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[19];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  sub_100063814((uint64_t *)&unk_10109C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      uint64_t v19 = sub_100063814(&qword_1010B5280);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
  }
  else
  {
    *uint64_t v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[20];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = sub_100063814(&qword_1010A5D00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

uint64_t sub_100618BD8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  if (a1 != a2)
  {
    uint64_t v6 = a3[18];
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    sub_1000637B8(a1 + v6, (uint64_t *)&unk_10109C850);
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[19];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_1000637B8(a1 + v10, (uint64_t *)&unk_10109C920);
    sub_100063814((uint64_t *)&unk_10109C920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = sub_100063814(&qword_1010B5280);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v16 = a3[20];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_100063814(&qword_1010A5D00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

_OWORD *sub_100618F0C(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  long long v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a3[18];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  *(_OWORD *)((char *)a1 + 89) = *(_OWORD *)((char *)a2 + 89);
  uint64_t v12 = sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  uint64_t v14 = a3[19];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_100063814((uint64_t *)&unk_10109C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
    {
      uint64_t v20 = sub_100063814(&qword_1010B5280);
      memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v15, v16, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  uint64_t v21 = a3[20];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = sub_100063814(&qword_1010A5D00);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

uint64_t sub_1006191A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_unknownObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_release();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  if (a1 != a2)
  {
    uint64_t v9 = a3[18];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (const void *)(a2 + v9);
    sub_1000637B8(a1 + v9, (uint64_t *)&unk_10109C850);
    uint64_t v12 = sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    uint64_t v14 = a3[19];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    sub_1000637B8(a1 + v14, (uint64_t *)&unk_10109C920);
    uint64_t v17 = sub_100063814((uint64_t *)&unk_10109C920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      {
        uint64_t v20 = sub_100063814(&qword_1010B5280);
        memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v15, v16, v18);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  uint64_t v21 = a3[20];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_100063814(&qword_1010A5D00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t sub_1006194A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006194B8);
}

uint64_t sub_1006194B8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_100063814(&qword_1010B71B0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[18];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_100063814(&qword_10109D278);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[19];
    goto LABEL_9;
  }
  uint64_t v14 = sub_100063814(&qword_1010A5D00);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[20];

  return v15(v17, a2, v16);
}

uint64_t sub_10061963C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100619650);
}

uint64_t sub_100619650(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_100063814(&qword_1010B71B0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[18];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_100063814(&qword_10109D278);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[19];
    goto LABEL_7;
  }
  uint64_t v14 = sub_100063814(&qword_1010A5D00);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[20];

  return v15(v17, a2, a2, v16);
}

uint64_t getEnumTagSinglePayload for Tracklist.VideoIcon(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Tracklist.VideoIcon(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100619940);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Tracklist.VideoIcon()
{
  return &type metadata for Tracklist.VideoIcon;
}

uint64_t sub_100619978(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    uint64_t v7 = a2[3];
    *(void *)(v4 + 16) = a2[2];
    *(void *)(v4 + 24) = v7;
    *(unsigned char *)(v4 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v8 = a3[9];
    uint64_t v9 = v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    *(void *)(v4 + 40) = a2[5];
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v11 = sub_100063814(&qword_1010A5D00);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(v4 + a3[10], (uint64_t)a2 + a3[10], v11);
    uint64_t v13 = a3[11];
    uint64_t v14 = (void *)(v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[12];
    uint64_t v19 = (void *)(v4 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    sub_100063814((uint64_t *)&unk_10109C920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = sub_100063814(&qword_1010B5280);
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_100619C78(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = sub_100063814(&qword_1010A5D00);
  unsigned int v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[10], v5);
  uint64_t v7 = a1 + a2[11];
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + a2[12];
  sub_100063814((uint64_t *)&unk_10109C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v13 = *(void *)(v10 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v10);
    if (!result)
    {
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8);
      return v12(v9, v10);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_100619E94(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v10 = sub_100063814(&qword_1010A5D00);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[10], a2 + a3[10], v10);
  uint64_t v12 = a3[11];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[12];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  sub_100063814((uint64_t *)&unk_10109C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_100063814(&qword_1010B5280);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  else
  {
    *uint64_t v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10061A144(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 40) = a2[5];
  swift_retain();
  swift_release();
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t)a2 + v7;
  uint64_t v10 = sub_100063814(&qword_1010A5D00);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[10], (uint64_t)a2 + a3[10], v10);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v12 = a3[11];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    sub_1000637B8(a1 + v12, (uint64_t *)&unk_10109C850);
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a3[12];
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    sub_1000637B8(a1 + v16, (uint64_t *)&unk_10109C920);
    sub_100063814((uint64_t *)&unk_10109C920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        uint64_t v21 = sub_100063814(&qword_1010B5280);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10061A440(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = a3[9];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100063814(&qword_1010A5D00);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + a3[10], a2 + a3[10], v9);
  uint64_t v11 = a3[11];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[12];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v19 = sub_100063814((uint64_t *)&unk_10109C920);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20))
    {
      uint64_t v22 = sub_100063814(&qword_1010B5280);
      memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v17, v18, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10061A6FC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_100063814(&qword_1010A5D00);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[10], a2 + a3[10], v10);
  if (a1 != a2)
  {
    uint64_t v12 = a3[11];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_1000637B8(a1 + v12, (uint64_t *)&unk_10109C850);
    uint64_t v15 = sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    uint64_t v17 = a3[12];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (const void *)(a2 + v17);
    sub_1000637B8(a1 + v17, (uint64_t *)&unk_10109C920);
    uint64_t v20 = sub_100063814((uint64_t *)&unk_10109C920);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21))
      {
        uint64_t v23 = sub_100063814(&qword_1010B5280);
        memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v18, v19, v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v21);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10061A9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10061AA0C);
}

uint64_t sub_10061AA0C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  uint64_t v9 = sub_100063814(&qword_1010A5D00);
  if (*(_DWORD *)(*(void *)(v9 - 8) + 84) == a2)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v12 = a3[9];
LABEL_11:
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    return v14(a1 + v12, a2, v10);
  }
  uint64_t v13 = sub_100063814(&qword_1010B71B0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v10 = v13;
    uint64_t v11 = *(void *)(v13 - 8);
    uint64_t v12 = a3[11];
    goto LABEL_11;
  }
  uint64_t v15 = sub_100063814(&qword_10109D278);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[12];

  return v16(v18, a2, v17);
}

uint64_t sub_10061AB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10061ABB0);
}

uint64_t sub_10061ABB0(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
    return result;
  }
  uint64_t v8 = sub_100063814(&qword_1010A5D00);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[9];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_100063814(&qword_1010B71B0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[11];
    goto LABEL_7;
  }
  uint64_t v14 = sub_100063814(&qword_10109D278);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[12];

  return v15(v17, a2, a2, v16);
}

void sub_10061AD34()
{
  sub_10037C634();
  if (v0 <= 0x3F)
  {
    sub_10061FA5C(319, (unint64_t *)&qword_1010B7220, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_1001E41C8();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_10061AE94(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v82 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v82(a2, 1, v7))
    {
      uint64_t v9 = sub_100063814((uint64_t *)&unk_1010A1D20);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(v7 + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for Artwork.CropStyle();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_100063814((uint64_t *)&unk_10109C050);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v18 = (int *)type metadata accessor for ArtworkImage.Info(0);
    uint64_t v19 = v18[5];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_100063814(&qword_1010A4530);
    uint64_t v85 = *(void *)(v22 - 8);
    uint64_t v86 = v22;
    uint64_t v80 = *(unsigned int (**)(char *, uint64_t))(v85 + 48);
    if (v80(v21, 10))
    {
      uint64_t v23 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v78 = v8;
      uint64_t v24 = type metadata accessor for Playlist.Variant();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v21, 1, v24))
      {
        uint64_t v26 = sub_100063814(&qword_1010B1090);
        memcpy(v20, v21, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v20, v21, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v20, 0, 1, v24);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v20, 0, 10, v86);
      uint64_t v8 = v78;
    }
    uint64_t v27 = v18[6];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    *(void *)uint64_t v28 = *(void *)v29;
    v28[8] = v29[8];
    uint64_t v30 = v18[7];
    uint64_t v31 = (_OWORD *)((char *)a1 + v30);
    uint64_t v32 = (_OWORD *)((char *)a2 + v30);
    *(_OWORD *)((char *)v31 + 26) = *(_OWORD *)((char *)v32 + 26);
    long long v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = v18[8];
    int v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    *(_OWORD *)int v35 = *(_OWORD *)v36;
    v35[16] = v36[16];
    uint64_t v37 = a3[5];
    uint64_t v38 = (char *)a1 + v37;
    uint64_t v39 = (char *)a2 + v37;
    uint64_t v40 = *((void *)v18 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v40 + 48))((char *)a2 + v37, 1, v18))
    {
      uint64_t v41 = sub_100063814(&qword_10109F0F0);
      memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      if (v82((uint64_t *)v39, 1, v7))
      {
        uint64_t v42 = sub_100063814((uint64_t *)&unk_1010A1D20);
        memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        uint64_t v79 = v8;
        uint64_t v43 = type metadata accessor for Artwork();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v38, v39, v43);
        uint64_t v44 = *(int *)(v7 + 20);
        uint64_t v83 = &v38[v44];
        uint64_t v45 = &v39[v44];
        uint64_t v46 = type metadata accessor for Artwork.CropStyle();
        uint64_t v77 = *(void *)(v46 - 8);
        unsigned __int8 v81 = v45;
        uint64_t v47 = v45;
        uint64_t v48 = v46;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v47, 1, v46))
        {
          uint64_t v49 = sub_100063814((uint64_t *)&unk_10109C050);
          memcpy(v83, v81, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v83, v81, v48);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v83, 0, 1, v48);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v38, 0, 1, v7);
      }
      uint64_t v50 = v18[5];
      uint64_t v51 = &v38[v50];
      uint64_t v52 = &v39[v50];
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v80)(&v39[v50], 10, v86))
      {
        uint64_t v53 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        uint64_t v54 = type metadata accessor for Playlist.Variant();
        uint64_t v84 = *(void *)(v54 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v52, 1, v54))
        {
          uint64_t v55 = sub_100063814(&qword_1010B1090);
          memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v51, v52, v54);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v51, 0, 1, v54);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v51, 0, 10, v86);
      }
      uint64_t v56 = v18[6];
      uint64_t v57 = &v38[v56];
      uint64_t v58 = &v39[v56];
      *(void *)uint64_t v57 = *(void *)v58;
      v57[8] = v58[8];
      uint64_t v59 = v18[7];
      uint64_t v60 = &v38[v59];
      uint64_t v61 = &v39[v59];
      *(_OWORD *)(v60 + 26) = *(_OWORD *)(v61 + 26);
      long long v62 = *((_OWORD *)v61 + 1);
      *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + 1) = v62;
      uint64_t v63 = v18[8];
      uint64_t v64 = &v38[v63];
      uint64_t v65 = &v39[v63];
      *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
      v64[16] = v65[16];
      (*(void (**)(char *, void, uint64_t, int *))(v40 + 56))(v38, 0, 1, v18);
    }
    uint64_t v66 = a3[6];
    uint64_t v67 = a3[7];
    uint64_t v68 = (uint64_t *)((char *)a1 + v66);
    uint64_t v69 = (uint64_t *)((char *)a2 + v66);
    uint64_t v70 = v69[1];
    uint64_t v71 = *(uint64_t *)((char *)a2 + v67);
    *uint64_t v68 = *v69;
    v68[1] = v70;
    *(uint64_t *)((char *)a1 + v67) = v71;
    uint64_t v72 = a3[8];
    uint64_t v73 = (uint64_t *)((char *)a1 + v72);
    uint64_t v74 = (uint64_t *)((char *)a2 + v72);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v75 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
    }
    else
    {
      *uint64_t v73 = *v74;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10061B7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  if (!v27(a1, 1, v4))
  {
    uint64_t v5 = type metadata accessor for Artwork();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    uint64_t v6 = a1 + *(int *)(v4 + 20);
    uint64_t v7 = type metadata accessor for Artwork.CropStyle();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  uint64_t v9 = type metadata accessor for ArtworkImage.Info(0);
  uint64_t v10 = a1 + *(int *)(v9 + 20);
  uint64_t v11 = sub_100063814(&qword_1010A4530);
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  if (!v12(v10, 10, v11))
  {
    uint64_t v13 = type metadata accessor for Playlist.Variant();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v10, v13);
    }
  }
  uint64_t v15 = a1 + *(int *)(a2 + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v15, 1, v9))
  {
    if (!v27(v15, 1, v4))
    {
      uint64_t v16 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      uint64_t v17 = v15 + *(int *)(v4 + 20);
      uint64_t v18 = type metadata accessor for Artwork.CropStyle();
      uint64_t v19 = *(void *)(v18 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
      }
    }
    uint64_t v20 = v15 + *(int *)(v9 + 20);
    if (!v12(v20, 10, v11))
    {
      uint64_t v21 = type metadata accessor for Playlist.Variant();
      uint64_t v22 = *(void *)(v21 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v23 = a1 + *(int *)(a2 + 32);
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = type metadata accessor for DynamicTypeSize();
    uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);
    return v25(v23, v24);
  }
  else
  {
    return swift_release();
  }
}

char *sub_10061BC6C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v76 = v7;
  uint64_t v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v79(a2, 1, v6))
  {
    uint64_t v8 = sub_100063814((uint64_t *)&unk_1010A1D20);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for Artwork();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for Artwork.CropStyle();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_100063814((uint64_t *)&unk_10109C050);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  uint64_t v17 = v16[5];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_100063814(&qword_1010A4530);
  uint64_t v84 = *(void *)(v20 - 8);
  uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48);
  if (v77(v19, 10, v20))
  {
    uint64_t v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v82 = a3;
    uint64_t v22 = type metadata accessor for Playlist.Variant();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v19, 1, v22))
    {
      uint64_t v24 = sub_100063814(&qword_1010B1090);
      memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v18, v19, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v18, 0, 1, v22);
    }
    a3 = v82;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v18, 0, 10, v20);
  }
  uint64_t v25 = v16[6];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = v16[7];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  *(_OWORD *)(v29 + 26) = *(_OWORD *)(v30 + 26);
  long long v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  uint64_t v32 = v16[8];
  long long v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  *(_OWORD *)long long v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  uint64_t v35 = a3[5];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v38 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))(&a2[v35], 1, v16))
  {
    uint64_t v39 = sub_100063814(&qword_10109F0F0);
    memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    uint64_t v83 = a3;
    if (v79(v37, 1, v6))
    {
      uint64_t v40 = sub_100063814((uint64_t *)&unk_1010A1D20);
      memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      uint64_t v41 = type metadata accessor for Artwork();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v36, v37, v41);
      uint64_t v42 = *(int *)(v6 + 20);
      uint64_t v80 = &v36[v42];
      uint64_t v43 = &v37[v42];
      uint64_t v44 = type metadata accessor for Artwork.CropStyle();
      uint64_t v75 = *(void *)(v44 - 8);
      uint64_t v78 = v43;
      uint64_t v45 = v43;
      uint64_t v46 = v44;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v45, 1, v44))
      {
        uint64_t v47 = sub_100063814((uint64_t *)&unk_10109C050);
        memcpy(v80, v78, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v80, v78, v46);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v80, 0, 1, v46);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v36, 0, 1, v6);
    }
    uint64_t v48 = v16[5];
    uint64_t v49 = &v36[v48];
    uint64_t v50 = &v37[v48];
    if (v77(&v37[v48], 10, v20))
    {
      uint64_t v51 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      uint64_t v52 = type metadata accessor for Playlist.Variant();
      uint64_t v81 = *(void *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v50, 1, v52))
      {
        uint64_t v53 = sub_100063814(&qword_1010B1090);
        memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v49, v50, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v49, 0, 1, v52);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v49, 0, 10, v20);
    }
    a3 = v83;
    uint64_t v54 = v16[6];
    uint64_t v55 = &v36[v54];
    uint64_t v56 = &v37[v54];
    *(void *)uint64_t v55 = *(void *)v56;
    v55[8] = v56[8];
    uint64_t v57 = v16[7];
    uint64_t v58 = &v36[v57];
    uint64_t v59 = &v37[v57];
    *(_OWORD *)(v58 + 26) = *(_OWORD *)(v59 + 26);
    long long v60 = *((_OWORD *)v59 + 1);
    *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
    *((_OWORD *)v58 + 1) = v60;
    uint64_t v61 = v16[8];
    long long v62 = &v36[v61];
    uint64_t v63 = &v37[v61];
    *(_OWORD *)long long v62 = *(_OWORD *)v63;
    v62[16] = v63[16];
    (*(void (**)(char *, void, uint64_t, int *))(v38 + 56))(v36, 0, 1, v16);
  }
  uint64_t v64 = a3[6];
  uint64_t v65 = a3[7];
  uint64_t v66 = &a1[v64];
  uint64_t v67 = &a2[v64];
  uint64_t v68 = *((void *)v67 + 1);
  uint64_t v69 = *(void *)&a2[v65];
  *(void *)uint64_t v66 = *(void *)v67;
  *((void *)v66 + 1) = v68;
  *(void *)&a1[v65] = v69;
  uint64_t v70 = a3[8];
  uint64_t v71 = &a1[v70];
  uint64_t v72 = &a2[v70];
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v73 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
  }
  else
  {
    *(void *)uint64_t v71 = *(void *)v72;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10061C554(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  unsigned int v9 = v8(a1, 1, v6);
  unsigned int v10 = v8((uint64_t)a2, 1, v6);
  __src = (int *)v6;
  uint64_t v153 = v7;
  uint64_t v156 = (unsigned int (*)(char *, uint64_t, int *))v8;
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v21 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 24))(a1, a2, v21);
      uint64_t v22 = *(int *)(v6 + 20);
      uint64_t v23 = (void *)(a1 + v22);
      uint64_t v24 = &a2[v22];
      uint64_t v25 = type metadata accessor for Artwork.CropStyle();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      int v28 = v27(v23, 1, v25);
      int v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      size_t v18 = *(void *)(*(void *)(sub_100063814((uint64_t *)&unk_10109C050) - 8) + 64);
      uint64_t v19 = v23;
      uint64_t v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_100616E84(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    size_t v18 = *(void *)(*(void *)(sub_100063814((uint64_t *)&unk_1010A1D20) - 8) + 64);
    uint64_t v19 = (void *)a1;
    uint64_t v20 = a2;
    goto LABEL_8;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 20);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Artwork.CropStyle();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_100063814((uint64_t *)&unk_10109C050);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  uint64_t v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  uint64_t v31 = v30[5];
  uint64_t v32 = (void *)(a1 + v31);
  long long v33 = &a2[v31];
  uint64_t v34 = sub_100063814(&qword_1010A4530);
  uint64_t v154 = *(void *)(v34 - 8);
  uint64_t v35 = *(uint64_t (**)(void))(v154 + 48);
  unsigned int v36 = ((uint64_t (*)(void *, uint64_t, uint64_t))v35)(v32, 10, v34);
  unsigned int v37 = ((uint64_t (*)(char *, uint64_t, uint64_t))v35)(v33, 10, v34);
  uint64_t v165 = a3;
  uint64_t v160 = v35;
  uint64_t v161 = v34;
  if (!v36)
  {
    if (!v37)
    {
      uint64_t v42 = type metadata accessor for Playlist.Variant();
      uint64_t v152 = *(void *)(v42 - 8);
      uint64_t v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v152 + 48);
      int v44 = v43(v32, 1, v42);
      int v45 = v43(v33, 1, v42);
      if (v44)
      {
        if (!v45)
        {
          (*(void (**)(void *, char *, uint64_t))(v152 + 16))(v32, v33, v42);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v152 + 56))(v32, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v45)
        {
          (*(void (**)(void *, char *, uint64_t))(v152 + 24))(v32, v33, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v152 + 8))(v32, v42);
      }
      uint64_t v41 = sub_100063814(&qword_1010B1090);
LABEL_21:
      memcpy(v32, v33, *(void *)(*(void *)(v41 - 8) + 64));
      goto LABEL_27;
    }
    sub_1000637B8((uint64_t)v32, &qword_1010A4530);
LABEL_20:
    uint64_t v41 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v37) {
    goto LABEL_20;
  }
  uint64_t v38 = type metadata accessor for Playlist.Variant();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v33, 1, v38))
  {
    uint64_t v40 = sub_100063814(&qword_1010B1090);
    memcpy(v32, v33, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v32, v33, v38);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v32, 0, 1, v38);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v154 + 56))(v32, 0, 10, v34);
LABEL_27:
  uint64_t v46 = v30[6];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = &a2[v46];
  uint64_t v49 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = v48[8];
  *(void *)uint64_t v47 = v49;
  uint64_t v50 = v30[7];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = &a2[v50];
  uint64_t v53 = *(void *)v52;
  *(unsigned char *)(v51 + 8) = v52[8];
  *(void *)uint64_t v51 = v53;
  uint64_t v54 = *((void *)v52 + 2);
  *(unsigned char *)(v51 + 24) = v52[24];
  *(void *)(v51 + 16) = v54;
  uint64_t v55 = *((void *)v52 + 4);
  *(unsigned char *)(v51 + 40) = v52[40];
  *(void *)(v51 + 32) = v55;
  *(unsigned char *)(v51 + 41) = v52[41];
  uint64_t v56 = v30[8];
  uint64_t v57 = a1 + v56;
  uint64_t v58 = &a2[v56];
  long long v59 = *(_OWORD *)v58;
  *(unsigned char *)(v57 + 16) = v58[16];
  *(_OWORD *)uint64_t v57 = v59;
  uint64_t v60 = a3[5];
  uint64_t v61 = (char *)(a1 + v60);
  long long v62 = &a2[v60];
  uint64_t v63 = *((void *)v30 - 1);
  uint64_t v64 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v63 + 48);
  int v65 = v64(a1 + v60, 1, v30);
  int v66 = v64((uint64_t)v62, 1, v30);
  if (v65)
  {
    if (!v66)
    {
      if (v156(v62, 1, __src))
      {
        uint64_t v67 = sub_100063814((uint64_t *)&unk_1010A1D20);
        memcpy(v61, v62, *(void *)(*(void *)(v67 - 8) + 64));
        uint64_t v68 = v161;
      }
      else
      {
        uint64_t v80 = type metadata accessor for Artwork();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v61, v62, v80);
        uint64_t v81 = __src[5];
        uint64_t v157 = &v61[v81];
        uint64_t v82 = &v62[v81];
        uint64_t v83 = type metadata accessor for Artwork.CropStyle();
        uint64_t v84 = *(void *)(v83 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
        {
          uint64_t v85 = sub_100063814((uint64_t *)&unk_10109C050);
          memcpy(v157, v82, *(void *)(*(void *)(v85 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v157, v82, v83);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v157, 0, 1, v83);
        }
        uint64_t v68 = v161;
        (*(void (**)(char *, void, uint64_t, int *))(v153 + 56))(v61, 0, 1, __src);
      }
      uint64_t v89 = v30[5];
      uint64_t v90 = &v61[v89];
      uint64_t v91 = &v62[v89];
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v160)(&v62[v89], 10, v68))
      {
        uint64_t v92 = type metadata accessor for ArtworkImage.Placeholder(0);
        memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
      }
      else
      {
        uint64_t v93 = type metadata accessor for Playlist.Variant();
        uint64_t v94 = *(void *)(v93 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v91, 1, v93))
        {
          uint64_t v95 = sub_100063814(&qword_1010B1090);
          memcpy(v90, v91, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v90, v91, v93);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v90, 0, 1, v93);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v90, 0, 10, v161);
      }
      uint64_t v70 = v165;
      uint64_t v96 = v30[6];
      uint64_t v97 = &v61[v96];
      uint64_t v98 = &v62[v96];
      uint64_t v99 = *(void *)v98;
      v97[8] = v98[8];
      *(void *)uint64_t v97 = v99;
      uint64_t v100 = v30[7];
      uint64_t v101 = &v61[v100];
      uint64_t v102 = &v62[v100];
      long long v103 = *(_OWORD *)v102;
      long long v104 = *((_OWORD *)v102 + 1);
      *(_OWORD *)(v101 + 26) = *(_OWORD *)(v102 + 26);
      *(_OWORD *)uint64_t v101 = v103;
      *((_OWORD *)v101 + 1) = v104;
      uint64_t v105 = v30[8];
      uint64_t v106 = &v61[v105];
      uint64_t v107 = &v62[v105];
      long long v108 = *(_OWORD *)v107;
      v106[16] = v107[16];
      *(_OWORD *)uint64_t v106 = v108;
      (*(void (**)(char *, void, uint64_t, int *))(v63 + 56))(v61, 0, 1, v30);
      goto LABEL_80;
    }
    goto LABEL_33;
  }
  if (v66)
  {
    sub_100616E84((uint64_t)v61, type metadata accessor for ArtworkImage.Info);
LABEL_33:
    uint64_t v69 = sub_100063814(&qword_10109F0F0);
    memcpy(v61, v62, *(void *)(*(void *)(v69 - 8) + 64));
    uint64_t v70 = a3;
    goto LABEL_80;
  }
  unsigned int v71 = v156(v61, 1, __src);
  unsigned int v72 = v156(v62, 1, __src);
  if (!v71)
  {
    if (!v72)
    {
      uint64_t v109 = type metadata accessor for Artwork();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 24))(v61, v62, v109);
      uint64_t v110 = __src[5];
      id v111 = &v61[v110];
      __srca = &v62[v110];
      uint64_t v112 = type metadata accessor for Artwork.CropStyle();
      uint64_t v155 = *(void *)(v112 - 8);
      uint64_t v158 = v111;
      uint64_t v113 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v155 + 48);
      LODWORD(v111) = v113(v111, 1, v112);
      int v114 = v113(__srca, 1, v112);
      if (v111)
      {
        if (!v114)
        {
          (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v158, __srca, v112);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v155 + 56))(v158, 0, 1, v112);
          goto LABEL_66;
        }
        size_t v86 = *(void *)(*(void *)(sub_100063814((uint64_t *)&unk_10109C050) - 8) + 64);
        long long v87 = v158;
        char v88 = __srca;
      }
      else
      {
        if (!v114)
        {
          (*(void (**)(char *, char *, uint64_t))(v155 + 24))(v158, __srca, v112);
          goto LABEL_66;
        }
        (*(void (**)(char *, uint64_t))(v155 + 8))(v158, v112);
        size_t v86 = *(void *)(*(void *)(sub_100063814((uint64_t *)&unk_10109C050) - 8) + 64);
        long long v87 = v158;
        char v88 = __srca;
      }
LABEL_49:
      memcpy(v87, v88, v86);
      goto LABEL_66;
    }
    sub_100616E84((uint64_t)v61, type metadata accessor for ArtworkImage.ViewModel);
LABEL_48:
    size_t v86 = *(void *)(*(void *)(sub_100063814((uint64_t *)&unk_1010A1D20) - 8) + 64);
    long long v87 = v61;
    char v88 = v62;
    goto LABEL_49;
  }
  if (v72) {
    goto LABEL_48;
  }
  uint64_t v73 = type metadata accessor for Artwork();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v61, v62, v73);
  uint64_t v74 = __src[5];
  uint64_t v75 = &v61[v74];
  uint64_t v76 = &v62[v74];
  uint64_t v77 = type metadata accessor for Artwork.CropStyle();
  uint64_t v78 = *(void *)(v77 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
  {
    uint64_t v79 = sub_100063814((uint64_t *)&unk_10109C050);
    memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v75, v76, v77);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
  }
  (*(void (**)(char *, void, uint64_t, int *))(v153 + 56))(v61, 0, 1, __src);
LABEL_66:
  uint64_t v115 = v30[5];
  double v116 = &v62[v115];
  uint64_t v117 = &v61[v115];
  int v118 = v160();
  __srcb = v116;
  unsigned int v119 = ((uint64_t (*)(char *, uint64_t, uint64_t))v160)(v116, 10, v161);
  if (v118)
  {
    if (!v119)
    {
      uint64_t v120 = type metadata accessor for Playlist.Variant();
      uint64_t v121 = *(void *)(v120 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v116, 1, v120))
      {
        uint64_t v122 = sub_100063814(&qword_1010B1090);
        memcpy(v117, v116, *(void *)(*(void *)(v122 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v117, v116, v120);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v117, 0, 1, v120);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v117, 0, 10, v161);
      goto LABEL_79;
    }
    goto LABEL_72;
  }
  if (v119)
  {
    sub_1000637B8((uint64_t)v117, &qword_1010A4530);
LABEL_72:
    size_t v123 = *(void *)(*(void *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8) + 64);
    id v124 = v117;
    uint64_t v125 = v116;
    goto LABEL_73;
  }
  uint64_t v126 = type metadata accessor for Playlist.Variant();
  uint64_t v159 = *(void *)(v126 - 8);
  uint64_t v127 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v159 + 48);
  int v128 = v127(v117, 1, v126);
  int v129 = v127(__srcb, 1, v126);
  if (v128)
  {
    if (!v129)
    {
      (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v117, __srcb, v126);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v159 + 56))(v117, 0, 1, v126);
      goto LABEL_79;
    }
    size_t v123 = *(void *)(*(void *)(sub_100063814(&qword_1010B1090) - 8) + 64);
    id v124 = v117;
    uint64_t v125 = __srcb;
  }
  else
  {
    if (!v129)
    {
      (*(void (**)(char *, char *, uint64_t))(v159 + 24))(v117, __srcb, v126);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v159 + 8))(v117, v126);
    size_t v123 = *(void *)(*(void *)(sub_100063814(&qword_1010B1090) - 8) + 64);
    id v124 = v117;
    uint64_t v125 = __srcb;
  }
LABEL_73:
  memcpy(v124, v125, v123);
LABEL_79:
  uint64_t v70 = v165;
  uint64_t v130 = v30[6];
  uint64_t v131 = &v61[v130];
  uint64_t v132 = &v62[v130];
  uint64_t v133 = *(void *)v132;
  v131[8] = v132[8];
  *(void *)uint64_t v131 = v133;
  uint64_t v134 = v30[7];
  uint64_t v135 = &v61[v134];
  uint64_t v136 = &v62[v134];
  uint64_t v137 = *(void *)v136;
  v135[8] = v136[8];
  *(void *)uint64_t v135 = v137;
  uint64_t v138 = *((void *)v136 + 2);
  v135[24] = v136[24];
  *((void *)v135 + 2) = v138;
  uint64_t v139 = *((void *)v136 + 4);
  v135[40] = v136[40];
  *((void *)v135 + 4) = v139;
  v135[41] = v136[41];
  uint64_t v140 = v30[8];
  uint64_t v141 = &v61[v140];
  uint64_t v142 = &v62[v140];
  long long v143 = *(_OWORD *)v142;
  v141[16] = v142[16];
  *(_OWORD *)uint64_t v141 = v143;
LABEL_80:
  uint64_t v144 = v70[6];
  uint64_t v145 = (void *)(a1 + v144);
  uint64_t v146 = &a2[v144];
  *uint64_t v145 = *(void *)v146;
  v145[1] = *((void *)v146 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v70[7]) = *(void *)&a2[v70[7]];
  swift_retain();
  swift_release();
  if ((char *)a1 != a2)
  {
    uint64_t v147 = v70[8];
    uint64_t v148 = (void *)(a1 + v147);
    uint64_t v149 = &a2[v147];
    sub_1000637B8(a1 + v147, (uint64_t *)&unk_10109C850);
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v150 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v150 - 8) + 16))(v148, v149, v150);
    }
    else
    {
      *uint64_t v148 = *(void *)v149;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10061D908(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v72 = v7;
  uint64_t v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v75(a2, 1, v6))
  {
    uint64_t v8 = sub_100063814((uint64_t *)&unk_1010A1D20);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for Artwork();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for Artwork.CropStyle();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_100063814((uint64_t *)&unk_10109C050);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v16 = (int *)type metadata accessor for ArtworkImage.Info(0);
  uint64_t v17 = v16[5];
  size_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_100063814(&qword_1010A4530);
  uint64_t v80 = *(void *)(v20 - 8);
  uint64_t v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
  if (v73(v19, 10, v20))
  {
    uint64_t v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v78 = a3;
    uint64_t v22 = type metadata accessor for Playlist.Variant();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v19, 1, v22))
    {
      uint64_t v24 = sub_100063814(&qword_1010B1090);
      memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v18, v19, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v18, 0, 1, v22);
    }
    a3 = v78;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v18, 0, 10, v20);
  }
  uint64_t v25 = v16[6];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  *(void *)uint64_t v26 = *(void *)v27;
  v26[8] = v27[8];
  uint64_t v28 = v16[7];
  int v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  *(_OWORD *)(v29 + 26) = *(_OWORD *)(v30 + 26);
  long long v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)int v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  uint64_t v32 = v16[8];
  long long v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  *(_OWORD *)long long v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  uint64_t v35 = a3[5];
  unsigned int v36 = &a1[v35];
  unsigned int v37 = &a2[v35];
  uint64_t v38 = *((void *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))(&a2[v35], 1, v16))
  {
    uint64_t v39 = sub_100063814(&qword_10109F0F0);
    memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    uint64_t v79 = a3;
    if (v75(v37, 1, v6))
    {
      uint64_t v40 = sub_100063814((uint64_t *)&unk_1010A1D20);
      memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      uint64_t v41 = type metadata accessor for Artwork();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v36, v37, v41);
      uint64_t v42 = *(int *)(v6 + 20);
      uint64_t v76 = &v36[v42];
      uint64_t v43 = &v37[v42];
      uint64_t v44 = type metadata accessor for Artwork.CropStyle();
      uint64_t v71 = *(void *)(v44 - 8);
      uint64_t v74 = v43;
      int v45 = v43;
      uint64_t v46 = v44;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v45, 1, v44))
      {
        uint64_t v47 = sub_100063814((uint64_t *)&unk_10109C050);
        memcpy(v76, v74, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v76, v74, v46);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v76, 0, 1, v46);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v36, 0, 1, v6);
    }
    uint64_t v48 = v16[5];
    uint64_t v49 = &v36[v48];
    uint64_t v50 = &v37[v48];
    if (v73(&v37[v48], 10, v20))
    {
      uint64_t v51 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      uint64_t v52 = type metadata accessor for Playlist.Variant();
      uint64_t v77 = *(void *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v50, 1, v52))
      {
        uint64_t v53 = sub_100063814(&qword_1010B1090);
        memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v49, v50, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v49, 0, 1, v52);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v49, 0, 10, v20);
    }
    a3 = v79;
    uint64_t v54 = v16[6];
    uint64_t v55 = &v36[v54];
    uint64_t v56 = &v37[v54];
    *(void *)uint64_t v55 = *(void *)v56;
    v55[8] = v56[8];
    uint64_t v57 = v16[7];
    uint64_t v58 = &v36[v57];
    long long v59 = &v37[v57];
    *(_OWORD *)(v58 + 26) = *(_OWORD *)(v59 + 26);
    long long v60 = *((_OWORD *)v59 + 1);
    *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
    *((_OWORD *)v58 + 1) = v60;
    uint64_t v61 = v16[8];
    long long v62 = &v36[v61];
    uint64_t v63 = &v37[v61];
    *(_OWORD *)long long v62 = *(_OWORD *)v63;
    v62[16] = v63[16];
    (*(void (**)(char *, void, uint64_t, int *))(v38 + 56))(v36, 0, 1, v16);
  }
  uint64_t v64 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(void *)&a1[v64] = *(void *)&a2[v64];
  uint64_t v65 = a3[8];
  int v66 = &a1[v65];
  uint64_t v67 = &a2[v65];
  uint64_t v68 = sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v69 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v66, v67, v69);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10061E1EC(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8((uint64_t)a2, 1, v6);
  __src = (int *)v6;
  uint64_t v143 = v7;
  uint64_t v146 = (uint64_t (*)(char *, uint64_t, int *))v8;
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v21 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 40))(a1, a2, v21);
      uint64_t v22 = *(int *)(v6 + 20);
      uint64_t v23 = (void *)(a1 + v22);
      uint64_t v24 = &a2[v22];
      uint64_t v25 = type metadata accessor for Artwork.CropStyle();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      int v28 = v27(v23, 1, v25);
      int v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      size_t v18 = *(void *)(*(void *)(sub_100063814((uint64_t *)&unk_10109C050) - 8) + 64);
      uint64_t v19 = v23;
      uint64_t v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_100616E84(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    size_t v18 = *(void *)(*(void *)(sub_100063814((uint64_t *)&unk_1010A1D20) - 8) + 64);
    uint64_t v19 = (void *)a1;
    uint64_t v20 = a2;
    goto LABEL_8;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 20);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Artwork.CropStyle();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_100063814((uint64_t *)&unk_10109C050);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  uint64_t v30 = (int *)type metadata accessor for ArtworkImage.Info(0);
  uint64_t v31 = v30[5];
  uint64_t v32 = (void *)(a1 + v31);
  long long v33 = &a2[v31];
  uint64_t v34 = sub_100063814(&qword_1010A4530);
  uint64_t v144 = *(void *)(v34 - 8);
  uint64_t v35 = *(uint64_t (**)(void))(v144 + 48);
  int v36 = ((uint64_t (*)(void *, uint64_t, uint64_t))v35)(v32, 10, v34);
  int v37 = ((uint64_t (*)(char *, uint64_t, uint64_t))v35)(v33, 10, v34);
  uint64_t v155 = a3;
  uint64_t v150 = v35;
  uint64_t v151 = v34;
  if (!v36)
  {
    if (!v37)
    {
      uint64_t v42 = type metadata accessor for Playlist.Variant();
      uint64_t v142 = *(void *)(v42 - 8);
      uint64_t v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v142 + 48);
      int v44 = v43(v32, 1, v42);
      int v45 = v43(v33, 1, v42);
      if (v44)
      {
        if (!v45)
        {
          (*(void (**)(void *, char *, uint64_t))(v142 + 32))(v32, v33, v42);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v142 + 56))(v32, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v45)
        {
          (*(void (**)(void *, char *, uint64_t))(v142 + 40))(v32, v33, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v142 + 8))(v32, v42);
      }
      uint64_t v41 = sub_100063814(&qword_1010B1090);
LABEL_21:
      memcpy(v32, v33, *(void *)(*(void *)(v41 - 8) + 64));
      goto LABEL_27;
    }
    sub_1000637B8((uint64_t)v32, &qword_1010A4530);
LABEL_20:
    uint64_t v41 = type metadata accessor for ArtworkImage.Placeholder(0);
    goto LABEL_21;
  }
  if (v37) {
    goto LABEL_20;
  }
  uint64_t v38 = type metadata accessor for Playlist.Variant();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v33, 1, v38))
  {
    uint64_t v40 = sub_100063814(&qword_1010B1090);
    memcpy(v32, v33, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v32, v33, v38);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v32, 0, 1, v38);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v144 + 56))(v32, 0, 10, v34);
LABEL_27:
  uint64_t v46 = v30[6];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = &a2[v46];
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = v48[8];
  uint64_t v49 = v30[7];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = &a2[v49];
  *(void *)uint64_t v50 = *(void *)v51;
  *(unsigned char *)(v50 + 8) = v51[8];
  *(void *)(v50 + 16) = *((void *)v51 + 2);
  *(unsigned char *)(v50 + 24) = v51[24];
  *(void *)(v50 + 32) = *((void *)v51 + 4);
  *(unsigned char *)(v50 + 40) = v51[40];
  *(unsigned char *)(v50 + 41) = v51[41];
  uint64_t v52 = v30[8];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = &a2[v52];
  *(unsigned char *)(v53 + 16) = v54[16];
  *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
  uint64_t v55 = a3[5];
  uint64_t v56 = (char *)(a1 + v55);
  uint64_t v57 = &a2[v55];
  uint64_t v58 = *((void *)v30 - 1);
  long long v59 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v58 + 48);
  int v60 = v59(a1 + v55, 1, v30);
  int v61 = v59((uint64_t)v57, 1, v30);
  if (!v60)
  {
    if (v61)
    {
      sub_100616E84((uint64_t)v56, type metadata accessor for ArtworkImage.Info);
      goto LABEL_33;
    }
    int v66 = v146(v56, 1, __src);
    int v67 = v146(v57, 1, __src);
    if (v66)
    {
      if (!v67)
      {
        uint64_t v68 = type metadata accessor for Artwork();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v56, v57, v68);
        uint64_t v69 = __src[5];
        uint64_t v70 = &v56[v69];
        uint64_t v71 = &v57[v69];
        uint64_t v72 = type metadata accessor for Artwork.CropStyle();
        uint64_t v73 = *(void *)(v72 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
        {
          uint64_t v74 = sub_100063814((uint64_t *)&unk_10109C050);
          memcpy(v70, v71, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v70, v71, v72);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
        }
        (*(void (**)(char *, void, uint64_t, int *))(v143 + 56))(v56, 0, 1, __src);
LABEL_66:
        uint64_t v107 = v30[5];
        long long v108 = &v57[v107];
        uint64_t v109 = &v56[v107];
        int v110 = v150();
        __srcb = v108;
        int v111 = ((uint64_t (*)(char *, uint64_t, uint64_t))v150)(v108, 10, v151);
        if (v110)
        {
          if (!v111)
          {
            uint64_t v112 = type metadata accessor for Playlist.Variant();
            uint64_t v113 = *(void *)(v112 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v108, 1, v112))
            {
              uint64_t v114 = sub_100063814(&qword_1010B1090);
              memcpy(v109, v108, *(void *)(*(void *)(v114 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v109, v108, v112);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v109, 0, 1, v112);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v109, 0, 10, v151);
            goto LABEL_79;
          }
        }
        else
        {
          if (!v111)
          {
            uint64_t v118 = type metadata accessor for Playlist.Variant();
            uint64_t v149 = *(void *)(v118 - 8);
            unsigned int v119 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v149 + 48);
            int v120 = v119(v109, 1, v118);
            int v121 = v119(__srcb, 1, v118);
            if (v120)
            {
              if (!v121)
              {
                (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v109, __srcb, v118);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v109, 0, 1, v118);
                goto LABEL_79;
              }
              size_t v115 = *(void *)(*(void *)(sub_100063814(&qword_1010B1090) - 8) + 64);
              double v116 = v109;
              uint64_t v117 = __srcb;
            }
            else
            {
              if (!v121)
              {
                (*(void (**)(char *, char *, uint64_t))(v149 + 40))(v109, __srcb, v118);
                goto LABEL_79;
              }
              (*(void (**)(char *, uint64_t))(v149 + 8))(v109, v118);
              size_t v115 = *(void *)(*(void *)(sub_100063814(&qword_1010B1090) - 8) + 64);
              double v116 = v109;
              uint64_t v117 = __srcb;
            }
LABEL_73:
            memcpy(v116, v117, v115);
LABEL_79:
            uint64_t v65 = v155;
            uint64_t v122 = v30[6];
            size_t v123 = &v56[v122];
            id v124 = &v57[v122];
            *(void *)size_t v123 = *(void *)v124;
            v123[8] = v124[8];
            uint64_t v125 = v30[7];
            uint64_t v126 = &v56[v125];
            uint64_t v127 = &v57[v125];
            *(void *)uint64_t v126 = *(void *)v127;
            v126[8] = v127[8];
            *((void *)v126 + 2) = *((void *)v127 + 2);
            v126[24] = v127[24];
            *((void *)v126 + 4) = *((void *)v127 + 4);
            v126[40] = v127[40];
            v126[41] = v127[41];
            uint64_t v128 = v30[8];
            int v129 = &v56[v128];
            uint64_t v130 = &v57[v128];
            v129[16] = v130[16];
            *(_OWORD *)int v129 = *(_OWORD *)v130;
            goto LABEL_80;
          }
          sub_1000637B8((uint64_t)v109, &qword_1010A4530);
        }
        size_t v115 = *(void *)(*(void *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8) + 64);
        double v116 = v109;
        uint64_t v117 = v108;
        goto LABEL_73;
      }
    }
    else
    {
      if (!v67)
      {
        uint64_t v101 = type metadata accessor for Artwork();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 40))(v56, v57, v101);
        uint64_t v102 = __src[5];
        long long v103 = &v56[v102];
        __srca = &v57[v102];
        uint64_t v104 = type metadata accessor for Artwork.CropStyle();
        uint64_t v145 = *(void *)(v104 - 8);
        uint64_t v148 = v103;
        uint64_t v105 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v145 + 48);
        LODWORD(v103) = v105(v103, 1, v104);
        int v106 = v105(__srca, 1, v104);
        if (v103)
        {
          if (!v106)
          {
            (*(void (**)(char *, char *, uint64_t))(v145 + 32))(v148, __srca, v104);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v145 + 56))(v148, 0, 1, v104);
            goto LABEL_66;
          }
          size_t v81 = *(void *)(*(void *)(sub_100063814((uint64_t *)&unk_10109C050) - 8) + 64);
          uint64_t v82 = v148;
          uint64_t v83 = __srca;
        }
        else
        {
          if (!v106)
          {
            (*(void (**)(char *, char *, uint64_t))(v145 + 40))(v148, __srca, v104);
            goto LABEL_66;
          }
          (*(void (**)(char *, uint64_t))(v145 + 8))(v148, v104);
          size_t v81 = *(void *)(*(void *)(sub_100063814((uint64_t *)&unk_10109C050) - 8) + 64);
          uint64_t v82 = v148;
          uint64_t v83 = __srca;
        }
LABEL_49:
        memcpy(v82, v83, v81);
        goto LABEL_66;
      }
      sub_100616E84((uint64_t)v56, type metadata accessor for ArtworkImage.ViewModel);
    }
    size_t v81 = *(void *)(*(void *)(sub_100063814((uint64_t *)&unk_1010A1D20) - 8) + 64);
    uint64_t v82 = v56;
    uint64_t v83 = v57;
    goto LABEL_49;
  }
  if (v61)
  {
LABEL_33:
    uint64_t v64 = sub_100063814(&qword_10109F0F0);
    memcpy(v56, v57, *(void *)(*(void *)(v64 - 8) + 64));
    uint64_t v65 = a3;
    goto LABEL_80;
  }
  if (v146(v57, 1, __src))
  {
    uint64_t v62 = sub_100063814((uint64_t *)&unk_1010A1D20);
    memcpy(v56, v57, *(void *)(*(void *)(v62 - 8) + 64));
    uint64_t v63 = v151;
  }
  else
  {
    uint64_t v75 = type metadata accessor for Artwork();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v56, v57, v75);
    uint64_t v76 = __src[5];
    uint64_t v147 = &v56[v76];
    uint64_t v77 = &v57[v76];
    uint64_t v78 = type metadata accessor for Artwork.CropStyle();
    uint64_t v79 = *(void *)(v78 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
    {
      uint64_t v80 = sub_100063814((uint64_t *)&unk_10109C050);
      memcpy(v147, v77, *(void *)(*(void *)(v80 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v147, v77, v78);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v147, 0, 1, v78);
    }
    uint64_t v63 = v151;
    (*(void (**)(char *, void, uint64_t, int *))(v143 + 56))(v56, 0, 1, __src);
  }
  uint64_t v84 = v30[5];
  uint64_t v85 = &v56[v84];
  size_t v86 = &v57[v84];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v150)(&v57[v84], 10, v63))
  {
    uint64_t v87 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v85, v86, *(void *)(*(void *)(v87 - 8) + 64));
  }
  else
  {
    uint64_t v88 = type metadata accessor for Playlist.Variant();
    uint64_t v89 = *(void *)(v88 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v86, 1, v88))
    {
      uint64_t v90 = sub_100063814(&qword_1010B1090);
      memcpy(v85, v86, *(void *)(*(void *)(v90 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v85, v86, v88);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v85, 0, 1, v88);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v85, 0, 10, v151);
  }
  uint64_t v65 = v155;
  uint64_t v91 = v30[6];
  uint64_t v92 = &v56[v91];
  uint64_t v93 = &v57[v91];
  *(void *)uint64_t v92 = *(void *)v93;
  v92[8] = v93[8];
  uint64_t v94 = v30[7];
  uint64_t v95 = &v56[v94];
  uint64_t v96 = &v57[v94];
  *(_OWORD *)(v95 + 26) = *(_OWORD *)(v96 + 26);
  long long v97 = *((_OWORD *)v96 + 1);
  *(_OWORD *)uint64_t v95 = *(_OWORD *)v96;
  *((_OWORD *)v95 + 1) = v97;
  uint64_t v98 = v30[8];
  uint64_t v99 = &v56[v98];
  uint64_t v100 = &v57[v98];
  *(_OWORD *)uint64_t v99 = *(_OWORD *)v100;
  v99[16] = v100[16];
  (*(void (**)(char *, void, uint64_t, int *))(v58 + 56))(v56, 0, 1, v30);
LABEL_80:
  uint64_t v131 = v65[6];
  uint64_t v132 = (void *)(a1 + v131);
  uint64_t v133 = &a2[v131];
  uint64_t v135 = *(void *)v133;
  uint64_t v134 = *((void *)v133 + 1);
  *uint64_t v132 = v135;
  v132[1] = v134;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v65[7]) = *(void *)&a2[v65[7]];
  swift_release();
  if ((char *)a1 != a2)
  {
    uint64_t v136 = v65[8];
    uint64_t v137 = (void *)(a1 + v136);
    uint64_t v138 = &a2[v136];
    sub_1000637B8(a1 + v136, (uint64_t *)&unk_10109C850);
    uint64_t v139 = sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v140 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v137, v138, v140);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v137, v138, *(void *)(*(void *)(v139 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10061F598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10061F5AC);
}

uint64_t sub_10061F5AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ArtworkImage.Info(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100063814(&qword_10109F0F0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 2147483646)
  {
    unint64_t v14 = *(void *)(a1 + a3[6] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    int v15 = v14 - 1;
    if (v15 < 0) {
      int v15 = -1;
    }
    return (v15 + 1);
  }
  else
  {
    uint64_t v16 = sub_100063814(&qword_1010B71B0);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a3[8];
    return v17(v19, a2, v18);
  }
}

uint64_t sub_10061F744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10061F758);
}

uint64_t sub_10061F758(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for ArtworkImage.Info(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = sub_100063814(&qword_10109F0F0);
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[6] + 8) = a2;
  }
  else
  {
    uint64_t v15 = sub_100063814(&qword_1010B71B0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[8];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_10061F8E4()
{
  type metadata accessor for ArtworkImage.Info(319);
  if (v0 <= 0x3F)
  {
    sub_10061FA5C(319, &qword_1010AC9F0, type metadata accessor for ArtworkImage.Info, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F)
    {
      sub_10061FA5C(319, (unint64_t *)&qword_1010B7220, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10061FA5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_10061FAC0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    uint64_t v7 = a3[9];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    *(_OWORD *)(a1 + 49) = *(_OWORD *)((char *)a2 + 49);
    uint64_t v10 = sub_100063814(&qword_1010A5D00);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11((uint64_t)v4 + a3[10], (uint64_t)a2 + a3[10], v10);
    uint64_t v12 = a3[11];
    uint64_t v13 = (void *)((char *)v4 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10061FC80(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = sub_100063814(&qword_1010A5D00);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[10], v5);
  uint64_t v7 = a1 + a2[11];
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_10061FDA8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  uint64_t v6 = a3[9];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100063814(&qword_1010A5D00);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(a1 + a3[10], a2 + a3[10], v9);
  uint64_t v11 = a3[11];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *uint64_t v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10061FF10(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = a3[9];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100063814(&qword_1010A5D00);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + a3[10], a2 + a3[10], v9);
  if (a1 != a2)
  {
    uint64_t v11 = a3[11];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    sub_1000637B8(a1 + v11, (uint64_t *)&unk_10109C850);
    sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1006200D8(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  uint64_t v6 = a3[9];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100063814(&qword_1010A5D00);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + a3[10], a2 + a3[10], v9);
  uint64_t v11 = a3[11];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = sub_100063814((uint64_t *)&unk_10109C850);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100620250(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = a3[9];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + 56) = v6;
  uint64_t v10 = sub_100063814(&qword_1010A5D00);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[10], a2 + a3[10], v10);
  if (a1 != a2)
  {
    uint64_t v12 = a3[11];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_1000637B8(a1 + v12, (uint64_t *)&unk_10109C850);
    uint64_t v15 = sub_100063814((uint64_t *)&unk_10109C850);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100620410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100620424);
}

uint64_t sub_100620424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 1);
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_100063814(&qword_1010A5D00);
    uint64_t v11 = *(void *)(v10 - 8);
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = a1 + *(int *)(a3 + 36);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      return v14(v13, a2, v12);
    }
    else
    {
      uint64_t v15 = sub_100063814(&qword_1010B71B0);
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
      uint64_t v17 = v15;
      uint64_t v18 = a1 + *(int *)(a3 + 44);
      return v16(v18, a2, v17);
    }
  }
}

uint64_t sub_100620558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10062056C);
}

uint64_t sub_10062056C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 1) = a2 + 1;
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010A5D00);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100063814(&qword_1010B71B0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 44);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10062069C()
{
  sub_10037C634();
  if (v0 <= 0x3F)
  {
    sub_10061FA5C(319, (unint64_t *)&qword_1010B7220, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_1006207BC()
{
  unint64_t result = qword_1010B34C8;
  if (!qword_1010B34C8)
  {
    sub_10006389C(&qword_1010B2F20);
    sub_10062147C(&qword_1010B2F30, &qword_1010B2F18, (void (*)(void))sub_1006165D0);
    sub_100616A1C((unint64_t *)&qword_10109D020, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B34C8);
  }
  return result;
}

uint64_t sub_100620894()
{
  return swift_getWitnessTable();
}

uint64_t sub_100620F10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100620F54()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100620F70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100620F8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100620FA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100620FC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100620FE0()
{
  return sub_100620FF8();
}

uint64_t sub_100620FF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100621034()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100621078()
{
  unint64_t result = qword_1010B3518;
  if (!qword_1010B3518)
  {
    sub_10006389C(&qword_1010B3500);
    sub_100621118();
    sub_100063858((unint64_t *)&unk_10109CE00, (uint64_t *)&unk_1010A8A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3518);
  }
  return result;
}

uint64_t sub_100621118()
{
  return sub_10062160C(&qword_1010B3520, &qword_1010B34F8, (void (*)(void))sub_100621154);
}

unint64_t sub_100621154()
{
  unint64_t result = qword_1010B3528;
  if (!qword_1010B3528)
  {
    sub_10006389C(&qword_1010B3530);
    sub_1001EFE0C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3528);
  }
  return result;
}

double sub_1006211D0(char a1, double a2)
{
  uint64_t v4 = type metadata accessor for DynamicTypeSize();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010985A0 != -1) {
    swift_once();
  }
  if (byte_1010B2D10 != 1)
  {
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DynamicTypeSize.accessibility3(_:), v4);
    char v9 = static DynamicTypeSize.< infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v9)
    {
      if (a1)
      {
        uint64_t v10 = 0x4040000000000000;
LABEL_13:
        double v8 = *(double *)&v10;
        goto LABEL_14;
      }
    }
    else if ((a1 & 1) == 0)
    {
      uint64_t v10 = 0x4052000000000000;
      goto LABEL_13;
    }
    uint64_t v10 = 0x4048000000000000;
    goto LABEL_13;
  }
  double v8 = 48.0;
  if (a1) {
    double v8 = 32.0;
  }
LABEL_14:
  double v11 = v8 * a2;
  double v12 = v8 * 0.5;
  if ((a1 & 1) == 0) {
    double v12 = -0.0;
  }
  return v11 + v12;
}

unint64_t sub_100621384()
{
  unint64_t result = qword_1010B3548;
  if (!qword_1010B3548)
  {
    sub_10006389C((uint64_t *)&unk_1010B4440);
    sub_10006389C(&qword_10109DEA0);
    sub_1001EFF88();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3548);
  }
  return result;
}

uint64_t sub_10062143C()
{
  return swift_deallocObject();
}

uint64_t sub_10062144C()
{
  return sub_10062147C(&qword_1010B35D8, &qword_1010B35D0, (void (*)(void))sub_1006214F8);
}

uint64_t sub_10062147C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1006214F8()
{
  return sub_10062147C(&qword_1010B35E0, &qword_1010B35C8, (void (*)(void))sub_100621528);
}

uint64_t sub_100621528()
{
  return sub_10062147C(&qword_1010B35E8, &qword_1010B35C0, (void (*)(void))sub_100621558);
}

unint64_t sub_100621558()
{
  unint64_t result = qword_1010B35F0;
  if (!qword_1010B35F0)
  {
    sub_10006389C(&qword_1010B35B8);
    sub_10062160C(&qword_1010B35F8, &qword_1010B35B0, (void (*)(void))sub_100621678);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B35F0);
  }
  return result;
}

uint64_t sub_10062160C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100621678()
{
  unint64_t result = qword_1010B3600;
  if (!qword_1010B3600)
  {
    sub_10006389C(&qword_1010B3608);
    sub_1006216EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3600);
  }
  return result;
}

unint64_t sub_1006216EC()
{
  unint64_t result = qword_1010B3610;
  if (!qword_1010B3610)
  {
    sub_10006389C(&qword_1010B3618);
    sub_100621798();
    sub_100616A1C((unint64_t *)&qword_10109D020, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3610);
  }
  return result;
}

unint64_t sub_100621798()
{
  unint64_t result = qword_1010B3620;
  if (!qword_1010B3620)
  {
    sub_10006389C(&qword_1010B3628);
    sub_100621844();
    sub_100616A1C((unint64_t *)&qword_10109D020, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3620);
  }
  return result;
}

unint64_t sub_100621844()
{
  unint64_t result = qword_1010B3630;
  if (!qword_1010B3630)
  {
    sub_10006389C(&qword_1010B3638);
    sub_1005857FC((unint64_t *)&qword_1010B03E0, &qword_1010A5EC0, (unint64_t *)&unk_10109CE00, (uint64_t *)&unk_1010A8A10);
    sub_100063858(&qword_1010AF1B8, &qword_1010AF1C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3630);
  }
  return result;
}

unint64_t sub_100621904()
{
  unint64_t result = qword_1010B3648;
  if (!qword_1010B3648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3648);
  }
  return result;
}

unint64_t sub_100621958()
{
  unint64_t result = qword_1010B36A0;
  if (!qword_1010B36A0)
  {
    sub_10006389C(&qword_1010B3668);
    sub_1001F0624();
    sub_100063858(&qword_1010AF318, &qword_1010AF2D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B36A0);
  }
  return result;
}

unint64_t sub_1006219F8()
{
  unint64_t result = qword_1010B36A8;
  if (!qword_1010B36A8)
  {
    sub_10006389C(&qword_1010B3688);
    sub_10006389C(&qword_1010B3678);
    sub_10006389C(&qword_1010B3670);
    sub_10006389C(&qword_1010B3668);
    sub_100621958();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100616A1C((unint64_t *)&qword_10109D020, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B36A8);
  }
  return result;
}

unint64_t sub_100621B48()
{
  unint64_t result = qword_1010B36B0;
  if (!qword_1010B36B0)
  {
    sub_10006389C(&qword_1010B3690);
    sub_1006219F8();
    sub_100616A1C((unint64_t *)&qword_10109D020, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B36B0);
  }
  return result;
}

unint64_t sub_100621BF4()
{
  unint64_t result = qword_1010B36C0;
  if (!qword_1010B36C0)
  {
    sub_10006389C(&qword_1010B3698);
    sub_100621B48();
    sub_100616A1C((unint64_t *)&qword_10109D020, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B36C0);
  }
  return result;
}

unint64_t sub_100621CA8()
{
  unint64_t result = qword_1010B3730;
  if (!qword_1010B3730)
  {
    sub_10006389C(&qword_1010B3728);
    sub_100621D54();
    sub_100616A1C((unint64_t *)&qword_10109D020, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3730);
  }
  return result;
}

unint64_t sub_100621D54()
{
  unint64_t result = qword_1010B3738;
  if (!qword_1010B3738)
  {
    sub_10006389C(&qword_1010B3720);
    sub_100621E00();
    sub_100616A1C(&qword_1010B3778, (void (*)(uint64_t))type metadata accessor for DancingPlaybackBarsConditionalModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3738);
  }
  return result;
}

unint64_t sub_100621E00()
{
  unint64_t result = qword_1010B3740;
  if (!qword_1010B3740)
  {
    sub_10006389C(&qword_1010B3718);
    sub_100621EAC();
    sub_100616A1C(&qword_1010B3770, (void (*)(uint64_t))type metadata accessor for PreviewOverlay.TrackNumberVariant);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3740);
  }
  return result;
}

unint64_t sub_100621EAC()
{
  unint64_t result = qword_1010B3748;
  if (!qword_1010B3748)
  {
    sub_10006389C(&qword_1010B3710);
    sub_100621F44(&qword_1010B3750, &qword_1010B3758, (void (*)(void))sub_100621FE4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3748);
  }
  return result;
}

uint64_t sub_100621F44(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    sub_100586390(&qword_1010B3118, &qword_1010B3088);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100621FE4()
{
  unint64_t result = qword_1010B3760;
  if (!qword_1010B3760)
  {
    sub_10006389C(&qword_1010B3768);
    sub_100586390((unint64_t *)&qword_101099D48, &qword_101099D50);
    sub_100616A1C((unint64_t *)&qword_10109D020, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3760);
  }
  return result;
}

unint64_t sub_1006220B0()
{
  unint64_t result = qword_1010B37B8;
  if (!qword_1010B37B8)
  {
    sub_10006389C(&qword_1010B3790);
    swift_getOpaqueTypeConformance2();
    sub_100063858((unint64_t *)&unk_10109CE00, (uint64_t *)&unk_1010A8A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B37B8);
  }
  return result;
}

unint64_t sub_100622194()
{
  unint64_t result = qword_1010B37C8;
  if (!qword_1010B37C8)
  {
    sub_10006389C(&qword_1010B37A0);
    sub_10006389C(&qword_1010B3790);
    sub_1006220B0();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B37C8);
  }
  return result;
}

uint64_t sub_100622244()
{
  return swift_deallocObject();
}

double sub_100622254()
{
  double v1 = *(double *)(v0 + 24);
  char v2 = *(unsigned char *)(v0 + 32);
  static HorizontalAlignment.leading.getter();
  ViewDimensions.subscript.getter();
  double v4 = 0.0;
  if ((v2 & 1) == 0) {
    double v4 = v1;
  }
  return v4 + v3;
}

unint64_t sub_1006222B0()
{
  unint64_t result = qword_1010B37F8;
  if (!qword_1010B37F8)
  {
    sub_10006389C(&qword_1010B37F0);
    sub_100063858(&qword_1010B3800, &qword_1010B37D0);
    sub_1000D27FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B37F8);
  }
  return result;
}

unint64_t sub_100622350()
{
  unint64_t result = qword_1010B3808;
  if (!qword_1010B3808)
  {
    sub_10006389C(&qword_1010B37E0);
    sub_1006222B0();
    sub_100063858(&qword_1010B3800, &qword_1010B37D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3808);
  }
  return result;
}

uint64_t sub_1006223F0()
{
  return swift_deallocObject();
}

double sub_100622400()
{
  double v1 = *(double *)(v0 + 16);
  static HorizontalAlignment.leading.getter();
  ViewDimensions.subscript.getter();
  return v1 + v2;
}

unint64_t sub_10062243C()
{
  unint64_t result = qword_1010B3830;
  if (!qword_1010B3830)
  {
    sub_10006389C(&qword_1010B3820);
    sub_1006224E4(&qword_1010B3838, (uint64_t *)&unk_1010B4480, &qword_1010B34F8, (void (*)(void))sub_100621118);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3830);
  }
  return result;
}

uint64_t sub_1006224E4(unint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    sub_10006389C(a3);
    a4();
    swift_getOpaqueTypeConformance2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1006225AC()
{
  unint64_t result = qword_1010B3890;
  if (!qword_1010B3890)
  {
    sub_10006389C(&qword_1010B3880);
    sub_100063858(&qword_1010B3898, &qword_1010B3858);
    sub_100063858(&qword_1010B38A0, &qword_1010B3848);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3890);
  }
  return result;
}

unint64_t sub_10062266C()
{
  unint64_t result = qword_1010B38B0;
  if (!qword_1010B38B0)
  {
    sub_10006389C(&qword_1010B3828);
    sub_10062243C();
    sub_100616A1C((unint64_t *)&qword_10109D020, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B38B0);
  }
  return result;
}

uint64_t sub_100622718(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for PopularIconShapeStyle()
{
  return &type metadata for PopularIconShapeStyle;
}

ValueMetadata *type metadata accessor for Tracklist.BadgedPunchOut()
{
  return &type metadata for Tracklist.BadgedPunchOut;
}

unsigned char *storeEnumTagSinglePayload for Tracklist.LeadingIconState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100622854);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Tracklist.LeadingIconState()
{
  return &type metadata for Tracklist.LeadingIconState;
}

uint64_t sub_10062288C()
{
  return sub_100616980(&qword_1010B38D8, (uint64_t *)&unk_1010B4430, &qword_1010B38E0, &qword_1010B34D0);
}

uint64_t sub_1006228C4()
{
  return sub_100063858(&qword_1010B38E8, &qword_1010B38F0);
}

uint64_t sub_100622900()
{
  return sub_100621F44(&qword_1010B38F8, &qword_1010B3900, (void (*)(void))sub_10062144C);
}

unint64_t sub_100622940()
{
  unint64_t result = qword_1010B3908;
  if (!qword_1010B3908)
  {
    sub_10006389C(&qword_1010B3660);
    sub_100063858(&qword_1010B36B8, &qword_1010B3658);
    sub_100621BF4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3908);
  }
  return result;
}

unint64_t sub_1006229E4()
{
  unint64_t result = qword_1010B3910;
  if (!qword_1010B3910)
  {
    sub_10006389C(&qword_1010B3700);
    sub_100622A84();
    sub_100063858((unint64_t *)&unk_10109CF50, &qword_1010A8A20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3910);
  }
  return result;
}

unint64_t sub_100622A84()
{
  unint64_t result = qword_1010B3918;
  if (!qword_1010B3918)
  {
    sub_10006389C(&qword_1010B36F8);
    sub_100622B30(&qword_1010B3920, &qword_1010B3928, (void (*)(void))sub_100621CA8, (void (*)(void))sub_1005862E4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3918);
  }
  return result;
}

uint64_t sub_100622B30(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100622BBC()
{
  unint64_t result = qword_1010B3930;
  if (!qword_1010B3930)
  {
    sub_10006389C(&qword_1010B37B0);
    sub_10062147C(&qword_1010B37C0, &qword_1010B37A8, (void (*)(void))sub_100622194);
    sub_100616A1C((unint64_t *)&qword_10109D020, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3930);
  }
  return result;
}

uint64_t sub_100622C94()
{
  return sub_100622B30(&qword_1010B3938, &qword_1010B3940, (void (*)(void))sub_1006222B0, (void (*)(void))sub_100622350);
}

uint64_t sub_100622CE4()
{
  return sub_100063858(&qword_1010B3948, &qword_1010B3810);
}

unint64_t sub_100622D24()
{
  unint64_t result = qword_1010B3950;
  if (!qword_1010B3950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3950);
  }
  return result;
}

uint64_t sub_100622D78()
{
  return sub_100063858(&qword_1010B3958, &qword_1010B3960);
}

unint64_t sub_100622DB8()
{
  unint64_t result = qword_1010B3968;
  if (!qword_1010B3968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3968);
  }
  return result;
}

unint64_t sub_100622E10()
{
  unint64_t result = qword_1010B3970;
  if (!qword_1010B3970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3970);
  }
  return result;
}

uint64_t sub_100622E64()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_100622E80@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  Path.init()();
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetHeight(v14);
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  CGRectGetHeight(v15);
  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  CGRectGetWidth(v16);
  v17.origin.x = a2;
  v17.origin.y = a3;
  v17.size.width = a4;
  v17.size.height = a5;
  CGRectGetMinX(v17);
  v18.origin.x = a2;
  v18.origin.y = a3;
  v18.size.width = a4;
  v18.size.height = a5;
  CGRectGetMaxY(v18);
  Path.move(to:)();
  v19.origin.x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  CGRectGetMinX(v19);
  v20.origin.x = a2;
  v20.origin.y = a3;
  v20.size.width = a4;
  v20.size.height = a5;
  CGRectGetMinY(v20);
  Path.addLine(to:)();
  v21.origin.x = a2;
  v21.origin.y = a3;
  v21.size.width = a4;
  v21.size.height = a5;
  CGRectGetMaxX(v21);
  v22.origin.x = a2;
  v22.origin.y = a3;
  v22.size.width = a4;
  v22.size.height = a5;
  CGRectGetMinY(v22);
  Path.addLine(to:)();
  v23.origin.x = a2;
  v23.origin.y = a3;
  v23.size.width = a4;
  v23.size.height = a5;
  CGRectGetMaxX(v23);
  Path.addLine(to:)();
  v24.origin.x = a2;
  v24.origin.y = a3;
  v24.size.width = a4;
  v24.size.height = a5;
  CGRectGetMaxY(v24);
  Path.addArc(tangent1End:tangent2End:radius:transform:)();
  v25.origin.x = a2;
  v25.origin.y = a3;
  v25.size.width = a4;
  v25.size.height = a5;
  CGRectGetMinX(v25);
  v26.origin.x = a2;
  v26.origin.y = a3;
  v26.size.width = a4;
  v26.size.height = a5;
  CGRectGetMaxY(v26);
  Path.addLine(to:)();
  double result = *(double *)&v11;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v13;
  return result;
}

unint64_t sub_100623090()
{
  unint64_t result = qword_1010B3978;
  if (!qword_1010B3978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3978);
  }
  return result;
}

void *sub_1006230E4()
{
  return &protocol witness table for Color;
}

NSString sub_1006230F4()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_101129DE8 = (uint64_t)result;
  return result;
}

NSString sub_10062312C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_101129DF0 = (uint64_t)result;
  return result;
}

NSString sub_100623164()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_101129DF8 = (uint64_t)result;
  return result;
}

id sub_1006232D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s8ActivityCMa();
  return [super dealloc];
}

uint64_t _s8ActivityCMa()
{
  return self;
}

uint64_t sub_1006233E4()
{
  sub_10005D180();
  uint64_t v0 = StringProtocol.capitalized.getter();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TabIdentifier.musicTabID.getter@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      int v3 = (unsigned int *)&enum case for MusicTabID.listenNow(_:);
      break;
    case 2:
      int v3 = (unsigned int *)&enum case for MusicTabID.browse(_:);
      break;
    case 3:
      int v3 = (unsigned int *)&enum case for MusicTabID.radio(_:);
      break;
    case 4:
      int v3 = (unsigned int *)&enum case for MusicTabID.search(_:);
      break;
    case 5:
      int v3 = (unsigned int *)&enum case for MusicTabID.videos(_:);
      break;
    default:
      int v3 = (unsigned int *)&enum case for MusicTabID.library(_:);
      break;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = type metadata accessor for MusicTabID();
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a2, v4, v5);
}

uint64_t sub_1006235DC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s9MusicCore13TabIdentifierO0A0E05musicC2IDACSg0A2UI0acF0O_tcfC_0(a1);
  *a2 = result;
  return result;
}

uint64_t _s9MusicCore13TabIdentifierO0A0E05musicC2IDACSg0A2UI0acF0O_tcfC_0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MusicTabID();
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(a1, v2);
  if (v4 == enum case for MusicTabID.listenNow(_:)) {
    return 1;
  }
  if (v4 == enum case for MusicTabID.browse(_:)) {
    return 2;
  }
  if (v4 == enum case for MusicTabID.videos(_:)) {
    return 5;
  }
  if (v4 == enum case for MusicTabID.radio(_:)) {
    return 3;
  }
  if (v4 == enum case for MusicTabID.library(_:)) {
    return 0;
  }
  if (v4 == enum case for MusicTabID.search(_:)) {
    return 4;
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return 6;
}

uint64_t sub_100623770(uint64_t a1)
{
  uint64_t v2 = sub_100063814((uint64_t *)&unk_10109C010);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1006237D0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_1010B42A0, &qword_101099B50).n128_u64[0];
  return result;
}

double sub_10062382C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_101099CB8, (uint64_t *)&unk_1010B43F0).n128_u64[0];
  return result;
}

__n128 sub_100623888@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  CGRect v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    int v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    CGRect v19 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_10006CAB8(v17, a9, a16);
  int v29 = (_OWORD *)(a9 + *(int *)(sub_100063814(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *int v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_100623A58@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_1001CC8D0(a16, v22, v21 & 1);

  return swift_bridgeObjectRetain();
}

double sub_100623C4C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_1010B4290, &qword_10109CED0).n128_u64[0];
  return result;
}

double sub_100623CA8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10109D3B0, &qword_1010B4330).n128_u64[0];
  return result;
}

double sub_100623D04@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10109DAD0, (uint64_t *)&unk_1010B44B0).n128_u64[0];
  return result;
}

double sub_100623D60@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10109DE18, (uint64_t *)&unk_1010B44C0).n128_u64[0];
  return result;
}

double sub_100623DBC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10109DEB8, (uint64_t *)&unk_1010B44D0).n128_u64[0];
  return result;
}

double sub_100623E18@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10109E578, (uint64_t *)&unk_1010B4300).n128_u64[0];
  return result;
}

double sub_100623E74@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10109E638, (uint64_t *)&unk_1010B4310).n128_u64[0];
  return result;
}

double sub_100623ED0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10109E608, (uint64_t *)&unk_1010B4320).n128_u64[0];
  return result;
}

uint64_t sub_100623F2C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    CGRect v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v35 = *v13;
  uint64_t v36 = *((void *)v13 + 2);
  long long v33 = *(long long *)((char *)v13 + 24);
  sub_10003CABC((uint64_t)&v33 + 8, (uint64_t)v34, &qword_1010B4268);
  long long v24 = v13[1];
  *(_OWORD *)a9 = *v13;
  *(_OWORD *)(a9 + 16) = v24;
  *(_OWORD *)(a9 + 88) = v29;
  *(_OWORD *)(a9 + 104) = v30;
  *(_OWORD *)(a9 + 120) = v31;
  *(_OWORD *)(a9 + 136) = v32;
  *(_OWORD *)(a9 + 40) = v26;
  *(_OWORD *)(a9 + 56) = v27;
  *(void *)(a9 + 32) = *((void *)v13 + 4);
  *(_OWORD *)(a9 + 72) = v28;
  sub_1000D230C((uint64_t)&v35);
  swift_retain();
  return sub_100477868((uint64_t)v34);
}

uint64_t sub_10062411C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    CGRect v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[1];
  long long v36 = *v13;
  long long v37 = v24;
  sub_1006330A0((uint64_t)&v36, (uint64_t)v39);
  uint64_t v38 = *((void *)&v37 + 1);
  uint64_t v34 = *((void *)v13 + 4);
  char v35 = *((unsigned char *)v13 + 40);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  *(_OWORD *)((char *)a9 + 25) = *(long long *)((char *)v13 + 25);
  a9[8] = v32;
  a9[9] = v33;
  a9[3] = v27;
  a9[4] = v28;
  a9[6] = v30;
  a9[7] = v31;
  a9[5] = v29;
  sub_1006330FC((uint64_t)v39);
  sub_1000D2338((uint64_t)&v38);
  return sub_100477868((uint64_t)&v34);
}

double sub_1006242F8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010A5160, (uint64_t *)&unk_1010B4400).n128_u64[0];
  return result;
}

double sub_100624354@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100624DE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010A5180, (uint64_t *)&unk_1010B4410).n128_u64[0];
  return result;
}

double sub_1006243B0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010A5E60, (uint64_t *)&unk_1010B4420).n128_u64[0];
  return result;
}

double sub_10062440C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100624DE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010A83C8, (uint64_t *)&unk_1010B44A0).n128_u64[0];
  return result;
}

uint64_t sub_100624468@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v25 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(_OWORD *)(a9 + 56) = v30;
  *(_OWORD *)(a9 + 72) = v31;
  *(_OWORD *)(a9 + 88) = v32;
  *(_OWORD *)(a9 + 104) = v33;
  *(_OWORD *)(a9 + 8) = v27;
  *(_OWORD *)(a9 + 24) = v28;
  *(void *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v29;

  return swift_retain();
}

double sub_100624624@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010AF080, (uint64_t *)&unk_1010B4370).n128_u64[0];
  return result;
}

double sub_100624680@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010AF108, (uint64_t *)&unk_1010B4380).n128_u64[0];
  return result;
}

double sub_1006246DC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010AF198, (uint64_t *)&unk_1010B4390).n128_u64[0];
  return result;
}

double sub_100624738@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010AF370, (uint64_t *)&unk_1010B43C0).n128_u64[0];
  return result;
}

double sub_100624794@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010AF3F8, (uint64_t *)&unk_1010B43E0).n128_u64[0];
  return result;
}

double sub_1006247F0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010AF3F0, (uint64_t *)&unk_1010B43D0).n128_u64[0];
  return result;
}

double sub_10062484C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010AF7C0, (uint64_t *)&unk_1010B4490).n128_u64[0];
  return result;
}

uint64_t sub_1006248A8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    CGRect v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  *(_OWORD *)((char *)a9 + 57) = *(_OWORD *)((char *)v13 + 57);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  a9[9] = v31;
  a9[10] = v32;
  a9[11] = v33;
  a9[5] = v27;
  a9[6] = v28;
  a9[7] = v29;
  a9[8] = v30;

  return sub_10034B700((uint64_t)v13);
}

double sub_100624A68@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_1010B42B0, &qword_1010AECD8).n128_u64[0];
  return result;
}

uint64_t sub_100624AC4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v26 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = a17;
  *(_OWORD *)(a9 + 80) = v32;
  *(_OWORD *)(a9 + 96) = v33;
  *(_OWORD *)(a9 + 112) = v34;
  *(_OWORD *)(a9 + 16) = v28;
  *(_OWORD *)(a9 + 32) = v29;
  *(_OWORD *)(a9 + 48) = v30;
  *(_OWORD *)(a9 + 64) = v31;
  swift_retain();

  return swift_retain();
}

double sub_100624C78@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010B34D0, (uint64_t *)&unk_1010B4430).n128_u64[0];
  return result;
}

double sub_100624CD4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100624DE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010B3508, (uint64_t *)&unk_1010B4450).n128_u64[0];
  return result;
}

double sub_100624D30@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100624DE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010B34E0, (uint64_t *)&unk_1010B4440).n128_u64[0];
  return result;
}

double sub_100624D8C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100624DE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010B3818, (uint64_t *)&unk_1010B4480).n128_u64[0];
  return result;
}

__n128 sub_100624DE8@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  CGRect v19 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    CGRect v19 = a16;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v29 = sub_100063814(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a9, v17, v29);
  long long v30 = (_OWORD *)(a9 + *(int *)(sub_100063814(a17) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *long long v30 = v32;
  v30[1] = v33;
  __n128 result = v35;
  void v30[2] = v34;
  v30[3] = v35;
  return result;
}

double sub_100624FE4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010B3828, (uint64_t *)&unk_1010B4470).n128_u64[0];
  return result;
}

uint64_t sub_100625040@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    CGRect v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[1];
  long long v37 = *v13;
  long long v38 = v24;
  sub_1006330A0((uint64_t)&v37, (uint64_t)v40);
  long long v26 = v13[1];
  long long v35 = v13[2];
  long long v25 = v35;
  *(_OWORD *)a9 = *v13;
  *(_OWORD *)(a9 + 16) = v26;
  *(_OWORD *)(a9 + 32) = v25;
  *(_OWORD *)(a9 + 152) = v34;
  *(_OWORD *)(a9 + 136) = v33;
  *(_OWORD *)(a9 + 120) = v32;
  *(_OWORD *)(a9 + 104) = v31;
  *(_OWORD *)(a9 + 56) = v28;
  uint64_t v39 = *((void *)&v38 + 1);
  char v36 = *((unsigned char *)v13 + 48);
  *(unsigned char *)(a9 + 48) = v36;
  *(_OWORD *)(a9 + 72) = v29;
  *(_OWORD *)(a9 + 88) = v30;
  sub_1006330FC((uint64_t)v40);
  sub_1000D2338((uint64_t)&v39);
  return sub_100477868((uint64_t)&v35);
}

double sub_100625228@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_10109DE28, (uint64_t *)&unk_1010B4460).n128_u64[0];
  return result;
}

double sub_100625284@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010B2F78, (uint64_t *)&unk_1010B4350).n128_u64[0];
  return result;
}

double sub_1006252E0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010B2F58, (uint64_t *)&unk_1010B4360).n128_u64[0];
  return result;
}

double sub_10062533C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010B4338, (uint64_t *)&unk_1010B4340).n128_u64[0];
  return result;
}

uint64_t sub_100625398@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    CGRect v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 144);
  *(_OWORD *)(a9 + 128) = *(_OWORD *)(v13 + 128);
  *(_OWORD *)(a9 + 144) = v24;
  long long v25 = *(_OWORD *)(v13 + 80);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v13 + 64);
  *(_OWORD *)(a9 + 80) = v25;
  long long v26 = *(_OWORD *)(v13 + 112);
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(v13 + 96);
  *(_OWORD *)(a9 + 112) = v26;
  long long v27 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v27;
  long long v28 = *(_OWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 48) = v28;
  *(_OWORD *)(a9 + 216) = v33;
  *(_OWORD *)(a9 + 232) = v34;
  *(_OWORD *)(a9 + 248) = v35;
  *(_OWORD *)(a9 + 264) = v36;
  *(_OWORD *)(a9 + 168) = v30;
  *(_OWORD *)(a9 + 184) = v31;
  *(unsigned char *)(a9 + 160) = *(unsigned char *)(v13 + 160);
  *(_OWORD *)(a9 + 200) = v32;

  return sub_100633300(v13);
}

double sub_100625580@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010B43A8, (uint64_t *)&unk_1010B43B0).n128_u64[0];
  return result;
}

double sub_1006255DC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_1010B73F0, &qword_1010B43A0).n128_u64[0];
  return result;
}

double sub_100625638@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010B4270, &qword_1010B4278).n128_u64[0];
  return result;
}

double sub_100625694@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010B4280, &qword_1010B4288).n128_u64[0];
  return result;
}

__n128 sub_1006256F0@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  char v18 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v27 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    char v18 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(unsigned char *)(a9 + 8) = v18 & 1;
  *(_OWORD *)(a9 + 80) = v33;
  *(_OWORD *)(a9 + 96) = v34;
  *(_OWORD *)(a9 + 112) = v35;
  *(_OWORD *)(a9 + 16) = v29;
  *(_OWORD *)(a9 + 32) = v30;
  __n128 result = v32;
  *(_OWORD *)(a9 + 48) = v31;
  *(__n128 *)(a9 + 64) = v32;
  return result;
}

uint64_t sub_10062589C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, unsigned __int8 a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v119 = a8;
  uint64_t v118 = a7;
  uint64_t v117 = a6;
  uint64_t v116 = a5;
  uint64_t v115 = a4;
  uint64_t v114 = a3;
  uint64_t v112 = a2;
  uint64_t v133 = a1;
  uint64_t v129 = a16;
  uint64_t v130 = a17;
  uint64_t v131 = a15;
  uint64_t v127 = a14;
  int v113 = a13;
  LODWORD(v120) = a12;
  uint64_t v135 = a10;
  uint64_t v136 = a11;
  uint64_t v111 = a9;
  uint64_t v125 = type metadata accessor for SharePlayProxCard(0);
  uint64_t v18 = __chkstk_darwin(v125);
  uint64_t v128 = (uint64_t)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v134 = (uint64_t)&v108 - v20;
  char v21 = (int *)type metadata accessor for SharePlayProxCard.ViewModel(0);
  uint64_t v22 = __chkstk_darwin(v21);
  size_t v123 = (uint64_t (*)(uint64_t))((char *)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v22);
  uint64_t v126 = (char *)&v108 - v24;
  uint64_t v25 = sub_100063814((uint64_t *)&unk_10109EF90);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v108 = (uint64_t)&v108 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  long long v30 = (char *)&v108 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  long long v33 = (char *)&v108 - v32;
  __chkstk_darwin(v31);
  long long v35 = (char *)&v108 - v34;
  long long v36 = (uint64_t *)&v17[qword_1010B3A00];
  *long long v36 = 0;
  v36[1] = 0;
  uint64_t v122 = v36;
  long long v37 = (uint64_t *)&v17[qword_1010B3A08];
  uint64_t v38 = type metadata accessor for Artwork();
  uint64_t *v37 = 0;
  v37[1] = 0;
  id v124 = v37;
  uint64_t v39 = *(void *)(v38 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v35, 1, 1, v38);
  uint64_t v40 = self;
  int v121 = v17;
  id v41 = [v40 shared];
  id v42 = [v41 activeUserState];

  id v43 = [v42 music];
  id v44 = [v43 userProfile];

  id v110 = v44;
  if (v44)
  {
    id v45 = [v44 name];
    uint64_t v132 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v47 = v46;

    id v48 = [v44 artworkInfo];
    if (v48)
    {
      uint64_t v49 = v48;
      id v50 = [v48 responseDictionary];

      if (v50)
      {
        uint64_t v51 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        unint64_t v52 = sub_1000483A0(v51);
        swift_bridgeObjectRelease();
        if (v52)
        {
          Artwork.init(_:)();
          sub_1003694FC((uint64_t)v33, (uint64_t)v35);
        }
      }
    }
    sub_10006CAB8((uint64_t)v35, (uint64_t)v30, (uint64_t *)&unk_10109EF90);
    int v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48))(v30, 1, v38);
    sub_1000637B8((uint64_t)v30, (uint64_t *)&unk_10109EF90);
    if (v53 != 1)
    {
      uint64_t v54 = (uint64_t)v35;
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v132 = 0;
    uint64_t v47 = 0;
  }
  sub_100063814((uint64_t *)&unk_1010A0980);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_100E251C0;
  *(void *)(v55 + 32) = CNContactThumbnailImageDataKey;
  uint64_t v138 = v55;
  specialized Array._endMutation()();
  uint64_t v56 = self;
  uint64_t v57 = CNContactThumbnailImageDataKey;
  id v58 = [v56 descriptorForRequiredKeysForStyle:0];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v59 = [objc_allocWithZone((Class)CNContactStore) init];
  sub_100063814((uint64_t *)&unk_1010B42F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v137 = 0;
  id v61 = [v59 _ios_meContactWithKeysToFetch:isa error:&v137];

  id v62 = v137;
  if (v61)
  {
    if (v47)
    {
      uint64_t v63 = v47;
    }
    else
    {
      id v66 = [v56 stringFromContact:v61 style:0];
      if (v66)
      {
        int v67 = v66;
        uint64_t v132 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v63 = v68;
      }
      else
      {
        uint64_t v63 = 0;
      }
    }
    uint64_t v69 = v108;
    sub_10006CAB8((uint64_t)v35, v108, (uint64_t *)&unk_10109EF90);
    uint64_t v54 = (uint64_t)v35;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v69, 1, v38) == 1)
    {
      sub_1000637B8(v69, (uint64_t *)&unk_10109EF90);
      id v70 = [v61 thumbnailImageData];
      if (v70)
      {
        uint64_t v71 = v70;
        uint64_t v72 = v63;
        uint64_t v73 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v75 = v74;

        id v76 = objc_allocWithZone((Class)UIImage);
        Class v77 = Data._bridgeToObjectiveC()().super.isa;
        id v65 = [v76 initWithData:v77];
        uint64_t v78 = v73;
        uint64_t v63 = v72;
        sub_10007A5C4(v78, v75);

        goto LABEL_25;
      }
    }
    else
    {

      sub_1000637B8(v69, (uint64_t *)&unk_10109EF90);
    }
    id v65 = 0;
    goto LABEL_25;
  }
  uint64_t v64 = v62;
  uint64_t v54 = (uint64_t)v35;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  swift_errorRelease();
LABEL_15:
  id v65 = 0;
  uint64_t v63 = v47;
LABEL_25:
  uint64_t v79 = (uint64_t)v126;
  uint64_t v80 = (uint64_t)&v126[v21[10]];
  uint64_t v109 = v54;
  sub_10006CAB8(v54, v80, (uint64_t *)&unk_10109EF90);
  uint64_t v81 = v112;
  *(void *)uint64_t v79 = v133;
  *(void *)(v79 + 8) = v81;
  uint64_t v82 = v115;
  *(void *)(v79 + 16) = v114;
  *(void *)(v79 + 24) = v82;
  uint64_t v83 = v117;
  *(void *)(v79 + 32) = v116;
  *(void *)(v79 + 40) = v83;
  uint64_t v84 = v119;
  *(void *)(v79 + 48) = v118;
  *(void *)(v79 + 56) = v84;
  *(void *)(v79 + 64) = v111;
  *(unsigned char *)(v79 + 72) = v113 & 1;
  *(void *)(v79 + v21[11]) = v65;
  uint64_t v85 = (uint64_t *)(v79 + v21[12]);
  *uint64_t v85 = v132;
  v85[1] = v63;
  uint64_t v86 = v79 + v21[13];
  uint64_t v88 = v135;
  uint64_t v87 = v136;
  *(void *)uint64_t v86 = v135;
  *(void *)(v86 + 8) = v87;
  int v89 = v120 & 1;
  *(unsigned char *)(v86 + 16) = v120 & 1;
  LODWORD(v119) = v89;
  type metadata accessor for SharePlayProxCard.CardState(0);
  uint64_t v90 = swift_allocObject();
  id v120 = v65;
  swift_retain();
  sub_100627CD0(v88, v87, v89);
  sub_100629CB4();
  uint64_t v91 = swift_allocObject();
  uint64_t v132 = v91 + 16;
  uint64_t v118 = v91;
  swift_unknownObjectWeakInit();
  uint64_t v92 = v123;
  sub_100631F64(v79, (uint64_t)v123, type metadata accessor for SharePlayProxCard.ViewModel);
  swift_retain();
  uint64_t v93 = v128;
  sub_100626390((uint64_t)v92, v128);
  size_t v123 = type metadata accessor for SharePlayProxCard;
  uint64_t v94 = v134;
  sub_100631F64(v93, v134, type metadata accessor for SharePlayProxCard);
  uint64_t v95 = (uint64_t *)(v94 + *(int *)(v125 + 24));
  uint64_t v96 = *v95;
  swift_retain();
  sub_10006ADFC(v96);
  *uint64_t v95 = (uint64_t)sub_100633098;
  v95[1] = v91;
  sub_1006323B0(v93, type metadata accessor for SharePlayProxCard);
  long long v97 = v121;
  *(void *)&v121[qword_1010B39F0] = v90;
  sub_100631F64(v79, (uint64_t)&v97[qword_1010B39F8], type metadata accessor for SharePlayProxCard.ViewModel);
  uint64_t v98 = v122;
  uint64_t v99 = *v122;
  uint64_t v100 = v131;
  uint64_t *v122 = v127;
  v98[1] = v100;
  swift_retain();
  swift_retain();
  sub_10006ADFC(v99);
  uint64_t v101 = v124;
  uint64_t v102 = *v124;
  uint64_t v104 = v129;
  uint64_t v103 = v130;
  *id v124 = v129;
  v101[1] = v103;
  sub_10007B674(v104);
  sub_10006ADFC(v102);

  uint64_t v105 = v134;
  sub_100631F64(v134, v93, v123);
  uint64_t v106 = Card.ViewController.init(content:)(v93);
  sub_10006ADFC(v104);
  swift_release();
  sub_100627DF4(v135, v136, v119);

  swift_release();
  swift_release();
  sub_1006323B0(v105, type metadata accessor for SharePlayProxCard);
  sub_1006323B0(v79, type metadata accessor for SharePlayProxCard.ViewModel);
  sub_1000637B8(v109, (uint64_t *)&unk_10109EF90);
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  swift_release();
  return v106;
}

uint64_t sub_100626390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = (int *)type metadata accessor for SharePlayProxCard(0);
  uint64_t v5 = (void *)(a2 + v4[6]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = a2 + v4[7];
  State.init(wrappedValue:)();
  *(unsigned char *)uint64_t v6 = v15;
  *(void *)(v6 + 8) = *((void *)&v15 + 1);
  uint64_t v7 = a2 + v4[8];
  State.init(wrappedValue:)();
  *(unsigned char *)uint64_t v7 = v15;
  *(void *)(v7 + 8) = *((void *)&v15 + 1);
  uint64_t v8 = a2 + v4[9];
  State.init(wrappedValue:)();
  *(unsigned char *)uint64_t v8 = v15;
  *(void *)(v8 + 8) = *((void *)&v15 + 1);
  uint64_t v9 = a2 + v4[10];
  State.init(wrappedValue:)();
  *(_OWORD *)uint64_t v9 = v15;
  *(void *)(v9 + 16) = v16;
  sub_100631F64(a1, a2, type metadata accessor for SharePlayProxCard.ViewModel);
  uint64_t v10 = (uint64_t *)(a2 + v4[5]);
  type metadata accessor for SharePlayProxCard.CardState(0);
  sub_100631A58();
  uint64_t v11 = ObservedObject.init(wrappedValue:)();
  uint64_t v13 = v12;
  uint64_t result = sub_1006323B0(a1, type metadata accessor for SharePlayProxCard.ViewModel);
  *uint64_t v10 = v11;
  v10[1] = v13;
  return result;
}

void sub_10062651C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v1 = (void *)Strong;
    sub_100626694();
  }
}

void sub_100626570(char *a1, uint64_t a2, void *a3)
{
  int v4 = &a1[qword_1010B3A00];
  *(void *)int v4 = 0;
  *((void *)v4 + 1) = 0;
  uint64_t v5 = &a1[qword_1010B3A08];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  id v6 = a3;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1006265FC(void *a1, uint64_t a2, uint64_t a3)
{
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for SharePlayProxCardViewController(0);
  int v4 = (char *)v7.receiver;
  [super viewDidDisappear:a3];
  uint64_t v5 = *(void (**)(uint64_t))&v4[qword_1010B3A08];
  if (v5)
  {
    uint64_t v6 = swift_retain();
    v5(v6);
    sub_10006ADFC((uint64_t)v5);
  }
}

uint64_t sub_100626694()
{
  double v1 = v0;
  uint64_t v2 = sub_100063814(&qword_10109BA40);
  uint64_t result = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = &v0[qword_1010B39F8];
  if (v0[qword_1010B39F8 + 72] == 1)
  {
    uint64_t v7 = qword_1010B39F0;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v9 = v25;
    unint64_t v8 = v26;
    swift_bridgeObjectRelease();
    uint64_t v10 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0) {
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFLL;
    }
    if (v10)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v12 = v25;
      unint64_t v11 = v26;
    }
    else
    {
      CGRect v14 = (uint64_t *)&v6[*(int *)(type metadata accessor for SharePlayProxCard.ViewModel(0) + 48)];
      unint64_t v11 = v14[1];
      if (v11)
      {
        uint64_t v12 = *v14;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v12 = 0;
        unint64_t v11 = 0xE000000000000000;
      }
    }
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v25) = 1;
    swift_retain();
    static Published.subscript.setter();
    if (*(unsigned char *)(*(void *)&v1[v7] + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState_removedImage))
    {
      uint64_t v15 = 0;
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v15 = v25;
      if (!v25)
      {
        uint64_t v15 = *(void *)&v6[*(int *)(type metadata accessor for SharePlayProxCard.ViewModel(0) + 44)];
        if (v15) {
          id v16 = (id)v15;
        }
        else {
          uint64_t v15 = 1;
        }
      }
    }
    sub_10038F2AC((id)v15);
    if (qword_101097FA8 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100050A90(v17, (uint64_t)qword_101129538);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Updating user profile", v20, 2u);
      swift_slowDealloc();
    }

    uint64_t v21 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v5, 1, 1, v21);
    type metadata accessor for MainActor();
    swift_bridgeObjectRetain();
    sub_10038F2AC((id)v15);
    uint64_t v22 = v1;
    uint64_t v23 = static MainActor.shared.getter();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v23;
    *(void *)(v24 + 24) = &protocol witness table for MainActor;
    *(void *)(v24 + 32) = v12;
    *(void *)(v24 + 40) = v11;
    *(void *)(v24 + 48) = 0;
    *(void *)(v24 + 56) = 0;
    *(void *)(v24 + 64) = v15;
    *(_WORD *)(v24 + 72) = 513;
    *(void *)(v24 + 80) = v22;
    sub_100066A3C((uint64_t)v5, (uint64_t)&unk_1010B42C8, v24);
    sub_10038F304((id)v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10038F304((id)v15);
    return swift_release();
  }
  else
  {
    uint64_t v13 = *(void (**)(char *))&v0[qword_1010B3A00];
    if (v13)
    {
      swift_retain();
      v13(v0);
      return sub_10006ADFC((uint64_t)v13);
    }
  }
  return result;
}

uint64_t sub_100626B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a5;
  type metadata accessor for Locale();
  v5[4] = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  v5[5] = swift_task_alloc();
  sub_100063814(&qword_10109BA40);
  v5[6] = swift_task_alloc();
  v5[7] = type metadata accessor for MainActor();
  v5[8] = static MainActor.shared.getter();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1010A5F88 + dword_1010A5F88);
  uint64_t v7 = (void *)swift_task_alloc();
  v5[9] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_100626C84;
  return v9(a4, 1);
}

uint64_t sub_100626C84()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100626F04;
  }
  else {
    uint64_t v4 = sub_100626DE0;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100626DE0()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = (void *)v0[3];
  swift_release();
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  id v4 = v2;
  uint64_t v5 = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = v4;
  sub_100194A2C(v1, (uint64_t)&unk_1010B42E0, (uint64_t)v6);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100626F04()
{
  swift_release();
  if (qword_101097FA8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_101129538);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)id v4 = 138543362;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to update user profile %{public}@", v4, 0xCu);
    sub_100063814((uint64_t *)&unk_10109C1D0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = *(void **)(v0 + 24);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 88) = 0;
  swift_retain();
  static Published.subscript.setter();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [self alertControllerWithTitle:v8 message:0 preferredStyle:1];

  String.okButtonTitle.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [self actionWithTitle:v10 style:0 handler:0];

  [v9 addAction:v11];
  [v7 presentViewController:v9 animated:1 completion:0];

  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1006272A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  type metadata accessor for MainActor();
  void v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10062733C, v6, v5);
}

uint64_t sub_10062733C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  uint64_t v2 = *(void (**)(uint64_t))(v1 + qword_1010B3A00);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 24);
    swift_retain();
    v2(v3);
    sub_10006ADFC((uint64_t)v2);
  }
  **(unsigned char **)(v0 + 16) = v2 == 0;
  id v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_1006273F4()
{
}

uint64_t sub_100627424()
{
  swift_release();
  sub_1006323B0(v0 + qword_1010B39F8, type metadata accessor for SharePlayProxCard.ViewModel);
  sub_10006ADFC(*(void *)(v0 + qword_1010B3A00));
  uint64_t v1 = *(void *)(v0 + qword_1010B3A08);

  return sub_10006ADFC(v1);
}

id sub_1006274A0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharePlayProxCardViewController(0);
  return [super dealloc];
}

uint64_t sub_1006274D8(uint64_t a1)
{
  swift_release();
  sub_1006323B0(a1 + qword_1010B39F8, type metadata accessor for SharePlayProxCard.ViewModel);
  sub_10006ADFC(*(void *)(a1 + qword_1010B3A00));
  uint64_t v2 = *(void *)(a1 + qword_1010B3A08);

  return sub_10006ADFC(v2);
}

uint64_t type metadata accessor for SharePlayProxCardViewController(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B3A38);
}

uint64_t sub_100627580()
{
  uint64_t result = type metadata accessor for SharePlayProxCard.ViewModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SharePlayProxCard.ViewModel(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B3DC0);
}

uint64_t sub_10062764C()
{
  return type metadata accessor for SharePlayProxCardViewController(0);
}

uint64_t sub_100627654()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1006276C8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10062773C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1006277B0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState__name;
  uint64_t v2 = sub_100063814(&qword_10109C170);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState__image;
  uint64_t v4 = sub_100063814(&qword_10109C178);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState__isLoading;
  uint64_t v6 = sub_100063814(&qword_10109C180);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_1006278E4()
{
  return type metadata accessor for SharePlayProxCard.CardState(0);
}

uint64_t type metadata accessor for SharePlayProxCard.CardState(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B3BF8);
}

void sub_10062790C()
{
  sub_100014014(319, (unint64_t *)&qword_10109F108);
  if (v0 <= 0x3F)
  {
    sub_100627A38();
    if (v1 <= 0x3F)
    {
      sub_100014014(319, (unint64_t *)&qword_1010B3C20);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_100627A38()
{
  if (!qword_1010B3C10)
  {
    sub_10006389C((uint64_t *)&unk_1010AC1D0);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1010B3C10);
    }
  }
}

uint64_t sub_100627A94(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    uint64_t v9 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v9;
    uint64_t v10 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v10;
    uint64_t v11 = a2[7];
    uint64_t v12 = a2[8];
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    uint64_t v13 = a3[10];
    __dst = (void *)(a1 + v13);
    uint64_t v14 = (char *)a2 + v13;
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    uint64_t v15 = type metadata accessor for Artwork();
    uint64_t v33 = *(void *)(v15 - 8);
    uint64_t v34 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48);
    id v16 = v14;
    uint64_t v17 = v15;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v34(v16, 1, v17))
    {
      uint64_t v18 = sub_100063814((uint64_t *)&unk_10109EF90);
      memcpy(__dst, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v33 + 16))(__dst, v16, v17);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(__dst, 0, 1, v17);
    }
    uint64_t v19 = a3[11];
    uint64_t v20 = a3[12];
    uint64_t v21 = *(void **)((char *)a2 + v19);
    *(void *)(v7 + v19) = v21;
    uint64_t v22 = (void *)(v7 + v20);
    uint64_t v23 = (uint64_t *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = a3[13];
    uint64_t v26 = v7 + v25;
    uint64_t v27 = (uint64_t)a2 + v25;
    uint64_t v28 = *(void *)v27;
    uint64_t v29 = *(void *)(v27 + 8);
    char v30 = *(unsigned char *)(v27 + 16);
    id v31 = v21;
    swift_bridgeObjectRetain();
    sub_100627CD0(v28, v29, v30);
    *(void *)uint64_t v26 = v28;
    *(void *)(v26 + 8) = v29;
    *(unsigned char *)(v26 + 16) = v30;
  }
  return v7;
}

uint64_t sub_100627CD0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_100627CE0(uint64_t a1, int *a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = type metadata accessor for Artwork();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[13];
  uint64_t v8 = *(void *)v7;
  uint64_t v9 = *(void *)(v7 + 8);
  char v10 = *(unsigned char *)(v7 + 16);

  return sub_100627DF4(v8, v9, v10);
}

uint64_t sub_100627DF4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_100627E04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v10 = a3[10];
  __dst = (void *)(a1 + v10);
  uint64_t v11 = (const void *)(a2 + v10);
  *(void *)(a1 + 64) = v9;
  uint64_t v12 = type metadata accessor for Artwork();
  uint64_t v28 = *(void *)(v12 - 8);
  uint64_t v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29(v11, 1, v12))
  {
    uint64_t v13 = sub_100063814((uint64_t *)&unk_10109EF90);
    memcpy(__dst, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(__dst, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v12);
  }
  uint64_t v14 = a3[11];
  uint64_t v15 = a3[12];
  id v16 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v16;
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[13];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)v22;
  uint64_t v24 = *(void *)(v22 + 8);
  char v25 = *(unsigned char *)(v22 + 16);
  id v26 = v16;
  swift_bridgeObjectRetain();
  sub_100627CD0(v23, v24, v25);
  *(void *)uint64_t v21 = v23;
  *(void *)(v21 + 8) = v24;
  *(unsigned char *)(v21 + 16) = v25;
  return a1;
}

uint64_t sub_100627FEC(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v6 = a3[10];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Artwork();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100063814((uint64_t *)&unk_10109EF90);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[11];
  id v16 = *(void **)(a1 + v15);
  uint64_t v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  id v18 = v17;

  uint64_t v19 = a3[12];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[13];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)v24;
  uint64_t v26 = *(void *)(v24 + 8);
  LOBYTE(v16) = *(unsigned char *)(v24 + 16);
  sub_100627CD0(*(void *)v24, v26, (char)v16);
  uint64_t v27 = *(void *)v23;
  uint64_t v28 = *(void *)(v23 + 8);
  char v29 = *(unsigned char *)(v23 + 16);
  *(void *)uint64_t v23 = v25;
  *(void *)(v23 + 8) = v26;
  *(unsigned char *)(v23 + 16) = (_BYTE)v16;
  sub_100627DF4(v27, v28, v29);
  return a1;
}

uint64_t sub_100628288(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v7 = a3[10];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 56) = v6;
  uint64_t v10 = type metadata accessor for Artwork();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100063814((uint64_t *)&unk_10109EF90);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = a3[13];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
  return a1;
}

uint64_t sub_100628404(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v10 = a3[10];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Artwork();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_100063814((uint64_t *)&unk_10109EF90);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  uint64_t v19 = a3[11];
  uint64_t v20 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);

  uint64_t v21 = a3[12];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  void *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[13];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  char v29 = *(unsigned char *)(v28 + 16);
  uint64_t v30 = *(void *)v27;
  uint64_t v31 = *(void *)(v27 + 8);
  char v32 = *(unsigned char *)(v27 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(unsigned char *)(v27 + 16) = v29;
  sub_100627DF4(v30, v31, v32);
  return a1;
}

uint64_t sub_100628634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100628648);
}

uint64_t sub_100628648(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814((uint64_t *)&unk_10109EF90);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 40);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1006286FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100628710);
}

void *sub_100628710(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814((uint64_t *)&unk_10109EF90);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 40);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1006287BC()
{
  sub_1004CA92C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10062888C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v8;
    uint64_t v9 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v9;
    uint64_t v10 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v10;
    *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
    uint64_t v11 = type metadata accessor for SharePlayProxCard.ViewModel(0);
    uint64_t v12 = *(int *)(v11 + 40);
    __dst = (void *)(v6 + v12);
    uint64_t v57 = (int *)v11;
    uint64_t v55 = (char *)a2 + v12;
    uint64_t v13 = type metadata accessor for Artwork();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v54 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v54(v55, 1, v13))
    {
      uint64_t v15 = sub_100063814((uint64_t *)&unk_10109EF90);
      memcpy(__dst, v55, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(__dst, v55, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    uint64_t v16 = v57[11];
    int v17 = *(void **)((char *)a2 + v16);
    *(void *)(v6 + v16) = v17;
    uint64_t v18 = v57[12];
    uint64_t v19 = (void *)(v6 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = v57[13];
    uint64_t v23 = v6 + v22;
    uint64_t v24 = (uint64_t)a2 + v22;
    uint64_t v25 = *(void *)v24;
    uint64_t v26 = *(void *)(v24 + 8);
    char v27 = *(unsigned char *)(v24 + 16);
    id v28 = v17;
    swift_bridgeObjectRetain();
    sub_100627CD0(v25, v26, v27);
    *(void *)uint64_t v23 = v25;
    *(void *)(v23 + 8) = v26;
    *(unsigned char *)(v23 + 16) = v27;
    uint64_t v29 = a3[5];
    uint64_t v30 = a3[6];
    uint64_t v31 = (void *)(v6 + v29);
    char v32 = (uint64_t *)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    uint64_t v34 = (void *)(v6 + v30);
    uint64_t v35 = (uint64_t)a2 + v30;
    uint64_t v36 = *(uint64_t *)((char *)a2 + v30);
    swift_retain();
    if (v36)
    {
      uint64_t v37 = *(void *)(v35 + 8);
      void *v34 = v36;
      v34[1] = v37;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    }
    uint64_t v38 = a3[7];
    uint64_t v39 = a3[8];
    uint64_t v40 = v6 + v38;
    uint64_t v41 = (uint64_t)a2 + v38;
    *(unsigned char *)uint64_t v40 = *(unsigned char *)v41;
    *(void *)(v40 + 8) = *(void *)(v41 + 8);
    uint64_t v42 = v6 + v39;
    uint64_t v43 = (uint64_t)a2 + v39;
    *(unsigned char *)uint64_t v42 = *(unsigned char *)v43;
    *(void *)(v42 + 8) = *(void *)(v43 + 8);
    uint64_t v44 = a3[9];
    uint64_t v45 = a3[10];
    uint64_t v46 = v6 + v44;
    uint64_t v47 = (uint64_t)a2 + v44;
    *(unsigned char *)uint64_t v46 = *(unsigned char *)v47;
    *(void *)(v46 + 8) = *(void *)(v47 + 8);
    id v48 = (unint64_t *)(v6 + v45);
    uint64_t v49 = (uint64_t)a2 + v45;
    unint64_t v50 = *(uint64_t *)((char *)a2 + v45);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v50 >= 3)
    {
      uint64_t v51 = *(void **)(v49 + 8);
      *id v48 = v50;
      v48[1] = (unint64_t)v51;
      swift_bridgeObjectRetain();
      id v52 = v51;
    }
    else
    {
      *(_OWORD *)id v48 = *(_OWORD *)v49;
    }
    v48[2] = *(void *)(v49 + 16);
  }
  swift_retain();
  return v6;
}

uint64_t sub_100628BBC(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for SharePlayProxCard.ViewModel(0);
  uint64_t v5 = a1 + v4[10];
  uint64_t v6 = type metadata accessor for Artwork();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }

  swift_bridgeObjectRelease();
  sub_100627DF4(*(void *)(a1 + v4[13]), *(void *)(a1 + v4[13] + 8), *(unsigned char *)(a1 + v4[13] + 16));
  swift_release();
  if (*(void *)(a1 + *(int *)(a2 + 24))) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = a1 + *(int *)(a2 + 40);
  if (*(void *)v8 >= 3uLL)
  {
    swift_bridgeObjectRelease();
  }

  return swift_release();
}

uint64_t sub_100628D5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = type metadata accessor for SharePlayProxCard.ViewModel(0);
  uint64_t v10 = *(int *)(v9 + 40);
  __dst = (void *)(a1 + v10);
  uint64_t v55 = (int *)v9;
  int v53 = (const void *)(a2 + v10);
  uint64_t v11 = type metadata accessor for Artwork();
  uint64_t v12 = *(void *)(v11 - 8);
  id v52 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v52(v53, 1, v11))
  {
    uint64_t v13 = sub_100063814((uint64_t *)&unk_10109EF90);
    memcpy(__dst, v53, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v53, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v14 = v55[11];
  uint64_t v15 = *(void **)(a2 + v14);
  *(void *)(a1 + v14) = v15;
  uint64_t v16 = v55[12];
  int v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = v18[1];
  *int v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = v55[13];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)v22;
  uint64_t v24 = *(void *)(v22 + 8);
  char v25 = *(unsigned char *)(v22 + 16);
  id v26 = v15;
  swift_bridgeObjectRetain();
  sub_100627CD0(v23, v24, v25);
  *(void *)uint64_t v21 = v23;
  *(void *)(v21 + 8) = v24;
  *(unsigned char *)(v21 + 16) = v25;
  uint64_t v27 = a3[5];
  uint64_t v28 = a3[6];
  uint64_t v29 = (void *)(a1 + v27);
  uint64_t v30 = (void *)(a2 + v27);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  char v32 = (void *)(a1 + v28);
  uint64_t v33 = a2 + v28;
  uint64_t v34 = *(void *)(a2 + v28);
  swift_retain();
  if (v34)
  {
    uint64_t v35 = *(void *)(v33 + 8);
    *char v32 = v34;
    v32[1] = v35;
    swift_retain();
  }
  else
  {
    *(_OWORD *)char v32 = *(_OWORD *)v33;
  }
  uint64_t v36 = a3[7];
  uint64_t v37 = a3[8];
  uint64_t v38 = a1 + v36;
  uint64_t v39 = a2 + v36;
  *(unsigned char *)uint64_t v38 = *(unsigned char *)v39;
  *(void *)(v38 + 8) = *(void *)(v39 + 8);
  uint64_t v40 = a1 + v37;
  uint64_t v41 = a2 + v37;
  *(unsigned char *)uint64_t v40 = *(unsigned char *)v41;
  *(void *)(v40 + 8) = *(void *)(v41 + 8);
  uint64_t v42 = a3[9];
  uint64_t v43 = a3[10];
  uint64_t v44 = a1 + v42;
  uint64_t v45 = a2 + v42;
  *(unsigned char *)uint64_t v44 = *(unsigned char *)v45;
  *(void *)(v44 + 8) = *(void *)(v45 + 8);
  uint64_t v46 = (unint64_t *)(a1 + v43);
  uint64_t v47 = a2 + v43;
  unint64_t v48 = *(void *)(a2 + v43);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v48 >= 3)
  {
    uint64_t v49 = *(void **)(v47 + 8);
    *uint64_t v46 = v48;
    v46[1] = (unint64_t)v49;
    swift_bridgeObjectRetain();
    id v50 = v49;
  }
  else
  {
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  }
  v46[2] = *(void *)(v47 + 16);
  swift_retain();
  return a1;
}

uint64_t sub_100629044(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v5 = (int *)type metadata accessor for SharePlayProxCard.ViewModel(0);
  uint64_t v6 = v5[10];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Artwork();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100063814((uint64_t *)&unk_10109EF90);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = v5[11];
  uint64_t v16 = *(void **)(a1 + v15);
  int v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  id v18 = v17;

  uint64_t v19 = v5[12];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v5[13];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = *(void *)v24;
  uint64_t v26 = *(void *)(v24 + 8);
  char v27 = *(unsigned char *)(v24 + 16);
  sub_100627CD0(*(void *)v24, v26, v27);
  uint64_t v28 = *(void *)v23;
  uint64_t v29 = *(void *)(v23 + 8);
  char v30 = *(unsigned char *)(v23 + 16);
  *(void *)uint64_t v23 = v25;
  *(void *)(v23 + 8) = v26;
  *(unsigned char *)(v23 + 16) = v27;
  sub_100627DF4(v28, v29, v30);
  uint64_t v31 = a3[5];
  char v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  *char v32 = *v33;
  v32[1] = v33[1];
  swift_retain();
  swift_release();
  uint64_t v34 = a3[6];
  uint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = a2 + v34;
  uint64_t v37 = *(void *)(a1 + v34);
  uint64_t v38 = *(void *)(a2 + v34);
  if (v37)
  {
    if (v38)
    {
      uint64_t v39 = *(void *)(v36 + 8);
      *uint64_t v35 = v38;
      v35[1] = v39;
      swift_retain();
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v38)
  {
    uint64_t v40 = *(void *)(v36 + 8);
    *uint64_t v35 = v38;
    v35[1] = v40;
    swift_retain();
    goto LABEL_14;
  }
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
LABEL_14:
  uint64_t v41 = a3[7];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(unsigned char *)uint64_t v42 = *(unsigned char *)v43;
  *(void *)(v42 + 8) = *(void *)(v43 + 8);
  swift_retain();
  swift_release();
  uint64_t v44 = a3[8];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  *(unsigned char *)uint64_t v45 = *(unsigned char *)v46;
  *(void *)(v45 + 8) = *(void *)(v46 + 8);
  swift_retain();
  swift_release();
  uint64_t v47 = a3[9];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  *(unsigned char *)uint64_t v48 = *(unsigned char *)v49;
  *(void *)(v48 + 8) = *(void *)(v49 + 8);
  swift_retain();
  swift_release();
  uint64_t v50 = a3[10];
  uint64_t v51 = (unint64_t *)(a1 + v50);
  uint64_t v52 = a2 + v50;
  unint64_t v53 = *(void *)(a2 + v50);
  if (*(void *)(a1 + v50) >= 3uLL)
  {
    if (v53 >= 3)
    {
      unint64_t *v51 = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v56 = (void *)v51[1];
      uint64_t v57 = *(void **)(v52 + 8);
      v51[1] = (unint64_t)v57;
      id v58 = v57;

      goto LABEL_21;
    }
    sub_1000637B8(a1 + v50, &qword_1010B3E20);
    goto LABEL_19;
  }
  if (v53 < 3)
  {
LABEL_19:
    *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
    goto LABEL_21;
  }
  unint64_t *v51 = v53;
  uint64_t v54 = *(void **)(v52 + 8);
  v51[1] = (unint64_t)v54;
  swift_bridgeObjectRetain();
  id v55 = v54;
LABEL_21:
  v51[2] = *(void *)(v52 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1006294A0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v6 = (int *)type metadata accessor for SharePlayProxCard.ViewModel(0);
  uint64_t v7 = v6[10];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Artwork();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100063814((uint64_t *)&unk_10109EF90);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(void *)(a1 + v6[11]) = *(void *)(a2 + v6[11]);
  *(_OWORD *)(a1 + v6[12]) = *(_OWORD *)(a2 + v6[12]);
  uint64_t v13 = v6[13];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  uint64_t v16 = a3[5];
  uint64_t v17 = a3[6];
  long long v18 = *(_OWORD *)(a2 + v16);
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  *(_OWORD *)(a1 + v16) = v18;
  uint64_t v19 = (void *)(a1 + v17);
  uint64_t v20 = a2 + v17;
  uint64_t v21 = *(void *)(a2 + v17);
  if (v21)
  {
    uint64_t v22 = *(void *)(v20 + 8);
    *uint64_t v19 = v21;
    v19[1] = v22;
  }
  else
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  }
  uint64_t v23 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v23) = *(_OWORD *)(a2 + v23);
  uint64_t v24 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  *(void *)(v25 + 16) = *(void *)(v26 + 16);
  return a1;
}

uint64_t sub_100629694(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = (int *)type metadata accessor for SharePlayProxCard.ViewModel(0);
  uint64_t v10 = v9[10];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Artwork();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = sub_100063814((uint64_t *)&unk_10109EF90);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = v9[11];
  uint64_t v20 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);

  uint64_t v21 = v9[12];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  void *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = v9[13];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  char v29 = *(unsigned char *)(v28 + 16);
  uint64_t v30 = *(void *)v27;
  uint64_t v31 = *(void *)(v27 + 8);
  char v32 = *(unsigned char *)(v27 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(unsigned char *)(v27 + 16) = v29;
  sub_100627DF4(v30, v31, v32);
  uint64_t v33 = a3[5];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (uint64_t *)(a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  void *v34 = v37;
  v34[1] = v36;
  swift_release();
  uint64_t v38 = a3[6];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = a2 + v38;
  uint64_t v41 = *(void *)(a1 + v38);
  uint64_t v42 = *(void *)(a2 + v38);
  if (v41)
  {
    if (v42)
    {
      uint64_t v43 = *(void *)(v40 + 8);
      *uint64_t v39 = v42;
      v39[1] = v43;
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v42)
  {
    uint64_t v44 = *(void *)(v40 + 8);
    *uint64_t v39 = v42;
    v39[1] = v44;
    goto LABEL_14;
  }
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
LABEL_14:
  uint64_t v45 = a3[7];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  *(unsigned char *)uint64_t v46 = *(unsigned char *)v47;
  *(void *)(v46 + 8) = *(void *)(v47 + 8);
  swift_release();
  uint64_t v48 = a3[8];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  *(unsigned char *)uint64_t v49 = *(unsigned char *)v50;
  *(void *)(v49 + 8) = *(void *)(v50 + 8);
  swift_release();
  uint64_t v51 = a3[9];
  uint64_t v52 = a1 + v51;
  uint64_t v53 = a2 + v51;
  *(unsigned char *)uint64_t v52 = *(unsigned char *)v53;
  *(void *)(v52 + 8) = *(void *)(v53 + 8);
  swift_release();
  uint64_t v54 = a3[10];
  id v55 = (void *)(a1 + v54);
  uint64_t v56 = (void *)(a2 + v54);
  if (*(void *)(a1 + v54) >= 3uLL)
  {
    if (*v56 >= 3uLL)
    {
      void *v55 = *v56;
      swift_bridgeObjectRelease();
      uint64_t v57 = (void *)v55[1];
      v55[1] = v56[1];

      goto LABEL_19;
    }
    sub_1000637B8((uint64_t)v55, &qword_1010B3E20);
  }
  *(_OWORD *)id v55 = *(_OWORD *)v56;
LABEL_19:
  void v55[2] = v56[2];
  swift_release();
  return a1;
}

uint64_t sub_100629A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100629A30);
}

uint64_t sub_100629A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SharePlayProxCard.ViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100629AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100629B08);
}

uint64_t sub_100629B08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SharePlayProxCard.ViewModel(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for SharePlayProxCard(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B3E80);
}

uint64_t sub_100629BE8()
{
  uint64_t result = type metadata accessor for SharePlayProxCard.ViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100629C98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100629CB4()
{
  uint64_t v17 = sub_100063814(&qword_10109C180);
  uint64_t v1 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  int v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_10109C178);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814(&qword_10109C170);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v0 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState__name;
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  uint64_t v13 = v0 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState__image;
  uint64_t v18 = 0;
  sub_100063814((uint64_t *)&unk_1010AC1D0);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v13, v7, v4);
  uint64_t v14 = v0 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState__isLoading;
  LOBYTE(v18) = 0;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v14, v3, v17);
  *(unsigned char *)(v0 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState_removedImage) = 0;
  return v0;
}

uint64_t sub_100629F48@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SharePlayProxCard.CardState(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100629F88()
{
  type metadata accessor for SharePlayProxCard(0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  Swift::String v1 = String.trim()();
  uint64_t countAndFlagsBits = v1._countAndFlagsBits;
  swift_bridgeObjectRelease();
  unint64_t v3 = ((unint64_t)v1._object >> 56) & 0xF;
  if (((uint64_t)v1._object & 0x2000000000000000) == 0) {
    unint64_t v3 = v1._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (!v3)
  {
    swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = *(void *)(v0 + *(int *)(type metadata accessor for SharePlayProxCard.ViewModel(0) + 48));
    swift_bridgeObjectRetain();
  }
  return countAndFlagsBits;
}

uint64_t sub_10062A074@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SharePlayProxCard(0);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814((uint64_t *)&unk_10109EF90);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(*(void *)(v1 + *(int *)(v4 + 28) + 8)
                + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState_removedImage) == 1)
  {
    uint64_t v10 = sub_100629F88();
    static Artwork.monogramArtwork(for:layoutDirection:)(v10, v11, 0, 1, a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = type metadata accessor for SharePlayProxCard.ViewModel(0);
    sub_10006CAB8(v1 + *(int *)(v13 + 40), (uint64_t)v9, (uint64_t *)&unk_10109EF90);
    sub_100631F64(v1, (uint64_t)v6, type metadata accessor for SharePlayProxCard);
    uint64_t v14 = type metadata accessor for Artwork();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
    {
      uint64_t v16 = sub_100629F88();
      static Artwork.monogramArtwork(for:layoutDirection:)(v16, v17, 0, 1, a1);
      swift_bridgeObjectRelease();
      sub_1006323B0((uint64_t)v6, type metadata accessor for SharePlayProxCard);
      return sub_1000637B8((uint64_t)v9, (uint64_t *)&unk_10109EF90);
    }
    else
    {
      sub_1006323B0((uint64_t)v6, type metadata accessor for SharePlayProxCard);
      (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v9, v14);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
    }
  }
}

uint64_t sub_10062A2EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v42 = a1;
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  uint64_t v41 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v40 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100063814(&qword_1010B3ED0);
  __chkstk_darwin(v34);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814(&qword_1010B3ED8);
  uint64_t v38 = *(void *)(v9 - 8);
  uint64_t v39 = v9;
  __chkstk_darwin(v9);
  uint64_t v31 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100063814(&qword_1010B3EE0);
  __chkstk_darwin(v36);
  char v32 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v8 = static HorizontalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v12 = sub_100063814(&qword_1010B3EE8);
  sub_10062A850(v1, (uint64_t)&v8[*(int *)(v12 + 44)]);
  uint64_t v30 = LocalizedStringKey.init(stringLiteral:)();
  v29[1] = v13;
  uint64_t v37 = type metadata accessor for SharePlayProxCard(0);
  uint64_t v14 = (char *)v1 + *(int *)(v37 + 28);
  char v15 = *v14;
  uint64_t v16 = *((void *)v14 + 1);
  LOBYTE(v47) = v15;
  uint64_t v48 = v16;
  uint64_t v35 = sub_100063814(&qword_1010B3EF0);
  State.projectedValue.getter();
  uint64_t v44 = v1;
  sub_100063814(&qword_1010B3EF8);
  sub_100063858(&qword_1010B3F00, &qword_1010B3ED0);
  uint64_t v33 = &protocol conformance descriptor for TupleView<A>;
  sub_100063858(&qword_1010B3F08, &qword_1010B3EF8);
  uint64_t v17 = v31;
  View.confirmationDialog<A>(_:isPresented:titleVisibility:actions:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1000637B8((uint64_t)v8, &qword_1010B3ED0);
  uint64_t v18 = static Alignment.center.getter();
  uint64_t v20 = v19;
  uint64_t v21 = (uint64_t)v32;
  uint64_t v22 = (uint64_t)&v32[*(int *)(v36 + 36)];
  sub_100630E4C(v2, v22);
  uint64_t v23 = (uint64_t *)(v22 + *(int *)(sub_100063814(&qword_1010B3F10) + 36));
  uint64_t *v23 = v18;
  v23[1] = v20;
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v21, v17, v39);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v47 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v48 = v24;
  uint64_t v25 = v2 + *(int *)(v37 + 36);
  char v26 = *(unsigned char *)v25;
  uint64_t v27 = *(void *)(v25 + 8);
  char v45 = v26;
  uint64_t v46 = v27;
  State.projectedValue.getter();
  uint64_t v43 = v2;
  sub_100063814(&qword_1010B3F18);
  sub_100631910();
  sub_10005D180();
  sub_100063858(&qword_1010B3F38, &qword_1010B3F18);
  View.alert<A, B>(_:isPresented:actions:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1000637B8(v21, &qword_1010B3EE0);
}

uint64_t sub_10062A850@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v509 = a1;
  uint64_t v477 = a2;
  uint64_t v3 = type metadata accessor for Capsule();
  __chkstk_darwin(v3 - 8);
  v476 = (char *)&v387 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v471 = sub_100063814(&qword_1010B3F80);
  uint64_t v470 = *(void *)(v471 - 8);
  __chkstk_darwin(v471);
  v468 = (char *)&v387 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v465 = sub_100063814(&qword_1010B3F88);
  __chkstk_darwin(v465);
  v469 = (char *)&v387 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v466 = sub_100063814(&qword_1010B3F90);
  __chkstk_darwin(v466);
  uint64_t v473 = (uint64_t)&v387 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v467 = sub_100063814(&qword_1010B3F98);
  __chkstk_darwin(v467);
  v475 = (char *)&v387 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v474 = sub_100063814(&qword_1010B3FA0);
  __chkstk_darwin(v474);
  uint64_t v505 = (uint64_t)&v387 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v472 = (uint64_t)&v387 - v11;
  __chkstk_darwin(v12);
  uint64_t v497 = (uint64_t)&v387 - v13;
  uint64_t v398 = sub_100063814(&qword_1010B3FA8);
  __chkstk_darwin(v398);
  v403 = (uint64_t *)((char *)&v387 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v404 = type metadata accessor for OpenURLAction();
  uint64_t v402 = *(void *)(v404 - 8);
  __chkstk_darwin(v404);
  v401 = (char *)&v387 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v388 = type metadata accessor for AttributedString();
  uint64_t v437 = *(void *)(v388 - 8);
  __chkstk_darwin(v388);
  v389 = (char *)&v387 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100063814(&qword_1010B3FB0);
  uint64_t v438 = *(void *)(v17 - 8);
  uint64_t v439 = v17;
  __chkstk_darwin(v17);
  v400 = (char *)&v387 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v399 = (uint64_t)&v387 - v20;
  uint64_t v21 = type metadata accessor for AttributedString.MarkdownParsingOptions.FailurePolicy();
  uint64_t v396 = *(void *)(v21 - 8);
  uint64_t v397 = v21;
  __chkstk_darwin(v21);
  v395 = (char *)&v387 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for AttributedString.MarkdownParsingOptions.InterpretedSyntax();
  uint64_t v391 = *(void *)(v23 - 8);
  uint64_t v392 = v23;
  __chkstk_darwin(v23);
  v394 = (char *)&v387 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for AttributedString.MarkdownParsingOptions();
  __chkstk_darwin(v25 - 8);
  v390 = (char *)&v387 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100063814((uint64_t *)&unk_10109BF50);
  __chkstk_darwin(v27 - 8);
  v436 = (char *)&v387 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100063814(&qword_10109BB40);
  __chkstk_darwin(v29 - 8);
  uint64_t v387 = (uint64_t)&v387 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v393 = (char *)&v387 - v32;
  __chkstk_darwin(v33);
  uint64_t v440 = (uint64_t)&v387 - v34;
  uint64_t v35 = type metadata accessor for SharePlayProxCard(0);
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v446 = v35;
  uint64_t v447 = v36;
  __chkstk_darwin(v35);
  v450 = (char *)&v387 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v445 = (char *)&v387 - v39;
  __chkstk_darwin(v40);
  v444 = (char *)&v387 - v41;
  uint64_t v448 = v42;
  __chkstk_darwin(v43);
  uint64_t v435 = (uint64_t)&v387 - v44;
  uint64_t v45 = sub_100063814(&qword_1010B3FB8);
  __chkstk_darwin(v45 - 8);
  v407 = (char *)&v387 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  uint64_t v406 = (uint64_t)&v387 - v48;
  uint64_t v433 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v433);
  v434 = (char *)&v387 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100063814(&qword_1010B3FC0);
  __chkstk_darwin(v50 - 8);
  v424 = (uint64_t *)((char *)&v387 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v423 = sub_100063814(&qword_1010B3FC8);
  __chkstk_darwin(v423);
  uint64_t v426 = (uint64_t)&v387 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v425 = sub_100063814(&qword_1010B3FD0);
  __chkstk_darwin(v425);
  uint64_t v428 = (uint64_t)&v387 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100063814(&qword_1010B3FD8);
  __chkstk_darwin(v54 - 8);
  uint64_t v431 = (uint64_t)&v387 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v427 = sub_100063814(&qword_1010B3FE0);
  __chkstk_darwin(v427);
  v432 = (char *)&v387 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v430 = sub_100063814(&qword_1010B3FE8);
  __chkstk_darwin(v430);
  v405 = (char *)&v387 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v58);
  uint64_t v429 = (uint64_t)&v387 - v59;
  __chkstk_darwin(v60);
  uint64_t v443 = (uint64_t)&v387 - v61;
  uint64_t v409 = sub_100063814(&qword_10109CD90);
  __chkstk_darwin(v409);
  v413 = (uint64_t *)((char *)&v387 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = sub_100063814(&qword_10109CD98);
  __chkstk_darwin(v63 - 8);
  v410 = (char *)&v387 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v408 = sub_100063814(&qword_10109CDA0);
  __chkstk_darwin(v408);
  v414 = (char *)&v387 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v411 = sub_100063814(&qword_10109CDA8);
  __chkstk_darwin(v411);
  uint64_t v415 = (uint64_t)&v387 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v412 = sub_100063814(&qword_1010B3FF0);
  __chkstk_darwin(v412);
  uint64_t v417 = (uint64_t)&v387 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100063814(&qword_1010B3FF8);
  __chkstk_darwin(v68 - 8);
  uint64_t v419 = (uint64_t)&v387 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v416 = sub_100063814(&qword_1010B4000);
  __chkstk_darwin(v416);
  uint64_t v421 = (uint64_t)&v387 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v418 = sub_100063814(&qword_1010B4008);
  __chkstk_darwin(v418);
  uint64_t v422 = (uint64_t)&v387 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v420 = sub_100063814(&qword_1010B4010);
  __chkstk_darwin(v420);
  uint64_t v442 = (uint64_t)&v387 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v73);
  uint64_t v441 = (uint64_t)&v387 - v74;
  uint64_t v75 = sub_100063814(&qword_1010B4018);
  __chkstk_darwin(v75 - 8);
  uint64_t v508 = (uint64_t)&v387 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v77);
  uint64_t v507 = (uint64_t)&v387 - v78;
  uint64_t v498 = type metadata accessor for Font.Leading();
  uint64_t v506 = *(void *)(v498 - 8);
  __chkstk_darwin(v498);
  v499 = (char *)&v387 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_100063814(&qword_1010B4020);
  __chkstk_darwin(v80 - 8);
  uint64_t v82 = (char *)&v387 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v503 = sub_100063814(&qword_1010B4028);
  uint64_t v83 = *(void *)(v503 - 8);
  __chkstk_darwin(v503);
  uint64_t v85 = (char *)&v387 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100063814(&qword_1010B4030);
  uint64_t v87 = v86 - 8;
  __chkstk_darwin(v86);
  int v89 = (char *)&v387 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v90);
  uint64_t v504 = (uint64_t)&v387 - v91;
  uint64_t v92 = *a1;
  uint64_t v93 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v82, 1, 1, v93);
  swift_retain();
  uint64_t v94 = static Font.system(size:weight:design:)();
  sub_1000637B8((uint64_t)v82, &qword_1010B4020);
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&long long v519 = v92;
  *((void *)&v519 + 1) = KeyPath;
  *(void *)&long long v520 = v94;
  sub_100063814(&qword_1010A5EC0);
  sub_10037C9F4();
  View.bold(_:)();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v96 = static Color.secondary.getter();
  uint64_t v97 = swift_getKeyPath();
  uint64_t v98 = v503;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v89, v85, v503);
  uint64_t v99 = (uint64_t *)&v89[*(int *)(v87 + 44)];
  *uint64_t v99 = v97;
  v99[1] = v96;
  (*(void (**)(char *, uint64_t))(v83 + 8))(v85, v98);
  v496 = v89;
  sub_10003CABC((uint64_t)v89, v504, &qword_1010B4030);
  uint64_t v100 = v509[2];
  *(void *)&long long v519 = v509[1];
  *((void *)&v519 + 1) = v100;
  unint64_t v482 = sub_10005D180();
  swift_bridgeObjectRetain();
  uint64_t v101 = Text.init<A>(_:)();
  uint64_t v103 = v102;
  LOBYTE(v94) = v104 & 1;
  static Font.title.getter();
  unsigned int v480 = enum case for Font.Leading.tight(_:);
  uint64_t v105 = v506;
  uint64_t v106 = *(void (**)(void))(v506 + 104);
  uint64_t v481 = v506 + 104;
  v479 = (void (*)(char *, void, uint64_t))v106;
  uint64_t v107 = v499;
  uint64_t v108 = v498;
  v106(v499);
  Font.leading(_:)();
  swift_release();
  v478 = *(void (**)(char *, uint64_t))(v105 + 8);
  uint64_t v506 = v105 + 8;
  v478(v107, v108);
  uint64_t v109 = Text.font(_:)();
  uint64_t v111 = v110;
  LOBYTE(v107) = v112;
  swift_release();
  sub_1000D1500(v101, v103, v94);
  swift_bridgeObjectRelease();
  uint64_t v502 = Text.bold()();
  uint64_t v501 = v113;
  LODWORD(v101) = v114;
  uint64_t v503 = v115;
  sub_1000D1500(v109, v111, v107 & 1);
  swift_bridgeObjectRelease();
  uint64_t v500 = swift_getKeyPath();
  int v494 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v460 = v116;
  uint64_t v118 = v117;
  uint64_t v120 = v119;
  uint64_t v122 = v121;
  int v495 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v464 = v123;
  uint64_t v463 = v124;
  uint64_t v462 = v125;
  uint64_t v461 = v126;
  int v459 = v101;
  unsigned __int8 v559 = v101 & 1;
  unsigned __int8 v555 = 0;
  unsigned __int8 v552 = 0;
  int v493 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v128 = v127;
  uint64_t v491 = v129;
  uint64_t v490 = v130;
  uint64_t v489 = v131;
  int v486 = v559;
  v565[0] = *(_DWORD *)v558;
  *(_DWORD *)((char *)v565 + 3) = *(_DWORD *)&v558[3];
  v564[0] = *(_DWORD *)v557;
  *(_DWORD *)((char *)v564 + 3) = *(_DWORD *)&v557[3];
  v563[0] = *(_DWORD *)v556;
  *(_DWORD *)((char *)v563 + 3) = *(_DWORD *)&v556[3];
  int v487 = v555;
  *(_DWORD *)((char *)v562 + 3) = *(_DWORD *)&v554[3];
  v562[0] = *(_DWORD *)v554;
  v561[0] = *(_DWORD *)v553;
  *(_DWORD *)((char *)v561 + 3) = *(_DWORD *)&v553[3];
  int v488 = v552;
  unsigned __int8 v560 = 0;
  uint64_t v132 = v509;
  uint64_t v133 = v509[4];
  *(void *)&long long v519 = v509[3];
  *((void *)&v519 + 1) = v133;
  swift_bridgeObjectRetain();
  uint64_t v134 = Text.init<A>(_:)();
  uint64_t v136 = v135;
  LOBYTE(v105) = v137 & 1;
  static Font.body.getter();
  uint64_t v138 = v499;
  uint64_t v139 = v498;
  v479(v499, v480, v498);
  Font.leading(_:)();
  swift_release();
  v478(v138, v139);
  uint64_t v458 = Text.font(_:)();
  uint64_t v457 = v140;
  int v449 = v141;
  uint64_t v485 = v142;
  swift_release();
  char v143 = v105;
  uint64_t v144 = v507;
  sub_1000D1500(v134, v136, v143);
  swift_bridgeObjectRelease();
  uint64_t v145 = swift_getKeyPath();
  uint64_t v146 = static Color.secondary.getter();
  uint64_t v147 = swift_getKeyPath();
  LODWORD(v139) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  int v148 = *((unsigned __int8 *)v132 + 72);
  uint64_t v484 = v145;
  uint64_t v456 = v146;
  uint64_t v483 = v147;
  int v455 = v139;
  uint64_t v454 = v149;
  uint64_t v453 = v150;
  uint64_t v452 = v151;
  uint64_t v451 = v152;
  if (v148 != 1)
  {
    uint64_t v259 = sub_100063814(&qword_1010B4038);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v259 - 8) + 56))(v144, 1, 1, v259);
    uint64_t v260 = v447;
    uint64_t v261 = (uint64_t)v445;
    uint64_t v262 = (uint64_t)v444;
    goto LABEL_21;
  }
  uint64_t v153 = v509[6];
  *(void *)&long long v519 = v509[5];
  *((void *)&v519 + 1) = v153;
  swift_bridgeObjectRetain();
  uint64_t v154 = Text.init<A>(_:)();
  uint64_t v156 = v155;
  uint64_t v158 = v157;
  char v160 = v159 & 1;
  uint64_t v161 = enum case for Text.Case.uppercase(_:);
  uint64_t v162 = type metadata accessor for Text.Case();
  uint64_t v163 = *(void *)(v162 - 8);
  uint64_t v164 = (uint64_t)v410;
  (*(void (**)(char *, uint64_t, uint64_t))(v163 + 104))(v410, v161, v162);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v163 + 56))(v164, 0, 1, v162);
  uint64_t v165 = swift_getKeyPath();
  uint64_t v166 = v413;
  sub_10006CAB8(v164, (uint64_t)v413 + *(int *)(v409 + 28), &qword_10109CD98);
  *uint64_t v166 = v165;
  uint64_t v167 = (uint64_t)v414;
  sub_10006CAB8((uint64_t)v166, (uint64_t)&v414[*(int *)(v408 + 36)], &qword_10109CD90);
  *(void *)uint64_t v167 = v154;
  *(void *)(v167 + 8) = v156;
  *(unsigned char *)(v167 + 16) = v160;
  *(void *)(v167 + 24) = v158;
  sub_1001CC8D0(v154, v156, v160);
  swift_bridgeObjectRetain();
  sub_1000637B8((uint64_t)v166, &qword_10109CD90);
  uint64_t v168 = v164;
  double v169 = v509;
  sub_1000637B8(v168, &qword_10109CD98);
  sub_1000D1500(v154, v156, v160);
  swift_bridgeObjectRelease();
  uint64_t v170 = static Font.footnote.getter();
  uint64_t v171 = swift_getKeyPath();
  uint64_t v172 = v415;
  sub_10006CAB8(v167, v415, &qword_10109CDA0);
  uint64_t v173 = (uint64_t *)(v172 + *(int *)(v411 + 36));
  *uint64_t v173 = v171;
  v173[1] = v170;
  sub_1000637B8(v167, &qword_10109CDA0);
  uint64_t v174 = static Color.secondary.getter();
  uint64_t v175 = swift_getKeyPath();
  uint64_t v176 = v417;
  sub_10006CAB8(v172, v417, &qword_10109CDA8);
  uint64_t v177 = (uint64_t *)(v176 + *(int *)(v412 + 36));
  *uint64_t v177 = v175;
  v177[1] = v174;
  sub_1000637B8(v172, &qword_10109CDA8);
  uint64_t v178 = static Alignment.leading.getter();
  uint64_t v179 = v419;
  sub_100623888(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v419, 0.0, 1, 0.0, 1, v178, v180, &qword_1010B3FF0, &qword_1010B3FF8);
  sub_1000637B8(v176, &qword_1010B3FF0);
  LOBYTE(v174) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v182 = v181;
  uint64_t v184 = v183;
  uint64_t v186 = v185;
  uint64_t v188 = v187;
  uint64_t v189 = v421;
  sub_10006CAB8(v179, v421, &qword_1010B3FF8);
  uint64_t v190 = v189 + *(int *)(v416 + 36);
  *(unsigned char *)uint64_t v190 = v174;
  *(void *)(v190 + 8) = v182;
  *(void *)(v190 + 16) = v184;
  *(void *)(v190 + 24) = v186;
  *(void *)(v190 + 32) = v188;
  *(unsigned char *)(v190 + 40) = 0;
  sub_1000637B8(v179, &qword_1010B3FF8);
  LOBYTE(v174) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v192 = v191;
  uint64_t v194 = v193;
  uint64_t v196 = v195;
  uint64_t v198 = v197;
  uint64_t v199 = v422;
  sub_10006CAB8(v189, v422, &qword_1010B4000);
  uint64_t v200 = v199 + *(int *)(v418 + 36);
  *(unsigned char *)uint64_t v200 = v174;
  *(void *)(v200 + 8) = v192;
  *(void *)(v200 + 16) = v194;
  *(void *)(v200 + 24) = v196;
  *(void *)(v200 + 32) = v198;
  *(unsigned char *)(v200 + 40) = 0;
  sub_1000637B8(v189, &qword_1010B4000);
  LOBYTE(v174) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v202 = v201;
  uint64_t v204 = v203;
  uint64_t v206 = v205;
  uint64_t v208 = v207;
  uint64_t v209 = v442;
  sub_10006CAB8(v199, v442, &qword_1010B4008);
  uint64_t v210 = v209 + *(int *)(v420 + 36);
  *(unsigned char *)uint64_t v210 = v174;
  *(void *)(v210 + 8) = v202;
  *(void *)(v210 + 16) = v204;
  *(void *)(v210 + 24) = v206;
  *(void *)(v210 + 32) = v208;
  *(unsigned char *)(v210 + 40) = 0;
  sub_1000637B8(v199, &qword_1010B4008);
  uint64_t v211 = v441;
  sub_10003CABC(v209, v441, &qword_1010B4010);
  uint64_t v212 = static VerticalAlignment.center.getter();
  uint64_t v213 = (uint64_t)v424;
  uint64_t *v424 = v212;
  *(void *)(v213 + 8) = 0;
  *(unsigned char *)(v213 + 16) = 1;
  uint64_t v214 = sub_100063814((uint64_t *)&unk_1010B40A0);
  sub_10062D820((uint64_t)v169, v213 + *(int *)(v214 + 44));
  id v215 = [self quaternarySystemFillColor];
  uint64_t v216 = Color.init(_:)();
  LOBYTE(v175) = static Edge.Set.all.getter();
  uint64_t v217 = v426;
  sub_10006CAB8(v213, v426, &qword_1010B3FC0);
  uint64_t v218 = v217 + *(int *)(v423 + 36);
  *(void *)uint64_t v218 = v216;
  *(unsigned char *)(v218 + 8) = v175;
  sub_1000637B8(v213, &qword_1010B3FC0);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v219 = v428;
  sub_10006CAB8(v217, v428, &qword_1010B3FC8);
  uint64_t v220 = (_OWORD *)(v219 + *(int *)(v425 + 36));
  long long v221 = v551[9];
  v220[4] = v551[8];
  v220[5] = v221;
  v220[6] = v551[10];
  long long v222 = v551[5];
  *uint64_t v220 = v551[4];
  v220[1] = v222;
  long long v223 = v551[7];
  v220[2] = v551[6];
  v220[3] = v223;
  sub_1000637B8(v217, &qword_1010B3FC8);
  uint64_t v224 = static Alignment.center.getter();
  uint64_t v225 = v431;
  sub_100623888(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v431, 0.0, 1, 0.0, 1, v224, v226, &qword_1010B3FD0, &qword_1010B3FD8);
  sub_1000637B8(v219, &qword_1010B3FD0);
  uint64_t v227 = v434;
  uint64_t v228 = &v434[*(int *)(v433 + 20)];
  uint64_t v229 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v230 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v230 - 8) + 104))(v228, v229, v230);
  __asm { FMOV            V0.2D, #16.0 }
  *uint64_t v227 = _Q0;
  uint64_t v236 = (uint64_t)v432;
  uint64_t v237 = (uint64_t)&v432[*(int *)(v427 + 36)];
  sub_100631F64((uint64_t)v227, v237, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v237 + *(int *)(sub_100063814(&qword_10109D3E8) + 36)) = 256;
  sub_10006CAB8(v225, v236, &qword_1010B3FD8);
  sub_1006323B0((uint64_t)v227, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000637B8(v225, &qword_1010B3FD8);
  LOBYTE(v237) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v239 = v238;
  uint64_t v241 = v240;
  uint64_t v243 = v242;
  uint64_t v245 = v244;
  uint64_t v246 = v429;
  sub_10006CAB8(v236, v429, &qword_1010B3FE0);
  uint64_t v247 = v246 + *(int *)(v430 + 36);
  *(unsigned char *)uint64_t v247 = v237;
  *(void *)(v247 + 8) = v239;
  *(void *)(v247 + 16) = v241;
  *(void *)(v247 + 24) = v243;
  *(void *)(v247 + 32) = v245;
  *(unsigned char *)(v247 + 40) = 0;
  sub_1000637B8(v236, &qword_1010B3FE0);
  sub_10003CABC(v246, v443, &qword_1010B3FE8);
  uint64_t v248 = v169[8];
  *(void *)&long long v519 = v169[7];
  *((void *)&v519 + 1) = v248;
  strcpy((char *)&v541, "{{userName}}");
  BYTE13(v541) = 0;
  HIWORD(v541) = -5120;
  LOBYTE(v237) = StringProtocol.contains<A>(_:)();
  uint64_t v249 = v435;
  sub_100631F64((uint64_t)v169, v435, type metadata accessor for SharePlayProxCard);
  uint64_t v250 = v209;
  if ((v237 & 1) == 0)
  {
    sub_1006323B0(v249, type metadata accessor for SharePlayProxCard);
    uint64_t v254 = v436;
    uint64_t v255 = v437;
    goto LABEL_7;
  }
  uint64_t v251 = v211;
  sub_100629F88();
  uint64_t v253 = v252;
  sub_1006323B0(v249, type metadata accessor for SharePlayProxCard);
  swift_bridgeObjectRelease();
  uint64_t v254 = v436;
  uint64_t v255 = v437;
  if (v253)
  {
LABEL_7:
    uint64_t v263 = v509[8];
    *(void *)&long long v519 = v509[7];
    *((void *)&v519 + 1) = v263;
    strcpy((char *)&v541, "{{userName}}");
    BYTE13(v541) = 0;
    HIWORD(v541) = -5120;
    swift_bridgeObjectRetain();
    uint64_t v264 = sub_100629F88();
    if (v265) {
      uint64_t v266 = v264;
    }
    else {
      uint64_t v266 = 0;
    }
    if (v265) {
      unint64_t v267 = v265;
    }
    else {
      unint64_t v267 = 0xE000000000000000;
    }
    *(void *)&v532[0] = v266;
    *((void *)&v532[0] + 1) = v267;
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v268 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v268 - 8) + 56))(v254, 1, 1, v268);
    (*(void (**)(char *, void, uint64_t))(v391 + 104))(v394, enum case for AttributedString.MarkdownParsingOptions.InterpretedSyntax.full(_:), v392);
    (*(void (**)(char *, void, uint64_t))(v396 + 104))(v395, enum case for AttributedString.MarkdownParsingOptions.FailurePolicy.throwError(_:), v397);
    AttributedString.MarkdownParsingOptions.init(allowsExtendedAttributes:interpretedSyntax:failurePolicy:languageCode:)();
    uint64_t v269 = (uint64_t)v393;
    AttributedString.init(markdown:options:baseURL:)();
    uint64_t v270 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v255 + 56);
    uint64_t v271 = v388;
    v270(v269, 0, 1, v388);
    int v272 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v255 + 48))(v269, 1, v271);
    uint64_t v273 = v440;
    uint64_t v274 = v498;
    if (v272 == 1)
    {
      AttributedString.init(stringLiteral:)();
      sub_1000637B8(v269, &qword_10109BB40);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v255 + 32))(v440, v269, v271);
    }
    v270(v273, 0, 1, v271);
    uint64_t v275 = v389;
    uint64_t v276 = v387;
    sub_10006CAB8(v273, v387, &qword_10109BB40);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v255 + 48))(v276, 1, v271) == 1)
    {
      AttributedString.init(stringLiteral:)();
      sub_1000637B8(v276, &qword_10109BB40);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v255 + 32))(v275, v276, v271);
    }
    uint64_t v277 = Text.init(_:)();
    uint64_t v279 = v278;
    uint64_t v281 = v280;
    char v283 = v282 & 1;
    uint64_t v284 = static Alignment.leading.getter();
    sub_100623A58(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v532, 0.0, 1, 0.0, 1, v284, v285, v277, v279, v283, v281);
    sub_1000D1500(v277, v279, v283);
    swift_bridgeObjectRelease();
    long long v516 = v532[6];
    long long v517 = v532[7];
    long long v518 = v532[8];
    long long v512 = v532[2];
    long long v513 = v532[3];
    long long v515 = v532[5];
    long long v514 = v532[4];
    long long v510 = v532[0];
    long long v511 = v532[1];
    static Font.footnote.getter();
    long long v286 = v499;
    v479(v499, v480, v274);
    uint64_t v287 = Font.leading(_:)();
    swift_release();
    v478(v286, v274);
    uint64_t v288 = swift_getKeyPath();
    uint64_t v289 = static Color.secondary.getter();
    uint64_t v290 = swift_getKeyPath();
    long long v546 = v515;
    long long v547 = v516;
    long long v548 = v517;
    long long v549 = v518;
    long long v542 = v511;
    long long v543 = v512;
    long long v544 = v513;
    long long v545 = v514;
    long long v541 = v510;
    *(void *)&long long v550 = v288;
    *((void *)&v550 + 1) = v287;
    *(void *)&v551[0] = v290;
    *((void *)&v551[0] + 1) = v289;
    LOBYTE(v288) = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    long long v527 = v549;
    long long v528 = v550;
    long long v529 = v551[0];
    long long v523 = v545;
    long long v524 = v546;
    long long v525 = v547;
    long long v526 = v548;
    long long v519 = v541;
    long long v520 = v542;
    long long v521 = v543;
    long long v522 = v544;
    LOBYTE(v530) = v288;
    *((void *)&v530 + 1) = v291;
    *(void *)&v531[0] = v292;
    *((void *)&v531[0] + 1) = v293;
    *(void *)&v531[1] = v294;
    BYTE8(v531[1]) = 0;
    uint64_t v295 = swift_getKeyPath();
    long long v296 = v401;
    OpenURLAction.init(handler:)();
    uint64_t v298 = v402;
    long long v297 = v403;
    uint64_t v299 = v404;
    (*(void (**)(char *, char *, uint64_t))(v402 + 16))((char *)v403 + *(int *)(v398 + 28), v296, v404);
    *long long v297 = v295;
    uint64_t v300 = v439;
    long long v301 = v400;
    sub_10006CAB8((uint64_t)v297, (uint64_t)&v400[*(int *)(v439 + 36)], &qword_1010B3FA8);
    long long v302 = v530;
    v301[10] = v529;
    v301[11] = v302;
    v301[12] = v531[0];
    *(_OWORD *)((char *)v301 + 201) = *(_OWORD *)((char *)v531 + 9);
    long long v303 = v526;
    v301[6] = v525;
    v301[7] = v303;
    long long v304 = v528;
    v301[8] = v527;
    v301[9] = v304;
    long long v305 = v522;
    v301[2] = v521;
    v301[3] = v305;
    long long v306 = v524;
    v301[4] = v523;
    v301[5] = v306;
    long long v307 = v520;
    *long long v301 = v519;
    v301[1] = v307;
    sub_1006327FC((uint64_t)&v519);
    sub_1000637B8((uint64_t)v297, &qword_1010B3FA8);
    (*(void (**)(char *, uint64_t))(v298 + 8))(v296, v299);
    sub_100632874((uint64_t)&v541);
    sub_1000637B8(v440, &qword_10109BB40);
    uint64_t v308 = v399;
    sub_10003CABC((uint64_t)v301, v399, &qword_1010B3FB0);
    uint64_t v256 = v406;
    sub_10003CABC(v308, v406, &qword_1010B3FB0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v438 + 56))(v256, 0, 1, v300);
    uint64_t v257 = (uint64_t)v407;
    uint64_t v258 = (uint64_t)v405;
    uint64_t v251 = v441;
    goto LABEL_20;
  }
  uint64_t v256 = v406;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v438 + 56))(v406, 1, 1, v439);
  uint64_t v257 = (uint64_t)v407;
  uint64_t v258 = (uint64_t)v405;
LABEL_20:
  sub_10006CAB8(v251, v250, &qword_1010B4010);
  uint64_t v309 = v443;
  sub_10006CAB8(v443, v258, &qword_1010B3FE8);
  sub_10006CAB8(v256, v257, &qword_1010B3FB8);
  uint64_t v310 = v250;
  uint64_t v311 = v508;
  sub_10006CAB8(v310, v508, &qword_1010B4010);
  uint64_t v312 = v251;
  uint64_t v313 = sub_100063814(&qword_1010B40B0);
  sub_10006CAB8(v258, v311 + *(int *)(v313 + 48), &qword_1010B3FE8);
  sub_10006CAB8(v257, v311 + *(int *)(v313 + 64), &qword_1010B3FB8);
  sub_1000637B8(v256, &qword_1010B3FB8);
  sub_1000637B8(v309, &qword_1010B3FE8);
  sub_1000637B8(v312, &qword_1010B4010);
  sub_1000637B8(v257, &qword_1010B3FB8);
  sub_1000637B8(v258, &qword_1010B3FE8);
  sub_1000637B8(v442, &qword_1010B4010);
  uint64_t v314 = sub_100063814(&qword_1010B4038);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v314 - 8) + 56))(v311, 0, 1, v314);
  sub_10003CABC(v311, v507, &qword_1010B4018);
  uint64_t v261 = (uint64_t)v445;
  uint64_t v262 = (uint64_t)v444;
  uint64_t v260 = v447;
LABEL_21:
  v315 = v509;
  sub_100629F88();
  uint64_t v317 = v316;
  swift_bridgeObjectRelease();
  sub_100631F64((uint64_t)v315, v262, type metadata accessor for SharePlayProxCard);
  uint64_t v492 = v128;
  uint64_t v318 = v122;
  uint64_t v319 = v120;
  uint64_t v320 = v118;
  if (v317)
  {
    sub_1006323B0(v262, type metadata accessor for SharePlayProxCard);
    sub_100631F64((uint64_t)v509, v261, type metadata accessor for SharePlayProxCard);
LABEL_25:
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    char v322 = v519;
    goto LABEL_26;
  }
  uint64_t v321 = *(unsigned __int8 *)(v262 + 72);
  sub_1006323B0(v262, type metadata accessor for SharePlayProxCard);
  sub_100631F64((uint64_t)v509, v261, type metadata accessor for SharePlayProxCard);
  if ((v321 & 1) == 0) {
    goto LABEL_25;
  }
  char v322 = 1;
LABEL_26:
  uint64_t v323 = (uint64_t)v450;
  LODWORD(v499) = v449 & 1;
  sub_1006323B0(v261, type metadata accessor for SharePlayProxCard);
  v324 = v509;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v325 = sub_10062FAF8((uint64_t)v324);
  sub_100631F64((uint64_t)v324, v323, type metadata accessor for SharePlayProxCard);
  unint64_t v326 = (*(unsigned __int8 *)(v260 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v260 + 80);
  uint64_t v327 = swift_allocObject();
  uint64_t v328 = sub_100631FD0(v323, v327 + v326);
  __chkstk_darwin(v328);
  sub_100063814(&qword_1010B4040);
  sub_1006324C4(&qword_1010B4048, &qword_1010B4040, (void (*)(void))sub_10063249C);
  v329 = v468;
  Button.init(action:label:)();
  uint64_t v330 = swift_getKeyPath();
  uint64_t v331 = swift_allocObject();
  *(unsigned char *)(v331 + 16) = v322;
  uint64_t v332 = v470;
  uint64_t v333 = (uint64_t)v469;
  uint64_t v334 = v471;
  (*(void (**)(char *, char *, uint64_t))(v470 + 16))(v469, v329, v471);
  v335 = (uint64_t *)(v333 + *(int *)(v465 + 36));
  uint64_t *v335 = v330;
  v335[1] = (uint64_t)sub_100632744;
  v335[2] = v331;
  (*(void (**)(char *, uint64_t))(v332 + 8))(v329, v334);
  LOBYTE(v330) = static Edge.Set.all.getter();
  uint64_t v336 = v473;
  sub_10006CAB8(v333, v473, &qword_1010B3F88);
  uint64_t v337 = v336 + *(int *)(v466 + 36);
  uint64_t v506 = v325;
  *(void *)uint64_t v337 = v325;
  *(unsigned char *)(v337 + 8) = v330;
  swift_retain();
  sub_1000637B8(v333, &qword_1010B3F88);
  uint64_t v338 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v339 = type metadata accessor for RoundedCornerStyle();
  uint64_t v340 = (uint64_t)v476;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v339 - 8) + 104))(v476, v338, v339);
  uint64_t v341 = (uint64_t)v475;
  uint64_t v342 = (uint64_t)&v475[*(int *)(v467 + 36)];
  sub_100631F64(v340, v342, (uint64_t (*)(void))&type metadata accessor for Capsule);
  *(_WORD *)(v342 + *(int *)(sub_100063814(&qword_1010B4090) + 36)) = 256;
  sub_10006CAB8(v336, v341, &qword_1010B3F90);
  sub_1006323B0(v340, (uint64_t (*)(void))&type metadata accessor for Capsule);
  sub_1000637B8(v336, &qword_1010B3F90);
  LOBYTE(v342) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v344 = v343;
  uint64_t v346 = v345;
  uint64_t v348 = v347;
  uint64_t v350 = v349;
  uint64_t v351 = v472;
  sub_10006CAB8(v341, v472, &qword_1010B3F98);
  uint64_t v352 = v351 + *(int *)(v474 + 36);
  *(unsigned char *)uint64_t v352 = v342;
  *(void *)(v352 + 8) = v344;
  *(void *)(v352 + 16) = v346;
  *(void *)(v352 + 24) = v348;
  *(void *)(v352 + 32) = v350;
  *(unsigned char *)(v352 + 40) = 0;
  sub_1000637B8(v341, &qword_1010B3F98);
  uint64_t v353 = v497;
  sub_10003CABC(v351, v497, &qword_1010B3FA0);
  uint64_t v354 = (uint64_t)v496;
  sub_10006CAB8(v504, (uint64_t)v496, &qword_1010B4030);
  v540[0] = v565[0];
  *(_DWORD *)((char *)v540 + 3) = *(_DWORD *)((char *)v565 + 3);
  v539[0] = v564[0];
  *(_DWORD *)((char *)v539 + 3) = *(_DWORD *)((char *)v564 + 3);
  v538[0] = v563[0];
  *(_DWORD *)((char *)v538 + 3) = *(_DWORD *)((char *)v563 + 3);
  *(_DWORD *)((char *)v537 + 3) = *(_DWORD *)((char *)v562 + 3);
  v537[0] = v562[0];
  *(_DWORD *)((char *)v536 + 3) = *(_DWORD *)((char *)v561 + 3);
  v536[0] = v561[0];
  *(_DWORD *)((char *)v535 + 3) = *(_DWORD *)((char *)v532 + 3);
  v535[0] = v532[0];
  *(_DWORD *)((char *)v534 + 3) = *(_DWORD *)((char *)&v510 + 3);
  v534[0] = v510;
  LOBYTE(v329) = v560;
  LODWORD(v509) = v560;
  LOBYTE(v340) = (_BYTE)v499;
  char v533 = (char)v499;
  sub_10006CAB8(v507, v508, &qword_1010B4018);
  sub_10006CAB8(v353, v505, &qword_1010B3FA0);
  uint64_t v355 = v354;
  uint64_t v356 = v477;
  sub_10006CAB8(v355, v477, &qword_1010B4030);
  v357 = (int *)sub_100063814(&qword_1010B4098);
  v358 = (_OWORD *)(v356 + v357[12]);
  *(void *)&long long v541 = v502;
  *((void *)&v541 + 1) = v501;
  LOBYTE(v542) = v486;
  *(_DWORD *)((char *)&v542 + 1) = v565[0];
  DWORD1(v542) = *(_DWORD *)((char *)v565 + 3);
  *((void *)&v542 + 1) = v503;
  *(void *)&long long v543 = v500;
  BYTE8(v543) = 1;
  *(_DWORD *)((char *)&v543 + 9) = v564[0];
  HIDWORD(v543) = *(_DWORD *)((char *)v564 + 3);
  LOBYTE(v544) = v494;
  *(_DWORD *)((char *)&v544 + 1) = v563[0];
  DWORD1(v544) = *(_DWORD *)((char *)v563 + 3);
  uint64_t v359 = v460;
  *((void *)&v544 + 1) = v460;
  *(void *)&long long v545 = v320;
  *((void *)&v545 + 1) = v319;
  *(void *)&long long v546 = v318;
  BYTE8(v546) = v487;
  HIDWORD(v546) = *(_DWORD *)((char *)v562 + 3);
  *(_DWORD *)((char *)&v546 + 9) = v562[0];
  LOBYTE(v547) = v495;
  DWORD1(v547) = *(_DWORD *)((char *)v561 + 3);
  *(_DWORD *)((char *)&v547 + 1) = v561[0];
  uint64_t v360 = v464;
  *((void *)&v547 + 1) = v464;
  uint64_t v361 = v463;
  *(void *)&long long v548 = v463;
  uint64_t v362 = v462;
  *((void *)&v548 + 1) = v462;
  uint64_t v363 = v461;
  *(void *)&long long v549 = v461;
  BYTE8(v549) = v488;
  *(_DWORD *)((char *)&v549 + 9) = v532[0];
  HIDWORD(v549) = *(_DWORD *)((char *)v532 + 3);
  LOBYTE(v550) = v493;
  DWORD1(v550) = *(_DWORD *)((char *)&v510 + 3);
  *(_DWORD *)((char *)&v550 + 1) = v510;
  *((void *)&v550 + 1) = v492;
  *(void *)&v551[0] = v491;
  *((void *)&v551[0] + 1) = v490;
  *(void *)&v551[1] = v489;
  BYTE8(v551[1]) = (_BYTE)v329;
  long long v364 = v541;
  long long v365 = v542;
  long long v366 = v544;
  v358[2] = v543;
  v358[3] = v366;
  _OWORD *v358 = v364;
  v358[1] = v365;
  long long v367 = v545;
  long long v368 = v546;
  long long v369 = v548;
  v358[6] = v547;
  v358[7] = v369;
  v358[4] = v367;
  v358[5] = v368;
  long long v370 = v549;
  long long v371 = v550;
  long long v372 = v551[0];
  *(_OWORD *)((char *)v358 + 169) = *(_OWORD *)((char *)v551 + 9);
  v358[9] = v371;
  v358[10] = v372;
  v358[8] = v370;
  uint64_t v373 = v356 + v357[16];
  uint64_t v374 = v458;
  uint64_t v375 = v457;
  *(void *)uint64_t v373 = v458;
  *(void *)(v373 + 8) = v375;
  *(unsigned char *)(v373 + 16) = v340;
  uint64_t v376 = v484;
  *(void *)(v373 + 24) = v485;
  *(void *)(v373 + 32) = v376;
  *(unsigned char *)(v373 + 40) = 1;
  uint64_t v377 = v456;
  *(void *)(v373 + 48) = v483;
  *(void *)(v373 + 56) = v377;
  *(unsigned char *)(v373 + 64) = v455;
  *(void *)&long long v370 = v453;
  *(void *)(v373 + 72) = v454;
  *(void *)(v373 + 80) = v370;
  *(void *)&long long v370 = v451;
  *(void *)(v373 + 88) = v452;
  *(void *)(v373 + 96) = v370;
  *(unsigned char *)(v373 + 104) = 0;
  sub_10006CAB8(v508, v356 + v357[20], &qword_1010B4018);
  sub_10006CAB8(v505, v356 + v357[24], &qword_1010B3FA0);
  sub_10063275C((uint64_t)&v541);
  uint64_t v378 = v374;
  uint64_t v379 = v374;
  uint64_t v380 = v375;
  sub_1001CC8D0(v378, v375, v340);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  LODWORD(v498) = v459 & 1;
  uint64_t v381 = v502;
  sub_1001CC8D0(v502, v501, v459 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1001CC8D0(v379, v375, v340);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  sub_1000637B8(v497, &qword_1010B3FA0);
  sub_1000637B8(v507, &qword_1010B4018);
  uint64_t v382 = v379;
  sub_1000D1500(v379, v380, v340);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v383 = v501;
  sub_1000D1500(v381, v501, v498);
  uint64_t v384 = v500;
  swift_release();
  uint64_t v385 = v503;
  swift_bridgeObjectRelease();
  sub_1000637B8(v504, &qword_1010B4030);
  sub_1000637B8(v505, &qword_1010B3FA0);
  sub_1000637B8(v508, &qword_1010B4018);
  sub_1000D1500(v382, v380, v533);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)&long long v519 = v502;
  *((void *)&v519 + 1) = v383;
  LOBYTE(v520) = v486;
  *(_DWORD *)((char *)&v520 + 1) = v540[0];
  DWORD1(v520) = *(_DWORD *)((char *)v540 + 3);
  *((void *)&v520 + 1) = v385;
  *(void *)&long long v521 = v384;
  BYTE8(v521) = 1;
  *(_DWORD *)((char *)&v521 + 9) = v539[0];
  HIDWORD(v521) = *(_DWORD *)((char *)v539 + 3);
  LOBYTE(v522) = v494;
  DWORD1(v522) = *(_DWORD *)((char *)v538 + 3);
  *(_DWORD *)((char *)&v522 + 1) = v538[0];
  *((void *)&v522 + 1) = v359;
  *(void *)&long long v523 = v320;
  *((void *)&v523 + 1) = v319;
  *(void *)&long long v524 = v318;
  BYTE8(v524) = v487;
  HIDWORD(v524) = *(_DWORD *)((char *)v537 + 3);
  *(_DWORD *)((char *)&v524 + 9) = v537[0];
  LOBYTE(v525) = v495;
  DWORD1(v525) = *(_DWORD *)((char *)v536 + 3);
  *(_DWORD *)((char *)&v525 + 1) = v536[0];
  *((void *)&v525 + 1) = v360;
  *(void *)&long long v526 = v361;
  *((void *)&v526 + 1) = v362;
  *(void *)&long long v527 = v363;
  BYTE8(v527) = v488;
  HIDWORD(v527) = *(_DWORD *)((char *)v535 + 3);
  *(_DWORD *)((char *)&v527 + 9) = v535[0];
  LOBYTE(v528) = v493;
  DWORD1(v528) = *(_DWORD *)((char *)v534 + 3);
  *(_DWORD *)((char *)&v528 + 1) = v534[0];
  *((void *)&v528 + 1) = v492;
  *(void *)&long long v529 = v491;
  *((void *)&v529 + 1) = v490;
  *(void *)&long long v530 = v489;
  BYTE8(v530) = (_BYTE)v509;
  sub_100622718((uint64_t)&v519);
  return sub_1000637B8((uint64_t)v496, &qword_1010B4030);
}

uint64_t sub_10062D820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v191 = a2;
  uint64_t v3 = sub_100063814(&qword_1010B40B8);
  __chkstk_darwin(v3 - 8);
  uint64_t v183 = (char *)&v160 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_100063814(&qword_1010B40C0);
  __chkstk_darwin(v188);
  uint64_t v184 = (char *)&v160 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_100063814(&qword_1010B40C8);
  __chkstk_darwin(v189);
  uint64_t v185 = (char *)&v160 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v190 = (char *)&v160 - v8;
  uint64_t v168 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v178 = *(void *)(v168 - 8);
  __chkstk_darwin(v168);
  uint64_t v177 = (char *)&v160 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v181 = (char *)&v160 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100063814((uint64_t *)&unk_10109C050);
  __chkstk_darwin(v12 - 8);
  uint64_t v166 = (char *)&v160 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = type metadata accessor for Artwork();
  uint64_t v180 = *(void *)(v169 - 8);
  __chkstk_darwin(v169);
  uint64_t v165 = (char *)&v160 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v164 = (char *)&v160 - v16;
  uint64_t v17 = sub_100063814((uint64_t *)&unk_10109EF90);
  __chkstk_darwin(v17 - 8);
  uint64_t v179 = (char *)&v160 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v182 = (uint64_t)&v160 - v20;
  uint64_t v21 = sub_100063814((uint64_t *)&unk_1010A1D20);
  __chkstk_darwin(v21 - 8);
  uint64_t v167 = (uint64_t)&v160 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (void *)sub_100063814((uint64_t *)&unk_1010B40D0);
  uint64_t v175 = *(v23 - 1);
  id v176 = v23;
  __chkstk_darwin(v23);
  uint64_t v171 = (uint64_t)&v160 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_100063814(&qword_1010A4790);
  __chkstk_darwin(v170);
  uint64_t v173 = (char *)&v160 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = sub_100063814(&qword_1010B40E0);
  __chkstk_darwin(v172);
  uint64_t v174 = (uint64_t)&v160 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = sub_100063814(&qword_1010B40E8);
  __chkstk_darwin(v187);
  uint64_t v28 = (char *)&v160 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v160 - v30;
  uint64_t v186 = sub_100063814(&qword_1010B40F0);
  __chkstk_darwin(v186);
  uint64_t v33 = (char *)&v160 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for Image.ResizingMode();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v160 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100063814((uint64_t *)&unk_1010B40F8);
  __chkstk_darwin(v38 - 8);
  uint64_t v192 = (uint64_t)&v160 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v194 = (uint64_t)&v160 - v41;
  Int.seconds.getter(54);
  Int.seconds.getter(10);
  uint64_t v42 = *(int *)(type metadata accessor for SharePlayProxCard(0) + 20);
  uint64_t v193 = a1;
  uint64_t v43 = *(void *)(a1 + v42 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if ((void)v209)
  {
    id v176 = (id)v209;
    Image.init(uiImage:)();
    (*(void (**)(char *, void, uint64_t))(v35 + 104))(v37, enum case for Image.ResizingMode.stretch(_:), v34);
    uint64_t v44 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v45 = v221;
    uint64_t v46 = v222;
    uint64_t v47 = v223;
    uint64_t v48 = v224;
    uint64_t v49 = v225;
    uint64_t v50 = v226;
    unsigned __int8 v51 = static Edge.Set.all.getter();
    EdgeInsets.init(_all:)();
    uint64_t v175 = v44;
    uint64_t v195 = v44;
    uint64_t v196 = v45;
    uint64_t v197 = v46;
    uint64_t v198 = v47;
    uint64_t v199 = v48;
    uint64_t v200 = v49;
    uint64_t v201 = v50;
    uint64_t v202 = 256;
    uint64_t v203 = v51;
    uint64_t v204 = v52;
    uint64_t v205 = v53;
    uint64_t v206 = v54;
    uint64_t v207 = v55;
    __int16 v208 = 0;
    swift_retain();
    sub_100063814(&qword_1010B4120);
    sub_100632960();
    _ConditionalContent<>.init(storage:)();
    uint64_t v56 = *((void *)&v209 + 1);
    long long v57 = v210;
    uint64_t v181 = (char *)v210;
    uint64_t v182 = v209;
    long long v58 = v211;
    uint64_t v179 = (char *)v211;
    uint64_t v180 = *((void *)&v210 + 1);
    uint64_t v59 = v212;
    uint64_t v60 = v213;
    uint64_t v177 = v212;
    uint64_t v178 = *((void *)&v211 + 1);
    uint64_t v171 = v213;
    uint64_t v62 = v214;
    uint64_t v61 = v215;
    uint64_t v63 = v216;
    uint64_t v64 = v217;
    uint64_t v65 = v218;
    LOBYTE(v49) = v219;
    LOBYTE(v50) = v220;
    *(void *)uint64_t v33 = v209;
    *((void *)v33 + 1) = v56;
    uint64_t v173 = v61;
    uint64_t v174 = v56;
    *((_OWORD *)v33 + 1) = v57;
    *((_OWORD *)v33 + 2) = v58;
    *((void *)v33 + 6) = v59;
    *((void *)v33 + 7) = v60;
    *((void *)v33 + 8) = v62;
    *((void *)v33 + 9) = v61;
    *((void *)v33 + 10) = v63;
    *((void *)v33 + 11) = v64;
    uint64_t v172 = v63;
    *((void *)v33 + 12) = v65;
    v33[104] = v49;
    v33[105] = v50;
    swift_storeEnumTagMultiPayload();
    j__swift_retain();
    sub_100063814(&qword_1010B4108);
    sub_1006328EC();
    sub_100632A74();
    _ConditionalContent<>.init(storage:)();

LABEL_3:
    j__swift_release();
    swift_release();
    uint64_t v66 = (uint64_t)v190;
    uint64_t v67 = v191;
    uint64_t v69 = (uint64_t)v184;
    uint64_t v68 = (uint64_t)v185;
    uint64_t v70 = v183;
    uint64_t v71 = v188;
    uint64_t v72 = v189;
    goto LABEL_11;
  }
  uint64_t v73 = (uint64_t)v179;
  uint64_t v74 = v180;
  uint64_t v161 = v28;
  uint64_t v162 = v31;
  uint64_t v75 = v181;
  uint64_t v163 = v33;
  if ((*(unsigned char *)(v43 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState_removedImage) & 1) == 0)
  {
    uint64_t v76 = *(void **)(v193 + *(int *)(type metadata accessor for SharePlayProxCard.ViewModel(0) + 44));
    if (v76)
    {
      id v176 = v76;
      Image.init(uiImage:)();
      (*(void (**)(char *, void, uint64_t))(v35 + 104))(v37, enum case for Image.ResizingMode.stretch(_:), v34);
      uint64_t v77 = Image.resizable(capInsets:resizingMode:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v78 = v221;
      uint64_t v79 = v222;
      uint64_t v80 = v223;
      uint64_t v81 = v224;
      uint64_t v82 = v225;
      uint64_t v83 = v226;
      unsigned __int8 v84 = static Edge.Set.all.getter();
      EdgeInsets.init(_all:)();
      uint64_t v175 = v77;
      uint64_t v195 = v77;
      uint64_t v196 = v78;
      uint64_t v197 = v79;
      uint64_t v198 = v80;
      uint64_t v199 = v81;
      uint64_t v200 = v82;
      uint64_t v201 = v83;
      uint64_t v202 = 256;
      uint64_t v203 = v84;
      uint64_t v204 = v85;
      uint64_t v205 = v86;
      uint64_t v206 = v87;
      uint64_t v207 = v88;
      __int16 v208 = 256;
      swift_retain();
      sub_100063814(&qword_1010B4120);
      sub_100632960();
      _ConditionalContent<>.init(storage:)();
      uint64_t v89 = *((void *)&v209 + 1);
      long long v90 = v210;
      uint64_t v181 = (char *)v210;
      uint64_t v182 = v209;
      long long v91 = v211;
      uint64_t v179 = (char *)v211;
      uint64_t v180 = *((void *)&v210 + 1);
      uint64_t v92 = v212;
      uint64_t v93 = v213;
      uint64_t v177 = v212;
      uint64_t v178 = *((void *)&v211 + 1);
      uint64_t v171 = v213;
      uint64_t v95 = v214;
      uint64_t v94 = v215;
      uint64_t v96 = v216;
      uint64_t v97 = v217;
      uint64_t v98 = v218;
      LOBYTE(v82) = v219;
      LOBYTE(v83) = v220;
      uint64_t v99 = v163;
      *uint64_t v163 = v209;
      v99[1] = v89;
      uint64_t v173 = v94;
      uint64_t v174 = v89;
      *((_OWORD *)v99 + 1) = v90;
      *((_OWORD *)v99 + 2) = v91;
      v99[6] = v92;
      v99[7] = v93;
      v99[8] = v95;
      v99[9] = v94;
      v99[10] = v96;
      v99[11] = v97;
      uint64_t v172 = v96;
      v99[12] = v98;
      *((unsigned char *)v99 + 104) = v82;
      *((unsigned char *)v99 + 105) = v83;
      swift_storeEnumTagMultiPayload();
      j__swift_retain();
      sub_100063814(&qword_1010B4108);
      sub_1006328EC();
      sub_100632A74();
      _ConditionalContent<>.init(storage:)();

      goto LABEL_3;
    }
  }
  uint64_t v100 = v182;
  sub_10062A074(v182);
  sub_10006CAB8(v100, v73, (uint64_t *)&unk_10109EF90);
  uint64_t v101 = v74;
  uint64_t v102 = v169;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v73, 1, v169) == 1)
  {
    uint64_t v103 = type metadata accessor for ArtworkImage.ViewModel(0);
    uint64_t v104 = v167;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v167, 1, 1, v103);
  }
  else
  {
    uint64_t v105 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 32);
    uint64_t v106 = v164;
    v105(v164, v73, v102);
    uint64_t v107 = (uint64_t)v165;
    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v165, v106, v102);
    uint64_t v108 = type metadata accessor for Artwork.CropStyle();
    uint64_t v109 = (uint64_t)v166;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v166, 1, 1, v108);
    uint64_t v104 = v167;
    ArtworkImage.ViewModel.init(artwork:cropStyle:)(v107, v109, v167);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v106, v102);
    uint64_t v110 = type metadata accessor for ArtworkImage.ViewModel(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v104, 0, 1, v110);
  }
  uint64_t v69 = (uint64_t)v184;
  uint64_t v68 = (uint64_t)v185;
  uint64_t v70 = v183;
  uint64_t v111 = v168;
  uint64_t v112 = (uint64_t)v75;
  sub_1000637B8(v182, (uint64_t *)&unk_10109EF90);
  uint64_t v113 = sub_100063814(&qword_1010A4530);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v75, 7, 10, v113);
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(0, 1, 0, 1, 0, 1, 2, (uint64_t)&v195);
  uint64_t v115 = (uint64_t)v177;
  uint64_t v114 = v178;
  (*(void (**)(char *, void, uint64_t))(v178 + 104))(v177, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v111);
  uint64_t v116 = v171;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v104, v112, (uint64_t)&v195, v115, v171);
  (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v115, v111);
  sub_1006323B0(v112, type metadata accessor for ArtworkImage.Placeholder);
  sub_1000637B8(v104, (uint64_t *)&unk_1010A1D20);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v118 = v175;
  id v117 = v176;
  uint64_t v119 = (uint64_t)v173;
  (*(void (**)(char *, uint64_t, id))(v175 + 16))(v173, v116, v176);
  uint64_t v120 = (_OWORD *)(v119 + *(int *)(v170 + 36));
  long long v121 = v210;
  _OWORD *v120 = v209;
  v120[1] = v121;
  void v120[2] = v211;
  (*(void (**)(uint64_t, id))(v118 + 8))(v116, v117);
  uint64_t v122 = v174;
  sub_10006CAB8(v119, v174, &qword_1010A4790);
  *(_WORD *)(v122 + *(int *)(v172 + 36)) = 256;
  sub_1000637B8(v119, &qword_1010A4790);
  LOBYTE(v117) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v124 = v123;
  uint64_t v126 = v125;
  uint64_t v128 = v127;
  uint64_t v130 = v129;
  uint64_t v131 = (uint64_t)v161;
  sub_10006CAB8(v122, (uint64_t)v161, &qword_1010B40E0);
  uint64_t v132 = v131 + *(int *)(v187 + 36);
  *(unsigned char *)uint64_t v132 = (_BYTE)v117;
  *(void *)(v132 + 8) = v124;
  *(void *)(v132 + 16) = v126;
  *(void *)(v132 + 24) = v128;
  *(void *)(v132 + 32) = v130;
  *(unsigned char *)(v132 + 40) = 0;
  sub_1000637B8(v122, &qword_1010B40E0);
  uint64_t v133 = v131;
  uint64_t v134 = (uint64_t)v162;
  sub_10003CABC(v133, (uint64_t)v162, &qword_1010B40E8);
  sub_10006CAB8(v134, (uint64_t)v163, &qword_1010B40E8);
  swift_storeEnumTagMultiPayload();
  sub_100063814(&qword_1010B4108);
  sub_1006328EC();
  sub_100632A74();
  _ConditionalContent<>.init(storage:)();
  sub_1000637B8(v134, &qword_1010B40E8);
  uint64_t v71 = v188;
  uint64_t v72 = v189;
  uint64_t v66 = (uint64_t)v190;
  uint64_t v67 = v191;
LABEL_11:
  *uint64_t v70 = static Axis.Set.horizontal.getter();
  uint64_t v135 = sub_100063814(&qword_1010B41A0);
  sub_10062EA1C((uint64_t)&v70[*(int *)(v135 + 44)]);
  char v136 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v138 = v137;
  uint64_t v140 = v139;
  uint64_t v142 = v141;
  uint64_t v144 = v143;
  sub_10006CAB8((uint64_t)v70, v69, &qword_1010B40B8);
  uint64_t v145 = v69 + *(int *)(v71 + 36);
  *(unsigned char *)uint64_t v145 = v136;
  *(void *)(v145 + 8) = v138;
  *(void *)(v145 + 16) = v140;
  *(void *)(v145 + 24) = v142;
  *(void *)(v145 + 32) = v144;
  *(unsigned char *)(v145 + 40) = 0;
  sub_1000637B8((uint64_t)v70, &qword_1010B40B8);
  char v146 = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v148 = v147;
  uint64_t v150 = v149;
  uint64_t v152 = v151;
  uint64_t v154 = v153;
  sub_10006CAB8(v69, v68, &qword_1010B40C0);
  uint64_t v155 = v68 + *(int *)(v72 + 36);
  *(unsigned char *)uint64_t v155 = v146;
  *(void *)(v155 + 8) = v148;
  *(void *)(v155 + 16) = v150;
  *(void *)(v155 + 24) = v152;
  *(void *)(v155 + 32) = v154;
  *(unsigned char *)(v155 + 40) = 0;
  sub_1000637B8(v69, &qword_1010B40C0);
  sub_10003CABC(v68, v66, &qword_1010B40C8);
  uint64_t v156 = v194;
  uint64_t v157 = v192;
  sub_10006CAB8(v194, v192, (uint64_t *)&unk_1010B40F8);
  sub_10006CAB8(v66, v68, &qword_1010B40C8);
  sub_10006CAB8(v157, v67, (uint64_t *)&unk_1010B40F8);
  uint64_t v158 = sub_100063814(&qword_1010B41A8);
  sub_10006CAB8(v68, v67 + *(int *)(v158 + 48), &qword_1010B40C8);
  sub_1000637B8(v66, &qword_1010B40C8);
  sub_1000637B8(v156, (uint64_t *)&unk_1010B40F8);
  sub_1000637B8(v68, &qword_1010B40C8);
  return sub_1000637B8(v157, (uint64_t *)&unk_1010B40F8);
}

uint64_t sub_10062EA1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_100063814(&qword_1010B41B0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v26 - v5;
  uint64_t v7 = sub_100063814(&qword_1010B41B8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = sub_100063814(&qword_1010B41C0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v26 - v17;
  *(void *)uint64_t v18 = static VerticalAlignment.center.getter();
  *((void *)v18 + 1) = 0;
  v18[16] = 1;
  uint64_t v19 = sub_100063814(&qword_1010B41C8);
  sub_10062ED00((uint64_t)&v18[*(int *)(v19 + 44)]);
  *(void *)uint64_t v12 = static VerticalAlignment.center.getter();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  uint64_t v20 = (uint64_t)&v12[*(int *)(sub_100063814(&qword_1010B41D0) + 44)];
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v21 = sub_100063814(&qword_1010B41D8);
  sub_10062F820((uint64_t)&v6[*(int *)(v21 + 44)]);
  sub_10006CAB8((uint64_t)v6, (uint64_t)v3, &qword_1010B41B0);
  sub_10006CAB8((uint64_t)v3, v20, &qword_1010B41B0);
  uint64_t v22 = v20 + *(int *)(sub_100063814(&qword_1010B41E0) + 48);
  *(void *)uint64_t v22 = 0;
  *(unsigned char *)(v22 + 8) = 1;
  sub_1000637B8((uint64_t)v6, &qword_1010B41B0);
  sub_1000637B8((uint64_t)v3, &qword_1010B41B0);
  sub_10006CAB8((uint64_t)v18, (uint64_t)v15, &qword_1010B41C0);
  sub_10006CAB8((uint64_t)v12, (uint64_t)v9, &qword_1010B41B8);
  uint64_t v23 = v27;
  sub_10006CAB8((uint64_t)v15, v27, &qword_1010B41C0);
  uint64_t v24 = sub_100063814(&qword_1010B41E8);
  sub_10006CAB8((uint64_t)v9, v23 + *(int *)(v24 + 48), &qword_1010B41B8);
  sub_1000637B8((uint64_t)v12, &qword_1010B41B8);
  sub_1000637B8((uint64_t)v18, &qword_1010B41C0);
  sub_1000637B8((uint64_t)v9, &qword_1010B41B8);
  return sub_1000637B8((uint64_t)v15, &qword_1010B41C0);
}

uint64_t sub_10062ED00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100063814(&qword_1010B41F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v8 = sub_100063814(&qword_1010B41F8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - v12;
  sub_10062EEBC((uint64_t)&v17 - v12);
  sub_10062F394((uint64_t)v7);
  sub_10006CAB8((uint64_t)v13, (uint64_t)v10, &qword_1010B41F8);
  sub_10006CAB8((uint64_t)v7, (uint64_t)v4, &qword_1010B41F0);
  sub_10006CAB8((uint64_t)v10, a1, &qword_1010B41F8);
  uint64_t v14 = sub_100063814(&qword_1010B4238);
  uint64_t v15 = a1 + *(int *)(v14 + 48);
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  sub_10006CAB8((uint64_t)v4, a1 + *(int *)(v14 + 64), &qword_1010B41F0);
  sub_1000637B8((uint64_t)v7, &qword_1010B41F0);
  sub_1000637B8((uint64_t)v13, &qword_1010B41F8);
  sub_1000637B8((uint64_t)v4, &qword_1010B41F0);
  return sub_1000637B8((uint64_t)v10, &qword_1010B41F8);
}

uint64_t sub_10062EEBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v2 = type metadata accessor for SharePlayProxCard(0);
  uint64_t v39 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v39 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_100063814(&qword_101099B68);
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100063814(&qword_1010B4218);
  __chkstk_darwin(v43);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v42 = sub_100063814(&qword_1010B4220);
  __chkstk_darwin(v42);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100629F88();
  if (v17)
  {
    uint64_t v45 = v16;
    uint64_t v46 = v17;
    sub_10005D180();
    uint64_t v18 = Text.init<A>(_:)();
    uint64_t v20 = v19;
    char v22 = v21 & 1;
    uint64_t v23 = Text.bold()();
    uint64_t v25 = v24;
    char v27 = v26;
    uint64_t v29 = v28;
    sub_1000D1500(v18, v20, v22);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v15 = v23;
    *((void *)v15 + 1) = v25;
    v15[16] = v27 & 1;
    *((void *)v15 + 3) = v29;
    swift_storeEnumTagMultiPayload();
    sub_100632D0C();
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    uint64_t v45 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v46 = v31;
    sub_100631F64(v1, (uint64_t)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SharePlayProxCard);
    unint64_t v32 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v33 = swift_allocObject();
    sub_100631FD0((uint64_t)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v33 + v32);
    sub_10005D180();
    Button<>.init<A>(_:action:)();
    uint64_t v34 = static Color.secondary.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v37 = v40;
    uint64_t v36 = v41;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v10, v8, v41);
    uint64_t v38 = (uint64_t *)&v10[*(int *)(v43 + 36)];
    *uint64_t v38 = KeyPath;
    v38[1] = v34;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v36);
    sub_10003CABC((uint64_t)v10, (uint64_t)v13, &qword_1010B4218);
    sub_10006CAB8((uint64_t)v13, (uint64_t)v15, &qword_1010B4218);
    swift_storeEnumTagMultiPayload();
    sub_100632D0C();
    _ConditionalContent<>.init(storage:)();
    return sub_1000637B8((uint64_t)v13, &qword_1010B4218);
  }
}

uint64_t sub_10062F394@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v2 = type metadata accessor for SharePlayProxCard(0);
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v29 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v30 = (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v31 = sub_100063814(&qword_101099B68);
  uint64_t v6 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100063814(&qword_1010B4208);
  __chkstk_darwin(v28);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100063814(&qword_1010B4210);
  uint64_t v32 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100629F88();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if (v15)
  {
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    uint64_t v34 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v35 = v16;
    uint64_t v17 = v30;
    sub_100631F64(v1, v30, type metadata accessor for SharePlayProxCard);
    unint64_t v18 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v19 = swift_allocObject();
    sub_100631FD0(v17, v19 + v18);
    sub_10005D180();
    Button<>.init<A>(_:action:)();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v21 = v31;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v31);
    char v22 = &v10[*(int *)(v28 + 36)];
    *(void *)char v22 = KeyPath;
    *((void *)v22 + 1) = 1;
    v22[16] = 0;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v21);
    sub_10006CAB8((uint64_t)v10, (uint64_t)v13, &qword_1010B4208);
    *(void *)&v13[*(int *)(v11 + 36)] = 0x3FF0000000000000;
    sub_1000637B8((uint64_t)v10, &qword_1010B4208);
    uint64_t v23 = v33;
    sub_10003CABC((uint64_t)v13, v33, &qword_1010B4210);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v23, 0, 1, v11);
  }
  else
  {
    uint64_t v25 = v33;
    char v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
    return v26(v25, 1, 1, v11);
  }
}

uint64_t sub_10062F820@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100063814(&qword_1010B41F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = sub_100063814(&qword_1010B41F8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v16 - v12;
  sub_10062EEBC((uint64_t)&v16 - v12);
  sub_10062F394((uint64_t)v7);
  sub_10006CAB8((uint64_t)v13, (uint64_t)v10, &qword_1010B41F8);
  sub_10006CAB8((uint64_t)v7, (uint64_t)v4, &qword_1010B41F0);
  sub_10006CAB8((uint64_t)v10, a1, &qword_1010B41F8);
  uint64_t v14 = sub_100063814(&qword_1010B4200);
  sub_10006CAB8((uint64_t)v4, a1 + *(int *)(v14 + 48), &qword_1010B41F0);
  sub_1000637B8((uint64_t)v7, &qword_1010B41F0);
  sub_1000637B8((uint64_t)v13, &qword_1010B41F8);
  sub_1000637B8((uint64_t)v4, &qword_1010B41F0);
  return sub_1000637B8((uint64_t)v10, &qword_1010B41F8);
}

uint64_t sub_10062F9C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OpenURLAction();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.openURL.setter();
}

id sub_10062FA90()
{
  id result = [self defaultWorkspace];
  if (result)
  {
    uint64_t v1 = result;
    LSApplicationWorkspace.openMusicSettings()();

    return (id)static OpenURLAction.Result.handled.getter();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10062FAF8(uint64_t a1)
{
  type metadata accessor for SharePlayProxCard(0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v7 == 1)
  {
    if ((*(unsigned char *)(a1 + *(int *)(type metadata accessor for SharePlayProxCard.ViewModel(0) + 52) + 16) & 1) == 0) {
      return static Color.clear.getter();
    }
    goto LABEL_7;
  }
  sub_100629F88();
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  if (!v3)
  {
LABEL_7:
    id v6 = [self systemFillColor];
    return Color.init(_:)();
  }
  id v4 = (id)*UIColor.MusicTint.normal.unsafeMutableAddressor();
  return Color.init(_:)();
}

uint64_t sub_10062FC20@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v40 = a2;
  uint64_t v42 = a3;
  uint64_t v4 = sub_100063814(&qword_1010B4088);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010B4070);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100063814(&qword_1010B4240);
  uint64_t v10 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100063814(&qword_1010B4068);
  __chkstk_darwin(v37);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100063814(&qword_1010B4058);
  __chkstk_darwin(v39);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100063814(&qword_1010B4040);
  __chkstk_darwin(v17 - 8);
  uint64_t v41 = (uint64_t)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)id v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0x4024000000000000;
  v6[16] = 0;
  uint64_t v19 = sub_100063814(&qword_1010B4248);
  sub_1006300A4(a1, (uint64_t)&v6[*(int *)(v19 + 44)]);
  uint64_t v20 = static Font.body.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006CAB8((uint64_t)v6, (uint64_t)v9, &qword_1010B4088);
  char v22 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  uint64_t *v22 = KeyPath;
  v22[1] = v20;
  sub_1000637B8((uint64_t)v6, &qword_1010B4088);
  sub_100632618();
  View.bold(_:)();
  sub_1000637B8((uint64_t)v9, &qword_1010B4070);
  if (v40) {
    uint64_t v23 = static Color.primary.getter();
  }
  else {
    uint64_t v23 = static Color.white.getter();
  }
  uint64_t v24 = v23;
  uint64_t v25 = swift_getKeyPath();
  uint64_t v26 = v38;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v38);
  uint64_t v27 = (uint64_t *)&v14[*(int *)(v37 + 36)];
  *uint64_t v27 = v25;
  v27[1] = v24;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v26);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_10006CAB8((uint64_t)v14, (uint64_t)v16, &qword_1010B4068);
  uint64_t v28 = &v16[*(int *)(v39 + 36)];
  long long v29 = v48;
  *((_OWORD *)v28 + 4) = v47;
  *((_OWORD *)v28 + 5) = v29;
  *((_OWORD *)v28 + 6) = v49;
  long long v30 = v44;
  *(_OWORD *)uint64_t v28 = v43;
  *((_OWORD *)v28 + 1) = v30;
  long long v31 = v46;
  *((_OWORD *)v28 + 2) = v45;
  *((_OWORD *)v28 + 3) = v31;
  sub_1000637B8((uint64_t)v14, &qword_1010B4068);
  uint64_t v32 = static Alignment.center.getter();
  uint64_t v33 = v41;
  sub_100623888(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v41, 0.0, 1, 0.0, 1, v32, v34, &qword_1010B4058, &qword_1010B4040);
  sub_1000637B8((uint64_t)v16, &qword_1010B4058);
  return sub_10003CABC(v33, v42, &qword_1010B4040);
}

uint64_t sub_1006300A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100063814((uint64_t *)&unk_1010B4250);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v35 - v8;
  type metadata accessor for SharePlayProxCard(0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v40 == 1
    && (*(unsigned char *)(a1 + *(int *)(type metadata accessor for SharePlayProxCard.ViewModel(0) + 52) + 16) & 1) == 0)
  {
    ProgressView<>.init<>()();
    uint64_t v11 = sub_100063814(&qword_1010B0330);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 0, 1, v11);
  }
  else
  {
    uint64_t v10 = sub_100063814(&qword_1010B0330);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  }
  uint64_t v12 = a1 + *(int *)(type metadata accessor for SharePlayProxCard.ViewModel(0) + 52);
  uint64_t v14 = *(uint64_t (**)(uint64_t))v12;
  uint64_t v13 = *(void *)(v12 + 8);
  if (*(unsigned char *)(v12 + 16))
  {
    int v40 = *(uint64_t (**)(void))v12;
    uint64_t v41 = v13;
    sub_10005D180();
    swift_bridgeObjectRetain();
    uint64_t v35 = Text.init<A>(_:)();
    uint64_t v36 = v16;
    uint64_t v37 = v15 & 1;
    uint64_t v38 = v17;
    char v39 = 1;
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    sub_100627CD0((uint64_t)v14, v13, 0);
    uint64_t v18 = swift_retain();
    uint64_t v19 = v14(v18);
    uint64_t v21 = v20;
    swift_release();
    int v40 = (uint64_t (*)(void))v19;
    uint64_t v41 = v21;
    sub_10005D180();
    uint64_t v22 = Text.init<A>(_:)();
    uint64_t v24 = v23;
    uint64_t v35 = v22;
    uint64_t v36 = v23;
    char v26 = v25 & 1;
    uint64_t v37 = v25 & 1;
    uint64_t v38 = v27;
    char v39 = 0;
    sub_1001CC8D0(v22, v23, v25 & 1);
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)();
    sub_100627DF4((uint64_t)v14, v13, 0);
    sub_1000D1500(v22, v24, v26);
    swift_bridgeObjectRelease();
  }
  uint64_t v28 = (uint64_t)v40;
  uint64_t v29 = v41;
  uint64_t v30 = v42;
  uint64_t v31 = v43;
  char v32 = v44;
  sub_10006CAB8((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1010B4250);
  sub_10006CAB8((uint64_t)v6, a2, (uint64_t *)&unk_1010B4250);
  uint64_t v33 = a2 + *(int *)(sub_100063814(&qword_1010B4260) + 48);
  *(void *)uint64_t v33 = v28;
  *(void *)(v33 + 8) = v29;
  *(void *)(v33 + 16) = v30;
  *(void *)(v33 + 24) = v31;
  *(unsigned char *)(v33 + 32) = v32;
  sub_100632DD0(v28, v29, v30);
  sub_1000637B8((uint64_t)v9, (uint64_t *)&unk_1010B4250);
  sub_100632E0C(v28, v29, v30);
  return sub_1000637B8((uint64_t)v6, (uint64_t *)&unk_1010B4250);
}

uint64_t sub_100630444@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  long long v58 = a2;
  uint64_t v3 = type metadata accessor for SharePlayProxCard(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_100063814(&qword_101099B68);
  uint64_t v63 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  long long v57 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v56 = (char *)v51 - v13;
  __chkstk_darwin(v14);
  uint64_t v55 = (char *)v51 - v15;
  __chkstk_darwin(v16);
  uint64_t v54 = (char *)v51 - v17;
  __chkstk_darwin(v18);
  uint64_t v53 = (char *)v51 - v19;
  __chkstk_darwin(v20);
  uint64_t v62 = (char *)v51 - v21;
  __chkstk_darwin(v22);
  uint64_t v64 = (char *)v51 - v23;
  __chkstk_darwin(v24);
  uint64_t v61 = (char *)v51 - v25;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v65 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v66 = v26;
  uint64_t v60 = type metadata accessor for SharePlayProxCard;
  sub_100631F64(a1, (uint64_t)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for SharePlayProxCard);
  uint64_t v27 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v52 = (v27 + 16) & ~v27;
  uint64_t v59 = v27 | 7;
  uint64_t v28 = swift_allocObject() + v52;
  uint64_t v29 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100631FD0((uint64_t)v29, v28);
  v51[1] = sub_10005D180();
  Button<>.init<A>(_:action:)();
  String.LocalizationValue.init(stringLiteral:)();
  v51[0] = v8;
  static Locale.current.getter();
  uint64_t v65 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v66 = v30;
  uint64_t v31 = a1;
  uint64_t v32 = a1;
  uint64_t v33 = v60;
  sub_100631F64(v31, (uint64_t)v29, v60);
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v52;
  sub_100631FD0((uint64_t)v29, v34 + v52);
  Button<>.init<A>(_:action:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v65 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v66 = v36;
  sub_100631F64(v32, (uint64_t)v29, v33);
  uint64_t v37 = swift_allocObject();
  sub_100631FD0((uint64_t)v29, v37 + v35);
  uint64_t v38 = v62;
  Button<>.init<A>(_:action:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v65 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v66 = v39;
  sub_100631F64(v32, (uint64_t)v29, v60);
  uint64_t v40 = swift_allocObject();
  sub_100631FD0((uint64_t)v29, v40 + v35);
  uint64_t v41 = v53;
  Button<>.init<A>(_:action:)();
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  uint64_t v43 = v54;
  v42(v54, v61, v10);
  char v44 = v55;
  v42(v55, v64, v10);
  long long v45 = v56;
  v42(v56, v38, v10);
  long long v46 = v57;
  v42(v57, v41, v10);
  long long v47 = v58;
  v42(v58, v43, v10);
  long long v48 = (int *)sub_100063814(&qword_1010B3F78);
  v42(&v47[v48[12]], v44, v10);
  v42(&v47[v48[16]], v45, v10);
  v42(&v47[v48[20]], v46, v10);
  long long v49 = *(void (**)(char *, uint64_t))(v63 + 8);
  v49(v41, v10);
  v49(v62, v10);
  v49(v64, v10);
  v49(v61, v10);
  v49(v46, v10);
  v49(v45, v10);
  v49(v44, v10);
  return ((uint64_t (*)(char *, uint64_t))v49)(v43, v10);
}

uint64_t sub_100630BE8()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100630C9C()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100630D4C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for SharePlayProxCard(0) + 20) + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain_n();
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();

  uint64_t result = swift_release();
  *(unsigned char *)(v1 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState_removedImage) = 1;
  return result;
}

uint64_t sub_100630E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v3 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for SharePlayProxCard(0);
  type metadata accessor for SharePlayProxCard.CardState(0);
  sub_100631A58();
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v7 = v30;
  uint64_t v23 = v29;
  uint64_t v24 = v28;
  uint64_t v8 = (long long *)(a1 + *(int *)(v6 + 40));
  uint64_t v9 = *((void *)v8 + 2);
  long long v26 = *v8;
  uint64_t v27 = v9;
  sub_100063814(&qword_1010AD208);
  State.projectedValue.getter();
  long long v10 = v31;
  long long v11 = v32;
  uint64_t v12 = (char *)(a1 + *(int *)(v6 + 32));
  char v13 = *v12;
  uint64_t v14 = *((void *)v12 + 1);
  LOBYTE(v26) = v13;
  *((void *)&v26 + 1) = v14;
  sub_100063814(&qword_1010B3EF0);
  State.projectedValue.getter();
  long long v15 = v31;
  char v16 = v32;
  uint64_t v17 = UIImagePickerController.profileImagePickerProperties.unsafeMutableAddressor();
  ImagePicker.init(pickedImage:sourceType:shouldPresent:didPickImage:editingControllerProperties:)(v24, v23, v7, v10, *((uint64_t *)&v10 + 1), v11, *((uint64_t *)&v11 + 1), v15, v5, *((uint64_t *)&v15 + 1), v16, 0, 0, *v17);
  swift_bridgeObjectRetain();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v18 = v25;
  sub_100631F64((uint64_t)v5, v25, type metadata accessor for ImagePicker);
  uint64_t v19 = (_OWORD *)(v18 + *(int *)(sub_100063814(&qword_1010B3F70) + 36));
  long long v20 = v32;
  *uint64_t v19 = v31;
  v19[1] = v20;
  id v19[2] = v33;
  return sub_1006323B0((uint64_t)v5, type metadata accessor for ImagePicker);
}

uint64_t sub_10063109C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10063111C@<X0>(char *a1@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v1 = sub_100063814((uint64_t *)&unk_1010B3F40);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100063814(&qword_101099B68);
  uint64_t v47 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v40 = (char *)&v37 - v6;
  __chkstk_darwin(v7);
  long long v46 = (char *)&v37 - v8;
  __chkstk_darwin(v9);
  char v44 = (char *)&v37 - v10;
  uint64_t v11 = type metadata accessor for Locale();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = sub_100063814(&qword_1010B3F50);
  uint64_t v38 = *(void *)(v13 - 8);
  uint64_t v14 = v38;
  uint64_t v39 = v13;
  __chkstk_darwin(v13);
  long long v45 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v37 - v17;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v19 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v21 = v20;
  type metadata accessor for SharePlayProxCard(0);
  type metadata accessor for SharePlayProxCard.CardState(0);
  sub_100631A58();
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v48 = v19;
  uint64_t v49 = v21;
  sub_10005D180();
  uint64_t v37 = v18;
  TextField<>.init<A>(_:text:onEditingChanged:onCommit:)();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v22 = v44;
  Button<>.init(_:action:)();
  LocalizedStringKey.init(stringLiteral:)();
  static ButtonRole.cancel.getter();
  uint64_t v23 = type metadata accessor for ButtonRole();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v3, 0, 1, v23);
  uint64_t v24 = v46;
  Button<>.init(_:role:action:)();
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  long long v26 = v45;
  uint64_t v27 = v39;
  v25(v45, v18, v39);
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v29 = v40;
  uint64_t v30 = v42;
  v28(v40, v22, v42);
  long long v31 = v41;
  v28(v41, v24, v30);
  long long v32 = v43;
  v25(v43, v26, v27);
  uint64_t v33 = sub_100063814((uint64_t *)&unk_1010B3F60);
  v28(&v32[*(int *)(v33 + 48)], v29, v30);
  v28(&v32[*(int *)(v33 + 64)], v31, v30);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v47 + 8);
  v34(v46, v30);
  v34(v44, v30);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v38 + 8);
  v35(v37, v27);
  v34(v31, v30);
  v34(v29, v30);
  return ((uint64_t (*)(char *, uint64_t))v35)(v45, v27);
}

uint64_t sub_100631720@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1006317A0()
{
  return static Published.subscript.setter();
}

uint64_t sub_100631824()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100631890()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100631900@<X0>(char *a1@<X8>)
{
  return sub_100630444(*(void *)(v1 + 16), a1);
}

uint64_t sub_100631908@<X0>(char *a1@<X8>)
{
  return sub_10063111C(a1);
}

unint64_t sub_100631910()
{
  unint64_t result = qword_1010B3F20;
  if (!qword_1010B3F20)
  {
    sub_10006389C(&qword_1010B3EE0);
    sub_10006389C(&qword_1010B3ED0);
    sub_10006389C(&qword_1010B3EF8);
    sub_100063858(&qword_1010B3F00, &qword_1010B3ED0);
    sub_100063858(&qword_1010B3F08, &qword_1010B3EF8);
    swift_getOpaqueTypeConformance2();
    sub_100063858((unint64_t *)&unk_1010B3F28, &qword_1010B3F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3F20);
  }
  return result;
}

unint64_t sub_100631A58()
{
  unint64_t result = qword_1010B3F58;
  if (!qword_1010B3F58)
  {
    type metadata accessor for SharePlayProxCard.CardState(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B3F58);
  }
  return result;
}

uint64_t sub_100631AB8@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100631B38()
{
  return static Published.subscript.setter();
}

void sub_100631BB0(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_100631E8C(v1);
}

uint64_t sub_100631C00@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100631C2C()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_100631C54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100631C80()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_100631CAC()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100631CD0(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_10109CD98);
  __chkstk_darwin(v2 - 8);
  sub_10006CAB8(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_10109CD98);
  return EnvironmentValues.textCase.setter();
}

uint64_t sub_100631D64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100631D90()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_100631DBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100631DF0()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_100631E20@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100631E50()
{
  return EnvironmentValues.isEnabled.setter();
}

unsigned char *sub_100631E78(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

void sub_100631E8C(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = a1;
  swift_retain();
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();

  if (a1) {
    *(unsigned char *)(v1 + OBJC_IVAR____TtCV5Music17SharePlayProxCard9CardState_removedImage) = 0;
  }
}

uint64_t sub_100631F64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100631FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharePlayProxCard(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10063203C()
{
  uint64_t v1 = type metadata accessor for SharePlayProxCard(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v3 = (int *)type metadata accessor for SharePlayProxCard.ViewModel(0);
  uint64_t v4 = v2 + v3[10];
  uint64_t v5 = type metadata accessor for Artwork();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }

  swift_bridgeObjectRelease();
  sub_100627DF4(*(void *)(v2 + v3[13]), *(void *)(v2 + v3[13] + 8), *(unsigned char *)(v2 + v3[13] + 16));
  swift_release();
  if (*(void *)(v2 + *(int *)(v1 + 24))) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = v2 + *(int *)(v1 + 40);
  if (*(void *)v7 >= 3uLL)
  {
    swift_bridgeObjectRelease();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10063225C()
{
  return sub_100632BDC((uint64_t (*)(uint64_t))sub_100630BE8);
}

uint64_t sub_100632278()
{
  return sub_100632BDC((uint64_t (*)(uint64_t))sub_100630C9C);
}

uint64_t sub_100632294()
{
  return sub_100632BDC(sub_100630D4C);
}

uint64_t sub_1006322AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1006322D8()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_100632304@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100632330()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_10063235C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100632388()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_1006323B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10063241C()
{
  uint64_t v1 = type metadata accessor for SharePlayProxCard(0);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t result = v1 - 8;
  uint64_t v4 = (uint64_t (**)(void))(v0
                          + *(int *)(result + 32)
                          + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
  if (*v4) {
    return (*v4)();
  }
  return result;
}

uint64_t sub_100632490@<X0>(uint64_t a1@<X8>)
{
  return sub_10062FC20(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t sub_10063249C()
{
  return sub_1006324C4(&qword_1010B4050, &qword_1010B4058, (void (*)(void))sub_100632544);
}

uint64_t sub_1006324C4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100632544()
{
  unint64_t result = qword_1010B4060;
  if (!qword_1010B4060)
  {
    sub_10006389C(&qword_1010B4068);
    sub_10006389C(&qword_1010B4070);
    sub_100632618();
    swift_getOpaqueTypeConformance2();
    sub_100063858((unint64_t *)&unk_10109CF50, &qword_1010A8A20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4060);
  }
  return result;
}

unint64_t sub_100632618()
{
  unint64_t result = qword_1010B4078;
  if (!qword_1010B4078)
  {
    sub_10006389C(&qword_1010B4070);
    sub_100063858(&qword_1010B4080, &qword_1010B4088);
    sub_100063858((unint64_t *)&unk_10109CE00, (uint64_t *)&unk_1010A8A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4078);
  }
  return result;
}

uint64_t sub_1006326DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10063270C()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_100632734()
{
  return swift_deallocObject();
}

unsigned char *sub_100632744(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_10063275C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006327AC()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_1006327D4()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_1006327FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100632874(uint64_t a1)
{
  return a1;
}

unint64_t sub_1006328EC()
{
  unint64_t result = qword_1010B4110;
  if (!qword_1010B4110)
  {
    sub_10006389C(&qword_1010B4108);
    sub_100632960();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4110);
  }
  return result;
}

unint64_t sub_100632960()
{
  unint64_t result = qword_1010B4118;
  if (!qword_1010B4118)
  {
    sub_10006389C(&qword_1010B4120);
    sub_100632B14(&qword_1010B4128, &qword_1010B4130, (void (*)(void))sub_100632A00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4118);
  }
  return result;
}

unint64_t sub_100632A00()
{
  unint64_t result = qword_1010B4138;
  if (!qword_1010B4138)
  {
    sub_10006389C(&qword_1010B4140);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4138);
  }
  return result;
}

unint64_t sub_100632A74()
{
  unint64_t result = qword_1010B4158;
  if (!qword_1010B4158)
  {
    sub_10006389C(&qword_1010B40E8);
    sub_100632B14((unint64_t *)&unk_1010B4160, &qword_1010B40E0, (void (*)(void))sub_100332D68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4158);
  }
  return result;
}

uint64_t sub_100632B14(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    sub_100063858(&qword_1010B4148, &qword_1010B4150);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100632BC4()
{
  return sub_100632BDC((uint64_t (*)(uint64_t))sub_100631890);
}

uint64_t sub_100632BDC(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for SharePlayProxCard(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100632C50@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100632C84()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_100632CB8()
{
  return sub_100631824();
}

unint64_t sub_100632D0C()
{
  unint64_t result = qword_1010B4228;
  if (!qword_1010B4228)
  {
    sub_10006389C(&qword_1010B4218);
    sub_100063858(&qword_1010B4230, &qword_101099B68);
    sub_100063858((unint64_t *)&unk_10109CF50, &qword_1010A8A20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4228);
  }
  return result;
}

uint64_t sub_100632DD0(uint64_t a1, uint64_t a2, char a3)
{
  sub_1001CC8D0(a1, a2, a3 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_100632E0C(uint64_t a1, uint64_t a2, char a3)
{
  sub_1000D1500(a1, a2, a3 & 1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100632E48()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 64);
  if (v1 != (void *)1) {

  }
  return swift_deallocObject();
}

uint64_t sub_100632EA8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[10];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000154F4;
  return sub_100626B30(a1, v4, v5, v6, v7);
}

uint64_t sub_100632F6C()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100632FAC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100081D08;
  return sub_1006272A4(a1, v4, v5, v6);
}

uint64_t sub_100633060()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100633098()
{
}

uint64_t sub_1006330A0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1006330FC(uint64_t a1)
{
  return a1;
}

uint64_t destroy for SharePlayProxCard.ButtonTitle(uint64_t a1)
{
  return sub_100627DF4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s5Music17SharePlayProxCardV11ButtonTitleOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100627CD0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SharePlayProxCard.ButtonTitle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100627CD0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100627DF4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SharePlayProxCard.ButtonTitle(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_100627DF4(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SharePlayProxCard.ButtonTitle()
{
  return &type metadata for SharePlayProxCard.ButtonTitle;
}

uint64_t sub_100633240()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100633300(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v3 = *(void *)(a1 + 128);
  char v4 = *(unsigned char *)(a1 + 136);
  sub_1001CC8D0(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1001CC8D0(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_10063338C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t result = 0;
  switch(a1 >> 62)
  {
    case 2uLL:
      return result;
    case 3uLL:
      if (a1 == 0xC000000000000000 && !(a3 | a2)) {
        static DeviceCapabilities.hasWAPICapability.getter();
      }
      goto LABEL_5;
    default:
LABEL_5:
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t result = String.init(localized:table:bundle:locale:comment:)();
      break;
  }
  return result;
}

void (*sub_100633658(unint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v6 = type metadata accessor for Locale();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v7 - 8);
  uint64_t result = 0;
  if ((a1 >> 62) - 1 >= 2)
  {
    if (a1 >> 62)
    {
      uint64_t result = 0;
      if (a1 == 0xC000000000000000 && !(a3 | a2))
      {
        String.LocalizationValue.init(stringLiteral:)();
        static Locale.current.getter();
        String.init(localized:table:bundle:locale:comment:)();
        return sub_100638B08;
      }
    }
    else
    {
      swift_retain();
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      String.init(localized:table:bundle:locale:comment:)();
      return (void (*)())a2;
    }
  }
  return result;
}

uint64_t sub_100633840@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MusicPropertySource();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for MusicPropertySource.catalog(_:))
  {
    *a2 = 0;
    type metadata accessor for ContainerDetail.Source(0);
LABEL_5:
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  if (v8 == enum case for MusicPropertySource.library(_:))
  {
    uint64_t v9 = sub_100063814((uint64_t *)&unk_10109C7C0);
    uint64_t v10 = *(int *)(v9 + 48);
    uint64_t v11 = *(int *)(v9 + 64);
    uint64_t v12 = _s6AlbumsV5ScopeOMa(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 0, 1, v12);
    a2[v10] = 0;
    a2[v11] = 0;
    type metadata accessor for ContainerDetail.Source(0);
    goto LABEL_5;
  }
  *a2 = 0;
  type metadata accessor for ContainerDetail.Source(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v14(a1, v4);
  return ((uint64_t (*)(char *, uint64_t))v14)(v7, v4);
}

void *sub_100633A64(void *a1, void *a2, char a3, char a4)
{
  *(unsigned char *)(v4 + 80) = 0;
  type metadata accessor for Impressions.BagCoordinator();
  swift_retain();
  *(void *)(v4 + 88) = swift_initStaticObject();
  swift_unknownObjectWeakInit();
  *(void *)(v4 + 104) = sub_1000C4264((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v4 + 112) = sub_1000C4380((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v4 + 120) = 0;
  *(void *)(v4 + 128) = 0;
  *(void *)(v4 + 136) = 0;
  *(_WORD *)(v4 + 144) = 0;
  *(void *)(v4 + 152) = 0;
  *(void *)(v4 + 160) = 0;
  *(unsigned char *)(v4 + 168) = 1;
  *(void *)(v4 + 176) = 0;
  *(void *)(v4 + 184) = 0;
  *(unsigned char *)(v4 + 192) = 1;
  *(void *)(v4 + 200) = 0x3F9999999999999ALL;
  swift_unknownObjectWeakAssign();
  *(unsigned char *)(v4 + 81) = a4;
  swift_release();
  uint64_t v9 = (void *)sub_1003FFD1C();
  swift_unknownObjectWeakAssign();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  id v11 = objc_allocWithZone((Class)ScrollViewContentOffsetObserver);
  v18[4] = sub_100644AF8;
  v18[5] = v10;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_100642940;
  uint64_t v18[3] = &unk_100FE33A8;
  uint64_t v12 = _Block_copy(v18);
  swift_retain();
  swift_retain();
  id v13 = [v11 initWithScrollView:a2 changeHandler:v12];
  _Block_release(v12);
  swift_release();
  swift_release();
  uint64_t v14 = (void *)v9[15];
  v9[15] = v13;

  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for NotificationObserver();
  swift_allocObject();
  v9[17] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UIApplicationDidBecomeActiveNotification, 0, 1, 1, (uint64_t)sub_100644B00, v15);
  swift_release();
  if (a3)
  {
    uint64_t v16 = swift_allocObject();
    swift_weakInit();
    swift_allocObject();
    v9[16] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(UIApplicationWillResignActiveNotification, 0, 1, 1, (uint64_t)sub_100644B08, v16);
    swift_release();
  }

  swift_release();
  if (a4)
  {
    v9[19] = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t sub_100633D94(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100635310(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100633DF4()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    if (qword_101098148 != -1) {
      swift_once();
    }
    if ((byte_101129838 & 1) == 0 && *(unsigned char *)(v12 + 145) == 1)
    {
      sub_100057778(0, &qword_10109C1F0);
      *uint64_t v10 = static OS_dispatch_queue.main.getter();
      (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
      char v13 = _dispatchPreconditionTest(_:)();
      uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
      if ((v13 & 1) == 0)
      {
        __break(1u);
        return result;
      }
      id v14 = [self sharedApplication];
      id v15 = [v14 applicationState];

      if (!v15)
      {
        Date.init()();
        uint64_t v16 = swift_allocObject();
        swift_weakInit();
        (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
        unint64_t v17 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = v16;
        (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v18 + v17, v3, v0);
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = sub_100644F00;
        *(void *)(v19 + 24) = v18;
        swift_retain();
        swift_retain();
        sub_1004A426C((uint64_t (*)(uint64_t, double, double))sub_100644F04, v19);
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
        swift_release();
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100634198(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_10109BA40);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v12 = static MainActor.shared.getter();
    unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    id v14 = (char *)swift_allocObject();
    *((void *)v14 + 2) = v12;
    *((void *)v14 + 3) = &protocol witness table for MainActor;
    *((void *)v14 + 4) = v10;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v14[v13], v5, v2);
    sub_100066A3C((uint64_t)v8, (uint64_t)&unk_1010B4678, (uint64_t)v14);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1006343C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10063445C, v7, v6);
}

uint64_t sub_10063445C()
{
  swift_release();
  sub_100635C4C();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006344C8()
{
  swift_beginAccess();
  *(void *)(v0 + 104) = _swiftEmptyDictionarySingleton;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (uint64_t *)(v2 + 40);
    do
    {
      uint64_t v5 = *v4;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 104);
      swift_unknownObjectRetain();
      v7(ObjectType, v5);
      swift_unknownObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100634594(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100057778(0, &qword_10109C1F0);
  *uint64_t v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  char v10 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    swift_beginAccess();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = swift_weakInit();
    __chkstk_darwin(v12);
    *(&v19 - 4) = v11;
    *(&v19 - 3) = a1;
    *((double *)&v19 - 2) = a2;
    uint64_t v13 = swift_bridgeObjectRetain();
    sub_1006432A4(v13, (void (*)(char *, uint64_t))sub_100644F0C);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v15 = (void *)Strong;
      char v16 = UIScrollView.isScrolling.getter();

      if ((v16 & 1) == 0)
      {
        uint64_t v18 = *(void *)(v3 + 48);
        __chkstk_darwin(v17);
        *(&v19 - 2) = a1;
        *((double *)&v19 - 1) = a2;
        swift_bridgeObjectRetain();
        sub_10068DEDC((void (*)(uint64_t *))sub_100644F18, (uint64_t)(&v19 - 4), v18);
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1006347F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1007D2348(a2, a1, a4);
    return swift_release();
  }
  return result;
}

void sub_100634880()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_101098148 != -1) {
    swift_once();
  }
  if ((byte_101129838 & 1) == 0 && *(unsigned char *)(v0 + 145) == 1)
  {
    sub_100057778(0, &qword_10109C1F0);
    *uint64_t v11 = static OS_dispatch_queue.main.getter();
    (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
    char v12 = _dispatchPreconditionTest(_:)();
    (*(void (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
    if (v12)
    {
      id v13 = [self sharedApplication];
      id v14 = [v13 applicationState];

      if (!v14)
      {
        Date.init()();
        uint64_t v15 = swift_allocObject();
        swift_weakInit();
        (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
        unint64_t v16 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = v15;
        (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v17 + v16, v4, v1);
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = sub_100644F00;
        *(void *)(v18 + 24) = v17;
        swift_retain();
        swift_retain();
        sub_1004A426C((uint64_t (*)(uint64_t, double, double))sub_100648370, v18);
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
        swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100634BF0(double a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100634594(a3, a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100634C60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v63 = a2;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814((uint64_t *)&unk_10109B9F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006CAB8(a1, (uint64_t)v11, (uint64_t *)&unk_10109B9F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_1000637B8((uint64_t)v11, (uint64_t *)&unk_10109B9F0);
  }
  uint64_t v62 = v6;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  uint64_t v18 = (void *)Strong;
  uint64_t v19 = (uint64_t *)(Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
  swift_beginAccess();
  uint64_t v20 = *v19;
  uint64_t v21 = v19[1];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v65 = v20;
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 416))(v15, ObjectType, v21);

  if (!v23) {
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  uint64_t v24 = sub_1003AB454(v23);
  uint64_t v26 = v25;
  uint64_t v61 = v3 + 13;
  swift_beginAccess();
  if (*(void *)(v3[13] + 16))
  {
    swift_bridgeObjectRetain();
    sub_100071D70(v24, v26);
    char v28 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v28)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v29 = v3[14];
  if (!*(void *)(v29 + 16)) {
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  unint64_t v30 = sub_1000E7348((uint64_t)v15);
  if ((v31 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v43 = qword_101098150;
    swift_bridgeObjectRetain();
    if (v43 != -1) {
      swift_once();
    }
    UnfairLock.locked<A>(_:)(sub_100404B20);
    uint64_t v44 = qword_1010AB060;
    sub_100063814(&qword_1010B4688);
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 32) = 0;
    *(_WORD *)(v45 + 40) = 513;
    *(void *)(v45 + 48) = _swiftEmptyArrayStorage;
    long long v46 = (void **)(v45 + 48);
    *(void *)(v45 + 16) = v23;
    *(void *)(v45 + 24) = v44;
    uint64_t v47 = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (v47)
    {
      *(void *)(v45 + 32) = v3[8];
      *(unsigned char *)(v45 + 40) = 0;
    }
    uint64_t v48 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v8, v63, v5);
    Date.timeIntervalSince1970.getter();
    uint64_t v50 = v49;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v5);
    swift_beginAccess();
    unsigned __int8 v51 = *v46;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *long long v46 = v51;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unsigned __int8 v51 = sub_1002710D8(0, v51[2] + 1, 1, v51);
      *long long v46 = v51;
    }
    unint64_t v54 = v51[2];
    unint64_t v53 = v51[3];
    if (v54 >= v53 >> 1)
    {
      unsigned __int8 v51 = sub_1002710D8((void *)(v53 > 1), v54 + 1, 1, v51);
      *long long v46 = v51;
    }
    void v51[2] = v54 + 1;
    uint64_t v55 = &v51[2 * v54];
    v55[4] = v50;
    *((unsigned char *)v55 + 40) = 0;
    swift_endAccess();
    uint64_t v56 = sub_1003AB454(v23);
    uint64_t v58 = v57;
    swift_bridgeObjectRelease();
    uint64_t v59 = v61;
    swift_beginAccess();
    swift_retain();
    char v60 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v64 = *v59;
    uint64_t *v59 = 0x8000000000000000;
    sub_100386590(v45, v56, v58, v60);
    uint64_t *v59 = v64;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_26;
  }
  uint64_t v32 = *(void *)(*(void *)(v29 + 56) + 8 * v30);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_1007D2A10(v32);
  uint64_t v34 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v8, v63, v5);
  Date.timeIntervalSince1970.getter();
  uint64_t v36 = v35;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v5);
  uint64_t v37 = (void *)(v33 + 48);
  swift_beginAccess();
  uint64_t v38 = *(void **)(v33 + 48);
  char v39 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v33 + 48) = v38;
  if ((v39 & 1) == 0)
  {
    uint64_t v38 = sub_1002710D8(0, v38[2] + 1, 1, v38);
    void *v37 = v38;
  }
  unint64_t v41 = v38[2];
  unint64_t v40 = v38[3];
  if (v41 >= v40 >> 1)
  {
    uint64_t v38 = sub_1002710D8((void *)(v40 > 1), v41 + 1, 1, v38);
    void *v37 = v38;
  }
  v38[2] = v41 + 1;
  uint64_t v42 = &v38[2 * v41];
  v42[4] = v36;
  *((unsigned char *)v42 + 40) = 0;
  swift_endAccess();
  swift_release();
LABEL_26:
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

void sub_100635310(id a1)
{
  if (qword_101098148 != -1) {
    swift_once();
  }
  if ((byte_101129838 & 1) == 0 && *(unsigned char *)(v1 + 145) == 1)
  {
    if ((*(unsigned char *)(v1 + 192) & 1) != 0
      || ((double v4 = *(double *)(v1 + 176), v3 = *(double *)(v1 + 184), [a1 contentOffset], v4 == v6)
        ? (BOOL v7 = v3 == v5)
        : (BOOL v7 = 0),
          !v7))
    {
      if (*(unsigned char *)(v1 + 168))
      {
        sub_100634880();
        double Current = CFAbsoluteTimeGetCurrent();
      }
      else
      {
        double v9 = *(double *)(v1 + 160);
        double Current = CFAbsoluteTimeGetCurrent();
        if (Current - v9 <= 0.025) {
          return;
        }
        sub_100634880();
      }
      *(double *)(v1 + 160) = Current;
      *(unsigned char *)(v1 + 168) = 0;
      [a1 contentOffset];
      *(void *)(v1 + 176) = v10;
      *(void *)(v1 + 184) = v11;
      *(unsigned char *)(v1 + 192) = 0;
    }
  }
}

uint64_t sub_100635408(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  __chkstk_darwin(v7);
  double v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  swift_beginAccess();
  uint64_t v13 = 0;
  if (*(void *)(*(void *)(v3 + 104) + 16)) {
    BOOL v14 = 1;
  }
  else {
    BOOL v14 = (a1 & 4) == 0;
  }
  if (v14)
  {
    int v30 = a1;
    sub_100634C60(a3, a2);
    dispatch_semaphore_t v15 = dispatch_semaphore_create(1);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = _swiftEmptyArrayStorage;
    uint64_t v29 = (uint64_t *)(v16 + 16);
    uint64_t v31 = *(void *)(v3 + 88);
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10);
    unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v19 = swift_allocObject();
    *(_WORD *)(v19 + 16) = v30;
    *(void *)(v19 + 24) = v16;
    *(void *)(v19 + 32) = v17;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v18, (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
    *(void *)(v19 + ((v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = v15;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = sub_100644E08;
    *(void *)(v20 + 24) = v19;
    swift_retain();
    swift_retain();
    uint64_t v21 = v15;
    swift_retain();
    sub_1004A426C((uint64_t (*)(uint64_t, double, double))sub_100644EE4, v20);
    swift_release();
    swift_release();
    swift_release();
    sub_100057778(0, &qword_10109C1F0);
    static OS_dispatch_queue.UIFeedbackDeadline.getter();
    OS_dispatch_semaphore.wait(timeout:)();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v33);
    if (static DispatchTimeoutResult.== infix(_:_:)())
    {

      uint64_t v22 = v29;
      swift_beginAccess();
      uint64_t v13 = *v22;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (qword_1010980B0 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      sub_100050A90(v23, (uint64_t)qword_101129750);
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Semaphore returned a non-success code.  No impressions were generated", v26, 2u);
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v13 = 0;
    }
    swift_release();
  }
  return v13;
}

uint64_t sub_100635848(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v6 = (void *)(a2 + 16);
  if ((a1 & 4) != 0)
  {
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v15 = Strong;
      swift_beginAccess();
      uint64_t v16 = *(void *)(v15 + 104);
      uint64_t v17 = swift_bridgeObjectRetain();
      if (a1)
      {
        uint64_t v18 = sub_100642A50(v16);
        uint64_t v17 = swift_bridgeObjectRelease();
        uint64_t v16 = v18;
      }
      __chkstk_darwin(v17);
      uint64_t v19 = sub_10064305C(v16, sub_100644EEC);
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      uint64_t v19 = 0;
    }
    swift_beginAccess();
    *double v6 = v19;
    swift_bridgeObjectRelease();
    return OS_dispatch_semaphore.signal()();
  }
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return OS_dispatch_semaphore.signal()();
  }
  uint64_t v7 = &off_100FD8628;
  uint64_t v8 = swift_retain_n();
  while (1)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = (uint64_t (*)(uint64_t, _UNKNOWN **))v7[4];
    swift_unknownObjectRetain();
    uint64_t v11 = v10(ObjectType, v7);
    uint64_t v13 = v12;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease_n();
    if (!v11) {
      break;
    }
    swift_unknownObjectRelease();
    uint64_t v8 = v11;
    uint64_t v7 = v13;
  }
  uint64_t result = swift_beginAccess();
  if (*v6)
  {
    sub_100635AB0(v8, (uint64_t)v7, a1 | 4u, a4, (uint64_t)v6);
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_release();
    return OS_dispatch_semaphore.signal()();
  }
  __break(1u);
  return result;
}

uint64_t sub_100635AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_100063814((uint64_t *)&unk_10109B9F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = type metadata accessor for IndexPath();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
  uint64_t v14 = sub_1003AB52C(a3, a4, (uint64_t)v11, ObjectType, a2);
  sub_1000637B8((uint64_t)v11, (uint64_t *)&unk_10109B9F0);
  if (v14) {
    sub_100524DEC(v14);
  }
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(ObjectType, a2);
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v17 = (uint64_t *)(v15 + 40);
    do
    {
      uint64_t v18 = *v17;
      uint64_t v19 = swift_unknownObjectRetain();
      sub_100635AB0(v19, v18, a3, a4, a5);
      swift_unknownObjectRelease();
      v17 += 2;
      --v16;
    }
    while (v16);
  }
  return swift_bridgeObjectRelease();
}

void sub_100635C4C()
{
  uint64_t v1 = sub_100063814(&qword_10109BA58);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814((uint64_t *)&unk_10109B9F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101098148 != -1) {
    swift_once();
  }
  if ((byte_101129838 & 1) == 0 && *(unsigned char *)(v0 + 145) == 1)
  {
    uint64_t v11 = type metadata accessor for IndexPath();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
    Date.init()();
    uint64_t v12 = sub_100635408(2u, (uint64_t)v7, (uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1000637B8((uint64_t)v10, (uint64_t *)&unk_10109B9F0);
    if (v12)
    {
      if (!*(void *)(v12 + 16))
      {
        swift_bridgeObjectRelease();
        return;
      }
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v14 = (void *)Strong;
        swift_getObjectType();
        if (!swift_conformsToProtocol2())
        {
          __break(1u);
          return;
        }
        sub_10063E094((uint64_t)v3);
      }
      else
      {
        uint64_t v15 = type metadata accessor for MetricsPageProperties();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v3, 1, 1, v15);
      }
      uint64_t v16 = (void *)*MetricsReportingController.shared.unsafeMutableAddressor();
      int64_t v17 = *(void *)(v12 + 16);
      if (v17)
      {
        uint64_t v33 = v16;
        uint64_t v34 = _swiftEmptyArrayStorage;
        uint64_t v18 = v16;
        sub_1005BDB68(0, v17, 0);
        uint64_t v19 = 0;
        uint64_t v20 = v34;
        unint64_t v21 = v34[2];
        do
        {
          uint64_t v22 = *(void *)(v12 + 8 * v19 + 32);
          uint64_t v34 = v20;
          unint64_t v23 = v20[3];
          swift_bridgeObjectRetain();
          if (v21 >= v23 >> 1)
          {
            sub_1005BDB68(v23 > 1, v21 + 1, 1);
            uint64_t v20 = v34;
          }
          ++v19;
          void v20[2] = v21 + 1;
          v20[v21++ + 4] = v22;
        }
        while (v17 != v19);
        swift_bridgeObjectRelease();
        uint64_t v16 = v33;
      }
      else
      {
        uint64_t v24 = v16;
        swift_bridgeObjectRelease();
        uint64_t v20 = _swiftEmptyArrayStorage;
      }
      uint64_t v25 = sub_1004A6578();
      uint64_t v27 = v26;
      if (qword_101097EB0 != -1) {
        swift_once();
      }
      uint64_t v28 = qword_101129418;
      swift_retain();
      char v29 = GroupActivitiesManager.hasJoined.getter();
      uint64_t v30 = GroupActivitiesManager.participantsCount.getter();
      uint64_t v31 = (uint64_t *)(v28 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
      swift_beginAccess();
      uint64_t v32 = *v31;
      swift_release();
      (*(void (**)(void *, char *, uint64_t, uint64_t, void, uint64_t, uint64_t))((swift_isaMask & *v16)
                                                                                           + 0xA8))(v20, v3, v25, v27, v29 & 1, v30, v32);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_1006344C8();
      sub_1000637B8((uint64_t)v3, &qword_10109BA58);
    }
  }
}

uint64_t sub_1006360D8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v41 = a1;
  uint64_t v3 = sub_100063814(&qword_10109BA40);
  __chkstk_darwin(v3 - 8);
  unint64_t v40 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Genre();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Curator();
  uint64_t v35 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Artist();
  uint64_t v34 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ContainerDetail.AttributionItem(0);
  uint64_t v38 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v38 + 64);
  uint64_t v16 = __chkstk_darwin(v14);
  int64_t v17 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v34 - v18;
  uint64_t v39 = v2;
  sub_100644148(v2, (uint64_t)&v34 - v18, type metadata accessor for ContainerDetail.AttributionItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 5u:
      uint64_t result = sub_1006441B0((uint64_t)v19, type metadata accessor for ContainerDetail.AttributionItem);
      uint64_t v21 = v41;
      if (v41) {
        goto LABEL_9;
      }
      return result;
    case 2u:
      uint64_t v25 = v35;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v10, v19, v8);
      Curator.catalogID.getter();
      uint64_t v24 = v26;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
      goto LABEL_7;
    case 4u:
      uint64_t v28 = v36;
      uint64_t v27 = v37;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v7, v19, v37);
      Genre.catalogID.getter();
      uint64_t v24 = v29;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v27);
      goto LABEL_7;
    default:
      uint64_t v22 = v34;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v13, v19, v11);
      Artist.catalogID.getter();
      uint64_t v24 = v23;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v11);
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v21 = v41;
      if (v24 && v41)
      {
LABEL_9:
        uint64_t v30 = type metadata accessor for TaskPriority();
        uint64_t v31 = (uint64_t)v40;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v40, 1, 1, v30);
        sub_100644148(v39, (uint64_t)v17, type metadata accessor for ContainerDetail.AttributionItem);
        unint64_t v32 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = 0;
        *(void *)(v33 + 24) = 0;
        sub_1006448A0((uint64_t)v17, v33 + v32, type metadata accessor for ContainerDetail.AttributionItem);
        *(void *)(v33 + ((v15 + v32 + 7) & 0xFFFFFFFFFFFFFFF8)) = v21;
        swift_retain();
        sub_100066A3C(v31, (uint64_t)&unk_1010B4640, v33);
        return swift_release();
      }
      return result;
  }
}

uint64_t sub_1006365DC(double a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v10 = *(void *)(a4 + 16);
  strcpy((char *)&v26, "impressionId");
  BYTE13(v26) = 0;
  HIWORD(v26) = -5120;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  uint64_t v11 = *(void *)(a4 + 24);
  uint64_t v27 = &type metadata for Int;
  *(void *)&long long v26 = v11;
  sub_10007664C(&v26, v25);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100386444(v25, (uint64_t)v28, isUniquelyReferenced_nonNull_native);
  uint64_t v13 = v10;
  uint64_t v29 = v10;
  swift_bridgeObjectRelease();
  sub_100076EB8((uint64_t)v28);
  if ((*(unsigned char *)(a4 + 40) & 1) == 0)
  {
    uint64_t v14 = *(void *)(a4 + 32);
    *(void *)&long long v26 = 0xD000000000000012;
    *((void *)&v26 + 1) = 0x8000000100DBD630;
    AnyHashable.init<A>(_:)();
    uint64_t v27 = &type metadata for Int;
    *(void *)&long long v26 = v14;
    sub_10007664C(&v26, v25);
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    sub_100386444(v25, (uint64_t)v28, v15);
    uint64_t v29 = v13;
    swift_bridgeObjectRelease();
    sub_100076EB8((uint64_t)v28);
  }
  int v16 = *(unsigned __int8 *)(a4 + 41);
  if (v16 != 2)
  {
    strcpy((char *)&v26, "motionActive");
    BYTE13(v26) = 0;
    HIWORD(v26) = -5120;
    AnyHashable.init<A>(_:)();
    uint64_t v27 = &type metadata for Bool;
    LOBYTE(v26) = v16 & 1;
    sub_10007664C(&v26, v25);
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    sub_100386444(v25, (uint64_t)v28, v17);
    swift_bridgeObjectRelease();
    sub_100076EB8((uint64_t)v28);
    *(void *)&long long v26 = 0x76416E6F69746F6DLL;
    *((void *)&v26 + 1) = 0xEF656C62616C6961;
    AnyHashable.init<A>(_:)();
    uint64_t v27 = &type metadata for Bool;
    LOBYTE(v26) = v16 & 1;
    sub_10007664C(&v26, v25);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    sub_100386444(v25, (uint64_t)v28, v18);
    uint64_t v29 = v13;
    swift_bridgeObjectRelease();
    sub_100076EB8((uint64_t)v28);
  }
  if (a5)
  {
    *(void *)&long long v26 = 0x6973736572706D69;
    *((void *)&v26 + 1) = 0xEF73656D69546E6FLL;
    AnyHashable.init<A>(_:)();
    sub_100063814(&qword_1010A1290);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_100E251D0;
    Date.timeIntervalSince1970.getter();
    *(void *)(v19 + 32) = Double.toMillisecondsInServerTime.getter(v20);
    uint64_t v27 = (void *)sub_100063814(&qword_1010AB110);
    *(void *)&long long v26 = v19;
    sub_10007664C(&v26, v25);
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    sub_100386444(v25, (uint64_t)v28, v21);
    uint64_t v22 = v13;
    swift_bridgeObjectRelease();
    sub_100076EB8((uint64_t)v28);
  }
  else
  {
    swift_beginAccess();
    uint64_t v23 = swift_bridgeObjectRetain();
    sub_100636994(v23, a6, (uint64_t)&v29, a1);
    swift_bridgeObjectRelease();
    return v29;
  }
  return v22;
}

uint64_t sub_100636994(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8 = type metadata accessor for Date();
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v48 = a2;
    uint64_t v49 = v12;
    uint64_t v50 = v10;
    uint64_t v51 = v9;
    unint64_t v52 = (unint64_t)a4;
    uint64_t v53 = *(void *)&a4 & 0x7FF0000000000000;
    swift_bridgeObjectRetain();
    double v14 = 0.0;
    char v15 = (double *)(a1 + 40);
    int v16 = _swiftEmptyArrayStorage;
    double v17 = 0.0;
    char v18 = 1;
    char v19 = 1;
    double v20 = _swiftEmptyArrayStorage;
    while (1)
    {
      double v21 = *(v15 - 1);
      if (*(unsigned char *)v15)
      {
        if ((v19 & 1) == 0) {
          double v14 = *(v15 - 1);
        }
        v18 &= v19;
        goto LABEL_6;
      }
      if (v19)
      {
        char v19 = 0;
        double v17 = *(v15 - 1);
      }
      else
      {
        if (v18) {
          goto LABEL_13;
        }
        if (v21 - v14 < 0.0166666667)
        {
          double v14 = 0.0;
LABEL_13:
          char v19 = 0;
          char v18 = 1;
          goto LABEL_6;
        }
        if (v14 - v17 <= 0.0166666667)
        {
          double v14 = 0.0;
          char v19 = 0;
          char v18 = 1;
          double v17 = *(v15 - 1);
        }
        else
        {
          uint64_t v22 = sub_1004A5AF8(v17, v14);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v16 = sub_100270FA8(0, v16[2] + 1, 1, v16);
          }
          unint64_t v24 = v16[2];
          unint64_t v23 = v16[3];
          if (v24 >= v23 >> 1) {
            int v16 = sub_100270FA8((void *)(v23 > 1), v24 + 1, 1, v16);
          }
          v16[2] = v24 + 1;
          v16[v24 + 4] = v22;
          if (!*(void *)(v22 + 16))
          {
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            int v16 = sub_100270FA8(0, v16[2] + 1, 1, v16);
LABEL_42:
            unint64_t v39 = v16[2];
            unint64_t v38 = v16[3];
            if (v39 >= v38 >> 1) {
              int v16 = sub_100270FA8((void *)(v38 > 1), v39 + 1, 1, v16);
            }
            v16[2] = v39 + 1;
            v16[v39 + 4] = v22;
            if (*(void *)(v22 + 16))
            {
              unint64_t v40 = sub_100071D70(100, 0xE100000000000000);
              if (v41)
              {
                if (v53 != 0x7FF0000000000000)
                {
                  if (a4 > -1.0)
                  {
                    if (a4 < 1.84467441e19)
                    {
                      if (*(void *)(*(void *)(v22 + 56) + 8 * v40) > v52)
                      {
                        if (*(void *)(v22 + 16))
                        {
                          unint64_t v42 = sub_100071D70(115, 0xE100000000000000);
                          if (v43)
                          {
                            unint64_t v39 = *(void *)(*(void *)(v22 + 56) + 8 * v42);
                            swift_bridgeObjectRelease();
                            if (swift_isUniquelyReferenced_nonNull_native()) {
                              goto LABEL_53;
                            }
                            goto LABEL_72;
                          }
                        }
LABEL_74:
                        uint64_t result = swift_bridgeObjectRelease();
                        __break(1u);
                        return result;
                      }
                      swift_bridgeObjectRelease();
                      if (v16[2]) {
                        goto LABEL_57;
                      }
LABEL_38:
                      swift_bridgeObjectRelease();
                      if (!v20[2]) {
                        return swift_bridgeObjectRelease();
                      }
LABEL_58:
                      uint64_t v54 = 0x6973736572706D69;
                      unint64_t v55 = 0xEF73656D69546E6FLL;
                      AnyHashable.init<A>(_:)();
                      uint64_t v56 = sub_100063814(&qword_1010AB110);
                      uint64_t v54 = (uint64_t)v20;
                      return sub_10037D444((uint64_t)&v54, (uint64_t)v57);
                    }
LABEL_71:
                    __break(1u);
LABEL_72:
                    double v20 = sub_100270E90(0, v20[2] + 1, 1, v20);
LABEL_53:
                    unint64_t v45 = v20[2];
                    unint64_t v44 = v20[3];
                    if (v45 >= v44 >> 1) {
                      double v20 = sub_100270E90((void *)(v44 > 1), v45 + 1, 1, v20);
                    }
                    void v20[2] = v45 + 1;
                    v20[v45 + 4] = v39;
LABEL_56:
                    if (!v16[2]) {
                      goto LABEL_38;
                    }
                    goto LABEL_57;
                  }
LABEL_70:
                  __break(1u);
                  goto LABEL_71;
                }
LABEL_69:
                __break(1u);
                goto LABEL_70;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
            goto LABEL_69;
          }
          unint64_t v25 = sub_100071D70(100, 0xE100000000000000);
          if ((v26 & 1) == 0) {
            goto LABEL_62;
          }
          if (v53 == 0x7FF0000000000000) {
            goto LABEL_63;
          }
          if (a4 <= -1.0) {
            goto LABEL_64;
          }
          if (a4 >= 1.84467441e19) {
            goto LABEL_65;
          }
          if (*(void *)(*(void *)(v22 + 56) + 8 * v25) <= v52)
          {
            swift_bridgeObjectRelease();
            double v14 = 0.0;
            char v19 = 0;
            char v18 = 1;
            double v17 = v21;
          }
          else
          {
            if (!*(void *)(v22 + 16) || (unint64_t v27 = sub_100071D70(115, 0xE100000000000000), (v28 & 1) == 0))
            {
              swift_bridgeObjectRelease();
              __break(1u);
              goto LABEL_74;
            }
            uint64_t v47 = *(void *)(*(void *)(v22 + 56) + 8 * v27);
            swift_bridgeObjectRelease();
            uint64_t v29 = a3;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              double v20 = sub_100270E90(0, v20[2] + 1, 1, v20);
            }
            unint64_t v31 = v20[2];
            unint64_t v30 = v20[3];
            if (v31 >= v30 >> 1) {
              double v20 = sub_100270E90((void *)(v30 > 1), v31 + 1, 1, v20);
            }
            double v14 = 0.0;
            char v19 = 0;
            void v20[2] = v31 + 1;
            v20[v31 + 4] = v47;
            char v18 = 1;
            double v17 = v21;
            a3 = v29;
          }
        }
      }
LABEL_6:
      v15 += 2;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          uint64_t v33 = v49;
          uint64_t v32 = v50;
          uint64_t v34 = v51;
          (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v48, v51);
          if (v18)
          {
            Date.timeIntervalSince1970.getter();
            double v36 = v35;
          }
          else
          {
            double v36 = v14;
          }
          (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
          uint64_t v22 = sub_1004A5AF8(v17, v36);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            goto LABEL_66;
          }
          goto LABEL_42;
        }
        goto LABEL_56;
      }
    }
  }
  int v16 = _swiftEmptyArrayStorage;
  double v20 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2]) {
    goto LABEL_38;
  }
LABEL_57:
  uint64_t v54 = 0x6E49646577656976;
  unint64_t v55 = 0xEA00000000006F66;
  AnyHashable.init<A>(_:)();
  uint64_t v56 = sub_100063814(&qword_1010B4680);
  uint64_t v54 = (uint64_t)v16;
  sub_10037D444((uint64_t)&v54, (uint64_t)v57);
  if (v20[2]) {
    goto LABEL_58;
  }
  return swift_bridgeObjectRelease();
}

id sub_100637008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a3, a1, a2);

  return v3;
}

uint64_t sub_10063704C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Genre();
  uint64_t v25 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Curator();
  uint64_t v24 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Artist();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ContainerDetail.AttributionItem(0);
  __chkstk_darwin(v12);
  double v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100644148(v1, (uint64_t)v14, type metadata accessor for ContainerDetail.AttributionItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 5u:
      sub_1006441B0((uint64_t)v14, type metadata accessor for ContainerDetail.AttributionItem);
      return 1;
    case 2u:
      uint64_t v18 = v24;
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v7, v14, v5);
      Curator.catalogID.getter();
      uint64_t v17 = v19;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v5);
      goto LABEL_5;
    case 4u:
      uint64_t v20 = v25;
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v4, v14, v2);
      Genre.catalogID.getter();
      uint64_t v22 = v21;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v2);
      BOOL v15 = v22 != 0;
      goto LABEL_7;
    default:
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
      Artist.catalogID.getter();
      uint64_t v17 = v16;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
LABEL_5:
      BOOL v15 = v17 != 0;
LABEL_7:
      swift_bridgeObjectRelease();
      return v15;
  }
}

uint64_t sub_1006373CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = type metadata accessor for Playlist();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Genre();
  v5[7] = v7;
  v5[8] = *(void *)(v7 - 8);
  v5[9] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for RadioShow();
  v5[10] = v8;
  v5[11] = *(void *)(v8 - 8);
  v5[12] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Curator();
  v5[13] = v9;
  v5[14] = *(void *)(v9 - 8);
  v5[15] = swift_task_alloc();
  uint64_t v10 = sub_100063814(&qword_10109CFF0);
  v5[16] = v10;
  v5[17] = *(void *)(v10 - 8);
  v5[18] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for SocialProfile();
  v5[19] = v11;
  v5[20] = *(void *)(v11 - 8);
  v5[21] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Artist();
  v5[22] = v12;
  v5[23] = *(void *)(v12 - 8);
  v5[24] = swift_task_alloc();
  v5[25] = type metadata accessor for ContainerDetail.AttributionItem(0);
  v5[26] = swift_task_alloc();
  return _swift_task_switch(sub_1006376E8, 0, 0);
}

uint64_t sub_1006376E8()
{
  sub_100644148(v0[2], v0[26], type metadata accessor for ContainerDetail.AttributionItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v4 = (uint64_t *)v0[18];
      uint64_t v5 = v0[16];
      uint64_t v6 = v0[17];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[20] + 32))(v0[21], v0[26], v0[19]);
      *uint64_t v4 = SocialProfile.id.getter();
      v4[1] = v7;
      (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v4, enum case for MusicPageProvider.Destination.socialProfileDetail<A, B>(_:), v5);
      uint64_t v8 = (void *)swift_task_alloc();
      v0[28] = (uint64_t)v8;
      *uint64_t v8 = v0;
      uint64_t v9 = sub_100637D80;
      goto LABEL_10;
    case 2u:
      uint64_t v11 = v0[17];
      uint64_t v10 = v0[18];
      uint64_t v13 = v0[15];
      uint64_t v12 = v0[16];
      uint64_t v14 = v0[13];
      uint64_t v15 = v0[14];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v13, v0[26], v14);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v10, v13, v14);
      (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v10, enum case for MusicPageProvider.Destination.curatorDetail<A, B>(_:), v12);
      uint64_t v8 = (void *)swift_task_alloc();
      v0[29] = (uint64_t)v8;
      *uint64_t v8 = v0;
      uint64_t v9 = sub_100637FBC;
      goto LABEL_10;
    case 3u:
      uint64_t v17 = v0[17];
      uint64_t v16 = v0[18];
      uint64_t v18 = v0[16];
      uint64_t v20 = v0[11];
      uint64_t v19 = v0[12];
      uint64_t v21 = v0[10];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v19, v0[26], v21);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v16, v19, v21);
      (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v16, enum case for MusicPageProvider.Destination.radioShowDetail<A, B>(_:), v18);
      uint64_t v8 = (void *)swift_task_alloc();
      v0[30] = (uint64_t)v8;
      *uint64_t v8 = v0;
      uint64_t v9 = sub_1006381F8;
      goto LABEL_10;
    case 4u:
      uint64_t v23 = v0[17];
      uint64_t v22 = v0[18];
      uint64_t v24 = v0[16];
      uint64_t v26 = v0[8];
      uint64_t v25 = v0[9];
      uint64_t v27 = v0[7];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v25, v0[26], v27);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v22, v25, v27);
      (*(void (**)(uint64_t, void, uint64_t))(v23 + 104))(v22, enum case for MusicPageProvider.Destination.genreDetail<A, B>(_:), v24);
      uint64_t v8 = (void *)swift_task_alloc();
      v0[31] = (uint64_t)v8;
      *uint64_t v8 = v0;
      uint64_t v9 = sub_100638434;
      goto LABEL_10;
    case 5u:
      uint64_t v29 = v0[17];
      uint64_t v28 = v0[18];
      uint64_t v30 = v0[16];
      uint64_t v32 = v0[5];
      uint64_t v31 = v0[6];
      uint64_t v33 = v0[4];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v31, v0[26], v33);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v28, v31, v33);
      (*(void (**)(uint64_t, void, uint64_t))(v29 + 104))(v28, enum case for MusicPageProvider.Destination.playlistCollaboratorsDetail<A, B>(_:), v30);
      uint64_t v8 = (void *)swift_task_alloc();
      v0[32] = (uint64_t)v8;
      *uint64_t v8 = v0;
      uint64_t v9 = sub_100638670;
LABEL_10:
      v8[1] = v9;
      uint64_t v34 = v0[3];
      uint64_t result = sub_1006911C8(v34, 0);
      break;
    default:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[23] + 32))(v0[24], v0[26], v0[22]);
      uint64_t v1 = (void *)swift_task_alloc();
      v0[27] = (uint64_t)v1;
      *uint64_t v1 = v0;
      v1[1] = sub_100637BA0;
      uint64_t v2 = v0[3];
      uint64_t result = sub_1000EE68C(v2);
      break;
  }
  return result;
}

uint64_t sub_100637BA0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100637C9C, 0, 0);
}

uint64_t sub_100637C9C()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100637D80()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  uint64_t v2 = *(void *)(*(void *)v0 + 136);
  uint64_t v3 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_100637ED8, 0, 0);
}

uint64_t sub_100637ED8()
{
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100637FBC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  uint64_t v2 = *(void *)(*(void *)v0 + 136);
  uint64_t v3 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_100638114, 0, 0);
}

uint64_t sub_100638114()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1006381F8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  uint64_t v2 = *(void *)(*(void *)v0 + 136);
  uint64_t v3 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_100638350, 0, 0);
}

uint64_t sub_100638350()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100638434()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  uint64_t v2 = *(void *)(*(void *)v0 + 136);
  uint64_t v3 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10063858C, 0, 0);
}

uint64_t sub_10063858C()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100638670()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  uint64_t v2 = *(void *)(*(void *)v0 + 136);
  uint64_t v3 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1006387C8, 0, 0);
}

uint64_t sub_1006387C8()
{
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1006388B0(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v3 - 8);
  uint64_t result = 0;
  switch(a1 >> 62)
  {
    case 2uLL:
      return result;
    default:
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t result = String.init(localized:table:bundle:locale:comment:)();
      break;
  }
  return result;
}

void sub_100638B08()
{
  id v0 = [self defaultWorkspace];
  if (v0)
  {
    id v1 = v0;
    LSApplicationWorkspace.openSettings()();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100638B74(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_100638B9C()
{
  qword_101129E08 = Int.seconds.getter(1050);
}

void sub_100638BC0()
{
  qword_101129E10 = Int.seconds.getter(440);
}

void sub_100638C0C()
{
  id v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  v85.receiver = v0;
  v85.super_class = (Class)type metadata accessor for ContainerDetail.ViewController(0);
  [super viewDidLoad];
  if (qword_1010986C8 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100050A90(v3, (uint64_t)qword_101129E18);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Called viewDidLoad", v6, 2u);
    swift_slowDealloc();
  }

  uint64_t v7 = self;
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v83 = sub_1006467A0;
  uint64_t v84 = v8;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v80 = 1107296256;
  uint64_t v81 = sub_10023B98C;
  uint64_t v82 = &unk_100FE35B0;
  uint64_t v9 = _Block_copy(&aBlock);
  swift_release();
  id v10 = [v7 scheduledTimerWithTimeInterval:0 repeats:v9 block:3.0];
  _Block_release(v9);
  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_loadingTimer];
  *(void *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_loadingTimer] = v10;

  id v12 = [v1 view];
  if (!v12)
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v13 = v12;
  id v14 = [self systemBackgroundColor];
  [v13 setBackgroundColor:v14];

  uint64_t v15 = (void ***)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  swift_beginAccess();
  type metadata accessor for PlaylistDetailDataSource(0);
  if (swift_dynamicCastClass())
  {
    _s14SheetPresenterV10DataSourceCMa();
    swift_allocObject();
    *(void *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_sheetPresenterDataSource] = sub_1004CC460();
    swift_retain_n();
    swift_release();
    sub_100644908((unint64_t *)&unk_1010B4730, (void (*)(uint64_t))_s14SheetPresenterV10DataSourceCMa);
    uint64_t v16 = ObservedObject.init(wrappedValue:)();
    uint64_t v18 = v17;
    uint64_t v75 = _swiftEmptyArrayStorage;
    sub_100063814((uint64_t *)&unk_1010A9910);
    State.init(wrappedValue:)();
    uint64_t v19 = aBlock;
    uint64_t v20 = (void *)v80;
    uint64_t aBlock = (void **)v16;
    uint64_t v80 = v18;
    uint64_t v81 = (void (*)(uint64_t, void *))v19;
    uint64_t v82 = v20;
    id v21 = objc_allocWithZone((Class)sub_100063814(&qword_1010B4740));
    uint64_t v22 = (void *)_UIHostingView.init(rootView:)();
    id v23 = [v1 view];
    if (!v23)
    {
LABEL_24:
      __break(1u);
      return;
    }
    uint64_t v24 = v23;
    [v23 addSubview:v22];

    swift_release();
  }
  id v25 = sub_10063FA10();
  id v26 = [v1 view];
  if (!v26) {
    goto LABEL_22;
  }
  uint64_t v27 = v26;
  [v26 bounds];
  double v29 = v28;
  double v31 = v30;
  double v33 = v32;
  double v35 = v34;

  double v36 = (objc_class *)type metadata accessor for HIMetricsCollectionView();
  v78.receiver = v25;
  v78.super_class = v36;
  [super frame];
  CGFloat v38 = v37;
  CGFloat v40 = v39;
  CGFloat v42 = v41;
  CGFloat v44 = v43;
  v77.receiver = v25;
  v77.super_class = v36;
  [super setFrame:v29, v31, v33, v35];
  v87.origin.x = v38;
  v87.origin.y = v40;
  v87.size.width = v42;
  v87.size.height = v44;
  double Width = CGRectGetWidth(v87);
  v76.receiver = v25;
  v76.super_class = v36;
  [super frame];
  if (Width != CGRectGetWidth(v88)) {
    sub_10013D384();
  }

  id v46 = sub_10063FA10();
  [v46 setAutoresizingMask:18];

  id v47 = [v1 view];
  if (!v47) {
    goto LABEL_23;
  }
  uint64_t v48 = v47;
  id v49 = sub_10063FA10();
  [v48 addSubview:v49];

  v86.value.super.super.super.Class isa = (Class)sub_10063FA10();
  Class isa = v86.value.super.super.super.isa;
  UIViewController.setContentScrollView(_:)(v86);

  uint64_t v51 = *v15;
  unint64_t v52 = v15[1];
  uint64_t v53 = swift_getObjectType();
  uint64_t aBlock = v51;
  if (((uint64_t (*)(uint64_t, void **))v52[24])(v53, v52))
  {
    id v54 = sub_10063FA10();
    [v54 setAlpha:0.0];
  }
  if (!*(void *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_storeItemMetadataDidChangeObserver])
  {
    unint64_t v55 = *v15;
    uint64_t v56 = v15[1];
    uint64_t v57 = swift_getObjectType();
    uint64_t aBlock = v55;
    ((void (*)(uint64_t, void **))v56[38])(v57, v56);
  }
  id v58 = [v1 traitCollection:ObjectType v75];
  unint64_t v59 = sub_1001B74E0();
  UITraitCollection.subscript.getter();

  char v60 = sub_1000362CC();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v61 = *v15;
  uint64_t v62 = v15[1];
  uint64_t v63 = swift_getObjectType();
  uint64_t v64 = (void (*)(void, uint64_t, void **))v62[13];
  swift_unknownObjectRetain();
  v64(v60 & 1, v63, v62);
  *uint64_t v15 = v61;
  v15[1] = v62;
  swift_endAccess();
  swift_unknownObjectRelease();
  sub_100063814(&qword_10109B160);
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_100E251D0;
  *(void *)(v65 + 32) = &type metadata for LibraryFilterTrait;
  *(void *)(v65 + 40) = v59;
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_10063A760();
  id v66 = [v1 navigationItem];
  [v66 setLargeTitleDisplayMode:2];

  uint64_t v67 = *v15;
  uint64_t v68 = v15[1];
  uint64_t v69 = swift_getObjectType();
  uint64_t aBlock = v67;
  *(void *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dragDropController] = ((uint64_t (*)(uint64_t, void **))v68[11])(v69, v68);
  swift_release();
  sub_10063B0A0(0);
  uint64_t v70 = *v15;
  uint64_t v71 = v15[1];
  uint64_t v72 = swift_getObjectType();
  uint64_t aBlock = v70;
  ((void (*)(uint64_t, void **))v71[21])(v72, v71);
  if (v73)
  {
    NSString v74 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v74 = 0;
  }
  [v1 setTitle:v74];
}

uint64_t sub_1006393F8()
{
  uint64_t v0 = sub_100063814(&qword_10109BA40);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)result;
    uint64_t v5 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    type metadata accessor for MainActor();
    id v6 = v4;
    uint64_t v7 = static MainActor.shared.getter();
    uint64_t v8 = (void *)swift_allocObject();
    _OWORD v8[2] = v7;
    v8[3] = &protocol witness table for MainActor;
    v8[4] = v6;
    sub_100066A3C((uint64_t)v2, (uint64_t)&unk_1010B4750, (uint64_t)v8);

    return swift_release();
  }
  return result;
}

uint64_t sub_10063954C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 56) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 64) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1006395E4, v6, v5);
}

uint64_t sub_1006395E4()
{
  uint64_t v1 = v0[7];
  swift_release();
  uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
  swift_beginAccess();
  uint64_t v4 = *v2;
  uint64_t v3 = v2[1];
  uint64_t ObjectType = swift_getObjectType();
  v0[5] = v4;
  v0[6] = v4;
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 192);
  swift_unknownObjectRetain();
  char v7 = v6(ObjectType, v3);
  (*(void (**)(unint64_t, void, void, uint64_t, uint64_t))(v3 + 408))(v7 & 1 | 0x8000000000000000, 0, 0, ObjectType, v3);
  swift_unknownObjectRelease();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100639748(char a1)
{
  uint64_t v2 = v1;
  v16.receiver = v2;
  v16.super_class = (Class)type metadata accessor for ContainerDetail.ViewController(0);
  [super viewDidAppear:a1 & 1];
  if (qword_1010986C8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100050A90(v4, (uint64_t)qword_101129E18);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    char v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Called viewDidAppear", v7, 2u);
    swift_slowDealloc();
  }

  sub_10063DAA4();
  int v8 = v2[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_needToRegisterGroupActivitySuggestion];
  v2[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_needToRegisterGroupActivitySuggestion] = 1;
  if (v8 != 1)
  {
    uint64_t v9 = &v2[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
    swift_beginAccess();
    uint64_t v10 = *((void *)v9 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v10 + 400))(ObjectType, v10);
  }
  sub_100640348();
  id v12 = &v2[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  swift_beginAccess();
  uint64_t v13 = *((void *)v12 + 1);
  uint64_t v14 = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 176))(v14, v13))
  {
    dispatch thunk of RelatedContentProvider.onAppear()();
    swift_release();
  }
  return sub_10063E544();
}

uint64_t sub_100639988(char a1)
{
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for ContainerDetail.ViewController(0);
  [super viewWillAppear:a1 & 1];
  uint64_t v3 = sub_10063DFEC();
  *((unsigned char *)v3 + 145) = 1;
  uint64_t v4 = v3[4];
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    os_log_type_t v6 = (uint64_t *)(v4 + 40);
    while (1)
    {
      uint64_t v9 = *v6;
      uint64_t v10 = qword_101098148;
      swift_unknownObjectRetain();
      if (v10 == -1)
      {
        if (byte_101129838) {
          goto LABEL_7;
        }
      }
      else
      {
        swift_once();
        if (byte_101129838)
        {
LABEL_7:
          uint64_t v7 = 0;
          goto LABEL_4;
        }
      }
      uint64_t v7 = *((unsigned __int8 *)v3 + 145);
LABEL_4:
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, ObjectType, v9);
      swift_unknownObjectRelease();
      v6 += 2;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  if (qword_101098148 != -1) {
    swift_once();
  }
  if (byte_101129838 != 1 && (*((unsigned char *)v3 + 145) & 1) != 0) {
    sub_100634880();
  }
  return swift_release();
}

uint64_t sub_100639B64(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100063814((uint64_t *)&unk_10109A128);
  __chkstk_darwin(v4 - 8);
  os_log_type_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PreviewPlaybackController.Context(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (objc_class *)type metadata accessor for ContainerDetail.ViewController(0);
  v23.receiver = v2;
  v23.super_class = v11;
  [super viewWillDisappear:a1 & 1];
  if (sub_10063E42C())
  {
    dispatch thunk of PopoverProvider.dismissPopover(animated:)();
    swift_release();
  }
  if (qword_101097960 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000637B8((uint64_t)v6, (uint64_t *)&unk_10109A128);
  }
  else
  {
    sub_1006448A0((uint64_t)v6, (uint64_t)v10, type metadata accessor for PreviewPlaybackController.Context);
    int v12 = v10[*(int *)(v7 + 28)];
    if (v12 != 2 && (v12 & 1) == 0) {
      sub_1000E3CF0();
    }
    sub_1006441B0((uint64_t)v10, type metadata accessor for PreviewPlaybackController.Context);
  }
  if (qword_101098000 != -1) {
    swift_once();
  }
  GroupActivitiesManager.SuggestionProvider.removeSuggestedItem(from:)((UIViewController)v2);
  sub_100639F28();
  uint64_t v14 = sub_10063DFEC();
  *((unsigned char *)v14 + 145) = 0;
  uint64_t v15 = v14[4];
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = (uint64_t *)(v15 + 40);
    while (1)
    {
      uint64_t v20 = *v17;
      uint64_t v21 = qword_101098148;
      swift_unknownObjectRetain();
      if (v21 == -1)
      {
        if (byte_101129838) {
          goto LABEL_22;
        }
      }
      else
      {
        swift_once();
        if (byte_101129838)
        {
LABEL_22:
          uint64_t v18 = 0;
          goto LABEL_19;
        }
      }
      uint64_t v18 = *((unsigned __int8 *)v14 + 145);
LABEL_19:
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v18, ObjectType, v20);
      swift_unknownObjectRelease();
      v17 += 2;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  if (qword_101098148 != -1) {
    swift_once();
  }
  if (byte_101129838 != 1 && (*((unsigned char *)v14 + 145) & 1) != 0) {
    sub_100634880();
  }
  return swift_release();
}

uint64_t sub_100639F28()
{
  uint64_t v0 = sub_100063814(&qword_10109BA58);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  os_log_type_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814((uint64_t *)&unk_10109B9F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10063DFEC();
  uint64_t v10 = type metadata accessor for IndexPath();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  Date.init()();
  uint64_t v11 = sub_100635408(2u, (uint64_t)v6, (uint64_t)v9);
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1000637B8((uint64_t)v9, (uint64_t *)&unk_10109B9F0);
  if (v11)
  {
    int64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      double v29 = _swiftEmptyArrayStorage;
      sub_1005BDB68(0, v12, 0);
      uint64_t v13 = 0;
      uint64_t v14 = v29;
      unint64_t v15 = v29[2];
      do
      {
        uint64_t v16 = *(void *)(v11 + 8 * v13 + 32);
        double v29 = v14;
        unint64_t v17 = v14[3];
        swift_bridgeObjectRetain();
        if (v15 >= v17 >> 1)
        {
          sub_1005BDB68(v17 > 1, v15 + 1, 1);
          uint64_t v14 = v29;
        }
        ++v13;
        v14[2] = v15 + 1;
        v14[v15++ + 4] = v16;
      }
      while (v12 != v13);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    uint64_t v18 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
    sub_10063E094((uint64_t)v2);
    uint64_t v19 = sub_1004A6578();
    uint64_t v21 = v20;
    if (qword_101097EB0 != -1) {
      swift_once();
    }
    uint64_t v22 = qword_101129418;
    swift_retain();
    char v23 = GroupActivitiesManager.hasJoined.getter();
    uint64_t v24 = GroupActivitiesManager.participantsCount.getter();
    id v25 = (uint64_t *)(v22 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
    swift_beginAccess();
    uint64_t v26 = *v25;
    swift_release();
    (*(void (**)(void *, char *, uint64_t, uint64_t, void, uint64_t, uint64_t))((swift_isaMask & *v18)
                                                                                         + 0xA8))(v14, v2, v19, v21, v23 & 1, v24, v26);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000637B8((uint64_t)v2, &qword_10109BA58);
  }
  sub_10063DFEC();
  sub_1006344C8();
  return swift_release();
}

id sub_10063A4F0()
{
  uint64_t v1 = sub_100063814(&qword_1010ADB20);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t *)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
  swift_beginAccess();
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  uint64_t ObjectType = swift_getObjectType();
  *(void *)&long long v13 = v5;
  (*(void (**)(uint64_t, uint64_t))(v6 + 136))(ObjectType, v6);
  uint64_t v8 = type metadata accessor for UIContentUnavailableConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8) == 1)
  {
    sub_1000637B8((uint64_t)v3, &qword_1010ADB20);
    long long v13 = 0u;
    long long v14 = 0u;
    unint64_t v15 = 0;
  }
  else
  {
    *((void *)&v14 + 1) = v8;
    unint64_t v15 = &protocol witness table for UIContentUnavailableConfiguration;
    uint64_t v10 = sub_100068018((uint64_t *)&v13);
    (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 32))(v10, v3, v8);
  }
  UIViewController.contentUnavailableConfiguration.setter();
  return sub_10063C8C4();
}

uint64_t sub_10063A760()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  swift_beginAccess();
  uint64_t v3 = *((void *)v2 + 1);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 192))(ObjectType, v3);
  if ((result & 1) == 0)
  {
    uint64_t v6 = *((void *)v2 + 1);
    uint64_t v7 = swift_getObjectType();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 272))(v7, v6);
    if ((result & 1) == 0)
    {
      sub_100063814((uint64_t *)&unk_1010A0980);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_100E251C0;
      *(void *)(v8 + 32) = sub_100640AD8();
      specialized Array._endMutation()();
      uint64_t v9 = *((void *)v2 + 1);
      uint64_t v10 = swift_getObjectType();
      unint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 368))(v10, v9);
      sub_10052286C(v11);
      unint64_t v12 = v8;
      id v13 = [v0 traitCollection];
      id v14 = [v13 userInterfaceIdiom];

      id v15 = [v1 navigationItem];
      if (v14 == (id)6)
      {
        sub_100057778(0, (unint64_t *)&unk_1010AACE0);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        [v15 setRightBarButtonItems:isa animated:1];
      }
      else
      {
        id v17 = [v1 parentViewController];
        if (v17)
        {
          id v18 = v17;
          while (1)
          {
            self;
            if (swift_dynamicCastObjCClass()) {
              break;
            }
            id v19 = v18;
            id v20 = [v19 navigationItem];

            id v18 = [v19 parentViewController];
            id v15 = v20;
            if (!v18) {
              goto LABEL_12;
            }
          }
        }
        id v20 = v15;
LABEL_12:
        unint64_t v21 = swift_bridgeObjectRetain();
        sub_100036074(v21, 1);

        swift_bridgeObjectRelease();
      }
      uint64_t v22 = sub_10063AB78();
      unint64_t v31 = (unint64_t)_swiftEmptyArrayStorage;
      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v23 = result;
        if (result) {
          goto LABEL_15;
        }
      }
      else
      {
        uint64_t v23 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (v23)
        {
LABEL_15:
          if (v23 < 1)
          {
            __break(1u);
            return result;
          }
          for (uint64_t i = 0; i != v23; ++i)
          {
            if ((v12 & 0xC000000000000001) != 0) {
              id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v25 = *(id *)(v12 + 8 * i + 32);
            }
            uint64_t v26 = v25;
            id v27 = [v25 customView:v31];
            if (v27)
            {
              uint64_t v28 = v27;
              type metadata accessor for SymbolButton(0);
              uint64_t v29 = swift_dynamicCastClass();

              if (v29)
              {
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
              }
              else
              {
              }
            }
            else
            {
            }
          }
          swift_bridgeObjectRelease();
          double v30 = (void *)v31;
          goto LABEL_31;
        }
      }
      swift_bridgeObjectRelease();
      double v30 = _swiftEmptyArrayStorage;
LABEL_31:
      swift_bridgeObjectRelease();
      *(void *)(v22 + 24) = v30;
      swift_bridgeObjectRelease();
      sub_1004C77F4();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10063AB78()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for MusicPropertySource();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___headerCoordinator;
  if (*(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___headerCoordinator])
  {
    uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___headerCoordinator];
  }
  else
  {
    uint64_t v7 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
    swift_beginAccess();
    uint64_t v8 = *(void *)v7;
    uint64_t v9 = *((void *)v7 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v20 = v8;
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 200))(v21, ObjectType, v9);
    uint64_t v11 = *(void *)v7;
    uint64_t v12 = *((void *)v7 + 1);
    uint64_t v13 = swift_getObjectType();
    uint64_t v20 = v11;
    (*(void (**)(uint64_t, uint64_t))(v12 + 208))(v13, v12);
    uint64_t v14 = *(void *)v7;
    uint64_t v15 = *((void *)v7 + 1);
    uint64_t v16 = swift_getObjectType();
    uint64_t v20 = v14;
    LOBYTE(v14) = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 192))(v16, v15);
    type metadata accessor for HeaderCoordinator();
    swift_allocObject();
    id v17 = v1;
    uint64_t v6 = sub_1004C759C(v1, (uint64_t)v21, (uint64_t)v4, v14 & 1);
    *(void *)&v1[v5] = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

void sub_10063AD14(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Artwork();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814((uint64_t *)&unk_10109EF90);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100063814(&qword_1010B4660);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v2 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork;
  swift_beginAccess();
  uint64_t v16 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_10006CAB8(a1, (uint64_t)v14, (uint64_t *)&unk_10109EF90);
  sub_10006CAB8(v15, v16, (uint64_t *)&unk_10109EF90);
  id v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v17((uint64_t)v14, 1, v4) == 1)
  {
    if (v17(v16, 1, v4) == 1)
    {
      sub_1000637B8((uint64_t)v14, (uint64_t *)&unk_10109EF90);
      return;
    }
  }
  else
  {
    sub_10006CAB8((uint64_t)v14, (uint64_t)v10, (uint64_t *)&unk_10109EF90);
    if (v17(v16, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v16, v4);
      sub_100644908((unint64_t *)&unk_1010A4610, (void (*)(uint64_t))&type metadata accessor for Artwork);
      char v18 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_1000637B8((uint64_t)v14, (uint64_t *)&unk_10109EF90);
      if (v18) {
        return;
      }
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_1000637B8((uint64_t)v14, &qword_1010B4660);
LABEL_8:
  sub_10063B0A0(1);
}

id sub_10063B02C()
{
  uint64_t v1 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___backdropContainer;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___backdropContainer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___backdropContainer);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIView) init];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_10063B0A0(char a1)
{
  uint64_t v3 = sub_100063814(&qword_10109BA40);
  __chkstk_darwin(v3 - 8);
  uint64_t v40 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100063814((uint64_t *)&unk_10109EF90);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Artwork();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v38 - v13;
  id v15 = [v1 traitCollection];
  id v16 = [v15 userInterfaceIdiom];

  if (v16 == (id)6
    && ((a1 & 1) != 0 || !*(void *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView]))
  {
    uint64_t v17 = (uint64_t)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork];
    swift_beginAccess();
    sub_10006CAB8(v17, (uint64_t)v7, (uint64_t *)&unk_10109EF90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1000637B8((uint64_t)v7, (uint64_t *)&unk_10109EF90);
    }
    else
    {
      double v39 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v39(v14, v7, v8);
      id v18 = sub_10063FA10();
      uint64_t v19 = (objc_class *)type metadata accessor for HIMetricsCollectionView();
      v42.receiver = v18;
      v42.super_class = v19;
      [super frame];
      double v21 = v20;
      double v23 = v22;

      if (v21 != 0.0 || v23 != 0.0)
      {
        id v24 = sub_10063FA10();
        v41.receiver = v24;
        v41.super_class = v19;
        [super frame];
        uint64_t v26 = v25;
        uint64_t v28 = v27;

        id v29 = [v1 traitCollection];
        [v29 displayScale];
        uint64_t v31 = v30;

        uint64_t v32 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v40, 1, 1, v32);
        uint64_t v33 = swift_allocObject();
        swift_unknownObjectWeakInit();
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
        type metadata accessor for MainActor();
        swift_retain();
        uint64_t v38 = static MainActor.shared.getter();
        unint64_t v34 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
        unint64_t v35 = (v10 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
        double v36 = (char *)swift_allocObject();
        *((void *)v36 + 2) = v38;
        *((void *)v36 + 3) = &protocol witness table for MainActor;
        *((void *)v36 + 4) = v33;
        v39(&v36[v34], v12, v8);
        double v37 = &v36[v35];
        *(void *)double v37 = v26;
        *((void *)v37 + 1) = v28;
        *(void *)&v36[(v35 + 23) & 0xFFFFFFFFFFFFFFF8] = v31;
        swift_release();
        sub_100066A3C(v40, (uint64_t)&unk_1010B4700, (uint64_t)v36);
        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
  }
}

uint64_t sub_10063B4F8(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(double *)(v8 + 112) = a2;
  *(double *)(v8 + 120) = a3;
  *(double *)(v8 + 104) = a1;
  *(void *)(v8 + 88) = a7;
  *(void *)(v8 + 96) = a8;
  sub_100063814(&qword_10109BA40);
  *(void *)(v8 + 128) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Artwork();
  *(void *)(v8 + 136) = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  *(void *)(v8 + 144) = v10;
  *(void *)(v8 + 152) = *(void *)(v10 + 64);
  *(void *)(v8 + 160) = swift_task_alloc();
  *(void *)(v8 + 168) = sub_100063814(&qword_1010B4660);
  *(void *)(v8 + 176) = swift_task_alloc();
  sub_100063814((uint64_t *)&unk_10109EF90);
  *(void *)(v8 + 184) = swift_task_alloc();
  *(void *)(v8 + 192) = swift_task_alloc();
  *(void *)(v8 + 200) = swift_task_alloc();
  *(void *)(v8 + 208) = type metadata accessor for MainActor();
  *(void *)(v8 + 216) = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v8 + 224) = v12;
  *(void *)(v8 + 232) = v11;
  return _swift_task_switch(sub_10063B6B0, v12, v11);
}

uint64_t sub_10063B6B0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *((void *)v0 + 30) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *((void *)v0 + 31) = v2;
    void *v2 = v0;
    v2[1] = sub_10063B984;
    double v3 = v0[14];
    double v4 = v0[15];
    double v5 = v0[13];
    uint64_t v6 = *((void *)v0 + 12);
    return sub_100645900(v6, v5, v3, v4);
  }
  else
  {
    swift_release();
    uint64_t v8 = *((void *)v0 + 20);
    uint64_t v10 = *((void *)v0 + 17);
    uint64_t v9 = *((void *)v0 + 18);
    uint64_t v11 = *((void *)v0 + 16);
    uint64_t v20 = *((void *)v0 + 19);
    uint64_t v21 = v11;
    uint64_t v12 = *((void *)v0 + 12);
    uint64_t v13 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
    uint64_t v14 = swift_allocObject();
    swift_beginAccess();
    id v15 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v12, v10);
    swift_retain();
    uint64_t v16 = static MainActor.shared.getter();
    unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v16;
    *(void *)(v18 + 24) = &protocol witness table for MainActor;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v18 + v17, v8, v10);
    *(void *)(v18 + ((v20 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v14;
    swift_release();
    sub_100066A3C(v21, (uint64_t)&unk_1010B4710, v18);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))*((void *)v0 + 1);
    return v19();
  }
}

uint64_t sub_10063B984(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 256) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 232);
  uint64_t v4 = *(void *)(v2 + 224);
  return _swift_task_switch(sub_10063BAAC, v4, v3);
}

uint64_t sub_10063BAAC()
{
  uint64_t v1 = v0[32];
  swift_release();
  if (v1)
  {
    id v49 = (void *)v0[32];
    uint64_t v2 = v0[30];
    uint64_t v4 = v0[24];
    uint64_t v3 = v0[25];
    uint64_t v6 = v0[21];
    uint64_t v5 = v0[22];
    uint64_t v7 = v0[17];
    uint64_t v8 = v0[18];
    (*(void (**)(uint64_t, void, uint64_t))(v8 + 16))(v3, v0[12], v7);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v7);
    uint64_t v9 = v2 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork;
    swift_beginAccess();
    sub_10006CAB8(v9, v4, (uint64_t *)&unk_10109EF90);
    uint64_t v10 = v5 + *(int *)(v6 + 48);
    sub_10006CAB8(v3, v5, (uint64_t *)&unk_10109EF90);
    sub_10006CAB8(v4, v10, (uint64_t *)&unk_10109EF90);
    uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (v11(v5, 1, v7) == 1)
    {
      uint64_t v12 = v0[25];
      uint64_t v13 = v0[17];
      sub_1000637B8(v0[24], (uint64_t *)&unk_10109EF90);
      sub_1000637B8(v12, (uint64_t *)&unk_10109EF90);
      if (v11(v10, 1, v13) == 1)
      {
        sub_1000637B8(v0[22], (uint64_t *)&unk_10109EF90);
LABEL_10:
        uint64_t v28 = (void *)v0[30];
        uint64_t v29 = v0[16];
        uint64_t v30 = type metadata accessor for TaskPriority();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
        uint64_t v31 = swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_retain();
        id v32 = v49;
        uint64_t v33 = static MainActor.shared.getter();
        unint64_t v34 = (void *)swift_allocObject();
        v34[2] = v33;
        void v34[3] = &protocol witness table for MainActor;
        v34[4] = v31;
        v34[5] = v32;
        swift_release();
        sub_100066A3C(v29, (uint64_t)&unk_1010B4728, (uint64_t)v34);

        swift_release();
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v15 = v0[17];
      sub_10006CAB8(v0[22], v0[23], (uint64_t *)&unk_10109EF90);
      unsigned int v16 = v11(v10, 1, v15);
      uint64_t v18 = v0[24];
      uint64_t v17 = v0[25];
      uint64_t v19 = v0[23];
      if (v16 != 1)
      {
        uint64_t v22 = v0[22];
        uint64_t v23 = v0[20];
        uint64_t v24 = v0[17];
        uint64_t v25 = v0[18];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v23, v10, v24);
        sub_100644908((unint64_t *)&unk_1010A4610, (void (*)(uint64_t))&type metadata accessor for Artwork);
        char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
        v27(v23, v24);
        sub_1000637B8(v18, (uint64_t *)&unk_10109EF90);
        sub_1000637B8(v17, (uint64_t *)&unk_10109EF90);
        v27(v19, v24);
        sub_1000637B8(v22, (uint64_t *)&unk_10109EF90);
        if (v26) {
          goto LABEL_10;
        }
        goto LABEL_11;
      }
      uint64_t v20 = v0[17];
      uint64_t v21 = v0[18];
      sub_1000637B8(v0[24], (uint64_t *)&unk_10109EF90);
      sub_1000637B8(v17, (uint64_t *)&unk_10109EF90);
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    }
    sub_1000637B8(v0[22], &qword_1010B4660);
LABEL_11:
    uint64_t v14 = (void *)v0[30];

    goto LABEL_12;
  }
  uint64_t v14 = (void *)v0[30];
LABEL_12:

  uint64_t v35 = v0[20];
  uint64_t v37 = v0[17];
  uint64_t v36 = v0[18];
  uint64_t v38 = v0[16];
  uint64_t v48 = v0[19];
  uint64_t v50 = v38;
  uint64_t v39 = v0[12];
  uint64_t v40 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v38, 1, 1, v40);
  uint64_t v41 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v35, v39, v37);
  swift_retain();
  uint64_t v43 = static MainActor.shared.getter();
  unint64_t v44 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = v43;
  *(void *)(v45 + 24) = &protocol witness table for MainActor;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v36 + 32))(v45 + v44, v35, v37);
  *(void *)(v45 + ((v48 + v44 + 7) & 0xFFFFFFFFFFFFFFF8)) = v41;
  swift_release();
  sub_100066A3C(v50, (uint64_t)&unk_1010B4710, v45);
  swift_release();
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v46 = (uint64_t (*)(void))v0[1];
  return v46();
}

uint64_t sub_10063C084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[14] = a4;
  v5[15] = a5;
  uint64_t v6 = type metadata accessor for Artwork();
  v5[16] = v6;
  v5[17] = *(void *)(v6 - 8);
  v5[18] = swift_task_alloc();
  v5[19] = sub_100063814(&qword_1010B4660);
  v5[20] = swift_task_alloc();
  sub_100063814((uint64_t *)&unk_10109EF90);
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[24] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10063C1F8, v8, v7);
}

uint64_t sub_10063C1F8()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[14];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v5(v1, 0, 1, v2);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    uint64_t v8 = v0[22];
    uint64_t v9 = Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork;
    swift_beginAccess();
    sub_10006CAB8(v9, v8, (uint64_t *)&unk_10109EF90);
  }
  else
  {
    v5(v0[22], 1, 1, v0[16]);
  }
  uint64_t v10 = v0[22];
  uint64_t v11 = v0[20];
  uint64_t v12 = v0[16];
  uint64_t v13 = v0[17];
  uint64_t v14 = v11 + *(int *)(v0[19] + 48);
  sub_10006CAB8(v0[23], v11, (uint64_t *)&unk_10109EF90);
  sub_10006CAB8(v10, v14, (uint64_t *)&unk_10109EF90);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v15(v11, 1, v12) != 1)
  {
    uint64_t v18 = v0[16];
    sub_10006CAB8(v0[20], v0[21], (uint64_t *)&unk_10109EF90);
    int v19 = v15(v14, 1, v18);
    uint64_t v21 = v0[22];
    uint64_t v20 = v0[23];
    uint64_t v22 = v0[21];
    if (v19 != 1)
    {
      uint64_t v25 = v0[20];
      uint64_t v27 = v0[17];
      uint64_t v26 = v0[18];
      uint64_t v28 = v0[16];
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v26, v14, v28);
      sub_100644908((unint64_t *)&unk_1010A4610, (void (*)(uint64_t))&type metadata accessor for Artwork);
      char v29 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
      v30(v26, v28);
      sub_1000637B8(v21, (uint64_t *)&unk_10109EF90);
      sub_1000637B8(v20, (uint64_t *)&unk_10109EF90);
      v30(v22, v28);
      sub_1000637B8(v25, (uint64_t *)&unk_10109EF90);
      if ((v29 & 1) == 0) {
        goto LABEL_16;
      }
      goto LABEL_11;
    }
    uint64_t v23 = v0[16];
    uint64_t v24 = v0[17];
    sub_1000637B8(v0[22], (uint64_t *)&unk_10109EF90);
    sub_1000637B8(v20, (uint64_t *)&unk_10109EF90);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
LABEL_9:
    sub_1000637B8(v0[20], &qword_1010B4660);
    goto LABEL_16;
  }
  uint64_t v16 = v0[23];
  uint64_t v17 = v0[16];
  sub_1000637B8(v0[22], (uint64_t *)&unk_10109EF90);
  sub_1000637B8(v16, (uint64_t *)&unk_10109EF90);
  if (v15(v14, 1, v17) != 1) {
    goto LABEL_9;
  }
  sub_1000637B8(v0[20], (uint64_t *)&unk_10109EF90);
LABEL_11:
  swift_beginAccess();
  uint64_t v31 = swift_unknownObjectWeakLoadStrong();
  if (v31)
  {
    id v32 = (void *)v31;
    uint64_t v33 = *(void **)(v31 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView);
    id v34 = v33;

    if (v33)
    {
      [v34 removeFromSuperview];
      swift_beginAccess();
      uint64_t v35 = swift_unknownObjectWeakLoadStrong();
      if (v35)
      {
        uint64_t v36 = (void *)v35;
        uint64_t v37 = *(void **)(v35 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView);
        *(void *)(v35 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView) = 0;
      }
      else
      {
      }
    }
  }
LABEL_16:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = (uint64_t (*)(void))v0[1];
  return v38();
}

uint64_t sub_10063C638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10063C6D0, v7, v6);
}

uint64_t sub_10063C6D0()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (char *)Strong;
    id v3 = [objc_allocWithZone((Class)UIImageView) initWithImage:*(void *)(v0 + 48)];
    [v3 setContentMode:0];
    [v3 setAlpha:0.0];
    [v3 setInsetsLayoutMarginsFromSafeArea:0];
    uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView];
    *(void *)&v2[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView] = v3;
    id v5 = v3;

    id v6 = sub_10063B02C();
    UIView.addSubviewAnchoredToBounds(_:useLayoutMarginsGuide:padding:)(v5);

    sub_100057778(0, (unint64_t *)&qword_1010A0A30);
    id v7 = [self functionWithName:kCAMediaTimingFunctionLinear];
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v5;
    id v9 = v5;
    static UIView.animate(withTimingFunction:duration:delay:options:animations:completion:)((uint64_t)v7, 0, sub_10064677C, v8, 0, 0, 0.25, 0.0);
    swift_release();
  }
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

id sub_10063C8C4()
{
  uint64_t v1 = v0;
  uint64_t v77 = _s15FloatingArtworkVMa(0);
  __chkstk_darwin(v77);
  objc_super v78 = (uint64_t *)((char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_100063814((uint64_t *)&unk_1010ABF30);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v75 = (uint64_t)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v79 = (char *)&v75 - v6;
  uint64_t v7 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v82 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814((uint64_t *)&unk_1010A1D20);
  __chkstk_darwin(v9 - 8);
  uint64_t v81 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ArtworkImage.Info(0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v76 = (uint64_t)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v80 = (uint64_t)&v75 - v15;
  __chkstk_darwin(v14);
  uint64_t v83 = (uint64_t)&v75 - v16;
  uint64_t v17 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  swift_beginAccess();
  uint64_t v18 = *(void *)v17;
  uint64_t v19 = *((void *)v17 + 1);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v84 = v18;
  swift_unknownObjectRetain();
  id v21 = [v1 traitCollection];
  id v22 = [v21 userInterfaceIdiom];

  if (v22 != (id)6) {
    goto LABEL_6;
  }
  uint64_t v23 = (char *)sub_10063FA10();
  double v24 = *(double *)&v23[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics];

  if (qword_1010986B8 != -1) {
    swift_once();
  }
  if (*(double *)&qword_101129E08 < v24)
  {
    UIViewController.contentUnavailableConfiguration.getter();
    BOOL v25 = v86 == 0;
    sub_1000637B8((uint64_t)v85, &qword_1010BA060);
  }
  else
  {
LABEL_6:
    BOOL v25 = 0;
  }
  (*(void (**)(BOOL, uint64_t, uint64_t))(v19 + 376))(v25, ObjectType, v19);
  swift_unknownObjectRelease();
  id v26 = [v1 traitCollection];
  id v27 = [v26 userInterfaceIdiom];

  if (v27 != (id)6) {
    return [v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer] removeFromSuperview];
  }
  char v29 = (char *)sub_10063FA10();
  double v30 = *(double *)&v29[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics];

  if (qword_1010986B8 != -1) {
    swift_once();
  }
  double v28 = *(double *)&qword_101129E08;
  if (*(double *)&qword_101129E08 >= v30) {
    return [v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer] removeFromSuperview];
  }
  UIViewController.contentUnavailableConfiguration.getter();
  uint64_t v31 = v86;
  sub_1000637B8((uint64_t)v85, &qword_1010BA060);
  if (v31) {
    return [v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer] removeFromSuperview];
  }
  uint64_t v33 = *(void *)v17;
  uint64_t v34 = *((void *)v17 + 1);
  uint64_t v35 = swift_getObjectType();
  v85[0] = v33;
  uint64_t v36 = (uint64_t)v81;
  (*(void (**)(uint64_t, uint64_t))(v34 + 144))(v35, v34);
  uint64_t v37 = sub_100063814(&qword_1010A4530);
  uint64_t v38 = (uint64_t)v82;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v82, 1, 10, v37);
  if (qword_1010986C0 != -1) {
    swift_once();
  }
  ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)(qword_101129E10, 0, qword_101129E10, 0, 0, 1, 2, (uint64_t)v85);
  uint64_t v39 = v83;
  *(void *)&double v40 = ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)(v36, v38, 0x3FF0000000000000, 0, (uint64_t)v85, 0x4034000000000000, -1, 0, v83).n128_u64[0];
  uint64_t v41 = *(void **)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer];
  id v42 = [v41 superview];
  id v43 = sub_10063FA10();
  unint64_t v44 = v43;
  if (!v42)
  {

    goto LABEL_21;
  }
  sub_100057778(0, (unint64_t *)&qword_1010A0A30);
  id v45 = v42;
  char v46 = static NSObject.== infix(_:_:)();

  if ((v46 & 1) == 0)
  {
LABEL_21:
    uint64_t v54 = v80;
    sub_100644148(v39, v80, type metadata accessor for ArtworkImage.Info);
    uint64_t v55 = *(void *)v17;
    uint64_t v56 = *((void *)v17 + 1);
    uint64_t v57 = swift_getObjectType();
    uint64_t v84 = v55;
    uint64_t v58 = (uint64_t)v79;
    (*(void (**)(uint64_t, uint64_t))(v56 + 152))(v57, v56);
    _s15FloatingArtworkV10DataSourceCMa(0);
    swift_allocObject();
    uint64_t v59 = sub_1004DB224(v54, v58);
    uint64_t v60 = *(void *)v17;
    uint64_t v61 = *((void *)v17 + 1);
    uint64_t v62 = swift_getObjectType();
    uint64_t v84 = v60;
    uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 224))(v62, v61);
    uint64_t v65 = v64;
    *(void *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkDataSource] = v59;
    swift_retain();
    swift_release();
    id v66 = sub_10063FA10();
    sub_10063D1E8(v66);

    [v41 frame];
    [v41 setFrame:];
    sub_100644908(&qword_1010B46D8, (void (*)(uint64_t))_s15FloatingArtworkV10DataSourceCMa);
    swift_retain();
    uint64_t v67 = ObservedObject.init(wrappedValue:)();
    uint64_t v68 = v77;
    uint64_t v69 = v78;
    *objc_super v78 = v67;
    v69[1] = v70;
    v69[2] = v63;
    v69[3] = v65;
    uint64_t v71 = (uint64_t *)((char *)v69 + *(int *)(v68 + 24));
    *uint64_t v71 = swift_getKeyPath();
    sub_100063814(&qword_1010B46E0);
    swift_storeEnumTagMultiPayload();
    id v72 = objc_allocWithZone((Class)sub_100063814((uint64_t *)&unk_1010B46E8));
    uint64_t v73 = (void *)_UIHostingView.init(rootView:)();
    UIView.addSubviewAnchoredToBounds(_:useLayoutMarginsGuide:padding:)(v73);

    id v74 = sub_10063FA10();
    [v74 _addContentSubview:v41 atBack:1];

    goto LABEL_22;
  }
  uint64_t v47 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkDataSource;
  if (!*(void *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkDataSource]) {
    return (id)sub_1006441B0(v39, type metadata accessor for ArtworkImage.Info);
  }
  uint64_t v48 = v80;
  sub_100644148(v39, v80, type metadata accessor for ArtworkImage.Info);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_100644148(v48, v76, type metadata accessor for ArtworkImage.Info);
  swift_retain_n();
  static Published.subscript.setter();
  sub_1006441B0(v48, type metadata accessor for ArtworkImage.Info);
  swift_release();
  if (!*(void *)&v1[v47]) {
    return (id)sub_1006441B0(v39, type metadata accessor for ArtworkImage.Info);
  }
  uint64_t v49 = *(void *)v17;
  uint64_t v50 = *((void *)v17 + 1);
  uint64_t v51 = swift_getObjectType();
  uint64_t v84 = v49;
  unint64_t v52 = *(void (**)(uint64_t, uint64_t))(v50 + 152);
  swift_retain();
  uint64_t v53 = (uint64_t)v79;
  v52(v51, v50);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10006CAB8(v53, v75, (uint64_t *)&unk_1010ABF30);
  swift_retain();
  static Published.subscript.setter();
  sub_1000637B8(v53, (uint64_t *)&unk_1010ABF30);
LABEL_22:
  swift_release();
  return (id)sub_1006441B0(v39, type metadata accessor for ArtworkImage.Info);
}

id sub_10063D1E8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 344))(10, ObjectType, v5);
  char v9 = v8;
  double v10 = 0.0;
  if ((v8 & 1) == 0)
  {
    uint64_t v11 = v7;
    uint64_t v12 = (void *)sub_10063E7FC();
    [v12 _contentFrameForSection:v11];
    double v14 = v13;

    if (qword_1010986C0 != -1) {
      swift_once();
    }
    if (v14 >= *(double *)&qword_101129E10) {
      double v10 = v14;
    }
    else {
      double v10 = *(double *)&qword_101129E10;
    }
  }
  [a1 contentOffset];
  double v16 = v15;
  id v17 = [a1 safeAreaInsets];
  double v19 = v16 + v18;
  if ((v9 & 1) == 0)
  {
    if (qword_1010986C0 != -1) {
      id v17 = (id)swift_once();
    }
    if (v10 < v19 + *(double *)&qword_101129E10) {
      double v19 = v10 - *(double *)&qword_101129E10;
    }
  }
  if (v19 <= 0.0) {
    double v19 = 0.0;
  }
  uint64_t v20 = *(void **)(v2 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer);
  id v21 = (char *)sub_10063FA10(v17);
  double v22 = *(double *)&v21[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics + 16];

  [v20 frame];
  return [v20 setFrame:v22, v19];
}

uint64_t sub_10063D3C8()
{
  uint64_t v1 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___relatedContentSpacingData;
  if (*(void *)(v0
                 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___relatedContentSpacingData))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___relatedContentSpacingData);
  }
  else
  {
    type metadata accessor for RelatedContentSpacing.Data(0);
    uint64_t v2 = swift_allocObject();
    Published.init(initialValue:)();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10063D464(uint64_t a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentState];
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for RelatedContentProvider.State();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 24))(v3, a1, v4);
  swift_endAccess();
  v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_includeRelatedContentOnNextReload] = 1;
  if ([v1 isViewLoaded])
  {
    uint64_t v6 = &v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
    swift_beginAccess();
    uint64_t v7 = *((void *)v6 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v7 + 328))(ObjectType, v7);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

uint64_t sub_10063D5A4()
{
  uint64_t v1 = type metadata accessor for RelatedContentProvider.State();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v30 - v6;
  char v8 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentState];
  swift_beginAccess();
  char v9 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v9(v7, v8, v1);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v7, v1);
  if (v10 == enum case for RelatedContentProvider.State.loaded(_:))
  {
    (*(void (**)(char *, uint64_t))(v2 + 96))(v7, v1);
    return *(void *)v7;
  }
  else
  {
    if (v10 == enum case for RelatedContentProvider.State.error(_:))
    {
      (*(void (**)(char *, uint64_t))(v2 + 96))(v7, v1);
      uint64_t v12 = *(void *)v7;
      if (qword_1010986C8 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_100050A90(v13, (uint64_t)qword_101129E18);
      swift_errorRetain();
      swift_errorRetain();
      double v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v14, v15))
      {
        double v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v17 = swift_slowAlloc();
        uint64_t v34 = v12;
        uint64_t v35 = v17;
        *(_DWORD *)double v16 = 136446210;
        swift_errorRetain();
        sub_100063814((uint64_t *)&unk_1010991A0);
        uint64_t v18 = String.init<A>(describing:)();
        uint64_t v34 = sub_100075D94(v18, v19, &v35);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "Related content token failed to load with error=%{public}s", v16, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
    else if (v10 != enum case for RelatedContentProvider.State.loading(_:))
    {
      if (qword_1010986C8 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_100050A90(v20, (uint64_t)qword_101129E18);
      id v21 = v0;
      double v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.fault.getter();
      int v24 = v23;
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v25 = swift_slowAlloc();
        int v32 = v24;
        id v26 = (uint8_t *)v25;
        uint64_t v33 = swift_slowAlloc();
        uint64_t v35 = v33;
        uint64_t v31 = v21;
        *(_DWORD *)id v26 = 136446210;
        v30[1] = v26 + 4;
        v9(v5, v8, v1);
        uint64_t v27 = String.init<A>(describing:)();
        uint64_t v34 = sub_100075D94(v27, v28, &v35);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        char v29 = v31;

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v32, "Unhandled state=%{public}s", v26, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    }
    return 0;
  }
}

uint64_t sub_10063DAA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100063814(&qword_10109ACE0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100063814(&qword_1010B46A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814(&qword_1010B46A8);
  uint64_t v24 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t *)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
  swift_beginAccess();
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  uint64_t ObjectType = swift_getObjectType();
  *(void *)&long long v25 = v13;
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 176))(ObjectType, v14);
  uint64_t result = swift_release();
  if (v16)
  {
    uint64_t v18 = *v12;
    uint64_t v19 = v12[1];
    uint64_t v20 = swift_getObjectType();
    *(void *)&long long v25 = v18;
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v19 + 176))(v20, v19))
    {
      dispatch thunk of RelatedContentProvider.$state.getter();
      swift_release();
      sub_100057778(0, &qword_10109C1F0);
      *(void *)&long long v25 = static OS_dispatch_queue.main.getter();
      uint64_t v21 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 1, 1, v21);
      sub_100063858((unint64_t *)&unk_1010B46B8, &qword_1010B46A0);
      sub_10006B444((unint64_t *)&qword_10109BAF0, &qword_10109C1F0);
      Publisher.receive<A>(on:options:)();
      sub_1000637B8((uint64_t)v4, &qword_10109ACE0);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_100063858((unint64_t *)&unk_1010B46C8, &qword_1010B46A8);
      uint64_t v22 = Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
      *((void *)&v26 + 1) = type metadata accessor for AnyCancellable();
      uint64_t v27 = &protocol witness table for AnyCancellable;
      *(void *)&long long v25 = v22;
    }
    else
    {
      uint64_t v27 = 0;
      long long v25 = 0u;
      long long v26 = 0u;
    }
    uint64_t v23 = v1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentStateSubscription;
    swift_beginAccess();
    sub_10002D09C((uint64_t)&v25, v23, &qword_1010B46B0);
    return swift_endAccess();
  }
  return result;
}

void sub_10063DEE4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RelatedContentProvider.State();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    sub_10063D464((uint64_t)v5);
  }
}

void *sub_10063DFEC()
{
  uint64_t v1 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___impressionsTracker;
  if (*(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___impressionsTracker])
  {
    uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___impressionsTracker];
  }
  else
  {
    uint64_t v3 = v0;
    uint64_t v4 = v0;
    id v5 = sub_10063FA10();
    sub_100063814(&qword_1010B4600);
    swift_allocObject();
    uint64_t v2 = sub_100633A64(v4, v5, 1, 0);
    *(void *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10063E094@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100063814((uint64_t *)&unk_10109BF50);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_10109BA58);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100063814(&qword_1010B4668);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  os_log_type_t v15 = (char *)v31 - v14;
  uint64_t v16 = v1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___pageProperties;
  swift_beginAccess();
  sub_10006CAB8(v16, (uint64_t)v15, &qword_1010B4668);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_1000637B8((uint64_t)v15, &qword_1010B4668);
    uint64_t v17 = (uint64_t *)(v1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
    swift_beginAccess();
    uint64_t v18 = a1;
    uint64_t v19 = *v17;
    uint64_t v20 = v17[1];
    uint64_t ObjectType = swift_getObjectType();
    v31[1] = v19;
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 40);
    uint64_t v23 = v20;
    a1 = v18;
    uint64_t v24 = v22(ObjectType, v23);
    if (v25) {
      uint64_t v26 = v24;
    }
    else {
      uint64_t v26 = 0x497972617262696CLL;
    }
    if (v25) {
      uint64_t v27 = v25;
    }
    else {
      uint64_t v27 = 0xEB000000006D6574;
    }
    uint64_t v28 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v5, 1, 1, v28);
    MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)(v26, v27, 0x656E6961746E6F43, 0xEF6C696174654472, (uint64_t)v5, 0, 0, 0, v9);
    uint64_t v29 = type metadata accessor for MetricsPageProperties();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 0, 1, v29);
    sub_10006CAB8((uint64_t)v9, (uint64_t)v12, &qword_10109BA58);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
    swift_beginAccess();
    sub_10002D09C((uint64_t)v12, v16, &qword_1010B4668);
    swift_endAccess();
    os_log_type_t v15 = v9;
  }
  return sub_10003CABC((uint64_t)v15, a1, &qword_10109BA58);
}

uint64_t sub_10063E42C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___popoverProvider;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___popoverProvider);
  uint64_t v4 = v3;
  if (v3 == 1)
  {
    id v5 = [self sharedApplication];
    uint64_t v6 = sub_1006BD1C0();

    if (*(void *)(v6 + 16))
    {
      swift_retain();
      sub_1000C32A4((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v4 = MusicPageProvider.popoverProvider(context:)();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      uint64_t v4 = 0;
    }
    uint64_t v7 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v4;
    swift_retain();
    sub_100460780(v7);
  }
  sub_100460790(v3);
  return v4;
}

uint64_t sub_10063E544()
{
  uint64_t v1 = sub_100063814((uint64_t *)&unk_10109B9B0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MetricsEvent.Page(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t ObjectType = swift_getObjectType();
  v22[0] = v9;
  (*(void (**)(uint64_t, uint64_t))(v10 + 240))(ObjectType, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_1000637B8((uint64_t)v3, (uint64_t *)&unk_10109B9B0);
  }
  sub_1006448A0((uint64_t)v3, (uint64_t)v7, type metadata accessor for MetricsEvent.Page);
  uint64_t v13 = (id)*MetricsReportingController.shared.unsafeMutableAddressor();
  uint64_t v14 = sub_1004A6578();
  uint64_t v16 = v15;
  if (qword_101097EB0 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_101129418;
  swift_retain();
  char v18 = GroupActivitiesManager.hasJoined.getter();
  uint64_t v19 = GroupActivitiesManager.participantsCount.getter();
  uint64_t v20 = (uint64_t *)(v17 + OBJC_IVAR____TtC9MusicCore22GroupActivitiesManager_maxParticipantsCount);
  swift_beginAccess();
  uint64_t v21 = *v20;
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t, void, uint64_t, uint64_t))((swift_isaMask & *v13) + 0xA0))(v7, v14, v16, v18 & 1, v19, v21);

  swift_bridgeObjectRelease();
  return sub_1006441B0((uint64_t)v7, type metadata accessor for MetricsEvent.Page);
}

id sub_10063E7FC()
{
  return sub_10063FA30(&OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___collectionViewLayout, (uint64_t (*)(uint64_t))sub_10063E81C);
}

char *sub_10063E81C(void *a1)
{
  id v2 = [objc_allocWithZone((Class)UICollectionViewCompositionalLayoutConfiguration) init];
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v4 = objc_allocWithZone((Class)type metadata accessor for ContainerDetailCompositionalLayout());
  _DWORD v13[4] = sub_100644A98;
  v13[5] = v3;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10050AE20;
  v13[3] = &unk_100FE3358;
  uint64_t v5 = _Block_copy(v13);
  swift_retain();
  uint64_t v6 = (char *)[v4 initWithSectionProvider:v5 configuration:v2];
  _Block_release(v5);
  swift_release();
  swift_release();
  id v7 = [a1 traitCollection];
  id v8 = [v7 userInterfaceIdiom];

  if (v8 == (id)6)
  {
    uint64_t v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v10 = (void (**)(void *))&v6[OBJC_IVAR____TtC5Music34ContainerDetailCompositionalLayout_willLayoutAttributes];
    uint64_t v11 = *(void *)&v6[OBJC_IVAR____TtC5Music34ContainerDetailCompositionalLayout_willLayoutAttributes];
    *uint64_t v10 = sub_100644AA0;
    v10[1] = (void (*)(void *))v9;
    swift_retain();
    sub_10006ADFC(v11);
    swift_release();
  }

  return v6;
}

uint64_t sub_10063E9E4(uint64_t a1, void *a2)
{
  uint64_t v99 = a1;
  uint64_t v3 = type metadata accessor for UIListSeparatorConfiguration.Visibility();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v96 = v3;
  uint64_t v97 = v4;
  __chkstk_darwin(v3);
  uint64_t v98 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v91 - v15;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v18 = (unsigned char *)Strong;
    objc_msgSend(objc_msgSend(a2, "container"), "effectiveContentSize");
    double v20 = v19;
    swift_unknownObjectRelease();
    char v21 = HI.SizeClass.init(_:)(v20);
    double v22 = HI.SizeClass.margin.getter(v21);
    uint64_t v94 = a2;
    id v23 = [a2 traitCollection];
    [v23 horizontalSizeClass];
    id v93 = v23;
    [v23 horizontalSizeClass];
    uint64_t v95 = v18;
    uint64_t v24 = (uint64_t *)&v18[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
    swift_beginAccess();
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t ObjectType = swift_getObjectType();
    v100[0] = v25;
    uint64_t v99 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 336))(v99, ObjectType, v26);
    int v28 = v99;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v6);
    UICollectionLayoutListConfiguration.init(appearance:)();
    uint64_t v29 = self;
    id v30 = [v29 clearColor];
    uint64_t v31 = UICollectionLayoutListConfiguration.backgroundColor.setter();
    uint64_t v32 = v10;
    uint64_t v33 = v11;
    if (v28 == 11)
    {
LABEL_3:
      uint64_t v34 = enum case for UIListSeparatorConfiguration.Visibility.hidden(_:);
      uint64_t v35 = v98;
      uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 104);
      uint64_t v97 = v33;
      uint64_t v37 = v16;
      uint64_t v38 = v32;
      uint64_t v39 = v96;
      v36(v98, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v96);
      double v40 = (void (*)(void *, void))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
      UIListSeparatorConfiguration.topSeparatorVisibility.setter();
      v40(v100, 0);
      uint64_t v41 = v39;
      uint64_t v32 = v38;
      uint64_t v16 = v37;
      uint64_t v33 = v97;
      v36(v35, v34, v41);
      id v42 = (void (*)(void *, void))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
LABEL_4:
      UIListSeparatorConfiguration.bottomSeparatorVisibility.setter();
      v42(v100, 0);
    }
    else
    {
      switch(v28)
      {
        case 1:
        case 4:
        case 8:
          goto LABEL_11;
        case 2:
          swift_allocObject();
          swift_unknownObjectWeakInit();
          UICollectionLayoutListConfiguration.leadingSwipeActionsConfigurationProvider.setter();
          swift_allocObject();
          swift_unknownObjectWeakInit();
          UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter();
          goto LABEL_14;
        case 3:
LABEL_14:
          uint64_t v51 = (void (*)(void *, void))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
          UIListSeparatorConfiguration.topSeparatorInsets.setter();
          v51(v100, 0);
          goto LABEL_15;
        case 5:
          uint64_t v53 = (void (*)(void *, void))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
          UIListSeparatorConfiguration.topSeparatorInsets.setter();
          v53(v100, 0);
          uint64_t v55 = *v24;
          uint64_t v54 = v24[1];
          uint64_t v56 = swift_getObjectType();
          v100[0] = v55;
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v54 + 128))(v56, v54) & 1) == 0) {
            goto LABEL_15;
          }
          goto LABEL_12;
        case 6:
          uint64_t v58 = *v24;
          uint64_t v57 = v24[1];
          uint64_t v59 = swift_getObjectType();
          v100[0] = v58;
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v57 + 248))(v59, v57)) {
            goto LABEL_21;
          }
          goto LABEL_11;
        case 7:
          uint64_t v61 = *v24;
          uint64_t v60 = v24[1];
          uint64_t v62 = swift_getObjectType();
          v100[0] = v61;
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v60 + 256))(v62, v60))
          {
LABEL_21:
            uint64_t v63 = (void (*)(void *, void))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
            UIListSeparatorConfiguration.topSeparatorInsets.setter();
            v63(v100, 0);
            unint64_t v52 = (void (*)(void *, void))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
            goto LABEL_22;
          }
LABEL_11:
          uint64_t v49 = (void (*)(void *, void))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
          UIListSeparatorConfiguration.topSeparatorInsets.setter();
          v49(v100, 0);
LABEL_12:
          (*(void (**)(char *, void, uint64_t))(v97 + 104))(v98, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v96);
          uint64_t v50 = (void (*)(void *, void))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
          UIListSeparatorConfiguration.bottomSeparatorVisibility.setter();
          v50(v100, 0);
          break;
        case 9:
          goto LABEL_3;
        case 10:
          if (v95[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_isShowingRelatedContent] == 1)
          {
            id v85 = [v29 secondarySystemBackgroundColor];
            UICollectionLayoutListConfiguration.backgroundColor.setter();
          }
          goto LABEL_3;
        default:
          uint64_t v44 = *(void *)(sub_10063AB78(v31) + OBJC_IVAR____TtC5Music17HeaderCoordinator_layout + 8);
          swift_release();
          if ((unint64_t)(v44 - 1) > 1
            || (uint64_t v46 = *v24,
                uint64_t v45 = v24[1],
                uint64_t v47 = swift_getObjectType(),
                v100[0] = v46,
                ((*(uint64_t (**)(uint64_t, uint64_t))(v45 + 264))(v47, v45) & 1) != 0))
          {
            uint64_t v86 = enum case for UIListSeparatorConfiguration.Visibility.hidden(_:);
            uint64_t v92 = v32;
            CGRect v87 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 104);
            CGRect v88 = v98;
            uint64_t v89 = v96;
            v87(v98, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v96);
            long long v90 = (void (*)(void *, void))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
            UIListSeparatorConfiguration.topSeparatorVisibility.setter();
            v90(v100, 0);
            v87(v88, v86, v89);
            uint64_t v32 = v92;
            id v42 = (void (*)(void *, void))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
            goto LABEL_4;
          }
          (*(void (**)(char *, void, uint64_t))(v97 + 104))(v98, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v96);
          uint64_t v48 = (void (*)(void *, void))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
          UIListSeparatorConfiguration.topSeparatorVisibility.setter();
          v48(v100, 0);
LABEL_15:
          unint64_t v52 = (void (*)(void *, void))UICollectionLayoutListConfiguration.separatorConfiguration.modify();
LABEL_22:
          UIListSeparatorConfiguration.bottomSeparatorInsets.setter();
          v52(v100, 0);
          break;
      }
    }
    id v65 = v93;
    uint64_t v64 = v94;
    id v66 = [v93 userInterfaceIdiom];
    sub_100057778(0, (unint64_t *)&unk_1010A8860);
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v16, v14, v32);
    uint64_t v43 = static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
    uint64_t v67 = v16;
    uint64_t v68 = *(void (**)(char *, uint64_t))(v33 + 8);
    v68(v67, v32);
    id v69 = [v64 traitCollection];
    uint64_t v70 = v64;
    id v71 = [v69 userInterfaceIdiom];

    double v72 = 0.0;
    if (v71 == (id)6)
    {
      objc_msgSend(objc_msgSend(v70, "container"), "effectiveContentSize");
      double v74 = v73;
      swift_unknownObjectRelease();
      uint64_t v75 = v70;
      if (qword_1010986B8 != -1) {
        swift_once();
      }
      int v76 = v99;
      if (*(double *)&qword_101129E08 < v74)
      {
        if (qword_1010986C0 != -1) {
          swift_once();
        }
        double v72 = v22 + *(double *)&qword_101129E10;
      }
    }
    else
    {
      uint64_t v75 = v70;
      int v76 = v99;
    }
    if (v76 != 11)
    {
      switch(v76)
      {
        case 1:
        case 4:
        case 6:
        case 7:
        case 8:
        case 9:
          break;
        case 2:
        case 3:
        case 5:
          if (v66 != (id)6) {
            goto LABEL_39;
          }
          double v79 = v22 + v72;
          goto LABEL_34;
        case 10:
          double v79 = 0.0;
          goto LABEL_43;
        default:
LABEL_39:
          objc_msgSend(objc_msgSend(v75, "container"), "contentInsets");
          double v84 = v83;
          swift_unknownObjectRelease();
          double v79 = v72 + v84;
LABEL_43:
          double v81 = 0.0;
          uint64_t v80 = (void *)v43;
          goto LABEL_35;
      }
    }
    objc_msgSend(objc_msgSend(v75, "container"), "contentInsets");
    double v78 = v77;
    swift_unknownObjectRelease();
    double v79 = v22 + v72 + v78;
LABEL_34:
    uint64_t v80 = (void *)v43;
    double v81 = v22;
LABEL_35:
    [v80 setContentInsets:0.0, v79, 0.0, v81];

    v68(v14, v32);
  }
  else
  {
    sub_100057778(0, (unint64_t *)&unk_1010A8860);
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v6);
    UICollectionLayoutListConfiguration.init(appearance:)();
    uint64_t v43 = static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  return v43;
}

uint64_t sub_10063F634(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v3 = (void *)Strong;
  uint64_t v4 = Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 8);
  swift_unknownObjectRetain();

  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 352))(a1, ObjectType, v5);
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_10063F704(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v3 = (void *)Strong;
  uint64_t v4 = Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 8);
  swift_unknownObjectRetain();

  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 360))(a1, ObjectType, v5);
  swift_unknownObjectRelease();
  return v7;
}

void sub_10063F7D4(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (char *)Strong;
    uint64_t v4 = Strong + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource;
    swift_beginAccess();
    uint64_t v5 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 344))(10, ObjectType, v5);
    if ((v8 & 1) != 0 || v7 != IndexPath.section.getter() || IndexPath.item.getter() || !a1) {
      goto LABEL_17;
    }
    id v9 = a1;
    uint64_t v10 = (void *)sub_10063FA10(v9);
    sub_10063D1E8(v10);

    uint64_t v12 = (char *)sub_10063FA10(v11);
    double v13 = *(double *)&v12[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metrics];

    if (qword_1010986B8 != -1) {
      swift_once();
    }
    if (*(double *)&qword_101129E08 >= v13) {
      goto LABEL_14;
    }
    if (qword_1010986C0 != -1) {
      swift_once();
    }
    double v14 = *(double *)&qword_101129E10;
    [v9 frame];
    if (v15 >= v14)
    {
LABEL_14:
      double v19 = *(double *)&v3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentLeadingPadding];
      *(void *)&v3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentLeadingPadding] = 0;
      if (v19 != 0.0)
      {
LABEL_15:
        sub_10063D3C8();
        swift_getKeyPath();
        swift_getKeyPath();
        static Published.subscript.setter();
      }
    }
    else
    {
      [v9 frame];
      double v17 = v14 - v16;
      double v18 = *(double *)&v3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentLeadingPadding];
      *(double *)&v3[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentLeadingPadding] = v17;
      if (v18 != v17) {
        goto LABEL_15;
      }
    }

LABEL_17:
  }
}

id sub_10063FA10()
{
  return sub_10063FA30(&OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___collectionView, (uint64_t (*)(uint64_t))sub_10063FA94);
}

id sub_10063FA30(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

char *sub_10063FA94(uint64_t a1)
{
  id v2 = sub_10063E7FC();
  id v3 = objc_allocWithZone((Class)type metadata accessor for HIMetricsCollectionView());
  id v4 = sub_10013D214(v2, 0, 0);
  id v5 = (void *)(a1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 216))(ObjectType, v6);
  uint64_t v10 = (char *)UIView.withAccessibilityIdentifier(_:)(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  [v10 setDataSource:*v5];
  [v10 setDelegate:*v5];
  [v10 setPrefetchDataSource:*v5];
  [v10 setAlwaysBounceVertical:1];
  [v10 setKeyboardDismissMode:1];
  [v10 setAllowsFocus:1];
  [v10 setRemembersLastFocusedIndexPath:1];
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = (uint64_t (**)(uint64_t, uint64_t))&v10[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate];
  uint64_t v13 = *(void *)&v10[OBJC_IVAR____TtC5Music23HIMetricsCollectionView_metricsDidUpdate];
  *uint64_t v12 = sub_100644A90;
  v12[1] = (uint64_t (*)(uint64_t, uint64_t))v11;
  sub_10006ADFC(v13);
  return v10;
}

uint64_t sub_10063FC54(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v4 = (void *)result;
    uint64_t v5 = result + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource;
    swift_beginAccess();
    uint64_t v6 = *(void *)(v5 + 8);
    swift_unknownObjectRetain();

    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 320))(a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10063FD14(uint64_t a1@<X8>)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t *)&v1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v65 = v9;
  uint64_t v12 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v10 + 344))(0, ObjectType, v10);
  uint64_t v13 = 0;
  if (v14) {
    goto LABEL_23;
  }
  uint64_t v15 = v12;
  id v16 = [v2 view];
  if (!v16) {
    goto LABEL_43;
  }
  double v17 = v16;
  id v18 = [v16 window];

  if (v18) {
    goto LABEL_17;
  }
  uint64_t v63 = v15;
  uint64_t v64 = 0;
  id v19 = [self sharedApplication];
  id v20 = [v19 connectedScenes];
  sub_100057778(0, (unint64_t *)&qword_10109BA70);
  sub_10006B444((unint64_t *)&qword_10109CF60, (unint64_t *)&qword_10109BA70);
  uint64_t v21 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1006BCD84(v21);
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  if (!(v23 >> 62))
  {
    id v18 = v64;
    if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  id v18 = v64;
  if (!v28) {
    goto LABEL_13;
  }
LABEL_6:
  if ((v23 & 0xC000000000000001) != 0)
  {
    id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_9;
  }
  if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  id v24 = *(id *)(v23 + 32);
LABEL_9:
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();

  id v19 = [v25 keyWindow];
  if (!v19) {
    goto LABEL_15;
  }
  id v26 = [v2 view];
  if (!v26)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v27 = v26;
  [v19 addSubview:v26];

LABEL_14:
LABEL_15:
  id v29 = [v2 view];
  if (!v29)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  id v30 = v29;
  [v29 layoutIfNeeded];

LABEL_17:
  id v31 = sub_10063FA10();
  IndexPath.init(item:section:)();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v33 = [v31 cellForItemAtIndexPath:isa];

  if (!v33)
  {
    if (v18) {
      goto LABEL_23;
    }
    id v62 = [v2 view];
    if (!v62)
    {
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    goto LABEL_33;
  }
  uint64_t v34 = *(void *)(sub_10063AB78() + 16);
  swift_release();
  if (v34)
  {
    uint64_t v35 = *(void **)(sub_10063AB78() + OBJC_IVAR____TtC5Music17HeaderCoordinator_layout + 8);
    LOBYTE(v7) = (unint64_t)v35 < 3;
    if ((unint64_t)v35 >= 3)
    {
      [v35 frame];
      uint64_t v13 = v56;
      uint64_t v36 = v57;
      uint64_t v37 = v58;
      uint64_t v38 = v59;
      swift_release();

      if (!v18)
      {
LABEL_30:
        id v60 = [v2 view];
        if (v60)
        {
          id v61 = v60;
LABEL_39:
          [v61 removeFromSuperview];

          goto LABEL_40;
        }
        goto LABEL_46;
      }
      LOBYTE(v7) = 0;
LABEL_40:
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v36;
      *(void *)(a1 + 16) = v37;
      *(void *)(a1 + 24) = v38;
      *(unsigned char *)(a1 + 32) = (_BYTE)v7;
      return;
    }
    swift_release();

    if (!v18)
    {
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      goto LABEL_30;
    }
LABEL_23:
    LOBYTE(v7) = 1;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    goto LABEL_40;
  }
  uint64_t v65 = 0x6B726F77747241;
  unint64_t v66 = 0xE700000000000000;
  uint64_t v39 = v33;
  double v40 = (void *)UIView.findPresentationSourceView<A>(id:)();
  if (!v40)
  {

    if (v18) {
      goto LABEL_23;
    }
    id v62 = [v2 view];
    if (!v62)
    {
      __break(1u);
LABEL_37:

      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      if (v18) {
        goto LABEL_40;
      }
      goto LABEL_38;
    }
LABEL_33:
    id v61 = v62;
    LOBYTE(v7) = 1;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    goto LABEL_39;
  }
  uint64_t v39 = v40;
  id v41 = [v40 superview];
  LOBYTE(v7) = v41 == 0;
  if (!v41) {
    goto LABEL_37;
  }
  id v42 = v41;
  [v39 frame];
  double v44 = v43;
  double v46 = v45;
  double v48 = v47;
  double v50 = v49;
  id v51 = [v2 view];
  [v42 convertRect:v51 toView:v44];
  uint64_t v13 = v52;
  uint64_t v36 = v53;
  uint64_t v37 = v54;
  uint64_t v38 = v55;

  if (v18) {
    goto LABEL_40;
  }
LABEL_38:
  id v61 = [v2 view];
  if (v61) {
    goto LABEL_39;
  }
LABEL_48:
  __break(1u);
}

id sub_100640348()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100063814((uint64_t *)&unk_10109B9F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  id result = (id)__chkstk_darwin(v5);
  uint64_t v9 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hasScrolledtoProminentItem;
  if ((v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hasScrolledtoProminentItem] & 1) == 0)
  {
    id result = [v0 isViewLoaded];
    if (result)
    {
      uint64_t v11 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
      swift_beginAccess();
      uint64_t v12 = *(void *)v11;
      uint64_t v13 = *((void *)v11 + 1);
      uint64_t ObjectType = swift_getObjectType();
      v52[2] = v12;
      (*(void (**)(uint64_t, uint64_t))(v13 + 120))(ObjectType, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
        return (id)sub_1000637B8((uint64_t)v4, (uint64_t *)&unk_10109B9F0);
      }
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
      v1[v10] = 1;
      id v15 = sub_10063FA10();
      id v16 = [v15 indexPathsForVisibleItems];

      uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      __chkstk_darwin(v18);
      v52[-2] = v9;
      LOBYTE(v16) = sub_1007C74F0((uint64_t (*)(char *))sub_1006449C8, (uint64_t)&v52[-4], v17);
      swift_bridgeObjectRelease();
      if (v16)
      {
        id v19 = sub_10063FA10();
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v21 = [v19 cellForItemAtIndexPath:isa];

        if (v21)
        {
          [v21 frame];
          double MinY = CGRectGetMinY(v53);
          id v23 = sub_10063FA10();
          [v23 bounds];
          CGFloat v25 = v24;
          CGFloat v27 = v26;
          CGFloat v29 = v28;
          CGFloat v31 = v30;

          v54.origin.x = v25;
          v54.origin.y = v27;
          v54.size.width = v29;
          v54.size.height = v31;
          double v32 = CGRectGetMinY(v54);
          id result = [v1 view];
          if (!result)
          {
            __break(1u);
            goto LABEL_17;
          }
          id v33 = result;
          [result directionalLayoutMargins];
          double v35 = v34;

          if (v32 + v35 < MinY)
          {
            [v21 frame:v32 + v35];
            double MaxY = CGRectGetMaxY(v55);
            id v37 = sub_10063FA10();
            [v37 bounds];
            CGFloat v39 = v38;
            CGFloat v41 = v40;
            CGFloat v43 = v42;
            CGFloat v45 = v44;

            v56.origin.x = v39;
            v56.origin.y = v41;
            v56.size.width = v43;
            v56.size.height = v45;
            double v46 = CGRectGetMaxY(v56);
            id result = [v1 view];
            if (result)
            {
              double v47 = result;
              [result directionalLayoutMargins];
              double v49 = v48;

              if (MaxY < v46 - v49) {
                return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
              }
              goto LABEL_13;
            }
LABEL_17:
            __break(1u);
            return result;
          }
        }
      }
LABEL_13:
      id v50 = sub_10063FA10();
      Class v51 = IndexPath._bridgeToObjectiveC()().super.isa;
      [v50 scrollToItemAtIndexPath:v51 atScrollPosition:2 animated:1];

      return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
  }
  return result;
}

char *sub_1006407AC()
{
  uint64_t v1 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsButton);
  if (v2)
  {
    uint64_t v3 = *(char **)(v0
                  + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsButton);
  }
  else
  {
    uint64_t v4 = sub_10064080C();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    uint64_t v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

char *sub_10064080C()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = SymbolButton.Configuration.barButtonContextualAction.unsafeMutableAddressor();
  sub_100644148(v5, (uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
  id v6 = objc_allocWithZone((Class)type metadata accessor for SymbolButton(0));
  uint64_t v7 = SymbolButton.init(configuration:handler:)((uint64_t)v4, 0, 0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unint64_t, unint64_t))((swift_isaMask & *(void *)v7) + 0x100))(0xD00000000000001DLL, 0x8000000100DC3100);
  uint64_t v8 = v7;
  NSString v9 = String._bridgeToObjectiveC()();
  [v8 setAccessibilityLabel:v9];

  uint64_t v10 = AccessibilityIdentifier.containerDetailContextualActionsButton.unsafeMutableAddressor();
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v11, v12);
  uint64_t v13 = v8;
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setLargeContentTitle:v14];

  [v13 setContextMenuInteractionEnabled:1];
  [v13 setShowsMenuAsPrimaryAction:1];
  return v13;
}

id sub_100640AD8()
{
  uint64_t v1 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsBarButtonItem;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsBarButtonItem);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsBarButtonItem);
  }
  else
  {
    uint64_t v4 = sub_1006407AC();
    id v5 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v4];

    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_100640B9C()
{
  return sub_100641E90(0, (uint64_t (*)(void))type metadata accessor for ContainerDetail.ViewController);
}

uint64_t sub_100640DA0()
{
  return type metadata accessor for ContainerDetail.ViewController(0);
}

uint64_t type metadata accessor for ContainerDetail.ViewController(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B4598);
}

void sub_100640DC8()
{
  sub_100648184(319, (unint64_t *)&qword_1010ABE30, (void (*)(uint64_t))&type metadata accessor for Artwork);
  if (v0 <= 0x3F)
  {
    type metadata accessor for RelatedContentProvider.State();
    if (v1 <= 0x3F)
    {
      sub_100640F78();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_100640F78()
{
  if (!qword_1010B45B0)
  {
    sub_10006389C(&qword_10109BA58);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1010B45B0);
    }
  }
}

uint64_t sub_100640FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  _OWORD v8[2] = a1;
  v8[3] = a4;
  uint64_t v9 = type metadata accessor for AppInterfaceContext.Activity(0);
  v8[8] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v8[9] = v10;
  v8[10] = *(void *)(v10 + 64);
  v8[11] = swift_task_alloc();
  v8[12] = swift_task_alloc();
  v8[13] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[14] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1006410F4, v12, v11);
}

uint64_t sub_1006410F4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v2 = *(void *)(v0 + 104);
    uint64_t v4 = *(void *)(v0 + 88);
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v6 = *(void *)(v0 + 48);
    uint64_t v5 = *(void *)(v0 + 56);
    uint64_t v8 = *(void *)(v0 + 32);
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v9 = sub_100063814((uint64_t *)&unk_10109C150);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v2, v8, v9);
    uint64_t v10 = (uint64_t *)(v2 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20));
    *uint64_t v10 = v7;
    v10[1] = v6;
    v10[2] = v5;
    swift_storeEnumTagMultiPayload();
    sub_100644148(v2, v3, type metadata accessor for AppInterfaceContext.Activity);
    sub_100644148(v3, v4, type metadata accessor for AppInterfaceContext.Activity);
    unint64_t v11 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = 0;
    *(void *)(v12 + 24) = 0;
    sub_1006448A0(v4, v12 + v11, type metadata accessor for AppInterfaceContext.Activity);
    sub_1003FD28C(v7, v6, v5);
    swift_retain();
    sub_100693F74(v3, (uint64_t)sub_1000F2660, v12);
    swift_release();
    swift_release();
    sub_1006441B0(v3, type metadata accessor for AppInterfaceContext.Activity);
    sub_1006441B0(v2, type metadata accessor for AppInterfaceContext.Activity);
  }
  **(unsigned char **)(v0 + 16) = v1 == 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

void sub_10064132C(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [a1 zoomedViewController];
  type metadata accessor for ContainerDetail.ViewController(0);
  if (swift_dynamicCastClass())
  {
    sub_10063FD14((uint64_t)v9);
    sub_10003CABC((uint64_t)v9, (uint64_t)v10, &qword_10109BBE0);
    if (v11 == 1)
    {
      CGFloat x = CGRectNull.origin.x;
      double y = CGRectNull.origin.y;
      CGFloat width = CGRectNull.size.width;
      double height = CGRectNull.size.height;
    }
    else
    {
      CGFloat x = *(double *)v10;
      double y = *(double *)&v10[1];
      CGFloat width = *(double *)&v10[2];
      double v8 = *(double *)&v10[3];

      double height = v8 - fmin(y, 0.0);
      if (y < 0.0) {
        double y = 0.0;
      }
    }
  }
  else
  {

    CGFloat x = CGRectNull.origin.x;
    double y = CGRectNull.origin.y;
    CGFloat width = CGRectNull.size.width;
    double height = CGRectNull.size.height;
  }
  *(CGFloat *)a2 = x;
  *(double *)(a2 + 8) = y;
  *(CGFloat *)(a2 + 16) = width;
  *(double *)(a2 + 24) = height;
  *(unsigned char *)(a2 + 32) = 0;
}

uint64_t sub_10064143C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100014CA4(v0, qword_101129E18);
  sub_100050A90(v0, (uint64_t)qword_101129E18);
  return static Logger.music(_:)();
}

unint64_t sub_10064161C(double a1, double a2, double a3, double a4)
{
  uint64_t v26 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void (***)(char *, uint64_t))(v26 - 8);
  __chkstk_darwin(v26);
  CGFloat v25 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (objc_class *)type metadata accessor for ContainerDetailCompositionalLayout();
  v28.receiver = v4;
  v28.super_class = v11;
  [super layoutAttributesForElementsInRect:a1, a2, a3, a4];
  if (!v12) {
    return 0;
  }
  uint64_t v13 = v12;
  sub_100057778(0, (unint64_t *)&qword_1010AC360);
  unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v14 >> 62) {
    goto LABEL_15;
  }
  uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v15; uint64_t v15 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v16 = &v4[OBJC_IVAR____TtC5Music34ContainerDetailCompositionalLayout_willLayoutAttributes];
    unint64_t v27 = v14 & 0xC000000000000001;
    double v24 = v9 + 1;
    uint64_t v17 = 4;
    uint64_t v18 = v25;
    while (1)
    {
      uint64_t v4 = (char *)(v17 - 4);
      id v19 = v27
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (char *)*(id *)(v14 + 8 * v17);
      uint64_t v9 = (void (**)(char *, uint64_t))v19;
      if (__OFADD__(v4, 1)) {
        break;
      }
      id v20 = *(void (**)(void, char *))v16;
      if (*(void *)v16)
      {
        swift_retain();
        unint64_t v21 = v14;
        id v22 = [v9 indexPath];
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        unint64_t v14 = v21;
        v20(v9, v18);
        sub_10006ADFC((uint64_t)v20);
        (*v24)(v18, v26);
      }

      if (v17 - 3 == v15) {
        goto LABEL_16;
      }
      ++v17;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain_n();
  }
LABEL_16:
  swift_bridgeObjectRelease_n();
  return v14;
}

id sub_100641CC4(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  double v8 = &v4[OBJC_IVAR____TtC5Music34ContainerDetailCompositionalLayout_willLayoutAttributes];
  *(void *)double v8 = 0;
  *((void *)v8 + 1) = 0;
  if (a2)
  {
    _DWORD v13[4] = a2;
    v13[5] = a3;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_10050AE20;
    v13[3] = &unk_100FE3268;
    uint64_t v9 = _Block_copy(v13);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = (objc_class *)type metadata accessor for ContainerDetailCompositionalLayout();
  v14.receiver = v4;
  v14.super_class = v10;
  id v11 = [super initWithSection:a1 sectionProvider:v9 configuration:a4];

  sub_10006ADFC(a2);
  _Block_release(v9);
  return v11;
}

id sub_100641E78(uint64_t a1)
{
  return sub_100641E90(a1, type metadata accessor for ContainerDetailCompositionalLayout);
}

id sub_100641E90(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for ContainerDetailCompositionalLayout()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ContainerDetail.Section(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *id result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100641FCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContainerDetail.Section()
{
  return &type metadata for ContainerDetail.Section;
}

unint64_t destroy for ContainerDetail.LoadingState(unint64_t *a1)
{
  return sub_1000CFD74(*a1);
}

unint64_t *_s5Music15ContainerDetailV12LoadingStateOwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_1000CFC8C(*a2);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

unint64_t *assignWithCopy for ContainerDetail.LoadingState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_1000CFC8C(*a2);
  unint64_t v6 = *a1;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_1000CFD74(v6);
  return a1;
}

unint64_t *assignWithTake for ContainerDetail.LoadingState(unint64_t *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 16);
  unint64_t v4 = *a1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_1000CFD74(v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContainerDetail.LoadingState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)a1 >> 2) & 0xFFFFFF80 | (*(void *)a1 >> 1);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for ContainerDetail.LoadingState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)id result = (4 * -a2) & 0x3FFFFFE00 | (2 * (-a2 & 0x7FLL));
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1006421A4(uint64_t a1)
{
  uint64_t v1 = *(void *)a1 >> 62;
  if (v1 == 3) {
    return (*(_DWORD *)a1 & 1 | (2 * ((*(void *)a1 >> 8) & 1)) | (4 * *(_DWORD *)(a1 + 8))) + 3;
  }
  else {
    return v1;
  }
}

void *sub_1006421D0(void *result, uint64_t a2)
{
  if (a2 < 3)
  {
    *id result = *result & 0x101 | (a2 << 62);
  }
  else
  {
    result[1] = (unint64_t)(a2 - 3) >> 2;
    result[2] = 0;
    *id result = (((int)a2 - 3) << 7) & 0x100 | ((_BYTE)a2 - 3) & 1 | 0xC000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContainerDetail.LoadingState()
{
  return &type metadata for ContainerDetail.LoadingState;
}

ValueMetadata *type metadata accessor for ContainerDetail()
{
  return &type metadata for ContainerDetail;
}

unint64_t sub_100642234()
{
  unint64_t result = qword_1010B45F0;
  if (!qword_1010B45F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B45F0);
  }
  return result;
}

uint64_t sub_100642288(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 416))(a1, ObjectType, v4);
}

uint64_t sub_10064230C()
{
  return sub_100063858(&qword_1010B45F8, &qword_1010B4600);
}

uint64_t sub_100642348(uint64_t a1)
{
  uint64_t result = sub_100644908(&qword_1010B4630, (void (*)(uint64_t))type metadata accessor for ContainerDetail.ViewController);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1006423A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Genre();
  uint64_t v23 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Curator();
  uint64_t v22 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Artist();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ContainerDetail.AttributionItem(0);
  __chkstk_darwin(v12);
  objc_super v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100644148(a1, (uint64_t)v14, type metadata accessor for ContainerDetail.AttributionItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 5u:
      sub_1006441B0((uint64_t)v14, type metadata accessor for ContainerDetail.AttributionItem);
      return 0;
    case 2u:
      uint64_t v18 = v22;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v7, v14, v5);
      Curator.catalogID.getter();
      uint64_t v17 = v19;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v5);
      goto LABEL_6;
    case 4u:
      uint64_t v20 = v23;
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v4, v14, v2);
      Genre.catalogID.getter();
      uint64_t v17 = v21;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v2);
      goto LABEL_6;
    default:
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
      Artist.catalogID.getter();
      uint64_t v17 = v16;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
LABEL_6:
      swift_bridgeObjectRelease();
      if (v17) {
        return 0;
      }
      else {
        return 0xD000000000000029;
      }
  }
}

uint64_t sub_100642730(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100642750, 0, 0);
}

uint64_t sub_100642750()
{
  sub_1006360D8(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006427B4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100642830(uint64_t a1)
{
  uint64_t v2 = sub_100063814((uint64_t *)&unk_10109A128);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_10006CAB8(a1, (uint64_t)&v9 - v6, (uint64_t *)&unk_10109A128);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10006CAB8((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_10109A128);
  swift_retain();
  static Published.subscript.setter();
  return sub_1000637B8((uint64_t)v7, (uint64_t *)&unk_10109A128);
}

void sub_100642940(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v7 = *(void (**)(double, double))(a1 + 32);
  swift_retain();
  id v8 = a2;
  v7(a3, a4);
  swift_release();
}

uint64_t sub_1006429C0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_100642A50(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_100642BA8((uint64_t)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_100642BA8((uint64_t)v7, v4, v2);
    swift_slowDealloc();
  }
  return v2;
}

uint64_t sub_100642BA8(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (unint64_t *)result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v14 = v13 | (v6 << 6);
LABEL_19:
    uint64_t v18 = *(void *)(*(void *)(a3 + 56) + 8 * v14);
    uint64_t result = swift_beginAccess();
    uint64_t v19 = *(void *)(v18 + 48);
    uint64_t v20 = *(void *)(v19 + 16);
    if (!v20 || (*(unsigned char *)(v19 + 16 * v20 + 24) & 1) == 0)
    {
      *(unint64_t *)((char *)v4 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v5++, 1)) {
        goto LABEL_25;
      }
    }
  }
  int64_t v15 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v15 >= v11) {
    return sub_100642D48(v4, a2, v5, a3);
  }
  unint64_t v16 = *(void *)(v7 + 8 * v15);
  ++v6;
  if (v16) {
    goto LABEL_18;
  }
  int64_t v6 = v15 + 1;
  if (v15 + 1 >= v11) {
    return sub_100642D48(v4, a2, v5, a3);
  }
  unint64_t v16 = *(void *)(v7 + 8 * v6);
  if (v16)
  {
LABEL_18:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v6 << 6);
    goto LABEL_19;
  }
  int64_t v17 = v15 + 2;
  if (v17 >= v11) {
    return sub_100642D48(v4, a2, v5, a3);
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16)
  {
    int64_t v6 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v6 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v6 >= v11) {
      return sub_100642D48(v4, a2, v5, a3);
    }
    unint64_t v16 = *(void *)(v7 + 8 * v6);
    ++v17;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100642D48(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_100063814(&qword_101099240);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v9 = result;
  double v32 = a1;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v33) {
        return v9;
      }
      unint64_t v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v33) {
          return v9;
        }
        unint64_t v16 = v32[v11];
        if (!v16)
        {
          uint64_t v17 = v15 + 2;
          if (v17 >= v33) {
            return v9;
          }
          unint64_t v16 = v32[v17];
          if (!v16)
          {
            while (1)
            {
              uint64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_39;
              }
              if (v11 >= v33) {
                return v9;
              }
              unint64_t v16 = v32[v11];
              ++v17;
              if (v16) {
                goto LABEL_22;
              }
            }
          }
          uint64_t v11 = v17;
        }
      }
LABEL_22:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = *(void *)(*(void *)(v4 + 56) + 8 * v14);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    swift_retain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    double v30 = (void *)(*(void *)(v9 + 48) + 16 * v25);
    *double v30 = v20;
    v30[1] = v19;
    *(void *)(*(void *)(v9 + 56) + 8 * v25) = v21;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100642FD0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void *sub_10064305C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  int64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_1005BDB98(0, v2, 0);
  uint64_t result = (void *)sub_100642FD0(a1);
  uint64_t v6 = (uint64_t)result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v24 = v2;
  int v25 = v5;
  uint64_t v26 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v16 = a2(v13, v14, v15);
    swift_release();
    uint64_t result = (void *)swift_bridgeObjectRelease();
    unint64_t v18 = _swiftEmptyArrayStorage[2];
    unint64_t v17 = _swiftEmptyArrayStorage[3];
    if (v18 >= v17 >> 1) {
      uint64_t result = (void *)sub_1005BDB98(v17 > 1, v18 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v18 + 1;
    _swiftEmptyArrayStorage[v18 + 4] = v16;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v19 = *(void *)(v26 + 8 * v11);
    if ((v19 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v25;
    if (*(_DWORD *)(a1 + 36) != v25) {
      goto LABEL_27;
    }
    unint64_t v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      int64_t v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v24;
    }
    else
    {
      unint64_t v21 = v11 + 1;
      unint64_t v22 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v24;
      if (v11 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v26 + 8 * v21);
        if (v23)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v11)
          {
            unint64_t v23 = *(void *)(a1 + 80 + 8 * v11++);
            if (v23)
            {
              unint64_t v21 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1006432A4(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4 = sub_100063814((uint64_t *)&unk_1010B4690);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v22 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v23 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v23) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v22 + 8 * v18);
    ++v12;
    if (!v19)
    {
      int64_t v12 = v18 + 1;
      if (v18 + 1 >= v23) {
        return swift_release();
      }
      unint64_t v19 = *(void *)(v22 + 8 * v12);
      if (!v19)
      {
        int64_t v12 = v18 + 2;
        if (v18 + 2 >= v23) {
          return swift_release();
        }
        unint64_t v19 = *(void *)(v22 + 8 * v12);
        if (!v19)
        {
          int64_t v12 = v18 + 3;
          if (v18 + 3 >= v23) {
            return swift_release();
          }
          unint64_t v19 = *(void *)(v22 + 8 * v12);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v14 = __clz(__rbit64(v19)) + (v12 << 6);
LABEL_5:
    uint64_t v15 = *(void *)(a1 + 48);
    uint64_t v16 = type metadata accessor for IndexPath();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v6, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, v16);
    uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8 * v14);
    *(void *)&v6[*(int *)(v4 + 48)] = v17;
    swift_retain();
    a2(v6, v17);
    uint64_t result = sub_1000637B8((uint64_t)v6, (uint64_t *)&unk_1010B4690);
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v23) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v22 + 8 * v20);
  if (v19)
  {
    int64_t v12 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v12 >= v23) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v22 + 8 * v12);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

char *sub_100643510(void *a1, uint64_t a2, void *a3)
{
  uint64_t v85 = a2;
  uint64_t v5 = sub_100063814(&qword_10109EC90);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Playlist();
  double v77 = *(unsigned int (***)(void, void, void))(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  double v74 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v75 = (char *)&v74 - v12;
  __chkstk_darwin(v11);
  int v76 = (char *)&v74 - v13;
  uint64_t v14 = sub_100063814((uint64_t *)&unk_10109BF50);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v80 = (uint64_t)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v82 = (char *)&v74 - v17;
  uint64_t v18 = type metadata accessor for ContainerDetail.Source(0);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v79 = (uint64_t)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v81 = (uint64_t)&v74 - v21;
  uint64_t v22 = sub_100063814((uint64_t *)&unk_10109C800);
  __chkstk_darwin(v22 - 8);
  int64_t v24 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Album();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v74 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v27);
  double v32 = (char *)&v74 - v31;
  __chkstk_darwin(v30);
  double v34 = (char *)&v74 - v33;
  id v84 = a3;
  if (a3
    && (double v35 = (uint64_t *)MPIdentifierSet.Purpose.Options.all.unsafeMutableAddressor(),
        MPModelObject.bestIdentifier(for:)(*v35, 0),
        v36))
  {
    uint64_t v78 = MusicItemID.init(_:)();
    double v83 = v37;
  }
  else
  {
    uint64_t v78 = 0;
    double v83 = 0;
  }
  self;
  if (!swift_dynamicCastObjCClass())
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      id v43 = a1;
      dispatch thunk of LegacyModelObjectConvertible.init(_:)();
      double v44 = v77;
      if (((unsigned int (**)(char *, uint64_t, uint64_t))v77)[6](v7, 1, v8) != 1)
      {
        id v62 = v76;
        ((unsigned int (**)(char *, char *, uint64_t))v44)[4](v76, v7, v8);
        uint64_t v63 = (unsigned int (*)(char *, char *, uint64_t))v44[2];
        uint64_t v64 = v75;
        v63(v75, v62, v8);
        uint64_t v65 = v81;
        sub_100644148(v85, v81, type metadata accessor for ContainerDetail.Source);
        uint64_t v66 = type metadata accessor for URL();
        uint64_t v67 = (uint64_t)v82;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v82, 1, 1, v66);
        uint64_t v68 = (uint64_t)v74;
        v63(v74, v64, v8);
        uint64_t v69 = v79;
        sub_100644148(v65, v79, type metadata accessor for ContainerDetail.Source);
        uint64_t v70 = v80;
        sub_10006CAB8(v67, v80, (uint64_t *)&unk_10109BF50);
        id v71 = sub_10082D430(v68, v69, v78, v83, v70);
        double v72 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
        uint64_t v58 = sub_100363F14(v71, v72);
        sub_1000637B8(v67, (uint64_t *)&unk_10109BF50);
        sub_1006441B0(v65, type metadata accessor for ContainerDetail.Source);
        double v73 = (void (*)(char *, uint64_t))v44[1];
        v73(v64, v8);

        sub_1006441B0(v85, type metadata accessor for ContainerDetail.Source);
        v73(v76, v8);
        return v58;
      }
      swift_bridgeObjectRelease();
      sub_1000637B8((uint64_t)v7, &qword_10109EC90);
      if (qword_1010986C8 != -1) {
        swift_once();
      }
      uint64_t v45 = type metadata accessor for Logger();
      sub_100050A90(v45, (uint64_t)qword_101129E18);
      double v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v46, v47))
      {
        double v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v48 = 0;
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "Unable to convert playlist to MusicKit Item", v48, 2u);
        swift_slowDealloc();
      }
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    goto LABEL_21;
  }
  id v38 = a1;
  dispatch thunk of LegacyModelObjectConvertible.init(_:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1000637B8((uint64_t)v24, (uint64_t *)&unk_10109C800);
    if (qword_1010986C8 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_100050A90(v39, (uint64_t)qword_101129E18);
    double v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v40, v41))
    {
      double v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Unable to convert album to MusicKit Item", v42, 2u);
      swift_slowDealloc();
    }

LABEL_21:
    sub_1006441B0(v85, type metadata accessor for ContainerDetail.Source);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v34, v24, v25);
  double v49 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v49(v32, v34, v25);
  uint64_t v50 = v81;
  sub_100644148(v85, v81, type metadata accessor for ContainerDetail.Source);
  uint64_t v51 = type metadata accessor for URL();
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56);
  double v77 = (unsigned int (**)(void, void, void))v38;
  uint64_t v53 = (uint64_t)v82;
  v52(v82, 1, 1, v51);
  v49(v29, v32, v25);
  uint64_t v54 = v79;
  sub_100644148(v50, v79, type metadata accessor for ContainerDetail.Source);
  uint64_t v55 = v80;
  sub_10006CAB8(v53, v80, (uint64_t *)&unk_10109BF50);
  CGRect v56 = sub_10045A52C((uint64_t)v29, v54, v78, (uint64_t)v83, v55);
  uint64_t v57 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
  uint64_t v58 = sub_1003639C4(v56, v57);
  sub_1000637B8(v53, (uint64_t *)&unk_10109BF50);
  sub_1006441B0(v50, type metadata accessor for ContainerDetail.Source);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v26 + 8);
  v59(v32, v25);
  id v60 = v77;

  sub_1006441B0(v85, type metadata accessor for ContainerDetail.Source);
  v59(v34, v25);
  return v58;
}

char *sub_100643EA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = sub_100063814((uint64_t *)&unk_10109BF50);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v16 = type metadata accessor for ContainerDetail.Source(0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v28 - v20;
  *((unsigned char *)&v28 - v20) = 0;
  swift_storeEnumTagMultiPayload();
  sub_10006CAB8(a5, (uint64_t)v15, (uint64_t *)&unk_10109BF50);
  sub_100644148((uint64_t)v21, (uint64_t)v18, type metadata accessor for ContainerDetail.Source);
  sub_10006CAB8((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_10109BF50);
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_10045B37C(a1, a2, (uint64_t)v18, (uint64_t)v12);
  uint64_t v23 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
  int64_t v24 = sub_1003639C4(v22, v23);
  sub_1000637B8((uint64_t)v15, (uint64_t *)&unk_10109BF50);
  sub_1006441B0((uint64_t)v21, type metadata accessor for ContainerDetail.Source);
  swift_beginAccess();
  type metadata accessor for AlbumDetailDataSource(0);
  uint64_t v25 = swift_dynamicCastClass();
  if (v25)
  {
    uint64_t v26 = v25 + OBJC_IVAR____TtC5Music21AlbumDetailDataSource_lyricsSnippetData;
    *(void *)uint64_t v26 = a1;
    *(void *)(v26 + 8) = a2;
    *(void *)(v26 + 16) = a3;
    *(unsigned char *)(v26 + 24) = a4 & 1;
  }
  swift_bridgeObjectRelease();
  sub_1000637B8(a5, (uint64_t *)&unk_10109BF50);
  return v24;
}

uint64_t type metadata accessor for ContainerDetail.Source(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B4878);
}

uint64_t type metadata accessor for ContainerDetail.AttributionItem(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010B47C8);
}

uint64_t sub_100644148(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006441B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100644210()
{
  uint64_t v1 = *(void *)(type metadata accessor for ContainerDetail.AttributionItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v3 = type metadata accessor for Artist();
      goto LABEL_8;
    case 1u:
      uint64_t v3 = type metadata accessor for SocialProfile();
      goto LABEL_8;
    case 2u:
      uint64_t v3 = type metadata accessor for Curator();
      goto LABEL_8;
    case 3u:
      uint64_t v3 = type metadata accessor for RadioShow();
      goto LABEL_8;
    case 4u:
      uint64_t v3 = type metadata accessor for Genre();
      goto LABEL_8;
    case 5u:
      uint64_t v3 = type metadata accessor for Playlist();
LABEL_8:
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
      break;
    default:
      break;
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006443A0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ContainerDetail.AttributionItem(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100081D08;
  return sub_1006373CC(a1, v6, v7, v8, v9);
}

uint64_t sub_1006444C4()
{
  uint64_t v1 = *(void *)(type metadata accessor for AppInterfaceContext.Activity(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  uint64_t v3 = (id *)(v0 + v2);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for AppInterfaceContext.Activity.Destination(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 4)
      {

        uint64_t v7 = (char *)v3 + *(int *)(sub_100063814((uint64_t *)&unk_1010A1820) + 48);
        uint64_t v8 = type metadata accessor for UITraitOverrides();
        goto LABEL_18;
      }
      if (EnumCaseMultiPayload == 3)
      {
        uint64_t v5 = type metadata accessor for Artist();
        (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v2, v5);
      }
      break;
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v7 = (char *)v3 + *(int *)(sub_100063814((uint64_t *)&unk_1010A9360) + 48);
      uint64_t v8 = type metadata accessor for SearchScope();
LABEL_18:
      uint64_t v15 = v8;
      uint64_t v16 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v7, 1, v8)) {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v15);
      }
      break;
    case 2u:

      goto LABEL_9;
    case 3u:
      uint64_t v9 = type metadata accessor for Playlist.Folder();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v0 + v2, 1, v9)) {
        (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v0 + v2, v9);
      }
      uint64_t v11 = type metadata accessor for PlaylistCreation.Context(0);
      swift_bridgeObjectRelease();
      uint64_t v12 = (char *)v3 + *(int *)(v11 + 24);
      uint64_t v13 = sub_100063814((uint64_t *)&unk_10109C150);
      uint64_t v14 = *(void *)(v13 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
        (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
      }
      if (*(id *)((char *)v3 + *(int *)(v11 + 28))) {
        swift_release();
      }
      break;
    case 4u:
      uint64_t v6 = sub_100063814((uint64_t *)&unk_10109C150);
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v2, v6);
      if (*(id *)((char *)v3 + *(int *)(type metadata accessor for PlaylistPicker.Context(0) + 20) + 16) != (id)1) {
LABEL_9:
      }
        swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return swift_deallocObject();
}

uint64_t sub_1006448A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100644908(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100644950()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

id sub_100644988()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();

  return v1;
}

uint64_t sub_1006449C8()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_100644A58()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100644A90(uint64_t a1, uint64_t a2)
{
  return sub_10063FC54(a1, a2);
}

uint64_t sub_100644A98(uint64_t a1, void *a2)
{
  return sub_10063E9E4(a1, a2);
}

void sub_100644AA0(void *a1)
{
}

uint64_t sub_100644AB0(uint64_t a1)
{
  return sub_10063F634(a1);
}

uint64_t sub_100644AB8(uint64_t a1)
{
  return sub_10063F704(a1);
}

uint64_t sub_100644AC0()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100644AF8(void *a1)
{
  return sub_100633D94(a1);
}

uint64_t sub_100644B00()
{
  return sub_100633DF4();
}

uint64_t sub_100644B08(uint64_t a1)
{
  return sub_100634198(a1);
}

uint64_t sub_100644B10()
{
  uint64_t v1 = type metadata accessor for Notification();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100644BE4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Notification() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100081D08;
  return sub_1006343C4(a1, v5, v6, v7, v8);
}

uint64_t sub_100644CE0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100644D18()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100644E08()
{
  uint64_t v1 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  int v5 = *(unsigned __int16 *)(v0 + 16);

  return sub_100635848(v5, v2, v3, v4);
}

uint64_t sub_100644EAC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100644EE4()
{
  return sub_1004A444C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100644EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006365DC(*(double *)(v3 + 32), a1, a2, a3, *(unsigned char *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_100644F04(double a1, double a2)
{
  return sub_1004A4240(*(uint64_t (**)(double))(v2 + 16), a1, a2);
}

uint64_t sub_100644F0C(uint64_t a1, uint64_t a2)
{
  return sub_1006347F4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100644F18(uint64_t a1)
{
  return sub_100400D90(a1, *(void *)(v1 + 16));
}

uint64_t sub_100644F3C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100645008(double a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100634BF0(a1, v4, v5);
}

void sub_10064507C(uint64_t a1)
{
}

uint64_t sub_10064509C()
{
  uint64_t v1 = type metadata accessor for Artwork();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100645184(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Artwork() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v5;
  double v11 = *(double *)((char *)v1 + v6);
  double v12 = *(double *)((char *)v1 + v6 + 8);
  double v13 = *(double *)((char *)v1 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_100081D08;
  return sub_10063B4F8(v11, v12, v13, a1, v7, v8, v9, v10);
}

uint64_t sub_1006452D8()
{
  uint64_t v1 = type metadata accessor for Artwork();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1006453C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Artwork() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100081D08;
  return sub_10063C084(a1, v6, v7, v8, v9);
}

void sub_1006454E4()
{
  uint64_t v1 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_durationCalculator;
  type metadata accessor for DurationCalculator();
  uint64_t v2 = swift_allocObject();
  *(void *)&v0[v1] = v2;
  v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_needToRegisterGroupActivitySuggestion] = 0;
  *(void *)(v2 + 16) = 0;
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_loadingTimer] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___headerCoordinator] = 0;
  unint64_t v3 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_artwork];
  uint64_t v4 = type metadata accessor for Artwork();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___backdropContainer] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_backdropView] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkDataSource] = 0;
  v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hideFloatingArtwork] = 0;
  uint64_t v5 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_floatingArtworkContainer;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_isShowingRelatedContent] = 0;
  v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_includeRelatedContentOnNextReload] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___relatedContentSpacingData] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentLeadingPadding] = 0;
  uint64_t v6 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentState];
  uint64_t v7 = enum case for RelatedContentProvider.State.loading(_:);
  uint64_t v8 = type metadata accessor for RelatedContentProvider.State();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  uint64_t v9 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_relatedContentStateSubscription];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___impressionsTracker] = 0;
  uint64_t v10 = &v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___pageProperties];
  uint64_t v11 = sub_100063814(&qword_10109BA58);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___popoverProvider] = 1;
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_storeItemMetadataDidChangeObserver] = 0;
  v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_hasScrolledtoProminentItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_sheetPresenterDataSource] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___collectionViewLayout] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___collectionView] = 0;
  uint64_t v12 = OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_cachingReference;
  type metadata accessor for ArtworkPrefetchingController.CacheReference();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0xD00000000000001FLL;
  *(void *)(v13 + 24) = 0x8000000100DB84F0;
  *(void *)(v13 + 32) = 0;
  *(unsigned char *)(v13 + 40) = 1;
  *(void *)&v0[v12] = v13;
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController____lazy_storage___contextualActionsBarButtonItem] = 0;
  *(void *)&v0[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dragDropController] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1006457EC(char *a1)
{
  id v2 = [a1 traitCollection];
  sub_1001B74E0();
  UITraitCollection.subscript.getter();

  char v3 = sub_1000362CC();
  swift_bridgeObjectRelease();
  uint64_t v4 = &a1[OBJC_IVAR____TtCV5Music15ContainerDetail14ViewController_dataSource];
  swift_beginAccess();
  uint64_t v5 = *(void *)v4;
  uint64_t v6 = *((void *)v4 + 1);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = *(void (**)(void, uint64_t, uint64_t))(v6 + 104);
  swift_unknownObjectRetain();
  v8(v3 & 1, ObjectType, v6);
  *(void *)uint64_t v4 = v5;
  *((void *)v4 + 1) = v6;
  swift_endAccess();
  swift_unknownObjectRelease();
  return sub_10063A760();
}

uint64_t sub_100645900(uint64_t a1, double a2, double a3, double a4)
{
  *(double *)(v4 + 64) = a3;
  *(double *)(v4 + 72) = a4;
  *(double *)(v4 + 56) = a2;
  *(void *)(v4 + 48) = a1;
  uint64_t v5 = type metadata accessor for Backdrop.SnapshotConfiguration();
  *(void *)(v4 + 80) = v5;
  *(void *)(v4 + 88) = *(void *)(v5 - 8);
  *(void *)(v4 + 96) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Artwork.ImageFormat();
  *(void *)(v4 + 104) = v6;
  *(void *)(v4 + 112) = *(void *)(v6 - 8);
  *(void *)(v4 + 120) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Artwork.CropStyle();
  *(void *)(v4 + 128) = v7;
  *(void *)(v4 + 136) = *(void *)(v7 - 8);
  *(void *)(v4 + 144) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v4 + 152) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 160) = v9;
  *(void *)(v4 + 168) = v8;
  return _swift_task_switch(sub_100645AB4, v9, v8);
}

uint64_t sub_100645AB4()
{
  uint64_t v2 = *((void *)v0 + 17);
  uint64_t v1 = *((void *)v0 + 18);
  uint64_t v4 = *((void *)v0 + 15);
  uint64_t v3 = *((void *)v0 + 16);
  uint64_t v5 = *((void *)v0 + 13);
  uint64_t v6 = *((void *)v0 + 14);
  uint64_t v7 = Artwork.CropStyle.fallback.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v7, v3);
  uint64_t v8 = Artwork.ImageFormat.fallback.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v8, v5);
  uint64_t v9 = (void *)swift_task_alloc();
  *((void *)v0 + 22) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100645BB4;
  uint64_t v10 = *((void *)v0 + 18);
  uint64_t v11 = *((void *)v0 + 15);
  double v12 = v0[7];
  double v13 = v0[8];
  return Artwork.image(for:cropStyle:format:)(v10, v11, v12, v13);
}

uint64_t sub_100645BB4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 144);
  uint64_t v6 = *(void *)(*v2 + 136);
  uint64_t v7 = *(void *)(*v2 + 128);
  uint64_t v8 = *(void *)(*v2 + 120);
  uint64_t v9 = *(void *)(*v2 + 112);
  uint64_t v10 = *(void *)(*v2 + 104);
  *(void *)(v4 + 184) = a1;
  *(void *)(v4 + 192) = v1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v11 = *(void *)(v3 + 168);
  uint64_t v12 = *(void *)(v3 + 160);
  if (v1) {
    double v13 = sub_100646150;
  }
  else {
    double v13 = sub_100645DB8;
  }
  return _swift_task_switch(v13, v12, v11);
}

uint64_t sub_100645DB8()
{
  [*(id *)(v0 + 184) size];
  if (v1 <= 0.0 || ([*(id *)(v0 + 184) size], v2 <= 0.0))
  {
    uint64_t v6 = *(void **)(v0 + 184);

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7(0);
  }
  else
  {
    id v3 = [self traitCollectionWithUserInterfaceStyle:2];
    Backdrop.SnapshotConfiguration.init(image:size:scale:offset:traitCollection:)();
    type metadata accessor for Backdrop.CompositeRenderer();
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100645F64;
    uint64_t v5 = *(void *)(v0 + 96);
    return static Backdrop.CompositeRenderer.snapshot(configuration:)(v5);
  }
}

uint64_t sub_100645F64(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[20];
    uint64_t v6 = v4[21];
    uint64_t v7 = sub_1006463A4;
  }
  else
  {
    v4[27] = a1;
    uint64_t v5 = v4[20];
    uint64_t v6 = v4[21];
    uint64_t v7 = sub_10064608C;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_10064608C()
{
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 80);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v1);
}

uint64_t sub_100646150()
{
  uint64_t v12 = v0;
  swift_release();
  if (qword_1010986C8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_101129E18);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[24];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    v0[2] = v5;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010991A0);
    uint64_t v7 = String.init<A>(describing:)();
    v0[3] = sub_100075D94(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to retrieve artwork image for backdrop with error=%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9(0);
}

uint64_t sub_1006463A4()
{
  uint64_t v17 = v0;
  swift_release();
  if (qword_1010986C8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_101129E18);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 208);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 80);
  if (v4)
  {
    uint64_t v14 = *(void **)(v0 + 184);
    uint64_t v15 = *(void *)(v0 + 96);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446210;
    *(void *)(v0 + 32) = v5;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010991A0);
    uint64_t v10 = String.init<A>(describing:)();
    *(void *)(v0 + 40) = sub_100075D94(v10, v11, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to create backdrop with error=%{public}s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v8);
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12(0);
}

uint64_t sub_10064663C()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100646684(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100081D08;
  return sub_10063C638(a1, v4, v5, v7, v6);
}

uint64_t sub_100646744()
{
  return swift_deallocObject();
}

id sub_10064677C()
{
  return [*(id *)(v0 + 16) setAlpha:0.6];
}

uint64_t sub_1006467A0()
{
  return sub_1006393F8();
}

uint64_t sub_1006467A8()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1006467E8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000154F4;
  return sub_10063954C(a1, v4, v5, v6);
}

uint64_t sub_10064689C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814((uint64_t *)&unk_10109C760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100646904(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = type metadata accessor for SocialProfile();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      case 2u:
        uint64_t v9 = type metadata accessor for Curator();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        break;
      case 3u:
        uint64_t v10 = type metadata accessor for RadioShow();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        break;
      case 4u:
        uint64_t v11 = type metadata accessor for Genre();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        break;
      case 5u:
        uint64_t v12 = type metadata accessor for Playlist();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        break;
      default:
        uint64_t v6 = type metadata accessor for Artist();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100646B98(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = type metadata accessor for Artist();
      goto LABEL_8;
    case 1:
      uint64_t v3 = type metadata accessor for SocialProfile();
      goto LABEL_8;
    case 2:
      uint64_t v3 = type metadata accessor for Curator();
      goto LABEL_8;
    case 3:
      uint64_t v3 = type metadata accessor for RadioShow();
      goto LABEL_8;
    case 4:
      uint64_t v3 = type metadata accessor for Genre();
      goto LABEL_8;
    case 5:
      uint64_t v3 = type metadata accessor for Playlist();
LABEL_8:
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100646C8C(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v4 = type metadata accessor for SocialProfile();
      break;
    case 2u:
      uint64_t v4 = type metadata accessor for Curator();
      break;
    case 3u:
      uint64_t v4 = type metadata accessor for RadioShow();
      break;
    case 4u:
      uint64_t v4 = type metadata accessor for Genre();
      break;
    case 5u:
      uint64_t v4 = type metadata accessor for Playlist();
      break;
    default:
      uint64_t v4 = type metadata accessor for Artist();
      break;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100646D94(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1006441B0(a1, type metadata accessor for ContainerDetail.AttributionItem);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v4 = type metadata accessor for SocialProfile();
        break;
      case 2u:
        uint64_t v4 = type metadata accessor for Curator();
        break;
      case 3u:
        uint64_t v4 = type metadata accessor for RadioShow();
        break;
      case 4u:
        uint64_t v4 = type metadata accessor for Genre();
        break;
      case 5u:
        uint64_t v4 = type metadata accessor for Playlist();
        break;
      default:
        uint64_t v4 = type metadata accessor for Artist();
        break;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100646EC0(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v4 = type metadata accessor for SocialProfile();
      break;
    case 2u:
      uint64_t v4 = type metadata accessor for Curator();
      break;
    case 3u:
      uint64_t v4 = type metadata accessor for RadioShow();
      break;
    case 4u:
      uint64_t v4 = type metadata accessor for Genre();
      break;
    case 5u:
      uint64_t v4 = type metadata accessor for Playlist();
      break;
    default:
      uint64_t v4 = type metadata accessor for Artist();
      break;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100646FC8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1006441B0(a1, type metadata accessor for ContainerDetail.AttributionItem);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v4 = type metadata accessor for SocialProfile();
        break;
      case 2u:
        uint64_t v4 = type metadata accessor for Curator();
        break;
      case 3u:
        uint64_t v4 = type metadata accessor for RadioShow();
        break;
      case 4u:
        uint64_t v4 = type metadata accessor for Genre();
        break;
      case 5u:
        uint64_t v4 = type metadata accessor for Playlist();
        break;
      default:
        uint64_t v4 = type metadata accessor for Artist();
        break;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1006470F4()
{
  uint64_t result = type metadata accessor for Artist();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SocialProfile();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Curator();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for RadioShow();
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for Genre();
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for Playlist();
            if (v6 <= 0x3F)
            {
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1006472A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = _s6AlbumsV5ScopeOMa(0);
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = sub_100063814(&qword_1010B4800);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v13 = type metadata accessor for Artist();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload == 1)
        {
          uint64_t v14 = type metadata accessor for Composer();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(v9 + 64));
        }
        else
        {
          uint64_t v12 = type metadata accessor for Genre();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v15 = sub_100063814((uint64_t *)&unk_10109C7C0);
      *((unsigned char *)a1 + *(int *)(v15 + 48)) = *((unsigned char *)a2 + *(int *)(v15 + 48));
      *((unsigned char *)a1 + *(int *)(v15 + 64)) = *((unsigned char *)a2 + *(int *)(v15 + 64));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100647570(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v3 = _s6AlbumsV5ScopeOMa(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 1, v3);
    if (!result)
    {
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 2)
      {
        uint64_t v4 = type metadata accessor for Artist();
      }
      else if (result == 1)
      {
        uint64_t v4 = type metadata accessor for Composer();
      }
      else
      {
        if (result) {
          return result;
        }
        uint64_t v4 = type metadata accessor for Genre();
      }
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
      return v5(a1, v4);
    }
  }
  return result;
}

void *sub_100647664(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = _s6AlbumsV5ScopeOMa(0);
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = sub_100063814(&qword_1010B4800);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v11 = type metadata accessor for Artist();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v12 = type metadata accessor for Composer();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v7 + 64));
      }
      else
      {
        uint64_t v10 = type metadata accessor for Genre();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v13 = sub_100063814((uint64_t *)&unk_10109C7C0);
    *((unsigned char *)a1 + *(int *)(v13 + 48)) = *((unsigned char *)a2 + *(int *)(v13 + 48));
    *((unsigned char *)a1 + *(int *)(v13 + 64)) = *((unsigned char *)a2 + *(int *)(v13 + 64));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1006478E8(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006441B0((uint64_t)a1, type metadata accessor for ContainerDetail.Source);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = _s6AlbumsV5ScopeOMa(0);
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_100063814(&qword_1010B4800);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v11 = type metadata accessor for Artist();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload == 1)
        {
          uint64_t v12 = type metadata accessor for Composer();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(v7 + 64));
        }
        else
        {
          uint64_t v10 = type metadata accessor for Genre();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v13 = sub_100063814((uint64_t *)&unk_10109C7C0);
      *((unsigned char *)a1 + *(int *)(v13 + 48)) = *((unsigned char *)a2 + *(int *)(v13 + 48));
      *((unsigned char *)a1 + *(int *)(v13 + 64)) = *((unsigned char *)a2 + *(int *)(v13 + 64));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_100647B90(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = _s6AlbumsV5ScopeOMa(0);
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = sub_100063814(&qword_1010B4800);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v11 = type metadata accessor for Artist();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v12 = type metadata accessor for Composer();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v7 + 64));
      }
      else
      {
        uint64_t v10 = type metadata accessor for Genre();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    uint64_t v13 = sub_100063814((uint64_t *)&unk_10109C7C0);
    *((unsigned char *)a1 + *(int *)(v13 + 48)) = *((unsigned char *)a2 + *(int *)(v13 + 48));
    *((unsigned char *)a1 + *(int *)(v13 + 64)) = *((unsigned char *)a2 + *(int *)(v13 + 64));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100647E14(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006441B0((uint64_t)a1, type metadata accessor for ContainerDetail.Source);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = _s6AlbumsV5ScopeOMa(0);
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = sub_100063814(&qword_1010B4800);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v11 = type metadata accessor for Artist();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload == 1)
        {
          uint64_t v12 = type metadata accessor for Composer();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(v7 + 64));
        }
        else
        {
          uint64_t v10 = type metadata accessor for Genre();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
          swift_storeEnumTagMultiPayload();
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      uint64_t v13 = sub_100063814((uint64_t *)&unk_10109C7C0);
      *((unsigned char *)a1 + *(int *)(v13 + 48)) = *((unsigned char *)a2 + *(int *)(v13 + 48));
      *((unsigned char *)a1 + *(int *)(v13 + 64)) = *((unsigned char *)a2 + *(int *)(v13 + 64));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1006480BC()
{
  sub_100648184(319, (unint64_t *)&unk_1010A95D8, (void (*)(uint64_t))_s6AlbumsV5ScopeOMa);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v1[4] = v1;
    v1[5] = &unk_100E3B920;
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_100648184(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ContainerDetail.LoadingState.ContainerType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1006482A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContainerDetail.LoadingState.ContainerType()
{
  return &type metadata for ContainerDetail.LoadingState.ContainerType;
}

unint64_t sub_1006482E0()
{
  unint64_t result = qword_1010B48B8;
  if (!qword_1010B48B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B48B8);
  }
  return result;
}

uint64_t sub_100648374()
{
  uint64_t v0 = sub_100063814(&qword_10109A628);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = type metadata accessor for TypeDisplayRepresentation();
  sub_100014CA4(v5, qword_101129E88);
  sub_100050A90(v5, (uint64_t)qword_101129E88);
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t sub_1006484E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100521520(*a1, *a2);
}

unint64_t sub_1006484F0()
{
  unint64_t result = qword_1010B48C0;
  if (!qword_1010B48C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B48C0);
  }
  return result;
}

Swift::Int sub_100648544()
{
  return Hasher._finalize()();
}

uint64_t sub_1006485E8()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100648678()
{
  return Hasher._finalize()();
}

unint64_t sub_100648718@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10064A7D0(*a1);
  *a2 = result;
  return result;
}

void sub_100648748(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEB000000006D6574;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x73636972796CLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6575657571;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x49746E6572727563;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_1006487AC()
{
  unint64_t result = qword_1010B48C8;
  if (!qword_1010B48C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B48C8);
  }
  return result;
}

unint64_t sub_100648804()
{
  unint64_t result = qword_1010B48D0;
  if (!qword_1010B48D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B48D0);
  }
  return result;
}

unint64_t sub_10064885C()
{
  unint64_t result = qword_1010B48D8;
  if (!qword_1010B48D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B48D8);
  }
  return result;
}

unint64_t sub_1006488B4()
{
  unint64_t result = qword_1010B48E0;
  if (!qword_1010B48E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B48E0);
  }
  return result;
}

unint64_t sub_10064890C()
{
  unint64_t result = qword_1010B48E8;
  if (!qword_1010B48E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B48E8);
  }
  return result;
}

unint64_t sub_100648968()
{
  unint64_t result = qword_1010B48F0;
  if (!qword_1010B48F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B48F0);
  }
  return result;
}

uint64_t sub_1006489BC@<X0>(uint64_t a1@<X8>)
{
  return sub_100253398(&qword_1010986D0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_101129E88, a1);
}

uint64_t sub_1006489F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100648A44(uint64_t a1)
{
  unint64_t v2 = sub_10055F458();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100648A94()
{
  unint64_t result = qword_1010B48F8;
  if (!qword_1010B48F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B48F8);
  }
  return result;
}

unint64_t sub_100648AEC()
{
  unint64_t result = qword_1010B4900;
  if (!qword_1010B4900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4900);
  }
  return result;
}

unint64_t sub_100648B44()
{
  unint64_t result = qword_1010B4908;
  if (!qword_1010B4908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4908);
  }
  return result;
}

uint64_t sub_100648B9C(uint64_t a1)
{
  unint64_t v2 = sub_100648968();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100648BE8()
{
  return sub_100063858(&qword_1010B4910, &qword_1010B4918);
}

void sub_100648C24(void *a1@<X8>)
{
  *a1 = &off_100FC75B0;
}

unint64_t sub_100648C38()
{
  unint64_t result = qword_1010B4920;
  if (!qword_1010B4920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4920);
  }
  return result;
}

unint64_t sub_100648C90()
{
  unint64_t result = qword_1010B4928;
  if (!qword_1010B4928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4928);
  }
  return result;
}

uint64_t sub_100648CE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100648D00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100648D1C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100014CA4(v0, qword_101129EA0);
  sub_100050A90(v0, (uint64_t)qword_101129EA0);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_100648D80()
{
  uint64_t v0 = sub_100063814(&qword_1010B4960);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100063814(&qword_1010B4968);
  __chkstk_darwin(v1);
  sub_1005E142C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._char object = (void *)0x8000000100DC31A0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000014;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_100063814(&qword_1010B4970);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 0;
  v3._char object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100648F10(uint64_t a1, uint64_t a2)
{
  v2[10] = a1;
  v2[11] = a2;
  v2[12] = type metadata accessor for AppInterfaceContext.Activity(0);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[15] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[16] = v4;
  v2[17] = v3;
  return _swift_task_switch(sub_100648FE8, v4, v3);
}

uint64_t sub_100648FE8()
{
  uint64_t v16 = v0;
  if (qword_101097FC8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[18] = sub_100050A90(v1, (uint64_t)qword_101129580);
  swift_retain_n();
  Swift::String v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    v0[9] = &type metadata for OpenNowPlayingAppIntent;
    sub_100063814(&qword_1010B4958);
    uint64_t v5 = String.init<A>(describing:)();
    v0[5] = sub_100075D94(v5, v6, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2082;
    IntentParameter.wrappedValue.getter();
    sub_100063814(&qword_1010AE9B0);
    uint64_t v7 = String.init<A>(describing:)();
    v0[7] = sub_100075D94(v7, v8, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s opening Now Playing to %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  id v9 = [self sharedApplication];
  v0[19] = sub_1006BD1C0();
  uint64_t v10 = (unsigned char *)v0[13];

  sub_100649ACC(v10);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = (void *)swift_task_alloc();
  v0[20] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1006495EC;
  uint64_t v13 = v0[13];
  uint64_t v12 = v0[14];
  return sub_10069350C(v12, v13);
}

uint64_t sub_1006495EC()
{
  Swift::String v2 = *v1;
  (*v1)[21] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_100253E58(v2[13]);
    uint64_t v3 = v2[16];
    uint64_t v4 = v2[17];
    uint64_t v5 = sub_1006497B0;
  }
  else
  {
    uint64_t v6 = v2[14];
    sub_100253E58(v2[13]);
    sub_100253E58(v6);
    uint64_t v3 = v2[16];
    uint64_t v4 = v2[17];
    uint64_t v5 = sub_100649718;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100649718()
{
  swift_release();
  static IntentResult.result<>()();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1006497B0()
{
  uint64_t v16 = v0;
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 168);
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  Swift::String v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315650;
    *(void *)(v0 + 24) = &type metadata for OpenNowPlayingAppIntent;
    sub_100063814(&qword_1010B4958);
    uint64_t v5 = String.init<A>(describing:)();
    *(void *)(v0 + 32) = sub_100075D94(v5, v6, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2082;
    IntentParameter.wrappedValue.getter();
    sub_100063814(&qword_1010AE9B0);
    uint64_t v7 = String.init<A>(describing:)();
    *(void *)(v0 + 48) = sub_100075D94(v7, v8, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v4 + 22) = 2082;
    *(void *)(v0 + 16) = v1;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010991A0);
    uint64_t v9 = String.init<A>(describing:)();
    *(void *)(v0 + 64) = sub_100075D94(v9, v10, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s open failed, destination: %{public}s error: %{public}s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  IntentParameter.wrappedValue.getter();
  char v11 = *(unsigned char *)(v0 + 178);
  sub_10064A21C();
  swift_allocError();
  *uint64_t v12 = v11;
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100649ACC@<X0>(unsigned char *a1@<X8>)
{
  IntentParameter.wrappedValue.getter();
  *a1 = 0x5020100u >> (8 * v3);
  type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100649B30@<X0>(uint64_t a1@<X8>)
{
  return sub_100253398(&qword_1010986D8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_101129EA0, a1);
}

uint64_t sub_100649B6C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000154F4;
  return sub_100648F10(a1, v4);
}

uint64_t sub_100649C0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100649F08();
  *a1 = result;
  return result;
}

uint64_t sub_100649C34(uint64_t a1)
{
  unint64_t v2 = sub_1005E142C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenNowPlayingAppIntent()
{
  return &type metadata for OpenNowPlayingAppIntent;
}

unsigned char *storeEnumTagSinglePayload for NowPlayingDestinationEntity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100649D4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingDestinationEntity()
{
  return &type metadata for NowPlayingDestinationEntity;
}

uint64_t sub_100649D84()
{
  return sub_100063858(&qword_1010B4938, &qword_1010B4940);
}

uint64_t sub_100649DC0(unsigned __int8 a1)
{
  int v1 = a1;
  uint64_t v2 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  if (v1 == 3)
  {
    return LocalizedStringResource.init(stringLiteral:)();
  }
  else
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v4._uint64_t countAndFlagsBits = 0xD000000000000018;
    v4._char object = (void *)0x8000000100DC3240;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v4);
    sub_100648A94();
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:)();
    v5._char object = (void *)0x8000000100DC3260;
    v5._uint64_t countAndFlagsBits = 0xD000000000000011;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v5);
    return LocalizedStringResource.init(stringInterpolation:)();
  }
}

uint64_t sub_100649F00()
{
  return sub_100649DC0(*v0);
}

uint64_t sub_100649F08()
{
  uint64_t v17 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100063814(&qword_10109A618);
  __chkstk_darwin(v3 - 8);
  Swift::String v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_100063814(&qword_10109A628);
  __chkstk_darwin(v9 - 8);
  char v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  sub_100063814(&qword_1010AE980);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  char v18 = 3;
  uint64_t v14 = type metadata accessor for IntentDialog();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v8, 1, 1, v14);
  v15(v5, 1, 1, v14);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v17);
  sub_10055F458();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

unint64_t sub_10064A21C()
{
  unint64_t result = qword_1010B4950;
  if (!qword_1010B4950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4950);
  }
  return result;
}

uint64_t sub_10064A270@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_10064A29C()
{
  uint64_t v0 = sub_100063814(&qword_1010A06F8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100063814(&qword_10109A628);
  __chkstk_darwin(v3 - 8);
  Swift::String v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v5;
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v35 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_100063814(&qword_1010B4978);
  uint64_t v8 = sub_100063814(&qword_101099390);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  uint64_t v11 = v8 - 8;
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v39 = 2 * v10;
  uint64_t v13 = swift_allocObject();
  uint64_t v40 = v13;
  *(_OWORD *)(v13 + 16) = xmmword_100E251F0;
  unint64_t v14 = v13 + v12;
  uint64_t v15 = *(int *)(v11 + 56);
  v27[0] = v11;
  unint64_t v33 = v13 + v12 + v15;
  *(unsigned char *)(v13 + v12) = 0;
  LocalizedStringResource.init(stringLiteral:)();
  double v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v34(v5, 1, 1, v6);
  uint64_t v29 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v16 = *(void *)(v29 - 8);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v31 = v16 + 56;
  uint64_t v17 = v2;
  v30(v2, 1, 1, v29);
  uint64_t v18 = sub_100063814(&qword_1010B4980);
  v27[2] = v7 + 56;
  uint64_t v19 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v32 = *(void *)(v7 + 72);
  uint64_t v20 = v32;
  uint64_t v36 = (v19 + 32) & ~v19;
  uint64_t v37 = v19 | 7;
  uint64_t v38 = v18;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100E26B70;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  v27[1] = 2 * v20;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v21 = v28;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  unint64_t v33 = v14 + v10 + *(int *)(v11 + 56);
  *(unsigned char *)(v14 + v10) = 1;
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v22 = v34;
  uint64_t v23 = v35;
  v34(v21, 1, 1, v35);
  uint64_t v25 = v29;
  int64_t v24 = v30;
  v30(v17, 1, 1, v29);
  DisplayRepresentation.init(title:subtitle:image:)();
  *(unsigned char *)(v14 + v39) = 2;
  LocalizedStringResource.init(stringLiteral:)();
  v22(v21, 1, 1, v23);
  v24(v17, 1, 1, v25);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100E251B0;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  return sub_1000C47EC(v40);
}

unint64_t sub_10064A7D0(Swift::String string)
{
  char object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._char object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100FC7548, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t getEnumTagSinglePayload for OpenNowPlayingIntentError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  if (*a1 <= 3u) {
    int v6 = 3;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 4;
  if (*a1 < 3u) {
    int v8 = -1;
  }
  else {
    int v8 = v7;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for OpenNowPlayingIntentError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10064A988);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenNowPlayingIntentError()
{
  return &type metadata for OpenNowPlayingIntentError;
}

unint64_t sub_10064A9C4()
{
  unint64_t result = qword_1010B4988;
  if (!qword_1010B4988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4988);
  }
  return result;
}

unint64_t sub_10064AA1C()
{
  unint64_t result = qword_1010B4990;
  if (!qword_1010B4990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4990);
  }
  return result;
}

uint64_t sub_10064AA70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10064AA8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10064AAA8()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_100014CA4(v0, qword_101129EB8);
  sub_100050A90(v0, (uint64_t)qword_101129EB8);
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_10064AB14(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  sub_100063814(&qword_1010A3B20);
  v2[14] = swift_task_alloc();
  v2[15] = type metadata accessor for AppInterfaceContext.Activity(0);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Song();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for RecordLabel();
  v2[21] = v4;
  v2[22] = *(void *)(v4 - 8);
  v2[23] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Playlist();
  v2[24] = v5;
  v2[25] = *(void *)(v5 - 8);
  v2[26] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Artist();
  v2[27] = v6;
  v2[28] = *(void *)(v6 - 8);
  v2[29] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Album();
  v2[30] = v7;
  v2[31] = *(void *)(v7 - 8);
  v2[32] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for GenericMusicItem();
  v2[33] = v8;
  v2[34] = *(void *)(v8 - 8);
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  v2[37] = swift_task_alloc();
  type metadata accessor for GenericMusicItemEntity();
  v2[38] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[39] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[40] = v10;
  v2[41] = v9;
  return _swift_task_switch(sub_10064AE8C, v10, v9);
}

uint64_t sub_10064AE8C()
{
  CGRect v88 = v0;
  if (qword_101097FC8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[42] = sub_100050A90(v1, (uint64_t)qword_101129580);
  swift_retain_n();
  int v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[38];
    uint64_t v5 = swift_slowAlloc();
    v87[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    v0[9] = &type metadata for OpenMusicItemAppIntent;
    sub_100063814(&qword_1010B49C0);
    uint64_t v6 = String.init<A>(describing:)();
    v0[10] = sub_100075D94(v6, v7, v87);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    IntentParameter.wrappedValue.getter();
    uint64_t v8 = sub_1004647FC();
    unint64_t v10 = v9;
    sub_10064F588(v4, (uint64_t (*)(void))type metadata accessor for GenericMusicItemEntity);
    v0[11] = sub_100075D94(v8, v10, v87);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s opening %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  id v11 = [self sharedApplication];
  v0[43] = sub_1006BD1C0();
  uint64_t v13 = v0[37];
  uint64_t v12 = v0[38];
  uint64_t v14 = v0[36];
  uint64_t v16 = v0[33];
  uint64_t v15 = v0[34];

  IntentParameter.wrappedValue.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v13, v12, v16);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v17(v14, v13, v16);
  int v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 88))(v14, v16);
  if (v18 == enum case for GenericMusicItem.album(_:))
  {
    uint64_t v19 = v0[36];
    uint64_t v20 = v0[31];
    uint64_t v21 = v0[32];
    uint64_t v22 = v0[30];
    (*(void (**)(uint64_t, void))(v0[34] + 96))(v19, v0[33]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v21, v19, v22);
    id v31 = sub_10064CEBC(v21);
    uint64_t v33 = v0[31];
    uint64_t v32 = v0[32];
    uint64_t v34 = v0[30];
LABEL_26:
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    v0[47] = v31;
    double v73 = (void *)v0[16];
    uint64_t v74 = v0[14];
    uint64_t v75 = (uint64_t)v73 + *(int *)(sub_100063814((uint64_t *)&unk_1010A1820) + 48);
    *double v73 = v31;
    uint64_t v76 = type metadata accessor for UITraitOverrides();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v74, 1, 1, v76);
    sub_10064F4BC(v74, v75);
    type metadata accessor for AppInterfaceContext.Activity.Destination(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    id v77 = v31;
    uint64_t v78 = (void *)swift_task_alloc();
    v0[48] = v78;
    *uint64_t v78 = v0;
    v78[1] = sub_10064C0D0;
    uint64_t v80 = v0[16];
    uint64_t v79 = v0[17];
    return sub_10069350C(v79, v80);
  }
  if (v18 == enum case for GenericMusicItem.artist(_:))
  {
    uint64_t v23 = v0[36];
    uint64_t v24 = v0[28];
    uint64_t v25 = v0[29];
    uint64_t v26 = v0[27];
    (*(void (**)(uint64_t, void))(v0[34] + 96))(v23, v0[33]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v25, v23, v26);
    id v31 = sub_10064D1EC(v25);
    uint64_t v33 = v0[28];
    uint64_t v32 = v0[29];
    uint64_t v34 = v0[27];
    goto LABEL_26;
  }
  if (v18 == enum case for GenericMusicItem.playlist(_:))
  {
    uint64_t v27 = v0[36];
    uint64_t v28 = v0[25];
    uint64_t v29 = v0[26];
    uint64_t v30 = v0[24];
    (*(void (**)(uint64_t, void))(v0[34] + 96))(v27, v0[33]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v29, v27, v30);
    id v31 = sub_10064D59C(v29);
    uint64_t v33 = v0[25];
    uint64_t v32 = v0[26];
    uint64_t v34 = v0[24];
    goto LABEL_26;
  }
  if (v18 == enum case for GenericMusicItem.recordLabel(_:))
  {
    uint64_t v35 = v0[36];
    uint64_t v36 = v0[22];
    uint64_t v37 = v0[23];
    uint64_t v38 = v0[21];
    (*(void (**)(uint64_t, void))(v0[34] + 96))(v35, v0[33]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v37, v35, v38);
    id v31 = sub_10064D8D0(v37);
    uint64_t v33 = v0[22];
    uint64_t v32 = v0[23];
    uint64_t v34 = v0[21];
    goto LABEL_26;
  }
  if (v18 == enum case for GenericMusicItem.song(_:))
  {
    uint64_t v52 = v0[36];
    uint64_t v54 = v0[19];
    uint64_t v53 = v0[20];
    uint64_t v55 = v0[18];
    (*(void (**)(uint64_t, void))(v0[34] + 96))(v52, v0[33]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 32))(v53, v52, v55);
    CGRect v56 = (void *)swift_task_alloc();
    v0[44] = v56;
    *CGRect v56 = v0;
    v56[1] = sub_10064BB10;
    uint64_t v57 = v0[20];
    return sub_10064DAF0(v57);
  }
  else
  {
    uint64_t v58 = v0[37];
    uint64_t v59 = v0[35];
    uint64_t v60 = v0[33];
    swift_release();
    v17(v59, v58, v60);
    id v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.error.getter();
    log = v61;
    BOOL v63 = os_log_type_enabled(v61, v62);
    uint64_t v65 = v0[34];
    uint64_t v64 = v0[35];
    uint64_t v66 = v0[33];
    if (v63)
    {
      os_log_type_t type = v62;
      uint64_t v67 = swift_slowAlloc();
      v87[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v67 = 136446466;
      v0[6] = &type metadata for OpenMusicItemAppIntent;
      sub_100063814(&qword_1010B49C0);
      uint64_t v68 = String.init<A>(describing:)();
      v0[7] = sub_100075D94(v68, v69, v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v67 + 12) = 2082;
      sub_10064CE74(&qword_1010A1FC0, (void (*)(uint64_t))&type metadata accessor for GenericMusicItem);
      uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[8] = sub_100075D94(v70, v71, v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      double v72 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v72(v64, v66);
      _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s – unsupported type %{public}s", (uint8_t *)v67, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      double v72 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v72(v0[35], v0[33]);
    }

    uint64_t v81 = v0[36];
    uint64_t v82 = v0[33];
    sub_10064CE20();
    uint64_t v83 = swift_allocError();
    *id v84 = 1;
    swift_willThrow();
    v72(v81, v82);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      v87[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136446466;
      v0[2] = &type metadata for OpenMusicItemAppIntent;
      sub_100063814(&qword_1010B49C0);
      uint64_t v42 = String.init<A>(describing:)();
      v0[3] = sub_100075D94(v42, v43, v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2082;
      v0[4] = v83;
      swift_errorRetain();
      sub_100063814((uint64_t *)&unk_1010991A0);
      uint64_t v44 = String.init<A>(describing:)();
      v0[5] = sub_100075D94(v44, v45, v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "%{public}s – unable to open item %{public}s", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v46 = v0[37];
    uint64_t v47 = v0[33];
    uint64_t v48 = v0[34];
    sub_10064CE20();
    swift_allocError();
    *double v49 = 0;
    swift_willThrow();
    swift_release();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v50 = (uint64_t (*)(void))v0[1];
    return v50();
  }
}

uint64_t sub_10064BB10(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 360) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[40];
    uint64_t v6 = v4[41];
    unint64_t v7 = sub_10064BD9C;
  }
  else
  {
    v4[46] = a1;
    uint64_t v5 = v4[40];
    uint64_t v6 = v4[41];
    unint64_t v7 = sub_10064BC38;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_10064BC38()
{
  (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  uint64_t v1 = (void *)v0[46];
  v0[47] = v1;
  uint64_t v2 = (void *)v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = (uint64_t)v2 + *(int *)(sub_100063814((uint64_t *)&unk_1010A1820) + 48);
  void *v2 = v1;
  uint64_t v5 = type metadata accessor for UITraitOverrides();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  sub_10064F4BC(v3, v4);
  type metadata accessor for AppInterfaceContext.Activity.Destination(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  id v6 = v1;
  unint64_t v7 = (void *)swift_task_alloc();
  v0[48] = v7;
  *unint64_t v7 = v0;
  v7[1] = sub_10064C0D0;
  uint64_t v9 = v0[16];
  uint64_t v8 = v0[17];
  return sub_10069350C(v8, v9);
}

uint64_t sub_10064BD9C()
{
  uint64_t v19 = v0;
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[45];
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    v18[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446466;
    v0[2] = &type metadata for OpenMusicItemAppIntent;
    sub_100063814(&qword_1010B49C0);
    uint64_t v8 = String.init<A>(describing:)();
    v0[3] = sub_100075D94(v8, v9, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2082;
    v0[4] = v4;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010991A0);
    uint64_t v10 = String.init<A>(describing:)();
    v0[5] = sub_100075D94(v10, v11, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%{public}s – unable to open item %{public}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v12 = v0[37];
  uint64_t v14 = v0[33];
  uint64_t v13 = v0[34];
  sub_10064CE20();
  swift_allocError();
  *uint64_t v15 = 0;
  swift_willThrow();
  swift_release();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_10064C0D0()
{
  uint64_t v2 = *v1;
  (*v1)[49] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_10064F588(v2[16], type metadata accessor for AppInterfaceContext.Activity);
    uint64_t v3 = v2[40];
    uint64_t v4 = v2[41];
    uint64_t v5 = sub_10064C38C;
  }
  else
  {
    uint64_t v6 = v2[17];
    sub_10064F588(v2[16], type metadata accessor for AppInterfaceContext.Activity);
    sub_10064F588(v6, type metadata accessor for AppInterfaceContext.Activity);
    uint64_t v3 = v2[40];
    uint64_t v4 = v2[41];
    uint64_t v5 = sub_10064C234;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10064C234()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 264);

  swift_release();
  static IntentResult.result<>()();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10064C38C()
{
  uint64_t v16 = v0;

  swift_release();
  uint64_t v1 = *(void *)(v0 + 392);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    *(void *)(v0 + 16) = &type metadata for OpenMusicItemAppIntent;
    sub_100063814(&qword_1010B49C0);
    uint64_t v5 = String.init<A>(describing:)();
    *(void *)(v0 + 24) = sub_100075D94(v5, v6, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2082;
    *(void *)(v0 + 32) = v1;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010991A0);
    uint64_t v7 = String.init<A>(describing:)();
    *(void *)(v0 + 40) = sub_100075D94(v7, v8, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s – unable to open item %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v9 = *(void *)(v0 + 296);
  uint64_t v11 = *(void *)(v0 + 264);
  uint64_t v10 = *(void *)(v0 + 272);
  sub_10064CE20();
  swift_allocError();
  *uint64_t v12 = 0;
  swift_willThrow();
  swift_release();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_10064C6AC@<X0>(uint64_t a1@<X8>)
{
  if (qword_1010986E0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100050A90(v2, (uint64_t)qword_101129EB8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_10064C754()
{
  uint64_t v0 = sub_100063814(&qword_1010B49D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100063814(&qword_1010B49D8);
  __chkstk_darwin(v1);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._uint64_t countAndFlagsBits = 0x206E65704FLL;
  v2._char object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_100063814(&qword_1010B49E0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 0;
  v3._char object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_10064C8D4(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000154F4;
  return sub_10064AB14(a1, v4);
}

uint64_t sub_10064C974@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10064CA68();
  *a1 = result;
  return result;
}

uint64_t sub_10064C99C(uint64_t a1)
{
  unint64_t v2 = sub_1000F59B4();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenMusicItemAppIntent()
{
  return &type metadata for OpenMusicItemAppIntent;
}

uint64_t sub_10064C9E8()
{
  return sub_100063858(&qword_1010B49A0, &qword_1010B49A8);
}

uint64_t sub_10064CA24()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t sub_10064CA68()
{
  uint64_t v22 = type metadata accessor for InputConnectionBehavior();
  uint64_t v0 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  unint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100063814(&qword_10109A618);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = sub_100063814(&qword_10109A648);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100063814(&qword_10109A628);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LocalizedStringResource();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v21 = sub_100063814(&qword_1010A59B0);
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  uint64_t v17 = type metadata accessor for GenericMusicItemEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
  uint64_t v18 = type metadata accessor for IntentDialog();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v8, 1, 1, v18);
  v19(v6, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for InputConnectionBehavior.default(_:), v22);
  sub_10064CE74((unint64_t *)&qword_1010A59B8, (void (*)(uint64_t))type metadata accessor for GenericMusicItemEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

unint64_t sub_10064CE20()
{
  unint64_t result = qword_1010B49B8;
  if (!qword_1010B49B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B49B8);
  }
  return result;
}

uint64_t sub_10064CE74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_10064CEBC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MusicAppDestinationContext();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s18AppPageDestinationOMa(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [self sharedApplication];
  sub_1006BD1C0();

  if (!v1)
  {
    unsigned __int8 v11 = sub_10069292C();
    if (v11 == 6) {
      unsigned __int8 v11 = 1;
    }
    uint64_t v25 = sub_10004E7A0(v11);
    Album.catalogID.getter();
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      uint64_t v14 = *(int *)(sub_100063814(&qword_1010A54C0) + 48);
      uint64_t v24 = v4;
      uint64_t v15 = &v9[v14];
      uint64_t v16 = type metadata accessor for Album();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v9, a1, v16);
      uint64_t v17 = enum case for MusicAppDestination.AlbumDescriptor.album(_:);
      uint64_t v18 = type metadata accessor for MusicAppDestination.AlbumDescriptor();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v9, v17, v18);
      *(void *)uint64_t v15 = 0;
      *((void *)v15 + 1) = 0;
      uint64_t v4 = v24;
    }
    else
    {
      uint64_t v19 = type metadata accessor for Album();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v9, a1, v19);
      uint64_t v20 = enum case for MusicAppDestination.AlbumDescriptor.album(_:);
      uint64_t v21 = type metadata accessor for MusicAppDestination.AlbumDescriptor();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v9, v20, v21);
    }
    swift_storeEnumTagMultiPayload();
    static MusicAppDestinationContext.none.getter();
    id v10 = sub_100366B98((uint64_t)v9, v25, (uint64_t)v6);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_10064F588((uint64_t)v9, _s18AppPageDestinationOMa);
  }
  return v10;
}

id sub_10064D1EC(uint64_t a1)
{
  uint64_t v29 = a1;
  uint64_t v2 = type metadata accessor for MusicAppDestinationContext();
  uint64_t v27 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s18AppPageDestinationOMa(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814(&qword_10109CFF0);
  uint64_t v28 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [self sharedApplication];
  uint64_t v12 = sub_1006BD1C0();

  if (!v1)
  {
    uint64_t v25 = v2;
    uint64_t v26 = v10;
    if (*(void *)(v12 + 16))
    {
      v24[1] = 0;
      swift_retain();
      unsigned __int8 v13 = sub_10069292C();
      if (v13 == 6) {
        unsigned __int8 v13 = 1;
      }
      uint64_t v14 = sub_10004E7A0(v13);
      uint64_t v15 = v29;
      Artist.catalogID.getter();
      uint64_t v17 = v16;
      swift_bridgeObjectRelease();
      uint64_t v18 = type metadata accessor for Artist();
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
      if (v17)
      {
        uint64_t v20 = v26;
        v19(v26, v15, v18);
        uint64_t v21 = v28;
        (*(void (**)(char *, void, uint64_t))(v28 + 104))(v20, enum case for MusicPageProvider.Destination.artistDetail<A, B>(_:), v8);
        id v11 = (id)MusicPageProvider.page(for:stackAuthority:motionCacheBucketID:)();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v8);
      }
      else
      {
        v19(v7, v15, v18);
        swift_storeEnumTagMultiPayload();
        static MusicAppDestinationContext.none.getter();
        id v11 = sub_100366B98((uint64_t)v7, v14, (uint64_t)v4);
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v25);
        sub_10064F588((uint64_t)v7, _s18AppPageDestinationOMa);
      }
    }
    else
    {
      sub_10064CE20();
      swift_allocError();
      unsigned char *v22 = 0;
      swift_willThrow();
      swift_release();
    }
  }
  return v11;
}

id sub_10064D59C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MusicAppDestinationContext();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s18AppPageDestinationOMa(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [self sharedApplication];
  sub_1006BD1C0();

  if (!v1)
  {
    unsigned __int8 v11 = sub_10069292C();
    if (v11 == 6) {
      unsigned __int8 v11 = 1;
    }
    uint64_t v25 = sub_10004E7A0(v11);
    Playlist.catalogID.getter();
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      uint64_t v14 = sub_100063814(&qword_1010A54B8);
      uint64_t v15 = *(int *)(v14 + 48);
      uint64_t v24 = v4;
      uint64_t v16 = &v9[v15];
      uint64_t v23 = &v9[*(int *)(v14 + 64)];
      uint64_t v17 = type metadata accessor for Playlist();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v9, a1, v17);
      uint64_t v18 = enum case for MusicAppDestination.PlaylistDescriptor.playlist(_:);
      uint64_t v19 = type metadata accessor for MusicAppDestination.PlaylistDescriptor();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v9, v18, v19);
      uint64_t v20 = type metadata accessor for URL();
      *(void *)uint64_t v16 = 0;
      *((void *)v16 + 1) = 0;
      uint64_t v4 = v24;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v23, 1, 1, v20);
    }
    else
    {
      uint64_t v21 = type metadata accessor for Playlist();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v9, a1, v21);
    }
    swift_storeEnumTagMultiPayload();
    static MusicAppDestinationContext.none.getter();
    id v10 = sub_100366B98((uint64_t)v9, v25, (uint64_t)v6);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_10064F588((uint64_t)v9, _s18AppPageDestinationOMa);
  }
  return v10;
}

id sub_10064D8D0(uint64_t a1)
{
  uint64_t v3 = sub_100063814(&qword_10109CFF0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [self sharedApplication];
  uint64_t v8 = sub_1006BD1C0();

  if (!v1)
  {
    if (*(void *)(v8 + 16))
    {
      swift_retain();
      unsigned __int8 v9 = sub_10069292C();
      if (v9 == 6) {
        unsigned __int8 v9 = 1;
      }
      sub_10004E7A0(v9);
      uint64_t v10 = type metadata accessor for RecordLabel();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v6, a1, v10);
      (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for MusicPageProvider.Destination.recordLabelDetail<A, B>(_:), v3);
      id v7 = (id)MusicPageProvider.page(for:stackAuthority:motionCacheBucketID:)();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    else
    {
      sub_10064CE20();
      swift_allocError();
      *uint64_t v12 = 0;
      swift_willThrow();
      swift_release();
    }
  }
  return v7;
}

uint64_t sub_10064DAF0(uint64_t a1)
{
  v1[4] = a1;
  sub_100063814((uint64_t *)&unk_10109C760);
  v1[5] = swift_task_alloc();
  sub_100063814((uint64_t *)&unk_10109BF50);
  void v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  v1[9] = type metadata accessor for ContainerDetail.Source(0);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  sub_100063814((uint64_t *)&unk_10109C800);
  v1[14] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for Album();
  v1[15] = v2;
  v1[16] = *(void *)(v2 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  sub_100063814(&qword_10109A5A0);
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  sub_100063814((uint64_t *)&unk_10109BF60);
  v1[23] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Song();
  v1[24] = v3;
  v1[25] = *(void *)(v3 - 8);
  v1[26] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[27] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[28] = v5;
  v1[29] = v4;
  return _swift_task_switch(sub_10064DDDC, v5, v4);
}

uint64_t sub_10064DDDC()
{
  uint64_t v78 = v0;
  uint64_t v1 = v0[22];
  Song.albums.getter();
  uint64_t v2 = sub_100063814((uint64_t *)&unk_10109C770);
  v0[30] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[31] = v3;
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  v0[32] = v4;
  v0[33] = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v1, 1, v2) == 1)
  {
    sub_1000637B8(v0[22], &qword_10109A5A0);
    sub_100063814((uint64_t *)&unk_1010A0980);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100E251C0;
    sub_100063814(&qword_1010A9B00);
    *(void *)(v5 + 32) = static PartialMusicProperty<A>.albums.getter();
    v77[0] = v5;
    specialized Array._endMutation()();
    v0[34] = v5;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[35] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_10064E7FC;
    uint64_t v7 = v0[23];
    uint64_t v8 = v0[24];
    return dispatch thunk of MusicPropertyContainer.with(_:)(v7, v5, v8, &protocol witness table for Song);
  }
  uint64_t v9 = v0[24];
  uint64_t v10 = v0[25];
  uint64_t v12 = v0[22];
  uint64_t v11 = v0[23];
  uint64_t v13 = v0[4];
  swift_release();
  sub_1000637B8(v12, &qword_10109A5A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v11, v13, v9);
  uint64_t v14 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[32];
  uint64_t v15 = v0[30];
  uint64_t v17 = v0[25];
  uint64_t v16 = v0[26];
  uint64_t v19 = v0[23];
  uint64_t v18 = v0[24];
  uint64_t v20 = v0[21];
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v16, v19, v18);
  Song.albums.getter();
  if (v14(v20, 1, v15) == 1)
  {
    uint64_t v21 = v0[15];
    uint64_t v22 = v0[16];
    uint64_t v23 = v0[14];
    sub_1000637B8(v0[21], &qword_10109A5A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v23, 1, 1, v21);
LABEL_8:
    uint64_t v30 = v0[14];
    (*(void (**)(void, void))(v0[25] + 8))(v0[26], v0[24]);
    sub_1000637B8(v30, (uint64_t *)&unk_10109C800);
    if (qword_101097FC8 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    sub_100050A90(v31, (uint64_t)qword_101129580);
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136446210;
      v77[0] = v35;
      v0[2] = &type metadata for OpenMusicItemAppIntent;
      sub_100063814(&qword_1010B49C0);
      uint64_t v36 = String.init<A>(describing:)();
      v0[3] = sub_100075D94(v36, v37, v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "%{public}s – unable to obtain album to open song in", v34, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10064CE20();
    swift_allocError();
    *uint64_t v38 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v39 = (uint64_t (*)(void))v0[1];
    return v39();
  }
  uint64_t v24 = v0[30];
  uint64_t v25 = v0[31];
  uint64_t v26 = v0[21];
  uint64_t v27 = v0[15];
  uint64_t v28 = v0[16];
  uint64_t v29 = v0[14];
  sub_1002F5A30(v29);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v24);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v29, 1, v27) == 1) {
    goto LABEL_8;
  }
  (*(void (**)(void, void, void))(v0[16] + 32))(v0[20], v0[14], v0[15]);
  Song.catalogID.getter();
  uint64_t v41 = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = (unsigned char *)v0[13];
  if (v41)
  {
    *uint64_t v42 = 0;
  }
  else
  {
    uint64_t v43 = sub_100063814((uint64_t *)&unk_10109C7C0);
    uint64_t v44 = *(int *)(v43 + 48);
    uint64_t v45 = *(int *)(v43 + 64);
    uint64_t v46 = _s6AlbumsV5ScopeOMa(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v42, 0, 1, v46);
    v42[v44] = 0;
    v42[v45] = 0;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v70 = v0[25];
  uint64_t v71 = v0[24];
  uint64_t v68 = v0[26];
  uint64_t v69 = v0[20];
  uint64_t v47 = v0[19];
  uint64_t v72 = v0[18];
  uint64_t v73 = v0[17];
  uint64_t v48 = v0[15];
  uint64_t v49 = v0[12];
  uint64_t v50 = v0[13];
  uint64_t v65 = v0[16];
  uint64_t v67 = v50;
  uint64_t v51 = v0[11];
  uint64_t v52 = v0[8];
  uint64_t v74 = v0[10];
  uint64_t v75 = v0[7];
  uint64_t v76 = v0[6];
  uint64_t v64 = (uint64_t *)v0[5];
  uint64_t v53 = *(void (**)(uint64_t))(v65 + 16);
  v53(v47);
  sub_10064F524(v50, v49);
  uint64_t v63 = Song.id.getter();
  uint64_t v55 = v54;
  uint64_t v56 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v52, 1, 1, v56);
  ((void (*)(uint64_t, uint64_t, uint64_t))v53)(v72, v47, v48);
  sub_10064F524(v49, v51);
  sub_10040AFEC(v52, v75);
  ((void (*)(uint64_t, uint64_t, uint64_t))v53)(v73, v72, v48);
  sub_10064F524(v51, v74);
  *uint64_t v64 = v63;
  v64[1] = v55;
  uint64_t v57 = type metadata accessor for AlbumDetailDataSource.ProminentTrackSource(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v64, 0, 1, v57);
  sub_10040AFEC(v75, v76);
  uint64_t v58 = sub_100458304(v73, v74, (uint64_t)v64, v76);
  sub_1000637B8(v75, (uint64_t *)&unk_10109BF50);
  sub_10064F588(v51, type metadata accessor for ContainerDetail.Source);
  uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  v59(v72, v48);
  uint64_t v60 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
  uint64_t v66 = sub_1003639C4(v58, v60);
  sub_1000637B8(v52, (uint64_t *)&unk_10109BF50);
  sub_10064F588(v49, type metadata accessor for ContainerDetail.Source);
  v59(v47, v48);
  sub_10064F588(v67, type metadata accessor for ContainerDetail.Source);
  v59(v69, v48);
  (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v68, v71);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v61 = (uint64_t (*)(char *))v0[1];
  return v61(v66);
}

uint64_t sub_10064E7FC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 224);
    uint64_t v4 = *(void *)(v2 + 232);
    uint64_t v5 = sub_10064F1A4;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 224);
    uint64_t v4 = *(void *)(v2 + 232);
    uint64_t v5 = sub_10064E934;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10064E934()
{
  uint64_t v65 = v0;
  swift_release();
  uint64_t v1 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[32];
  uint64_t v2 = v0[30];
  uint64_t v4 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v6 = v0[23];
  uint64_t v5 = v0[24];
  uint64_t v7 = v0[21];
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v3, v6, v5);
  Song.albums.getter();
  if (v1(v7, 1, v2) == 1)
  {
    uint64_t v8 = v0[15];
    uint64_t v9 = v0[16];
    uint64_t v10 = v0[14];
    sub_1000637B8(v0[21], &qword_10109A5A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, 1, 1, v8);
LABEL_4:
    uint64_t v17 = v0[14];
    (*(void (**)(void, void))(v0[25] + 8))(v0[26], v0[24]);
    sub_1000637B8(v17, (uint64_t *)&unk_10109C800);
    if (qword_101097FC8 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100050A90(v18, (uint64_t)qword_101129580);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136446210;
      v64[0] = v22;
      v0[2] = &type metadata for OpenMusicItemAppIntent;
      sub_100063814(&qword_1010B49C0);
      uint64_t v23 = String.init<A>(describing:)();
      v0[3] = sub_100075D94(v23, v24, v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%{public}s – unable to obtain album to open song in", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10064CE20();
    swift_allocError();
    *uint64_t v25 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    return v26();
  }
  uint64_t v11 = v0[30];
  uint64_t v12 = v0[31];
  uint64_t v13 = v0[21];
  uint64_t v14 = v0[15];
  uint64_t v15 = v0[16];
  uint64_t v16 = v0[14];
  sub_1002F5A30(v16);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v11);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v16, 1, v14) == 1) {
    goto LABEL_4;
  }
  (*(void (**)(void, void, void))(v0[16] + 32))(v0[20], v0[14], v0[15]);
  Song.catalogID.getter();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = (unsigned char *)v0[13];
  if (v29)
  {
    *uint64_t v30 = 0;
  }
  else
  {
    uint64_t v31 = sub_100063814((uint64_t *)&unk_10109C7C0);
    uint64_t v32 = *(int *)(v31 + 48);
    uint64_t v33 = *(int *)(v31 + 64);
    uint64_t v34 = _s6AlbumsV5ScopeOMa(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v30, 0, 1, v34);
    v30[v32] = 0;
    v30[v33] = 0;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v57 = v0[25];
  uint64_t v58 = v0[24];
  uint64_t v55 = v0[26];
  uint64_t v56 = v0[20];
  uint64_t v35 = v0[19];
  uint64_t v59 = v0[18];
  uint64_t v60 = v0[17];
  uint64_t v36 = v0[15];
  uint64_t v37 = v0[12];
  uint64_t v38 = v0[13];
  uint64_t v52 = v0[16];
  uint64_t v54 = v38;
  uint64_t v39 = v0[11];
  uint64_t v40 = v0[8];
  uint64_t v61 = v0[10];
  uint64_t v62 = v0[7];
  uint64_t v63 = v0[6];
  uint64_t v51 = (uint64_t *)v0[5];
  uint64_t v41 = *(void (**)(uint64_t))(v52 + 16);
  v41(v35);
  sub_10064F524(v38, v37);
  uint64_t v50 = Song.id.getter();
  uint64_t v43 = v42;
  uint64_t v44 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v40, 1, 1, v44);
  ((void (*)(uint64_t, uint64_t, uint64_t))v41)(v59, v35, v36);
  sub_10064F524(v37, v39);
  sub_10040AFEC(v40, v62);
  ((void (*)(uint64_t, uint64_t, uint64_t))v41)(v60, v59, v36);
  sub_10064F524(v39, v61);
  uint64_t *v51 = v50;
  v51[1] = v43;
  uint64_t v45 = type metadata accessor for AlbumDetailDataSource.ProminentTrackSource(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v51, 0, 1, v45);
  sub_10040AFEC(v62, v63);
  uint64_t v46 = sub_100458304(v60, v61, (uint64_t)v51, v63);
  sub_1000637B8(v62, (uint64_t *)&unk_10109BF50);
  sub_10064F588(v39, type metadata accessor for ContainerDetail.Source);
  uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
  v47(v59, v36);
  uint64_t v48 = objc_allocWithZone((Class)type metadata accessor for ContainerDetail.ViewController(0));
  uint64_t v53 = sub_1003639C4(v46, v48);
  sub_1000637B8(v40, (uint64_t *)&unk_10109BF50);
  sub_10064F588(v37, type metadata accessor for ContainerDetail.Source);
  v47(v35, v36);
  sub_10064F588(v54, type metadata accessor for ContainerDetail.Source);
  v47(v56, v36);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v55, v58);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v49 = (uint64_t (*)(char *))v0[1];
  return v49(v53);
}

uint64_t sub_10064F1A4()
{
  uint64_t v15 = v0;
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[23];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  sub_1000637B8(v3, (uint64_t *)&unk_10109BF60);
  if (qword_101097FC8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100050A90(v4, (uint64_t)qword_101129580);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    uint64_t v14 = v8;
    v0[2] = &type metadata for OpenMusicItemAppIntent;
    sub_100063814(&qword_1010B49C0);
    uint64_t v9 = String.init<A>(describing:)();
    v0[3] = sub_100075D94(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%{public}s – unable to obtain album to open song in", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10064CE20();
  swift_allocError();
  *uint64_t v11 = 0;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_10064F4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010A3B20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10064F524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContainerDetail.Source(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10064F588(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10064F5E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for OpenMusicItemIntentError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10064F6E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenMusicItemIntentError()
{
  return &type metadata for OpenMusicItemIntentError;
}

unint64_t sub_10064F71C()
{
  unint64_t result = qword_1010B49E8;
  if (!qword_1010B49E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B49E8);
  }
  return result;
}

id sub_10064F770(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = &v3[OBJC_IVAR____TtCV5Music19WindowSceneResolver4View__boundWindowScene];
  *(void *)uint64_t v5 = a1;
  *((void *)v5 + 1) = a2;
  *((void *)v5 + 2) = a3;
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for WindowSceneResolver.View();
  swift_retain();
  swift_retain();
  id v6 = a3;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v8 = self;
  id v9 = v7;
  id v10 = [v8 clearColor];
  [v9 setBackgroundColor:v10];

  id v11 = v9;
  [v11 setUserInteractionEnabled:0];

  swift_release();
  swift_release();
  return v11;
}

void sub_10064F9E4()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtCV5Music19WindowSceneResolver4View__boundWindowScene + 16);
  swift_release();
  swift_release();
}

id sub_10064FA40()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WindowSceneResolver.View();
  return [super dealloc];
}

uint64_t type metadata accessor for WindowSceneResolver.View()
{
  return self;
}

ValueMetadata *type metadata accessor for WindowSceneResolver()
{
  return &type metadata for WindowSceneResolver;
}

id sub_10064FB04()
{
  sub_100063814(&qword_1010B4A20);
  Binding.projectedValue.getter();
  id v0 = objc_allocWithZone((Class)type metadata accessor for WindowSceneResolver.View());
  return sub_10064F770(v2, v3, v4);
}

uint64_t sub_10064FB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10064FCCC();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10064FBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10064FCCC();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10064FC4C()
{
}

unint64_t sub_10064FC78()
{
  unint64_t result = qword_1010B4A28;
  if (!qword_1010B4A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4A28);
  }
  return result;
}

unint64_t sub_10064FCCC()
{
  unint64_t result = qword_1010B4A30;
  if (!qword_1010B4A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010B4A30);
  }
  return result;
}

id sub_10064FD20(void *a1)
{
  uint64_t v48 = type metadata accessor for Playlist.Folder.Item();
  uint64_t v2 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  unsigned int v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s19PlaylistTabsRequestVMa(0);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s9PlaylistsVMa(0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for Playlist();
  uint64_t v11 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  objc_super v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v42 - v15;
  uint64_t v17 = sub_100063814(&qword_1010A98D0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s11PlaylistTabCMa(0);
  uint64_t v20 = swift_dynamicCastClass();
  if (v20)
  {
    uint64_t v44 = v13;
    uint64_t v45 = v7;
    uint64_t v21 = v20 + OBJC_IVAR____TtCCE5MusicO9MusicCore7Library3Tab11PlaylistTab_playlist;
    swift_beginAccess();
    uint64_t v22 = v11;
    uint64_t v46 = v19;
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v42 = v23;
    uint64_t v43 = v21;
    v23(v16, (char *)v21, v49);
    id v47 = a1;
    sub_100353B3C();
    uint64_t v24 = RequestResponse.Controller.revision.getter();
    swift_release();
    uint64_t v25 = (uint64_t)v45;
    sub_100652E74(v24 + *(void *)(*(void *)v24 + 96), (uint64_t)v45);
    swift_release();
    sub_100652ED8(v25, (uint64_t)v10, _s9PlaylistsVMa);
    uint64_t v26 = v49;
    uint64_t v45 = (char *)(v11 + 16);
    v23(v4, v16, v49);
    uint64_t v27 = (uint64_t)v46;
    uint64_t v28 = v48;
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for Playlist.Folder.Item.playlist(_:), v48);
    sub_1001423A8((uint64_t)v4, v27);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v28);
    sub_100652F40((uint64_t)v10, _s9PlaylistsVMa);
    uint64_t v29 = *(void (**)(char *, uint64_t))(v22 + 8);
    uint64_t v30 = v16;
    v29(v16, v26);
    uint64_t v31 = type metadata accessor for MusicPlaybackIntentDescriptor();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v27, 1, v31) != 1)
    {
      uint64_t v34 = (void *)MusicPlaybackIntentDescriptor.playbackIntent.getter();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v27, v31);
      uint64_t v35 = v42;
      uint64_t v36 = v49;
      v42(v30, (char *)v43, v49);
      id v37 = v34;
      uint64_t v38 = sub_10072E5AC(v34);
      uint64_t v39 = sub_100739554(v38, (uint64_t)&off_100FC75D8);
      swift_bridgeObjectRelease();
      uint64_t v40 = (uint64_t)v44;
      v35(v44, v30, v36);
      id v33 = sub_100730678((uint64_t)v39, v40);

      v29(v30, v36);
      return v33;
    }

    sub_1000637B8(v27, &qword_1010A98D0);
  }
  return 0;
}

double sub_1006502C8@<D0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_getObjectType();
  _s11PlaylistTabCMa(0);
  uint64_t v8 = swift_dynamicCastClass();
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v4 + OBJC_IVAR____TtCE5MusicO9MusicCore7Library3Tab_selectedLibrary);
    uint64_t v11 = type metadata accessor for DragDropToPlaylist.Destination(0);
    *(void *)(a3 + 24) = v11;
    *(void *)(a3 + 32) = sub_100652528();
    uint64_t v12 = sub_100068018((uint64_t *)a3);
    objc_super v13 = (char *)v12 + *(int *)(v11 + 20);
    uint64_t v14 = v9 + OBJC_IVAR____TtCCE5MusicO9MusicCore7Library3Tab11PlaylistTab_playlist;
    swift_beginAccess();
    uint64_t v15 = type metadata accessor for Playlist();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
    uint64_t v17 = &v13[*(int *)(v16 + 20)];
    uint64_t v18 = type metadata accessor for IndexPath();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    uint64_t v19 = &v13[*(int *)(v16 + 24)];
    *(void *)uint64_t v19 = 0;
    *((void *)v19 + 1) = 0;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 0, 1, v16);
    uint64_t v26 = a1;
    long long v28 = 0u;
    long long v27 = 0u;
    char v29 = 2;
    id v20 = a1;
    swift_retain();
    PresentationSource.init(viewController:position:)(a2, (uint64_t)&v26);
    *uint64_t v12 = v10;
  }
  else if (swift_dynamicCastClass() || (_s8FacetTabCMa(), swift_dynamicCastClass()))
  {
    uint64_t v22 = *(void *)(v4 + OBJC_IVAR____TtCE5MusicO9MusicCore7Library3Tab_selectedLibrary);
    uint64_t v26 = a1;
    long long v27 = 0u;
    long long v28 = 0u;
    char v29 = 2;
    *(void *)(a3 + 24) = &type metadata for DragDropToLibrary.Destination;
    *(void *)(a3 + 32) = sub_100520358();
    uint64_t v23 = swift_allocObject();
    *(void *)a3 = v23;
    id v24 = a1;
    id v25 = a2;
    swift_retain();
    PresentationSource.init(viewController:position:)(v25, (uint64_t)&v26);
    *(void *)(v23 + 16) = v22;
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

void sub_100650650(void *a1, void *a2, uint64_t a3)
{
  sub_1006502C8(a2, a1, (uint64_t)&v15);
  if (v16)
  {
    sub_100068978(&v15, (uint64_t)v17);
    sub_10065087C((uint64_t)v17, (uint64_t)a2, a3);
    sub_1000760E4((uint64_t)v17);
  }
  else
  {
    sub_1000637B8((uint64_t)&v15, (uint64_t *)&unk_1010B4A40);
    if (qword_1010979C8 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100050A90(v5, (uint64_t)qword_101128F78);
    id v6 = a2;
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      v17[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136446210;
      id v10 = v6;
      id v11 = [v10 description];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v14 = v13;

      *(void *)&long long v15 = sub_100075D94(v12, v14, v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unsupported Drop Session for tab=%{public}s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_10065087C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100063814(&qword_10109BA40);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  id v11 = sub_1002CF9B0();
  if (v11[2])
  {
    static TaskPriority.userInitiated.getter();
    uint64_t v12 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
    sub_1000688E4(a1, (uint64_t)v25);
    unint64_t v13 = (void *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    sub_100068978(v25, (uint64_t)(v13 + 4));
    v13[9] = v11;
    v13[10] = v4;
    v13[11] = a2;
    id v14 = v4;
    swift_unknownObjectRetain();
    sub_10007F1B8((uint64_t)v10, (uint64_t)&unk_1010B4A58, (uint64_t)v13);
    swift_release();
    sub_1000637B8((uint64_t)v10, &qword_10109BA40);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1010979C8 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100050A90(v15, (uint64_t)qword_101128F78);
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v24 = a3;
      *(void *)&v25[0] = v19;
      *(_DWORD *)uint64_t v18 = 136446466;
      swift_unknownObjectRetain();
      sub_100063814(&qword_1010B4A60);
      uint64_t v20 = String.init<A>(describing:)();
      uint64_t v24 = sub_100075D94(v20, v21, (uint64_t *)v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      uint64_t v24 = a2;
      swift_unknownObjectRetain();
      uint64_t v22 = String.init<A>(describing:)();
      uint64_t v24 = sub_100075D94(v22, v23, (uint64_t *)v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "No intents found for drop session=%{public}s for model=%{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease_n();
    }
  }
}

uint64_t sub_100650C98@<X0>(void *a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  id v6 = [a1 identifier];
  if (qword_101098758 != -1) {
    swift_once();
  }
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;
  if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      *(void *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return result;
    }
  }
  uint64_t v14 = *(void *)(v3 + OBJC_IVAR____TtCE5MusicO9MusicCore7Library3Tab_selectedLibrary);
  uint64_t v15 = type metadata accessor for DragDropToPlaylist.Destination(0);
  *(void *)(a3 + 24) = v15;
  *(void *)(a3 + 32) = sub_100652528();
  uint64_t v16 = sub_100068018((uint64_t *)a3);
  os_log_type_t v17 = (char *)v16 + *(int *)(v15 + 20);
  uint64_t v18 = type metadata accessor for DragDropToPlaylist.Destination.PlaylistDestination(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v20 = 0;
  memset(v19, 0, sizeof(v19));
  char v21 = -1;
  swift_retain();
  uint64_t result = PresentationSource.init(viewController:position:)(a2, (uint64_t)v19);
  *uint64_t v16 = v14;
  return result;
}

void sub_100650F54(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_100650C98(a2, a1, (uint64_t)&v16);
  if (v17)
  {
    sub_100068978(&v16, (uint64_t)v18);
    sub_10065087C((uint64_t)v18, (uint64_t)a2, a4);
    sub_1000760E4((uint64_t)v18);
  }
  else
  {
    sub_1000637B8((uint64_t)&v16, (uint64_t *)&unk_1010B4A40);
    if (qword_1010979C8 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100050A90(v6, (uint64_t)qword_101128F78);
    id v7 = a2;
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      v18[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446210;
      id v11 = v7;
      id v12 = [v11 description];
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v15 = v14;

      *(void *)&long long v16 = sub_100075D94(v13, v15, v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Unsupported Drop Session for sidebarAction=%{public}s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

uint64_t sub_100651238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return _swift_task_switch(sub_100651260, 0, 0);
}

uint64_t sub_100651260()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100651350;
  uint64_t v4 = *(void *)(v0 + 16);
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v4, (char *)&type metadata for () + 8, (char *)&type metadata for () + 8, 0, 0, &unk_1010B4A70, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_100651350()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100651460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a3;
  v6[9] = a4;
  v6[7] = a2;
  sub_100063814(&qword_10109BA40);
  v6[12] = swift_task_alloc();
  return _swift_task_switch(sub_1006514FC, 0, 0);
}

uint64_t sub_1006514FC()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void **)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v1, 1, 1, v6);
  sub_1000688E4(v5, v0 + 16);
  id v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  sub_100068978((long long *)(v0 + 16), (uint64_t)(v7 + 4));
  v7[9] = v3;
  v7[10] = v4;
  v7[11] = v2;
  swift_bridgeObjectRetain();
  id v8 = v4;
  swift_unknownObjectRetain();
  sub_1002E7994(v1, (uint64_t)&unk_1010B4A80, (uint64_t)v7);
  sub_1000637B8(v1, &qword_10109BA40);
  swift_task_dealloc();
  os_log_type_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100651644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[19] = a6;
  v7[20] = a7;
  v7[17] = a4;
  v7[18] = a5;
  uint64_t v8 = type metadata accessor for Notice(0);
  v7[21] = v8;
  v7[22] = *(void *)(v8 - 8);
  v7[23] = swift_task_alloc();
  sub_100063814(&qword_1010A2CC8);
  v7[24] = swift_task_alloc();
  v7[25] = swift_task_alloc();
  return _swift_task_switch(sub_100651748, 0, 0);
}

uint64_t sub_100651748()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v3 = v1[3];
  uint64_t v2 = v1[4];
  sub_100068990(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[26] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100651808;
  uint64_t v5 = v0[25];
  uint64_t v6 = v0[18];
  return sub_100130A58(v5, v6, v3, v2);
}

uint64_t sub_100651808()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100651EEC;
  }
  else {
    uint64_t v2 = sub_10065191C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10065191C()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  sub_10006CAB8(v0[25], v1, &qword_1010A2CC8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[24];
    sub_1000637B8(v0[25], &qword_1010A2CC8);
    sub_1000637B8(v4, &qword_1010A2CC8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    sub_100652ED8(v0[24], v0[23], type metadata accessor for Notice);
    v0[28] = type metadata accessor for MainActor();
    v0[29] = static MainActor.shared.getter();
    uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100651A84, v8, v7);
  }
}

uint64_t sub_100651A84()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_release();
  *(void *)(v0 + 240) = [v1 tabBarController];
  return _swift_task_switch(sub_100651B0C, 0, 0);
}

uint64_t sub_100651B0C()
{
  if (v0[30])
  {
    v0[31] = static MainActor.shared.getter();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100651C1C, v2, v1);
  }
  else
  {
    uint64_t v3 = v0[25];
    sub_100652F40(v0[23], type metadata accessor for Notice);
    sub_1000637B8(v3, &qword_1010A2CC8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_100651C1C()
{
  uint64_t v1 = *(void **)(v0 + 240);
  swift_release();
  *(void *)(v0 + 256) = UIViewController.noticePresenter.getter();

  return _swift_task_switch(sub_100651C90, 0, 0);
}

uint64_t sub_100651C90()
{
  uint64_t v1 = (void *)v0[32];
  if (v1)
  {
    uint64_t v2 = *v1 + 192;
    v0[33] = *(void *)v2;
    v0[34] = v2 & 0xFFFFFFFFFFFFLL | 0x72F0000000000000;
    v0[35] = static MainActor.shared.getter();
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100651DBC, v4, v3);
  }
  else
  {
    uint64_t v5 = v0[25];
    sub_100652F40(v0[23], type metadata accessor for Notice);
    sub_1000637B8(v5, &qword_1010A2CC8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_100651DBC()
{
  uint64_t v1 = *(void (**)(uint64_t, void))(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 184);
  swift_release();
  v1(v2, 0);
  swift_release();
  return _swift_task_switch(sub_100651E48, 0, 0);
}

uint64_t sub_100651E48()
{
  uint64_t v1 = v0[25];
  sub_100652F40(v0[23], type metadata accessor for Notice);
  sub_1000637B8(v1, &qword_1010A2CC8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100651EEC()
{
  uint64_t v18 = v0;
  if (qword_1010979C8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[17];
  uint64_t v2 = type metadata accessor for Logger();
  sub_100050A90(v2, (uint64_t)qword_101128F78);
  sub_1000688E4(v1, (uint64_t)(v0 + 2));
  swift_unknownObjectRetain();
  swift_errorRetain();
  swift_unknownObjectRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = v0[27];
  uint64_t v7 = v0[20];
  if (v5)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446722;
    sub_1000688E4((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
    sub_100063814(&qword_1010A1250);
    uint64_t v9 = String.init<A>(describing:)();
    v0[12] = sub_100075D94(v9, v10, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000760E4((uint64_t)(v0 + 2));
    *(_WORD *)(v8 + 12) = 2082;
    v0[13] = v7;
    swift_unknownObjectRetain();
    uint64_t v11 = String.init<A>(describing:)();
    v0[14] = sub_100075D94(v11, v12, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2082;
    v0[15] = v6;
    swift_errorRetain();
    sub_100063814((uint64_t *)&unk_1010991A0);
    uint64_t v13 = String.init<A>(describing:)();
    v0[16] = sub_100075D94(v13, v14, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to perform drop on destination=%{public}s for model=%{public}s. Error=%{public}s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    sub_1000760E4((uint64_t)(v0 + 2));
    swift_unknownObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100652264(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 88);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 72);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_1000154F4;
  *(void *)(v5 + 48) = v4;
  *(_OWORD *)(v5 + 32) = v6;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v1 + 32;
  return _swift_task_switch(sub_100651260, 0, 0);
}

uint64_t sub_10065232C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *unint64_t v10 = v3;
  v10[1] = sub_100081D08;
  return sub_100651460(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_1006523F8()
{
  swift_unknownObjectRelease();
  sub_1000760E4(v0 + 32);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100652450(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (uint64_t)(v1 + 4);
  uint64_t v7 = v1[9];
  uint64_t v8 = v1[10];
  uint64_t v9 = v1[11];
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *unint64_t v10 = v2;
  v10[1] = sub_100081D08;
  return sub_100651644(a1, v4, v5, v6, v7, v8, v9);
}

unint64_t sub_100652528()
{
  unint64_t result = qword_1010A45F0;
  if (!qword_1010A45F0)
  {
    type metadata accessor for DragDropToPlaylist.Destination(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010A45F0);
  }
  return result;
}

void *sub_100652580(void *a1, void *a2)
{
  id v3 = sub_10064FD20(a1);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = v3;
  sub_1002D48F4(&v10);
  if ((void)v10)
  {
    sub_10006CAB8((uint64_t)&v10 + 8, (uint64_t)&v12, (uint64_t *)&unk_10109B9C0);
    sub_1000637B8((uint64_t)&v10, (uint64_t *)&unk_1010A2C50);
  }
  else
  {
    sub_1000637B8((uint64_t)&v10, (uint64_t *)&unk_1010A2C50);
    long long v12 = 0u;
    long long v13 = 0u;
    uint64_t v14 = 0;
  }
  char v5 = sub_1007396EC((uint64_t)&v12);
  if ([a2 localContext])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  sub_1000567DC((uint64_t)&v12, (uint64_t)&v10);
  if (!v11)
  {
    sub_1000637B8((uint64_t)&v10, (uint64_t *)&unk_10109BF40);
    goto LABEL_15;
  }
  if (!swift_dynamicCast())
  {
LABEL_15:
    if (v5 == 3)
    {
      uint64_t v7 = 0;
    }
    else
    {
      LOBYTE(v10) = v5;
      uint64_t v7 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
    }
    [a2 setLocalContext:v7];
    swift_unknownObjectRelease();
    goto LABEL_19;
  }
  if (v5 == 3 || v9 != v5)
  {

    return _swiftEmptyArrayStorage;
  }
LABEL_19:
  sub_100063814((uint64_t *)&unk_1010A0980);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100E251C0;
  *(void *)(v8 + 32) = v4;
  *(void *)&long long v10 = v8;
  specialized Array._endMutation()();
  return (void *)v10;
}

uint64_t sub_100652750(void *a1)
{
  swift_getObjectType();
  uint64_t v2 = sub_1002CF9B0();
  if (v2[2])
  {
    uint64_t v3 = a1[3];
    uint64_t v4 = a1[4];
    sub_100068990(a1, v3);
    if (sub_100130834((uint64_t)v2, v3, v4))
    {
      if (qword_1010979C8 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_100050A90(v5, (uint64_t)qword_101128F78);
      swift_unknownObjectRetain_n();
      swift_unknownObjectRetain_n();
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 136446466;
        swift_unknownObjectRetain();
        sub_100063814(&qword_1010B4A60);
        uint64_t v9 = String.init<A>(describing:)();
        sub_100075D94(v9, v10, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v8 + 12) = 2082;
        swift_unknownObjectRetain();
        uint64_t v11 = String.init<A>(describing:)();
        sub_100075D94(v11, v12, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "Received drop session=%{public}s on=%{public}s", (uint8_t *)v8, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_unknownObjectRelease_n();
        swift_unknownObjectRelease_n();
      }
      uint64_t v29 = a1[3];
      uint64_t v30 = a1[4];
      sub_100068990(a1, v29);
      id v31 = sub_100130680((uint64_t)v2, v29, v30);
      swift_bridgeObjectRelease();
      uint64_t v28 = (uint64_t)[v31 operation];
    }
    else
    {
      if (qword_1010979C8 != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Logger();
      sub_100050A90(v21, (uint64_t)qword_101128F78);
      swift_bridgeObjectRetain();
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 136446210;
        swift_bridgeObjectRetain();
        sub_100063814(&qword_10109AEB0);
        uint64_t v25 = Array.description.getter();
        unint64_t v27 = v26;
        swift_bridgeObjectRelease();
        sub_100075D94(v25, v27, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "Destination doesn't accept intents=%{public}s", v24, 0xCu);
        uint64_t v28 = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        return 1;
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1010979C8 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100050A90(v13, (uint64_t)qword_101128F78);
    swift_unknownObjectRetain_n();
    swift_unknownObjectRetain_n();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446466;
      swift_unknownObjectRetain();
      sub_100063814(&qword_1010B4A60);
      uint64_t v17 = String.init<A>(describing:)();
      sub_100075D94(v17, v18, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2082;
      swift_unknownObjectRetain();
      uint64_t v19 = String.init<A>(describing:)();
      sub_100075D94(v19, v20, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "No intents found for drop session=%{public}s on=%{public}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_unknownObjectRelease_n();
    }
    return 0;
  }
  return v28;
}

uint64_t sub_100652DC8()
{
  swift_release();
  swift_unknownObjectWeakDestroy();
  int v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 != 255) {
    sub_1000E0DB0(*(id *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), v1);
  }
  if (*(void *)(v0 + 80)) {
    swift_release();
  }

  return swift_deallocObject();
}

unint64_t sub_100652E34()
{
  unint64_t result = qword_1010A2C40;
  if (!qword_1010A2C40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010A2C40);
  }
  return result;
}

uint64_t sub_100652E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s19PlaylistTabsRequestVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100652ED8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100652F40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100652FA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppInterfaceContext.Activity(0);
  uint64_t v58 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v58 + 64);
  __chkstk_darwin(v2);
  uint64_t v57 = (void (*)(void))((char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v51 - v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v51 - v8;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v51 - v15;
  uint64_t result = sub_1006551EC(a1, (uint64_t)v65);
  if (v67)
  {
    if (v67 == 1)
    {
      uint64_t v18 = *(void *)&v65[0];
      if (!*(void *)&v65[0])
      {
        if (!*(void *)(v59 + 16)) {
          return result;
        }
        *uint64_t v9 = 1;
        type metadata accessor for AppInterfaceContext.Activity.Destination(0);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_1003E1230((uint64_t)v9, (uint64_t)v6);
        uint64_t v40 = v57;
        sub_1003E1230((uint64_t)v6, (uint64_t)v57);
        unint64_t v41 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
        uint64_t v42 = swift_allocObject();
        *(void *)(v42 + 16) = 0;
        *(void *)(v42 + 24) = 0;
        sub_1000F25FC((uint64_t)v40, v42 + v41);
        swift_retain_n();
        sub_100693F74((uint64_t)v6, (uint64_t)sub_10028F568, v42);
        swift_release();
        swift_release();
        sub_100253E58((uint64_t)v6);
        goto LABEL_26;
      }
      uint64_t v19 = qword_1010986F0;
      swift_retain();
      if (v19 != -1) {
        swift_once();
      }
      sub_100050A90(v10, (uint64_t)qword_101129ED0);
      swift_retain_n();
      unint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.default.getter();
      int v22 = v21;
      if (os_log_type_enabled(v20, v21))
      {
        LODWORD(v56) = v22;
        os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        uint64_t v55 = v24;
        *(_DWORD *)os_log_type_t v23 = 136446210;
        *(void *)&long long v61 = v24;
        uint64_t v53 = v23 + 4;
        uint64_t v54 = v23;
        uint64_t v52 = *(uint64_t (**)(uint64_t))(*(void *)v18 + 240);
        uint64_t v25 = swift_retain();
        uint64_t v26 = v52(v25);
        unint64_t v28 = v27;
        swift_release();
        v60[0] = sub_100075D94(v26, v28, (uint64_t *)&v61);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v56, "PlaybackController present - now playing, videoContext=%{public}s", v54, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      if (*(void *)(v59 + 16))
      {
        *uint64_t v9 = 5;
        type metadata accessor for AppInterfaceContext.Activity.Destination(0);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        sub_1003E1230((uint64_t)v9, (uint64_t)v6);
        uint64_t v46 = v57;
        sub_1003E1230((uint64_t)v6, (uint64_t)v57);
        unint64_t v47 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
        uint64_t v48 = swift_allocObject();
        *(void *)(v48 + 16) = 0;
        *(void *)(v48 + 24) = 0;
        sub_1000F25FC((uint64_t)v46, v48 + v47);
        swift_retain_n();
        sub_100693F74((uint64_t)v6, (uint64_t)sub_10028F568, v48);
        swift_release();
        swift_release();
        sub_100253E58((uint64_t)v6);
        swift_release_n();
LABEL_26:
        swift_release();
        return sub_100253E58((uint64_t)v9);
      }
      return swift_release_n();
    }
    else
    {
      sub_100655248((uint64_t)v65, (uint64_t)v60);
      sub_1006552B0((uint64_t)v60, (uint64_t)&v61);
      if (*((void *)&v62 + 1))
      {
        sub_100068978(&v61, (uint64_t)&v68);
        sub_1000688E4((uint64_t)&v68, (uint64_t)&v61);
        BYTE8(v63) = 0;
        static SubscriptionUpsellPresenter.present(for:)(&v61);
        sub_1002C4030((uint64_t)&v61);
        sub_1000760E4((uint64_t)&v68);
        uint64_t v35 = v60;
      }
      else
      {
        sub_100655318((uint64_t)v60);
        uint64_t v35 = (uint64_t *)&v61;
      }
      return sub_100655318((uint64_t)v35);
    }
  }
  else
  {
    long long v68 = v65[0];
    long long v69 = v65[1];
    long long v70 = v65[2];
    uint64_t v71 = v66;
    uint64_t v29 = Logger.playbackController.unsafeMutableAddressor();
    uint64_t v57 = *(void (**)(void))(v11 + 16);
    uint64_t v58 = v29;
    v57(v16);
    sub_1005B5440((uint64_t)&v68);
    sub_1005B5440((uint64_t)&v68);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      v60[0] = v55;
      uint64_t v56 = v11;
      *(_DWORD *)uint64_t v32 = 136446210;
      uint64_t v54 = v32 + 4;
      long long v61 = v68;
      long long v62 = v69;
      long long v63 = v70;
      uint64_t v64 = v71;
      sub_1005B5440((uint64_t)&v68);
      uint64_t v33 = String.init<A>(describing:)();
      *(void *)&long long v61 = sub_100075D94(v33, v34, v60);
      uint64_t v11 = v56;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1004AA460((uint64_t)&v68);
      sub_1004AA460((uint64_t)&v68);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Presenting alert=%{public}s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004AA460((uint64_t)&v68);
      sub_1004AA460((uint64_t)&v68);
    }

    uint64_t v36 = *(void (**)(char *, uint64_t))(v11 + 8);
    v36(v16, v10);
    uint64_t v37 = *(void *)(v59 + 16);
    if (v37)
    {
      unint64_t v38 = *(void *)(v37 + 32);
      if (v38 >> 62 == 2 || v38 >> 62 == 1)
      {
        uint64_t v39 = (void *)(v38 & 0x3FFFFFFFFFFFFFFFLL);
        v38 &= 0x3FFFFFFFFFFFFFFFuLL;
      }
      else
      {
        uint64_t v39 = (void *)(v38 & 0x3FFFFFFFFFFFFFFFLL);
      }
      uint64_t v73 = 0;
      memset(v72, 0, sizeof(v72));
      char v74 = -1;
      id v49 = v39;
      PresentationSource.init(viewController:position:)((void *)v38, (uint64_t)v72);
      sub_1000E08E4((uint64_t)v60, (uint64_t)&v61);
      id v50 = Alert.uiAlertController.getter();
      PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v50, 1, (id)0xF, (void **)1, 0, 0);

      sub_1004AA460((uint64_t)&v68);
      return sub_1000E0890((uint64_t)&v61);
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t))v57)(v13, v58, v10);
      uint64_t v43 = Logger.logObject.getter();
      os_log_type_t v44 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v45 = 0;
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "No presentation source", v45, 2u);
        swift_slowDealloc();

        sub_1004AA460((uint64_t)&v68);
      }
      else
      {
        sub_1004AA460((uint64_t)&v68);
      }
      return ((uint64_t (*)(char *, uint64_t))v36)(v13, v10);
    }
  }
}

uint64_t sub_1006538A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[9] = a4;
  v5[10] = a5;
  uint64_t v6 = sub_100063814(&qword_1010A1AD0);
  v5[11] = v6;
  v5[12] = *(void *)(v6 - 8);
  v5[13] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URL();
  v5[14] = v7;
  v5[15] = *(void *)(v7 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v5[18] = v8;
  v5[19] = *(void *)(v8 - 8);
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[22] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[23] = v10;
  v5[24] = v9;
  return _swift_task_switch(sub_100653A74, v10, v9);
}

uint64_t sub_100653A74()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(v0[9] + 16);
  if (v1 && (uint64_t v2 = *(void *)(v1 + 16), (v0[25] = v2) != 0))
  {
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[26] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100653DBC;
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[10];
    return MusicPageProvider.openURL(_:)(v4, v5);
  }
  else
  {
    uint64_t v6 = v0[21];
    uint64_t v7 = v0[18];
    uint64_t v8 = v0[19];
    uint64_t v9 = v0[17];
    uint64_t v10 = v0[14];
    uint64_t v11 = v0[15];
    uint64_t v12 = v0[10];
    swift_release();
    uint64_t v13 = Logger.playbackController.unsafeMutableAddressor();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v13, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v12, v10);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = v0[21];
    uint64_t v19 = v0[18];
    uint64_t v18 = v0[19];
    uint64_t v20 = v0[17];
    uint64_t v21 = v0[14];
    uint64_t v22 = v0[15];
    if (v16)
    {
      os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v23 = 136315138;
      sub_1006551A4(&qword_1010A1A50, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[5] = sub_100075D94(v24, v25, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Unable to perform segue with url.  App Interface context is missing. url='%s'", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
    else
    {
      (*(void (**)(void, void))(v22 + 8))(v0[17], v0[14]);

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    return v26();
  }
}

uint64_t sub_100653DBC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[23];
    uint64_t v4 = v2[24];
    uint64_t v5 = sub_100653F8C;
  }
  else
  {
    (*(void (**)(void, void))(v2[12] + 8))(v2[13], v2[11]);
    uint64_t v3 = v2[23];
    uint64_t v4 = v2[24];
    uint64_t v5 = sub_100653EE8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100653EE8()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100653F8C()
{
  os_log_type_t v31 = v0;
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v5 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v6 = v0[14];
  uint64_t v7 = v0[10];
  swift_release();
  uint64_t v8 = Logger.playbackController.unsafeMutableAddressor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v8, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v27 = v0[19];
    uint64_t v28 = v0[18];
    uint64_t v29 = v0[20];
    uint64_t v12 = v0[15];
    uint64_t v11 = v0[16];
    uint64_t v13 = v0[14];
    uint64_t v14 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    sub_1006551A4(&qword_1010A1A50, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[6] = sub_100075D94(v15, v16, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    *(_WORD *)(v14 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v17 = Error.localizedDescription.getter();
    v0[8] = sub_100075D94(v17, v18, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Unable perform segue with url. url='%s' error='%s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v28);
  }
  else
  {
    uint64_t v20 = v0[19];
    uint64_t v19 = v0[20];
    uint64_t v21 = v0[18];
    uint64_t v23 = v0[15];
    uint64_t v22 = v0[16];
    uint64_t v24 = v0[14];
    swift_release();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_100654310()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100654350(uint64_t a1)
{
  return sub_100652FA0(a1);
}

uint64_t sub_100654374(uint64_t a1)
{
  return sub_100654B3C(a1);
}

uint64_t sub_100654398()
{
  if (qword_101097EB0 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_1006543F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  type metadata accessor for MainActor();
  v7[6] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[7] = v9;
  v7[8] = v8;
  return _swift_task_switch(sub_100654490, v9, v8);
}

uint64_t sub_100654490()
{
  if (qword_101097EB8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_101129420;
  v0[9] = qword_101129420;
  v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  void *v2 = v0;
  v2[1] = sub_100654574;
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  return PlaybackController.add(_:route:)(v4, v3);
}

uint64_t sub_100654574()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_100654708;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_100654690;
  }
  return _swift_task_switch(v5, v3, v4);
}