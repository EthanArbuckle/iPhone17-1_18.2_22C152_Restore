uint64_t LyricsLoader.hasRequest(for:)()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  void aBlock[6];
  unsigned __int8 v14;

  v1 = v0;
  v2 = Song.id.getter();
  v4 = v3;
  v14 = 0;
  v5 = *(void **)&v0[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  v6 = (void *)swift_allocObject();
  v6[2] = &v14;
  v6[3] = v1;
  v6[4] = v2;
  v6[5] = v4;
  v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100B0CC2C;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_10013DF0C;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A61C;
  aBlock[3] = &unk_10100B470;
  v8 = _Block_copy(aBlock);
  v9 = v5;
  v10 = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    v12 = v14;
    swift_release();
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  void aBlock[6];
  unsigned __int8 v14;

  v1 = v0;
  v2 = sub_100B0A0B0();
  v4 = v3;
  v14 = 0;
  v5 = *(void **)&v0[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  v6 = (void *)swift_allocObject();
  v6[2] = &v14;
  v6[3] = v1;
  v6[4] = v2;
  v6[5] = v4;
  v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100B107EC;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_10013DF0C;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A61C;
  aBlock[3] = &unk_10100B5B0;
  v8 = _Block_copy(aBlock);
  v9 = v5;
  v10 = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    v12 = v14;
    swift_release();
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t LyricsLoader.cancelRequest(for:)()
{
  uint64_t v0 = Song.id.getter();
  sub_100B0A4F0(v0, v1);

  return swift_bridgeObjectRelease();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t vars8;

  uint64_t v0 = sub_100B0A0B0();
  sub_100B0A4F0(v0, v1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100B0875C()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 40), *(int8x16_t *)(v0 + 40), 8uLL);
  v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  void *v2 = v0;
  v2[1] = sub_100B08854;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000010, 0x8000000100DD3B10, sub_100B0CC48, v1, &type metadata for LyricsLoader.Result);
}

uint64_t sub_100B08854()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v2 = sub_100B08990;
  }
  else
  {
    swift_task_dealloc();
    v2 = sub_100B08970;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100B08970()
{
  return (*(uint64_t (**)(void, void, void))(v0 + 8))(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_100B08990()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B089F4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_100063814(&qword_1010C9DE0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __n128 v8 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5, v8);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  LyricsLoader.loadLyrics(for:completion:)(a3, (void (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_100B105B4, v10);
  return swift_release();
}

uint64_t sub_100B08B3C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  if (a3 == 255)
  {
    if (!a4)
    {
      sub_100B0CBA8();
      swift_allocError();
      *uint64_t v5 = 3;
    }
    swift_errorRetain();
    sub_100063814(&qword_1010C9DE0);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    sub_1001CC8D0(a1, a2, a3 & 1);
    sub_100063814(&qword_1010C9DE0);
    return CheckedContinuation.resume(returning:)();
  }
}

id static LyricsLoader.requiredProperties()()
{
  sub_100063814(&qword_1010CF870);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100E26B70;
  *(void *)(v0 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 56) = v2;
  *(void *)(v0 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 88) = v4;
  sub_100063814(&qword_1010C9B60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100E251F0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v6;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100E251D0;
  *(void *)(v7 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v7 + 40) = v8;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v10 = self;
  id v11 = [v10 propertySetWithProperties:isa];

  *(void *)(inited + 48) = v11;
  *(void *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 64) = v12;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100E26B70;
  *(void *)(v13 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v13 + 40) = v14;
  *(void *)(v13 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v13 + 56) = v15;
  *(void *)(v13 + 64) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v13 + 72) = v16;
  *(void *)(v13 + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v13 + 88) = v17;
  Class v18 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v10 propertySetWithProperties:v18];

  *(void *)(inited + 72) = v19;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v20;
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100E251D0;
  *(void *)(v21 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v21 + 40) = v22;
  uint64_t v23 = swift_initStackObject();
  *(_OWORD *)(v23 + 16) = xmmword_100E251D0;
  *(void *)(v23 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v23 + 40) = v24;
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_100E251D0;
  *(void *)(v25 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v25 + 40) = v26;
  Class v27 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v28 = [v10 propertySetWithProperties:v27];

  *(void *)(v23 + 48) = v28;
  sub_100071C80(v23);
  id v29 = objc_allocWithZone((Class)MPPropertySet);
  Class v30 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  sub_100057778(0, &qword_1010C9B68);
  Class v31 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v32 = [v29 initWithProperties:v30 relationships:v31];

  *(void *)(inited + 96) = v32;
  sub_100071C80(inited);
  id v33 = objc_allocWithZone((Class)MPPropertySet);
  Class v34 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  Class v35 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v36 = [v33 initWithProperties:v34 relationships:v35];

  return v36;
}

void LyricsLoader.loadLyrics(for:completion:)(void *a1, void (*a2)(uint64_t, unint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for String.Encoding();
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)&double v10 = __chkstk_darwin().n128_u64[0];
  uint64_t v12 = (char *)&v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [a1 lyrics];
  if (v13)
  {
    id v14 = v13;
    v146 = a2;
    id v15 = [v13 text];
    uint64_t v145 = a3;
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v19 = v18;

      uint64_t v20 = HIBYTE(v19) & 0xF;
      if ((v19 & 0x2000000000000000) == 0) {
        uint64_t v20 = v17 & 0xFFFFFFFFFFFFLL;
      }
      if (v20)
      {
        id v21 = [self standardUserDefaults];
        NSString v22 = String._bridgeToObjectiveC()();
        unsigned int v23 = [v21 BOOLForKey:v22];

        if (v23
          && *DeviceCapabilities.isInternalInstall.unsafeMutableAddressor() == 1
          && (String.trim()(), char v24 = sub_100B08114(), swift_bridgeObjectRelease(), (v24 & 1) != 0)
          && (static String.Encoding.utf8.getter(),
              uint64_t v25 = String.data(using:allowLossyConversion:)(),
              unint64_t v27 = v26,
              (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8),
              v27 >> 60 != 15))
        {
          swift_bridgeObjectRelease();
          id v135 = objc_allocWithZone((Class)MSVLyricsTTMLParser);
          sub_10007AA40(v25, v27);
          Class isa = Data._bridgeToObjectiveC()().super.isa;
          id v137 = [v135 initWithTTMLData:isa];
          sub_10007A748(v25, v27);

          uint64_t v138 = swift_allocObject();
          uint64_t v139 = v145;
          *(void *)(v138 + 16) = v146;
          *(void *)(v138 + 24) = v139;
          v156 = sub_100B0FA34;
          v157 = (char **)v138;
          v152 = _NSConcreteStackBlock;
          uint64_t v153 = 1107296256;
          v154 = sub_100B0A0AC;
          v155 = &unk_10100B538;
          v140 = _Block_copy(&v152);
          swift_retain();
          swift_release();
          [v137 parseWithCompletion:v140];

          _Block_release(v140);
          sub_10007A748(v25, v27);
        }
        else
        {
          v146(v17, v19, 0, 0);

          swift_bridgeObjectRelease();
        }
        return;
      }
      swift_bridgeObjectRelease();
    }
    v43 = &selRef_setAccessibilityTraits_;
    if ([v14 hasStoreLyrics])
    {
      uint64_t v44 = sub_100B0A0B0();
      uint64_t v46 = v45;
      v150 = 0;
      v47 = *(void **)&v4[OBJC_IVAR___MusicLyricsLoader_accessQueue];
      v48 = (void *)swift_allocObject();
      v48[2] = &v150;
      v48[3] = v4;
      v48[4] = v44;
      v48[5] = v46;
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = sub_100B107E8;
      *(void *)(v49 + 24) = v48;
      v156 = sub_10013DF0C;
      v157 = (char **)v49;
      v152 = _NSConcreteStackBlock;
      uint64_t v153 = 1107296256;
      v154 = sub_10007A61C;
      v155 = &unk_10100B4E8;
      v50 = _Block_copy(&v152);
      v43 = v157;
      uint64_t v4 = v4;
      v51 = v47;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      dispatch_sync(v51, v50);

      _Block_release(v50);
      LOBYTE(v50) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v50 & 1) == 0)
      {
        v52 = v150;
        swift_release();
        swift_bridgeObjectRelease();

        uint64_t v53 = (uint64_t)v146;
        if (!v52)
        {
          static ApplicationCapabilities.shared.getter((uint64_t)&v150);
          sub_10005E8DC((uint64_t)&v150);
          if (v151)
          {
            id v123 = [objc_allocWithZone((Class)MPStoreLyricsRequest) init];
            [v123 setSong:a1];
            id v124 = a1;
            sub_100B0D428(v123, v124, v53, v145, v4);

            return;
          }
        }
        id v54 = [self sharedController];
        id v55 = [v54 musicSubscriptionStatus];

        static ApplicationCapabilities.shared.getter((uint64_t)&v152);
        sub_10005E8DC((uint64_t)&v152);
        unsigned int v56 = v153;
        if (qword_1010C8518 != -1) {
          swift_once();
        }
        uint64_t v57 = type metadata accessor for Logger();
        sub_100050A90(v57, (uint64_t)static Logger.lyrics);
        id v58 = a1;
        v59 = v4;
        id v60 = v55;
        id v61 = v58;
        v62 = v59;
        id v63 = v60;
        v64 = Logger.logObject.getter();
        int v65 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v64, (os_log_type_t)v65))
        {
          int v142 = v65;
          uint64_t v66 = swift_slowAlloc();
          uint64_t v143 = swift_slowAlloc();
          uint64_t v149 = v143;
          *(_DWORD *)uint64_t v66 = 136447234;
          uint64_t v147 = (uint64_t)v62;
          uint64_t v67 = String.init<A>(describing:)();
          *(void *)(v66 + 4) = sub_100076010(v67, v68, &v149);
          swift_bridgeObjectRelease();

          *(_WORD *)(v66 + 12) = 2082;
          uint64_t v147 = (uint64_t)v55;
          uint64_t v144 = (uint64_t)v63;
          id v69 = v63;
          sub_100063814(&qword_1010C9B38);
          uint64_t v70 = String.init<A>(describing:)();
          *(void *)(v66 + 14) = sub_100076010(v70, v71, &v149);
          swift_bridgeObjectRelease();

          *(_WORD *)(v66 + 22) = 1026;
          *(_DWORD *)(v66 + 24) = HIWORD(v56) & 1;
          *(_WORD *)(v66 + 28) = 2082;
          id v72 = [v61 title];
          if (v72)
          {
            v73 = v72;
            uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v76 = v75;
          }
          else
          {
            uint64_t v74 = 0;
            uint64_t v76 = 0;
          }
          os_log_type_t v125 = v142;
          uint64_t v147 = v74;
          uint64_t v148 = v76;
          sub_100063814(&qword_1010D0B40);
          uint64_t v126 = String.init<A>(describing:)();
          *(void *)(v66 + 30) = sub_100076010(v126, v127, &v149);
          swift_bridgeObjectRelease();

          *(_WORD *)(v66 + 38) = 2082;
          id v128 = [v61 identifiers];
          id v129 = [v128 description];
          uint64_t v130 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v132 = v131;

          *(void *)(v66 + 40) = sub_100076010(v130, v132, &v149);
          swift_bridgeObjectRelease();

          _os_log_impl((void *)&_mh_execute_header, v64, v125, "Loader<%{public}s> loadLyrics(for:completion:) didn't load store lyrics [not supported by subscription] subscriptionStatus=%{public}s subscriptionStatus.capabilities.contains(.catalogLyricsViewing)=%{BOOL,public}d song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v66, 0x30u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          id v63 = (id)v144;
        }
        else
        {
        }
        sub_100B0CBA8();
        uint64_t v133 = swift_allocError();
        unsigned char *v134 = 2;
        v146(0, 0, 255, v133);
        swift_errorRelease();

        goto LABEL_46;
      }
      __break(1u);
    }
    else if (qword_1010C8518 == -1)
    {
LABEL_28:
      uint64_t v77 = type metadata accessor for Logger();
      sub_100050A90(v77, (uint64_t)static Logger.lyrics);
      id v78 = v14;
      id v79 = a1;
      id v80 = v78;
      id v81 = v79;
      id v82 = v80;
      id v83 = v81;
      v84 = v4;
      id v14 = v82;
      id v85 = v83;
      v86 = v84;
      v87 = Logger.logObject.getter();
      os_log_type_t v88 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v87, v88))
      {
        uint64_t v89 = swift_slowAlloc();
        uint64_t v144 = swift_slowAlloc();
        v150 = (void *)v144;
        *(_DWORD *)uint64_t v89 = 136447234;
        v152 = v86;
        uint64_t v90 = String.init<A>(describing:)();
        *(void *)(v89 + 4) = sub_100076010(v90, v91, (uint64_t *)&v150);
        swift_bridgeObjectRelease();

        *(_WORD *)(v89 + 12) = 1026;
        unsigned int v92 = [v14 v43[158]];

        *(_DWORD *)(v89 + 14) = v92;
        *(_WORD *)(v89 + 18) = 2082;
        id v93 = [v14 text];
        if (v93)
        {
          v94 = v93;
          uint64_t v95 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v97 = v96;
        }
        else
        {
          uint64_t v95 = 0;
          uint64_t v97 = 0;
        }
        v152 = (void **)v95;
        uint64_t v153 = v97;
        sub_100063814(&qword_1010D0B40);
        uint64_t v107 = String.init<A>(describing:)();
        *(void *)(v89 + 20) = sub_100076010(v107, v108, (uint64_t *)&v150);
        swift_bridgeObjectRelease();

        *(_WORD *)(v89 + 28) = 2082;
        id v109 = [v85 title];
        if (v109)
        {
          v110 = v109;
          uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v113 = v112;
        }
        else
        {
          uint64_t v111 = 0;
          uint64_t v113 = 0;
        }
        v152 = (void **)v111;
        uint64_t v153 = v113;
        uint64_t v114 = String.init<A>(describing:)();
        *(void *)(v89 + 30) = sub_100076010(v114, v115, (uint64_t *)&v150);
        swift_bridgeObjectRelease();

        *(_WORD *)(v89 + 38) = 2082;
        id v116 = [v85 identifiers];
        id v117 = [v116 description];
        uint64_t v118 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v120 = v119;

        *(void *)(v89 + 40) = sub_100076010(v118, v120, (uint64_t *)&v150);
        swift_bridgeObjectRelease();

        _os_log_impl((void *)&_mh_execute_header, v87, v88, "Loader<%{public}s> loadLyrics(for:completion:) didn't load lyrics [no lyrics found] lyrics.hasStoreLyrics=%{BOOL,public}d lyrics.text=%{public}s song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v89, 0x30u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_100B0CBA8();
      uint64_t v121 = swift_allocError();
      unsigned char *v122 = 1;
      v146(0, 0, 255, v121);
      swift_errorRelease();
LABEL_46:

      return;
    }
    swift_once();
    goto LABEL_28;
  }
  if (qword_1010C8518 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_100050A90(v28, (uint64_t)static Logger.lyrics);
  id v29 = a1;
  Class v30 = v4;
  id v31 = v29;
  id v32 = v30;
  id v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v145 = a3;
    v146 = a2;
    uint64_t v35 = swift_slowAlloc();
    v150 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 136446722;
    v152 = v32;
    uint64_t v36 = String.init<A>(describing:)();
    *(void *)(v35 + 4) = sub_100076010(v36, v37, (uint64_t *)&v150);
    swift_bridgeObjectRelease();

    *(_WORD *)(v35 + 12) = 2082;
    id v38 = [v31 title];
    if (v38)
    {
      v39 = v38;
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v42 = v41;
    }
    else
    {
      uint64_t v40 = 0;
      uint64_t v42 = 0;
    }
    v152 = (void **)v40;
    uint64_t v153 = v42;
    sub_100063814(&qword_1010D0B40);
    uint64_t v98 = String.init<A>(describing:)();
    *(void *)(v35 + 14) = sub_100076010(v98, v99, (uint64_t *)&v150);
    swift_bridgeObjectRelease();

    *(_WORD *)(v35 + 22) = 2082;
    id v100 = [v31 identifiers];
    id v101 = [v100 description];
    uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v104 = v103;

    *(void *)(v35 + 24) = sub_100076010(v102, v104, (uint64_t *)&v150);
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Loader<%{public}s> loadLyrics(for:completion:) returned without loading lyrics [MPModelLyrics was nil] song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v35, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a2 = v146;
  }
  else
  {
  }
  sub_100B0CBA8();
  uint64_t v105 = swift_allocError();
  unsigned char *v106 = 1;
  a2(0, 0, 255, v105);
  swift_errorRelease();
}

uint64_t sub_100B09FD8(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, uint64_t, uint64_t))
{
  if (!a1) {
    return a3(0, 0, 255, a2);
  }
  type metadata accessor for Lyrics();
  swift_allocObject();
  id v5 = a1;
  uint64_t v6 = Lyrics.init(identifier:songInfo:)(0, 0, v5);
  a3(v6, 0, 1, 0);

  return swift_release();
}

uint64_t sub_100B0A0B0()
{
  uint64_t v1 = v0;
  id v2 = [v0 identifiers];
  uint64_t v3 = MPIdentifierSet.bestStoreIdentifier.getter();
  uint64_t v5 = v4;

  if (!v5)
  {
    id v6 = [v1 identifiers];
    uint64_t v3 = MPIdentifierSet.bestLibraryIdentifier.getter();
    uint64_t v8 = v7;

    if (!v8)
    {
      id v9 = [v1 identifiers];
      NSObject.hashValue.getter();

      return dispatch thunk of CustomStringConvertible.description.getter();
    }
  }
  return v3;
}

uint64_t sub_100B0A38C(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100071D70(a3, a4);
    char v10 = v9;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = 0;
  }
  *a1 = v10 & 1;
  return result;
}

void sub_100B0A434(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (uint64_t *)(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_100071D70(a3, a4);
    if (v10)
    {
      uint64_t v11 = *(void **)(*(void *)(v8 + 56) + 8 * v9);
      id v12 = v11;
    }
    else
    {
      uint64_t v11 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  id v13 = *a1;
  *a1 = v11;
}

void sub_100B0A4F0(uint64_t a1, uint64_t a2)
{
  id v14 = 0;
  uint64_t v5 = *(void **)&v2[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  id v6 = (void *)swift_allocObject();
  v6[2] = &v14;
  v6[3] = v2;
  v6[4] = a1;
  v6[5] = a2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100B105FC;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_10013DF0C;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A61C;
  aBlock[3] = &unk_10100BBB0;
  uint64_t v8 = _Block_copy(aBlock);
  unint64_t v9 = v5;
  char v10 = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    [v14 cancel];
    id v12 = v14;
    swift_release();
  }
}

void sub_100B0A68C(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (uint64_t *)(a2 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (*(void *)(*v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_100071D70(a3, a4);
    if (v10)
    {
      uint64_t v11 = *(void **)(*(void *)(v8 + 56) + 8 * v9);
      id v12 = v11;
    }
    else
    {
      uint64_t v11 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  id v13 = *a1;
  *a1 = v11;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v14 = (void *)sub_100B0CC50(a3, a4);
  swift_endAccess();
  swift_bridgeObjectRelease();
}

uint64_t sub_100B0A794(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void, void, void, void), uint64_t a6)
{
  uint64_t v68 = a6;
  id v69 = a5;
  uint64_t v70 = a1;
  uint64_t v67 = type metadata accessor for String.Encoding();
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin();
  int v65 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v10 = (void *)Strong;
    uint64_t aBlock = 0x3C726564616F4CLL;
    unint64_t v74 = 0xE700000000000000;
    *(void *)&v72[0] = Strong;
    v11._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    v12._countAndFlagsBits = 62;
    v12._object = (void *)0xE100000000000000;
    String.append(_:)(v12);

    uint64_t v13 = aBlock;
    unint64_t v14 = v74;
  }
  else
  {
    unint64_t v14 = 0xEC0000003E303078;
    uint64_t v13 = 0x303C726564616F4CLL;
  }
  uint64_t v71 = v13;
  if (qword_1010C8518 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100050A90(v15, (uint64_t)static Logger.lyrics);
  sub_1000688E4((uint64_t)a4, (uint64_t)&aBlock);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    id v63 = a4;
    uint64_t v19 = v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v64 = a2;
    *(void *)&v72[0] = v20;
    *(_DWORD *)uint64_t v19 = 136446466;
    swift_bridgeObjectRetain();
    *(void *)(v19 + 4) = sub_100076010(v71, v14, (uint64_t *)v72);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2082;
    id v21 = v76;
    NSString v22 = v77;
    sub_100068990(&aBlock, (uint64_t)v76);
    uint64_t v23 = v22[2](v21, v22);
    *(void *)(v19 + 14) = sub_100076010(v23, v24, (uint64_t *)v72);
    swift_bridgeObjectRelease();
    sub_1000760E4((uint64_t)&aBlock);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "%{public}s loadLyrics(for:completion:) completed for %{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    a2 = v64;
    swift_slowDealloc();
    a4 = v63;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    sub_1000760E4((uint64_t)&aBlock);
  }

  swift_beginAccess();
  uint64_t v25 = swift_unknownObjectWeakLoadStrong();
  if (!v25)
  {
    id v31 = 0;
    uint64_t v36 = v70;
    if (a2) {
      goto LABEL_19;
    }
    goto LABEL_14;
  }
  unint64_t v26 = (void *)v25;
  unint64_t v27 = *(void **)(v25 + OBJC_IVAR___MusicLyricsLoader_accessQueue);
  uint64_t v28 = a4;
  sub_1000688E4((uint64_t)a4, (uint64_t)v72);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v26;
  sub_100068978(v72, v29 + 24);
  uint64_t v30 = swift_allocObject();
  id v31 = sub_100B10594;
  *(void *)(v30 + 16) = sub_100B10594;
  *(void *)(v30 + 24) = v29;
  uint64_t v77 = (uint64_t (**)(void *, void *))sub_10013DF0C;
  id v78 = (void *)v30;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v74 = 1107296256;
  uint64_t v75 = sub_10007A61C;
  uint64_t v76 = &unk_10100BB10;
  id v32 = _Block_copy(&aBlock);
  id v33 = v27;
  id v34 = v26;
  swift_retain();
  swift_release();
  dispatch_sync(v33, v32);

  _Block_release(v32);
  LOBYTE(v34) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v34 & 1) == 0)
  {
    a4 = v28;
    uint64_t v36 = v70;
    if (a2) {
      goto LABEL_19;
    }
LABEL_14:
    if (v36)
    {
      id v37 = v36;
      id v38 = [v37 lyrics];
      if (!v38) {
        goto LABEL_18;
      }
      v39 = v38;
      id v40 = [v38 TTML];

      if (!v40) {
        goto LABEL_18;
      }
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v41 = v65;
      static String.Encoding.utf8.getter();
      uint64_t v42 = String.data(using:allowLossyConversion:)();
      unint64_t v44 = v43;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v41, v67);
      if (v44 >> 60 != 15)
      {
        id v53 = objc_allocWithZone((Class)MSVLyricsTTMLParser);
        sub_10007AA40(v42, v44);
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        id v55 = [v53 initWithTTMLData:isa];
        sub_10007A748(v42, v44);

        unsigned int v56 = (void *)swift_allocObject();
        uint64_t v58 = v68;
        uint64_t v57 = v69;
        v56[2] = v37;
        v56[3] = v57;
        uint64_t v59 = v71;
        v56[4] = v58;
        v56[5] = v59;
        v56[6] = v14;
        uint64_t v77 = (uint64_t (**)(void *, void *))sub_100B10544;
        id v78 = v56;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        unint64_t v74 = 1107296256;
        uint64_t v75 = sub_100B0A0AC;
        uint64_t v76 = &unk_10100BA98;
        id v60 = _Block_copy(&aBlock);
        id v61 = v37;
        swift_retain();
        swift_release();
        [v55 parseWithCompletion:v60];

        _Block_release(v60);
        sub_10007A748(v42, v44);
      }
      else
      {
LABEL_18:
        sub_100B0CBA8();
        uint64_t v45 = swift_allocError();
        *uint64_t v46 = 1;
        id v47 = v37;
        sub_100B0D70C(v45, v47, v71, v14);
        swift_errorRelease();
        swift_bridgeObjectRelease();

        uint64_t v48 = swift_allocError();
        *uint64_t v49 = 1;
        v69(0, 0, 255, v48);

        swift_errorRelease();
      }
      return sub_10006ADFC((uint64_t)v31);
    }
LABEL_19:
    uint64_t v50 = a4[3];
    uint64_t v51 = a4[4];
    v52 = sub_100068990(a4, v50);
    sub_100B0DE40(a2, (uint64_t)v52, v71, v14, v50, v51);
    swift_bridgeObjectRelease();
    v69(0, 0, 255, a2);
    return sub_10006ADFC((uint64_t)v31);
  }
  __break(1u);
  return result;
}

void sub_100B0AF60(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[3];
  uint64_t v3 = a2[4];
  sub_100068990(a2, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  uint64_t v6 = v5;
  swift_beginAccess();
  uint64_t v7 = (void *)sub_100B0CC50(v4, v6);
  swift_endAccess();
  swift_bridgeObjectRelease();
}

uint64_t sub_100B0B010(void *a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, void, uint64_t, uint64_t), uint64_t a5, uint64_t a6, unint64_t a7)
{
  if (!a1)
  {
    id v19 = a3;
    sub_100B0D70C(a2, v19, a6, a7);

    return a4(0, 0, 255, a2);
  }
  id v9 = a1;
  id v10 = [a3 lyrics];
  Swift::String v11 = v10;
  if (!v10) {
    goto LABEL_7;
  }
  id v12 = [v10 identifiers];

  id v13 = [v12 lyricsID];
  if (!v13)
  {
    Swift::String v11 = 0;
LABEL_7:
    uint64_t v15 = 0;
    goto LABEL_8;
  }
  Swift::String v11 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

LABEL_8:
  type metadata accessor for Lyrics();
  swift_allocObject();
  id v21 = v9;
  uint64_t v22 = Lyrics.init(identifier:songInfo:)((uint64_t)v11, v15, v21);
  a4(v22, 0, 1, 0);

  return swift_release();
}

uint64_t sub_100B0B1A8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  sub_100068990(a2, v5);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  uint64_t v9 = v8;
  id v10 = (uint64_t *)(a1 + OBJC_IVAR___MusicLyricsLoader_lyricsOperations);
  swift_beginAccess();
  id v11 = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v10;
  *id v10 = 0x8000000000000000;
  sub_100B0CD20((uint64_t)v11, v7, v9, isUniquelyReferenced_nonNull_native);
  *id v10 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

id LyricsLoader.init()()
{
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin();
  type metadata accessor for DispatchQoS();
  __chkstk_darwin();
  uint64_t v5 = OBJC_IVAR___MusicLyricsLoader_lyricsOperations;
  uint64_t v6 = v0;
  *(void *)&v0[v5] = sub_100AF0F30((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v11 = OBJC_IVAR___MusicLyricsLoader_accessQueue;
  sub_100057778(0, (unint64_t *)&qword_1010C8910);
  static DispatchQoS.unspecified.getter();
  id v13 = _swiftEmptyArrayStorage;
  sub_100B10290((unint64_t *)&unk_1010C9B80, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100063814((uint64_t *)&unk_1010C8920);
  sub_100AD7344();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v1);
  *(void *)&v6[v11] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v7 = OBJC_IVAR___MusicLyricsLoader_operationQueue;
  id v8 = [objc_allocWithZone((Class)NSOperationQueue) init];
  [v8 setMaxConcurrentOperationCount:1];
  *(void *)&v6[v7] = v8;

  uint64_t v9 = (objc_class *)type metadata accessor for LyricsLoader();
  v12.receiver = v6;
  v12.super_class = v9;
  return [super init];
}

id LyricsLoader.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LyricsLoader();
  return [super dealloc];
}

uint64_t LyricsLoader.Song.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Song();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  type metadata accessor for LyricsLoader.Song();

  return swift_storeEnumTagMultiPayload();
}

uint64_t LyricsLoader.Song.init(_:in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  uint64_t v4 = type metadata accessor for LyricsLoader.Song();
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a3, 0, 1, v4);
}

uint64_t LyricsLoader.Song.modelObjectSong.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Song();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LyricsLoader.Song();
  __chkstk_darwin(v6);
  id v8 = (id *)((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100B0FAC0(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v9 = *v8;

    return (uint64_t)v9;
  }
  (*(void (**)(char *, id *, uint64_t))(v3 + 32))(v5, v8, v2);
  sub_100057778(0, &qword_1010C9BA0);
  id v10 = [self kindWithVariants:1];
  __chkstk_darwin(v10);
  aBlock[-2] = v5;
  uint64_t v12 = sub_100B0C59C(0xD000000000000012, 0x8000000100DD3B30, v11, (uint64_t)sub_100B0FB24, (uint64_t)&aBlock[-4]);
  __chkstk_darwin(v12);
  aBlock[-2] = v5;
  id v13 = objc_allocWithZone((Class)MPModelSong);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100B0FB2C;
  *(void *)(v14 + 24) = &aBlock[-4];
  aBlock[4] = sub_10001A2C4;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001A278;
  aBlock[3] = &unk_10100B600;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  id v9 = [v13 initWithIdentifiers:v12 block:v15];

  _Block_release(v15);
  swift_release();
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v12 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

void sub_100B0BA54(uint64_t isEscapingClosureAtFileLocation, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Song();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = Song.catalogID.getter();
  if (v9)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v9;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v10;
    *(void *)(v12 + 24) = v11;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_100B10474;
    *(void *)(v4 + 24) = v12;
    aBlock[4] = sub_1002915C0;
    aBlock[5] = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100B0C248;
    aBlock[3] = &unk_10100B958;
    uint64_t v7 = (char *)_Block_copy(aBlock);
    swift_retain();
    swift_release();
    [(id)isEscapingClosureAtFileLocation setUniversalStoreIdentifiersWithBlock:v7];
    _Block_release(v7);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
  }
  static ApplicationCapabilities.shared.getter((uint64_t)aBlock);
  sub_10005E8DC((uint64_t)aBlock);
  if ((aBlock[0] & 0x10000) != 0) {
    goto LABEL_8;
  }
  sub_100057778(0, &qword_1010C9668);
  id v13 = static MPMediaLibrary.device.getter();
  id v14 = [v13 uniqueIdentifier];

  if (v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v16 = swift_allocObject();
    os_log_type_t v17 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
    v5 += 32;
    v17(v16 + v15, v7, v4);
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_100B10364;
    *(void *)(v4 + 24) = v16;
    uint64_t v28 = sub_1002915C0;
    uint64_t v29 = v4;
    unint64_t v24 = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    unint64_t v26 = sub_100B0C248;
    unint64_t v27 = &unk_10100B868;
    uint64_t v7 = (char *)_Block_copy(&v24);
    a2 = v29;
    swift_retain();
    swift_release();
    [(id)isEscapingClosureAtFileLocation setLibraryIdentifiersWithDatabaseID:v14 block:v7];

    _Block_release(v7);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
LABEL_8:
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
      unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v19 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v19 + v18, v7, v4);
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = sub_100B10390;
      *(void *)(v20 + 24) = v19;
      uint64_t v28 = sub_1002915C0;
      uint64_t v29 = v20;
      unint64_t v24 = _NSConcreteStackBlock;
      uint64_t v25 = 1107296256;
      unint64_t v26 = sub_100B0C248;
      unint64_t v27 = &unk_10100B8E0;
      id v21 = _Block_copy(&v24);
      swift_retain();
      swift_release();
      [(id)isEscapingClosureAtFileLocation setUniversalStoreIdentifiersWithBlock:v21];
      _Block_release(v21);
      char v22 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if (v22) {
        __break(1u);
      }
    }
  }
}

id sub_100B0BF60(id result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = result;
  uint64_t v5 = HIBYTE(a3) & 0xF;
  uint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v7 = v6;
  }
  if (!v7)
  {
    uint64_t v21 = 0;
    return [v4 setAdamID:v21];
  }
  if ((a3 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = (uint64_t)sub_100B0CE60(v3, a3, 10);
    LOBYTE(v3) = v25;
    swift_bridgeObjectRelease();
LABEL_44:
    if (v3) {
      uint64_t v21 = 0;
    }
    else {
      uint64_t v21 = v10;
    }
    return [v4 setAdamID:v21];
  }
  if ((a3 & 0x2000000000000000) == 0)
  {
    if ((v3 & 0x1000000000000000) != 0) {
      uint64_t v9 = (unsigned __int8 *)((a3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    uint64_t v10 = (uint64_t)sub_10028E080(v9, v6, 10);
    LOBYTE(v3) = v11 & 1;
    goto LABEL_44;
  }
  v26[0] = v3;
  v26[1] = a3 & 0xFFFFFFFFFFFFFFLL;
  if (v3 == 43)
  {
    if (!v5) {
      goto LABEL_58;
    }
    if (v5 == 1 || (BYTE1(v3) - 48) > 9u) {
      goto LABEL_31;
    }
    uint64_t v10 = (BYTE1(v3) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(v3) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v10 = 10 * (BYTE1(v3) - 48) + (BYTE2(v3) - 48);
      uint64_t v12 = v5 - 3;
      if (v12)
      {
        id v13 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          unsigned int v14 = *v13 - 48;
          if (v14 > 9) {
            goto LABEL_31;
          }
          uint64_t v15 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63) {
            goto LABEL_31;
          }
          uint64_t v10 = v15 + v14;
          if (__OFADD__(v15, v14)) {
            goto LABEL_31;
          }
          LOBYTE(v3) = 0;
          ++v13;
          if (!--v12) {
            goto LABEL_44;
          }
        }
      }
    }
LABEL_43:
    LOBYTE(v3) = 0;
    goto LABEL_44;
  }
  if (v3 != 45)
  {
    if (!v5 || (v3 - 48) > 9u) {
      goto LABEL_31;
    }
    uint64_t v10 = (v3 - 48);
    if (v5 != 1)
    {
      if ((BYTE1(v3) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v10 = 10 * (v3 - 48) + (BYTE1(v3) - 48);
      uint64_t v16 = v5 - 2;
      if (v16)
      {
        os_log_type_t v17 = (unsigned __int8 *)v26 + 2;
        while (1)
        {
          unsigned int v18 = *v17 - 48;
          if (v18 > 9) {
            goto LABEL_31;
          }
          uint64_t v19 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63) {
            goto LABEL_31;
          }
          uint64_t v10 = v19 + v18;
          if (__OFADD__(v19, v18)) {
            goto LABEL_31;
          }
          LOBYTE(v3) = 0;
          ++v17;
          if (!--v16) {
            goto LABEL_44;
          }
        }
      }
    }
    goto LABEL_43;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(v3) - 48) <= 9u)
    {
      if (v5 == 2)
      {
        LOBYTE(v3) = 0;
        uint64_t v10 = -(uint64_t)(BYTE1(v3) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(v3) - 48) <= 9u)
      {
        uint64_t v10 = -10 * (BYTE1(v3) - 48) - (BYTE2(v3) - 48);
        uint64_t v20 = v5 - 3;
        if (!v20) {
          goto LABEL_43;
        }
        char v22 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          unsigned int v23 = *v22 - 48;
          if (v23 > 9) {
            break;
          }
          uint64_t v24 = 10 * v10;
          if ((unsigned __int128)(v10 * (__int128)10) >> 64 != (10 * v10) >> 63) {
            break;
          }
          uint64_t v10 = v24 - v23;
          if (__OFSUB__(v24, v23)) {
            break;
          }
          LOBYTE(v3) = 0;
          ++v22;
          if (!--v20) {
            goto LABEL_44;
          }
        }
      }
    }
LABEL_31:
    uint64_t v10 = 0;
    LOBYTE(v3) = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

void sub_100B0C24C(void *a1)
{
  Song.id.getter();
  id v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 setUniversalCloudLibraryID:v2];
}

uint64_t sub_100B0C2B8(void *a1)
{
  uint64_t result = Song.id.getter();
  uint64_t v4 = v3;
  uint64_t v5 = HIBYTE(v3) & 0xF;
  uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = 0;
    return (uint64_t)[a1 setPersistentID:v21];
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (uint64_t)sub_100B0CE60(result, v4, 10);
    char v11 = v25;
LABEL_44:
    swift_bridgeObjectRelease();
    if (v11) {
      uint64_t v21 = 0;
    }
    else {
      uint64_t v21 = v9;
    }
    return (uint64_t)[a1 setPersistentID:v21];
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v8 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    uint64_t v9 = (uint64_t)sub_10028E080(v8, v6, 10);
    char v11 = v10 & 1;
    goto LABEL_44;
  }
  v26[0] = result;
  v26[1] = v4 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v5) {
      goto LABEL_58;
    }
    if (v5 == 1 || (BYTE1(result) - 48) > 9u) {
      goto LABEL_31;
    }
    uint64_t v9 = (BYTE1(result) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(result) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v9 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      uint64_t v12 = v5 - 3;
      if (v12)
      {
        id v13 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          unsigned int v14 = *v13 - 48;
          if (v14 > 9) {
            goto LABEL_31;
          }
          uint64_t v15 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
            goto LABEL_31;
          }
          uint64_t v9 = v15 + v14;
          if (__OFADD__(v15, v14)) {
            goto LABEL_31;
          }
          char v11 = 0;
          ++v13;
          if (!--v12) {
            goto LABEL_44;
          }
        }
      }
    }
LABEL_43:
    char v11 = 0;
    goto LABEL_44;
  }
  if (result != 45)
  {
    if (!v5 || (result - 48) > 9u) {
      goto LABEL_31;
    }
    uint64_t v9 = (result - 48);
    if (v5 != 1)
    {
      if ((BYTE1(result) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v9 = 10 * (result - 48) + (BYTE1(result) - 48);
      uint64_t v16 = v5 - 2;
      if (v16)
      {
        os_log_type_t v17 = (unsigned __int8 *)v26 + 2;
        while (1)
        {
          unsigned int v18 = *v17 - 48;
          if (v18 > 9) {
            goto LABEL_31;
          }
          uint64_t v19 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
            goto LABEL_31;
          }
          uint64_t v9 = v19 + v18;
          if (__OFADD__(v19, v18)) {
            goto LABEL_31;
          }
          char v11 = 0;
          ++v17;
          if (!--v16) {
            goto LABEL_44;
          }
        }
      }
    }
    goto LABEL_43;
  }
  if (v5)
  {
    if (v5 != 1 && (BYTE1(result) - 48) <= 9u)
    {
      if (v5 == 2)
      {
        char v11 = 0;
        uint64_t v9 = -(uint64_t)(BYTE1(result) - 48);
        goto LABEL_44;
      }
      if ((BYTE2(result) - 48) <= 9u)
      {
        uint64_t v9 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
        uint64_t v20 = v5 - 3;
        if (!v20) {
          goto LABEL_43;
        }
        char v22 = (unsigned __int8 *)v26 + 3;
        while (1)
        {
          unsigned int v23 = *v22 - 48;
          if (v23 > 9) {
            break;
          }
          uint64_t v24 = 10 * v9;
          if ((unsigned __int128)(v9 * (__int128)10) >> 64 != (10 * v9) >> 63) {
            break;
          }
          uint64_t v9 = v24 - v23;
          if (__OFSUB__(v24, v23)) {
            break;
          }
          char v11 = 0;
          ++v22;
          if (!--v20) {
            goto LABEL_44;
          }
        }
      }
    }
LABEL_31:
    uint64_t v9 = 0;
    char v11 = 1;
    goto LABEL_44;
  }
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

uint64_t sub_100B0C59C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  *(void *)(v10 + 24) = a5;
  v14[4] = sub_1002915C0;
  v14[5] = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_1002915B4;
  v14[3] = &unk_10100B7F0;
  char v11 = _Block_copy(v14);
  swift_retain();
  id v12 = [v8 initWithSource:v9 modelKind:a3 block:v11];

  _Block_release(v11);
  swift_release();
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((a3 & 1) == 0) {
    return (uint64_t)v12;
  }
  __break(1u);
  return result;
}

void sub_100B0C70C(void *a1, uint64_t a2)
{
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClassUnconditional();
  id v5 = a1;
  Song.title.getter();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setTitle:v6];

  [v4 setArtistUploadedContent:0];
  id v7 = [self emptyIdentifierSet];
  v12[2] = a2;
  id v8 = objc_allocWithZone((Class)MPModelLyrics);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100B10338;
  *(void *)(v9 + 24) = v12;
  aBlock[4] = sub_1002915C0;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10001A278;
  aBlock[3] = &unk_10100B7A0;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  id v11 = [v8 initWithIdentifiers:v7 block:v10];

  _Block_release(v10);
  swift_release();
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v7)
  {
    __break(1u);
  }
  else
  {
    [v4 setLyrics:v11];

    [v4 setHasVideo:0];
  }
}

void sub_100B0C924(void *a1)
{
  self;
  id v2 = (void *)swift_dynamicCastObjCClassUnconditional();
  id v3 = a1;
  [v2 setHasStoreLyrics:Song.hasLyrics.getter() & 1];
  [v2 setHasLibraryLyrics:Song.hasCustomLyrics.getter() & 1];
  [v2 setHasTimeSyncedLyrics:Song.hasTimeSyncedLyrics.getter() & 1];
  [v2 setText:0];
}

uint64_t sub_100B0CA04()
{
  uint64_t v1 = v0;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  id v2 = [v0 title];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  sub_100063814(&qword_1010D0B40);
  v7._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._object = (void *)0x8000000100DD3BA0;
  v8._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v8);
  id v9 = [v1 identifiers:v4, v6];
  id v10 = [v9 description];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);

  swift_bridgeObjectRelease();
  return 0x7469742E676E6F73;
}

uint64_t sub_100B0CB60()
{
  return sub_100B0A0B0();
}

uint64_t sub_100B0CB84()
{
  return sub_100B0CA04();
}

unint64_t sub_100B0CBA8()
{
  unint64_t result = qword_1010C9B08;
  if (!qword_1010C9B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C9B08);
  }
  return result;
}

void sub_100B0CC00()
{
  sub_100B0A434(*(void ***)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100B0CC0C()
{
  return swift_deallocObject();
}

uint64_t sub_100B0CC1C(uint64_t a1)
{
  return sub_100B0833C(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100B0CC2C()
{
  return sub_100B0A38C(*(unsigned char **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100B0CC38()
{
  return swift_deallocObject();
}

uint64_t sub_100B0CC48(uint64_t a1)
{
  return sub_100B089F4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100B0CC50(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100071D70(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *id v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100AFE5AC();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_10038420C(v6, v9);
  *id v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

void sub_100B0CD20(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100071D70(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    unsigned int v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100AFE5AC();
    goto LABEL_7;
  }
  sub_100AFD760(v15, a4 & 1);
  unint64_t v20 = sub_100071D70(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_15:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  unsigned int v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_100AFE1E4(v12, a2, a3, a1, v18);

  swift_bridgeObjectRetain();
}

unsigned __int8 *sub_100B0CE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    char v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_100B0CF48();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    char v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    char v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  char v11 = sub_10028E080(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_100B0CF48()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_100B0CFC8(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100B0CFC8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_10028E4D4(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          char v11 = sub_100076D40(v9, 0),
          unint64_t v12 = sub_10028E5D4((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_100B0D120(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v10 = type metadata accessor for Song();
  v31[3] = v10;
  v31[4] = (uint64_t)&off_10100B628;
  char v11 = sub_100068018(v31);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v11, a2, v10);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000688E4((uint64_t)v31, (uint64_t)v30);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v12;
  sub_100068978(v30, (uint64_t)(v13 + 3));
  v13[8] = a3;
  v13[9] = a4;
  uint64_t v28 = sub_100B10878;
  uint64_t v29 = v13;
  uint64_t v24 = _NSConcreteStackBlock;
  uint64_t v25 = 1107296256;
  unint64_t v26 = sub_100B0A0AC;
  unint64_t v27 = &unk_10100BC28;
  uint64_t v14 = _Block_copy(&v24);
  swift_retain();
  swift_release();
  id v15 = [a1 newOperationWithResponseHandler:v14];
  _Block_release(v14);
  char v16 = *(void **)&a5[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  sub_1000688E4((uint64_t)v31, (uint64_t)v30);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a5;
  sub_100068978(v30, v17 + 24);
  *(void *)(v17 + 64) = v15;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_100B107F0;
  *(void *)(v18 + 24) = v17;
  uint64_t v28 = sub_10013DF0C;
  uint64_t v29 = (void *)v18;
  uint64_t v24 = _NSConcreteStackBlock;
  uint64_t v25 = 1107296256;
  unint64_t v26 = sub_10007A61C;
  unint64_t v27 = &unk_10100BCA0;
  uint64_t v19 = _Block_copy(&v24);
  unint64_t v20 = v16;
  char v21 = a5;
  id v22 = v15;
  swift_retain();
  swift_release();
  dispatch_sync(v20, v19);

  _Block_release(v19);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v15)
  {
    __break(1u);
  }
  else
  {
    [*(id *)&v21[OBJC_IVAR___MusicLyricsLoader_operationQueue] addOperation:v22];

    swift_release();
    return sub_1000760E4((uint64_t)v31);
  }
  return result;
}

uint64_t sub_100B0D428(void *a1, void *a2, uint64_t a3, uint64_t a4, char *a5)
{
  v30[3] = sub_100057778(0, &qword_1010C9DD8);
  v30[4] = &off_10100B640;
  v30[0] = a2;
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000688E4((uint64_t)v30, (uint64_t)v29);
  char v11 = (void *)swift_allocObject();
  v11[2] = v10;
  sub_100068978(v29, (uint64_t)(v11 + 3));
  v11[8] = a3;
  v11[9] = a4;
  unint64_t v27 = sub_100B104C8;
  uint64_t v28 = v11;
  unsigned int v23 = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  uint64_t v25 = sub_100B0A0AC;
  unint64_t v26 = &unk_10100B9D0;
  uint64_t v12 = _Block_copy(&v23);
  id v13 = a2;
  swift_retain();
  swift_release();
  id v14 = [a1 newOperationWithResponseHandler:v12];
  _Block_release(v12);
  id v15 = *(void **)&a5[OBJC_IVAR___MusicLyricsLoader_accessQueue];
  sub_1000688E4((uint64_t)v30, (uint64_t)v29);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a5;
  sub_100068978(v29, v16 + 24);
  *(void *)(v16 + 64) = v14;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_100B104DC;
  *(void *)(v17 + 24) = v16;
  unint64_t v27 = sub_10013DF0C;
  uint64_t v28 = (void *)v17;
  unsigned int v23 = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  uint64_t v25 = sub_10007A61C;
  unint64_t v26 = &unk_10100BA48;
  uint64_t v18 = _Block_copy(&v23);
  uint64_t v19 = v15;
  unint64_t v20 = a5;
  id v21 = v14;
  swift_retain();
  swift_release();
  dispatch_sync(v19, v18);

  _Block_release(v18);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v14)
  {
    __break(1u);
  }
  else
  {
    [*(id *)&v20[OBJC_IVAR___MusicLyricsLoader_operationQueue] addOperation:v21];

    swift_release();
    return sub_1000760E4((uint64_t)v30);
  }
  return result;
}

uint64_t sub_100B0D70C(uint64_t a1, void *a2, uint64_t a3, unint64_t a4)
{
  v55[3] = sub_100057778(0, &qword_1010C9DD8);
  v55[4] = &off_10100B640;
  v55[0] = a2;
  if (!a1)
  {
    uint64_t v30 = qword_1010C8518;
    id v31 = a2;
    if (v30 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_100050A90(v32, (uint64_t)static Logger.lyrics);
    sub_1000688E4((uint64_t)v55, (uint64_t)v53);
    swift_bridgeObjectRetain_n();
    unint64_t v20 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 136446722;
      swift_bridgeObjectRetain();
      *(void *)(v34 + 4) = sub_100076010(a3, a4, &v52);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v34 + 12) = 2082;
      v51[0] = 0;
      v51[1] = 0;
      sub_100063814(&qword_1010D0B40);
      uint64_t v35 = String.init<A>(describing:)();
      *(void *)(v34 + 14) = sub_100076010(v35, v36, &v52);
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 22) = 2082;
      sub_100068990(v53, v54);
      uint64_t v37 = sub_100B0CA04();
      *(void *)(v34 + 24) = sub_100076010(v37, v38, &v52);
      swift_bridgeObjectRelease();
      sub_1000760E4((uint64_t)v53);
      _os_log_impl((void *)&_mh_execute_header, v20, v33, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [failed to convert Error? to NSError] error.localizedDescription=%{public}s %{public}s", (uint8_t *)v34, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n();
LABEL_25:
    sub_1000760E4((uint64_t)v53);
    goto LABEL_26;
  }
  id v8 = a2;
  uint64_t v9 = (void *)_convertErrorToNSError(_:)();
  id v10 = [v9 domain];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      if (qword_1010C8518 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      sub_100050A90(v17, (uint64_t)static Logger.lyrics);
      sub_1000688E4((uint64_t)v55, (uint64_t)v53);
      id v18 = v9;
      swift_bridgeObjectRetain_n();
      id v19 = v18;
      unint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        v51[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 136446978;
        swift_bridgeObjectRetain();
        *(void *)(v22 + 4) = sub_100076010(a3, a4, v51);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v22 + 12) = 2050;
        id v23 = [v19 code];

        *(void *)(v22 + 14) = v23;
        *(_WORD *)(v22 + 22) = 2082;
        id v24 = [v19 domain];
        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v27 = v26;

        *(void *)(v22 + 24) = sub_100076010(v25, v27, v51);
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 32) = 2082;
        sub_100068990(v53, v54);
        uint64_t v28 = sub_100B0CA04();
        *(void *)(v22 + 34) = sub_100076010(v28, v29, v51);
        swift_bridgeObjectRelease();
        sub_1000760E4((uint64_t)v53);
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [unexpected error domain or code] standardError.code=%{public}ld standardError.domain=%{public}s %{public}s", (uint8_t *)v22, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

LABEL_26:
        return sub_1000760E4((uint64_t)v55);
      }
      swift_bridgeObjectRelease_n();

      goto LABEL_25;
    }
  }
  if ([v9 code] != (id)-3005)
  {
    if (qword_1010C8518 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_100050A90(v39, (uint64_t)static Logger.lyrics);
    sub_1000688E4((uint64_t)v55, (uint64_t)v53);
    swift_bridgeObjectRetain_n();
    id v40 = v9;
    unint64_t v20 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      v51[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136446722;
      swift_bridgeObjectRetain();
      *(void *)(v42 + 4) = sub_100076010(a3, a4, v51);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v42 + 12) = 2082;
      id v43 = v40;
      id v44 = [v43 description];
      uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v47 = v46;

      *(void *)(v42 + 14) = sub_100076010(v45, v47, v51);
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 22) = 2082;
      sub_100068990(v53, v54);
      uint64_t v48 = sub_100B0CA04();
      *(void *)(v42 + 24) = sub_100076010(v48, v49, v51);
      swift_bridgeObjectRelease();
      sub_1000760E4((uint64_t)v53);
      _os_log_impl((void *)&_mh_execute_header, v20, v41, "%{public}s loadLyrics(for:completion:) unexpected error on store lyrics request [found error other than .explicitContentRestricted] error=%{public}s) %{public}s", (uint8_t *)v42, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n();

    goto LABEL_25;
  }

  return sub_1000760E4((uint64_t)v55);
}

uint64_t sub_100B0DE40(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  v57[3] = a5;
  v57[4] = a6;
  uint64_t v12 = sub_100068018(v57);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(v12, a2, a5);
  if (!a1)
  {
    if (qword_1010C8518 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_100050A90(v34, (uint64_t)static Logger.lyrics);
    sub_1000688E4((uint64_t)v57, (uint64_t)v55);
    swift_bridgeObjectRetain_n();
    id v24 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136446722;
      swift_bridgeObjectRetain();
      *(void *)(v36 + 4) = sub_100076010(a3, a4, &v54);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v36 + 12) = 2082;
      v53[0] = 0;
      v53[1] = 0;
      sub_100063814(&qword_1010D0B40);
      uint64_t v37 = String.init<A>(describing:)();
      *(void *)(v36 + 14) = sub_100076010(v37, v38, &v54);
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 22) = 2082;
      sub_100068990(v55, v56);
      uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
      *(void *)(v36 + 24) = sub_100076010(v39, v40, &v54);
      swift_bridgeObjectRelease();
      sub_1000760E4((uint64_t)v55);
      _os_log_impl((void *)&_mh_execute_header, v24, v35, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [failed to convert Error? to NSError] error.localizedDescription=%{public}s %{public}s", (uint8_t *)v36, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n();
LABEL_25:
    sub_1000760E4((uint64_t)v55);
    goto LABEL_26;
  }
  uint64_t v13 = (void *)_convertErrorToNSError(_:)();
  id v14 = [v13 domain];
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      if (qword_1010C8518 != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Logger();
      sub_100050A90(v21, (uint64_t)static Logger.lyrics);
      sub_1000688E4((uint64_t)v57, (uint64_t)v55);
      id v22 = v13;
      swift_bridgeObjectRetain_n();
      id v23 = v22;
      id v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        v53[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 136446978;
        swift_bridgeObjectRetain();
        *(void *)(v26 + 4) = sub_100076010(a3, a4, v53);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v26 + 12) = 2050;
        id v27 = [v23 code];

        *(void *)(v26 + 14) = v27;
        *(_WORD *)(v26 + 22) = 2082;
        id v28 = [v23 domain];
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v31 = v30;

        *(void *)(v26 + 24) = sub_100076010(v29, v31, v53);
        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 32) = 2082;
        sub_100068990(v55, v56);
        uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
        *(void *)(v26 + 34) = sub_100076010(v32, v33, v53);
        swift_bridgeObjectRelease();
        sub_1000760E4((uint64_t)v55);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "%{public}s loadLyrics(for:completion:) failed to handle error on store lyrics request [unexpected error domain or code] standardError.code=%{public}ld standardError.domain=%{public}s %{public}s", (uint8_t *)v26, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

LABEL_26:
        return sub_1000760E4((uint64_t)v57);
      }
      swift_bridgeObjectRelease_n();

      goto LABEL_25;
    }
  }
  if ([v13 code] != (id)-3005)
  {
    if (qword_1010C8518 != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    sub_100050A90(v41, (uint64_t)static Logger.lyrics);
    sub_1000688E4((uint64_t)v57, (uint64_t)v55);
    swift_bridgeObjectRetain_n();
    id v42 = v13;
    id v24 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      v53[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136446722;
      swift_bridgeObjectRetain();
      *(void *)(v44 + 4) = sub_100076010(a3, a4, v53);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 12) = 2082;
      id v45 = v42;
      id v46 = [v45 description];
      uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v49 = v48;

      *(void *)(v44 + 14) = sub_100076010(v47, v49, v53);
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 22) = 2082;
      sub_100068990(v55, v56);
      uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6);
      *(void *)(v44 + 24) = sub_100076010(v50, v51, v53);
      swift_bridgeObjectRelease();
      sub_1000760E4((uint64_t)v55);
      _os_log_impl((void *)&_mh_execute_header, v24, v43, "%{public}s loadLyrics(for:completion:) unexpected error on store lyrics request [found error other than .explicitContentRestricted] error=%{public}s) %{public}s", (uint8_t *)v44, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_26;
    }
    swift_bridgeObjectRelease_n();

    goto LABEL_25;
  }

  return sub_1000760E4((uint64_t)v57);
}

uint64_t _s11MusicCoreUI12LyricsLoaderC4SongO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Song();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  char v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LyricsLoader.Song();
  __chkstk_darwin();
  uint64_t v9 = (void **)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v11 = (char *)&v27 - v10;
  sub_100063814((uint64_t *)&unk_1010C9C90);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void **)&v13[*(int *)(v14 + 56)];
  sub_100B0FAC0(a1, (uint64_t)v13);
  sub_100B0FAC0(a2, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100B0FAC0((uint64_t)v13, (uint64_t)v9);
    uint64_t v16 = *v9;
    uint64_t v17 = v9[1];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = *v15;
      id v19 = v15[1];
      sub_100057778(0, (unint64_t *)&qword_1010CAA20);
      char v20 = static NSObject.== infix(_:_:)();

      if (v20)
      {
        if (v17)
        {
          if (v19)
          {
            sub_100057778(0, &qword_1010C9CA0);
            id v21 = v19;
            id v22 = v17;
            char v23 = static NSObject.== infix(_:_:)();

            if (v23) {
              goto LABEL_20;
            }
            goto LABEL_15;
          }
        }
        else
        {
          if (!v19)
          {
LABEL_20:
            sub_100B100E0((uint64_t)v13);
            char v24 = 1;
            return v24 & 1;
          }
          uint64_t v17 = v19;
        }
      }
      else
      {
      }
LABEL_15:
      sub_100B100E0((uint64_t)v13);
      goto LABEL_16;
    }

LABEL_11:
    sub_100B102D8((uint64_t)v13);
LABEL_16:
    char v24 = 0;
    return v24 & 1;
  }
  sub_100B0FAC0((uint64_t)v13, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    goto LABEL_11;
  }
  (*(void (**)(char *, void **, uint64_t))(v5 + 32))(v7, v15, v4);
  char v24 = static Song.== infix(_:_:)();
  os_log_type_t v25 = *(void (**)(char *, uint64_t))(v5 + 8);
  v25(v7, v4);
  v25(v11, v4);
  sub_100B100E0((uint64_t)v13);
  return v24 & 1;
}

uint64_t _s11MusicCoreUI12LyricsLoaderC08supportsD03forSbSo11MPModelSongC_tFZ_0(void *a1)
{
  id v2 = [a1 lyrics];
  if (v2)
  {
    id v3 = v2;
    if ([a1 hasVideo])
    {

      goto LABEL_4;
    }
    id v14 = [v3 hasLibraryLyrics];
    if (([v3 hasStoreLyrics] & 1) == 0 && !v14)
    {
      if (qword_1010C8518 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_100050A90(v15, (uint64_t)static Logger.lyrics);
      id v16 = a1;
      uint64_t v6 = v3;
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        v133[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 67240962;
        *(_DWORD *)(v19 + 4) = [v6 hasLibraryLyrics];
        *(_WORD *)(v19 + 8) = 1026;
        *(_DWORD *)(v19 + 10) = [v6 hasStoreLyrics];

        *(_WORD *)(v19 + 14) = 2082;
        id v20 = [v16 title];
        if (v20)
        {
          id v21 = v20;
          uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v24 = v23;
        }
        else
        {
          uint64_t v22 = 0;
          uint64_t v24 = 0;
        }
        uint64_t v134 = v22;
        uint64_t v135 = v24;
        sub_100063814(&qword_1010D0B40);
        uint64_t v55 = String.init<A>(describing:)();
        *(void *)(v19 + 16) = sub_100076010(v55, v56, v133);

        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 24) = 2082;
        id v57 = [v16 identifiers];
        id v58 = [v57 description];
        uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v61 = v60;

        *(void *)(v19 + 26) = sub_100076010(v59, v61, v133);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Loader supportsLyrics=false [no lyrics found] lyrics.hasLibraryLyrics=%{BOOL,public}d lyrics.hasStoreLyrics=%{BOOL,public}d song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v19, 0x22u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return 0;
      }

      goto LABEL_27;
    }
    BagProvider.shared.unsafeMutableAddressor();
    swift_retain();
    id v25 = (id)BagProvider.bag.getter();
    swift_release();
    if (v25)
    {
      if (([self supportsLyricsForURLBag:v25] & 1) == 0)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v26 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v27 = [v25 dictionaryForBagKey:v26];

        if (v27)
        {

          if (qword_1010C8518 != -1) {
            swift_once();
          }
          uint64_t v28 = type metadata accessor for Logger();
          sub_100050A90(v28, (uint64_t)static Logger.lyrics);
          id v29 = a1;
          unint64_t v30 = Logger.logObject.getter();
          os_log_type_t v31 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v30, v31))
          {

            return (uint64_t)v14;
          }
          os_log_type_t v129 = v31;
          uint64_t v32 = swift_slowAlloc();
          v133[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v32 = 67240706;
          *(_DWORD *)(v32 + 4) = v14;
          *(_WORD *)(v32 + 8) = 2082;
          id v33 = [v29 title];
          if (v33)
          {
            uint64_t v34 = v33;
            uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v37 = v36;
          }
          else
          {
            uint64_t v35 = 0;
            uint64_t v37 = 0;
          }
          uint64_t v134 = v35;
          uint64_t v135 = v37;
          sub_100063814(&qword_1010D0B40);
          uint64_t v106 = String.init<A>(describing:)();
          *(void *)(v32 + 10) = sub_100076010(v106, v107, v133);

          swift_bridgeObjectRelease();
          *(_WORD *)(v32 + 18) = 2082;
          id v108 = [v29 identifiers];
          id v109 = [v108 description];
          uint64_t v110 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v112 = v111;

          *(void *)(v32 + 20) = sub_100076010(v110, v112, v133);
          swift_bridgeObjectRelease();
          os_log_type_t v113 = v129;
          uint64_t v114 = "Loader supportsLyrics=%{BOOL,public}d [no lyrics keys in bag] song.title=%{public}s song.identifiers=%{public}s";
        }
        else
        {
          if (qword_1010C8518 != -1) {
            swift_once();
          }
          uint64_t v62 = type metadata accessor for Logger();
          sub_100050A90(v62, (uint64_t)static Logger.lyrics);
          id v63 = a1;
          unint64_t v30 = Logger.logObject.getter();
          os_log_type_t v64 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v30, v64))
          {

            return (uint64_t)v14;
          }
          os_log_type_t v131 = v64;
          uint64_t v32 = swift_slowAlloc();
          v133[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v32 = 67240706;
          *(_DWORD *)(v32 + 4) = v14;
          *(_WORD *)(v32 + 8) = 2082;
          id v65 = [v63 title];
          if (v65)
          {
            uint64_t v66 = v65;
            uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v69 = v68;
          }
          else
          {
            uint64_t v67 = 0;
            uint64_t v69 = 0;
          }
          uint64_t v134 = v67;
          uint64_t v135 = v69;
          sub_100063814(&qword_1010D0B40);
          uint64_t v115 = String.init<A>(describing:)();
          *(void *)(v32 + 10) = sub_100076010(v115, v116, v133);

          swift_bridgeObjectRelease();
          *(_WORD *)(v32 + 18) = 2082;
          id v117 = [v63 identifiers];
          id v118 = [v117 description];
          uint64_t v119 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v121 = v120;

          *(void *)(v32 + 20) = sub_100076010(v119, v121, v133);
          swift_bridgeObjectRelease();
          os_log_type_t v113 = v131;
          uint64_t v114 = "Loader supportsLyrics=%{BOOL,public}d [no musicSubscription key in bag] song.title=%{public}s song.iden"
                 "tifiers=%{public}s";
        }
        _os_log_impl((void *)&_mh_execute_header, v30, v113, v114, (uint8_t *)v32, 0x1Cu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (uint64_t)v14;
      }
    }
    else
    {
      if (qword_1010C8518 != -1) {
        swift_once();
      }
      uint64_t v46 = type metadata accessor for Logger();
      sub_100050A90(v46, (uint64_t)static Logger.lyrics);
      id v25 = a1;
      uint64_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v47, v48))
      {
        os_log_type_t v130 = v48;
        uint64_t v49 = swift_slowAlloc();
        v133[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v49 = 67240706;
        *(_DWORD *)(v49 + 4) = v14;
        *(_WORD *)(v49 + 8) = 2082;
        id v50 = [v25 title];
        if (v50)
        {
          unint64_t v51 = v50;
          uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v54 = v53;
        }
        else
        {
          uint64_t v52 = 0;
          uint64_t v54 = 0;
        }
        uint64_t v134 = v52;
        uint64_t v135 = v54;
        sub_100063814(&qword_1010D0B40);
        uint64_t v70 = String.init<A>(describing:)();
        *(void *)(v49 + 10) = sub_100076010(v70, v71, v133);

        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 18) = 2082;
        id v72 = [v25 identifiers];
        id v73 = [v72 description];
        uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v76 = v75;

        *(void *)(v49 + 20) = sub_100076010(v74, v76, v133);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v47, v130, "Loader supportsLyrics=%{BOOL,public}d [bag is nil] song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v49, 0x1Cu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

LABEL_48:
        if ([v3 hasStoreLyrics]
          && (static ApplicationCapabilities.shared.getter((uint64_t)v133),
              uint64_t v77 = v133[3],
              swift_bridgeObjectRetain(),
              sub_10005E8DC((uint64_t)v133),
              char v78 = sub_100B058BC(2u, v77),
              swift_bridgeObjectRelease(),
              (v78 & 1) != 0))
        {
          static ApplicationCapabilities.shared.getter((uint64_t)&v134);
          sub_10005E8DC((uint64_t)&v134);
          if ((v135 & 0x10000) != 0)
          {

            return 1;
          }
          if (qword_1010C8518 != -1) {
            swift_once();
          }
          uint64_t v79 = type metadata accessor for Logger();
          sub_100050A90(v79, (uint64_t)static Logger.lyrics);
          id v80 = a1;
          id v81 = Logger.logObject.getter();
          os_log_type_t v82 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v81, v82))
          {

            return (uint64_t)v14;
          }
          uint64_t v83 = swift_slowAlloc();
          uint64_t v132 = swift_slowAlloc();
          *(_DWORD *)uint64_t v83 = 67240706;
          *(_DWORD *)(v83 + 4) = v14;
          *(_WORD *)(v83 + 8) = 2082;
          id v84 = [v80 title];
          if (v84)
          {
            id v85 = v84;
            static String._unconditionallyBridgeFromObjectiveC(_:)();
          }
          sub_100063814(&qword_1010D0B40);
          uint64_t v122 = String.init<A>(describing:)();
          *(void *)(v83 + 10) = sub_100076010(v122, v123, &v132);

          swift_bridgeObjectRelease();
          *(_WORD *)(v83 + 18) = 2082;
          id v124 = [v80 identifiers];
          id v125 = [v124 description];
          uint64_t v126 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v128 = v127;

          *(void *)(v83 + 20) = sub_100076010(v126, v128, &v132);
          swift_bridgeObjectRelease();
          os_log_type_t v101 = v82;
          uint64_t v102 = "Loader supportsLyrics=%{BOOL,public}d [not supported by subscription] subscriptionCapabilities.contains"
                 "(.catalogLyricsViewing)=false song.title=%{public}s song.identifiers=%{public}s";
          unint64_t v103 = v81;
          unint64_t v104 = (uint8_t *)v83;
          uint32_t v105 = 28;
        }
        else
        {
          if (qword_1010C8518 != -1) {
            swift_once();
          }
          uint64_t v86 = type metadata accessor for Logger();
          sub_100050A90(v86, (uint64_t)static Logger.lyrics);
          id v87 = a1;
          id v3 = v3;
          id v81 = Logger.logObject.getter();
          os_log_type_t v88 = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v81, v88))
          {

            return (uint64_t)v14;
          }
          uint64_t v89 = swift_slowAlloc();
          uint64_t v132 = swift_slowAlloc();
          *(_DWORD *)uint64_t v89 = 67241218;
          *(_DWORD *)(v89 + 4) = v14;
          *(_WORD *)(v89 + 8) = 1026;
          *(_DWORD *)(v89 + 10) = [v3 hasStoreLyrics];

          *(_WORD *)(v89 + 14) = 1026;
          static ApplicationCapabilities.shared.getter((uint64_t)&v134);
          uint64_t v90 = v136;
          swift_bridgeObjectRetain();
          sub_10005E8DC((uint64_t)&v134);
          char v91 = sub_100B058BC(2u, v90);
          swift_bridgeObjectRelease();
          *(_DWORD *)(v89 + 16) = v91 & 1;
          *(_WORD *)(v89 + 20) = 2082;
          id v92 = [v87 title];
          if (v92)
          {
            id v93 = v92;
            static String._unconditionallyBridgeFromObjectiveC(_:)();
          }
          sub_100063814(&qword_1010D0B40);
          uint64_t v94 = String.init<A>(describing:)();
          *(void *)(v89 + 22) = sub_100076010(v94, v95, &v132);

          swift_bridgeObjectRelease();
          *(_WORD *)(v89 + 30) = 2082;
          id v96 = [v87 identifiers];
          id v97 = [v96 description];
          uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v100 = v99;

          *(void *)(v89 + 32) = sub_100076010(v98, v100, &v132);
          swift_bridgeObjectRelease();
          os_log_type_t v101 = v88;
          uint64_t v102 = "Loader supportsLyrics=%{BOOL,public}d [can't support store lyrics] lyrics.hasStoreLyrics=%{BOOL,public}"
                 "d allowsSubscriptionContent=%{BOOL,public}d song.title=%{public}s song.identifiers=%{public}s";
          unint64_t v103 = v81;
          unint64_t v104 = (uint8_t *)v89;
          uint32_t v105 = 40;
        }
        _os_log_impl((void *)&_mh_execute_header, v103, v101, v102, v104, v105);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return (uint64_t)v14;
      }
    }
    goto LABEL_48;
  }
LABEL_4:
  if (qword_1010C8518 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100050A90(v4, (uint64_t)static Logger.lyrics);
  id v5 = a1;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    v133[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446466;
    id v9 = [v5 title];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v13 = 0;
    }
    uint64_t v134 = v11;
    uint64_t v135 = v13;
    sub_100063814(&qword_1010D0B40);
    uint64_t v38 = String.init<A>(describing:)();
    *(void *)(v8 + 4) = sub_100076010(v38, v39, v133);

    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    id v40 = [v5 identifiers];
    id v41 = [v40 description];
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v44 = v43;

    *(void *)(v8 + 14) = sub_100076010(v42, v44, v133);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Loader supportsLyrics=false [MPModelLyrics was nil] song.title=%{public}s song.identifiers=%{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
LABEL_27:

    return 0;
  }

  return 0;
}

uint64_t sub_100B0F9EC()
{
  return swift_deallocObject();
}

uint64_t sub_100B0F9FC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B0FA34(void *a1, uint64_t a2)
{
  return sub_100B09FD8(a1, a2, *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_100B0FA40()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for LyricsLoader()
{
  return self;
}

uint64_t type metadata accessor for LyricsLoader.Song()
{
  uint64_t result = qword_1010C9C48;
  if (!qword_1010C9C48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100B0FAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LyricsLoader.Song();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100B0FB24(uint64_t a1)
{
  sub_100B0BA54(a1, *(void *)(v1 + 16));
}

void sub_100B0FB2C(void *a1)
{
  sub_100B0C70C(a1, *(void *)(v1 + 16));
}

uint64_t sub_100B0FB34()
{
  return swift_deallocObject();
}

unint64_t sub_100B0FB48()
{
  unint64_t result = qword_1010C9BA8;
  if (!qword_1010C9BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C9BA8);
  }
  return result;
}

uint64_t destroy for LyricsLoader.Result(uint64_t a1)
{
  return sub_1000D1500(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s11MusicCoreUI12LyricsLoaderC6ResultOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1001CC8D0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LyricsLoader.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1001CC8D0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1000D1500(v6, v7, v8);
  return a1;
}

__n128 initializeBufferWithCopyOfBuffer for Corner(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LyricsLoader.Result(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1000D1500(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for LyricsLoader.Result()
{
  return &type metadata for LyricsLoader.Result;
}

unsigned char *storeEnumTagSinglePayload for LyricsLoader.LyricsError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B0FD8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LyricsLoader.LyricsError()
{
  return &type metadata for LyricsLoader.LyricsError;
}

char *initializeBufferWithCopyOfBuffer for LyricsLoader.Song(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned int v6 = *a2;
      uint64_t v7 = a2[1];
      *(void *)a1 = v6;
      *((void *)a1 + 1) = v7;
      char v8 = v6;
      id v9 = v7;
    }
    else
    {
      uint64_t v11 = type metadata accessor for Song();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for LyricsLoader.Song(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    uint64_t v2 = *(void **)(a1 + 8);
  }
  else
  {
    uint64_t v3 = type metadata accessor for Song();
    unsigned int v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    v4(a1, v3);
  }
}

void *initializeWithCopy for LyricsLoader.Song(void *a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unsigned int v4 = *(void **)a2;
    int v5 = *(void **)(a2 + 8);
    *a1 = v4;
    a1[1] = v5;
    id v6 = v4;
    id v7 = v5;
  }
  else
  {
    uint64_t v8 = type metadata accessor for Song();
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for LyricsLoader.Song(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_100B100E0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned int v4 = *a2;
      *a1 = *a2;
      int v5 = a2[1];
      a1[1] = v5;
      id v6 = v4;
      id v7 = v5;
    }
    else
    {
      uint64_t v8 = type metadata accessor for Song();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100B100E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LyricsLoader.Song();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *assignWithTake for LyricsLoader.Song(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100B100E0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for Song();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100B10200()
{
  uint64_t result = type metadata accessor for Song();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100B10290(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B102D8(uint64_t a1)
{
  uint64_t v2 = sub_100063814((uint64_t *)&unk_1010C9C90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100B10338(void *a1)
{
}

uint64_t sub_100B10340()
{
  return swift_deallocObject();
}

uint64_t sub_100B10350()
{
  return swift_deallocObject();
}

uint64_t sub_100B10364(uint64_t a1)
{
  return sub_100B103A8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100B0C2B8);
}

uint64_t sub_100B1037C()
{
  return swift_deallocObject();
}

uint64_t sub_100B10390(uint64_t a1)
{
  return sub_100B103A8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100B0C24C);
}

uint64_t sub_100B103A8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for Song() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_100B1042C()
{
  return swift_deallocObject();
}

uint64_t sub_100B1043C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_100B10474(void *a1)
{
  return sub_100B0BF60(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100B1047C()
{
  return swift_deallocObject();
}

uint64_t sub_100B1048C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100B104C8(void *a1, uint64_t a2)
{
  return sub_100B0A794(a1, a2, *(void *)(v2 + 16), (void *)(v2 + 24), *(void (**)(void, void, void, void))(v2 + 64), *(void *)(v2 + 72));
}

uint64_t sub_100B104DC()
{
  return sub_100B0B1A8(*(void *)(v0 + 16), (void *)(v0 + 24), *(void **)(v0 + 64));
}

uint64_t sub_100B104EC()
{
  return swift_deallocObject();
}

uint64_t sub_100B104FC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100B10544(void *a1, uint64_t a2)
{
  return sub_100B0B010(a1, a2, *(void **)(v2 + 16), *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_100B10554()
{
  sub_1000760E4(v0 + 24);

  return swift_deallocObject();
}

void sub_100B10594()
{
  sub_100B0AF60(*(void *)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_100B105A0()
{
  return swift_deallocObject();
}

uint64_t sub_100B105BC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100B105FC()
{
  sub_100B0A68C(*(void ***)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100B10608()
{
  return swift_deallocObject();
}

uint64_t sub_100B1061C()
{
  uint64_t v1 = sub_100063814(&qword_1010C9DE0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_100B106B0(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  return sub_100B08B3C(a1, a2, a3, a4);
}

uint64_t sub_100B10744()
{
  swift_release();
  sub_1000760E4(v0 + 24);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B10790()
{
  sub_1000760E4(v0 + 24);

  return swift_deallocObject();
}

uint64_t sub_100B107D8()
{
  return swift_deallocObject();
}

uint64_t sub_100B1087C(uint64_t a1)
{
  uint64_t v2 = v1;
  memcpy(v8, &v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
  sub_100262548((uint64_t)v8);
  LOBYTE(a1) = _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v8, a1);
  uint64_t result = sub_1002622C8((uint64_t)v8);
  if ((a1 & 1) == 0)
  {
    sub_100B12B7C(0);
    [v2 bounds];
    sub_100B122C0(v5);
    if (v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
    {
      sub_100B12E9C();
      uint64_t v6 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
      [*(id *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView] removeFromSuperview];
      id v7 = *(void **)&v2[v6];
      *(void *)&v2[v6] = 0;
    }
    else
    {
      sub_100B12C24();
      if (*(void *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
      {
        swift_retain();
        sub_100B14030();
        swift_release();
      }
    }
    return sub_100B114EC(0, *(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress]);
  }
  return result;
}

void sub_100B10990(char a1, char a2)
{
  char v50 = a1 & 1;
  if (v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == (a1 & 1)) {
    return;
  }
  uint64_t v3 = v2;
  v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] = v50;
  if (a1)
  {
    sub_100B12E9C();
    uint64_t v6 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    [*(id *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView] removeFromSuperview];
    id v7 = *(void **)&v3[v6];
    *(void *)&v3[v6] = 0;

    if ((a2 & 1) == 0) {
      return;
    }
  }
  else
  {
    if ((a2 & 1) == 0)
    {
      sub_100B12C24();
      if (*(void *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
      {
        swift_retain();
        sub_100B14030();
        swift_release();
      }
      return;
    }
    sub_100057778(0, (unint64_t *)&qword_1010C8910);
    uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
    id v9 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:100.0 damping:18.0 initialVelocity:0.0];
    [v9 settlingDuration];

    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v3;
    uint64_t v11 = v3;
    OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100B13DF8, v10);

    swift_release();
  }
  if (!*(void *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation]) {
    return;
  }
  uint64_t v12 = 240;
  if (v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind]) {
    uint64_t v12 = 264;
  }
  uint64_t v13 = *(void **)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + v12];
  swift_retain();
  id v14 = [v13 CGColor];
  uint64_t v47 = &v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs];
  id v15 = [*(id *)&v3[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 248] CGColor];
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [self animationWithKeyPath:v16];

  CASpringAnimation.springParameters.setter([objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:100.0 damping:18.0 initialVelocity:0.0]);
  if (a1) {
    id v18 = v15;
  }
  else {
    id v18 = v14;
  }
  uint64_t v46 = v14;
  if (a1) {
    id v19 = v14;
  }
  else {
    id v19 = v15;
  }
  [v17 setFromValue:v18];
  id v48 = v19;
  uint64_t v49 = v17;
  [v17 setToValue:v19];
  unint64_t v20 = swift_bridgeObjectRetain();
  unint64_t v21 = (unint64_t)sub_100B11134(v20);
  swift_bridgeObjectRelease();
  id v45 = v15;
  if (v21 >> 62) {
    goto LABEL_40;
  }
  uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v22)
  {
    uint64_t v23 = 4;
    while (1)
    {
      uint64_t v24 = (v21 & 0xC000000000000001) != 0
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (char *)*(id *)(v21 + 8 * v23);
      id v25 = v24;
      uint64_t v26 = v23 - 3;
      if (__OFADD__(v23 - 4, 1)) {
        break;
      }
      uint64_t v27 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer;
      uint64_t v28 = *(void **)&v24[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer];
      if (!v28) {
        goto LABEL_56;
      }
      id v29 = v28;
      NSString v30 = String._bridgeToObjectiveC()();
      [v29 addAnimation:v49 forKey:v30];

      os_log_type_t v31 = *(void **)&v25[v27];
      if (!v31) {
        goto LABEL_57;
      }
      [v31 setBackgroundColor:v48];
      sub_100057778(0, (unint64_t *)&qword_1010CD3B0);
      id v32 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:100.0 damping:18.0 initialVelocity:0.0];
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v25;
      *(unsigned char *)(v33 + 24) = v50;
      uint64_t v34 = v25;
      static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v32, 0, sub_100B13D84, v33, 0, 0, 0.0);

      swift_release();
      ++v23;
      if (v26 == v22) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
LABEL_26:
  swift_bridgeObjectRelease();
  unint64_t v35 = swift_bridgeObjectRetain();
  uint64_t v36 = sub_100B113C8(v35);
  swift_bridgeObjectRelease();
  unint64_t v37 = (unint64_t)sub_100B112A4((unint64_t)v36);
  swift_bridgeObjectRelease();
  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    unint64_t v39 = v47;
    if (!v38) {
      goto LABEL_43;
    }
  }
  else
  {
    uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v39 = v47;
    if (!v38) {
      goto LABEL_43;
    }
  }
  if (v38 >= 1)
  {
    uint64_t v40 = 0;
    if ((v37 & 0xC000000000000001) == 0) {
      goto LABEL_31;
    }
LABEL_30:
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    while (1)
    {
      memcpy(__dst, v39, 0x219uLL);
      sub_100262548((uint64_t)__dst);
      sub_100B189F8();
      sub_1002622C8((uint64_t)__dst);
      swift_release();
      if (v38 - 1 == v40) {
        break;
      }
      ++v40;
      if ((v37 & 0xC000000000000001) != 0) {
        goto LABEL_30;
      }
LABEL_31:
      swift_retain();
    }
LABEL_43:
    swift_bridgeObjectRelease();
    unint64_t v41 = swift_bridgeObjectRetain();
    unint64_t v42 = (unint64_t)sub_100B113C8(v41);
    swift_bridgeObjectRelease();
    if (v42 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v43)
      {
LABEL_45:
        if (v43 >= 1)
        {
          for (uint64_t i = 0; i != v43; ++i)
          {
            if ((v42 & 0xC000000000000001) != 0) {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              swift_retain();
            }
            sub_100B18D9C();
            swift_release();
          }
          goto LABEL_52;
        }
        goto LABEL_55;
      }
    }
    else
    {
      uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v43) {
        goto LABEL_45;
      }
    }
LABEL_52:

    swift_bridgeObjectRelease();
    swift_release();

    return;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
}

void sub_100B11080(uint64_t a1)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected) == 1)
  {
    sub_100B12E9C();
    uint64_t v2 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    [*(id *)(a1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView) removeFromSuperview];
    uint64_t v3 = *(void **)(a1 + v2);
    *(void *)(a1 + v2) = 0;
  }
  else
  {
    sub_100B12C24();
    if (*(void *)(a1
                   + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation))
    {
      swift_retain();
      sub_100B14030();
      swift_release();
    }
  }
}

void *sub_100B11134(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      do
      {
        uint64_t v4 = v3 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_15;
          }
        }
        else
        {
          uint64_t v5 = *(void *)(a1 + 8 * v3);
          swift_retain();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_15:
            __break(1u);
            goto LABEL_16;
          }
        }
        id v7 = *(void **)(v5 + 72);
        id v8 = v7;
        swift_release();
        if (v7)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        ++v3;
      }
      while (v6 != v2);
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_100B112A4(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      do
      {
        uint64_t v4 = v3 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_11;
          }
        }
        else
        {
          uint64_t v5 = *(void *)(a1 + 8 * v3);
          swift_retain();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_11:
            __break(1u);
            goto LABEL_12;
          }
        }
        unint64_t v7 = *(void *)(v5 + 72);
        swift_bridgeObjectRetain();
        swift_release();
        sub_100B9B13C(v7);
        ++v3;
      }
      while (v6 != v2);
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_100B113C8(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      do
      {
        uint64_t v4 = v3 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_11;
          }
        }
        else
        {
          uint64_t v5 = *(void *)(a1 + 8 * v3);
          swift_retain();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_11:
            __break(1u);
            goto LABEL_12;
          }
        }
        unint64_t v7 = *(void *)(v5 + 16);
        swift_bridgeObjectRetain();
        swift_release();
        sub_100B9B178(v7);
        ++v3;
      }
      while (v6 != v2);
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100B114EC(uint64_t result, double a2)
{
  uint64_t v3 = &v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs];
  double v4 = *(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 336];
  double v5 = v4 + a2;
  if (*(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] != v4 + a2)
  {
    *(double *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] = v5;
    if (v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
    {
      if (result)
      {
        uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
        if (!v6) {
          return result;
        }
        char v7 = v3[40];
        uint64_t v8 = *((void *)v3 + 6);
        char v9 = v3[56];
        uint64_t v10 = *((void *)v3 + 8);
        char v11 = v3[72];
        uint64_t v12 = *((void *)v3 + 22);
        char v13 = v3[184];
        uint64_t v14 = *((void *)v3 + 26);
        uint64_t v15 = *((void *)v3 + 33);
        uint64_t v16 = *((void *)v3 + 34);
        uint64_t v17 = *((void *)v3 + 35);
        uint64_t v18 = *((void *)v3 + 40);
        uint64_t v19 = *((void *)v3 + 41);
        uint64_t v20 = *((void *)v3 + 43);
        uint64_t v21 = *((void *)v3 + 46);
        uint64_t v22 = *((void *)v3 + 47);
        uint64_t v23 = *((void *)v3 + 48);
        uint64_t v24 = *((void *)v3 + 49);
        uint64_t v25 = *((void *)v3 + 56);
        uint64_t v26 = *((void *)v3 + 57);
        uint64_t v27 = *((void *)v3 + 60);
        uint64_t v28 = *((void *)v3 + 61);
        uint64_t v29 = *((void *)v3 + 66);
        char v30 = v3[536];
        *(void *)&v45[0] = *(void *)v3;
        *(_OWORD *)((char *)v45 + 8) = *(_OWORD *)(v3 + 8);
        *(_OWORD *)((char *)&v45[1] + 8) = *(_OWORD *)(v3 + 24);
        BYTE8(v45[2]) = v7;
        *(void *)&v45[3] = v8;
        BYTE8(v45[3]) = v9;
        *(void *)&v45[4] = v10;
        BYTE8(v45[4]) = v11;
        long long v31 = *((_OWORD *)v3 + 6);
        v45[5] = *((_OWORD *)v3 + 5);
        v45[6] = v31;
        long long v32 = *((_OWORD *)v3 + 8);
        v45[7] = *((_OWORD *)v3 + 7);
        v45[8] = v32;
        long long v33 = *((_OWORD *)v3 + 10);
        v45[9] = *((_OWORD *)v3 + 9);
        v45[10] = v33;
        *(void *)&v45[11] = v12;
        BYTE8(v45[11]) = v13;
        v45[12] = *((_OWORD *)v3 + 12);
        *(_OWORD *)((char *)&v45[13] + 8) = *(_OWORD *)(v3 + 216);
        *(_OWORD *)((char *)&v45[14] + 8) = *(_OWORD *)(v3 + 232);
        *(_OWORD *)((char *)&v45[15] + 8) = *(_OWORD *)(v3 + 248);
        *(void *)&v45[13] = v14;
        *((void *)&v45[16] + 1) = v15;
        *(void *)&v45[17] = v16;
        *((void *)&v45[17] + 1) = v17;
        long long v34 = *((_OWORD *)v3 + 19);
        v45[18] = *((_OWORD *)v3 + 18);
        v45[19] = v34;
        *(void *)&v45[20] = v18;
        *((void *)&v45[20] + 1) = v19;
        *(double *)&v45[21] = v4;
        *((void *)&v45[21] + 1) = v20;
        v45[22] = *((_OWORD *)v3 + 22);
        *(void *)&v45[23] = v21;
        *((void *)&v45[23] + 1) = v22;
        *(void *)&v45[24] = v23;
        *((void *)&v45[24] + 1) = v24;
        long long v35 = *((_OWORD *)v3 + 26);
        v45[25] = *((_OWORD *)v3 + 25);
        v45[26] = v35;
        v45[27] = *((_OWORD *)v3 + 27);
        *(void *)&v45[28] = v25;
        *((void *)&v45[28] + 1) = v26;
        v45[29] = *((_OWORD *)v3 + 29);
        *(void *)&v45[30] = v27;
        *((void *)&v45[30] + 1) = v28;
        long long v36 = *((_OWORD *)v3 + 32);
        v45[31] = *((_OWORD *)v3 + 31);
        v45[32] = v36;
        *(void *)&v45[33] = v29;
        BYTE8(v45[33]) = v30;
        memcpy(__dst, v45, 0x219uLL);
        uint64_t v37 = v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction];
        unint64_t v38 = *(void *)(v6 + 24);
        if (!(v38 >> 62))
        {
          uint64_t v39 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          sub_100262548((uint64_t)v45);
          uint64_t result = swift_bridgeObjectRetain();
          if (v39)
          {
LABEL_7:
            if (v39 < 1)
            {
              __break(1u);
              return result;
            }
            for (uint64_t i = 0; i != v39; ++i)
            {
              if ((v38 & 0xC000000000000001) != 0) {
                specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                swift_retain();
              }
              sub_100B15C58((uint64_t)__dst, v37, v5);
              swift_release();
            }
          }
LABEL_16:
          swift_bridgeObjectRelease();
          sub_1002622C8((uint64_t)v45);
          return swift_release();
        }
      }
      else
      {
        uint64_t v37 = self;
        uint64_t v41 = swift_allocObject();
        *(void *)(v41 + 16) = v2;
        *(double *)(v41 + 24) = v5;
        unint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = sub_100B13D30;
        *(void *)(v38 + 24) = v41;
        __dst[4] = sub_10013DD14;
        __dst[5] = v38;
        __dst[0] = _NSConcreteStackBlock;
        __dst[1] = 1107296256;
        __dst[2] = sub_10007A61C;
        __dst[3] = &unk_10100BDA8;
        unint64_t v42 = _Block_copy(__dst);
        uint64_t v43 = v2;
        swift_retain();
        swift_release();
        [(id)v37 performWithoutAnimation:v42];
        _Block_release(v42);
        char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        uint64_t result = swift_release();
        if ((isEscapingClosureAtFileLocation & 1) == 0) {
          return result;
        }
        __break(1u);
      }
      swift_retain();
      sub_100262548((uint64_t)v45);
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v39 = result;
      if (result) {
        goto LABEL_7;
      }
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t sub_100B118F0(uint64_t result, double a2)
{
  uint64_t v2 = *(void *)(result
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
  if (v2)
  {
    uint64_t v4 = result;
    memcpy(v9, (const void *)(result + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs), 0x219uLL);
    uint64_t v5 = *(unsigned __int8 *)(v4
                            + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction);
    unint64_t v6 = *(void *)(v2 + 24);
    if (v6 >> 62)
    {
      swift_retain();
      sub_100262548((uint64_t)v9);
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v7 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      sub_100262548((uint64_t)v9);
      uint64_t result = swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0) {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            swift_retain();
          }
          sub_100B15C58((uint64_t)v9, v5, a2);
          swift_release();
        }
      }
    }
    swift_bridgeObjectRelease();
    sub_1002622C8((uint64_t)v9);
    return swift_release();
  }
  return result;
}

id sub_100B11A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v7 = v6;
  char v11 = &v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text];
  char v12 = a5 & 1;
  *char v11 = a1;
  v11[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words] = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment] = a4;
  v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction] = v12;
  *(void *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_capabilities] = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_100B12B7C(0);
  [v7 bounds];
  sub_100B122C0(v13);
  if (v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
  {
    sub_100B12E9C();
    uint64_t v14 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    [*(id *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView] removeFromSuperview];
    uint64_t v15 = *(void **)&v7[v14];
    *(void *)&v7[v14] = 0;
  }
  else
  {
    sub_100B12C24();
    if (*(void *)&v7[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
    {
      swift_retain();
      sub_100B14030();
      swift_release();
    }
  }
  [v7 setNeedsLayout];

  return [v7 layoutIfNeeded];
}

id sub_100B11BC4(uint64_t a1, uint64_t a2, uint64_t a3, void *__src, char a5, uint64_t a6, char a7, uint64_t a8)
{
  char v14 = a5 & 1;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling] = 1;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] = 0;
  uint64_t v15 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress;
  *(void *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] = 0;
  *(void *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter] = 0;
  char v16 = a7 & 1;
  *(void *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation] = 0;
  *(void *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView] = 0;
  memcpy(&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], __src, 0x219uLL);
  *(void *)&v8[v15] = 0;
  uint64_t v17 = &v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text];
  *uint64_t v17 = a1;
  v17[1] = a2;
  *(void *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words] = a3;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind] = v14;
  *(void *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment] = a6;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction] = v16;
  *(void *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_capabilities] = a8;
  v19.receiver = v8;
  v19.super_class = (Class)_s8TextViewCMa();
  return [super initWithFrame:0.0, 0.0, 0.0, 0.0];
}

uint64_t sub_100B11D94()
{
  v7.receiver = v0;
  v7.super_class = (Class)_s8TextViewCMa();
  [super layoutSubviews];
  uint64_t v1 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation;
  if (*(void *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
  {
    swift_retain();
    sub_100B14030();
    swift_release();
  }
  *(void *)&v0[v1] = 0;
  swift_release();
  uint64_t v2 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
  [*(id *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView] removeFromSuperview];
  uint64_t v3 = *(void **)&v0[v2];
  *(void *)&v0[v2] = 0;

  [v0 bounds];
  sub_100B122C0(v4);
  if (v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1)
  {
    sub_100B12E9C();
    [*(id *)&v0[v2] removeFromSuperview];
    uint64_t v5 = *(void **)&v0[v2];
    *(void *)&v0[v2] = 0;
  }
  else
  {
    sub_100B12C24();
    if (*(void *)&v0[v1])
    {
      swift_retain();
      sub_100B14030();
      swift_release();
    }
  }
  return sub_100B114EC(0, *(double *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress]);
}

double sub_100B11F10(double a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text + 8);
  swift_bridgeObjectRetain();
  LOBYTE(v3) = String.containsExcessiveHeightCharacters.getter(v3, v4);
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v36 = 32;
    char v35 = NSTextAlignment.ctTextAlignment.getter(*(void *)(v1
                                                           + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment));
    v37.spec = kCTParagraphStyleSpecifierLineBoundsOptions;
    v37.valueSize = 8;
    v37.value = &v36;
    int v38 = 0;
    uint64_t v39 = 1;
    uint64_t v40 = &v35;
    CTParagraphStyleRef v5 = CTParagraphStyleCreate(&v37, 2uLL);
    type metadata accessor for CTParagraphStyle(0);
  }
  else
  {
    CTParagraphStyleRef v5 = (CTParagraphStyleRef)[objc_allocWithZone((Class)NSMutableParagraphStyle) init];
    [(__CTParagraphStyle *)v5 setAlignment:*(void *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment)];
    uint64_t v7 = v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs;
    if ((*(unsigned char *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 184) & 1) == 0)
    {
      double v8 = *(double *)(v7 + 176);
      uint64_t v9 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind;
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind)) {
        uint64_t v10 = 192;
      }
      else {
        uint64_t v10 = 168;
      }
      [*(id *)(v7 + v10) ascender];
      if (*(unsigned char *)(v1 + v9)) {
        uint64_t v12 = 192;
      }
      else {
        uint64_t v12 = 168;
      }
      double v13 = v8 - v11;
      [*(id *)(v7 + v12) descender];
      [(__CTParagraphStyle *)v5 setLineSpacing:v13 + v14];
    }
    uint64_t v6 = sub_100057778(0, &qword_1010C9F48);
  }
  v41[3] = v6;
  v41[0] = v5;
  sub_100063814(&qword_1010C9F50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100E251B0;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v16 = 168;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind)) {
    uint64_t v16 = 192;
  }
  uint64_t v17 = *(void **)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + v16);
  uint64_t v18 = sub_100057778(0, (unint64_t *)&qword_1010C8930);
  *(void *)(inited + 40) = v17;
  *(void *)(inited + 64) = v18;
  *(void *)(inited + 72) = NSParagraphStyleAttributeName;
  sub_100076134((uint64_t)v41, inited + 80);
  swift_bridgeObjectRetain();
  objc_super v19 = NSFontAttributeName;
  id v20 = v17;
  uint64_t v21 = NSParagraphStyleAttributeName;
  sub_10001A208(inited);
  id v22 = objc_allocWithZone((Class)NSAttributedString);
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  _s3__C3KeyVMa_2(0);
  sub_100B13CA0();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CFAttributedStringRef v25 = (const __CFAttributedString *)[v22 initWithString:v23 attributes:isa];

  uint64_t v26 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter;
  uint64_t v27 = *(void **)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter);
  if (v27)
  {
    uint64_t v28 = *(const __CTFramesetter **)(v1
                                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter);
  }
  else
  {
    CTFramesetterRef v29 = CTFramesetterCreateWithAttributedString(v25);
    char v30 = *(void **)(v1 + v26);
    *(void *)(v1 + v26) = v29;
    uint64_t v28 = v29;

    uint64_t v27 = 0;
  }
  id v31 = v27;
  double v32 = CTFramesetterRef.suggestedFrameSize(constraints:)(a1, INFINITY);
  CTFramesetterRef.createFrame(_:)(0.0, 0.0, v32, v33);

  sub_1000760E4((uint64_t)v41);
  return v32;
}

void sub_100B122C0(double a1)
{
  uint64_t v2 = v1;
  [v1 bounds];
  if (CGRectGetHeight(v16) != 0.0)
  {
    uint64_t v4 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation;
    if (!*(void *)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation])
    {
      double v5 = sub_100B11F10(a1);
      uint64_t v7 = v6;
      double v8 = v5;
      uint64_t v10 = v9;
      char v12 = v11;
      swift_bridgeObjectRetain();
      CTFrameRef.linesWithFrames(flippedCoordinates:useExtendedLineBounds:)(1, v12 & 1);
      __chkstk_darwin();
      double v14 = sub_100B13358(v13, (void (*)(double, double, double, double))sub_100B13348);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _s5FrameCMa();
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 64) = 0;
      *(unsigned char *)(v15 + 72) = 2;
      *(void *)(v15 + 80) = 0;
      *(void *)(v15 + 16) = v7;
      *(void *)(v15 + 24) = v14;
      *(void *)(v15 + 32) = 0;
      *(void *)(v15 + 40) = 0;
      *(double *)(v15 + 48) = v8;
      *(void *)(v15 + 56) = v10;
      *(void *)&v2[v4] = v15;
      swift_release();
    }
  }
}

uint64_t sub_100B12428(void *a1, void *a2, double a3, double a4, double a5, double a6, uint64_t a7, uint64_t a8, char a9)
{
  CGRect v16 = CTLineRef.glyphRuns.getter();
  id v17 = a2;
  uint64_t v18 = sub_100B13958((unint64_t)v16, (uint64_t)v17);
  swift_bridgeObjectRelease();

  objc_super v19 = sub_100B13458((uint64_t)v18, (uint64_t (*)(void *, id, uint64_t, uint64_t))sub_100B13C90);
  swift_bridgeObjectRelease();
  _s4LineCMa();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 72) = 0;
  *(unsigned char *)(v20 + 80) = 0;
  *(void *)(v20 + 88) = 0;
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = a1;
  *(double *)(v20 + 40) = a3;
  *(double *)(v20 + 48) = a4;
  *(double *)(v20 + 56) = a5;
  *(double *)(v20 + 64) = a6;
  *(unsigned char *)(v20 + 32) = a9;
  id v21 = a1;
  return v20;
}

Swift::Int sub_100B1253C(long long *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  CTRunRef.cfStringRange.getter();
  v20.Swift::Int location = sub_100AFF498(*((void *)a1 + 2));
  __C::_NSRange_optional v22 = _NSRange.intersection(_:)(v20);
  Swift::Int location = v22.value.location;
  v22.value.Swift::Int location = 0;
  if (!v22.is_nil)
  {
    Swift::Int length = v22.value.length;
    if (v22.value.length >= 1)
    {
      Range<>.init(_:in:)();
      if ((v24 & 1) == 0)
      {
        char v25 = CTRunRef.status.getter();
        v22.value.Swift::Int location = location;
        if (v25)
        {
          Swift::Int v26 = location + length;
          if (__OFADD__(location, length))
          {
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
          v22.value.Swift::Int location = v26 - 1;
          if (__OFSUB__(v26, 1))
          {
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        uint64_t v27 = sub_100B29714(v22.value.location, a4);
        if ((v28 & 1) == 0) {
          goto LABEL_16;
        }
        char v29 = CTRunRef.status.getter();
        v22.value.Swift::Int location = location;
        if (v29)
        {
          Swift::Int v30 = location + length;
          if (__OFADD__(location, length))
          {
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
          v22.value.Swift::Int location = v30 - 2;
          if (__OFSUB__(v30, 2))
          {
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
        }
        uint64_t v27 = sub_100B29714(v22.value.location, a4);
        if ((v31 & 1) == 0) {
          goto LABEL_16;
        }
        char v32 = CTRunRef.status.getter();
        v22.value.Swift::Int location = location;
        if (v32)
        {
          Swift::Int v33 = location + length;
          if (__OFADD__(location, length))
          {
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          v22.value.Swift::Int location = v33 - 3;
          if (__OFSUB__(v33, 3))
          {
LABEL_28:
            __break(1u);
            return v22.value.location;
          }
        }
        uint64_t v27 = sub_100B29714(v22.value.location, a4);
        if ((v34 & 1) == 0)
        {
LABEL_16:
          unint64_t v35 = v27;
          v22.value.Swift::Int location = String.subscript.getter();
          if ((v35 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v35 < *(void *)(a3 + 16))
          {
            double v36 = *(double *)(a3 + 16 * v35 + 32);
            v37.Swift::Int location = location;
            v37.Swift::Int length = length;
            __C::_NSRange v49 = CTRunRef.convertToGlyphRange(textRange:)(v37);
            double v38 = CTRunRef.typographicBounds(range:)((CFRange)v49);
            v50.origin.x = a7;
            v50.origin.y = a8;
            v50.size.width = a9;
            v50.size.height = a10;
            CGFloat Height = CGRectGetHeight(v50);
            id v40 = a2;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v41 = swift_bridgeObjectRetain();
            unint64_t v42 = sub_100B137AC(v41, v40, a5, a6, a4, a3, v36, a7, a8, a9, a10);
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            long long v48 = *a1;
            swift_bridgeObjectRetain();
            sub_1000D230C((uint64_t)&v48);
            uint64_t v43 = static String._fromSubstring(_:)();
            uint64_t v45 = v44;
            swift_bridgeObjectRelease();
            _s4WordCMa();
            v22.value.Swift::Int location = swift_allocObject();
            *(unsigned char *)(v22.value.location + 88) = 2;
            *(void *)(v22.value.location + 128) = 0;
            *(void *)(v22.value.location + 136) = 0;
            long long v46 = a1[1];
            *(_OWORD *)(v22.value.location + 16) = *a1;
            *(_OWORD *)(v22.value.location + 32) = v46;
            *(unsigned char *)(v22.value.location + 48) = *((unsigned char *)a1 + 32);
            *(void *)(v22.value.location + 56) = v43;
            *(void *)(v22.value.location + 64) = v45;
            *(void *)(v22.value.location + 72) = v42;
            *(void *)(v22.value.location + 80) = 0;
            *(double *)(v22.value.location + 96) = v36;
            *(void *)(v22.value.location + 104) = 0;
            *(double *)(v22.value.location + 112) = v38;
            *(CGFloat *)(v22.value.location + 120) = Height;
            return v22.value.location;
          }
          __break(1u);
          goto LABEL_23;
        }
      }
      v22.value.Swift::Int location = 0;
    }
  }
  return v22.value.location;
}

Swift::Int sub_100B12834@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, Swift::Int *a7@<X8>, double a8@<D0>, CGFloat a9@<D1>, CGFloat a10@<D2>, CGFloat a11@<D3>, CGFloat a12@<D4>)
{
  uint64_t v23 = *a1;
  uint64_t v22 = a1[1];
  Swift::Int v24 = a1[4];
  uint64_t v58 = a1[3];
  uint64_t v59 = a1[2];
  Swift::Int v25 = a1[5];
  uint64_t v56 = a1[6];
  CTRunRef.cfStringRange.getter();
  Swift::Int v57 = v24;
  v26.Swift::Int location = v24;
  v26.Swift::Int length = v25;
  __C::_NSRange_optional v28 = _NSRange.intersection(_:)(v26);
  Swift::Int location = v28.value.location;
  v28.value.Swift::Int location = 0;
  if (v28.is_nil) {
    goto LABEL_20;
  }
  Swift::Int length = v28.value.length;
  if (v28.value.length < 1) {
    goto LABEL_20;
  }
  Range<>.init(_:in:)();
  if (v30)
  {
    v28.value.Swift::Int location = 0;
    goto LABEL_20;
  }
  char v31 = CTRunRef.status.getter();
  v28.value.Swift::Int location = location;
  if (v31)
  {
    Swift::Int v32 = location + length;
    if (__OFADD__(location, length))
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v28.value.Swift::Int location = v32 - 1;
    if (__OFSUB__(v32, 1))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
  }
  uint64_t v33 = sub_100B29714(v28.value.location, a5);
  if (v34)
  {
    char v35 = CTRunRef.status.getter();
    v28.value.Swift::Int location = location;
    if (v35)
    {
      Swift::Int v36 = location + length;
      if (__OFADD__(location, length))
      {
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
      v28.value.Swift::Int location = v36 - 2;
      if (__OFSUB__(v36, 2))
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    uint64_t v33 = sub_100B29714(v28.value.location, a5);
    if (v37)
    {
      char v38 = CTRunRef.status.getter();
      v28.value.Swift::Int location = location;
      if (v38)
      {
        Swift::Int v39 = location + length;
        if (__OFADD__(location, length))
        {
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        v28.value.Swift::Int location = v39 - 3;
        if (__OFSUB__(v39, 3))
        {
LABEL_29:
          __break(1u);
          return v28.value.location;
        }
      }
      uint64_t v33 = sub_100B29714(v28.value.location, a5);
      if (v40)
      {
        v28.value.Swift::Int location = 0;
        goto LABEL_20;
      }
    }
  }
  unint64_t v41 = v33;
  v28.value.Swift::Int location = String.subscript.getter();
  if ((v41 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v41 >= *(void *)(a6 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  double v42 = *(double *)(a6 + 16 * v41 + 32);
  v43.Swift::Int location = location;
  v43.Swift::Int length = length;
  __C::_NSRange v61 = CTRunRef.convertToGlyphRange(textRange:)(v43);
  double v55 = CTRunRef.typographicBounds(range:)((CFRange)v61);
  double v54 = v42 - a8;
  v62.origin.x = a9;
  v62.origin.y = a10;
  v62.size.width = a11;
  v62.size.height = a12;
  CGFloat Height = CGRectGetHeight(v62);
  v45.Swift::Int location = location;
  v45.Swift::Int length = length;
  __C::_NSRange v46 = CTRunRef.convertToGlyphRange(textRange:)(v45);
  swift_bridgeObjectRetain();
  id v47 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100B135C0(a8, a9, a10, a11, a12, v46.location, v46.length, a6, (uint64_t)v47, a3, a4, a5);
  uint64_t v49 = v48;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v50 = static String._fromSubstring(_:)();
  uint64_t v52 = v51;
  swift_bridgeObjectRelease();
  _s8SyllableCMa();
  v28.value.Swift::Int location = swift_allocObject();
  *(void *)(v28.value.location + 88) = v49;
  *(void *)(v28.value.location + 96) = 0;
  *(unsigned char *)(v28.value.location + 104) = 2;
  *(void *)(v28.value.location + 144) = 0;
  *(void *)(v28.value.location + 16) = v23;
  *(void *)(v28.value.location + 24) = v22;
  *(void *)(v28.value.location + 32) = v59;
  *(void *)(v28.value.location + 40) = v58;
  *(void *)(v28.value.location + 48) = v57;
  *(void *)(v28.value.location + 56) = v25;
  *(void *)(v28.value.location + 64) = v56;
  *(void *)(v28.value.location + 72) = v50;
  *(void *)(v28.value.location + 80) = v52;
  *(double *)(v28.value.location + 112) = v54;
  *(void *)(v28.value.location + 120) = 0;
  *(double *)(v28.value.location + 128) = v55;
  *(CGFloat *)(v28.value.location + 136) = Height;
LABEL_20:
  *a7 = v28.value.location;
  return v28.value.location;
}

void sub_100B12B7C(char a1)
{
  uint64_t v2 = v1;
  if ((a1 & 1) == 0)
  {
    uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter);
    *(void *)(v1 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter) = 0;
  }
  uint64_t v4 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation;
  if (*(void *)(v1
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation))
  {
    swift_retain();
    sub_100B14030();
    swift_release();
  }
  *(void *)(v1 + v4) = 0;
  swift_release();
  uint64_t v5 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
  [*(id *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView) removeFromSuperview];
  uint64_t v6 = *(void **)(v2 + v5);
  *(void *)(v2 + v5) = 0;
}

void sub_100B12C24()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView;
    if (!*(void *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView])
    {
      uint64_t v4 = *(void **)(v1 + 16);
      double v5 = *(double *)(v1 + 48);
      double v6 = *(double *)(v1 + 56);
      id v7 = objc_allocWithZone((Class)type metadata accessor for CTLabel.Frame());
      id v8 = v4;
      swift_retain();
      id v9 = CTLabel.Frame.init(ctFrame:suggestedSize:colorOverride:)(v8, 0, v5, v6);
      [v9 setOpaque:0];
      uint64_t v10 = *(void *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment];
      if (v10 == 1)
      {
        id v15 = v9;
        [v2 bounds];
        double v13 = (v16 - v5) * 0.5;
        double v14 = 0.0;
      }
      else if (v10 == 2)
      {
        id v11 = v9;
        [v2 bounds];
        double v13 = v12 - v5;
        double v14 = 0.0;
      }
      else
      {
        id v17 = v9;
        [v2 bounds];
        [v17 setFrame:];

        [v17 frame];
        double v5 = v18;
        double v6 = v19 + 20.0;
      }
      [v9 setFrame:v13, v14, v5, v6];

      [v2 bounds];
      id v24 = [objc_allocWithZone((Class)UIView) initWithFrame:v20, v21, v22, v23];
      [v24 frame];
      [v24 setFrame:];
      [v24 setBackgroundColor:*(void *)&v2[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs + 248]];
      [v24 setMaskView:v9];
      [v2 addSubview:v24];
      id v25 = *(id *)&v2[v3];
      *(void *)&v2[v3] = v24;
      swift_release();
    }
  }
}

void sub_100B12E9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation];
  if (v2 && !*(void *)(v2 + 80))
  {
    char v3 = v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind];
    uint64_t v4 = (void **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs];
    uint64_t v5 = 21;
    if (v3) {
      uint64_t v5 = 24;
    }
    double v6 = v4[v5];
    id v7 = v4 + 33;
    if ((v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_kind] & 1) == 0) {
      id v7 = v4 + 30;
    }
    if (v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] == 1) {
      id v8 = v7;
    }
    else {
      id v8 = v4 + 31;
    }
    id v9 = *v8;
    memcpy(v26, v4, 0x219uLL);
    uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_capabilities];
    BOOL v11 = !sub_1003C8DC4(1, v10) && !sub_1003C8DC4(2, v10);
    char v12 = v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_direction];
    swift_retain();
    id v13 = v6;
    id v14 = v9;
    sub_100262548((uint64_t)v26);
    id v15 = (void *)sub_100B144EC(v13, v14, v3, v26, v11, v12);
    sub_1002622C8((uint64_t)v26);
    swift_release();

    uint64_t v16 = *(void *)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_alignment];
    if (v16 == 1)
    {
      id v22 = v15;
      [v1 bounds];
      double v24 = v23;
      [v22 bounds];
      double v21 = (v24 - v25) * 0.5;
    }
    else
    {
      if (v16 != 2)
      {
LABEL_18:
        [v1 addSubview:v15];

        return;
      }
      id v17 = v15;
      [v1 bounds];
      double v19 = v18;
      [v17 bounds];
      double v21 = v19 - v20;
    }
    [v15 frame];
    [v15 setFrame:v21];

    goto LABEL_18;
  }
}

id sub_100B130E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s8TextViewCMa();
  return [super dealloc];
}

uint64_t _s8TextViewCMa()
{
  return self;
}

unsigned char *_s8TextViewC4KindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B132B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8TextViewC4KindOMa()
{
  return &_s8TextViewC4KindON;
}

unint64_t sub_100B132F4()
{
  unint64_t result = qword_1010C9F40;
  if (!qword_1010C9F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C9F40);
  }
  return result;
}

uint64_t sub_100B13348(void *a1, double a2, double a3, double a4, double a5)
{
  return sub_100B12428(a1, *(void **)(v5 + 16), a2, a3, a4, a5, *(void *)(v5 + 24), *(void *)(v5 + 32), *(unsigned char *)(v5 + 40));
}

void *sub_100B13358(uint64_t a1, void (*a2)(double, double, double, double))
{
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    unsigned int v6 = (double *)(a1 + 64);
    do
    {
      double v7 = *(v6 - 3);
      double v8 = *(v6 - 2);
      double v9 = *(v6 - 1);
      double v10 = *v6;
      id v11 = *((id *)v6 - 4);
      a2(v7, v8, v9, v10);

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v6 += 5;
      --v3;
    }
    while (v3);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_100B13458(uint64_t a1, uint64_t (*a2)(void *, id, uint64_t, uint64_t))
{
  unint64_t result = _swiftEmptyArrayStorage;
  unint64_t v18 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v8 = *v5;
      uint64_t v7 = v5[1];
      char v9 = *((unsigned char *)v5 + 16);
      double v10 = (void *)v5[3];
      uint64_t v11 = v5[4];
      uint64_t v12 = v5[5];
      v16[0] = *(v5 - 2);
      v16[1] = v6;
      v16[2] = v8;
      v16[3] = v7;
      char v17 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v13 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = a2(v16, v13, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v5 += 8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return (void *)v18;
  }
  return result;
}

void sub_100B135C0(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  specialized ContiguousArray.reserveCapacity(_:)();
  _NSRange.makeIterator()();
  *(Swift::Int_optional *)&v19.unint64_t location = _NSRange.NSRangeIterator.next()();
  if ((v19.length & 1) == 0)
  {
    unint64_t location = v19.location;
    while ((location & 0x8000000000000000) == 0)
    {
      if (location >= *(void *)(a8 + 16)) {
        goto LABEL_9;
      }
      double v21 = *(double *)(a8 + 32 + 16 * location);
      v19.unint64_t location = location;
      double v22 = CTRunRef.typographicBounds(forGlyphAtIndex:)(v19);
      v29.origin.x = a2;
      v29.origin.y = a3;
      v29.size.width = a4;
      v29.size.height = a5;
      double Height = CGRectGetHeight(v29);
      if (location >= *(void *)(a12 + 16)) {
        goto LABEL_10;
      }
      double v24 = Height;
      sub_10005D27C();
      swift_bridgeObjectRetain();
      String.Index.init<A>(utf16Offset:in:)();
      uint64_t v25 = String.subscript.getter();
      uint64_t v27 = v26;
      _s5GlyphCMa();
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 64) = 0;
      *(void *)(v28 + 16) = v25;
      *(void *)(v28 + 24) = v27;
      *(double *)(v28 + 32) = v21 - a1;
      *(void *)(v28 + 40) = 0;
      *(double *)(v28 + 48) = v22;
      *(double *)(v28 + 56) = v24;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      *(Swift::Int_optional *)&v19.unint64_t location = _NSRange.NSRangeIterator.next()();
      unint64_t location = v19.location;
      if (v19.length) {
        return;
      }
    }
    __break(1u);
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
  }
}

void *sub_100B137AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11)
{
  uint64_t v12 = v11;
  unint64_t result = _swiftEmptyArrayStorage;
  unint64_t v36 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    swift_bridgeObjectRetain();
    double v24 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v25 = v24[4];
      uint64_t v26 = *v24;
      uint64_t v27 = v24[1];
      long long v31 = *((_OWORD *)v24 - 1);
      uint64_t v32 = v26;
      uint64_t v33 = v27;
      long long v34 = *((_OWORD *)v24 + 1);
      uint64_t v35 = v25;
      swift_bridgeObjectRetain();
      sub_100B12834((uint64_t *)&v31, a2, a3, a4, a5, a6, &v30, a7, a8, a9, a10, a11);
      if (v12)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (void *)swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      if (v30)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v24 += 7;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    return (void *)v36;
  }
  return result;
}

void *sub_100B13958(unint64_t a1, uint64_t a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_39;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v32 = OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words;
    unint64_t v33 = v2 & 0xC000000000000001;
    unint64_t v29 = v2 + 32;
    uint64_t v30 = v3;
    uint64_t v5 = _swiftEmptyArrayStorage;
    unint64_t v31 = v2;
    while (1)
    {
      if (v33)
      {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v7 = __OFADD__(v4++, 1);
        if (v7) {
          goto LABEL_35;
        }
      }
      else
      {
        id v6 = *(id *)(v29 + 8 * v4);
        BOOL v7 = __OFADD__(v4++, 1);
        if (v7) {
          goto LABEL_35;
        }
      }
      uint64_t v8 = *(void *)(a2 + v32);
      int64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        uint64_t v35 = v5;
        uint64_t v36 = v4;
        id v37 = v6;
        swift_bridgeObjectRetain();
        sub_100AFC1D4(0, v9, 0);
        double v10 = _swiftEmptyArrayStorage;
        uint64_t v11 = (unsigned char *)(v8 + 64);
        do
        {
          uint64_t v12 = *((void *)v11 - 3);
          uint64_t v13 = *((void *)v11 - 2);
          uint64_t v40 = *((void *)v11 - 1);
          uint64_t v41 = *((void *)v11 - 4);
          char v39 = *v11;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          id v14 = v37;
          CFIndex v38 = CTRunRef.positions.getter();
          CFIndex v15 = CTRunRef.stringIndices.getter();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v17 = v10[2];
          unint64_t v16 = v10[3];
          unint64_t v18 = v10;
          if (v17 >= v16 >> 1)
          {
            sub_100AFC1D4((void *)(v16 > 1), v17 + 1, 1);
            unint64_t v18 = v10;
          }
          v18[2] = v17 + 1;
          CFRange v19 = &v18[8 * v17];
          v19[4] = v41;
          v19[5] = v12;
          v19[6] = v13;
          v19[7] = v40;
          *((unsigned char *)v19 + 64) = v39;
          v19[9] = v14;
          v19[10] = v38;
          v11 += 40;
          v19[11] = v15;
          --v9;
          double v10 = v18;
        }
        while (v9);
        swift_bridgeObjectRelease();

        uint64_t v3 = v30;
        unint64_t v2 = v31;
        uint64_t v5 = v35;
        uint64_t v4 = v36;
      }
      else
      {

        double v10 = _swiftEmptyArrayStorage;
      }
      double v20 = v10;
      uint64_t v21 = v10[2];
      int64_t v22 = v5[2];
      int64_t v23 = v22 + v21;
      if (__OFADD__(v22, v21)) {
        goto LABEL_36;
      }
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v23 <= v5[3] >> 1)
      {
        if (v20[2]) {
          goto LABEL_28;
        }
      }
      else
      {
        if (v22 <= v23) {
          int64_t v25 = v22 + v21;
        }
        else {
          int64_t v25 = v22;
        }
        uint64_t v5 = sub_100AFB62C((void *)isUniquelyReferenced_nonNull_native, v25, 1, v5);
        if (v20[2])
        {
LABEL_28:
          if ((v5[3] >> 1) - v5[2] < v21) {
            goto LABEL_37;
          }
          sub_100063814(&qword_1010C99B8);
          swift_arrayInitWithCopy();
          if (v21)
          {
            uint64_t v26 = v5[2];
            BOOL v7 = __OFADD__(v26, v21);
            uint64_t v27 = v26 + v21;
            if (v7) {
              goto LABEL_38;
            }
            v5[2] = v27;
          }
          goto LABEL_6;
        }
      }
      if (v21)
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        goto LABEL_3;
      }
LABEL_6:
      swift_bridgeObjectRelease();
      if (v4 == v3) {
        goto LABEL_33;
      }
    }
  }
  uint64_t v5 = _swiftEmptyArrayStorage;
LABEL_33:
  swift_bridgeObjectRelease();
  return v5;
}

Swift::Int sub_100B13C90(long long *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_100B1253C(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(CGFloat *)(v4 + 32), *(CGFloat *)(v4 + 40), *(CGFloat *)(v4 + 48), *(CGFloat *)(v4 + 56));
}

unint64_t sub_100B13CA0()
{
  unint64_t result = qword_1010C8D70;
  if (!qword_1010C8D70)
  {
    _s3__C3KeyVMa_2(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010C8D70);
  }
  return result;
}

uint64_t sub_100B13CF8()
{
  return swift_deallocObject();
}

uint64_t sub_100B13D30()
{
  return sub_100B118F0(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_100B13D3C()
{
  return swift_deallocObject();
}

uint64_t sub_100B13D4C()
{
  return swift_deallocObject();
}

id sub_100B13D84()
{
  id result = *(id *)(*(void *)(v0 + 16)
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
  if (result)
  {
    double v2 = 0.0;
    if (*(unsigned char *)(v0 + 24)) {
      double v2 = 1.0;
    }
    return [result setAlpha:v2];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100B13DC0()
{
  return swift_deallocObject();
}

void sub_100B13DF8()
{
  sub_100B11080(*(void *)(v0 + 16));
}

void sub_100B13E00()
{
  v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling] = 1;
  v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isSelected] = 0;
  *(void *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_progress] = 0;
  *(void *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_framesetter] = 0;
  *(void *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation] = 0;
  *(void *)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_basicView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t initializeBufferWithCopyOfBuffer for AnimationStatus(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_100B13EF4(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_100B13EF4(id result, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return result;
  }
  return result;
}

void destroy for AnimationStatus(uint64_t a1)
{
}

void sub_100B13F18(id a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
}
  }

uint64_t assignWithCopy for AnimationStatus(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_100B13EF4(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_100B13F18(v5, v6);
  return a1;
}

uint64_t assignWithTake for AnimationStatus(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_100B13F18(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for AnimationStatus()
{
  return &type metadata for AnimationStatus;
}

uint64_t sub_100B13FD0(uint64_t a1, uint64_t *a2)
{
  int v2 = *((unsigned __int8 *)a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a1 + 8) == 1)
    {
      if (v2 == 1) {
        return 1;
      }
    }
    else
    {
      uint64_t v4 = *a2;
      if (*(void *)a1)
      {
        if (v2 == 2 && v4 == 1) {
          return 1;
        }
      }
      else if (v2 == 2 && v4 == 0)
      {
        return 1;
      }
    }
  }
  else if (!*((unsigned char *)a2 + 8))
  {
    return 1;
  }
  return 0;
}

void sub_100B14030()
{
  unint64_t v1 = *(void *)(v0 + 24);
  unint64_t v43 = v1;
  if (v1 >> 62) {
    goto LABEL_68;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v42 = v2;
  if (v2)
  {
LABEL_3:
    unint64_t v3 = 0;
    do
    {
      if ((v43 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v5 = __OFADD__(v3, 1);
        unint64_t v6 = v3 + 1;
        if (v5) {
          goto LABEL_67;
        }
      }
      else
      {
        if (v3 >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        uint64_t v4 = swift_retain();
        BOOL v5 = __OFADD__(v3, 1);
        unint64_t v6 = v3 + 1;
        if (v5) {
          goto LABEL_67;
        }
      }
      unint64_t v44 = v6;
      uint64_t v45 = v4;
      unint64_t v7 = *(void *)(v4 + 16);
      if (!(v7 >> 62))
      {
        uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v8) {
          goto LABEL_12;
        }
        goto LABEL_52;
      }
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      if (v8)
      {
LABEL_12:
        unint64_t v9 = 0;
        unint64_t v48 = v7 & 0xC000000000000001;
        uint64_t v46 = v7 & 0xFFFFFFFFFFFFFF8;
        uint64_t v47 = v8;
        while (1)
        {
          if (v48)
          {
            uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            BOOL v5 = __OFADD__(v9, 1);
            unint64_t v13 = v9 + 1;
            if (v5) {
              goto LABEL_65;
            }
          }
          else
          {
            if (v9 >= *(void *)(v46 + 16)) {
              goto LABEL_66;
            }
            uint64_t v12 = swift_retain();
            BOOL v5 = __OFADD__(v9, 1);
            unint64_t v13 = v9 + 1;
            if (v5) {
              goto LABEL_65;
            }
          }
          unint64_t v49 = v13;
          uint64_t v50 = v12;
          unint64_t v14 = *(void *)(v12 + 72);
          unint64_t v51 = v14;
          if (!(v14 >> 62))
          {
            uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v15) {
              break;
            }
            goto LABEL_46;
          }
          swift_bridgeObjectRetain();
          uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
          if (v15) {
            break;
          }
LABEL_46:
          swift_bridgeObjectRelease();
          uint64_t v28 = v50;
          unint64_t v29 = *(void **)(v50 + 128);
          if (v29)
          {
            [v29 removeFromSuperview];
            uint64_t v28 = v50;
            uint64_t v30 = *(void **)(v50 + 128);
          }
          else
          {
            uint64_t v30 = 0;
          }
          unint64_t v9 = v49;
          *(void *)(v28 + 128) = 0;

          uint64_t v31 = v50;
          if (!*(void *)(v50 + 128))
          {
            uint64_t v32 = *(void **)(v50 + 80);
            *(void *)(v50 + 80) = 0;
            unsigned __int8 v33 = *(unsigned char *)(v50 + 88);
            *(unsigned char *)(v50 + 88) = 2;
            sub_100B13F18(v32, v33);
            uint64_t v31 = v50;
          }
          double v10 = *(void **)(v31 + 80);
          *(void *)(v31 + 80) = 0;
          unsigned __int8 v11 = *(unsigned char *)(v31 + 88);
          *(unsigned char *)(v31 + 88) = 2;
          sub_100B13F18(v10, v11);
          swift_release();
          if (v49 == v47) {
            goto LABEL_52;
          }
        }
        unint64_t v16 = 0;
        while (2)
        {
          if ((v51 & 0xC000000000000001) != 0)
          {
            uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            BOOL v5 = __OFADD__(v16++, 1);
            if (v5) {
              goto LABEL_58;
            }
LABEL_31:
            unint64_t v21 = *(void *)(v20 + 88);
            if (!(v21 >> 62))
            {
              uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v22) {
                goto LABEL_33;
              }
LABEL_43:
              swift_bridgeObjectRelease();
              uint64_t v27 = *(void **)(v20 + 144);
              if (v27)
              {
                [v27 removeFromSuperview];
                unint64_t v17 = *(void **)(v20 + 144);
              }
              else
              {
                unint64_t v17 = 0;
              }
              *(void *)(v20 + 144) = 0;

              unint64_t v18 = *(void **)(v20 + 96);
              *(void *)(v20 + 96) = 0;
              unsigned __int8 v19 = *(unsigned char *)(v20 + 104);
              *(unsigned char *)(v20 + 104) = 2;
              sub_100B13F18(v18, v19);
              swift_release();
              if (v16 == v15) {
                goto LABEL_46;
              }
              continue;
            }
            swift_bridgeObjectRetain();
            uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
            if (!v22) {
              goto LABEL_43;
            }
LABEL_33:
            if (v22 >= 1)
            {
              uint64_t v23 = 0;
              while (1)
              {
                if ((v21 & 0xC000000000000001) != 0)
                {
                  uint64_t v25 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                  uint64_t v26 = *(void **)(v25 + 64);
                  if (!v26) {
                    goto LABEL_41;
                  }
                }
                else
                {
                  uint64_t v25 = *(void *)(v21 + 8 * v23 + 32);
                  swift_retain();
                  uint64_t v26 = *(void **)(v25 + 64);
                  if (!v26)
                  {
LABEL_41:
                    double v24 = 0;
                    goto LABEL_36;
                  }
                }
                [v26 removeFromSuperview];
                double v24 = *(void **)(v25 + 64);
LABEL_36:
                ++v23;
                *(void *)(v25 + 64) = 0;
                swift_release();

                if (v22 == v23) {
                  goto LABEL_43;
                }
              }
            }
            goto LABEL_59;
          }
          break;
        }
        if (v16 < *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v20 = *(void *)(v51 + 32 + 8 * v16);
          swift_retain();
          BOOL v5 = __OFADD__(v16++, 1);
          if (!v5) {
            goto LABEL_31;
          }
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
          goto LABEL_60;
        }
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        swift_bridgeObjectRetain();
        uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
        if (!v42) {
          break;
        }
        goto LABEL_3;
      }
LABEL_52:
      swift_bridgeObjectRelease();
      uint64_t v34 = v45;
      uint64_t v35 = *(void **)(v45 + 72);
      if (v35)
      {
        [v35 removeFromSuperview];
        uint64_t v34 = v45;
        uint64_t v36 = *(void **)(v45 + 72);
      }
      else
      {
        uint64_t v36 = 0;
      }
      *(void *)(v34 + 72) = 0;
      swift_release();

      unint64_t v3 = v44;
    }
    while (v44 != v42);
  }
  swift_bridgeObjectRelease();
  unint64_t v16 = v41;
  id v37 = *(void **)(v41 + 80);
  if (v37)
  {
    [v37 removeFromSuperview];
    CFIndex v38 = *(void **)(v41 + 80);
  }
  else
  {
LABEL_60:
    CFIndex v38 = 0;
  }
  *(void *)(v16 + 80) = 0;

  char v39 = *(void **)(v16 + 64);
  *(void *)(v16 + 64) = 0;
  unsigned __int8 v40 = *(unsigned char *)(v16 + 72);
  *(unsigned char *)(v16 + 72) = 2;

  sub_100B13F18(v39, v40);
}

uint64_t sub_100B144EC(void *a1, void *a2, char a3, const void *a4, char a5, char a6)
{
  id v10 = [objc_allocWithZone((Class)_s5FrameC9FrameViewCMa()) initWithFrame:*(double *)(v6 + 32), *(double *)(v6 + 40), *(double *)(v6 + 48), *(double *)(v6 + 56)];
  unsigned __int8 v11 = *(void **)(v6 + 80);
  *(void *)(v6 + 80) = v10;
  id v12 = v10;

  unint64_t v13 = *(void *)(v6 + 24);
  if (!(v13 >> 62))
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return (uint64_t)v12;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v14 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v14 >= 1)
  {
    uint64_t v16 = 0;
    char v17 = a3 & 1;
    char v18 = a6 & 1;
    char v19 = a5 & 1;
    do
    {
      if ((v13 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      ++v16;
      uint64_t v20 = (void *)sub_100B167FC(a1, a2, v17, a4, v19, v18);
      [v12 addSubview:v20];
      swift_release();
    }
    while (v14 != v16);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100B14730()
{
  swift_bridgeObjectRelease();
  sub_100B13F18(*(id *)(v0 + 64), *(unsigned char *)(v0 + 72));

  return swift_deallocClassInstance();
}

uint64_t _s5FrameCMa()
{
  return self;
}

uint64_t _s5FrameC9FrameViewCMa()
{
  return self;
}

_UNKNOWN **sub_100B147CC()
{
  return &off_1010CA2C0;
}

uint64_t (*sub_100B147D8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_100B14840(v6, a2, a3);
  return sub_100543EC8;
}

uint64_t (*sub_100B14840(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *unint64_t v3 = v4;
    return destroy for Border;
  }
  __break(1u);
  return result;
}

void sub_100B14944()
{
  unint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    if ((unint64_t)*v1 >> 62) {
      goto LABEL_23;
    }
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
LABEL_15:
      if ((unint64_t)*v1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v10 >= v4)
        {
LABEL_17:
          sub_100AE4DA4(v4, v10);
          swift_endAccess();
          return;
        }
      }
      else
      {
        uint64_t v10 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v10 >= v4) {
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_23:
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v4 = 0;
  while (1)
  {
    id v5 = (v2 & 0xC000000000000001) != 0
       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
       : *(id *)(v2 + 8 * v4 + 32);
    uint64_t v6 = v5;
    unint64_t v7 = (unint64_t)[v5 state];

    if ((v7 | 2) == 2) {
      break;
    }
    uint64_t v8 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    ++v4;
    if (v8 == v3) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9 == v11) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
  if ((unint64_t)*v1 >> 62) {
    goto LABEL_25;
  }
  if (v9 == *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_15;
  }
LABEL_26:
  uint64_t v12 = v4 + 5;
  while (1)
  {
    unint64_t v13 = v12 - 4;
    uint64_t v14 = *v1;
    if ((*v1 & 0xC000000000000001) != 0)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_31;
    }
    if ((v13 & 0x8000000000000000) != 0) {
      break;
    }
    if (v13 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_62;
    }
    id v15 = *(id *)(v14 + 8 * v12);
LABEL_31:
    uint64_t v16 = v15;
    unint64_t v17 = (unint64_t)[v15 state];

    if ((v17 | 2) == 2) {
      goto LABEL_52;
    }
    if (v13 != v4)
    {
      uint64_t v18 = *v1;
      if ((*v1 & 0xC000000000000001) != 0)
      {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v18 = *v1;
        if ((*v1 & 0xC000000000000001) == 0) {
          goto LABEL_37;
        }
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_65;
        }
        if ((unint64_t)v4 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_66;
        }
        id v19 = *(id *)(v18 + 8 * v4 + 32);
        if ((v18 & 0xC000000000000001) == 0)
        {
LABEL_37:
          if ((v13 & 0x8000000000000000) != 0) {
            goto LABEL_67;
          }
          if (v13 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_68;
          }
          id v20 = *(id *)(v18 + 8 * v12);
          goto LABEL_40;
        }
      }
      id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v18 = *v1;
LABEL_40:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *unint64_t v1 = v18;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v18 < 0 || (v18 & 0x4000000000000000) != 0)
      {
        uint64_t v18 = sub_10065986C(v18);
        *unint64_t v1 = v18;
      }
      uint64_t v22 = *(void **)((v18 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20);
      *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v20;

      specialized Array._endMutation()();
      uint64_t v23 = *v1;
      int v24 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *unint64_t v1 = v23;
      if (!v24 || v23 < 0 || (v23 & 0x4000000000000000) != 0)
      {
        uint64_t v23 = sub_10065986C(v23);
        *unint64_t v1 = v23;
      }
      if ((v13 & 0x8000000000000000) != 0) {
        goto LABEL_69;
      }
      uint64_t v25 = v23 & 0xFFFFFFFFFFFFFF8;
      if (v13 >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_70;
      }
      uint64_t v26 = *(void **)(v25 + 8 * v12);
      *(void *)(v25 + 8 * v12) = v19;

      specialized Array._endMutation()();
    }
    if (__OFADD__(v4++, 1)) {
      goto LABEL_64;
    }
LABEL_52:
    uint64_t v28 = v12 - 3;
    if (__OFADD__(v13, 1)) {
      goto LABEL_63;
    }
    if ((unint64_t)*v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    ++v12;
    if (v28 == v29) {
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
}

id sub_100B14D68(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  v10[0] = 0x3FF0000000000000;
  v10[1] = 0;
  v10[2] = 0;
  v10[3] = 0x3FF0000000000000;
  v10[4] = 0;
  v10[5] = 0;
  [a1 setTransform:v10];
  return UIView.untransformedFrame.setter(a2, a3, a4, a5);
}

void sub_100B14DE4(void *a1, double a2, double a3, double a4, double a5)
{
  sub_100B15794();
  Class isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)a1).super.isa;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v5;
  *(double *)(v12 + 24) = a2;
  *(double *)(v12 + 32) = a3;
  *(double *)(v12 + 40) = a4;
  uint64_t v23 = sub_100B1591C;
  uint64_t v24 = v12;
  id v19 = _NSConcreteStackBlock;
  uint64_t v20 = 1107296256;
  unint64_t v21 = sub_100020238;
  uint64_t v22 = &unk_10100BFF0;
  unint64_t v13 = _Block_copy(&v19);
  uint64_t v14 = v5;
  swift_release();
  [(objc_class *)isa addAnimations:v13];
  _Block_release(v13);
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v23 = sub_100B15850;
  uint64_t v24 = v15;
  id v19 = _NSConcreteStackBlock;
  uint64_t v20 = 1107296256;
  unint64_t v21 = sub_1002DE0E4;
  uint64_t v22 = &unk_10100C018;
  uint64_t v16 = _Block_copy(&v19);
  swift_release();
  [(objc_class *)isa addCompletion:v16];
  _Block_release(v16);
  [(objc_class *)isa startAnimationAfterDelay:a5];
  unint64_t v17 = &v14[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
  swift_beginAccess();
  uint64_t v18 = isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v17 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
}

uint64_t sub_100B15038(void *a1, double a2, double a3, CGFloat a4)
{
  uint64_t v8 = self;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100B1592C;
  *(void *)(v10 + 24) = v9;
  *(void *)&v14.tx = sub_10013DF0C;
  *(void *)&v14.ty = v10;
  *(void *)&v14.a = _NSConcreteStackBlock;
  *(void *)&v14.b = 1107296256;
  *(void *)&v14.c = sub_10007A61C;
  *(void *)&v14.d = &unk_10100C090;
  uint64_t v11 = _Block_copy(&v14);
  id v12 = a1;
  swift_retain();
  swift_release();
  [(id)v8 performWithoutAnimation:v11];
  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v8)
  {
    __break(1u);
  }
  else
  {
    [v12 frame];
    [v12 setFrame:a2, a3];
    CGAffineTransformMakeScale(&v14, a4, a4);
    [v12 setTransform:&v14];
    return swift_release();
  }
  return result;
}

void sub_100B15218(void *a1, double a2, double a3, double a4)
{
  sub_100B15794();
  Class isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)a1).super.isa;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v4;
  *(double *)(v10 + 24) = a2;
  *(double *)(v10 + 32) = a3;
  unint64_t v21 = sub_100B1580C;
  uint64_t v22 = v10;
  unint64_t v17 = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  id v19 = sub_100020238;
  uint64_t v20 = &unk_10100BED8;
  uint64_t v11 = _Block_copy(&v17);
  id v12 = v4;
  swift_release();
  [(objc_class *)isa addAnimations:v11];
  _Block_release(v11);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v21 = sub_100B15850;
  uint64_t v22 = v13;
  unint64_t v17 = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  id v19 = sub_1002DE0E4;
  uint64_t v20 = &unk_10100BF28;
  CGAffineTransform v14 = _Block_copy(&v17);
  swift_release();
  [(objc_class *)isa addCompletion:v14];
  _Block_release(v14);
  [(objc_class *)isa startAnimationAfterDelay:a4];
  uint64_t v15 = &v12[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
  swift_beginAccess();
  uint64_t v16 = isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v15 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
}

uint64_t sub_100B15464(void *a1, double a2, double a3)
{
  uint64_t v6 = self;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100B158A4;
  *(void *)(v8 + 24) = v7;
  uint64_t v16 = sub_10013DD14;
  uint64_t v17 = v8;
  uint64_t v12 = (uint64_t)_NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  CGAffineTransform v14 = sub_10007A61C;
  uint64_t v15 = (uint64_t)&unk_10100BFA0;
  uint64_t v9 = _Block_copy(&v12);
  id v10 = a1;
  swift_retain();
  swift_release();
  [(id)v6 performWithoutAnimation:v9];
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = 0x3FF0000000000000;
    uint64_t v13 = 0;
    CGAffineTransform v14 = 0;
    uint64_t v15 = 0x3FF0000000000000;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    [v10 setTransform:&v12];
    [v10 frame];
    [v10 setFrame:a2, a3];
    return swift_release();
  }
  return result;
}

id sub_100B15628(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2 = (double *)a2();
  swift_beginAccess();
  return UIView.setAnchorPoint(_:preserveFrame:)(1, *v2, v2[1]);
}

void sub_100B15678()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    sub_100B14944();
  }
}

uint64_t sub_100B1570C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t _s5GlyphCMa()
{
  return self;
}

uint64_t _s5GlyphC9GlyphViewCMa()
{
  return self;
}

unint64_t sub_100B15794()
{
  unint64_t result = qword_1010CAC50;
  if (!qword_1010CAC50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010CAC50);
  }
  return result;
}

uint64_t sub_100B157D4()
{
  return swift_deallocObject();
}

uint64_t sub_100B1580C()
{
  return sub_100B15464(*(void **)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_100B15818()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100B15850()
{
}

uint64_t sub_100B1586C()
{
  return swift_deallocObject();
}

id sub_100B158A4()
{
  return sub_100B15628(*(void *)(v0 + 16), (uint64_t (*)(void))CGPoint.center.unsafeMutableAddressor);
}

uint64_t sub_100B158D4()
{
  return swift_deallocObject();
}

uint64_t sub_100B158E4()
{
  return swift_deallocObject();
}

uint64_t sub_100B1591C()
{
  return sub_100B15038(*(void **)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(CGFloat *)(v0 + 40));
}

id sub_100B1592C()
{
  return sub_100B15628(*(void *)(v0 + 16), (uint64_t (*)(void))CGPoint.bottomCenter.unsafeMutableAddressor);
}

uint64_t sub_100B1595C()
{
  return swift_deallocObject();
}

char *sub_100B15990(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2) {
      return (char *)_swiftEmptyArrayStorage;
    }
    unint64_t result = sub_100AFC1B4(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v5 = swift_retain();
      }
      uint64_t v6 = *(void *)(v5 + 32);
      uint64_t v7 = *(void *)(v6 + 16);
      if (v7) {
        uint64_t v8 = *(void *)(v6 + 56 * v7 - 16);
      }
      else {
        uint64_t v8 = 0;
      }
      swift_release();
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_100AFC1B4((char *)(v9 > 1), v10 + 1, 1);
      }
      ++v4;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      _swiftEmptyArrayStorage[v10 + 4] = v8;
      if (v2 == v4) {
        return (char *)_swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

char *sub_100B15B00(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2) {
      return (char *)_swiftEmptyArrayStorage;
    }
    unint64_t result = sub_100AFC1B4(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v5 = swift_retain();
      }
      uint64_t v6 = *(void *)(v5 + 32);
      if (*(void *)(v6 + 16)) {
        uint64_t v7 = *(void *)(v6 + 32);
      }
      else {
        uint64_t v7 = 0;
      }
      swift_release();
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1) {
        sub_100AFC1B4((char *)(v8 > 1), v9 + 1, 1);
      }
      ++v4;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      _swiftEmptyArrayStorage[v9 + 4] = v7;
      if (v2 == v4) {
        return (char *)_swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_100B15C58(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v11 = v3;
  unint64_t v15 = *(void *)(v3 + 16);
  unint64_t v16 = v15 >> 62;
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    if (!v17) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v17) {
      goto LABEL_10;
    }
  }
  if (v17 < 1)
  {
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v18 = 0;
  unint64_t v4 = v15 & 0xC000000000000001;
  do
  {
    if (v4) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    ++v18;
    sub_100B19190(a1, a3);
    swift_release();
  }
  while (v17 != v18);
LABEL_10:
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v3 + 80)) {
    return;
  }
  uint64_t v19 = *(void *)(v3 + 72);
  if (!v19) {
    return;
  }
  uint64_t v20 = *(void **)(v19 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
  if (!v20) {
    return;
  }
  unint64_t v21 = *(void **)(a1 + 168);
  uint64_t v17 = v20;
  [v21 lineHeight];
  double v23 = v22 * *(double *)(a1 + 224) + *(double *)(a1 + 352) + *(double *)(a1 + 352);
  CGFloat v9 = *(double *)(v11 + 40);
  CGFloat v8 = *(double *)(v11 + 48);
  double v7 = *(double *)(v11 + 56);
  double v6 = *(double *)(v11 + 64);
  v95.origin.x = v9;
  v95.origin.y = v8;
  v95.size.width = v7;
  v95.size.height = v6;
  double v5 = (v23 - CGRectGetHeight(v95)) * 0.5;
  double v10 = *(double *)(a1 + 392);
  if (sub_100B16AE8() <= a3)
  {
    if (v16)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      unint64_t v25 = v15;
      if (!v24)
      {
LABEL_40:
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
    }
    else
    {
      uint64_t v24 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      unint64_t v25 = v15;
      if (!v24) {
        goto LABEL_40;
      }
    }
    unint64_t v26 = v24 - 1;
    if (!__OFSUB__(v24, 1))
    {
      if ((v15 & 0xC000000000000001) == 0)
      {
        if ((v26 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v26 < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v24 = *(void *)(v15 + 8 * v26 + 32);
          swift_retain();
          goto LABEL_23;
        }
        __break(1u);
        goto LABEL_38;
      }
LABEL_35:
      uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_23:
      swift_bridgeObjectRelease();
      unint64_t v25 = *(void *)(v24 + 72);
      if (!(v25 >> 62))
      {
        uint64_t v27 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v27) {
          goto LABEL_25;
        }
LABEL_39:
        swift_release();
        goto LABEL_40;
      }
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
      if (v27)
      {
LABEL_25:
        unint64_t v28 = v27 - 1;
        if (__OFSUB__(v27, 1))
        {
          __break(1u);
        }
        else if ((v25 & 0xC000000000000001) == 0)
        {
          if ((v28 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v28 < *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v29 = *(double **)(v25 + 8 * v28 + 32);
            swift_retain();
LABEL_30:
            swift_bridgeObjectRelease();
            if ((a2 & 1) == 0)
            {
              CGFloat v30 = v29[14];
              CGFloat v31 = v29[15];
              CGFloat v32 = v29[16];
              CGFloat v33 = v29[17];
              id v34 = (id)v17;
              v96.origin.x = v30;
              v96.origin.y = v31;
              v96.size.width = v32;
              v96.size.height = v33;
              CGRectGetWidth(v96);
              [v34 frame];
              [v34 setFrame:];
            }
            swift_release();
            goto LABEL_132;
          }
          __break(1u);
          goto LABEL_89;
        }
        uint64_t v29 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_30;
      }
      goto LABEL_39;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_41:
  if (sub_100B16A44() > a3)
  {
    *(void *)(v11 + 88) = 0;
    swift_release();
    id v35 = (id)v17;
    id v36 = v35;
    if (a2)
    {
      v97.origin.x = v9;
      v97.origin.y = v8;
      v97.size.width = v7;
      v97.size.height = v6;
      double v41 = v5 * 0.5 + CGRectGetWidth(v97);
      [v36 frame];
      [v36 setFrame:v41];

      id v36 = v36;
      [v36 frame];
    }
    else
    {
      [v35 frame];
    }
    [v36 setFrame:];

    goto LABEL_133;
  }
  unint64_t v4 = sub_100B170D4(a3);
  unint64_t v25 = v37;
  uint64_t v38 = sub_100B17280(a3);
  uint64_t v27 = v38;
  uint64_t v24 = v39;
  if (!v4 || !v38)
  {
    swift_release();
    swift_release();
    goto LABEL_132;
  }
  uint64_t v40 = *(void *)(v11 + 88);
  if (v40 && v38 == v40)
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  if ((a2 & 1) == 0)
  {
    if (v16)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v42 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    if (!v42) {
      goto LABEL_99;
    }
    unint64_t v44 = v42 - 1;
    if (!__OFSUB__(v42, 1))
    {
      if ((v15 & 0xC000000000000001) == 0)
      {
        if ((v44 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v44 < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v45 = *(void *)(v15 + 8 * v44 + 32);
          swift_retain();
          swift_bridgeObjectRelease();
          uint64_t v46 = *(void *)(v45 + 72);
          swift_bridgeObjectRetain();
          swift_release();
          if ((v46 & 0x8000000000000000) == 0 && (v46 & 0x4000000000000000) == 0) {
            goto LABEL_67;
          }
          goto LABEL_92;
        }
        __break(1u);
        goto LABEL_96;
      }
LABEL_90:
      uint64_t v52 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      uint64_t v46 = *(void *)(v52 + 72);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      if ((v46 & 0x8000000000000000) == 0 && (v46 & 0x4000000000000000) == 0)
      {
LABEL_67:
        uint64_t v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v47) {
          goto LABEL_68;
        }
        goto LABEL_99;
      }
LABEL_92:
      swift_bridgeObjectRetain();
      uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v47)
      {
LABEL_68:
        unint64_t v48 = v47 - 1;
        if (__OFSUB__(v47, 1)) {
          goto LABEL_141;
        }
        if ((v46 & 0xC000000000000001) != 0) {
          goto LABEL_143;
        }
        if ((v48 & 0x8000000000000000) != 0) {
          goto LABEL_142;
        }
        if (v48 < *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v49 = *(void *)(v46 + 8 * v48 + 32);
          goto LABEL_83;
        }
        goto LABEL_145;
      }
LABEL_99:
      swift_bridgeObjectRelease();
      goto LABEL_100;
    }
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  if (v16)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v43 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  if (!v43) {
    goto LABEL_99;
  }
  if ((v15 & 0xC000000000000001) == 0)
  {
    if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      uint64_t v84 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      double v85 = *(double *)(v84 + 16);
      double v62 = *(double *)(v84 + 24);
      uint64_t v65 = *(void *)(v84 + 32);
      uint64_t v64 = *(void *)(v84 + 40);
      uint64_t v88 = *(void *)(v84 + 56);
      uint64_t v89 = *(void *)(v84 + 48);
      uint64_t v86 = *(void *)(v84 + 64);
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      if (v7 == v85) {
        goto LABEL_113;
      }
LABEL_126:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_127:
      double v71 = a3;
      CGRect v99 = *(CGRect *)(v27 + 112);
      double v73 = *(double *)(v4 + 96) + v99.origin.x;
      double v72 = v73 + CGRectGetWidth(v99);
      goto LABEL_128;
    }
    uint64_t v50 = *(void *)(v15 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v51 = *(void *)(v50 + 72);
    swift_bridgeObjectRetain();
    swift_release();
    if (v51 < 0 || (v51 & 0x4000000000000000) != 0) {
      goto LABEL_98;
    }
LABEL_79:
    if (!*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_99;
    }
    goto LABEL_80;
  }
LABEL_96:
  uint64_t v53 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
  uint64_t v51 = *(void *)(v53 + 72);
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  if ((v51 & 0x8000000000000000) == 0 && (v51 & 0x4000000000000000) == 0) {
    goto LABEL_79;
  }
LABEL_98:
  swift_bridgeObjectRetain();
  uint64_t v54 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v54) {
    goto LABEL_99;
  }
LABEL_80:
  if ((v51 & 0xC000000000000001) != 0) {
    goto LABEL_143;
  }
  if (!*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_145:
    __break(1u);
    return;
  }
  uint64_t v49 = *(void *)(v51 + 32);
  while (1)
  {
LABEL_83:
    swift_bridgeObjectRelease();
    if (v49 == v27)
    {
      a3 = 1.0;
    }
    else
    {
LABEL_100:
      uint64_t v55 = *(void *)(v27 + 64);
      if (!v55 || (a3 = 0.5, v55 >= 3))
      {
        if (!v24
          || (swift_bridgeObjectRetain(), uint64_t v56 = String.count.getter(), swift_bridgeObjectRelease(), a3 = 0.25, v56 >= 3))
        {
          a3 = 0.12;
        }
      }
    }
    if (a2)
    {
      double v66 = *(double *)(v4 + 96) + *(double *)(v27 + 112) - v10 * a3 - v5;
      [(id)v17 frame];
      uint64_t v68 = v67;
      v98.origin.x = v9;
      v98.origin.y = v8;
      v98.size.width = v7;
      v98.size.height = v6;
      double v69 = CGRectGetWidth(v98) - v66;
      goto LABEL_129;
    }
    double v7 = *(double *)(v27 + 16);
    double v6 = *(double *)(v27 + 24);
    a2 = *(void *)(v27 + 40);
    uint64_t v91 = *(void *)(v27 + 48);
    uint64_t v92 = *(void *)(v27 + 32);
    uint64_t v57 = *(void *)(v27 + 64);
    uint64_t v90 = *(void *)(v27 + 56);
    unint64_t v58 = *(void *)(v4 + 72);
    if (v58 >> 62)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
      if (!v59)
      {
LABEL_125:
        swift_bridgeObjectRelease();
        goto LABEL_126;
      }
    }
    else
    {
      uint64_t v59 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v59) {
        goto LABEL_125;
      }
    }
    unint64_t v60 = v59 - 1;
    if (__OFSUB__(v59, 1)) {
      goto LABEL_136;
    }
    uint64_t v87 = v57;
    if ((v58 & 0xC000000000000001) != 0) {
      goto LABEL_137;
    }
    if ((v60 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_140;
    }
    if (v60 < *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      break;
    }
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    uint64_t v49 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
  }
  uint64_t v61 = *(void *)(v58 + 8 * v60 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  double v63 = *(double *)(v61 + 16);
  double v62 = *(double *)(v61 + 24);
  uint64_t v65 = *(void *)(v61 + 32);
  uint64_t v64 = *(void *)(v61 + 40);
  uint64_t v88 = *(void *)(v61 + 56);
  uint64_t v89 = *(void *)(v61 + 48);
  uint64_t v86 = *(void *)(v61 + 64);
  swift_bridgeObjectRetain();
  swift_release();
  if (v7 != v63) {
    goto LABEL_126;
  }
LABEL_113:
  if (v6 != v62) {
    goto LABEL_126;
  }
  if (v92 != v65 || a2 != v64)
  {
    char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v70) {
      goto LABEL_119;
    }
    goto LABEL_127;
  }
  swift_bridgeObjectRelease_n();
LABEL_119:
  if (v91 != v89 || v90 != v88 || v87 != v86 || !v25) {
    goto LABEL_127;
  }
  double v71 = a3;
  double v72 = *(double *)(v25 + 96);
LABEL_128:
  [v17 frame:v86];
  double v66 = v74;
  uint64_t v68 = v75;
  double v69 = v5 + v10 * v71 + v72;
LABEL_129:
  [(id)v17 frame];
  uint64_t v77 = *(void **)(v11 + 72);
  if (v77)
  {
    uint64_t v78 = v76;
    double v79 = *(double *)(v27 + 24) - *(double *)(v27 + 16);
    id v80 = self;
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = v77;
    *(double *)(v81 + 24) = v66;
    *(void *)(v81 + 32) = v68;
    *(double *)(v81 + 40) = v69;
    *(void *)(v81 + 48) = v78;
    aBlock[4] = sub_100B18658;
    aBlock[5] = v81;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100020238;
    aBlock[3] = &unk_10100C0E0;
    os_log_type_t v82 = _Block_copy(aBlock);
    id v83 = v77;
    swift_release();
    [v80 animateWithDuration:196609 delay:v82 options:0 animations:v79 completion:0.0];
    _Block_release(v82);
  }
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  *(void *)(v11 + 88) = v27;
LABEL_132:
  swift_release();
LABEL_133:
  [(id)v17 setNeedsDisplay];
}

uint64_t sub_100B167FC(void *a1, void *a2, char a3, const void *a4, char a5, char a6)
{
  uint64_t v7 = v6;
  char v12 = a3 & 1;
  double v13 = *(double *)(v7 + 40);
  double v14 = *(double *)(v7 + 48);
  double v15 = *(double *)(v7 + 56);
  double v16 = *(double *)(v7 + 64);
  char v17 = a6 & 1;
  id v18 = objc_allocWithZone((Class)_s4LineC8LineViewCMa());
  id v19 = a2;
  sub_100262548((uint64_t)a4);
  uint64_t v20 = sub_100B17408(v19, v12, a4, v17, v13, v14, v15, v16);
  unint64_t v21 = *(void **)(v7 + 72);
  *(void *)(v7 + 72) = v20;
  double v22 = v20;

  id v23 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, v15, v16];
  if (a5)
  {
    uint64_t v24 = *(void **)(v7 + 24);
    char v25 = *(unsigned char *)(v7 + 32);
    objc_allocWithZone((Class)type metadata accessor for CTLabel.Line());
    id v26 = CTLabel.Line.init(ctLine:size:useExtendedLineBounds:)(v24, v25, v15, v16);
    [v23 addSubview:v26];

LABEL_14:
    [v22 setMaskView:v23];

    return (uint64_t)v22;
  }
  unint64_t v27 = *(void *)(v7 + 16);
  if (!(v27 >> 62))
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v28) {
      goto LABEL_5;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v28 = result;
  if (!result) {
    goto LABEL_13;
  }
LABEL_5:
  if (v28 >= 1)
  {
    CGFloat v32 = v22;
    uint64_t v30 = 0;
    do
    {
      if ((v27 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      ++v30;
      CGFloat v31 = (void *)sub_100B19DA8(a1, (uint64_t)a4);
      [v23 addSubview:v31];
      swift_release();
    }
    while (v28 != v30);
    swift_bridgeObjectRelease();
    double v22 = v32;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

double sub_100B16A44()
{
  unint64_t v0 = swift_bridgeObjectRetain();
  unint64_t v1 = sub_100B15B00(v0);
  swift_bridgeObjectRelease();
  unint64_t v4 = (double *)v1;
  swift_bridgeObjectRetain();
  sub_100B17C50((char **)&v4);
  swift_bridgeObjectRelease();
  if (*((void *)v4 + 2)) {
    double v2 = v4[4];
  }
  else {
    double v2 = 0.0;
  }
  swift_release();
  return v2;
}

double sub_100B16AE8()
{
  unint64_t v0 = swift_bridgeObjectRetain();
  unint64_t v1 = sub_100B15990(v0);
  swift_bridgeObjectRelease();
  double v5 = v1;
  swift_bridgeObjectRetain();
  sub_100B17C50(&v5);
  swift_bridgeObjectRelease();
  uint64_t v2 = *((void *)v5 + 2);
  if (v2) {
    double v3 = *(double *)&v5[8 * v2 + 24];
  }
  else {
    double v3 = 0.0;
  }
  swift_release();
  return v3;
}

unint64_t sub_100B16B94(unint64_t result, char a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = *(void *)(v2 + 72);
  if (!v5) {
    return result;
  }
  uint64_t v6 = *(void **)(v5 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
  if (!v6) {
    return result;
  }
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(v4 + 16);
  if (v9 >> 62)
  {
    id v26 = v6;
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    if (v10)
    {
LABEL_5:
      unint64_t v12 = v10 - 1;
      if (__OFSUB__(v10, 1))
      {
        __break(1u);
      }
      else if ((v9 & 0xC000000000000001) == 0)
      {
        if ((v12 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v12 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v10 = *(void *)(v9 + 8 * v12 + 32);
          swift_retain();
          goto LABEL_10;
        }
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_10:
      swift_bridgeObjectRelease();
      unint64_t v3 = *(void *)(v10 + 72);
      if (!(v3 >> 62))
      {
        uint64_t v13 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v13) {
          goto LABEL_12;
        }
LABEL_30:

        swift_release();
        goto LABEL_31;
      }
LABEL_29:
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      if (v13)
      {
LABEL_12:
        uint64_t result = v13 - 1;
        if (__OFSUB__(v13, 1))
        {
          __break(1u);
        }
        else if ((v3 & 0xC000000000000001) == 0)
        {
          if ((result & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (result < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v14 = *(void *)(v3 + 8 * result + 32);
            swift_retain();
            goto LABEL_17;
          }
          __break(1u);
          return result;
        }
        uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_17:
        swift_bridgeObjectRelease();
        if (*(unsigned char *)(v4 + 80))
        {

          swift_release();
          return swift_release();
        }
        else
        {
          char v15 = a2 & 1;
          [*(id *)(v8 + 168) lineHeight];
          double v17 = v16 * *(double *)(v8 + 224) + *(double *)(v8 + 352) + *(double *)(v8 + 352);
          double v18 = (v17 - CGRectGetHeight(*(CGRect *)(v4 + 40))) * 0.5;
          *(unsigned char *)(v4 + 80) = 1;
          id v19 = self;
          double v20 = *(double *)(v8 + 528);
          uint64_t v21 = swift_allocObject();
          *(unsigned char *)(v21 + 16) = v15;
          *(void *)(v21 + 24) = v6;
          *(double *)(v21 + 32) = v18;
          *(void *)(v21 + 40) = v10;
          *(void *)(v21 + 48) = v14;
          memcpy((void *)(v21 + 56), (const void *)v8, 0x219uLL);
          v27[4] = sub_100B1876C;
          v27[5] = v21;
          v27[0] = _NSConcreteStackBlock;
          v27[1] = 1107296256;
          v27[2] = sub_100020238;
          v27[3] = &unk_10100C130;
          double v22 = _Block_copy(v27);
          id v23 = v6;
          swift_retain();
          swift_retain();
          sub_100262548(v8);
          swift_release();
          [v19 animateWithDuration:196609 delay:v22 options:0 animations:v20 completion:0.0];
          _Block_release(v22);
          sub_100057778(0, (unint64_t *)&qword_1010C8910);
          uint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
          uint64_t v25 = swift_allocObject();
          swift_weakInit();
          swift_retain();
          OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100B187BC, v25);

          swift_release();
          swift_release();

          return swift_release_n();
        }
      }
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v11 = v6;
    swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_5;
    }
  }

LABEL_31:

  return swift_bridgeObjectRelease();
}

id sub_100B16FC8(char a1, id a2, double a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    [a2 frame];
    [a2 setFrame:-a3];
  }
  CGRectGetMaxX(*(CGRect *)(a5 + 112));
  [a2 frame];

  return [a2 setFrame:];
}

uint64_t sub_100B17084()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 80) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_100B170D4(double a1)
{
  unint64_t v3 = *(void *)(v1 + 16);
  if (v3 >> 62) {
    goto LABEL_28;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v5 = 0;
    unint64_t v6 = v3 & 0xC000000000000001;
    while (1)
    {
      uint64_t v7 = v6 ? specialized _ArrayBuffer._getElementSlowPath(_:)() : swift_retain();
      uint64_t v8 = *(void *)(v7 + 32);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        double v10 = *(double *)(v8 + 32);
        double v11 = *(double *)(v8 + 32 + 56 * v9 - 48);
        swift_release();
        if (v10 > v11) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_release();
        double v10 = 0.0;
        double v11 = 0.0;
      }
      if (v10 <= a1 && v11 > a1) {
        break;
      }
      unint64_t v13 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_27;
      }
      ++v5;
      if (v13 == v4)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
      uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      if (!__OFADD__(v5, 1)) {
        goto LABEL_21;
      }
    }
    else
    {
      if (v5 >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return result;
      }
      uint64_t v4 = *(void *)(v3 + 8 * v5 + 32);
      swift_retain();
      if (!__OFADD__(v5, 1))
      {
LABEL_21:
        uint64_t v15 = _s4WordCMa();
        Array.subscript.getter(v15, (uint64_t)&v16);
        return v4;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_100B17280(double a1)
{
  unint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = (unint64_t)sub_100B112A4(v2);
  swift_bridgeObjectRelease();
  if (v3 >> 62) {
    goto LABEL_24;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    unint64_t v5 = v3 & 0xC000000000000001;
    for (uint64_t i = 4; ; ++i)
    {
      uint64_t v7 = i - 4;
      if (v5) {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v8 = swift_retain();
      }
      double v9 = *(double *)(v8 + 16);
      double v10 = *(double *)(v8 + 24);
      swift_release();
      if (v9 > v10) {
        goto LABEL_22;
      }
      if (v9 <= a1 && v10 > a1) {
        break;
      }
      uint64_t v12 = i - 3;
      if (__OFADD__(v7, 1)) {
        goto LABEL_23;
      }
      if (v12 == v4)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    if (v5)
    {
      uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      if (!__OFADD__(v7, 1)) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v4 = *(void *)(v3 + 8 * i);
      swift_retain();
      if (!__OFADD__(v7, 1))
      {
LABEL_18:
        uint64_t v13 = _s8SyllableCMa();
        Array.subscript.getter(v13, (uint64_t)&v15);
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v4;
}

char *sub_100B17408(void *a1, char a2, const void *a3, char a4, double a5, double a6, double a7, double a8)
{
  ObjectType = (objc_class *)swift_getObjectType();
  a2 &= 1u;
  *(void *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer] = 0;
  *(void *)&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView] = 0;
  v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_kind] = a2;
  memcpy(&v8[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs], a3, 0x219uLL);
  sub_100262548((uint64_t)a3);
  v25.receiver = v8;
  v25.super_class = ObjectType;
  double v18 = [super initWithFrame:a5, a6, a7, a8];
  id v19 = [a1 CGColor];
  id v20 = sub_100B17574((uint64_t)v19, (uint64_t)a3);

  uint64_t v21 = *(void **)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer];
  *(void *)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_backgroundColorLayer] = v20;

  double v22 = sub_100B176A0(a2, (uint64_t)a3, a4 & 1);
  sub_1002622C8((uint64_t)a3);

  id v23 = *(void **)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView];
  *(void *)&v18[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView] = v22;

  return v18;
}

id sub_100B17574(uint64_t a1, uint64_t a2)
{
  id v5 = [objc_allocWithZone((Class)CALayer) init];
  [v5 setBackgroundColor:a1];
  [*(id *)(a2 + 168) lineHeight];
  double v7 = v6 * *(double *)(a2 + 224) + *(double *)(a2 + 352) + *(double *)(a2 + 352);
  [v2 frame];
  double v8 = (v7 - CGRectGetHeight(v14)) * 0.5;
  double v9 = -v8;
  [v2 frame];
  double v10 = v8 + v8;
  CGFloat v11 = CGRectGetWidth(v15) + v8 + v8;
  [v2 frame];
  [v5 setFrame:v9, v9, v11, v10 + CGRectGetHeight(v16)];
  id v12 = [v2 layer];
  [v12 addSublayer:v5];

  return v5;
}

char *sub_100B176A0(char a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  [*(id *)(a2 + 168) lineHeight];
  double v9 = v8;
  double v10 = *(double *)(a2 + 224);
  double v11 = *(double *)(a2 + 352);
  [v4 frame];
  double Height = CGRectGetHeight(v21);
  uint64_t v13 = 384;
  if ((a1 & 1) == 0) {
    uint64_t v13 = 376;
  }
  double v14 = (v9 * v10 + v11 + v11 - Height) * 0.5;
  double v15 = *(double *)(a2 + 392);
  id v16 = *(id *)(a2 + v13);
  [v4 frame];
  double v17 = v14 + v14 + CGRectGetHeight(v22);
  id v18 = objc_allocWithZone((Class)type metadata accessor for LineProgressGradientView());
  id v19 = LineProgressGradientView.init(color:featherWidth:direction:frame:)(v16, a3 & 1, v15, -v14, -v14, v14, v17);
  [v4 addSubview:v19];
  return v19;
}

void sub_100B17848()
{
  v8.receiver = v0;
  v8.super_class = (Class)swift_getObjectType();
  [super tintColorDidChange];
  uint64_t v1 = *(char **)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView];
  if (v1)
  {
    if (v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_kind]) {
      unint64_t v2 = (void **)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 384];
    }
    else {
      unint64_t v2 = (void **)&v0[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 376];
    }
    unint64_t v3 = *v2;
    uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color];
    *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color] = v3;
    id v5 = v3;
    double v6 = v1;
    sub_100057778(0, (unint64_t *)&qword_1010D0F70);
    id v7 = v5;
    LOBYTE(v5) = static NSObject.== infix(_:_:)();

    if ((v5 & 1) == 0) {
      sub_100B3BE74();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100B17998(uint64_t a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  [super traitCollectionDidChange:a1];
  unint64_t v3 = *(char **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView];
  if (v3)
  {
    if (v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_kind]) {
      uint64_t v4 = (void **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 384];
    }
    else {
      uint64_t v4 = (void **)&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_specs + 376];
    }
    id v5 = *v4;
    double v6 = *(void **)&v3[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color];
    *(void *)&v3[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color] = v5;
    id v7 = v5;
    objc_super v8 = v3;
    sub_100057778(0, (unint64_t *)&qword_1010D0F70);
    id v9 = v7;
    LOBYTE(v7) = static NSObject.== infix(_:_:)();

    if ((v7 & 1) == 0) {
      sub_100B3BE74();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100B17BAC()
{
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t _s4LineCMa()
{
  return self;
}

uint64_t _s4LineC8LineViewCMa()
{
  return self;
}

_UNKNOWN **sub_100B17C44()
{
  return &off_1010CA560;
}

uint64_t sub_100B17C50(char **a1)
{
  unint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = sub_100B18684((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_100B17CBC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_100B17CBC(void *a1)
{
  unint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v81 = *(double *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          uint64_t v83 = v79 + 8 * v82;
          if (v81 >= *(double *)v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v83 + 8) = *(void *)v83;
          *(double *)(v79 + 8 * v82--) = v81;
        }
        while (v82 != -1);
        ++v78;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_136;
    }
    uint64_t v95 = result;
    Swift::Int v96 = v3;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(void *)(result + 16) = v6;
      Swift::Int v3 = v96;
      uint64_t v94 = (void *)result;
      CGRect v98 = (double *)(result + 32);
LABEL_13:
      Swift::Int v8 = 0;
      uint64_t v9 = *v2;
      uint64_t v92 = v2;
      uint64_t v93 = *v2 - 8;
      objc_super v10 = (char *)_swiftEmptyArrayStorage;
      uint64_t v97 = *v2;
      while (1)
      {
        Swift::Int v12 = v8++;
        if (v8 < v3)
        {
          double v13 = *(double *)(v9 + 8 * v8);
          double v14 = *(double *)(v9 + 8 * v12);
          Swift::Int v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            double v15 = v13;
            while (1)
            {
              double v16 = v15;
              double v15 = *(double *)(v9 + 8 * v8);
              if (v13 < v14 == v15 >= v16) {
                break;
              }
              if (v3 == ++v8)
              {
                Swift::Int v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12) {
              goto LABEL_138;
            }
            if (v12 < v8)
            {
              double v17 = (uint64_t *)(v93 + 8 * v8);
              Swift::Int v18 = v8;
              Swift::Int v19 = v12;
              id v20 = (uint64_t *)(v9 + 8 * v12);
              do
              {
                if (v19 != --v18)
                {
                  if (!v9) {
                    goto LABEL_144;
                  }
                  uint64_t v21 = *v20;
                  *id v20 = *v17;
                  *double v17 = v21;
                }
                ++v19;
                --v17;
                ++v20;
              }
              while (v19 < v18);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_135;
          }
          if (v8 - v12 < v95)
          {
            Swift::Int v22 = v12 + v95;
            if (__OFADD__(v12, v95)) {
              goto LABEL_139;
            }
            if (v22 >= v3) {
              Swift::Int v22 = v3;
            }
            if (v22 < v12)
            {
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
              return result;
            }
            if (v8 != v22)
            {
              id v23 = (double *)(v93 + 8 * v8);
              do
              {
                double v24 = *(double *)(v9 + 8 * v8);
                Swift::Int v25 = v12;
                id v26 = v23;
                do
                {
                  double v27 = *v26;
                  if (v24 >= *v26) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_142;
                  }
                  *id v26 = v24;
                  v26[1] = v27;
                  --v26;
                  ++v25;
                }
                while (v8 != v25);
                ++v8;
                ++v23;
              }
              while (v8 != v22);
              Swift::Int v8 = v22;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_130;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_100B18510(0, *((void *)v10 + 2) + 1, 1, v10);
          objc_super v10 = (char *)result;
        }
        unint64_t v29 = *((void *)v10 + 2);
        unint64_t v28 = *((void *)v10 + 3);
        unint64_t v11 = v29 + 1;
        uint64_t v9 = v97;
        if (v29 >= v28 >> 1)
        {
          uint64_t result = (uint64_t)sub_100B18510((char *)(v28 > 1), v29 + 1, 1, v10);
          uint64_t v9 = v97;
          objc_super v10 = (char *)result;
        }
        *((void *)v10 + 2) = v11;
        uint64_t v30 = v10 + 32;
        CGFloat v31 = &v10[16 * v29 + 32];
        *(void *)CGFloat v31 = v12;
        *((void *)v31 + 1) = v8;
        if (v29)
        {
          while (1)
          {
            unint64_t v32 = v11 - 1;
            if (v11 >= 4)
            {
              unint64_t v37 = &v30[2 * v11];
              uint64_t v38 = *(v37 - 8);
              uint64_t v39 = *(v37 - 7);
              BOOL v43 = __OFSUB__(v39, v38);
              uint64_t v40 = v39 - v38;
              if (v43) {
                goto LABEL_119;
              }
              uint64_t v42 = *(v37 - 6);
              uint64_t v41 = *(v37 - 5);
              BOOL v43 = __OFSUB__(v41, v42);
              uint64_t v35 = v41 - v42;
              char v36 = v43;
              if (v43) {
                goto LABEL_120;
              }
              unint64_t v44 = v11 - 2;
              uint64_t v45 = &v30[2 * v11 - 4];
              uint64_t v47 = *v45;
              uint64_t v46 = v45[1];
              BOOL v43 = __OFSUB__(v46, v47);
              uint64_t v48 = v46 - v47;
              if (v43) {
                goto LABEL_121;
              }
              BOOL v43 = __OFADD__(v35, v48);
              uint64_t v49 = v35 + v48;
              if (v43) {
                goto LABEL_123;
              }
              if (v49 >= v40)
              {
                uint64_t v67 = &v30[2 * v32];
                uint64_t v69 = *v67;
                uint64_t v68 = v67[1];
                BOOL v43 = __OFSUB__(v68, v69);
                uint64_t v70 = v68 - v69;
                if (v43) {
                  goto LABEL_129;
                }
                BOOL v60 = v35 < v70;
                goto LABEL_83;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v61 = *((void *)v10 + 4);
                uint64_t v62 = *((void *)v10 + 5);
                BOOL v43 = __OFSUB__(v62, v61);
                uint64_t v54 = v62 - v61;
                char v55 = v43;
                goto LABEL_77;
              }
              uint64_t v34 = *((void *)v10 + 4);
              uint64_t v33 = *((void *)v10 + 5);
              BOOL v43 = __OFSUB__(v33, v34);
              uint64_t v35 = v33 - v34;
              char v36 = v43;
            }
            if (v36) {
              goto LABEL_122;
            }
            unint64_t v44 = v11 - 2;
            uint64_t v50 = &v30[2 * v11 - 4];
            uint64_t v52 = *v50;
            uint64_t v51 = v50[1];
            BOOL v53 = __OFSUB__(v51, v52);
            uint64_t v54 = v51 - v52;
            char v55 = v53;
            if (v53) {
              goto LABEL_124;
            }
            uint64_t v56 = &v30[2 * v32];
            uint64_t v58 = *v56;
            uint64_t v57 = v56[1];
            BOOL v43 = __OFSUB__(v57, v58);
            uint64_t v59 = v57 - v58;
            if (v43) {
              goto LABEL_126;
            }
            if (__OFADD__(v54, v59)) {
              goto LABEL_128;
            }
            if (v54 + v59 >= v35)
            {
              BOOL v60 = v35 < v59;
LABEL_83:
              if (v60) {
                unint64_t v32 = v44;
              }
              goto LABEL_85;
            }
LABEL_77:
            if (v55) {
              goto LABEL_125;
            }
            double v63 = &v30[2 * v32];
            uint64_t v65 = *v63;
            uint64_t v64 = v63[1];
            BOOL v43 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v43) {
              goto LABEL_127;
            }
            if (v66 < v54) {
              goto LABEL_15;
            }
LABEL_85:
            unint64_t v71 = v32 - 1;
            if (v32 - 1 >= v11)
            {
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
              goto LABEL_140;
            }
            if (!v9) {
              goto LABEL_143;
            }
            double v72 = &v30[2 * v71];
            uint64_t v73 = *v72;
            double v74 = v30;
            uint64_t v75 = &v30[2 * v32];
            uint64_t v76 = v75[1];
            uint64_t result = sub_100B1830C((double *)(v9 + 8 * *v72), (double *)(v9 + 8 * *v75), v9 + 8 * v76, v98);
            if (v1) {
              goto LABEL_113;
            }
            if (v76 < v73) {
              goto LABEL_116;
            }
            if (v32 > *((void *)v10 + 2)) {
              goto LABEL_117;
            }
            *double v72 = v73;
            v74[2 * v71 + 1] = v76;
            unint64_t v77 = *((void *)v10 + 2);
            if (v32 >= v77) {
              goto LABEL_118;
            }
            unint64_t v11 = v77 - 1;
            uint64_t result = (uint64_t)memmove(v75, v75 + 2, 16 * (v77 - 1 - v32));
            uint64_t v30 = v74;
            *((void *)v10 + 2) = v77 - 1;
            uint64_t v9 = v97;
            if (v77 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        Swift::Int v3 = v96;
        if (v8 >= v96)
        {
          id v7 = v94;
          unint64_t v2 = v92;
          goto LABEL_102;
        }
      }
    }
    id v7 = _swiftEmptyArrayStorage;
    CGRect v98 = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      uint64_t v94 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    unint64_t v11 = _swiftEmptyArrayStorage[2];
    objc_super v10 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
    uint64_t v94 = v7;
    if (v11 >= 2)
    {
      uint64_t v84 = *v2;
      do
      {
        unint64_t v85 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_131;
        }
        if (!v84) {
          goto LABEL_145;
        }
        uint64_t v86 = (uint64_t)v10;
        uint64_t v87 = v10 + 32;
        uint64_t v88 = *(void *)&v10[16 * v85 + 32];
        uint64_t v89 = *(void *)&v10[16 * v11 + 24];
        uint64_t result = sub_100B1830C((double *)(v84 + 8 * v88), (double *)(v84 + 8 * v87[2 * v11 - 2]), v84 + 8 * v89, v98);
        if (v1) {
          break;
        }
        if (v89 < v88) {
          goto LABEL_132;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_100B1860C(v86);
          uint64_t v86 = result;
        }
        if (v85 >= *(void *)(v86 + 16)) {
          goto LABEL_133;
        }
        uint64_t v90 = (void *)(v86 + 32 + 16 * v85);
        *uint64_t v90 = v88;
        v90[1] = v89;
        unint64_t v91 = *(void *)(v86 + 16);
        if (v11 > v91) {
          goto LABEL_134;
        }
        uint64_t result = (uint64_t)memmove((void *)(v86 + 32 + 16 * (v11 - 1)), (const void *)(v86 + 32 + 16 * v11), 16 * (v91 - v11));
        objc_super v10 = (char *)v86;
        *(void *)(v86 + 16) = v91 - 1;
        unint64_t v11 = v91 - 1;
      }
      while (v91 > 2);
    }
LABEL_113:
    swift_bridgeObjectRelease();
    v94[2] = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100B1830C(double *__dst, double *__src, unint64_t a3, double *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  id v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = (char *)__src - (char *)__dst + 7;
  if ((char *)__src - (char *)__dst >= 0) {
    int64_t v9 = (char *)__src - (char *)__dst;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)__src;
  uint64_t v12 = a3 - (void)__src + 7;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v12 = a3 - (void)__src;
  }
  uint64_t v13 = v12 >> 3;
  if (v10 >= v12 >> 3)
  {
    if (a4 != __src || &__src[v13] <= a4) {
      memmove(a4, __src, 8 * v13);
    }
    double v14 = &v4[v13];
    if (v7 >= v6 || v11 < 8) {
      goto LABEL_39;
    }
    double v17 = (double *)(a3 - 8);
    Swift::Int v18 = v6;
    while (1)
    {
      Swift::Int v19 = v17 + 1;
      double v20 = *--v18;
      double v21 = v20;
      if (*(v14 - 1) < v20) {
        break;
      }
      double v21 = *(v14 - 1);
      Swift::Int v18 = v6;
      if (v19 != v14)
      {
        --v14;
LABEL_35:
        *double v17 = v21;
        goto LABEL_36;
      }
      if (v17 >= v14--) {
        goto LABEL_35;
      }
LABEL_36:
      if (v18 > v7)
      {
        --v17;
        uint64_t v6 = v18;
        if (v14 > v4) {
          continue;
        }
      }
      uint64_t v6 = v18;
      goto LABEL_39;
    }
    if (v19 == v6 && v17 < v6) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (a4 != __dst || &__dst[v10] <= a4) {
    memmove(a4, __dst, 8 * v10);
  }
  double v14 = &v4[v10];
  if ((unint64_t)v6 < a3 && v8 >= 8)
  {
    while (1)
    {
      double v15 = *v6;
      if (*v6 >= *v4) {
        break;
      }
      BOOL v16 = v7 == v6++;
      if (!v16) {
        goto LABEL_16;
      }
LABEL_17:
      ++v7;
      if (v4 >= v14 || (unint64_t)v6 >= a3) {
        goto LABEL_19;
      }
    }
    double v15 = *v4;
    BOOL v16 = v7 == v4++;
    if (v16) {
      goto LABEL_17;
    }
LABEL_16:
    *id v7 = v15;
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v6 = v7;
LABEL_39:
  int64_t v23 = (char *)v14 - (char *)v4 + ((char *)v14 - (char *)v4 < 0 ? 7uLL : 0);
  if (v6 != v4 || v6 >= (double *)((char *)v4 + (v23 & 0xFFFFFFFFFFFFFFF8))) {
    memmove(v6, v4, 8 * (v23 >> 3));
  }
  return 1;
}

char *sub_100B18510(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100063814(&qword_1010CA318);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  double v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_100B1860C(uint64_t a1)
{
  return sub_100B18510(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100B18620()
{
  return swift_deallocObject();
}

id sub_100B18658()
{
  id result = *(id *)(*(void *)(v0 + 16)
                 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
  if (result) {
    return [result setFrame:*(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48)];
  }
  __break(1u);
  return result;
}

char *sub_100B18684(uint64_t a1)
{
  return sub_100AFC814(0, *(void *)(a1 + 16), 0, (char *)a1);
}

char *sub_100B18698(uint64_t a1)
{
  return sub_100AFCE30(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100B186AC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

id sub_100B1876C()
{
  return sub_100B16FC8(*(unsigned char *)(v0 + 16), *(id *)(v0 + 24), *(double *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_100B18784()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100B187BC()
{
  return sub_100B17084();
}

void *sub_100B187DC(void *result, char a2, uint64_t a3)
{
  Swift::Int v3 = (void *)result[18];
  if (v3)
  {
    if (a2)
    {
      long long v4 = xmmword_100E26B20;
      long long v5 = xmmword_100E26B30;
      long long v6 = 0uLL;
    }
    else
    {
      CGAffineTransformMakeTranslation(&v7, 0.0, -*(double *)(a3 + 504));
      long long v5 = *(_OWORD *)&v7.a;
      long long v4 = *(_OWORD *)&v7.c;
      long long v6 = *(_OWORD *)&v7.tx;
    }
    *(_OWORD *)&v7.a = v5;
    *(_OWORD *)&v7.c = v4;
    *(_OWORD *)&v7.tx = v6;
    return [v3 setTransform:&v7];
  }
  return result;
}

void sub_100B1885C(uint64_t a1, uint64_t a2, char a3)
{
  if (!a1)
  {
    Swift::Int v3 = *(void **)(a2 + 96);
    *(void *)(a2 + 96) = (a3 & 1) == 0;
    unsigned __int8 v4 = *(unsigned char *)(a2 + 104);
    *(unsigned char *)(a2 + 104) = 2;
    sub_100B13F18(v3, v4);
  }
}

id sub_100B18914()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s8SyllableC12SyllableViewCMa();
  return [super dealloc];
}

uint64_t sub_100B18948()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100B13F18(*(id *)(v0 + 96), *(unsigned char *)(v0 + 104));

  return swift_deallocClassInstance();
}

uint64_t _s8SyllableCMa()
{
  return self;
}

uint64_t _s8SyllableC12SyllableViewCMa()
{
  return self;
}

_UNKNOWN **sub_100B189EC()
{
  return &off_1010CA178;
}

void sub_100B189F8()
{
  uint64_t v1 = v0;
  Class isa = *(Class *)(v0 + 96);
  int v3 = *(unsigned __int8 *)(v1 + 104);
  if (v3 == 1)
  {
    if (isa)
    {
LABEL_9:
      sub_100B13EF4(isa, v3);
      [(objc_class *)isa stopAnimation:1];
      goto LABEL_10;
    }
  }
  else
  {
    if (*(unsigned char *)(v1 + 104)) {
      BOOL v4 = 1;
    }
    else {
      BOOL v4 = isa == 0;
    }
    if (!v4) {
      goto LABEL_9;
    }
  }
  sub_100B15794();
  Class isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0)).super.isa;
LABEL_10:
  double v14 = sub_100B18C0C;
  uint64_t v15 = v1;
  uint64_t v10 = _NSConcreteStackBlock;
  uint64_t v11 = 1107296256;
  uint64_t v12 = sub_100020238;
  uint64_t v13 = &unk_10100C180;
  long long v5 = _Block_copy(&v10);
  swift_retain();
  swift_release();
  [(objc_class *)isa addAnimations:v5];
  _Block_release(v5);
  double v14 = sub_100B18C50;
  uint64_t v15 = v1;
  uint64_t v10 = _NSConcreteStackBlock;
  uint64_t v11 = 1107296256;
  uint64_t v12 = sub_1002DE0E4;
  uint64_t v13 = &unk_10100C1A8;
  long long v6 = _Block_copy(&v10);
  swift_retain();
  swift_release();
  [(objc_class *)isa addCompletion:v6];
  _Block_release(v6);
  CGAffineTransform v7 = *(void **)(v1 + 96);
  *(void *)(v1 + 96) = isa;
  unsigned __int8 v8 = *(unsigned char *)(v1 + 104);
  *(unsigned char *)(v1 + 104) = 1;
  uint64_t v9 = isa;
  sub_100B13F18(v7, v8);
  [(objc_class *)v9 startAnimation];
}

id sub_100B18C0C()
{
  id result = *(id *)(v0 + 144);
  if (result)
  {
    v2[0] = 0x3FF0000000000000;
    v2[1] = 0;
    v2[2] = 0;
    v2[3] = 0x3FF0000000000000;
    v2[4] = 0;
    v2[5] = 0;
    return [result setTransform:v2];
  }
  return result;
}

void sub_100B18C50(uint64_t a1)
{
  if (!a1)
  {
    objc_super v2 = *(void **)(v1 + 96);
    *(void *)(v1 + 96) = 0;
    unsigned __int8 v3 = *(unsigned char *)(v1 + 104);
    *(unsigned char *)(v1 + 104) = 2;
    sub_100B13F18(v2, v3);
  }
}

void *sub_100B18C78(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      do
      {
        uint64_t v4 = v3 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_11;
          }
        }
        else
        {
          uint64_t v5 = *(void *)(a1 + 8 * v3);
          swift_retain();
          uint64_t v6 = v3 - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_11:
            __break(1u);
            goto LABEL_12;
          }
        }
        unint64_t v7 = *(void *)(v5 + 88);
        swift_bridgeObjectRetain();
        swift_release();
        sub_100B9B100(v7);
        ++v3;
      }
      while (v6 != v2);
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_100B18D9C()
{
  unint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 128);
  if (v2)
  {
    id v3 = [v2 layer];
    [v3 removeAllAnimations];
  }
  if (*(void *)(v1 + 136))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(void *)(v1 + 136) = 0;
  swift_release();
  uint64_t v4 = *(void **)(v1 + 128);
  if (v4)
  {
    id v5 = v4;
    sub_100B1A2C8();
  }
  unint64_t v6 = swift_bridgeObjectRetain();
  unint64_t v7 = (unint64_t)sub_100B18C78(v6);
  swift_bridgeObjectRelease();
  if (v7 >> 62) {
    goto LABEL_34;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v8)
  {
    unint64_t v9 = 0;
    uint64_t v32 = v8;
    unint64_t v31 = v1;
    while (1)
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        double v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v15 = __OFADD__(v9++, 1);
        if (v15) {
          break;
        }
        goto LABEL_17;
      }
      if (v9 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_33;
      }
      double v14 = *(void **)(v7 + 32 + 8 * v9);
      swift_retain();
      BOOL v15 = __OFADD__(v9++, 1);
      if (v15) {
        break;
      }
LABEL_17:
      BOOL v16 = (char *)v14[8];
      if (v16)
      {
        uint64_t v17 = v14[4];
        uint64_t v18 = v14[5];
        uint64_t v19 = v14[6];
        uint64_t v20 = v14[7];
        double v21 = &v16[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
        swift_beginAccess();
        unint64_t v22 = *(void *)v21;
        if (v22 >> 62)
        {
          unint64_t v28 = v16;
          swift_bridgeObjectRetain();
          uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
          if (!v23) {
            goto LABEL_10;
          }
        }
        else
        {
          uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
          double v24 = v16;
          swift_bridgeObjectRetain();
          if (!v23) {
            goto LABEL_10;
          }
        }
        if (v23 < 1) {
          goto LABEL_32;
        }
        uint64_t v25 = 0;
        unint64_t v1 = v22 & 0xC000000000000001;
        do
        {
          if (v1) {
            id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v26 = *(id *)(v22 + 8 * v25 + 32);
          }
          double v27 = v26;
          ++v25;
          [v26 stopAnimation:0, v31];
        }
        while (v23 != v25);
LABEL_10:
        swift_bridgeObjectRelease();
        sub_100B14944();
        uint64_t v10 = (double *)CGPoint.center.unsafeMutableAddressor();
        swift_beginAccess();
        UIView.setAnchorPoint(_:preserveFrame:)(1, *v10, v10[1]);
        sub_100057778(0, (unint64_t *)&qword_1010CD3B0);
        sub_100057778(0, &qword_1010CA980);
        id v11 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, 1.5);
        uint64_t v12 = (void *)swift_allocObject();
        v12[2] = v16;
        v12[3] = v17;
        void v12[4] = v18;
        v12[5] = v19;
        v12[6] = v20;
        uint64_t v13 = v16;
        static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v11, 0, sub_100B1AEF4, (uint64_t)v12, 0, 0, 0.0);

        swift_release();
        [v13 sizeToFit];
        swift_release();

        uint64_t v8 = v32;
        if (v9 == v32) {
          goto LABEL_30;
        }
      }
      else
      {
        swift_release();
        if (v9 == v8)
        {
LABEL_30:
          swift_bridgeObjectRelease();
          unint64_t v1 = v31;
          goto LABEL_36;
        }
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_36:
  unint64_t v29 = *(void **)(v1 + 80);
  *(void *)(v1 + 80) = 0;
  unsigned __int8 v30 = *(unsigned char *)(v1 + 88);
  *(unsigned char *)(v1 + 88) = 2;
  sub_100B13F18(v29, v30);
}

void sub_100B19190(uint64_t a1, double a2)
{
  uint64_t v4 = v2;
  double v104 = *(double *)&a1;
  sub_100063814(&qword_1010CAA90);
  __chkstk_darwin();
  CGRect v99 = (char *)v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v105 = *(double *)(v2 + 72);
  if (*(void *)&v105 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((*(void *)&v105 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      *(void *)&double v106 = v7 - 1;
      if (v7 < 1) {
        goto LABEL_69;
      }
      uint64_t v100 = v4;
      uint64_t v8 = 0;
      double v10 = v104;
      double v9 = v105;
      unint64_t v11 = *(void *)&v105 & 0xC000000000000001;
      while (1)
      {
        if (v11)
        {
          uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v12 = *(void *)(*(void *)&v9 + 8 * v8 + 32);
          swift_retain();
        }
        double v13 = *(double *)(v12 + 16);
        BOOL v14 = v13 <= a2;
        if (*(unsigned __int8 *)(v12 + 104) >= 2u)
        {
          if (*(void *)(v12 + 96))
          {
            if (v13 <= a2) {
              goto LABEL_5;
            }
            BOOL v14 = 0;
          }
          else if (v13 > a2)
          {
LABEL_5:
            swift_release();
            if (*(void *)&v106 == v8) {
              goto LABEL_25;
            }
            goto LABEL_6;
          }
        }
        sub_100B13F18((id)v14, 2u);
        Class isa = *(Class *)(v12 + 96);
        int v16 = *(unsigned __int8 *)(v12 + 104);
        if (v16 == 1)
        {
          if (isa && v13 <= a2)
          {
LABEL_22:
            sub_100B13EF4(*(id *)(v12 + 96), v16);
            [(objc_class *)isa stopAnimation:1];
            goto LABEL_24;
          }
        }
        else if (!*(unsigned char *)(v12 + 104) && isa && v13 > a2)
        {
          goto LABEL_22;
        }
        sub_100057778(0, (unint64_t *)&qword_1010CAC50);
        Class isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)objc_msgSend(objc_allocWithZone((Class)UISpringTimingParameters), "initWithMass:stiffness:damping:initialVelocity:", 1.0, 14.0, 7.0, 0.0, 0.0)).super.isa;
LABEL_24:
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = v12;
        *(unsigned char *)(v17 + 24) = v13 > a2;
        memcpy((void *)(v17 + 32), *(const void **)&v10, 0x219uLL);
        unint64_t v111 = sub_100B1AD34;
        uint64_t v112 = v17;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v108 = 1107296256;
        id v109 = sub_100020238;
        uint64_t v110 = &unk_10100C1F8;
        uint64_t v18 = _Block_copy(&aBlock);
        swift_retain();
        sub_100262548(*(uint64_t *)&v10);
        swift_release();
        [(objc_class *)isa addAnimations:v18];
        _Block_release(v18);
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = v12;
        *(unsigned char *)(v19 + 24) = v13 > a2;
        unint64_t v111 = sub_100B1AD7C;
        uint64_t v112 = v19;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v108 = 1107296256;
        id v109 = sub_1002DE0E4;
        uint64_t v110 = &unk_10100C248;
        uint64_t v20 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [(objc_class *)isa addCompletion:v20];
        _Block_release(v20);
        double v21 = *(void **)(v12 + 96);
        *(void *)(v12 + 96) = isa;
        unsigned __int8 v22 = *(unsigned char *)(v12 + 104);
        *(unsigned char *)(v12 + 104) = v13 > a2;
        uint64_t v23 = isa;
        sub_100B13F18(v21, v22);
        [(objc_class *)v23 startAnimation];
        swift_release();

        double v9 = v105;
        if (*(void *)&v106 == v8)
        {
LABEL_25:
          swift_bridgeObjectRelease();
          uint64_t v4 = v100;
          goto LABEL_28;
        }
LABEL_6:
        ++v8;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t v24 = *(void *)(v4 + 32);
  uint64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    if (*(double *)(v24 + 32) <= a2)
    {
LABEL_72:
      if (*(double *)(v24 + 32) > a2) {
        return;
      }
      goto LABEL_75;
    }
  }
  else if (a2 >= 0.0)
  {
    goto LABEL_74;
  }
  if (*(unsigned char *)(v4 + 88) == 2 && !*(void *)(v4 + 80))
  {
    if (v25) {
      goto LABEL_72;
    }
    goto LABEL_74;
  }
  id v26 = *(void **)(v4 + 128);
  if (v26)
  {
    id v27 = [v26 layer];
    [v27 removeAllAnimations];
  }
  if (*(void *)(v4 + 136))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(void *)(v4 + 136) = 0;
  swift_release();
  unint64_t v28 = *(void **)(v4 + 128);
  if (v28)
  {
    id v29 = v28;
    sub_100B1A2C8();
  }
  uint64_t v98 = v24;
  unint64_t v30 = swift_bridgeObjectRetain();
  unint64_t v3 = (unint64_t)sub_100B18C78(v30);
  v97[1] = 0;
  swift_bridgeObjectRelease();
  uint64_t v100 = v4;
  if (v3 >> 62) {
    goto LABEL_70;
  }
  uint64_t v31 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v31)
  {
LABEL_45:
    unint64_t v32 = 0;
    *(void *)&double v106 = v3 & 0xC000000000000001;
    uint64_t v102 = v3 & 0xFFFFFFFFFFFFFF8;
    os_log_type_t v101 = (void *)(v3 + 32);
    for (i = v31; i != v32; uint64_t v31 = i)
    {
      while (1)
      {
        if (v106 == 0.0)
        {
          if (v32 >= *(void *)(v102 + 16)) {
            goto LABEL_68;
          }
          unint64_t v37 = (void *)v101[v32];
          swift_retain();
          BOOL v38 = __OFADD__(v32++, 1);
          if (v38)
          {
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            swift_bridgeObjectRetain();
            uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (!v31) {
              goto LABEL_71;
            }
            goto LABEL_45;
          }
        }
        else
        {
          unint64_t v37 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v38 = __OFADD__(v32++, 1);
          if (v38) {
            goto LABEL_66;
          }
        }
        uint64_t v39 = (char *)v37[8];
        if (v39) {
          break;
        }
        swift_release();
        if (v32 == v31) {
          goto LABEL_71;
        }
      }
      uint64_t v40 = v37[4];
      uint64_t v41 = v37[5];
      uint64_t v42 = v37[6];
      uint64_t v43 = v37[7];
      unint64_t v44 = &v39[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators];
      swift_beginAccess();
      unint64_t v45 = *(void *)v44;
      if (v45 >> 62)
      {
        uint64_t v51 = v39;
        swift_bridgeObjectRetain();
        uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
        if (!v46) {
          goto LABEL_46;
        }
      }
      else
      {
        uint64_t v46 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v47 = v39;
        swift_bridgeObjectRetain();
        if (!v46) {
          goto LABEL_46;
        }
      }
      if (v46 < 1) {
        goto LABEL_67;
      }
      for (uint64_t j = 0; j != v46; ++j)
      {
        if ((v45 & 0xC000000000000001) != 0) {
          id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v49 = *(id *)(v45 + 8 * j + 32);
        }
        uint64_t v50 = v49;
        [v49 stopAnimation:0];
      }
LABEL_46:
      swift_bridgeObjectRelease();
      sub_100B14944();
      uint64_t v33 = (double *)CGPoint.center.unsafeMutableAddressor();
      swift_beginAccess();
      UIView.setAnchorPoint(_:preserveFrame:)(1, *v33, v33[1]);
      sub_100057778(0, (unint64_t *)&qword_1010CD3B0);
      sub_100057778(0, &qword_1010CA980);
      id v34 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, 1.5);
      uint64_t v35 = (void *)swift_allocObject();
      v35[2] = v39;
      v35[3] = v40;
      v35[4] = v41;
      v35[5] = v42;
      v35[6] = v43;
      char v36 = v39;
      static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v34, 0, sub_100B1AEF4, (uint64_t)v35, 0, 0, 0.0);

      swift_release();
      [v36 sizeToFit];
      swift_release();
    }
  }
LABEL_71:
  swift_bridgeObjectRelease();
  uint64_t v4 = v100;
  uint64_t v52 = *(void **)(v100 + 80);
  *(void *)(v100 + 80) = 0;
  unsigned __int8 v53 = *(unsigned char *)(v4 + 88);
  *(unsigned char *)(v4 + 88) = 2;
  sub_100B13F18(v52, v53);
  uint64_t v24 = v98;
  if (*(void *)(v98 + 16)) {
    goto LABEL_72;
  }
LABEL_74:
  if (a2 < 0.0) {
    return;
  }
LABEL_75:
  if (*(unsigned char *)(v4 + 88) == 2 && !*(void *)(v4 + 80) && (*(unsigned char *)(v4 + 48) & 1) == 0)
  {
    double v54 = *(double *)(v4 + 40);
    unint64_t v55 = swift_bridgeObjectRetain();
    unint64_t v56 = (unint64_t)sub_100B18C78(v55);
    swift_bridgeObjectRelease();
    uint64_t v57 = *(void *)(v24 + 16);
    if (v57) {
      double v58 = *(double *)(v24 + 32 + 56 * v57 - 48) - *(double *)(v24 + 32);
    }
    else {
      double v58 = 0.0;
    }
    if (v56 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v59 < 1) {
        goto LABEL_105;
      }
    }
    else
    {
      uint64_t v59 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v59 < 1) {
        goto LABEL_105;
      }
    }
    if (v58 > 0.0)
    {
      BOOL v60 = *(void **)(v4 + 80);
      *(void *)(v4 + 80) = 0;
      unsigned __int8 v61 = *(unsigned char *)(v4 + 88);
      *(unsigned char *)(v4 + 88) = 0;
      sub_100B13F18(v60, v61);
      uint64_t v62 = *(void **)(v4 + 128);
      uint64_t v63 = *(void *)&v104;
      if (v62)
      {
        id v64 = v62;
        sub_100B1A4EC(v63, v54, v58);
      }
      uint64_t v65 = type metadata accessor for TaskPriority();
      uint64_t v66 = (uint64_t)v99;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v99, 1, 1, v65);
      uint64_t v67 = swift_allocObject();
      swift_weakInit();
      uint64_t v68 = swift_allocObject();
      *(void *)(v68 + 16) = 0;
      *(void *)(v68 + 24) = 0;
      *(void *)(v68 + 32) = v67;
      *(double *)(v68 + 40) = v58;
      *(void *)(v4 + 136) = sub_100066A94(v66, (uint64_t)&unk_1010CA5C0, v68);
      swift_release();
      double v69 = (double)v59;
      double v70 = v58 / (double)v59 * 0.4;
      if (v70 > 0.4) {
        double v70 = 0.4;
      }
      double v106 = v70;
      double v71 = *(double *)(v63 + 216) + v54 * (*(double *)(v63 + 224) - *(double *)(v63 + 216));
      if (v58 <= 3.0) {
        double v72 = v58;
      }
      else {
        double v72 = 3.0;
      }
      sub_100057778(0, &qword_1010CA980);
      id v73 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, v72);
      double v75 = *(double *)(v4 + 112);
      double v74 = *(double *)(v4 + 120);
      CGSize.scaled(_:)();
      double v77 = v76;
      double v79 = v78;
      if (v56 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v80 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        double v81 = v104;
        if (!v80)
        {
LABEL_104:

          goto LABEL_105;
        }
      }
      else
      {
        uint64_t v80 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
        double v81 = v104;
        if (!v80) {
          goto LABEL_104;
        }
      }
      if (v80 < 1)
      {
        __break(1u);
        return;
      }
      uint64_t v82 = 0;
      double v83 = v69 * 0.5;
      double v84 = (v75 - v77) * 0.5;
      double v85 = v74 - v79;
      double v86 = *(double *)(*(void *)&v81 + 504);
      double v104 = v58 / v83;
      double v105 = v84;
      do
      {
        while (1)
        {
          if ((v56 & 0xC000000000000001) != 0)
          {
            uint64_t v87 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v87 = *(void *)(v56 + 8 * v82 + 32);
            swift_retain();
          }
          ++v82;
          uint64_t v88 = *(void **)(v87 + 64);
          if (v88)
          {
            double v89 = *(double *)(v87 + 32);
            double v90 = *(double *)(v87 + 40);
            double v91 = (v89 + v105 + v71 * v89) * 0.5;
            double v92 = v106 * (double)v82;
            id v93 = v88;
            sub_100B14DE4(v73, v91, (v90 + v85 + v71 * v90) * 0.25 - v86, v71, v92);

            uint64_t v94 = *(void **)(v87 + 64);
            if (v94) {
              break;
            }
          }
          swift_release();
          if (v80 == v82) {
            goto LABEL_104;
          }
        }
        double v95 = v104 + v92;
        id v96 = v94;
        sub_100B15218(v73, v89, v90 - v86, v95);
        swift_release();
      }
      while (v80 != v82);
      goto LABEL_104;
    }
LABEL_105:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100B19DA8(void *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  id v5 = [objc_allocWithZone((Class)_s4WordC8WordViewCMa()) initWithFrame:v2[12], v2[13], v2[14], v2[15]];
  uint64_t v6 = *(void **)(a2 + 344);
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v6, (uint64_t)v53, 0.0, *(double *)(a2 + 352), 0.0, 0.0);
  id v7 = v6;
  id v8 = [v5 layer];
  id v9 = [v5 traitCollection];
  [v9 displayScale];
  double v11 = v10;

  [v8 setRasterizationScale:v11];
  id v12 = [v5 layer];
  [v12 setShouldRasterize:1];

  id v13 = v5;
  sub_10003CB4C(v53);
  UIView.shadow.setter((uint64_t)v53);

  BOOL v14 = (void *)*((void *)v3 + 16);
  *((void *)v3 + 16) = v13;
  id v15 = v13;

  if (!*((void *)v3 + 16))
  {
    int v16 = (void *)*((void *)v3 + 10);
    v3[10] = 0.0;
    unsigned __int8 v17 = *((unsigned char *)v3 + 88);
    *((unsigned char *)v3 + 88) = 2;
    sub_100B13F18(v16, v17);
  }

  unint64_t v18 = *((void *)v3 + 9);
  if (((_BYTE)v3[6] & 1) == 0)
  {
    unint64_t v33 = swift_bridgeObjectRetain();
    unint64_t v34 = (unint64_t)sub_100B18C78(v33);
    uint64_t result = swift_bridgeObjectRelease();
    if (v34 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v35) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v35) {
        goto LABEL_21;
      }
    }
    if (v35 >= 1)
    {
      uint64_t v36 = 0;
      do
      {
        if ((v34 & 0xC000000000000001) != 0)
        {
          unint64_t v37 = (double *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          unint64_t v37 = *(double **)(v34 + 8 * v36 + 32);
          swift_retain();
        }
        ++v36;
        double v38 = v37[4];
        double v39 = v37[5];
        double v40 = v37[6];
        double v41 = v37[7];
        uint64_t v42 = (objc_class *)_s5GlyphC9GlyphViewCMa();
        uint64_t v43 = (char *)objc_allocWithZone(v42);
        *(void *)&v43[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView5Glyph9GlyphView_currentAnimators] = _swiftEmptyArrayStorage;
        v52.receiver = v43;
        v52.super_class = v42;
        id v44 = a1;
        swift_bridgeObjectRetain();
        id v45 = [super initWithFrame:v38, v39, v40, v41];
        NSString v46 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v45 setText:v46];

        [v45 setFont:v44];
        [v45 setTextAlignment:0];
        id v47 = v45;
        [v47 sizeToFit];

        uint64_t v48 = (void *)*((void *)v37 + 8);
        *((void *)v37 + 8) = v47;
        id v49 = v47;

        [v15 addSubview:v49];
        swift_release();
      }
      while (v35 != v36);
      goto LABEL_21;
    }
    goto LABEL_25;
  }
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v19 = result;
    if (result) {
      goto LABEL_6;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    sub_10003CB20(v53);
    return (uint64_t)v15;
  }
  uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v19) {
    goto LABEL_21;
  }
LABEL_6:
  if (v19 >= 1)
  {
    uint64_t v21 = 0;
    do
    {
      if ((v18 & 0xC000000000000001) != 0)
      {
        uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v22 = *(void *)(v18 + 8 * v21 + 32);
        swift_retain();
      }
      ++v21;
      double v23 = *(double *)(v22 + 112);
      double v24 = *(double *)(v22 + 120);
      double v25 = *(double *)(v22 + 136);
      double v26 = *(double *)(v22 + 128) + 50.0;
      id v27 = (objc_class *)_s8SyllableC12SyllableViewCMa();
      v51.receiver = objc_allocWithZone(v27);
      v51.super_class = v27;
      swift_bridgeObjectRetain();
      id v28 = a1;
      id v29 = [super initWithFrame:v23, v24, v26, v25];
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v29 setText:v30];

      [v29 setFont:v28];
      [v29 setTextAlignment:0];

      uint64_t v31 = *(void **)(v22 + 144);
      *(void *)(v22 + 144) = v29;
      id v32 = v29;

      [v15 addSubview:v32];
      swift_release();
    }
    while (v19 != v21);
    goto LABEL_21;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void sub_100B1A2C8()
{
  unint64_t v1 = v0;
  sub_100057778(0, &qword_1010CA980);
  id v2 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, 1.5);
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [self animationWithKeyPath:v3];

  id v5 = v4;
  [v2 settlingDuration];
  [v5 setDuration:];

  id v6 = v2;
  CASpringAnimation.springParameters.setter(v6);
  id v7 = v5;
  id v8 = [v1 layer];
  [v8 shadowOpacity];

  Class isa = Float._bridgeToObjectiveC()().super.super.isa;
  [v7 setFromValue:isa];

  id v10 = v7;
  Class v11 = Int._bridgeToObjectiveC()().super.super.isa;
  [v10 setToValue:v11];

  id v12 = [v1 layer];
  id v13 = [v10 keyPath];
  [v12 addAnimation:v10 forKey:v13];

  id v14 = [v1 layer];
  [v14 setShadowOpacity:0.0];
}

void sub_100B1A4EC(uint64_t a1, double a2, double a3)
{
  id v4 = v3;
  float v5 = *(double *)(a1 + 360) + (*(double *)(a1 + 368) - *(double *)(a1 + 360)) * a2;
  if (a3 <= 3.0) {
    double v6 = a3;
  }
  else {
    double v6 = 3.0;
  }
  sub_100057778(0, &qword_1010CA980);
  id v7 = UISpringTimingParameters.init(dampingRatio:response:)(1.0, v6);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self animationWithKeyPath:v8];

  id v10 = v9;
  [v7 settlingDuration];
  [v10 setDuration:];

  id v11 = v7;
  CASpringAnimation.springParameters.setter(v11);
  id v12 = v10;
  id v13 = [v4 layer];
  [v13 shadowOpacity];

  Class isa = Float._bridgeToObjectiveC()().super.super.isa;
  [v12 setFromValue:isa];

  Class v15 = Float._bridgeToObjectiveC()().super.super.isa;
  [v12 setToValue:v15];

  id v16 = [v4 layer];
  id v17 = [v12 keyPath];
  [v16 addAnimation:v12 forKey:v17];

  id v19 = [v4 layer];
  *(float *)&double v18 = v5;
  [v19 setShadowOpacity:v18];
}

uint64_t sub_100B1A724(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(double *)(v5 + 96) = a1;
  *(void *)(v5 + 88) = a5;
  return _swift_task_switch(sub_100B1A748, 0, 0);
}

uint64_t sub_100B1A748()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v2 = *(void **)(Strong + 128);
    v0[13] = v2;
    if (v2)
    {
      v2;
      swift_release();
      Class v15 = (uint64_t (*)(__n128))((char *)&dword_1010CA5C8 + dword_1010CA5C8);
      NSString v3 = (void *)swift_task_alloc();
      v0[14] = v3;
      *NSString v3 = v0;
      v3[1] = sub_100B1A908;
      v4.n128_u64[0] = v0[12];
      return v15(v4);
    }
    swift_release();
  }
  swift_beginAccess();
  uint64_t v6 = swift_weakLoadStrong();
  if (!v6
    || ((uint64_t v7 = *(void *)(v6 + 80), v8 = *(unsigned __int8 *)(v6 + 88), swift_release(), v8 == 2)
      ? (BOOL v9 = v7 == 0)
      : (BOOL v9 = 0),
        !v9))
  {
    swift_beginAccess();
    uint64_t v10 = swift_weakLoadStrong();
    if (v10)
    {
      uint64_t v11 = v10;
      id v12 = *(void **)(v10 + 80);
      *(void *)(v11 + 80) = 1;
      unsigned __int8 v13 = *(unsigned char *)(v11 + 88);
      *(unsigned char *)(v11 + 88) = 2;
      sub_100B13F18(v12, v13);
      swift_release();
    }
  }
  id v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100B1A908()
{
  unint64_t v1 = *(void **)(*(void *)v0 + 104);
  swift_task_dealloc();

  return _swift_task_switch(sub_100B1AA1C, 0, 0);
}

uint64_t sub_100B1AA1C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong
    || ((v2 = *(void *)(Strong + 80), int v3 = *(unsigned __int8 *)(Strong + 88), swift_release(), v3 == 2)
      ? (BOOL v4 = v2 == 0)
      : (BOOL v4 = 0),
        !v4))
  {
    swift_beginAccess();
    uint64_t v5 = swift_weakLoadStrong();
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void **)(v5 + 80);
      *(void *)(v6 + 80) = 1;
      unsigned __int8 v8 = *(unsigned char *)(v6 + 88);
      *(unsigned char *)(v6 + 88) = 2;
      sub_100B13F18(v7, v8);
      swift_release();
    }
  }
  BOOL v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100B1ABBC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100B13F18(*(id *)(v0 + 80), *(unsigned char *)(v0 + 88));

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t _s4WordCMa()
{
  return self;
}

uint64_t _s4WordC8WordViewCMa()
{
  return self;
}

_UNKNOWN **sub_100B1AC78()
{
  return &off_1010CA410;
}

uint64_t sub_100B1AC84()
{
  swift_release();

  return swift_deallocObject();
}

void *sub_100B1AD34()
{
  return sub_100B187DC(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), v0 + 32);
}

uint64_t sub_100B1AD44()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100B1AD7C(uint64_t a1)
{
  sub_100B1885C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_100B1AD88()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100B1ADC0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B1AE00()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  BOOL v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *BOOL v4 = v1;
  v4[1] = sub_1000154F4;
  v4[12] = v3;
  v4[11] = v2;
  return _swift_task_switch(sub_100B1A748, 0, 0);
}

uint64_t sub_100B1AEBC()
{
  return swift_deallocObject();
}

uint64_t sub_100B1AEF8(double a1)
{
  *(void *)(v2 + 24) = v1;
  *(double *)(v2 + 16) = a1;
  type metadata accessor for MainActor();
  *(void *)(v2 + 32) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 40) = v4;
  *(void *)(v2 + 48) = v3;
  return _swift_task_switch(sub_100B1AF94, v4, v3);
}

uint64_t sub_100B1AF94()
{
  if (v0[2] <= 0.0)
  {
    uint64_t v4 = (void *)*((void *)v0 + 3);
    id v5 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:14.0 damping:7.0 initialVelocity:0.0];
    *((void *)v0 + 9) = v5;
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [self animationWithKeyPath:v6];
    *((void *)v0 + 10) = v7;

    id v8 = v7;
    [v5 settlingDuration];
    [v8 setDuration:];

    CASpringAnimation.springParameters.setter(v5);
    id v9 = v8;
    id v10 = [v4 layer];
    [v10 shadowOpacity];

    Class isa = Float._bridgeToObjectiveC()().super.super.isa;
    [v9 setFromValue:isa];

    id v12 = v9;
    Class v13 = Int._bridgeToObjectiveC()().super.super.isa;
    [v12 setToValue:v13];

    *((void *)v0 + 11) = [v4 layer];
    id v14 = [v12 keyPath];
    if (v14)
    {
      Class v15 = v14;
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v18 = 0;
    }
    *((void *)v0 + 12) = v18;
    id v19 = (void *)swift_task_alloc();
    *((void *)v0 + 13) = v19;
    *id v19 = v0;
    v19[1] = sub_100B1B618;
    return CALayer.addAsyncAnimation(_:forKey:)((uint64_t)v12, v16, v18);
  }
  else
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *((void *)v0 + 7) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_100B1B278;
    double v2 = v0[2];
    return static Task<>.sleep(for:)(v2);
  }
}

uint64_t sub_100B1B278()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    id v5 = sub_100B1B7E0;
  }
  else {
    id v5 = sub_100B1B3B4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100B1B3B4()
{
  uint64_t v1 = (void *)v0[3];
  id v2 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:14.0 damping:7.0 initialVelocity:0.0];
  v0[9] = v2;
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [self animationWithKeyPath:v3];
  v0[10] = v4;

  id v5 = v4;
  [v2 settlingDuration];
  [v5 setDuration:];

  CASpringAnimation.springParameters.setter(v2);
  id v6 = v5;
  id v7 = [v1 layer];
  [v7 shadowOpacity];

  Class isa = Float._bridgeToObjectiveC()().super.super.isa;
  [v6 setFromValue:isa];

  id v9 = v6;
  Class v10 = Int._bridgeToObjectiveC()().super.super.isa;
  [v9 setToValue:v10];

  v0[11] = [v1 layer];
  id v11 = [v9 keyPath];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  v0[12] = v15;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[13] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_100B1B618;
  return CALayer.addAsyncAnimation(_:forKey:)((uint64_t)v9, v13, v15);
}

uint64_t sub_100B1B618()
{
  uint64_t v1 = *v0;
  id v2 = *(void **)(*v0 + 88);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100B1B774, v4, v3);
}

uint64_t sub_100B1B774()
{
  uint64_t v1 = (void *)v0[9];
  id v2 = (void *)v0[10];
  swift_release();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100B1B7E0()
{
  swift_release();
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_100B1B84C()
{
  return sub_100B14D68(*(void **)(v0 + 16), *(CGFloat *)(v0 + 24), *(CGFloat *)(v0 + 32), *(CGFloat *)(v0 + 40), *(CGFloat *)(v0 + 48));
}

void sub_100B1B868()
{
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR___MusicSBS_TextContentView_textView);
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = (const void *)(v0 + OBJC_IVAR___MusicSBS_TextContentView_specs);
    memcpy(__dst, (const void *)(v0 + OBJC_IVAR___MusicSBS_TextContentView_specs), 0x219uLL);
    memcpy(v12, &v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
    memcpy(v10, &v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
    memmove(&v1[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], (const void *)(v0 + OBJC_IVAR___MusicSBS_TextContentView_specs), 0x219uLL);
    sub_100262548((uint64_t)__dst);
    sub_100262548((uint64_t)__dst);
    uint64_t v4 = v1;
    sub_100262548((uint64_t)v12);
    sub_1002622C8((uint64_t)v10);
    sub_100B1087C((uint64_t)v12);
    sub_1002622C8((uint64_t)__dst);
    sub_1002622C8((uint64_t)v12);

    uint64_t v5 = *(char **)(v2 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
    if (v5)
    {
      memcpy(v7, v3, 0x219uLL);
      memcpy(v11, &v5[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
      memcpy(v8, &v5[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], 0x219uLL);
      memmove(&v5[OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_specs], v3, 0x219uLL);
      sub_100262548((uint64_t)v7);
      sub_100262548((uint64_t)v7);
      uint64_t v6 = v5;
      sub_100262548((uint64_t)v11);
      sub_1002622C8((uint64_t)v8);
      sub_100B1087C((uint64_t)v11);
      sub_1002622C8((uint64_t)v7);
      sub_1002622C8((uint64_t)v11);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100B1B9F0(uint64_t result)
{
  uint64_t v2 = OBJC_IVAR___MusicSBS_TextContentView_isScrolling;
  int v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_isScrolling);
  *(unsigned char *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_isScrolling) = result;
  if (v3 != (result & 1))
  {
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (v4)
    {
      *(unsigned char *)(v4 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling) = result & 1;
      uint64_t v5 = *(void *)(v1 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (v5) {
        *(unsigned char *)(v5 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_isScrolling) = *(unsigned char *)(v1 + v2);
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100B1BA50(uint64_t result, char a2)
{
  char v3 = result & 1;
  if (*(unsigned char *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_isSelected) != (result & 1))
  {
    uint64_t v4 = v2;
    *(unsigned char *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_isSelected) = v3;
    uint64_t v5 = *(void **)(v2 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (v5)
    {
      char v7 = result;
      id v8 = v5;
      sub_100B10990(v7 & 1, a2 & 1);

      id v9 = *(void **)(v4 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (v9)
      {
        id v10 = v9;
        sub_100B10990(v7 & 1, a2 & 1);
      }
      uint64_t v11 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v11;
      *(unsigned char *)(v12 + 24) = v3;
      if (a2)
      {
        if (v7)
        {
          uint64_t v13 = [(objc_class *)objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:30.0 damping:9.0 initialVelocity:0.0];
        }
        else
        {
          sub_100057778(0, &qword_1010CA980);
          uint64_t v13 = (objc_class *)UISpringTimingParameters.init(dampingRatio:response:)(1.0, 0.2);
        }
        v15.super.Class isa = v13;
        sub_100057778(0, (unint64_t *)&qword_1010CAC50);
        Class isa = UIViewPropertyAnimator.init(springTimingParameters:)(v15).super.isa;
        v18[4] = sub_100B1D0F8;
        v18[5] = v12;
        v18[0] = _NSConcreteStackBlock;
        v18[1] = 1107296256;
        v18[2] = sub_100020238;
        v18[3] = &unk_10100C3C8;
        uint64_t v17 = _Block_copy(v18);
        swift_retain();
        swift_release();
        [(objc_class *)isa addAnimations:v17];
        _Block_release(v17);
        [(objc_class *)isa startAnimation];

        return swift_release();
      }
      else
      {
        uint64_t v14 = swift_retain();
        sub_100B1BCE0(v14, v7 & 1);
        swift_release();
        return swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_100B1BCE0(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    uint64_t v5 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
    uint64_t v6 = *(void **)(Strong + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
    if (v6)
    {
      if (a2)
      {
        long long v7 = xmmword_100E26B20;
        long long v8 = xmmword_100E26B30;
        long long v9 = 0uLL;
      }
      else
      {
        long long v8 = *(_OWORD *)&v4[OBJC_IVAR___MusicSBS_TextContentView_specs + 96];
        long long v7 = *(_OWORD *)&v4[OBJC_IVAR___MusicSBS_TextContentView_specs + 112];
        long long v9 = *(_OWORD *)&v4[OBJC_IVAR___MusicSBS_TextContentView_specs + 128];
      }
      v13[0] = v8;
      v13[1] = v7;
      v13[2] = v9;
      [v6 setTransform:v13];
      id v10 = *(void **)&v4[v5];
      if (v10)
      {
        if (a2) {
          double v11 = 1.0;
        }
        else {
          double v11 = 0.0;
        }
        id v12 = v10;
        [v12 setAlpha:v11];
      }
    }
  }
}

id sub_100B1BDD0(id result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  double v11 = *(void **)&v10[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (v11)
  {
    id v12 = v10;
    uint64_t v18 = (uint64_t)result;
    char v19 = a10 & 1;
    char v20 = a5 & 1;
    id v21 = v11;
    sub_100B11A50(v18, a2, a3, a4, v20, a6);

    *(void *)&v12[OBJC_IVAR___MusicSBS_TextContentView_alignment] = a4;
    v12[OBJC_IVAR___MusicSBS_TextContentView_direction] = v20;
    *(void *)&v12[OBJC_IVAR___MusicSBS_TextContentView_capabilities] = a6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v12[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection] = a10 & 1;
    uint64_t v22 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
    double v23 = *(void **)&v12[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
    if (v23)
    {
      if (a8)
      {
        id v24 = v23;
        sub_100B11A50(a7, a8, a9, a4, v19, a6);

LABEL_11:
        [v12 setNeedsLayout:a9];
        return [v12 layoutIfNeeded];
      }
      [v23 removeFromSuperview];
      uint64_t v31 = *(void **)&v12[v22];
    }
    else
    {
      if (a8)
      {
        double v25 = &v12[OBJC_IVAR___MusicSBS_TextContentView_specs];
        memcpy(__dst, &v12[OBJC_IVAR___MusicSBS_TextContentView_specs], 0x219uLL);
        id v26 = objc_allocWithZone((Class)_s8TextViewCMa());
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100262548((uint64_t)__dst);
        id v27 = sub_100B11BC4(a7, a8, a9, __dst, 1, a4, v19, a6);
        double v28 = sub_100B1CFFC(a4);
        UIView.setAnchorPoint(_:preserveFrame:)(1, v28, v29);
        [v27 setAlpha:0.0];
        long long v30 = v25[7];
        v33[0] = v25[6];
        v33[1] = v30;
        v33[2] = v25[8];
        [v27 setTransform:v33];
        [v12 addSubview:v27];
        uint64_t v31 = *(void **)&v12[v22];
        *(void *)&v12[v22] = v27;
LABEL_10:

        goto LABEL_11;
      }
      uint64_t v31 = 0;
    }
    *(void *)&v12[v22] = 0;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

char *sub_100B1C028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, _OWORD *a11)
{
  id v12 = v11;
  v11[OBJC_IVAR___MusicSBS_TextContentView_isScrolling] = 1;
  uint64_t v16 = (uint64_t *)&v11[OBJC_IVAR___MusicSBS_TextContentView_text];
  *uint64_t v16 = 0;
  v16[1] = 0;
  *(void *)&v11[OBJC_IVAR___MusicSBS_TextContentView_attributedText] = 0;
  v11[OBJC_IVAR___MusicSBS_TextContentView_isSelected] = 0;
  *(void *)&v11[OBJC_IVAR___MusicSBS_TextContentView_progress] = 0;
  uint64_t v49 = OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection;
  v11[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection] = 2;
  char v17 = a5 & 1;
  uint64_t v18 = OBJC_IVAR___MusicSBS_TextContentView_textView;
  *(void *)&v11[OBJC_IVAR___MusicSBS_TextContentView_textView] = 0;
  uint64_t v44 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
  *(void *)&v11[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView] = 0;
  *uint64_t v16 = a1;
  v16[1] = a2;
  char v19 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  memcpy(&v19[OBJC_IVAR___MusicSBS_TextContentView_specs], a11, 0x219uLL);
  *(void *)&v19[OBJC_IVAR___MusicSBS_TextContentView_alignment] = a4;
  v19[OBJC_IVAR___MusicSBS_TextContentView_direction] = v17;
  *(void *)&v19[OBJC_IVAR___MusicSBS_TextContentView_capabilities] = a6;
  char v20 = (objc_class *)_s8TextViewCMa();
  id v21 = objc_allocWithZone(v20);
  swift_bridgeObjectRetain();
  sub_100262548((uint64_t)a11);
  swift_bridgeObjectRetain();
  sub_100262548((uint64_t)a11);
  id v22 = sub_100B11BC4(a1, a2, a3, a11, 0, a4, v17, a6);
  double v23 = *(void **)&v11[v18];
  *(void *)&v11[v18] = v22;

  if (a8)
  {
    char v24 = a10;
    objc_allocWithZone(v20);
    sub_100262548((uint64_t)a11);
    id v25 = sub_100B11BC4(a7, a8, a9, a11, 1, a4, a10 & 1, a6);
    id v26 = *(void **)&v11[v44];
    *(void *)&v11[v44] = v25;

    id v27 = *(void **)&v11[v44];
    if (v27)
    {
      id v28 = v27;
      double v29 = sub_100B1CFFC(a4);
      UIView.setAnchorPoint(_:preserveFrame:)(1, v29, v30);

      uint64_t v31 = *(void **)&v12[v44];
      if (v31)
      {
        [v31 setAlpha:0.0];
        id v32 = *(void **)&v12[v44];
        if (v32)
        {
          long long v33 = a11[7];
          v50[0] = a11[6];
          v50[1] = v33;
          v50[2] = a11[8];
          [v32 setTransform:v50];
        }
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v24 = a10;
  }
  v12[v49] = v24;

  unint64_t v34 = (objc_class *)_s19SBS_TextContentViewCMa();
  v51.receiver = v19;
  v51.super_class = v34;
  uint64_t result = (char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v36 = OBJC_IVAR___MusicSBS_TextContentView_textView;
  uint64_t v37 = *(void *)&result[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (!v37)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  double v38 = result;
  double v39 = result;
  uint64_t result = (char *)[v39 addSubview:v37];
  double v40 = *(void **)&v39[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
  if (!v40)
  {
    sub_1002622C8((uint64_t)a11);
    goto LABEL_13;
  }
  double v41 = *(void **)&v38[v36];
  if (!v41) {
    goto LABEL_15;
  }
  id v42 = v40;
  [v41 frame];
  uint64_t result = *(char **)&v38[v36];
  if (result)
  {
    [result frame];
    [v42 frame];
    [v42 setFrame:];
    uint64_t v43 = v39;
    [v43 addSubview:v42];
    sub_1002622C8((uint64_t)a11);

LABEL_13:
    return v39;
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_100B1C3F0(char **a1@<X8>)
{
  uint64_t v2 = *(void *)&v1[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (v2)
  {
    char v3 = v1;
    uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text);
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text + 8);
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words);
    uint64_t v7 = *(void *)&v1[OBJC_IVAR___MusicSBS_TextContentView_capabilities];
    uint64_t v8 = *(void *)&v1[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
    uint64_t v25 = *(void *)&v1[OBJC_IVAR___MusicSBS_TextContentView_alignment];
    char v24 = v1[OBJC_IVAR___MusicSBS_TextContentView_direction];
    if (v8)
    {
      uint64_t v10 = *(void *)(v8 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text);
      uint64_t v9 = *(void *)(v8 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_text + 8);
      double v11 = *(void **)(v8 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_words);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v9 = 0;
      double v11 = _swiftEmptyArrayStorage;
    }
    char v12 = v1[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection];
    memcpy(__dst, &v1[OBJC_IVAR___MusicSBS_TextContentView_specs], 0x219uLL);
    id v22 = (objc_class *)_s19SBS_TextContentViewCMa();
    id v13 = objc_allocWithZone(v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100262548((uint64_t)__dst);
    uint64_t v14 = sub_100B1C028(v4, v5, v6, v25, v24, v7, v10, v9, (uint64_t)v11, v12, __dst);
    UISpringTimingParameters v15 = self;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v14;
    *(void *)(v16 + 24) = v3;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_100B1D144;
    *(void *)(v17 + 24) = v16;
    aBlock[4] = sub_10013DD14;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10007A61C;
    aBlock[3] = &unk_10100C440;
    uint64_t v18 = _Block_copy(aBlock);
    char v19 = v14;
    id v20 = v3;
    swift_retain();
    swift_release();
    [v15 performWithoutAnimation:v18];
    _Block_release(v18);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      a1[3] = (char *)v22;
      swift_release();
      *a1 = v19;
      return;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_100B1C6AC(char *a1, unsigned __int8 *a2)
{
  [a2 bounds];
  [a1 setFrame:];
  [a1 layoutIfNeeded];
  sub_100B1BA50(a2[OBJC_IVAR___MusicSBS_TextContentView_isSelected], 0);
  double v4 = *(double *)&a2[OBJC_IVAR___MusicSBS_TextContentView_progress];
  if (v4 != *(double *)&a1[OBJC_IVAR___MusicSBS_TextContentView_progress])
  {
    *(double *)&a1[OBJC_IVAR___MusicSBS_TextContentView_progress] = v4;
    uint64_t v5 = *(void **)&a1[OBJC_IVAR___MusicSBS_TextContentView_textView];
    if (v5)
    {
      id v6 = v5;
      sub_100B114EC(0, v4);

      uint64_t v7 = *(void **)&a1[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
      if (v7)
      {
        id v8 = v7;
        sub_100B114EC(0, v4);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100B1C830(char a1, double a2, double a3)
{
  id result = *(id *)(v3 + OBJC_IVAR___MusicSBS_TextContentView_textView);
  if (result)
  {
    id result = [result sizeThatFits:];
    if (a1)
    {
      id result = *(id *)(v3 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (result) {
        return [result sizeThatFits:a2, a3];
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100B1C8D8(double a1, double a2)
{
  id result = *(id *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_textView);
  if (result)
  {
    int v6 = *(unsigned __int8 *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_isSelected);
    id result = [result sizeThatFits:];
    if (v6 == 1)
    {
      id result = *(id *)(v2 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
      if (result) {
        return [result sizeThatFits:a1, a2];
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100B1C9E0()
{
  uint64_t v1 = v0;
  v71.receiver = v0;
  v71.super_class = (Class)_s19SBS_TextContentViewCMa();
  [super layoutSubviews];
  uint64_t v2 = OBJC_IVAR___MusicSBS_TextContentView_textView;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR___MusicSBS_TextContentView_textView];
  if (!v3)
  {
    __break(1u);
    goto LABEL_34;
  }
  id v4 = v3;
  [v1 bounds];
  [v4 sizeThatFits:v5, v6];
  [v4 frame];
  [v4 setFrame:];

  uint64_t v7 = *(void **)&v1[v2];
  if (!v7)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  [v7 layoutSubviews];
  uint64_t v8 = OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView;
  uint64_t v9 = *(void **)&v1[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView];
  if (v9)
  {
    id v10 = v9;
    [v1 bounds];
    [v10 sizeThatFits:v11, v12];
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    double v17 = UIView.untransformedFrame.getter();
    UIView.untransformedFrame.setter(v17, v18, v14, v16);

    char v19 = *(void **)&v1[v8];
    if (v19)
    {
      id v20 = v19;
      UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(0.0, v21, v22, v23);

      char v24 = *(void **)&v1[v8];
      if (v24)
      {
        uint64_t v25 = *(void **)&v1[v2];
        if (v25)
        {
          id v26 = v24;
          id v27 = v25;
          UIView.untransformedFrame.getter();
          double v29 = v28;

          double v30 = *(void **)&v1[v2];
          if (v30)
          {
            id v31 = v30;
            UIView.untransformedFrame.getter();
            double v33 = v32;

            CGFloat v34 = v29 + v33 + *(double *)&v1[OBJC_IVAR___MusicSBS_TextContentView_specs + 88];
            double v35 = UIView.untransformedFrame.getter();
            UIView.untransformedFrame.setter(v35, v34, v36, v37);

            double v38 = *(void **)&v1[v8];
            goto LABEL_10;
          }
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
    }
  }
  double v38 = 0;
LABEL_10:
  [v38 layoutSubviews];
  uint64_t v39 = *(void *)&v1[OBJC_IVAR___MusicSBS_TextContentView_alignment];
  if (!v39)
  {
    objc_super v52 = *(void **)&v1[v2];
    if (v52)
    {
      id v53 = v52;
      [v53 frame];
      [v53 setFrame:0.0];

      double v54 = *(void **)&v1[v8];
      if (!v54) {
        return;
      }
      id v48 = v54;
      UIView.untransformedFrame.getter();
      CGFloat v58 = 0.0;
      goto LABEL_31;
    }
    goto LABEL_39;
  }
  if (v39 == 1)
  {
    uint64_t v59 = *(void **)&v1[v2];
    if (v59)
    {
      id v60 = v59;
      [v1 bounds];
      double Width = CGRectGetWidth(v74);
      uint64_t v62 = *(void **)&v1[v2];
      if (v62)
      {
        double v63 = Width;
        [v62 bounds];
        double v65 = (v63 - v64) * 0.5;
        [v60 frame];
        [v60 setFrame:v65];

        uint64_t v66 = *(void **)&v1[v8];
        if (!v66) {
          return;
        }
        id v48 = v66;
        [v1 bounds];
        double v67 = CGRectGetWidth(v75);
        uint64_t v68 = *(void **)&v1[v8];
        if (v68) {
          [v68 bounds];
        }
        else {
          double v69 = 0.0;
        }
        double v70 = (v67 - v69) * 0.5;
        goto LABEL_30;
      }
LABEL_41:
      __break(1u);
      return;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v39 != 2) {
    return;
  }
  double v40 = *(void **)&v1[v2];
  if (!v40) {
    goto LABEL_37;
  }
  id v41 = v40;
  [v1 bounds];
  double v42 = CGRectGetWidth(v72);
  uint64_t v43 = *(void **)&v1[v2];
  if (!v43)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  double v44 = v42;
  [v43 bounds];
  double v46 = v44 - v45;
  [v41 frame];
  [v41 setFrame:v46];

  id v47 = *(void **)&v1[v8];
  if (!v47) {
    return;
  }
  id v48 = v47;
  [v1 bounds];
  double v49 = CGRectGetWidth(v73);
  uint64_t v50 = *(void **)&v1[v8];
  if (v50) {
    [v50 bounds];
  }
  else {
    double v51 = 0.0;
  }
  double v70 = v49 - v51;
LABEL_30:
  UIView.untransformedFrame.getter();
  CGFloat v58 = v70;
LABEL_31:
  UIView.untransformedFrame.setter(v58, v55, v56, v57);
}

id sub_100B1CE20()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s19SBS_TextContentViewCMa();
  return [super dealloc];
}

uint64_t _s19SBS_TextContentViewCMa()
{
  return self;
}

uint64_t sub_100B1CF14(const void *a1)
{
  uint64_t v3 = (void *)(*v1 + OBJC_IVAR___MusicSBS_TextContentView_specs);
  memcpy(v5, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  sub_100262548((uint64_t)a1);
  sub_1002622C8((uint64_t)v5);
  sub_100B1B868();
  return sub_1002622C8((uint64_t)a1);
}

uint64_t sub_100B1CF90(uint64_t a1)
{
  return sub_100B1B9F0(a1);
}

uint64_t sub_100B1CFB4(uint64_t a1, char a2)
{
  return sub_100B1BA50(a1, a2);
}

id sub_100B1CFD8(char a1, double a2, double a3)
{
  return sub_100B1C830(a1, a2, a3);
}

double sub_100B1CFFC(uint64_t a1)
{
  switch(a1)
  {
    case 1:
    case 3:
      uint64_t v1 = CGPoint.center.unsafeMutableAddressor();
      break;
    case 2:
      uint64_t v1 = CGPoint.centerRight.unsafeMutableAddressor();
      break;
    default:
      uint64_t v1 = CGPoint.centerLeft.unsafeMutableAddressor();
      break;
  }
  objc_super v2 = v1;
  swift_beginAccess();
  return *(double *)v2;
}

uint64_t sub_100B1D088()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100B1D0C0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100B1D0F8()
{
  sub_100B1BCE0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100B1D104()
{
  return swift_deallocObject();
}

void sub_100B1D144()
{
  sub_100B1C6AC(*(char **)(v0 + 16), *(unsigned __int8 **)(v0 + 24));
}

uint64_t sub_100B1D14C()
{
  return swift_deallocObject();
}

void sub_100B1D15C()
{
  v0[OBJC_IVAR___MusicSBS_TextContentView_isScrolling] = 1;
  uint64_t v1 = &v0[OBJC_IVAR___MusicSBS_TextContentView_text];
  *uint64_t v1 = 0;
  v1[1] = 0;
  *(void *)&v0[OBJC_IVAR___MusicSBS_TextContentView_attributedText] = 0;
  v0[OBJC_IVAR___MusicSBS_TextContentView_isSelected] = 0;
  *(void *)&v0[OBJC_IVAR___MusicSBS_TextContentView_progress] = 0;
  v0[OBJC_IVAR___MusicSBS_TextContentView_backgroundDirection] = 2;
  *(void *)&v0[OBJC_IVAR___MusicSBS_TextContentView_textView] = 0;
  *(void *)&v0[OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100B1D230()
{
  qword_10112C2B0 = Int.seconds.getter(6);
}

void sub_100B1D254()
{
  qword_10112C2B8 = Int.seconds.getter(8);
}

void sub_100B1D278()
{
  qword_10112C2C0 = UIScreen.Dimensions.size.getter(0.1);
}

CGFloat sub_100B1D2A0(uint64_t a1)
{
  return sub_100B1D318(0.9, a1, &xmmword_10112C2D0, &xmmword_10112C2E0, &xmmword_10112C2F0);
}

CGFloat sub_100B1D2BC(uint64_t a1)
{
  return sub_100B1D318(1.2, a1, &xmmword_10112C300, algn_10112C310, &xmmword_10112C320);
}

CGFloat sub_100B1D2DC(uint64_t a1)
{
  return sub_100B1D318(1.2, a1, &xmmword_10112C330, &xmmword_10112C340, &xmmword_10112C350);
}

CGFloat sub_100B1D2FC(uint64_t a1)
{
  return sub_100B1D318(0.2, a1, &xmmword_10112C360, algn_10112C370, &xmmword_10112C380);
}

CGFloat sub_100B1D318(CGFloat a1, uint64_t a2, _OWORD *a3, _OWORD *a4, _OWORD *a5)
{
  CGAffineTransformMakeScale(&v11, a1, a1);
  CGFloat result = v11.a;
  long long v9 = *(_OWORD *)&v11.c;
  long long v10 = *(_OWORD *)&v11.tx;
  *a3 = *(_OWORD *)&v11.a;
  *a4 = v9;
  *a5 = v10;
  return result;
}

id sub_100B1D370(uint64_t a1, char a2, void *__src, double a4, double a5)
{
  v5[OBJC_IVAR___MusicInstrumentalContentView_isScrolling] = 0;
  *(void *)&v5[OBJC_IVAR___MusicInstrumentalContentView_alignment] = 0;
  double v6 = &v5[OBJC_IVAR___MusicInstrumentalContentView_lastSeenBounds];
  *double v6 = 0u;
  v6[1] = 0u;
  v5[OBJC_IVAR___MusicInstrumentalContentView_isSelected] = 0;
  *(void *)&v5[OBJC_IVAR___MusicInstrumentalContentView_dots] = _swiftEmptyArrayStorage;
  v5[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] = 0;
  *(void *)&v5[OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration] = 0;
  uint64_t v7 = &v5[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn];
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  *(void *)&v5[OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted] = 0;
  *(void *)&v5[OBJC_IVAR___MusicInstrumentalContentView_breathDuration] = 0;
  *(void *)&v5[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted] = 0;
  uint64_t v8 = (double *)&v5[OBJC_IVAR___MusicInstrumentalContentView_line];
  *(void *)uint64_t v8 = a1;
  v8[1] = a4;
  v8[2] = a5;
  *((unsigned char *)v8 + 24) = a2 & 1;
  memcpy(&v5[OBJC_IVAR___MusicInstrumentalContentView_specs], __src, 0x219uLL);
  v10.receiver = v5;
  v10.super_class = (Class)_s23InstrumentalContentViewCMa();
  return [super initWithFrame:0.0, 0.0, 0.0, 0.0];
}

uint64_t sub_100B1D57C()
{
  double v1 = *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_line + 8);
  double v2 = *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_line + 16) + -1.8;
  *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_breathDuration) = (v2 - v1) / floor((v2 - v1) * 0.25) * 0.5;
  *(double *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration) = (v2 - (v1 + 1.0))
                                                                               / (double)*(uint64_t *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_specs + 488);
  *(void *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted) = 0;
  *(void *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted) = 0;
  uint64_t v3 = v0 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn;
  *(void *)uint64_t v3 = 0;
  *(unsigned char *)(v3 + 8) = 1;
  *(unsigned char *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued) = 0;
  id v4 = (unint64_t *)(v0 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess();
  unint64_t v5 = *v4;
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v6 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(v5 + 8 * v8 + 32);
      }
      objc_super v10 = v9;
      ++v8;
      id v11 = [v9 layer];
      [v11 removeAllAnimations];

      [v10 setAlpha:0.0];
      v12[1] = 0;
      v12[2] = 0;
      v12[0] = 0x3FF0000000000000;
      v12[3] = 0x3FF0000000000000;
      void v12[4] = 0;
      v12[5] = 0;
      [v10 setTransform:v12];
    }
    while (v6 != v8);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_100B1D798(char a1, char a2)
{
  v2[OBJC_IVAR___MusicInstrumentalContentView_isSelected] = a1;
  if ((a1 & 1) == 0)
  {
    if (a2)
    {
      id v3 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:0 controlPoint1:0.12 controlPoint2:0.33 animations:0.0, 0.2, 0.1];
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v2;
      v7[4] = sub_100B1F6FC;
      v7[5] = v4;
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 1107296256;
      v7[2] = sub_100020238;
      v7[3] = &unk_10100C778;
      unint64_t v5 = _Block_copy(v7);
      uint64_t v6 = v2;
      swift_release();
      [v3 addAnimations:v5];
      _Block_release(v5);
      [v3 startAnimation];
    }
    else
    {
      sub_100B1D57C();
    }
  }
}

void sub_100B1D8FC(double a1)
{
  double v2 = &v1[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn];
  if (v1[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn + 8] == 1)
  {
    uint64_t v4 = &v1[OBJC_IVAR___MusicInstrumentalContentView_dots];
    swift_beginAccess();
    unint64_t v5 = *(void *)v4;
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v26)
      {
LABEL_5:
        uint64_t v6 = 0;
        *(void *)double v2 = 0;
        v2[8] = 0;
        double v7 = *(double *)&v1[OBJC_IVAR___MusicInstrumentalContentView_line + 8] + 1.0;
        if (v7 <= a1)
        {
          double v8 = (a1 - v7) / *(double *)&v1[OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration];
          if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
          {
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
          if (v8 <= -9.22337204e18)
          {
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
          if (v8 >= 9.22337204e18)
          {
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
          if (__OFADD__((uint64_t)v8, 1))
          {
LABEL_27:
            __break(1u);
            return;
          }
          if ((uint64_t)v8 + 1 >= 3) {
            uint64_t v6 = 3;
          }
          else {
            uint64_t v6 = (uint64_t)v8 + 1;
          }
        }
        uint64_t v9 = *(void *)&v1[OBJC_IVAR___MusicInstrumentalContentView_specs + 488];
        if (v9 < 0)
        {
          __break(1u);
        }
        else
        {
          if (v9)
          {
            for (uint64_t i = 0; i != v9; ++i)
            {
              id v11 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:3 curve:0 animations:0.8];
              double v12 = (void *)swift_allocObject();
              v12[2] = v6;
              v12[3] = i;
              void v12[4] = v1;
              id v31 = sub_100B1F6A8;
              double v32 = v12;
              uint64_t aBlock = _NSConcreteStackBlock;
              uint64_t v28 = 1107296256;
              double v29 = sub_100020238;
              double v30 = &unk_10100C688;
              double v13 = _Block_copy(&aBlock);
              CGFloat v14 = v1;
              swift_release();
              [v11 addAnimations:v13];
              _Block_release(v13);
              uint64_t v15 = swift_allocObject();
              *(void *)(v15 + 16) = v14;
              *(void *)(v15 + 24) = i;
              id v31 = sub_100B1F6B4;
              double v32 = (void *)v15;
              uint64_t aBlock = _NSConcreteStackBlock;
              uint64_t v28 = 1107296256;
              double v29 = sub_1002DE0E4;
              double v30 = &unk_10100C6D8;
              CGFloat v16 = _Block_copy(&aBlock);
              double v17 = v14;
              swift_release();
              [v11 addCompletion:v16];
              _Block_release(v16);
              [v11 startAnimationAfterDelay:(double)i * 0.06];
            }
          }
          CGFloat v18 = self;
          double v19 = *(double *)&v1[OBJC_IVAR___MusicInstrumentalContentView_breathDuration] + -0.4;
          uint64_t v20 = swift_allocObject();
          *(void *)(v20 + 16) = v1;
          id v31 = sub_100B1F6F4;
          double v32 = (void *)v20;
          uint64_t aBlock = _NSConcreteStackBlock;
          uint64_t v28 = 1107296256;
          double v29 = sub_100020238;
          double v30 = &unk_10100C728;
          CGFloat v21 = _Block_copy(&aBlock);
          CGFloat v22 = v1;
          swift_release();
          [v18 animateWithDuration:0x20000 delay:v21 options:0 animations:v19 completion:0.2];
          _Block_release(v21);
          uint64_t v23 = *(void *)&v22[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted];
          BOOL v24 = __OFADD__(v23, 1);
          uint64_t v25 = v23 + 1;
          if (!v24)
          {
            *(void *)&v22[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted] = v25;
            return;
          }
        }
        __break(1u);
        goto LABEL_24;
      }
    }
    else if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_5;
    }
    sub_100B1F190();
    goto LABEL_5;
  }
}

void sub_100B1DD5C(int64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t v3 = a2;
  uint64_t v4 = (uint64_t *)(a3 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  if (a2 >= a1)
  {
    swift_beginAccess();
    uint64_t v6 = *v4;
    if ((v6 & 0xC000000000000001) == 0)
    {
      if ((v3 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) > v3)
      {
        unint64_t v3 = (unint64_t)*(id *)(v6 + 8 * v3 + 32);
        goto LABEL_11;
      }
      __break(1u);
      goto LABEL_20;
    }
LABEL_17:
    swift_bridgeObjectRetain();
    unint64_t v3 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
LABEL_11:
    if (qword_1010C8530 == -1)
    {
LABEL_12:
      [(id)v3 setAlpha:*(double *)&qword_10112C2C0];
      goto LABEL_13;
    }
LABEL_20:
    swift_once();
    goto LABEL_12;
  }
  swift_beginAccess();
  uint64_t v5 = *v4;
  if ((v5 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v3 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v3)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v3 = (unint64_t)*(id *)(v5 + 8 * v3 + 32);
LABEL_6:
  [(id)v3 setAlpha:1.0];
LABEL_13:
}

uint64_t sub_100B1DED4(uint64_t a1)
{
  double v1 = (unint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v2 + 8 * v5 + 32);
      }
      double v7 = v6;
      if (qword_1010C8540 != -1) {
        swift_once();
      }
      ++v5;
      v8[0] = xmmword_10112C300;
      v8[1] = *(_OWORD *)algn_10112C310;
      v8[2] = xmmword_10112C320;
      [v7 setTransform:v8];
    }
    while (v3 != v5);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_100B1E030(double a1)
{
  uint64_t v4 = (double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_line);
  double v5 = *(double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_line + 8);
  uint64_t v6 = OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration;
  double v7 = (a1 - (v5 + 1.0)) / *(double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration);
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_61;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (__OFADD__((uint64_t)v7, 1))
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  uint64_t v8 = *(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_specs + 488);
  if ((uint64_t)v7 + 1 >= v8) {
    uint64_t v9 = *(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_specs + 488);
  }
  else {
    uint64_t v9 = (uint64_t)v7 + 1;
  }
  uint64_t v10 = OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted;
  uint64_t v11 = *(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted);
  if (v9 < v11)
  {
    sub_100B1D57C();
    double v12 = (unint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_dots);
    swift_beginAccess();
    unint64_t v1 = *v12;
    double v45 = v2;
    if (!(v1 >> 62))
    {
      uint64_t v13 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13)
      {
LABEL_11:
        if (v13 >= 1)
        {
          uint64_t v14 = 0;
          do
          {
            if ((v1 & 0xC000000000000001) != 0) {
              id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v15 = *(id *)(v1 + 8 * v14 + 32);
            }
            CGFloat v16 = v15;
            id v17 = [v15 layer];
            [v17 removeAllAnimations];

            if (qword_1010C8530 != -1) {
              swift_once();
            }
            ++v14;
            [v16 setAlpha:*(double *)&qword_10112C2C0];
            uint64_t v47 = 0;
            id v48 = 0;
            uint64_t aBlock = 0x3FF0000000000000;
            uint64_t v49 = 0x3FF0000000000000;
            uint64_t v50 = 0;
            uint64_t v51 = 0;
            [v16 setTransform:&aBlock];
          }
          while (v13 != v14);
          goto LABEL_65;
        }
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        __break(1u);
        do
        {
          __break(1u);
LABEL_75:
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          swift_bridgeObjectRetain();
          id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_bridgeObjectRelease();
LABEL_36:
          double v23 = *(double *)((char *)v2 + v6) + -0.1;
          uint64_t v24 = swift_allocObject();
          *(void *)(v24 + 16) = v22;
          id v25 = objc_allocWithZone((Class)UIViewPropertyAnimator);
          uint64_t v50 = sub_1004B4560;
          uint64_t v51 = v24;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v47 = 1107296256;
          id v48 = sub_100020238;
          uint64_t v49 = (uint64_t)&unk_10100C638;
          uint64_t v26 = _Block_copy(&aBlock);
          id v27 = v22;
          unint64_t v2 = v45;
          swift_release();
          id v28 = [v25 initWithDuration:3 curve:v26 animations:v23];
          _Block_release(v26);
          [v28 startAnimation];

          double v5 = v4[1];
LABEL_37:
          double v29 = *(double *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_breathDuration);
          double v30 = (a1 - v5) / v29;
          if ((~*(void *)&v30 & 0x7FF0000000000000) == 0) {
            goto LABEL_70;
          }
          if (v30 <= -9.22337204e18) {
            goto LABEL_71;
          }
          if (v30 >= 9.22337204e18) {
            goto LABEL_72;
          }
          uint64_t v31 = (uint64_t)v30 + 1;
          if (__OFADD__((uint64_t)v30, 1)) {
            goto LABEL_73;
          }
          uint64_t v32 = OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted;
          if (*(uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted) >= v31) {
            goto LABEL_44;
          }
          double v33 = self;
          uint64_t v34 = swift_allocObject();
          *(void *)(v34 + 16) = v2;
          *(void *)(v34 + 24) = v31;
          uint64_t v50 = sub_100B1F668;
          uint64_t v51 = v34;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v47 = 1107296256;
          id v48 = sub_100020238;
          uint64_t v49 = (uint64_t)&unk_10100C5E8;
          double v35 = _Block_copy(&aBlock);
          CGFloat v36 = v2;
          swift_release();
          [v33 animateWithDuration:0x20000 delay:v35 options:0 animations:v29 + -0.4 completion:0.2];
          _Block_release(v35);
          uint64_t v37 = *(uint64_t *)((char *)v2 + v32);
          BOOL v38 = __OFADD__(v37, 1);
          uint64_t v39 = (char *)(v37 + 1);
        }
        while (v38);
        *(char **)((char *)v2 + v32) = v39;
        goto LABEL_44;
      }
LABEL_65:
      swift_bridgeObjectRelease();
      sub_100B1D8FC(a1);
      return;
    }
LABEL_64:
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    if (v13) {
      goto LABEL_11;
    }
    goto LABEL_65;
  }
  if ((*((unsigned char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn + 8) & 1) != 0
    || (v5 + 1.0 < a1
      ? (BOOL v18 = *(char **)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn) == (char *)v8)
      : (BOOL v18 = 0),
        !v18 || v4[2] + -1.8 <= a1))
  {
LABEL_44:
    double v40 = v4[2];
    BOOL v41 = v40 > a1 && v40 + -1.8 < a1;
    if (v41 && (*((unsigned char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued) & 1) == 0) {
      sub_100B1E894();
    }
    return;
  }
  if (v9 == v11 || *((unsigned char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_isSelected) != 1) {
    goto LABEL_37;
  }
  uint64_t v19 = v9 - 1;
  if (__OFSUB__(v9, 1)) {
    goto LABEL_75;
  }
  double v45 = v2;
  if (v19 < v11) {
    goto LABEL_76;
  }
  if (v11 == v19)
  {
LABEL_32:
    unint64_t v2 = v45;
    *(char **)((char *)v45 + v10) = (char *)v9;
    uint64_t v20 = (uint64_t *)((char *)v45 + OBJC_IVAR___MusicInstrumentalContentView_dots);
    swift_beginAccess();
    uint64_t v21 = *v20;
    if ((*v20 & 0xC000000000000001) != 0) {
      goto LABEL_77;
    }
    if (v19 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v19 < *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v22 = *(id *)(v21 + 8 * v19 + 32);
      goto LABEL_36;
    }
    __break(1u);
  }
  else if (v11 < v19)
  {
    double v42 = (uint64_t *)((char *)v2 + OBJC_IVAR___MusicInstrumentalContentView_dots);
    swift_beginAccess();
    unint64_t v2 = &selRef_initWithActivityIndicatorStyle_;
    while (1)
    {
      uint64_t v43 = *v42;
      if ((*v42 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v11 < 0) {
          goto LABEL_68;
        }
        if ((unint64_t)v11 >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_69;
        }
        id v44 = *(id *)(v43 + 8 * v11 + 32);
      }
      ++v11;
      [v44 setAlpha:1.0];

      if (v19 == v11) {
        goto LABEL_32;
      }
    }
  }
  __break(1u);
}

uint64_t sub_100B1E6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (unint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess();
  unint64_t v4 = *v3;
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v5 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v10 = v9;
      if ((a2 & 0x8000000000000001) == 1)
      {
        if (qword_1010C8540 != -1) {
          swift_once();
        }
        long long v11 = xmmword_10112C300;
        long long v12 = *(_OWORD *)algn_10112C310;
        long long v8 = xmmword_10112C320;
      }
      else
      {
        if (qword_1010C8538 != -1) {
          swift_once();
        }
        long long v11 = xmmword_10112C2D0;
        long long v12 = xmmword_10112C2E0;
        long long v8 = xmmword_10112C2F0;
      }
      long long v13 = v8;
      [v10 setTransform:&v11];
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_100B1E894()
{
  if ((v0[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] & 1) == 0)
  {
    v0[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] = 1;
    id v1 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:0 controlPoint1:1.0 controlPoint2:0.25 0.1 animations:1.0];
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v0;
    id v17 = sub_100B1F618;
    uint64_t v18 = v2;
    long long v13 = _NSConcreteStackBlock;
    uint64_t v14 = 1107296256;
    id v15 = sub_100020238;
    CGFloat v16 = &unk_10100C4F8;
    uint64_t v3 = _Block_copy(&v13);
    unint64_t v4 = v0;
    swift_release();
    [v1 addAnimations:v3];
    _Block_release(v3);
    [v1 startAnimation];
    id v5 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:1 curve:0 animations:0.3];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    id v17 = sub_100B1F620;
    uint64_t v18 = v6;
    long long v13 = _NSConcreteStackBlock;
    uint64_t v14 = 1107296256;
    id v15 = sub_100020238;
    CGFloat v16 = &unk_10100C548;
    double v7 = _Block_copy(&v13);
    long long v8 = v4;
    swift_release();
    [v5 addAnimations:v7];
    _Block_release(v7);
    [v5 startAnimationAfterDelay:1.0];
    id v9 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:1 curve:0 animations:0.5];
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v8;
    id v17 = sub_100B1F628;
    uint64_t v18 = v10;
    long long v13 = _NSConcreteStackBlock;
    uint64_t v14 = 1107296256;
    id v15 = sub_100020238;
    CGFloat v16 = &unk_10100C598;
    long long v11 = _Block_copy(&v13);
    long long v12 = v8;
    swift_release();
    [v9 addAnimations:v11];
    _Block_release(v11);
    [v9 startAnimationAfterDelay:1.0];
  }
}

uint64_t sub_100B1EB9C(uint64_t a1)
{
  id v1 = (unint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v2 + 8 * v5 + 32);
      }
      double v7 = v6;
      if (qword_1010C8548 != -1) {
        swift_once();
      }
      ++v5;
      v8[0] = xmmword_10112C330;
      v8[1] = xmmword_10112C340;
      v8[2] = xmmword_10112C350;
      [v7 setTransform:v8];
    }
    while (v3 != v5);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100B1ECF8(uint64_t a1)
{
  id v1 = (unint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v2 + 8 * i + 32);
      }
      double v7 = v6;
      [v6 setAlpha:0.0];
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100B1EDF4(uint64_t a1)
{
  id v1 = (unint64_t *)(a1 + OBJC_IVAR___MusicInstrumentalContentView_dots);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v2 + 8 * v5 + 32);
      }
      double v7 = v6;
      if (qword_1010C8550 != -1) {
        swift_once();
      }
      ++v5;
      v8[0] = xmmword_10112C360;
      v8[1] = *(_OWORD *)algn_10112C370;
      v8[2] = xmmword_10112C380;
      [v7 setTransform:v8];
    }
    while (v3 != v5);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_100B1EF50()
{
  id v1 = &v0[OBJC_IVAR___MusicInstrumentalContentView_specs];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR___MusicInstrumentalContentView_specs + 488];
  if (v2 < 0)
  {
LABEL_16:
    __break(1u);
  }
  else if (v2)
  {
    uint64_t v3 = v0;
    uint64_t v4 = 0;
    uint64_t v5 = &v0[OBJC_IVAR___MusicInstrumentalContentView_dots];
    do
    {
      id v6 = [objc_allocWithZone((Class)UIView) init];
      double v7 = v6;
      double v8 = 1.3;
      if (!v4) {
        goto LABEL_7;
      }
      uint64_t v9 = *((void *)v1 + 61);
      BOOL v10 = __OFSUB__(v9, 1);
      uint64_t v11 = v9 - 1;
      if (v10)
      {
        __break(1u);
        goto LABEL_16;
      }
      double v8 = -1.3;
      if (v4 == v11)
      {
LABEL_7:
        id v12 = [v6 layer];
        [v12 anchorPoint];
        [v12 setAnchorPoint:v13 + v8];
      }
      [v7 setBackgroundColor:*((void *)v1 + 29)];
      [v7 setAlpha:0.0];
      [v7 setAutoresizingMask:40];
      id v14 = [v7 layer];
      if (qword_1010C8520 != -1) {
        swift_once();
      }
      [v14 setCornerRadius:*(double *)&qword_10112C2B0];

      swift_beginAccess();
      id v15 = v7;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v5 & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      ++v4;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      [v3 addSubview:v15];
    }
    while (v2 != v4);
  }
}

uint64_t sub_100B1F190()
{
  id v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR___MusicInstrumentalContentView_dots];
  swift_beginAccess();
  if (!(*(void *)v2 >> 62))
  {
    if (*(void *)((*(void *)v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v19) {
LABEL_3:
  }
    sub_100B1EF50();
LABEL_4:
  double v3 = (double)*(uint64_t *)&v0[OBJC_IVAR___MusicInstrumentalContentView_specs + 488];
  if (qword_1010C8520 != -1) {
    swift_once();
  }
  double v4 = *(double *)&qword_10112C2B0 + *(double *)&qword_10112C2B0;
  double v5 = (*(double *)&qword_10112C2B0 + *(double *)&qword_10112C2B0) * v3;
  double v6 = v3 + -1.0;
  if (qword_1010C8528 != -1) {
    swift_once();
  }
  double v7 = v5 + v6 * *(double *)&qword_10112C2B8;
  double v8 = Int.seconds.getter(0);
  uint64_t v9 = *(void *)&v0[OBJC_IVAR___MusicInstrumentalContentView_alignment];
  if (v9 == 1)
  {
    [v0 bounds];
    double v10 = (CGRectGetWidth(v21) - v7) * 0.5;
  }
  else
  {
    double v10 = v8;
    if (v9 == 2)
    {
      [v0 bounds];
      double v10 = CGRectGetWidth(v20) - v7;
    }
  }
  unint64_t v11 = *(void *)v2;
  if (!(v11 >> 62))
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_14;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v12 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_14:
  if (v12 >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      if ((v11 & 0xC000000000000001) != 0) {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v15 = *(id *)(v11 + 8 * v14 + 32);
      }
      CGFloat v16 = v15;
      ++v14;
      [v1 bounds];
      UIView.untransformedFrame.setter(v10, v17 * 0.5 - v4 * 0.5, v4, v4);
      double v18 = *(double *)&qword_10112C2B8;

      double v10 = v10 + v4 + v18;
    }
    while (v12 != v14);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id sub_100B1F45C()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s23InstrumentalContentViewCMa();
  return [super dealloc];
}

uint64_t _s23InstrumentalContentViewCMa()
{
  return self;
}

uint64_t sub_100B1F50C(const void *a1)
{
  double v3 = (void *)(*v1 + OBJC_IVAR___MusicInstrumentalContentView_specs);
  memcpy(v5, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  return sub_1002622C8((uint64_t)v5);
}

uint64_t sub_100B1F574(uint64_t result)
{
  *(unsigned char *)(*v1 + OBJC_IVAR___MusicInstrumentalContentView_isScrolling) = result;
  return result;
}

uint64_t sub_100B1F588()
{
  return sub_100B1D57C();
}

void sub_100B1F5AC(char a1, char a2)
{
}

id sub_100B1F5D0()
{
  return [*v0 sizeThatFits:];
}

uint64_t sub_100B1F5E0()
{
  return swift_deallocObject();
}

uint64_t sub_100B1F618()
{
  return sub_100B1EB9C(*(void *)(v0 + 16));
}

uint64_t sub_100B1F620()
{
  return sub_100B1ECF8(*(void *)(v0 + 16));
}

uint64_t sub_100B1F628()
{
  return sub_100B1EDF4(*(void *)(v0 + 16));
}

uint64_t sub_100B1F630()
{
  return swift_deallocObject();
}

uint64_t sub_100B1F668()
{
  return sub_100B1E6E0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100B1F670()
{
  return swift_deallocObject();
}

void sub_100B1F6A8()
{
  sub_100B1DD5C(v0[2], v0[3], v0[4]);
}

void sub_100B1F6B4()
{
  uint64_t v1 = *(void *)(v0 + 16) + OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn;
  if ((*(unsigned char *)(v1 + 8) & 1) == 0)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    if (*(void *)v1 <= v2)
    {
      BOOL v3 = __OFADD__(v2, 1);
      uint64_t v4 = v2 + 1;
      if (v3)
      {
        __break(1u);
      }
      else
      {
        *(void *)uint64_t v1 = v4;
        *(unsigned char *)(v1 + 8) = 0;
      }
    }
  }
}

uint64_t sub_100B1F6F4()
{
  return sub_100B1DED4(*(void *)(v0 + 16));
}

uint64_t sub_100B1F6FC()
{
  return sub_100B1D57C();
}

void sub_100B1F720()
{
  v0[OBJC_IVAR___MusicInstrumentalContentView_isScrolling] = 0;
  *(void *)&v0[OBJC_IVAR___MusicInstrumentalContentView_alignment] = 0;
  uint64_t v1 = &v0[OBJC_IVAR___MusicInstrumentalContentView_lastSeenBounds];
  *uint64_t v1 = 0u;
  v1[1] = 0u;
  v0[OBJC_IVAR___MusicInstrumentalContentView_isSelected] = 0;
  *(void *)&v0[OBJC_IVAR___MusicInstrumentalContentView_dots] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR___MusicInstrumentalContentView_fadeOutCued] = 0;
  *(void *)&v0[OBJC_IVAR___MusicInstrumentalContentView_dotFadeInDuration] = 0;
  uint64_t v2 = &v0[OBJC_IVAR___MusicInstrumentalContentView_totalDotsFadedIn];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;
  *(void *)&v0[OBJC_IVAR___MusicInstrumentalContentView_totalDotsCompleted] = 0;
  *(void *)&v0[OBJC_IVAR___MusicInstrumentalContentView_breathDuration] = 0;
  *(void *)&v0[OBJC_IVAR___MusicInstrumentalContentView_totalBreathsCompleted] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100B1F878(char a1, char a2)
{
  v2[OBJC_IVAR___MusicTextContentView_isSelected] = a1;
  if (a1)
  {
    double v5 = Int.seconds.getter(1);
    uint64_t v6 = OBJC_IVAR___MusicTextContentView_selectedLabel;
    double v7 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_selectedLabel];
    if (v7) {
      goto LABEL_22;
    }
    id v8 = [objc_allocWithZone((Class)UILabel) init];
    [v8 setLineBreakStrategy:3];
    [v8 setNumberOfLines:0];
    [v8 setTextAlignment:4];
    [v8 setAutoresizingMask:18];
    [v8 setTextAlignment:*(void *)&v2[OBJC_IVAR___MusicTextContentView_alignment]];
    uint64_t v9 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_content];
    if (v2[OBJC_IVAR___MusicTextContentView_content + 16])
    {
      double v10 = &selRef_setAttributedText_;
    }
    else
    {
      uint64_t v11 = *(void *)&v2[OBJC_IVAR___MusicTextContentView_content + 8];
      swift_bridgeObjectRetain();
      NSString v12 = String._bridgeToObjectiveC()();
      sub_100B20684(v9, v11, 0);
      [v8 setText:v12];

      uint64_t v9 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_specs + 168];
      double v10 = &selRef_setFont_;
    }
    [v8 *v10 v9];
    [v8 setTextColor:*(void *)&v2[OBJC_IVAR___MusicTextContentView_specs + 232]];
    [v2 addSubview:v8];
    double v13 = *(void **)&v2[v6];
    *(void *)&v2[v6] = v8;

    double v7 = *(void **)&v2[v6];
    if (v7)
    {
LABEL_22:
      uint64_t v14 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_label];
      id v15 = v7;
      [v14 frame];
      [v15 setFrame:];

      CGFloat v16 = *(void **)&v2[v6];
      if (v16) {
        [v16 setAlpha:0.0];
      }
    }
  }
  else
  {
    double v5 = Int.seconds.getter(0);
  }
  if (a2)
  {
    id v17 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:0 controlPoint1:0.12 controlPoint2:0.33 animations:0.0, 0.2, 0.1];
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v2;
    *(double *)(v18 + 24) = v5;
    uint64_t v31 = sub_100B208FC;
    uint64_t v32 = v18;
    id v27 = _NSConcreteStackBlock;
    uint64_t v28 = 1107296256;
    double v29 = sub_100020238;
    double v30 = &unk_10100C8C0;
    uint64_t v19 = _Block_copy(&v27);
    CGRect v20 = v2;
    swift_release();
    [v17 addAnimations:v19];
    _Block_release(v19);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v20;
    uint64_t v31 = sub_100B209C4;
    uint64_t v32 = v21;
    id v27 = _NSConcreteStackBlock;
    uint64_t v28 = 1107296256;
    double v29 = sub_1002DE0E4;
    double v30 = &unk_10100C910;
    id v22 = _Block_copy(&v27);
    double v23 = v20;
    swift_release();
    [v17 addCompletion:v22];
    _Block_release(v22);
    [v17 startAnimation];
  }
  else
  {
    [*(id *)&v2[OBJC_IVAR___MusicTextContentView_label] setAlpha:1.0 - v5];
    uint64_t v24 = OBJC_IVAR___MusicTextContentView_selectedLabel;
    id v25 = *(void **)&v2[OBJC_IVAR___MusicTextContentView_selectedLabel];
    if (v25) {
      [v25 setAlpha:v5];
    }
    if ((a1 & 1) == 0)
    {
      uint64_t v26 = *(void **)&v2[v24];
      if (v26)
      {
        [v26 removeFromSuperview];
        uint64_t v26 = *(void **)&v2[v24];
      }
      *(void *)&v2[v24] = 0;
    }
  }
}

void sub_100B1FCE4(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a2 + OBJC_IVAR___MusicTextContentView_isSelected) & 1) == 0)
  {
    uint64_t v3 = OBJC_IVAR___MusicTextContentView_selectedLabel;
    uint64_t v4 = *(void **)(a2 + OBJC_IVAR___MusicTextContentView_selectedLabel);
    if (v4)
    {
      [v4 removeFromSuperview];
      uint64_t v4 = *(void **)(a2 + v3);
    }
    *(void *)(a2 + v3) = 0;
  }
}

char *sub_100B1FD54(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  v4[OBJC_IVAR___MusicTextContentView_isSelected] = 0;
  *(void *)&v4[OBJC_IVAR___MusicTextContentView_alignment] = 0;
  v4[OBJC_IVAR___MusicTextContentView_isScrolling] = 1;
  uint64_t v9 = OBJC_IVAR___MusicTextContentView_label;
  id v10 = objc_allocWithZone((Class)UILabel);
  uint64_t v11 = v4;
  id v12 = [v10 init];
  [v12 setLineBreakStrategy:3];
  [v12 setNumberOfLines:0];
  [v12 setTextAlignment:4];
  [v12 setAutoresizingMask:18];
  *(void *)&v4[v9] = v12;
  *(void *)&v11[OBJC_IVAR___MusicTextContentView_selectedLabel] = 0;
  double v13 = &v11[OBJC_IVAR___MusicTextContentView_content];
  *(void *)double v13 = a1;
  *((void *)v13 + 1) = a2;
  char v14 = a3 & 1;
  v13[16] = a3 & 1;
  memcpy(&v11[OBJC_IVAR___MusicTextContentView_specs], (const void *)a4, 0x219uLL);
  sub_100262548(a4);
  sub_100B20664(a1, a2, a3 & 1);

  v25.receiver = v11;
  v25.super_class = (Class)_s15TextContentViewCMa();
  id v15 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  Swift::Int v16 = sub_100AED398((uint64_t)&off_1010086E8);
  id v17 = (char *)v15;
  sub_100B20194(v16, v18, v19, 255);
  swift_bridgeObjectRelease();
  if ((a3 & 1) == 0)
  {
    if (*(unsigned char *)(a4 + 56)) {
      uint64_t v20 = 4;
    }
    else {
      uint64_t v20 = *(void *)(a4 + 48);
    }
    [*(id *)&v17[OBJC_IVAR___MusicTextContentView_label] setTextAlignment:v20];
  }
  uint64_t v21 = *(void **)&v17[OBJC_IVAR___MusicTextContentView_label];
  id v22 = v17;
  id v23 = v21;
  [v22 addSubview:v23];
  sub_1002622C8(a4);
  sub_100B20684(a1, a2, v14);

  return v22;
}

uint64_t sub_100B1FFC0@<X0>(char **a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = &v1[OBJC_IVAR___MusicTextContentView_content];
  double v5 = *(void **)&v1[OBJC_IVAR___MusicTextContentView_content];
  uint64_t v6 = *((void *)v4 + 1);
  double v7 = &v2[OBJC_IVAR___MusicTextContentView_specs];
  if (v4[16])
  {
    memcpy(v18, v7, 0x219uLL);
    id v8 = (objc_class *)_s15TextContentViewCMa();
    objc_allocWithZone(v8);
    sub_100B20664(v5, v6, 1);
    sub_100262548((uint64_t)v18);
    uint64_t v9 = v5;
    uint64_t v10 = v6;
    char v11 = 1;
  }
  else
  {
    memcpy(v18, v7, 0x219uLL);
    id v8 = (objc_class *)_s15TextContentViewCMa();
    objc_allocWithZone(v8);
    sub_100B20664(v5, v6, 0);
    sub_100262548((uint64_t)v18);
    uint64_t v9 = v5;
    uint64_t v10 = v6;
    char v11 = 0;
  }
  id v12 = sub_100B1FD54(v9, v10, v11, (uint64_t)v18);
  sub_100B1F878(v2[OBJC_IVAR___MusicTextContentView_isSelected], 0);
  *(void *)&v12[OBJC_IVAR___MusicTextContentView_alignment] = *(void *)&v2[OBJC_IVAR___MusicTextContentView_alignment];
  Swift::Int v13 = sub_100AED398((uint64_t)&off_101008710);
  sub_100B20194(v13, v14, v15, 255);
  swift_bridgeObjectRelease();
  Swift::Int v16 = v12;
  [v2 bounds];
  [v16 setFrame:];

  uint64_t result = _s15TextContentViewCMa();
  a1[3] = (char *)v8;
  *a1 = v16;
  return result;
}

uint64_t sub_100B20194(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v39 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  uint64_t v37 = OBJC_IVAR___MusicTextContentView_isScrolling;
  uint64_t v35 = OBJC_IVAR___MusicTextContentView_alignment;
  uint64_t v36 = v4 + OBJC_IVAR___MusicTextContentView_specs;
  uint64_t v38 = OBJC_IVAR___MusicTextContentView_selectedLabel;
  uint64_t v8 = v4 + OBJC_IVAR___MusicTextContentView_content;
  int64_t v40 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v41 = OBJC_IVAR___MusicTextContentView_label;
  uint64_t v9 = v4 + OBJC_IVAR___MusicTextContentView_specs + 248;
  uint64_t v10 = v4 + OBJC_IVAR___MusicTextContentView_specs + 272;
  BOOL v11 = a4 == -1;
  if ((a4 & 1) == 0) {
    BOOL v11 = 1;
  }
  BOOL v33 = v11;
  uint64_t v12 = a1;
  int64_t v13 = 0;
  uint64_t v14 = &selRef_setObject_forKey_;
  uint64_t v34 = swift_bridgeObjectRetain();
  while (v7)
  {
    unint64_t v18 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v19 = v18 | (v13 << 6);
LABEL_27:
    switch(*(unsigned char *)(*(void *)(v12 + 48) + v19))
    {
      case 1:
        if ((*(unsigned char *)(v8 + 16) & 1) == 0)
        {
          [*(id *)(v4 + v41) setFont:*(void *)(v36 + 168)];
          uint64_t v26 = *(void **)(v4 + v38);
          if (v26) {
            [v26 setFont:*(void *)(v36 + 168)];
          }
        }
        if (*(unsigned char *)(v4 + v37)) {
          id v27 = (void *)v10;
        }
        else {
          id v27 = (void *)v9;
        }
        [*(id *)(v4 + v41) v14[97] *v27];
        uint64_t v15 = *(void **)(v4 + v38);
        if (v15)
        {
          uint64_t v17 = *(void *)(v36 + 232);
          goto LABEL_10;
        }
        break;
      case 2:
        [*(id *)(v4 + v41) setTextAlignment:*(void *)(v4 + v35)];
        uint64_t v28 = *(void **)(v4 + v38);
        if (v28) {
          [v28 setTextAlignment:*(void *)(v4 + v35)];
        }
        break;
      case 3:
        uint64_t v15 = *(void **)(v4 + v41);
        if (*(unsigned char *)(v4 + v37)) {
          Swift::Int v16 = (uint64_t *)v10;
        }
        else {
          Swift::Int v16 = (uint64_t *)v9;
        }
        uint64_t v17 = *v16;
LABEL_10:
        [v15 v14[97]:v17];
        break;
      default:
        uint64_t v23 = v10;
        uint64_t v24 = v9;
        objc_super v25 = *(void **)v8;
        if (*(unsigned char *)(v8 + 16))
        {
          [*(id *)(v4 + v41) setAttributedText:*(void *)v8];
          uint64_t v9 = v24;
          uint64_t v10 = v23;
          uint64_t v14 = &selRef_setObject_forKey_;
        }
        else
        {
          uint64_t v29 = *(void *)(v8 + 8);
          double v30 = *(void **)(v4 + v41);
          swift_bridgeObjectRetain();
          NSString v31 = String._bridgeToObjectiveC()();
          sub_100B20684(v25, v29, 0);
          [v30 setText:v31];

          uint64_t v12 = v34;
          uint64_t v9 = v24;
          uint64_t v10 = v23;
          uint64_t v14 = &selRef_setObject_forKey_;
          if (!v33) {
            [v30 setFont:*(void *)(v36 + 168)];
          }
        }
        break;
    }
  }
  int64_t v20 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v20 >= v40) {
    goto LABEL_42;
  }
  unint64_t v21 = *(void *)(v39 + 8 * v20);
  ++v13;
  if (v21) {
    goto LABEL_26;
  }
  int64_t v13 = v20 + 1;
  if (v20 + 1 >= v40) {
    goto LABEL_42;
  }
  unint64_t v21 = *(void *)(v39 + 8 * v13);
  if (v21) {
    goto LABEL_26;
  }
  int64_t v13 = v20 + 2;
  if (v20 + 2 >= v40) {
    goto LABEL_42;
  }
  unint64_t v21 = *(void *)(v39 + 8 * v13);
  if (v21)
  {
LABEL_26:
    unint64_t v7 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v13 << 6);
    goto LABEL_27;
  }
  int64_t v22 = v20 + 3;
  if (v22 < v40)
  {
    unint64_t v21 = *(void *)(v39 + 8 * v22);
    if (!v21)
    {
      while (1)
      {
        int64_t v13 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          break;
        }
        if (v13 >= v40) {
          goto LABEL_42;
        }
        unint64_t v21 = *(void *)(v39 + 8 * v13);
        ++v22;
        if (v21) {
          goto LABEL_26;
        }
      }
LABEL_46:
      __break(1u);
      JUMPOUT(0x100B20548);
    }
    int64_t v13 = v22;
    goto LABEL_26;
  }
LABEL_42:

  return swift_release();
}

id sub_100B20588()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s15TextContentViewCMa();
  return [super dealloc];
}

uint64_t _s15TextContentViewCMa()
{
  return self;
}

id sub_100B20664(void *a1, uint64_t a2, char a3)
{
  if (a3) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void _s15TextContentViewC7ContentOwxx(uint64_t a1)
{
}

void sub_100B20684(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t _s15TextContentViewC7ContentOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100B20664(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s15TextContentViewC7ContentOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_100B20664(*(void **)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100B20684(v6, v7, v8);
  return a1;
}

uint64_t _s15TextContentViewC7ContentOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_100B20684(v4, v5, v6);
  return a1;
}

ValueMetadata *_s15TextContentViewC7ContentOMa()
{
  return &_s15TextContentViewC7ContentON;
}

uint64_t sub_100B20790(const void *a1)
{
  char v3 = (void *)(*v1 + OBJC_IVAR___MusicTextContentView_specs);
  memcpy(v8, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  sub_100262548((uint64_t)a1);
  sub_1002622C8((uint64_t)v8);
  Swift::Int v4 = sub_100AED398((uint64_t)&off_1010086C0);
  sub_100B20194(v4, v5, v6, 255);
  swift_bridgeObjectRelease();
  return sub_1002622C8((uint64_t)a1);
}

uint64_t sub_100B20828(char a1)
{
  *(unsigned char *)(*v1 + OBJC_IVAR___MusicTextContentView_isScrolling) = a1;
  Swift::Int v2 = sub_100AED398((uint64_t)&off_101008738);
  sub_100B20194(v2, v3, v4, 255);

  return swift_bridgeObjectRelease();
}

id sub_100B20880()
{
  return [*(id *)(*v0 + OBJC_IVAR___MusicTextContentView_label) setAlpha:1.0];
}

void sub_100B208A0(char a1, char a2)
{
}

uint64_t sub_100B208C4()
{
  return swift_deallocObject();
}

id sub_100B208FC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  double v2 = *(double *)(v0 + 24);
  [*(id *)(v1 + OBJC_IVAR___MusicTextContentView_label) setAlpha:1.0 - v2];
  id result = *(id *)(v1 + OBJC_IVAR___MusicTextContentView_selectedLabel);
  if (result)
  {
    return [result setAlpha:v2];
  }
  return result;
}

uint64_t sub_100B2098C()
{
  return swift_deallocObject();
}

void sub_100B209C4(uint64_t a1)
{
  sub_100B1FCE4(a1, *(void *)(v1 + 16));
}

void sub_100B209CC()
{
  v0[OBJC_IVAR___MusicTextContentView_isSelected] = 0;
  *(void *)&v0[OBJC_IVAR___MusicTextContentView_alignment] = 0;
  v0[OBJC_IVAR___MusicTextContentView_isScrolling] = 1;
  uint64_t v1 = OBJC_IVAR___MusicTextContentView_label;
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  [v2 setLineBreakStrategy:3];
  [v2 setNumberOfLines:0];
  [v2 setTextAlignment:4];
  [v2 setAutoresizingMask:18];
  *(void *)&v0[v1] = v2;
  *(void *)&v0[OBJC_IVAR___MusicTextContentView_selectedLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

unsigned char *_s15TextContentViewC6ChangeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B20BA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15TextContentViewC6ChangeOMa()
{
  return &_s15TextContentViewC6ChangeON;
}

unint64_t sub_100B20BE4()
{
  unint64_t result = qword_1010CA748;
  if (!qword_1010CA748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CA748);
  }
  return result;
}

uint64_t sub_100B20C40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  return sub_1000688E4(v3, a1);
}

id sub_100B20C94()
{
  double v1 = UIView.untransformedFrame.getter();
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment];
  if (v8 == 2)
  {
    uint64_t v9 = CGPoint.centerRight.unsafeMutableAddressor();
  }
  else if (v8)
  {
    uint64_t v9 = CGPoint.center.unsafeMutableAddressor();
  }
  else
  {
    uint64_t v9 = CGPoint.centerLeft.unsafeMutableAddressor();
  }
  uint64_t v10 = (double *)v9;
  swift_beginAccess();
  [v0 setAnchorPoint:*v10, v10[1]];
  return UIView.untransformedFrame.setter(v1, v3, v5, v7);
}

void sub_100B20D44(void *a1)
{
  if (a1) {
    [a1 removeFromSuperview];
  }
  double v2 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  if (v2)
  {
    id v3 = v2;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView] addSubview:v3];
    double v4 = self;
    sub_100063814(&qword_1010C9B10);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100E251E0;
    id v6 = [v3 leadingAnchor];
    id v7 = [v1 leadingAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    *(void *)(v5 + 32) = v8;
    id v9 = [v3 trailingAnchor];
    id v10 = [v1 trailingAnchor];
    id v11 = [v9 constraintEqualToAnchor:v10];

    *(void *)(v5 + 40) = v11;
    id v12 = [v3 topAnchor];
    id v13 = [v1 topAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    *(void *)(v5 + 48) = v14;
    id v15 = [v3 bottomAnchor];
    id v16 = [v1 bottomAnchor];
    id v17 = [v15 constraintEqualToAnchor:v16];

    *(void *)(v5 + 56) = v17;
    specialized Array._endMutation()();
    sub_100057778(0, &qword_1010CA7D8);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v4 activateConstraints:isa];
  }
}

void (*sub_100B21014(uint64_t a1))(long long *a1, char a2)
{
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = v2;
  long long v3 = *(_OWORD *)(v1 + v2);
  *(_OWORD *)a1 = v3;
  id v4 = (id)v3;
  return sub_100B21070;
}

void sub_100B21070(long long *a1, char a2)
{
  long long v3 = (id *)(*((void *)a1 + 2) + *((void *)a1 + 3));
  id v8 = *v3;
  long long v4 = *a1;
  *(_OWORD *)long long v3 = *a1;
  id v5 = (id)v4;
  id v6 = v5;
  if (a2)
  {
    id v7 = v5;
    sub_100B20D44(v8);
  }
  else
  {
    sub_100B20D44(v8);
  }
}

id sub_100B21108()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView];
  }
  else
  {
    id v4 = sub_100B2116C(v0);
    id v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100B2116C(char *a1)
{
  id v2 = [objc_allocWithZone((Class)UIView) init];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = (double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs];
  [v2 setBackgroundColor:*(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 456]];
  [v2 setAlpha:0.0];
  id v4 = [v2 layer];
  [v4 setCornerCurve:kCACornerCurveContinuous];

  id v5 = [v2 layer];
  [v5 setCornerRadius:v3[58]];

  [a1 insertSubview:v2 atIndex:0];
  id v6 = self;
  sub_100063814(&qword_1010C9B10);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100E251E0;
  id v8 = [v2 leadingAnchor];
  id v9 = [a1 leadingAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9 constant:-v3[59]];

  *(void *)(v7 + 32) = v10;
  id v11 = [v2 trailingAnchor];
  id v12 = [a1 trailingAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12 constant:v3[59]];

  *(void *)(v7 + 40) = v13;
  id v14 = [v2 topAnchor];
  id v15 = [a1 topAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15 constant:-v3[59]];

  *(void *)(v7 + 48) = v16;
  id v17 = [v2 bottomAnchor];
  id v18 = [a1 bottomAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18 constant:v3[59]];

  *(void *)(v7 + 56) = v19;
  specialized Array._endMutation()();
  sub_100057778(0, &qword_1010CA7D8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 activateConstraints:isa];

  return v2;
}

id sub_100B21574(char a1)
{
  int v2 = a1 & 1;
  id result = [v1 isHighlighted];
  if (result == v2) {
    return result;
  }
  id v4 = sub_100B21108();
  if ([v1 isHighlighted])
  {
    id v5 = &v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
    *(void *)id v5 = *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius];
    v5[8] = 0;
    double v6 = 0.0;
LABEL_7:
    sub_100B21F78(1, v6);
    goto LABEL_8;
  }
  if ((v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius + 8] & 1) == 0)
  {
    double v6 = *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
    goto LABEL_7;
  }
LABEL_8:
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  *(void *)(v8 + 24) = v4;
  id v9 = v4;
  id v10 = v1;
  id v11 = v9;
  _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV35animateWithHighlightAnimationCurves11highlighted14fadeAnimations09transformP0ySb_yycyyctFZ_0((char)[v10 isHighlighted], (uint64_t)sub_100B23B40, v7, (uint64_t)sub_100B23B48, v8);

  swift_release();

  return (id)swift_release();
}

void sub_100B216E4(void *a1, char *a2)
{
  unsigned int v4 = [a2 isHighlighted];
  double v5 = 0.0;
  double v6 = 1.0;
  if (v4) {
    double v5 = 1.0;
  }
  [a1 setAlpha:v5];
  id v7 = *(id *)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView];
  if ([a2 isHighlighted]) {
    double v6 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 448];
  }
  [v7 setAlpha:v6];
}

id sub_100B217A8(char *a1, void *a2)
{
  if ([a1 isHighlighted])
  {
    double v5 = *(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 400];
    uint64_t v4 = *(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 408];
    uint64_t v6 = *(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 416];
    double v7 = *(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 424];
    uint64_t v8 = *(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 432];
    uint64_t v9 = *(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 440];
  }
  else
  {
    uint64_t v4 = 0;
    double v5 = 1.0;
    uint64_t v6 = 0;
    double v7 = 1.0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  id v10 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView];
  double v12 = v5;
  uint64_t v13 = v4;
  uint64_t v14 = v6;
  double v15 = v7;
  uint64_t v16 = v8;
  uint64_t v17 = v9;
  [v10 setTransform:&v12];
  double v12 = v5;
  uint64_t v13 = v4;
  uint64_t v14 = v6;
  double v15 = v7;
  uint64_t v16 = v8;
  uint64_t v17 = v9;
  return [a2 setTransform:&v12];
}

double sub_100B2189C(double a1, double a2)
{
  id v3 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  if (!v3) {
    return 0.0;
  }
  uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
  uint64_t ObjectType = swift_getObjectType();
  id v8 = v3;
  double v9 = (*(double (**)(id, uint64_t, uint64_t, double, double))(v6 + 96))([v2 isSelected], ObjectType, v6, a1, a2);

  return v9;
}

void sub_100B219B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v3)
  {
    uint64_t v4 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    v17[0] = v3;
    (*(void (**)(uint64_t, uint64_t))(v4 + 80))(ObjectType, v4);
  }
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling) = 1;
  id v8 = sub_100B21014((uint64_t)v17);
  double v9 = *(void **)v7;
  if (*(void *)v7)
  {
    uint64_t v10 = v7;
    uint64_t v11 = *(unsigned __int8 *)(v1 + v6);
    uint64_t v12 = *(void *)(v7 + 8);
    uint64_t v13 = swift_getObjectType();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40);
    id v15 = v9;
    v14(v11, v13, v12);
    uint64_t v16 = *(void **)v10;
    *(void *)uint64_t v10 = v9;
    *(void *)(v10 + 8) = v12;
  }
  v8((long long *)v17, 0);
  sub_100B21AE0(0, 0);
}

void sub_100B21AE0(char a1, void *a2)
{
  uint64_t v5 = a1 & 1;
  if ([v2 isSelected] != v5)
  {
    [v2 setSelected:v5];
    if ([v2 isHighlighted])
    {
      [v2 setHighlighted:0];
      [v2 cancelTrackingWithEvent:0];
      uint64_t v6 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v6;
      *(unsigned char *)(v7 + 24) = a1 & 1;
      id v8 = sub_100B23B50;
      if (!a2)
      {
LABEL_4:
        swift_beginAccess();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v10 = (void *)Strong;
          if (a1)
          {
            uint64_t v11 = 0;
            double v12 = 1.0;
            uint64_t v13 = 0;
            double v14 = 1.0;
            id v15 = 0;
            uint64_t v16 = 0;
          }
          else
          {
            double v12 = *(double *)(Strong + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 280);
            uint64_t v11 = *(void *)(Strong + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 288);
            uint64_t v13 = *(uint64_t (**)(uint64_t))(Strong
                                                    + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs
                                                    + 296);
            double v14 = *(double *)(Strong + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 304);
            id v15 = *(void (**)())(Strong + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 312);
            uint64_t v16 = *(void *)(Strong + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 320);
          }
          swift_retain();
          uint64_t aBlock = *(void ***)&v12;
          uint64_t v33 = v11;
          uint64_t v34 = v13;
          double v35 = v14;
          uint64_t v36 = v15;
          uint64_t v37 = v16;
          [v10 setTransform:&aBlock];
          swift_release();
        }
        uint64_t v26 = &v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
        id v27 = *(void ***)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
        if (v27)
        {
          uint64_t v28 = *((void *)v26 + 1);
          uint64_t ObjectType = swift_getObjectType();
          uint64_t aBlock = v27;
          double v30 = *(void (**)(void, void, uint64_t, uint64_t))(v28 + 88);
          NSString v31 = v27;
          v30(a1 & 1, 0, ObjectType, v28);
        }
LABEL_15:
        swift_release();
        return;
      }
    }
    else
    {
      uint64_t v17 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v17;
      *(unsigned char *)(v7 + 24) = a1 & 1;
      id v8 = sub_100B23A10;
      if (!a2) {
        goto LABEL_4;
      }
    }
    uint64_t v36 = v8;
    uint64_t v37 = v7;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v33 = 1107296256;
    uint64_t v34 = sub_100020238;
    double v35 = COERCE_DOUBLE(&unk_10100CA68);
    id v18 = _Block_copy(&aBlock);
    swift_retain();
    id v19 = a2;
    swift_release();
    [v19 addAnimations:v18];
    _Block_release(v18);
    int64_t v20 = &v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    unint64_t v21 = *(void ***)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (v21)
    {
      uint64_t v22 = *((void *)v20 + 1);
      uint64_t v23 = swift_getObjectType();
      uint64_t aBlock = v21;
      uint64_t v24 = *(void (**)(void, uint64_t, uint64_t, uint64_t))(v22 + 88);
      objc_super v25 = v21;
      v24(a1 & 1, 1, v23, v22);

      swift_release();
      return;
    }

    goto LABEL_15;
  }
}

void sub_100B21E60(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    if (a2)
    {
      long long v5 = xmmword_100E26B20;
      long long v6 = xmmword_100E26B30;
      long long v7 = 0uLL;
    }
    else
    {
      long long v6 = *(_OWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 280];
      long long v5 = *(_OWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 296];
      long long v7 = *(_OWORD *)&Strong[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 312];
    }
    v8[0] = v6;
    v8[1] = v5;
    v8[2] = v7;
    [Strong setTransform:v8];
  }
}

void sub_100B21F78(char a1, double a2)
{
  id v5 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:0 controlPoint1:0.12 controlPoint2:0.33 animations:0.0, 0.2, 0.1];
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius;
  if (*(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius] != a2)
  {
    id v37 = v5;
    id v7 = [v5 timingParameters];
    if (v7)
    {
      id v8 = [v7 cubicTimingParameters];
      swift_unknownObjectRelease();
      if (v8)
      {
        NSString v9 = String._bridgeToObjectiveC()();
        id v10 = [self animationWithKeyPath:v9];

        id v11 = v10;
        double v12 = 0.0;
        if (a1) {
          [v37 duration:0.0];
        }
        [v11 setDuration:v12];

        [v11 setFillMode:kCAFillModeBoth];
        Class isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
        [v11 setFromValue:isa];

        Class v14 = CGFloat._bridgeToObjectiveC()().super.super.isa;
        [v11 setToValue:v14];

        [v11 setRemovedOnCompletion:0];
        id v15 = v11;
        [v8 controlPoint1];
        float v17 = v16;
        [v8 controlPoint1];
        float v19 = v18;
        [v8 controlPoint2];
        float v21 = v20;
        [v8 controlPoint2];
        float v23 = v22;
        id v24 = objc_allocWithZone((Class)CAMediaTimingFunction);
        *(float *)&double v25 = v17;
        *(float *)&double v26 = v19;
        *(float *)&double v27 = v21;
        *(float *)&double v28 = v23;
        id v29 = [v24 initWithControlPoints:v25 :v26 :v27 :v28];
        [v15 setTimingFunction:v29];

        id v30 = [v2 layer];
        [v30 setShouldRasterize:0];

        NSString v31 = self;
        [v31 begin];
        uint64_t v32 = swift_allocObject();
        *(void *)(v32 + 16) = v2;
        aBlock[4] = sub_100B23998;
        aBlock[5] = v32;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100020238;
        aBlock[3] = &unk_10100C9F0;
        uint64_t v33 = _Block_copy(aBlock);
        uint64_t v34 = v2;
        swift_release();
        [v31 setCompletionBlock:v33];
        _Block_release(v33);
        id v35 = [v34 layer];
        NSString v36 = String._bridgeToObjectiveC()();
        [v35 addAnimation:v15 forKey:v36];

        [v31 commit];
        *(double *)&v2[v6] = a2;
        return;
      }
    }
    id v5 = v37;
  }
}

void sub_100B223AC(void *a1)
{
  id v1 = [a1 layer];
  [v1 setShouldRasterize:1];
}

uint64_t sub_100B22404()
{
  void (*v12)(uint64_t *__return_ptr);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  NSString v33;
  uint64_t v34;
  Class isa;
  id v36;
  id v37;
  uint64_t v38;
  NSString *v39;
  NSString *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  NSString v45;
  Class v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char v57;
  id v58;
  id v59;
  Swift::Int v60;
  uint64_t v61;
  Swift::Int v62;
  uint64_t v63;
  double v64;
  double v65;
  char v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  char v86;
  uint64_t v87;
  Swift::Int v88;
  Swift::Int v89;
  uint64_t v90;
  id v91;
  void *v92;
  id v93;
  char *v94;
  char *v95;
  uint64_t v96;
  Swift::Int v97;
  void *v98;
  char *v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  Swift::Int v104;
  void *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  void *v112;
  char v113;
  char v114;
  id v115;
  char *v116;
  void *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  char v122;
  char v123;
  uint64_t v125;
  id v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  void (*v132)(char *, uint64_t);
  NSString *v133;
  id v134;
  long long v135;
  uint64_t v136;
  id v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  double v143;
  double v144;
  char v145;
  unsigned __int8 v146;
  uint64_t v147;
  uint64_t (*v148)(void);
  void *v149;
  uint64_t (*v150)(void);
  uint64_t v151;
  void (*v152)(uint64_t *__return_ptr);
  uint64_t v153;
  unsigned char v154[40];
  uint64_t v155[8];
  uint64_t v156[8];
  uint64_t v157[8];
  uint64_t v158[6];
  char v159;
  unsigned char v160[24];
  uint64_t v161;
  char v162;
  void *v163;
  void v164[3];
  uint64_t v165;
  void *v166;
  _OWORD v167[34];

  uint64_t v1 = v0;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  id v5 = (char *)&v125 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v7 = (char *)&v125 - v6;
  sub_100B20C94();
  uint64_t v8 = v0 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  sub_1000688E4(v8, (uint64_t)v154);
  sub_100063814(&qword_1010C9A68);
  if (swift_dynamicCast())
  {
    LODWORD(v138) = v146;
    uint64_t v9 = v147;
    id v10 = v148;
    id v11 = v150;
    double v12 = v152;
    uint64_t v13 = v153;
    v140 = v151;
    uint64_t v141 = v149;
    Class v14 = *(void *)(v150() + 16);
    id v15 = swift_bridgeObjectRelease();
    double v16 = v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    float v17 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (v14)
    {
      uint64_t v139 = v9;
      double v18 = v1;
      if (v17)
      {
        _s19SBS_TextContentViewCMa();
        id v15 = swift_dynamicCastClass();
        if (v15)
        {
          id v137 = v17;
          *(void *)&uint64_t v135 = v10();
          uint64_t v136 = v19;
          double v20 = v11();
          uint64_t v134 = *(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
          v12(v156);
          float v21 = sub_100B238F8((uint64_t)v156, (uint64_t)v167);
          double v22 = *((void *)&v167[1] + 1);
          if (*((void *)&v167[1] + 1))
          {
            uint64_t v133 = *(NSString **)&v167[1];
            swift_bridgeObjectRetain();
            float v21 = (uint64_t)sub_100AFF4D8(v156);
          }
          else
          {
            uint64_t v133 = 0;
          }
          uint64_t v119 = v139;
          ((void (*)(uint64_t *__return_ptr, uint64_t))v12)(v157, v21);
          unint64_t v120 = sub_100B238F8((uint64_t)v157, (uint64_t)v164);
          if (v165)
          {
            unint64_t v121 = v166;
            swift_bridgeObjectRetain();
            unint64_t v120 = (uint64_t)sub_100AFF4D8(v157);
          }
          else
          {
            unint64_t v121 = _swiftEmptyArrayStorage;
          }
          ((void (*)(uint64_t *__return_ptr, uint64_t))v12)(v158, v120);
          sub_100B238F8((uint64_t)v158, (uint64_t)v160);
          uint64_t v122 = v161;
          if (v161)
          {
            unint64_t v123 = v162;
            sub_100AFF4D8(v158);
            uint64_t v122 = v123 & 1;
          }
          sub_100B1BDD0((id)v135, v136, v20, (uint64_t)v134, (char)v138, v119, (uint64_t)v133, v22, (uint64_t)v121, v122);
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_48;
        }
      }
      CGRect v75 = (void *)((uint64_t (*)(uint64_t))v10)(v15);
      uint64_t v136 = v76;
      id v137 = v75;
      double v77 = v11();
      uint64_t v134 = *(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      double v78 = swift_bridgeObjectRetain();
      ((void (*)(uint64_t *__return_ptr, uint64_t))v12)(v155, v78);
      double v79 = sub_100B238F8((uint64_t)v155, (uint64_t)v164);
      uint64_t v80 = v165;
      if (v165)
      {
        uint64_t v133 = (NSString *)v164[2];
        swift_bridgeObjectRetain();
        double v79 = (uint64_t)sub_100AFF4D8(v155);
      }
      else
      {
        uint64_t v133 = 0;
      }
      ((void (*)(uint64_t *__return_ptr, uint64_t))v12)(v156, v79);
      unint64_t v111 = sub_100B238F8((uint64_t)v156, (uint64_t)v160);
      if (v161)
      {
        uint64_t v112 = v163;
        swift_bridgeObjectRetain();
        unint64_t v111 = (uint64_t)sub_100AFF4D8(v156);
      }
      else
      {
        uint64_t v112 = _swiftEmptyArrayStorage;
      }
      *(void *)&uint64_t v135 = v13;
      ((void (*)(uint64_t *__return_ptr, uint64_t))v12)(v157, v111);
      sub_100B238F8((uint64_t)v157, (uint64_t)v158);
      if (v158[3])
      {
        os_log_type_t v113 = v159;
        sub_100AFF4D8(v157);
        uint64_t v114 = v113 & 1;
      }
      else
      {
        uint64_t v114 = 0;
      }
      memcpy(v167, (const void *)(v18 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
      uint64_t v115 = objc_allocWithZone((Class)_s19SBS_TextContentViewCMa());
      sub_100262548((uint64_t)v167);
      unint64_t v116 = sub_100B1C028((uint64_t)v137, v136, v77, (uint64_t)v134, (char)v138, v139, (uint64_t)v133, v80, (uint64_t)v112, v114, v167);
      id v117 = *(void **)v16;
      *(void *)double v16 = v116;
      *(void *)(v16 + 8) = &off_10100C310;
      id v118 = v116;
      sub_100B20D44(v117);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v17)
      {
        _s15TextContentViewCMa();
        id v15 = swift_dynamicCastClass();
        if (v15)
        {
          double v81 = v15;
          uint64_t v138 = v17;
          uint64_t v82 = v10();
          double v83 = v81 + OBJC_IVAR___MusicTextContentView_content;
          uint64_t v139 = v9;
          double v85 = *(void **)(v81 + OBJC_IVAR___MusicTextContentView_content);
          double v84 = *(void *)(v81 + OBJC_IVAR___MusicTextContentView_content + 8);
          double v86 = *(unsigned char *)(v81 + OBJC_IVAR___MusicTextContentView_content + 16);
          *(void *)double v83 = v82;
          *(void *)(v83 + 8) = v87;
          *(unsigned char *)(v83 + 16) = 0;
          swift_bridgeObjectRetain_n();
          sub_100B20664(v85, v84, v86);
          sub_100B20684(v85, v84, v86);
          uint64_t v88 = sub_100AED398((uint64_t)&off_101008760);
          sub_100B20194(v88, (uint64_t)v85, v84, v86);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100B20684(v85, v84, v86);
          swift_bridgeObjectRelease();
          *(void *)(v81 + OBJC_IVAR___MusicTextContentView_alignment) = *(void *)(v1
                                                                                    + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
          double v89 = sub_100AED398((uint64_t)&off_101008788);
          sub_100B20194(v89, 0, 0, 255);

          swift_release();
          swift_release();
          swift_release();
LABEL_48:
          swift_bridgeObjectRelease();
LABEL_49:
          swift_bridgeObjectRelease();
          return sub_1000760E4((uint64_t)v154);
        }
      }
      uint64_t v100 = (void *)((uint64_t (*)(uint64_t))v10)(v15);
      uint64_t v102 = v101;
      memcpy(v167, (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
      objc_allocWithZone((Class)_s15TextContentViewCMa());
      sub_100262548((uint64_t)v167);
      unint64_t v103 = sub_100B1FD54(v100, v102, 0, (uint64_t)v167);
      *(void *)&v103[OBJC_IVAR___MusicTextContentView_alignment] = *(void *)(v1
                                                                               + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      double v104 = sub_100AED398((uint64_t)&off_1010087B0);
      sub_100B20194(v104, 0, 0, 255);
      swift_bridgeObjectRelease();
      double v105 = *(void **)v16;
      *(void *)double v16 = v103;
      *(void *)(v16 + 8) = &off_10100C830;
      double v106 = v103;
      sub_100B20D44(v105);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  else if (swift_dynamicCast())
  {
    uint64_t v139 = v147;
    v140 = v1;
    uint64_t v141 = [objc_allocWithZone((Class)NSMutableAttributedString) init];
    String.LocalizationValue.init(stringLiteral:)();
    id v137 = *(id *)(v3 + 16);
    uint64_t v138 = (id)(v3 + 16);
    ((void (*)(char *, char *, uint64_t))v137)(v5, v7, v2);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    float v23 = (id)qword_10112BE80;
    static Locale.current.getter();
    id v24 = String.init(localized:table:bundle:locale:comment:)();
    unint64_t v128 = v25;
    os_log_type_t v129 = v24;
    double v26 = *(void (**)(char *, uint64_t))(v3 + 8);
    unint64_t v127 = v3 + 8;
    uint64_t v132 = v26;
    v26(v7, v2);
    uint64_t v136 = sub_100063814(&qword_1010C9F50);
    double v27 = swift_allocObject();
    uint64_t v135 = xmmword_100E251D0;
    *(_OWORD *)(v27 + 16) = xmmword_100E251D0;
    *(void *)(v27 + 32) = NSFontAttributeName;
    double v28 = self;
    uint64_t v134 = v28;
    uint64_t v133 = NSFontAttributeName;
    id v29 = [v28 defaultMetrics];
    os_log_type_t v131 = self;
    id v30 = [v131 systemFontOfSize:22.0 weight:UIFontWeightBold];
    NSString v31 = [v29 scaledFontForFont:v30];

    os_log_type_t v130 = sub_100057778(0, (unint64_t *)&qword_1010C8930);
    *(void *)(v27 + 64) = v130;
    *(void *)(v27 + 40) = v31;
    sub_10001A208(v27);
    uint64_t v32 = objc_allocWithZone((Class)NSAttributedString);
    uint64_t v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    _s3__C3KeyVMa_2(0);
    os_log_type_t v129 = v34;
    unint64_t v128 = sub_100B13CA0();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v36 = [v32 initWithString:v33 attributes:isa];

    uint64_t v126 = v36;
    [v141 appendAttributedString:v36];
    *(void *)&v167[0] = v139;
    String.LocalizationValue.init(stringLiteral:)();
    ((void (*)(char *, char *, uint64_t))v137)(v5, v7, v2);
    id v37 = (id)qword_10112BE80;
    static Locale.current.getter();
    String.init(localized:table:bundle:locale:comment:)();
    v132(v7, v2);
    sub_100063814(&qword_1010CA7C8);
    sub_100066540();
    BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = v135;
    uint64_t v39 = v133;
    *(void *)(v38 + 32) = v133;
    int64_t v40 = v39;
    uint64_t v41 = [v134 defaultMetrics];
    double v42 = [v131 systemFontOfSize:22.0 weight:UIFontWeightMedium];
    uint64_t v43 = [v41 scaledFontForFont:v42];

    *(void *)(v38 + 64) = v130;
    *(void *)(v38 + 40) = v43;
    sub_10001A208(v38);
    id v44 = objc_allocWithZone((Class)NSAttributedString);
    double v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    double v46 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v47 = [v44 initWithString:v45 attributes:v46];

    id v48 = v141;
    [v141 appendAttributedString:v47];
    uint64_t v49 = v140;
    uint64_t v50 = v140 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    uint64_t v51 = *(void **)(v140 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (v51)
    {
      _s15TextContentViewCMa();
      objc_super v52 = swift_dynamicCastClass();
      if (v52)
      {
        id v53 = v52;
        double v54 = v52 + OBJC_IVAR___MusicTextContentView_content;
        CGFloat v55 = *(void **)(v52 + OBJC_IVAR___MusicTextContentView_content);
        CGFloat v56 = *(void *)(v52 + OBJC_IVAR___MusicTextContentView_content + 8);
        CGFloat v57 = *(unsigned char *)(v52 + OBJC_IVAR___MusicTextContentView_content + 16);
        *(void *)double v54 = v48;
        *(void *)(v54 + 8) = 0;
        *(unsigned char *)(v54 + 16) = 1;
        CGFloat v58 = v48;
        uint64_t v59 = v51;
        sub_100B20664(v55, v56, v57);
        sub_100B20684(v55, v56, v57);
        id v60 = sub_100AED398((uint64_t)&off_1010087D8);
        sub_100B20194(v60, (uint64_t)v55, v56, v57);

        swift_bridgeObjectRelease();
        sub_100B20684(v55, v56, v57);
        unsigned __int8 v61 = 4;
        if (!*(unsigned char *)(v49 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 72)) {
          unsigned __int8 v61 = *(void *)(v49 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 64);
        }
        *(void *)(v53 + OBJC_IVAR___MusicTextContentView_alignment) = v61;
        uint64_t v62 = sub_100AED398((uint64_t)&off_101008800);
        sub_100B20194(v62, 0, 0, 255);

        goto LABEL_49;
      }
    }
    double v90 = v49 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs;
    memcpy(v167, (const void *)(v49 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
    double v91 = objc_allocWithZone((Class)_s15TextContentViewCMa());
    double v92 = v48;
    id v93 = v48;
    sub_100262548((uint64_t)v167);
    uint64_t v94 = sub_100B1FD54(v92, 0, 1, (uint64_t)v167);
    double v95 = v94;
    id v96 = *(void *)(v90 + 64);
    if (*(unsigned char *)(v90 + 72)) {
      id v96 = 4;
    }
    *(void *)&v94[OBJC_IVAR___MusicTextContentView_alignment] = v96;
    uint64_t v97 = sub_100AED398((uint64_t)&off_101008828);
    sub_100B20194(v97, 0, 0, 255);
    swift_bridgeObjectRelease();
    uint64_t v98 = *(void **)v50;
    *(void *)uint64_t v50 = v95;
    *(void *)(v50 + 8) = &off_10100C830;
    CGRect v99 = v95;
    sub_100B20D44(v98);
  }
  else if (swift_dynamicCast())
  {
    double v63 = v142;
    double v65 = v143;
    double v64 = v144;
    uint64_t v66 = v145;
    double v67 = v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
    uint64_t v68 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (v68 && (_s23InstrumentalContentViewCMa(), (double v69 = swift_dynamicCastClass()) != 0))
    {
      double v70 = v69;
      objc_super v71 = v69 + OBJC_IVAR___MusicInstrumentalContentView_line;
      *(void *)objc_super v71 = v63;
      *(double *)(v71 + 8) = v65;
      *(double *)(v71 + 16) = v64;
      *(unsigned char *)(v71 + 24) = v66;
      *(unsigned char *)(v69 + OBJC_IVAR___MusicInstrumentalContentView_isSelected) = 0;
      CGRect v72 = v68;
      sub_100B1D57C();
      CGRect v73 = *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      CGRect v74 = *(void *)(v70 + OBJC_IVAR___MusicInstrumentalContentView_alignment);
      *(void *)(v70 + OBJC_IVAR___MusicInstrumentalContentView_alignment) = v73;
      if (v73 != v74) {
        sub_100B1F190();
      }
    }
    else
    {
      memcpy(v167, (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs), 0x219uLL);
      objc_allocWithZone((Class)_s23InstrumentalContentViewCMa());
      sub_100262548((uint64_t)v167);
      unint64_t v107 = (char *)sub_100B1D370(v63, v66, v167, v65, v64);
      uint64_t v108 = *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment);
      id v109 = *(void *)&v107[OBJC_IVAR___MusicInstrumentalContentView_alignment];
      *(void *)&v107[OBJC_IVAR___MusicInstrumentalContentView_alignment] = v108;
      if (v108 != v109) {
        sub_100B1F190();
      }
      uint64_t v110 = *(void **)v67;
      *(void *)double v67 = v107;
      *(void *)(v67 + 8) = &off_10100C468;
      CGRect v72 = v107;
      sub_100B20D44(v110);
    }
  }
  return sub_1000760E4((uint64_t)v154);
}

id sub_100B23428()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncedLyricsLineView();
  return [super dealloc];
}

uint64_t type metadata accessor for SyncedLyricsLineView()
{
  return self;
}

char *sub_100B23518(uint64_t a1, uint64_t a2, const void *a3)
{
  v3[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
  uint64_t v7 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment;
  *(void *)&v3[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = 0;
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView;
  id v9 = objc_allocWithZone((Class)UIView);
  id v10 = v3;
  *(void *)&v3[v8] = [v9 init];
  id v11 = &v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  *(void *)id v11 = 0;
  *((void *)v11 + 1) = 0;
  *(void *)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView] = 0;
  *(void *)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius] = 0;
  double v12 = &v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
  *(void *)double v12 = 0;
  v12[8] = 1;
  sub_1000688E4(a1, (uint64_t)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line]);
  *(void *)&v3[v7] = a2;
  memcpy(&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], a3, 0x219uLL);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v13 = objc_allocWithZone((Class)CAFilter);
  sub_100262548((uint64_t)a3);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [v13 initWithType:v14];

  *(void *)&v10[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurFilter] = v15;
  v37.receiver = v10;
  v37.super_class = (Class)type metadata accessor for SyncedLyricsLineView();
  double v16 = (char *)objc_msgSendSuper2(&v37, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView;
  double v18 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView];
  float v19 = v16;
  [v18 setUserInteractionEnabled:0];
  [*(id *)&v16[v17] setAutoresizingMask:18];
  [v19 addSubview:*(void *)&v16[v17]];
  [v19 setExclusiveTouch:1];
  long long v20 = *(_OWORD *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 296];
  long long v21 = *(_OWORD *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 312];
  v36[0] = *(_OWORD *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs + 280];
  v36[1] = v20;
  v36[2] = v21;
  [v19 setTransform:v36];
  id v22 = [v19 layer];
  [v22 setShouldRasterize:1];

  id v23 = [v19 layer];
  id v24 = [self mainScreen];
  [v24 scale];
  double v26 = v25;

  [v23 setRasterizationScale:v26];
  uint64_t v27 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurFilter;
  id v28 = *(id *)&v19[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurFilter];
  Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  [v28 setValue:isa forKey:kCAFilterInputRadius];

  id v30 = [v19 layer];
  sub_100063814(&qword_1010C94C0);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_100E251D0;
  uint64_t v32 = *(void **)&v19[v27];
  *(void *)(v31 + 56) = sub_100057778(0, (unint64_t *)&qword_1010C94C8);
  *(void *)(v31 + 32) = v32;
  id v33 = v32;
  Class v34 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v30 setFilters:v34];

  sub_100B22404();
  sub_100B219B4();

  sub_1000760E4(a1);
  return v19;
}

uint64_t sub_100B238F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010C9780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B23960()
{
  return swift_deallocObject();
}

void sub_100B23998()
{
  sub_100B223AC(*(void **)(v0 + 16));
}

uint64_t sub_100B239A0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100B239D8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100B23A10()
{
  sub_100B21E60(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_100B23A1C()
{
  v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = 0;
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_containerView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIView) init];
  objc_super v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  void *v2 = 0;
  v2[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView____lazy_storage___backgroundView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_blurRadius] = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_previousBlurRadius];
  *(void *)uint64_t v3 = 0;
  v3[8] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100B23B00()
{
  return swift_deallocObject();
}

void sub_100B23B40()
{
  sub_100B216E4(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

id sub_100B23B48()
{
  return sub_100B217A8(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t SegueResponseContext.completionHandler.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

double SyncedLyricsManager.Configuration.maxEndTimeOffset.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t SyncedLyricsManager.Configuration.init(animationDuration:finishLineAnimationDuration:maxEndTimeOffset:maxSelectedLines:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(double *)(a4 + 16) = a5;
  *(double *)(a4 + 24) = a6;
  *(void *)(a4 + 32) = a3;
  return result;
}

uint64_t SyncedLyricsManager.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 56);
  *(void *)a1 = *(void *)(v1 + 24);
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 40);
  *(void *)(a1 + 32) = v4;
  return swift_retain();
}

uint64_t SyncedLyricsManager.configuration.setter(uint64_t a1)
{
  swift_beginAccess();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 40) = v3;
  *(void *)(v1 + 56) = *(void *)(a1 + 32);
  return swift_release();
}

uint64_t SyncedLyricsManager.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t SyncedLyricsManager.delegate.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 72) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*SyncedLyricsManager.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  long long v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = *(void *)(v1 + 72);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_100B23D88;
}

void sub_100B23D88(uint64_t a1, char a2)
{
  long long v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 72) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_100B23E0C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 80) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t SyncedLyricsManager.selectedLines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SyncedLyricsManager.isPlayingSpatial.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t SyncedLyricsManager.isPlayingSpatial.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 88) = a1;
  return result;
}

uint64_t (*SyncedLyricsManager.isPlayingSpatial.modify())()
{
  return j_j__swift_endAccess;
}

void SyncedLyricsManager.spatialOffset.getter()
{
  swift_beginAccess();
  if (*(unsigned char *)(v0 + 88) == 1) {
    Lyrics.spatialOffset.getter();
  }
}

uint64_t SyncedLyricsManager.adjustedElapsedTime.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(double (**)(uint64_t))(v0 + 96);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    double v3 = v1(v2);
    swift_beginAccess();
    double v4 = 0.0;
    if (*(unsigned char *)(v0 + 88) == 1)
    {
      Lyrics.spatialOffset.getter();
      double v4 = v5;
    }
    sub_10006ADFC((uint64_t)v1);
    *(double *)&uint64_t result = v3 - v4;
  }
  else
  {
    *(double *)&uint64_t result = 0.0;
  }
  return result;
}

void sub_100B24080()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t v2 = *(double (**)(uint64_t))(v0 + 96);
  if (!v2) {
    goto LABEL_27;
  }
  uint64_t v3 = swift_retain();
  double v4 = v2(v3);
  swift_beginAccess();
  double v5 = 0.0;
  if (*(unsigned char *)(v0 + 88) == 1)
  {
    Lyrics.spatialOffset.getter();
    double v5 = v6;
  }
  sub_10006ADFC((uint64_t)v2);
  double v7 = v4 - v5;
  uint64_t v8 = *(void *)(v0 + 16);
  Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v28, v7 + 0.1);
  if (!*((void *)&v29 + 1))
  {
    uint64_t v12 = *(void *)(v8 + 40);
    if (*(void *)(v12 + 16))
    {
      sub_1000688E4(v12 + 32, (uint64_t)&v31);
    }
    else
    {
      uint64_t v33 = 0;
      long long v31 = 0u;
      long long v32 = 0u;
    }
    sub_100B25A88((uint64_t)&v28);
    if (*((void *)&v32 + 1)) {
      goto LABEL_6;
    }
    goto LABEL_26;
  }
  sub_100068978(&v28, (uint64_t)&v31);
  if (!*((void *)&v32 + 1))
  {
LABEL_26:
    sub_100B25A88((uint64_t)&v31);
LABEL_27:
    SyncedLyricsManager.update()();
    return;
  }
LABEL_6:
  sub_100068978(&v31, (uint64_t)v34);
  uint64_t v10 = v35;
  uint64_t v9 = v36;
  sub_100068990(v34, v35);
  double v11 = (*(double (**)(uint64_t))(*(void *)(v9 + 8) + 8))(v10);
  sub_1000688E4((uint64_t)v34, (uint64_t)&v31);
  if (v11 >= v7)
  {
    uint64_t v14 = *((void *)&v32 + 1);
    uint64_t v13 = v33;
    sub_100068990(&v31, *((uint64_t *)&v32 + 1));
    double v15 = vabdd_f64(v7, (*(double (**)(uint64_t))(*(void *)(v13 + 8) + 8))(v14));
    sub_1000760E4((uint64_t)&v31);
    if (v15 > 0.1)
    {
      sub_1000688E4((uint64_t)v34, (uint64_t)&v28);
      swift_beginAccess();
      sub_100B25C64((uint64_t)&v28, v1 + 112);
      swift_endAccess();
      sub_100B25A88((uint64_t)&v28);
      swift_beginAccess();
      *(void *)(v1 + 80) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v16 = *(void *)(v1 + 72);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v1, ObjectType, v16);
        swift_unknownObjectRelease();
      }
      if (!swift_unknownObjectWeakLoadStrong()) {
        goto LABEL_23;
      }
      uint64_t v18 = *(void *)(v1 + 72);
      uint64_t v19 = swift_getObjectType();
      (*(void (**)(uint64_t, void *, void, uint64_t, uint64_t, double))(v18 + 16))(v1, v34, 0, v19, v18, v7);
      goto LABEL_22;
    }
  }
  else
  {
    sub_1000760E4((uint64_t)&v31);
  }
  uint64_t v20 = v35;
  uint64_t v21 = v36;
  sub_100068990(v34, v35);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
  uint64_t v23 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v24 = *(void *)(v8 + 40);
    if (v23 >= *(void *)(v24 + 16))
    {
      uint64_t v30 = 0;
      long long v28 = 0u;
      long long v29 = 0u;
      goto LABEL_20;
    }
    if ((v23 & 0x8000000000000000) == 0)
    {
      sub_1000688E4(v24 + 40 * v23 + 32, (uint64_t)&v28);
LABEL_20:
      swift_beginAccess();
      sub_100B25C64((uint64_t)&v28, v1 + 112);
      swift_endAccess();
      sub_100B25A88((uint64_t)&v28);
      sub_100063814(&qword_1010C9A60);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_100E251D0;
      sub_1000688E4((uint64_t)v34, v25 + 32);
      swift_beginAccess();
      *(void *)(v1 + 80) = v25;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      if (!swift_unknownObjectWeakLoadStrong())
      {
LABEL_23:
        sub_1000760E4((uint64_t)v34);
        return;
      }
      uint64_t v26 = *(void *)(v1 + 72);
      uint64_t v27 = swift_getObjectType();
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, double))(v26 + 16))(v1, v34, 1, v27, v26, v7);
LABEL_22:
      swift_unknownObjectRelease();
      goto LABEL_23;
    }
  }
  __break(1u);
}

uint64_t SyncedLyricsManager.elapsedTimeProvider.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 96);
  sub_10007B674(v1);
  return v1;
}

uint64_t SyncedLyricsManager.elapsedTimeProvider.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 96);
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  sub_10007B674(a1);
  sub_10006ADFC(v5);
  sub_100B24080();
  return sub_10006ADFC(a1);
}

void (*SyncedLyricsManager.elapsedTimeProvider.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_100B245F4;
}

void sub_100B245F4(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_100B24080();
  }
}

uint64_t SyncedLyricsManager.__allocating_init(lyrics:configuration:delegate:isPlayingSpatial:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = swift_allocObject();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = sub_100B2595C(a1, a2, a3, a5, v10, ObjectType, a4);
  swift_unknownObjectRelease();
  return v12;
}

uint64_t SyncedLyricsManager.init(lyrics:configuration:delegate:isPlayingSpatial:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = sub_100B2595C(a1, a2, a3, a5, v5, ObjectType, a4);
  swift_unknownObjectRelease();
  return v12;
}

Swift::Void __swiftcall SyncedLyricsManager.update()()
{
  uint64_t v1 = v0;
  sub_100B25544();
  swift_beginAccess();
  sub_100B25A20(v0 + 112, (uint64_t)&v54);
  if (v55)
  {
    sub_100068978(&v54, (uint64_t)v62);
    swift_beginAccess();
    uint64_t v2 = *(double (**)(uint64_t))(v0 + 96);
    if (v2)
    {
      uint64_t v3 = swift_retain();
      double v4 = v2(v3);
      swift_beginAccess();
      double v5 = 0.0;
      if (*(unsigned char *)(v0 + 88) == 1)
      {
        Lyrics.spatialOffset.getter();
        double v5 = v6;
      }
      sub_10006ADFC((uint64_t)v2);
      uint64_t v7 = v0 + 80;
      swift_beginAccess();
      uint64_t v8 = *(void *)(v0 + 80);
      uint64_t v9 = *(void *)(v8 + 16);
      if (v9)
      {
        sub_1000688E4(v8 + 40 * v9 - 8, (uint64_t)&v54);
        uint64_t v11 = v63;
        uint64_t v10 = v64;
        sub_100068990(v62, v63);
        double v12 = (*(double (**)(uint64_t))(*(void *)(v10 + 8) + 8))(v11);
        uint64_t v14 = v55;
        uint64_t v13 = v56;
        sub_100068990(&v54, (uint64_t)v55);
        double v15 = v12 - (*((double (**)(ValueMetadata *))v13[1] + 2))(v14);
        swift_beginAccess();
        uint64_t v16 = *(double (**)(uint64_t, double))(v1 + 24);
        uint64_t v17 = swift_retain();
        double v18 = v16(v17, v15);
        swift_release();
        sub_1000760E4((uint64_t)&v54);
      }
      else
      {
        swift_beginAccess();
        uint64_t v19 = *(double (**)(uint64_t, double))(v0 + 24);
        uint64_t v20 = swift_retain();
        double v18 = v19(v20, 0.0);
        swift_release();
      }
      double v21 = v4 - v5;
      uint64_t v22 = *(void *)(*(void *)v7 + 16);
      if (v22)
      {
        sub_1000688E4(*(void *)v7 + 40 * v22 - 8, (uint64_t)&v54);
        sub_100063814(&qword_1010C9A68);
        if (swift_dynamicCast())
        {
          uint64_t v23 = v59[0];
          uint64_t v24 = v59[1];
          uint64_t v25 = v59[2];
          char v26 = v60;
          swift_beginAccess();
          if (swift_unknownObjectWeakLoadStrong())
          {
            uint64_t v27 = *(void *)(v1 + 72);
            uint64_t ObjectType = swift_getObjectType();
            CGFloat v55 = &type metadata for Lyrics.InstrumentalLine;
            CGFloat v56 = &protocol witness table for Lyrics.InstrumentalLine;
            uint64_t v29 = swift_allocObject();
            *(void *)&long long v54 = v29;
            *(void *)(v29 + 16) = v23;
            *(void *)(v29 + 24) = v24;
            *(void *)(v29 + 32) = v25;
            *(unsigned char *)(v29 + 40) = v26;
            (*(void (**)(uint64_t, long long *, uint64_t, uint64_t, double))(v27 + 24))(v1, &v54, ObjectType, v27, v21);
            swift_unknownObjectRelease();
            sub_1000760E4((uint64_t)&v54);
          }
        }
      }
      swift_beginAccess();
      if (sub_100B24E1C(v62, v1, v21 + *(double *)(v1 + 40), v18) == 1)
      {
        uint64_t v30 = *(void *)(*(void *)v7 + 16);
        if (v30)
        {
          uint64_t v31 = *(void *)v7 + 32;
          swift_bridgeObjectRetain();
          swift_beginAccess();
          do
          {
            sub_1000688E4(v31, (uint64_t)&v54);
            if (swift_unknownObjectWeakLoadStrong())
            {
              uint64_t v32 = *(void *)(v1 + 72);
              uint64_t v33 = swift_getObjectType();
              (*(void (**)(uint64_t, long long *, uint64_t, uint64_t))(v32 + 40))(v1, &v54, v33, v32);
              swift_unknownObjectRelease();
            }
            sub_1000760E4((uint64_t)&v54);
            v31 += 40;
            --v30;
          }
          while (v30);
          swift_bridgeObjectRelease();
        }
      }
      uint64_t v35 = v63;
      uint64_t v34 = v64;
      sub_100068990(v62, v63);
      if ((*(double (**)(uint64_t))(*(void *)(v34 + 8) + 8))(v35) <= v21 + v18)
      {
        uint64_t v36 = *(void *)(*(void *)v7 + 16);
        if (v36)
        {
          sub_1000688E4(*(void *)v7 + 40 * v36 - 8, (uint64_t)v59);
          uint64_t v38 = v63;
          uint64_t v37 = v64;
          sub_100068990(v62, v63);
          double v39 = (*(double (**)(uint64_t))(*(void *)(v37 + 8) + 8))(v38);
          uint64_t v41 = v60;
          uint64_t v40 = v61;
          sub_100068990(v59, v60);
          double v42 = (*(double (**)(uint64_t))(*(void *)(v40 + 8) + 16))(v41);
          uint64_t v44 = v60;
          uint64_t v43 = v61;
          sub_100068990(v59, v60);
          double v45 = (*(double (**)(uint64_t))(*(void *)(v43 + 8) + 16))(v44) - *(double *)(v1 + 48);
          sub_1000688E4((uint64_t)v62, (uint64_t)&v54);
          sub_100063814(&qword_1010C9A68);
          if (swift_dynamicCast()) {
            goto LABEL_37;
          }
          sub_1000688E4((uint64_t)v59, (uint64_t)&v54);
          if (swift_dynamicCast()) {
            goto LABEL_37;
          }
          if (*(void *)(*(void *)(v1 + 80) + 16) >= *(void *)(v1 + 56)) {
            goto LABEL_37;
          }
          uint64_t v46 = v63;
          uint64_t v47 = v64;
          sub_100068990(v62, v63);
          uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 16))(v46, v47);
          uint64_t v49 = v60;
          uint64_t v50 = v61;
          sub_100068990(v59, v60);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v50 + 16))(v49, v50) >= v48
            || (uint64_t v52 = v63,
                uint64_t v51 = v64,
                sub_100068990(v62, v63),
                (*(double (**)(uint64_t))(*(void *)(v51 + 8) + 8))(v52) >= v21))
          {
LABEL_37:
            if (v45 < v21
              || (sub_1000688E4((uint64_t)v59, (uint64_t)v58), (swift_dynamicCast() & 1) != 0)
              && (double v53 = v57,
                  swift_release(),
                  swift_release(),
                  swift_release(),
                  swift_bridgeObjectRelease(),
                  v53 - *(double *)(v1 + 48) < v21))
            {
              sub_100B250E8(v62, COERCE__INT64(v39 - v42), 0, v21);
            }
          }
          else
          {
            sub_100B252B0(v62);
          }
          sub_1000760E4((uint64_t)v59);
        }
        else
        {
          sub_100B250E8(v62, 0, 1, v21);
        }
      }
    }
    sub_1000760E4((uint64_t)v62);
  }
  else
  {
    sub_100B25A88((uint64_t)&v54);
  }
}

uint64_t sub_100B24E1C(void *a1, uint64_t a2, double a3, double a4)
{
  double v7 = a3 + a4;
  uint64_t v9 = a1[3];
  uint64_t v8 = a1[4];
  sub_100068990(a1, v9);
  if ((*(double (**)(uint64_t))(*(void *)(v8 + 8) + 8))(v9) <= v7)
  {
    swift_beginAccess();
    uint64_t v10 = *(void *)(a2 + 80);
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      sub_1000688E4(v10 + 40 * v11 - 8, (uint64_t)v28);
      uint64_t v13 = v29;
      uint64_t v12 = v30;
      sub_100068990(v28, v29);
      double v14 = (*(double (**)(uint64_t))(*(void *)(v12 + 8) + 16))(v13);
      swift_beginAccess();
      double v15 = v14 - *(double *)(a2 + 48);
      sub_1000688E4((uint64_t)a1, (uint64_t)v25);
      sub_100063814(&qword_1010C9A68);
      if ((swift_dynamicCast() & 1) == 0)
      {
        sub_1000688E4((uint64_t)v28, (uint64_t)v25);
        if (!swift_dynamicCast() && *(void *)(*(void *)(a2 + 80) + 16) < *(void *)(a2 + 56))
        {
          uint64_t v16 = a1[3];
          uint64_t v17 = a1[4];
          sub_100068990(a1, v16);
          uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
          uint64_t v19 = v29;
          uint64_t v20 = v30;
          sub_100068990(v28, v29);
          if ((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20) < v18)
          {
            uint64_t v22 = a1[3];
            uint64_t v21 = a1[4];
            sub_100068990(a1, v22);
            if ((*(double (**)(uint64_t))(*(void *)(v21 + 8) + 8))(v22) < a3)
            {
              sub_1000760E4((uint64_t)v28);
              return 2;
            }
          }
        }
      }
      if (v15 < a3
        || (sub_1000688E4((uint64_t)v28, (uint64_t)v27), (swift_dynamicCast() & 1) != 0)
        && (double v24 = v26,
            swift_release(),
            swift_release(),
            swift_release(),
            swift_bridgeObjectRelease(),
            v24 - *(double *)(a2 + 48) < a3))
      {
        sub_1000760E4((uint64_t)v28);
        return 1;
      }
      sub_1000760E4((uint64_t)v28);
    }
  }
  return 0;
}

uint64_t sub_100B250E8(void *a1, uint64_t a2, char a3, double a4)
{
  double v5 = v4;
  sub_100063814(&qword_1010C9A60);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100E251D0;
  sub_1000688E4((uint64_t)a1, v10 + 32);
  swift_beginAccess();
  v5[10] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = v5[2];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_100068990(a1, v12);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  uint64_t v15 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v16 = *(void *)(v11 + 40);
  if (v15 < *(void *)(v16 + 16))
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      sub_1000688E4(v16 + 40 * v15 + 32, (uint64_t)v19);
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v20 = 0;
  memset(v19, 0, sizeof(v19));
LABEL_6:
  swift_beginAccess();
  sub_100B25C64((uint64_t)v19, (uint64_t)(v5 + 14));
  swift_endAccess();
  sub_100B25A88((uint64_t)v19);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v17 = v5[9];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, void *, uint64_t, void, uint64_t, uint64_t, double))(v17 + 8))(v5, a1, a2, a3 & 1, ObjectType, v17, a4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100B252B0(void *a1)
{
  uint64_t v2 = v1;
  sub_1000688E4((uint64_t)a1, (uint64_t)&v24);
  double v4 = v1 + 10;
  swift_beginAccess();
  double v5 = (void *)v2[10];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2[10] = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    double v5 = sub_100AFB4F4(0, v5[2] + 1, 1, v5);
    *double v4 = (uint64_t)v5;
  }
  unint64_t v8 = v5[2];
  unint64_t v7 = v5[3];
  if (v8 >= v7 >> 1) {
    *double v4 = (uint64_t)sub_100AFB4F4((void *)(v7 > 1), v8 + 1, 1, v5);
  }
  uint64_t v9 = *((void *)&v25 + 1);
  uint64_t v10 = v26;
  sub_1009E2334((uint64_t)&v24, *((uint64_t *)&v25 + 1));
  __n128 v11 = __chkstk_darwin();
  uint64_t v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, __n128))(v14 + 16))(v13, v11);
  sub_100B258C4(v8, (uint64_t)v13, v4, v9, v10);
  sub_1000760E4((uint64_t)&v24);
  uint64_t v15 = v2[2];
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  sub_100068990(a1, v16);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  uint64_t v19 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v20 = *(void *)(v15 + 40);
  if (v19 < *(void *)(v20 + 16))
  {
    if ((v19 & 0x8000000000000000) == 0)
    {
      sub_1000688E4(v20 + 40 * v19 + 32, (uint64_t)&v24);
      goto LABEL_10;
    }
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v26 = 0;
  long long v24 = 0u;
  long long v25 = 0u;
LABEL_10:
  swift_beginAccess();
  sub_100B25C64((uint64_t)&v24, (uint64_t)(v2 + 14));
  swift_endAccess();
  sub_100B25A88((uint64_t)&v24);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v21 = v2[9];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, void *, uint64_t, uint64_t))(v21 + 32))(v2, a1, ObjectType, v21);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100B25544()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 112;
  swift_beginAccess();
  sub_100B25A20(v0 + 112, (uint64_t)&v27);
  uint64_t v3 = *((void *)&v28 + 1);
  uint64_t result = sub_100B25A88((uint64_t)&v27);
  if (!v3)
  {
    uint64_t result = swift_beginAccess();
    double v5 = *(double (**)(uint64_t))(v1 + 96);
    if (v5)
    {
      uint64_t v6 = swift_retain();
      double v7 = v5(v6);
      swift_beginAccess();
      double v8 = 0.0;
      if (*(unsigned char *)(v1 + 88) == 1)
      {
        Lyrics.spatialOffset.getter();
        double v8 = v9;
      }
      uint64_t result = sub_10006ADFC((uint64_t)v5);
      uint64_t v10 = *(void *)(v1 + 16);
      uint64_t v11 = *(void *)(v10 + 40);
      if (!*(void *)(v11 + 16))
      {
        __break(1u);
        goto LABEL_24;
      }
      double v12 = v7 - v8;
      sub_1000688E4(v11 + 32, (uint64_t)&v27);
      uint64_t v14 = *((void *)&v28 + 1);
      uint64_t v13 = v29;
      sub_100068990(&v27, *((uint64_t *)&v28 + 1));
      double v15 = (*(double (**)(uint64_t))(*(void *)(v13 + 8) + 8))(v14);
      sub_1000760E4((uint64_t)&v27);
      if (v12 > v15)
      {
        Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v24, v12);
        if (!*((void *)&v25 + 1)) {
          return sub_100B25A88((uint64_t)&v24);
        }
        sub_100068978(&v24, (uint64_t)&v27);
        uint64_t v17 = *((void *)&v28 + 1);
        uint64_t v16 = v29;
        sub_100068990(&v27, *((uint64_t *)&v28 + 1));
        if (v12 < (*(double (**)(uint64_t))(*(void *)(v16 + 8) + 16))(v17))
        {
          uint64_t v18 = &v27;
LABEL_20:
          sub_1000688E4((uint64_t)v18, (uint64_t)&v24);
LABEL_22:
          swift_beginAccess();
          sub_100B25C64((uint64_t)&v24, v2);
          swift_endAccess();
          sub_100B25A88((uint64_t)&v24);
          return sub_1000760E4((uint64_t)&v27);
        }
        uint64_t v20 = *((void *)&v28 + 1);
        uint64_t v21 = v29;
        sub_100068990(&v27, *((uint64_t *)&v28 + 1));
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
        uint64_t v22 = result + 1;
        if (!__OFADD__(result, 1))
        {
          uint64_t v23 = *(void *)(v10 + 40);
          if (v22 >= *(void *)(v23 + 16))
          {
            uint64_t v26 = 0;
            long long v24 = 0u;
            long long v25 = 0u;
            goto LABEL_22;
          }
          if ((v22 & 0x8000000000000000) == 0)
          {
            uint64_t v18 = (long long *)(v23 + 40 * v22 + 32);
            goto LABEL_20;
          }
          goto LABEL_25;
        }
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        return result;
      }
      uint64_t v19 = *(void *)(v10 + 40);
      if (*(void *)(v19 + 16))
      {
        sub_1000688E4(v19 + 32, (uint64_t)&v27);
      }
      else
      {
        uint64_t v29 = 0;
        long long v27 = 0u;
        long long v28 = 0u;
      }
      swift_beginAccess();
      sub_100B25C64((uint64_t)&v27, v2);
      swift_endAccess();
      return sub_100B25A88((uint64_t)&v27);
    }
  }
  return result;
}

uint64_t SyncedLyricsManager.deinit()
{
  swift_release();
  swift_release();
  sub_100046744(v0 + 64);
  swift_bridgeObjectRelease();
  sub_10006ADFC(*(void *)(v0 + 96));
  sub_100B25A88(v0 + 112);
  return v0;
}

uint64_t SyncedLyricsManager.__deallocating_deinit()
{
  swift_release();
  swift_release();
  sub_100046744(v0 + 64);
  swift_bridgeObjectRelease();
  sub_10006ADFC(*(void *)(v0 + 96));
  sub_100B25A88(v0 + 112);

  return swift_deallocClassInstance();
}

uint64_t sub_100B258C4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  double v9 = sub_100068018((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_100068978(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_100B2595C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(a5 + 72) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a5 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a5 + 96) = 0u;
  *(_OWORD *)(a5 + 112) = 0u;
  *(_OWORD *)(a5 + 128) = 0u;
  *(void *)(a5 + 144) = 0;
  *(void *)(a5 + 16) = a1;
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a5 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(a5 + 40) = v12;
  *(void *)(a5 + 56) = *(void *)(a2 + 32);
  swift_beginAccess();
  *(void *)(a5 + 72) = a7;
  swift_unknownObjectWeakAssign();
  *(unsigned char *)(a5 + 88) = a4;
  return a5;
}

uint64_t sub_100B25A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010CAAF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B25A88(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010CAAF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100B25AE8()
{
  return swift_deallocObject();
}

uint64_t sub_100B25AF8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SyncedLyricsManager()
{
  return self;
}

uint64_t initializeWithCopy for SyncedLyricsManager.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  return a1;
}

void *assignWithCopy for SyncedLyricsManager.Configuration(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for SyncedLyricsManager.Configuration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for SyncedLyricsManager.Configuration()
{
  return &type metadata for SyncedLyricsManager.Configuration;
}

uint64_t sub_100B25C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010CAAF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id static SyncedLyricsViewController.Specs.lineChangeSpringTimingParameters()()
{
  id v0 = objc_allocWithZone((Class)UISpringTimingParameters);

  return [v0 initWithMass:1.0 stiffness:100.0 damping:18.0 initialVelocity:0.0];
}

void *SyncedLyricsViewController.Specs.init(_:)@<X0>(void (*a1)(unsigned char *)@<X0>, void *a2@<X8>)
{
  sub_100B2794C(a1, v4);
  return memcpy(a2, v4, 0x219uLL);
}

id static SyncedLyricsViewController.Specs.liftSpringTimingParameters()()
{
  id v0 = objc_allocWithZone((Class)UISpringTimingParameters);

  return [v0 initWithMass:1.0 stiffness:14.0 damping:7.0 initialVelocity:0.0];
}

id static SyncedLyricsViewController.Specs.growSyllableTimingParameters(response:)(double a1)
{
  return UISpringTimingParameters.init(dampingRatio:response:)(1.0, a1);
}

id static SyncedLyricsViewController.Specs.backgroundVocalsSpringTimingParameters(showing:)(char a1)
{
  if (a1)
  {
    id v1 = objc_allocWithZone((Class)UISpringTimingParameters);
    return [v1 initWithMass:1.0 stiffness:30.0 damping:9.0 initialVelocity:0.0];
  }
  else
  {
    sub_100057778(0, &qword_1010CA980);
    return UISpringTimingParameters.init(dampingRatio:response:)(1.0, 0.2);
  }
}

id static SyncedLyricsViewController.Specs.opacityAnimator()()
{
  id v0 = objc_allocWithZone((Class)UIViewPropertyAnimator);

  return [v0 initWithDuration:0 controlPoint1:0.12 controlPoint2:0.33 animations:0.0, 0.2, 0.1];
}

BOOL static SyncedLyricsViewController.Specs.SelectedLinePosition.__derived_enum_equals(_:_:)(long long *a1, long long *a2)
{
  sub_1002C52D0(a1, (uint64_t)v13);
  char v3 = v14;
  if ((v14 & 0x80) == 0)
  {
    double v4 = *(double *)v13;
    sub_1002C52D0(a2, (uint64_t)&v11);
    if ((v12 & 0x80000000) == 0) {
      return v4 == v11.origin.x;
    }
    return 0;
  }
  v14 &= ~0x80u;
  CGFloat v6 = *(double *)v13;
  CGFloat v7 = *(double *)&v13[1];
  CGFloat v8 = *(double *)&v13[2];
  CGFloat v9 = *(double *)&v13[3];
  sub_1002C52D0(a2, (uint64_t)&v11);
  char v10 = v12;
  if ((v12 & 0x80) == 0) {
    return 0;
  }
  v12 &= ~0x80u;
  if (v3)
  {
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (v10) {
      return 0;
    }
    v15.origin.x = v6;
    v15.origin.y = v7;
    v15.size.width = v8;
    v15.size.height = v9;
    if (!CGRectEqualToRect(v15, v11)) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_100B25FC4(uint64_t a1, uint64_t a2)
{
  int v2 = *(char *)(a1 + 32);
  if (v2 < 0)
  {
    if ((*(unsigned char *)(a2 + 32) & 0x80) != 0)
    {
      if (v2)
      {
        if (*(unsigned char *)(a2 + 32)) {
          return 1;
        }
      }
      else if ((*(unsigned char *)(a2 + 32) & 1) == 0 && CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2))
      {
        return 1;
      }
    }
  }
  else if ((*(unsigned char *)(a2 + 32) & 0x80) == 0 && *(double *)a1 == *(double *)a2)
  {
    return 1;
  }
  return 0;
}

__n128 SyncedLyricsViewController.Specs.selectedLinePosition.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 40);
  __n128 result = *(__n128 *)(v1 + 8);
  long long v4 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t SyncedLyricsViewController.Specs.selectedLinePosition.setter(long long *a1)
{
  return sub_1002C52D0(a1, v1 + 8);
}

uint64_t SyncedLyricsViewController.Specs.lineTextAlignment.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t SyncedLyricsViewController.Specs.lineTextAlignment.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 48) = result;
  *(unsigned char *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t SyncedLyricsViewController.Specs.songwritersTextAlignment.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t SyncedLyricsViewController.Specs.songwritersTextAlignment.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 64) = result;
  *(unsigned char *)(v2 + 72) = a2 & 1;
  return result;
}

double SyncedLyricsViewController.Specs.lineSpacing.getter()
{
  return *(double *)(v0 + 80);
}

void SyncedLyricsViewController.Specs.lineSpacing.setter(double a1)
{
  *(double *)(v1 + 80) = a1;
}

void SyncedLyricsViewController.Specs.backgroundVocalsTopSpacing.setter(double a1)
{
  *(double *)(v1 + 88) = a1;
}

__n128 SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 128);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 112) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 128) = result;
  return result;
}

double (*SyncedLyricsViewController.Specs.backgroundVocalsDeselectedTransform.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.lineDelay.getter()
{
  return *(double *)(v0 + 144);
}

void SyncedLyricsViewController.Specs.lineDelay.setter(double a1)
{
  *(double *)(v1 + 144) = a1;
}

double (*SyncedLyricsViewController.Specs.lineDelay.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.maxEndTimeOffset.getter()
{
  return *(double *)(v0 + 152);
}

void SyncedLyricsViewController.Specs.maxEndTimeOffset.setter(double a1)
{
  *(double *)(v1 + 152) = a1;
}

double (*SyncedLyricsSharingTransitionInfo.isSelected.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsViewController.Specs.maxSelectedLines.getter()
{
  return *(void *)(v0 + 160);
}

uint64_t SyncedLyricsViewController.Specs.maxSelectedLines.setter(uint64_t result)
{
  *(void *)(v1 + 160) = result;
  return result;
}

double (*SyncedLyricsSharingTransitionInfo.transform.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.font.getter()
{
  return *(id *)(v0 + 168);
}

void SyncedLyricsViewController.Specs.font.setter(uint64_t a1)
{
  *(void *)(v1 + 168) = a1;
}

double (*SyncedLyricsViewController.Specs.font.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsViewController.Specs.fontLeading.getter()
{
  return *(void *)(v0 + 176);
}

uint64_t SyncedLyricsViewController.Specs.fontLeading.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 176) = result;
  *(unsigned char *)(v2 + 184) = a2 & 1;
  return result;
}

double (*SyncedLyricsViewController.Specs.fontLeading.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.backgroundVocalsFont.getter()
{
  return *(id *)(v0 + 192);
}

void SyncedLyricsViewController.Specs.backgroundVocalsFont.setter(uint64_t a1)
{
  *(void *)(v1 + 192) = a1;
}

double (*SyncedLyricsViewController.Specs.backgroundVocalsFont.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.writtenByFont.getter()
{
  return *(id *)(v0 + 200);
}

void SyncedLyricsViewController.Specs.writtenByFont.setter(uint64_t a1)
{
  *(void *)(v1 + 200) = a1;
}

double (*SyncedLyricsViewController.Specs.writtenByFont.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.songwritersNamesFont.getter()
{
  return *(id *)(v0 + 208);
}

void SyncedLyricsViewController.Specs.songwritersNamesFont.setter(uint64_t a1)
{
  *(void *)(v1 + 208) = a1;
}

double (*SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.emphasizingScaleRange.getter()
{
  return *(double *)(v0 + 216);
}

void SyncedLyricsViewController.Specs.emphasizingScaleRange.setter(double a1, double a2)
{
  *(double *)(v2 + 216) = a1;
  *(double *)(v2 + 224) = a2;
}

double (*SyncedLyricsViewController.Specs.emphasizingScaleRange.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.selectedTextColor.getter()
{
  return *(id *)(v0 + 232);
}

void SyncedLyricsViewController.Specs.selectedTextColor.setter(uint64_t a1)
{
  *(void *)(v1 + 232) = a1;
}

double (*SyncedLyricsViewController.Specs.selectedTextColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.selectedUpcomingTextColor.getter()
{
  return *(id *)(v0 + 240);
}

void SyncedLyricsViewController.Specs.selectedUpcomingTextColor.setter(uint64_t a1)
{
  *(void *)(v1 + 240) = a1;
}

double (*SyncedLyricsViewController.Specs.selectedUpcomingTextColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.deselectedTextColor.getter()
{
  return *(id *)(v0 + 248);
}

void SyncedLyricsViewController.Specs.deselectedTextColor.setter(uint64_t a1)
{
  *(void *)(v1 + 248) = a1;
}

double (*SyncedLyricsViewController.Specs.deselectedTextColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.getter()
{
  return *(id *)(v0 + 256);
}

void SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.setter(uint64_t a1)
{
  *(void *)(v1 + 256) = a1;
}

double (*SyncedLyricsViewController.Specs.selectedBackgroundVocalsTextColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.getter()
{
  return *(id *)(v0 + 264);
}

void SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.setter(uint64_t a1)
{
  *(void *)(v1 + 264) = a1;
}

double (*SyncedLyricsViewController.Specs.selectedUpcomingBackgroundVocalsTextColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.deselectedScrollTextColor.getter()
{
  return *(id *)(v0 + 272);
}

void SyncedLyricsViewController.Specs.deselectedScrollTextColor.setter(uint64_t a1)
{
  *(void *)(v1 + 272) = a1;
}

double (*SyncedLyricsViewController.Specs.deselectedScrollTextColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

__n128 SyncedLyricsViewController.Specs.deselectedTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 296);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 280);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 312);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.deselectedTransform.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 280) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 296) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 312) = result;
  return result;
}

double (*SyncedLyricsViewController.Specs.deselectedTransform.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.hiddenTextColor.getter()
{
  return *(id *)(v0 + 328);
}

void SyncedLyricsViewController.Specs.hiddenTextColor.setter(uint64_t a1)
{
  *(void *)(v1 + 328) = a1;
}

double (*SyncedLyricsViewController.Specs.hiddenTextColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.animationHeadstart.getter()
{
  return *(double *)(v0 + 336);
}

void SyncedLyricsViewController.Specs.animationHeadstart.setter(double a1)
{
  *(double *)(v1 + 336) = a1;
}

double (*SyncedLyricsViewController.Specs.animationHeadstart.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.glowColor.getter()
{
  return *(id *)(v0 + 344);
}

void SyncedLyricsViewController.Specs.glowColor.setter(uint64_t a1)
{
  *(void *)(v1 + 344) = a1;
}

double (*SyncedLyricsViewController.Specs.glowColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.glowRadius.getter()
{
  return *(double *)(v0 + 352);
}

void SyncedLyricsViewController.Specs.glowRadius.setter(double a1)
{
  *(double *)(v1 + 352) = a1;
}

double (*SyncedLyricsViewController.Specs.glowRadius.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.glowRange.getter()
{
  return *(double *)(v0 + 360);
}

void SyncedLyricsViewController.Specs.glowRange.setter(double a1, double a2)
{
  *(double *)(v2 + 360) = a1;
  *(double *)(v2 + 368) = a2;
}

double (*SyncedLyricsViewController.Specs.glowRange.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.lineProgressionGradientColor.getter()
{
  return *(id *)(v0 + 376);
}

void SyncedLyricsViewController.Specs.lineProgressionGradientColor.setter(uint64_t a1)
{
  *(void *)(v1 + 376) = a1;
}

double (*SyncedLyricsViewController.Specs.lineProgressionGradientColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.getter()
{
  return *(id *)(v0 + 384);
}

void SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.setter(uint64_t a1)
{
  *(void *)(v1 + 384) = a1;
}

double (*SyncedLyricsViewController.Specs.lineProgressionBackgroundVocalsGradientColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.lineProgressionGradientFeather.getter()
{
  return *(double *)(v0 + 392);
}

void SyncedLyricsViewController.Specs.lineProgressionGradientFeather.setter(double a1)
{
  *(double *)(v1 + 392) = a1;
}

double (*SyncedLyricsViewController.Specs.lineProgressionGradientFeather.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

__n128 SyncedLyricsViewController.Specs.touchDownTransform.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 416);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 400);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 432);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsViewController.Specs.touchDownTransform.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 400) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 416) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 432) = result;
  return result;
}

double (*SyncedLyricsViewController.Specs.touchDownTransform.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.highlightLabelAlpha.getter()
{
  return *(double *)(v0 + 448);
}

void SyncedLyricsViewController.Specs.highlightLabelAlpha.setter(double a1)
{
  *(double *)(v1 + 448) = a1;
}

double (*SyncedLyricsViewController.Specs.highlightLabelAlpha.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

id SyncedLyricsViewController.Specs.highlightViewBackgroundColor.getter()
{
  return *(id *)(v0 + 456);
}

void SyncedLyricsViewController.Specs.highlightViewBackgroundColor.setter(uint64_t a1)
{
  *(void *)(v1 + 456) = a1;
}

double (*SyncedLyricsViewController.Specs.highlightViewBackgroundColor.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.highlightViewCornerRadius.getter()
{
  return *(double *)(v0 + 464);
}

void SyncedLyricsViewController.Specs.highlightViewCornerRadius.setter(double a1)
{
  *(double *)(v1 + 464) = a1;
}

double (*SyncedLyricsViewController.Specs.highlightViewCornerRadius.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.highlightViewMargin.getter()
{
  return *(double *)(v0 + 472);
}

void SyncedLyricsViewController.Specs.highlightViewMargin.setter(double a1)
{
  *(double *)(v1 + 472) = a1;
}

double (*SyncedLyricsViewController.Specs.highlightViewMargin.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.getter()
{
  return *(double *)(v0 + 480);
}

void SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.setter(double a1)
{
  *(double *)(v1 + 480) = a1;
}

double (*SyncedLyricsViewController.Specs.instrumentalBreakVisualizationMinSeconds.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.getter()
{
  return *(void *)(v0 + 488);
}

uint64_t SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.setter(uint64_t result)
{
  *(void *)(v1 + 488) = result;
  return result;
}

double (*SyncedLyricsViewController.Specs.instrumentalBreakCountdownDotCount.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.getter()
{
  return *(double *)(v0 + 496);
}

void SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.setter(double a1)
{
  *(double *)(v1 + 496) = a1;
}

double (*SyncedLyricsViewController.Specs.instrumentalBreakViewHeight.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.syllableLift.getter()
{
  return *(double *)(v0 + 504);
}

void SyncedLyricsViewController.Specs.syllableLift.setter(double a1)
{
  *(double *)(v1 + 504) = a1;
}

double (*SyncedLyricsViewController.Specs.syllableLift.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.getter()
{
  return *(double *)(v0 + 512);
}

void SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.setter(double a1)
{
  *(double *)(v1 + 512) = a1;
}

double (*SyncedLyricsViewController.Specs.vocalGroupWidthCoefficient.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.getter()
{
  return *(double *)(v0 + 520);
}

void SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.setter(double a1)
{
  *(double *)(v1 + 520) = a1;
}

double (*SyncedLyricsViewController.Specs.lineTapProgressFreezeDuration.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.getter()
{
  return *(double *)(v0 + 528);
}

void SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.setter(double a1)
{
  *(double *)(v1 + 528) = a1;
}

double (*SyncedLyricsViewController.Specs.lineFinishProgressAnimationDuration.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.getter()
{
  return *(unsigned __int8 *)(v0 + 536);
}

uint64_t SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 536) = result;
  return result;
}

double (*SyncedLyricsViewController.Specs.showsVerticalScrollIndicator.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

void *SyncedLyricsViewController.Specs.with(_:)@<X0>(void (*a1)(unsigned char *)@<X0>, void *a2@<X8>)
{
  memcpy(v6, v2, 0x219uLL);
  sub_100262548((uint64_t)v2);
  a1(v6);
  return memcpy(a2, v6, 0x219uLL);
}

void *sub_100B26ACC()
{
  sub_100B2794C(0, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.default, v1, 0x219uLL);
}

void *SyncedLyricsViewController.Specs.default.unsafeMutableAddressor()
{
  if (qword_1010C8558 != -1) {
    swift_once();
  }
  return &static SyncedLyricsViewController.Specs.default;
}

uint64_t static SyncedLyricsViewController.Specs.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100B2723C(&qword_1010C8558, (uint64_t)&static SyncedLyricsViewController.Specs.default, a1);
}

void *sub_100B26B84()
{
  sub_100B2794C((void (*)(unsigned char *))sub_100B26BDC, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.iPad, v1, 0x219uLL);
}

void sub_100B26BDC(uint64_t a1)
{
  *(void *)(a1 + 8) = 0x4034000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 80) = xmmword_100E525D0;
  *(void *)(a1 + 152) = 0x3FE0000000000000;
  long long v2 = self;
  id v3 = [v2 systemFontOfSize:48.0 weight:UIFontWeightBold];

  *(void *)(a1 + 168) = v3;
  id v4 = [v2 systemFontOfSize:32.0 weight:UIFontWeightBold];

  *(void *)(a1 + 192) = v4;
  *(void *)(a1 + 176) = 0x404A000000000000;
  *(unsigned char *)(a1 + 184) = 0;
}

void *SyncedLyricsViewController.Specs.iPad.unsafeMutableAddressor()
{
  if (qword_1010C8560 != -1) {
    swift_once();
  }
  return &static SyncedLyricsViewController.Specs.iPad;
}

uint64_t static SyncedLyricsViewController.Specs.iPad.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100B2723C(&qword_1010C8560, (uint64_t)&static SyncedLyricsViewController.Specs.iPad, a1);
}

void *sub_100B26D28()
{
  sub_100B2794C((void (*)(unsigned char *))sub_100B26D80, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.vision, v1, 0x219uLL);
}

void sub_100B26D80(uint64_t a1)
{
  *(void *)(a1 + 8) = 0x4042000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 80) = xmmword_100E525D0;
  *(void *)(a1 + 152) = 0x3FE0000000000000;
  long long v2 = self;
  id v3 = [v2 systemFontOfSize:56.0 weight:UIFontWeightBold];

  *(void *)(a1 + 168) = v3;
  id v4 = [v2 systemFontOfSize:34.0 weight:UIFontWeightBold];

  *(void *)(a1 + 192) = v4;
  *(unsigned char *)(a1 + 536) = 0;
  *(void *)(a1 + 176) = 0x404C000000000000;
  *(unsigned char *)(a1 + 184) = 0;
  double v5 = self;
  id v6 = [v5 whiteColor];
  id v7 = [v6 colorWithAlphaComponent:0.175];

  *(void *)(a1 + 384) = v7;
  id v8 = [v5 whiteColor];

  *(void *)(a1 + 376) = v8;
  id v9 = [v5 whiteColor];
  id v10 = [v9 colorWithAlphaComponent:0.35];

  id v11 = [v5 labelColor];
  id v12 = [v11 colorWithAlphaComponent:0.55];

  id v13 = objc_allocWithZone((Class)UIColor);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  *(void *)(v14 + 24) = v10;
  v19[4] = sub_100B2942C;
  v19[5] = v14;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  _OWORD v19[2] = sub_10004DA48;
  v19[3] = &unk_10100CDA8;
  CGRect v15 = _Block_copy(v19);
  id v16 = v12;
  id v17 = v10;
  swift_release();
  id v18 = [v13 initWithDynamicProvider:v15];

  _Block_release(v15);
  *(void *)(a1 + 240) = v18;
}

void *SyncedLyricsViewController.Specs.vision.unsafeMutableAddressor()
{
  if (qword_1010C8568 != -1) {
    swift_once();
  }
  return &static SyncedLyricsViewController.Specs.vision;
}

uint64_t static SyncedLyricsViewController.Specs.vision.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100B2723C(&qword_1010C8568, (uint64_t)&static SyncedLyricsViewController.Specs.vision, a1);
}

void *sub_100B270B4()
{
  sub_100B2794C((void (*)(unsigned char *))sub_100B2710C, v1);
  return memcpy(&static SyncedLyricsViewController.Specs.alternative, v1, 0x219uLL);
}

void sub_100B2710C(uint64_t a1)
{
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(unsigned char *)(a1 + 40) = -127;
  *(void *)(a1 + 160) = 1;
  long long v2 = self;
  id v3 = [v2 systemFontOfSize:28.0 weight:UIFontWeightBold];

  *(void *)(a1 + 168) = v3;
  id v4 = [v2 systemFontOfSize:24.0 weight:UIFontWeightBold];

  *(void *)(a1 + 192) = v4;
}

void *SyncedLyricsViewController.Specs.alternative.unsafeMutableAddressor()
{
  if (qword_1010C8570 != -1) {
    swift_once();
  }
  return &static SyncedLyricsViewController.Specs.alternative;
}

uint64_t static SyncedLyricsViewController.Specs.alternative.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100B2723C(&qword_1010C8570, (uint64_t)&static SyncedLyricsViewController.Specs.alternative, a1);
}

uint64_t sub_100B2723C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }

  return sub_100B288FC(a2, a3);
}

id static SyncedLyricsViewController.Specs.syllableBySyllableLineChangeSpringTimingParameters(gap:)(uint64_t a1, char a2)
{
  return sub_100B28934(a1, a2 & 1);
}

id static SyncedLyricsViewController.Specs.tapSpringTimingParameters()()
{
  id v0 = objc_allocWithZone((Class)UISpringTimingParameters);

  return [v0 initWithMass:2.0 stiffness:260.0 damping:50.0 initialVelocity:0.0];
}

id sub_100B273B4()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s14descr100FBE369V5SpecsV27CustomCurveAnimationFactoryCMa();
  [super dealloc];
}

uint64_t sub_100B273F0(void *__src, const void *a2)
{
  memcpy(v4, __src, 0x219uLL);
  memcpy(__dst, a2, 0x219uLL);
  return _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v4, (uint64_t)__dst) & 1;
}

id sub_100B27448(void *a1, void *a2, void *a3)
{
  id v4 = [a1 accessibilityContrast];
  if (v4 == (id)-1)
  {
    id v6 = a3;
  }
  else
  {
    BOOL v5 = v4 == (id)1;
    id v6 = a3;
    if (v5) {
      id v6 = a2;
    }
  }

  return v6;
}

uint64_t _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    goto LABEL_33;
  }
  sub_1002C52D0((long long *)(a1 + 8), (uint64_t)v14);
  sub_1002C52D0((long long *)(a2 + 8), (uint64_t)v13);
  sub_1002C52D0(v14, (uint64_t)v15);
  char v4 = v16;
  if (v16 < 0)
  {
    v16 &= ~0x80u;
    CGFloat v7 = *(double *)v15;
    CGFloat v8 = *(double *)&v15[1];
    CGFloat v9 = *(double *)&v15[2];
    CGFloat v10 = *(double *)&v15[3];
    sub_1002C52D0(v13, (uint64_t)&v17);
    char v11 = v18;
    if ((v18 & 0x80) == 0) {
      goto LABEL_33;
    }
    v18 &= ~0x80u;
    if (v4)
    {
      if ((v11 & 1) == 0) {
        goto LABEL_33;
      }
    }
    else
    {
      if (v11) {
        goto LABEL_33;
      }
      v19.origin.x = v7;
      v19.origin.y = v8;
      v19.size.width = v9;
      v19.size.height = v10;
      if (!CGRectEqualToRect(v19, v17)) {
        goto LABEL_33;
      }
    }
  }
  else
  {
    double v5 = *(double *)v15;
    sub_1002C52D0(v13, (uint64_t)&v17);
    char v6 = 0;
    if (v18 < 0 || v5 != v17.origin.x) {
      return v6 & 1;
    }
  }
  char v6 = *(unsigned char *)(a2 + 56);
  if (*(unsigned char *)(a1 + 56))
  {
    if (!*(unsigned char *)(a2 + 56)) {
      return v6 & 1;
    }
  }
  else
  {
    if (*(void *)(a1 + 48) != *(void *)(a2 + 48)) {
      char v6 = 1;
    }
    if (v6) {
      goto LABEL_33;
    }
  }
  char v6 = *(unsigned char *)(a2 + 72);
  if (*(unsigned char *)(a1 + 72))
  {
    if (!*(unsigned char *)(a2 + 72)) {
      return v6 & 1;
    }
  }
  else
  {
    if (*(void *)(a1 + 64) != *(void *)(a2 + 64)) {
      char v6 = 1;
    }
    if (v6) {
      goto LABEL_33;
    }
  }
  if (*(double *)(a1 + 80) != *(double *)(a2 + 80)
    || *(double *)(a1 + 88) != *(double *)(a2 + 88)
    || (static CGAffineTransform.== infix(_:_:)() & 1) == 0
    || *(double *)(a1 + 144) != *(double *)(a2 + 144)
    || *(double *)(a1 + 152) != *(double *)(a2 + 152)
    || *(void *)(a1 + 160) != *(void *)(a2 + 160)
    || (sub_100057778(0, (unint64_t *)&qword_1010CAA20), (static NSObject.== infix(_:_:)() & 1) == 0))
  {
LABEL_33:
    char v6 = 0;
    return v6 & 1;
  }
  char v6 = *(unsigned char *)(a2 + 184);
  if ((*(unsigned char *)(a1 + 184) & 1) == 0)
  {
    if (*(double *)(a1 + 176) != *(double *)(a2 + 176)) {
      char v6 = 1;
    }
    if ((v6 & 1) == 0)
    {
LABEL_38:
      if ((static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && *(double *)(a1 + 216) == *(double *)(a2 + 216)
        && *(double *)(a1 + 224) == *(double *)(a2 + 224)
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static CGAffineTransform.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && *(double *)(a1 + 336) == *(double *)(a2 + 336)
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && *(double *)(a1 + 352) == *(double *)(a2 + 352)
        && *(double *)(a1 + 360) == *(double *)(a2 + 360)
        && *(double *)(a1 + 368) == *(double *)(a2 + 368)
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && *(double *)(a1 + 392) == *(double *)(a2 + 392)
        && (static CGAffineTransform.== infix(_:_:)() & 1) != 0
        && *(double *)(a1 + 448) == *(double *)(a2 + 448)
        && (static NSObject.== infix(_:_:)() & 1) != 0
        && *(double *)(a1 + 464) == *(double *)(a2 + 464)
        && *(double *)(a1 + 472) == *(double *)(a2 + 472)
        && *(double *)(a1 + 480) == *(double *)(a2 + 480)
        && *(void *)(a1 + 488) == *(void *)(a2 + 488)
        && *(double *)(a1 + 496) == *(double *)(a2 + 496)
        && *(double *)(a1 + 504) == *(double *)(a2 + 504)
        && *(double *)(a1 + 512) == *(double *)(a2 + 512)
        && *(double *)(a1 + 520) == *(double *)(a2 + 520)
        && *(double *)(a1 + 528) == *(double *)(a2 + 528))
      {
        char v6 = ((*(unsigned char *)(a1 + 536) & 1) == 0) ^ *(unsigned char *)(a2 + 536);
        return v6 & 1;
      }
      goto LABEL_33;
    }
    goto LABEL_33;
  }
  if (*(unsigned char *)(a2 + 184)) {
    goto LABEL_38;
  }
  return v6 & 1;
}

void *sub_100B2794C@<X0>(void (*a1)(unsigned char *)@<X0>, void *a2@<X8>)
{
  *(void *)__src = 0x404E000000000000;
  *(void *)&__src[8] = 0x4028000000000000;
  *(void *)&__src[48] = 0;
  memset(&__src[16], 0, 25);
  __src[56] = 1;
  *(void *)&__src[64] = 0;
  __src[72] = 1;
  *(_OWORD *)&__src[80] = xmmword_100E525E0;
  CGAffineTransformMakeScale(&aBlock, 0.9, 0.9);
  *(CGAffineTransform *)&__src[96] = aBlock;
  *(_OWORD *)&__src[144] = xmmword_100E525F0;
  *(void *)&__src[160] = 2;
  sub_100057778(0, (unint64_t *)&qword_1010C8930);
  *(void *)&__src[168] = static UIFont.preferredFont(forTextStyle:weight:)();
  *(void *)&__src[176] = 0;
  __src[184] = 1;
  *(void *)&__src[192] = static UIFont.shortEmphasizedPreferredFont(forTextStyle:)();
  objc_super v2 = self;
  *(void *)&__src[200] = [v2 systemFontOfSize:22.0 weight:UIFontWeightBold];
  *(void *)&__src[208] = [v2 systemFontOfSize:22.0 weight:UIFontWeightMedium];
  *(_OWORD *)&__src[216] = xmmword_100E52600;
  id v3 = self;
  id v4 = [v3 whiteColor];
  id v5 = [v3 labelColor];
  id v6 = objc_allocWithZone((Class)UIColor);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  *(void *)(v7 + 24) = v4;
  *(void *)&aBlock.tx = sub_100B2942C;
  *(void *)&aBlock.ty = v7;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_10004DA48;
  *(void *)&aBlock.d = &unk_10100CE48;
  CGFloat v8 = _Block_copy(&aBlock);
  id v9 = v5;
  id v10 = v4;
  swift_release();
  id v11 = [v6 initWithDynamicProvider:v8];

  _Block_release(v8);
  *(void *)&__src[232] = v11;
  id v12 = [v3 whiteColor];
  id v13 = [v12 colorWithAlphaComponent:0.35];

  id v14 = [v3 labelColor];
  id v15 = [v14 colorWithAlphaComponent:0.85];

  id v16 = objc_allocWithZone((Class)UIColor);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v15;
  *(void *)(v17 + 24) = v13;
  *(void *)&aBlock.tx = sub_100B2942C;
  *(void *)&aBlock.ty = v17;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_10004DA48;
  *(void *)&aBlock.d = &unk_10100CE98;
  char v18 = _Block_copy(&aBlock);
  id v19 = v15;
  id v20 = v13;
  swift_release();
  id v21 = [v16 initWithDynamicProvider:v18];

  _Block_release(v18);
  *(void *)&__src[240] = v21;
  id v22 = [v3 whiteColor];
  id v23 = [v22 colorWithAlphaComponent:0.175];

  id v24 = [v3 labelColor];
  id v25 = [v24 colorWithAlphaComponent:0.4];

  id v26 = objc_allocWithZone((Class)UIColor);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v25;
  *(void *)(v27 + 24) = v23;
  *(void *)&aBlock.tx = sub_100B2942C;
  *(void *)&aBlock.ty = v27;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_10004DA48;
  *(void *)&aBlock.d = &unk_10100CEE8;
  long long v28 = _Block_copy(&aBlock);
  id v29 = v25;
  id v30 = v23;
  swift_release();
  id v31 = [v26 initWithDynamicProvider:v28];

  _Block_release(v28);
  *(void *)&__src[248] = v31;
  id v32 = [v3 whiteColor];
  id v33 = [v32 colorWithAlphaComponent:0.35];

  id v34 = [v3 labelColor];
  id v35 = [v34 colorWithAlphaComponent:0.85];

  id v36 = objc_allocWithZone((Class)UIColor);
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v35;
  *(void *)(v37 + 24) = v33;
  *(void *)&aBlock.tx = sub_100B2942C;
  *(void *)&aBlock.ty = v37;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_10004DA48;
  *(void *)&aBlock.d = &unk_10100CF38;
  uint64_t v38 = _Block_copy(&aBlock);
  id v39 = v35;
  id v40 = v33;
  swift_release();
  id v41 = [v36 initWithDynamicProvider:v38];

  _Block_release(v38);
  *(void *)&__src[256] = v41;
  id v42 = [v3 whiteColor];
  id v43 = [v42 colorWithAlphaComponent:0.175];

  id v44 = [v3 labelColor];
  id v45 = [v44 colorWithAlphaComponent:0.65];

  id v46 = objc_allocWithZone((Class)UIColor);
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v45;
  *(void *)(v47 + 24) = v43;
  *(void *)&aBlock.tx = sub_100B2942C;
  *(void *)&aBlock.ty = v47;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_10004DA48;
  *(void *)&aBlock.d = &unk_10100CF88;
  uint64_t v48 = _Block_copy(&aBlock);
  id v49 = v45;
  id v50 = v43;
  swift_release();
  id v51 = [v46 initWithDynamicProvider:v48];

  _Block_release(v48);
  *(void *)&__src[264] = v51;
  id v52 = [v3 whiteColor];
  id v53 = [v52 colorWithAlphaComponent:0.4];

  id v54 = [v3 labelColor];
  id v55 = [v54 colorWithAlphaComponent:0.4];

  id v56 = objc_allocWithZone((Class)UIColor);
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = v55;
  *(void *)(v57 + 24) = v53;
  *(void *)&aBlock.tx = sub_100B2942C;
  *(void *)&aBlock.ty = v57;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_10004DA48;
  *(void *)&aBlock.d = &unk_10100CFD8;
  CGFloat v58 = _Block_copy(&aBlock);
  id v59 = v55;
  id v60 = v53;
  swift_release();
  id v61 = [v56 initWithDynamicProvider:v58];

  _Block_release(v58);
  *(void *)&__src[272] = v61;
  CGAffineTransformMakeScale(&aBlock, 0.98, 0.98);
  *(CGAffineTransform *)&__src[280] = aBlock;
  *(void *)&__src[328] = [v3 clearColor];
  *(void *)&__src[336] = 0x3FB999999999999ALL;
  *(void *)&__src[344] = [v3 whiteColor];
  *(_OWORD *)&__src[352] = xmmword_100E52610;
  *(void *)&__src[368] = 0x3FD999999999999ALL;
  id v62 = [v3 whiteColor];
  id v63 = [v3 tintColor];
  id v64 = objc_allocWithZone((Class)UIColor);
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = v63;
  *(void *)(v65 + 24) = v62;
  *(void *)&aBlock.tx = sub_100B2942C;
  *(void *)&aBlock.ty = v65;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_10004DA48;
  *(void *)&aBlock.d = &unk_10100D028;
  uint64_t v66 = _Block_copy(&aBlock);
  id v67 = v63;
  id v68 = v62;
  swift_release();
  id v69 = [v64 initWithDynamicProvider:v66];

  _Block_release(v66);
  *(void *)&__src[376] = v69;
  id v70 = [v3 whiteColor];
  id v71 = [v70 colorWithAlphaComponent:0.175];

  id v72 = [v3 tintColor];
  id v73 = [v72 colorWithAlphaComponent:0.175];

  id v74 = objc_allocWithZone((Class)UIColor);
  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 16) = v73;
  *(void *)(v75 + 24) = v71;
  *(void *)&aBlock.tx = sub_100B2942C;
  *(void *)&aBlock.ty = v75;
  *(void *)&aBlock.a = _NSConcreteStackBlock;
  *(void *)&aBlock.b = 1107296256;
  *(void *)&aBlock.c = sub_10004DA48;
  *(void *)&aBlock.d = &unk_10100D078;
  double v76 = _Block_copy(&aBlock);
  id v77 = v73;
  id v78 = v71;
  swift_release();
  id v79 = [v74 initWithDynamicProvider:v76];

  _Block_release(v76);
  *(void *)&__src[384] = v79;
  *(void *)&__src[392] = 0x403E000000000000;
  CGAffineTransformMakeScale(&aBlock, 0.95, 0.95);
  *(CGAffineTransform *)&__src[400] = aBlock;
  *(void *)&__src[448] = 0x3FEB333333333333;
  *(void *)&__src[456] = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.08];
  __asm { FMOV            V0.2D, #16.0 }
  *(_OWORD *)&__src[464] = _Q0;
  *(void *)&__src[480] = 0x401C000000000000;
  *(void *)&__src[488] = 3;
  *(_OWORD *)&__src[496] = xmmword_100E52620;
  *(_OWORD *)&__src[512] = xmmword_100E52630;
  *(void *)&__src[528] = 0x3FD0000000000000;
  __src[536] = 1;
  if (a1)
  {
    swift_retain();
    a1(__src);
    sub_10006ADFC((uint64_t)a1);
    sub_10006ADFC((uint64_t)a1);
  }
  return memcpy(a2, __src, 0x219uLL);
}

void _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV35animateWithHighlightAnimationCurves11highlighted14fadeAnimations09transformP0ySb_yycyyctFZ_0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v8 = a1 & 1;
  if (a1) {
    double v9 = 24.0;
  }
  else {
    double v9 = 50.0;
  }
  if (a1) {
    double v10 = 322.0;
  }
  else {
    double v10 = 300.0;
  }
  double v11 = 1.0;
  if (a1) {
    double v12 = 1.0;
  }
  else {
    double v12 = 2.0;
  }
  double v13 = 0.0;
  id v14 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:v12 stiffness:v10 damping:v9 initialVelocity:0.0, 0.0];
  if (v8)
  {
    double v15 = 0.55;
    double v16 = 0.2;
    double v17 = 0.0;
  }
  else
  {
    double v15 = 0.25;
    double v13 = 0.1;
    double v16 = 0.3;
    double v11 = 0.1;
    double v17 = 0.25;
  }
  char v18 = (objc_class *)_s14descr100FBE369V5SpecsV27CustomCurveAnimationFactoryCMa();
  id v19 = (char *)objc_allocWithZone(v18);
  id v20 = (double *)&v19[OBJC_IVAR____TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory_controlPoint1];
  *id v20 = v17;
  v20[1] = v13;
  id v21 = (double *)&v19[OBJC_IVAR____TtCVC11MusicCoreUI26SyncedLyricsViewController5SpecsP33_24E29E585AB6D5A617C4CD1FBB85399D27CustomCurveAnimationFactory_controlPoint2];
  *id v21 = v15;
  v21[1] = v11;
  v42.receiver = v19;
  v42.super_class = v18;
  id v22 = [super init];
  id v23 = self;
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v37 = 1107296256;
  uint64_t v38 = sub_100020238;
  id v39 = &unk_10100CDD0;
  id v24 = _Block_copy(&aBlock);
  id v25 = v22;
  swift_retain();
  swift_release();
  [v23 _animateWithDuration:0 delay:v25 options:v24 factory:0 animations:v16 completion:v13];
  _Block_release(v24);

  [v14 settlingDuration];
  double v27 = v26;
  [v14 mass];
  double v29 = v28;
  [v14 stiffness];
  double v31 = v30;
  [v14 damping];
  double v33 = v32;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v37 = 1107296256;
  uint64_t v38 = sub_100020238;
  id v39 = &unk_10100CDF8;
  id v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v23 _animateUsingSpringWithDuration:0 delay:v34 options:0 mass:v27 stiffness:v13 damping:v29 initialVelocity:v31 animations:v33 completion:0.0];

  _Block_release(v34);
}

uint64_t sub_100B288FC(uint64_t a1, uint64_t a2)
{
  return a2;
}

id sub_100B28934(uint64_t a1, char a2)
{
  if (a2)
  {
    id v7 = objc_allocWithZone((Class)UISpringTimingParameters);
    return [v7 initWithMass:1.0 stiffness:100.0 damping:18.0 initialVelocity:0.0];
  }
  else
  {
    double v2 = (*(double *)&a1 + -0.2) / 0.55;
    if (*(double *)&a1 > 0.75) {
      double v2 = 1.0;
    }
    double v3 = 0.0;
    if (*(double *)&a1 >= 0.2) {
      double v3 = v2;
    }
    double v4 = (1.0 - v3) * 0.12 + 0.78;
    double v5 = v3 * 0.27 + 0.48;
    sub_100057778(0, &qword_1010CA980);
    return UISpringTimingParameters.init(dampingRatio:response:)(v4, v5);
  }
}

void _s14descr100FBE369V5SpecsVwxx(uint64_t a1)
{
  double v2 = *(void **)(a1 + 456);
}

uint64_t _s14descr100FBE369V5SpecsVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v3 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v3;
  long long v4 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v4;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  double v5 = *(void **)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v5;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  id v7 = *(void **)(a2 + 192);
  id v6 = *(void **)(a2 + 200);
  *(void *)(a1 + 192) = v7;
  *(void *)(a1 + 200) = v6;
  int v8 = *(void **)(a2 + 208);
  *(void *)(a1 + 208) = v8;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  double v9 = *(void **)(a2 + 232);
  double v10 = *(void **)(a2 + 240);
  *(void *)(a1 + 232) = v9;
  *(void *)(a1 + 240) = v10;
  uint64_t v40 = *(void **)(a2 + 248);
  uint64_t v41 = *(void **)(a2 + 256);
  *(void *)(a1 + 248) = v40;
  *(void *)(a1 + 256) = v41;
  objc_super v42 = *(void **)(a2 + 264);
  id v43 = *(void **)(a2 + 272);
  *(void *)(a1 + 264) = v42;
  *(void *)(a1 + 272) = v43;
  long long v11 = *(_OWORD *)(a2 + 280);
  long long v12 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v12;
  *(_OWORD *)(a1 + 280) = v11;
  uint64_t v13 = *(void *)(a2 + 336);
  id v39 = *(void **)(a2 + 328);
  *(void *)(a1 + 328) = v39;
  *(void *)(a1 + 336) = v13;
  double v15 = *(void **)(a2 + 344);
  uint64_t v14 = *(void *)(a2 + 352);
  *(void *)(a1 + 344) = v15;
  *(void *)(a1 + 352) = v14;
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  double v16 = *(void **)(a2 + 376);
  double v17 = *(void **)(a2 + 384);
  *(void *)(a1 + 376) = v16;
  *(void *)(a1 + 384) = v17;
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  long long v18 = *(_OWORD *)(a2 + 400);
  long long v19 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v19;
  *(_OWORD *)(a1 + 400) = v18;
  id v20 = *(void **)(a2 + 456);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = v20;
  long long v21 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v21;
  long long v22 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v22;
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
  id v23 = v5;
  id v24 = v7;
  id v25 = v6;
  id v26 = v8;
  id v27 = v9;
  id v28 = v10;
  id v29 = v40;
  id v30 = v41;
  id v31 = v42;
  id v32 = v43;
  id v33 = v39;
  id v34 = v15;
  id v35 = v16;
  id v36 = v17;
  id v37 = v20;
  return a1;
}

uint64_t _s14descr100FBE369V5SpecsVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  long long v4 = *(_OWORD *)(a2 + 8);
  long long v5 = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 8) = v4;
  uint64_t v6 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  int v8 = *(void **)(a2 + 168);
  double v9 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = v8;
  id v10 = v8;

  uint64_t v11 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v11;
  long long v12 = *(void **)(a2 + 192);
  uint64_t v13 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = v12;
  id v14 = v12;

  double v15 = *(void **)(a2 + 200);
  double v16 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = v15;
  id v17 = v15;

  long long v18 = *(void **)(a2 + 208);
  long long v19 = *(void **)(a1 + 208);
  *(void *)(a1 + 208) = v18;
  id v20 = v18;

  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  long long v21 = *(void **)(a2 + 232);
  long long v22 = *(void **)(a1 + 232);
  *(void *)(a1 + 232) = v21;
  id v23 = v21;

  id v24 = *(void **)(a2 + 240);
  id v25 = *(void **)(a1 + 240);
  *(void *)(a1 + 240) = v24;
  id v26 = v24;

  id v27 = *(void **)(a2 + 248);
  id v28 = *(void **)(a1 + 248);
  *(void *)(a1 + 248) = v27;
  id v29 = v27;

  id v30 = *(void **)(a2 + 256);
  id v31 = *(void **)(a1 + 256);
  *(void *)(a1 + 256) = v30;
  id v32 = v30;

  id v33 = *(void **)(a2 + 264);
  id v34 = *(void **)(a1 + 264);
  *(void *)(a1 + 264) = v33;
  id v35 = v33;

  id v36 = *(void **)(a2 + 272);
  id v37 = *(void **)(a1 + 272);
  *(void *)(a1 + 272) = v36;
  id v38 = v36;

  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  id v39 = *(void **)(a2 + 328);
  uint64_t v40 = *(void **)(a1 + 328);
  *(void *)(a1 + 328) = v39;
  id v41 = v39;

  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  objc_super v42 = *(void **)(a2 + 344);
  id v43 = *(void **)(a1 + 344);
  *(void *)(a1 + 344) = v42;
  id v44 = v42;

  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  id v45 = *(void **)(a2 + 376);
  id v46 = *(void **)(a1 + 376);
  *(void *)(a1 + 376) = v45;
  id v47 = v45;

  uint64_t v48 = *(void **)(a2 + 384);
  id v49 = *(void **)(a1 + 384);
  *(void *)(a1 + 384) = v48;
  id v50 = v48;

  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  id v51 = *(void **)(a2 + 456);
  id v52 = *(void **)(a1 + 456);
  *(void *)(a1 + 456) = v51;
  id v53 = v51;

  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
  return a1;
}

void *_s14descr100FBE369V5SpecsVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x219uLL);
}

uint64_t _s14descr100FBE369V5SpecsVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  long long v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  long long v5 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v5;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  uint64_t v6 = *(void *)(a2 + 168);
  uint64_t v7 = *(void **)(a1 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v6;

  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  int v8 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);

  double v9 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);

  id v10 = *(void **)(a1 + 208);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);

  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  uint64_t v11 = *(void **)(a1 + 232);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);

  long long v12 = *(void **)(a1 + 240);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);

  uint64_t v13 = *(void **)(a1 + 248);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);

  id v14 = *(void **)(a1 + 256);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);

  double v15 = *(void **)(a1 + 264);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);

  double v16 = *(void **)(a1 + 272);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);

  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  long long v17 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v17;
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  long long v18 = *(void **)(a1 + 328);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);

  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  long long v19 = *(void **)(a1 + 344);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);

  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  id v20 = *(void **)(a1 + 376);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);

  long long v21 = *(void **)(a1 + 384);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);

  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  long long v22 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v22;
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  id v23 = *(void **)(a1 + 456);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);

  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  long long v24 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v24;
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(unsigned char *)(a1 + 536) = *(unsigned char *)(a2 + 536);
  return a1;
}

uint64_t _s14descr100FBE369V5SpecsVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 537)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 168);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr100FBE369V5SpecsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 536) = 0;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 537) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 168) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 537) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Specs()
{
  return &type metadata for SyncedLyricsViewController.Specs;
}

uint64_t _s14descr100FBE369V5SpecsV20SelectedLinePositionOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s14descr100FBE369V5SpecsV20SelectedLinePositionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_100B29388(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t sub_100B29394(uint64_t result)
{
  *(unsigned char *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t sub_100B293A4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Specs.SelectedLinePosition()
{
  return &type metadata for SyncedLyricsViewController.Specs.SelectedLinePosition;
}

uint64_t _s14descr100FBE369V5SpecsV27CustomCurveAnimationFactoryCMa()
{
  return self;
}

uint64_t sub_100B293EC()
{
  return swift_deallocObject();
}

id sub_100B29430(void *a1)
{
  unint64_t v2 = *(void **)(v1 + 16);
  unsigned int v3 = *(void **)(v1 + 24);
  id v4 = [a1 accessibilityContrast];
  if (v4 == (id)1) {
    long long v5 = v2;
  }
  else {
    long long v5 = v3;
  }
  if (v4 == (id)-1) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }

  return v6;
}

void *sub_100B294EC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  __n128 result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    id v4 = (void **)(a1 + 32);
    do
    {
      long long v5 = *v4;
      v4 += 2;
      id v6 = v5;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100B2959C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
      id v6 = v5;
      type metadata accessor for SyncedLyricsLineView();
      char v7 = static NSObject.== infix(_:_:)();

      if (v7)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1) {
        goto LABEL_18;
      }
      if (v4) {
        break;
      }
      unint64_t v4 = 5;
      while (1)
      {
        unint64_t v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1)) {
          break;
        }
        id v13 = *(id *)(a2 + 8 * v4);
        char v14 = static NSObject.== infix(_:_:)();

        if (v14) {
          goto LABEL_6;
        }
        ++v4;
        if (v12 == v3) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    uint64_t v9 = 1;
    while (1)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v10 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        break;
      }
      char v11 = static NSObject.== infix(_:_:)();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++v9;
      if (v10 == v3) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100B29714(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == a1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v5 = v2 - 1;
  while (v5 != result)
  {
    uint64_t v6 = *(void *)(a2 + 40 + 8 * result++);
    if (v6 == a1) {
      return result;
    }
  }
  return 0;
}

void sub_100B29778(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      uint64_t v5 = v4;
      type metadata accessor for SyncedLyricsLineView();
      char v6 = static NSObject.== infix(_:_:)();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          uint64_t v9 = v8;
          char v10 = static NSObject.== infix(_:_:)();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

uint64_t sub_100B29904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100B29954(a1, a2, a3, (uint64_t)&unk_10100D6A8, &qword_1010CAC90);
}

uint64_t sub_100B2992C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100B29954(a1, a2, a3, (uint64_t)&unk_10100D2C0, &qword_1010CAC40);
}

uint64_t sub_100B29954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000637B8(a1, &qword_1010CAA90);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  sub_100063814(a5);
  return swift_task_create();
}

uint64_t SyncedLyricsSharingTransitionInfo.line.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100B29B10(v1, a1);
}

uint64_t sub_100B29B10(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SyncedLyricsSharingTransitionInfo.line.setter(uint64_t a1)
{
  return sub_100B29B74(a1, v1);
}

uint64_t sub_100B29B74(uint64_t a1, uint64_t a2)
{
  return a2;
}

id JSBridge.Singletons.restrictions.getter()
{
  return *(id *)(v0 + 104);
}

void SyncedLyricsSharingTransitionInfo.initialView.setter(uint64_t a1)
{
  *(void *)(v1 + 104) = a1;
}

double (*SyncedLyricsSharingTransitionInfo.initialView.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsSharingTransitionInfo.alignment.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t SyncedLyricsSharingTransitionInfo.alignment.setter(uint64_t result)
{
  *(void *)(v1 + 112) = result;
  return result;
}

double SyncedLyricsSharingTransitionInfo.frame.getter()
{
  return *(double *)(v0 + 120);
}

void SyncedLyricsSharingTransitionInfo.frame.setter(double a1, double a2, double a3, double a4)
{
  v4[15] = a1;
  v4[16] = a2;
  v4[17] = a3;
  v4[18] = a4;
}

double (*SyncedLyricsSharingTransitionInfo.frame.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsSharingTransitionInfo.isSelected.getter()
{
  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t SyncedLyricsSharingTransitionInfo.isSelected.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 152) = result;
  return result;
}

__n128 SyncedLyricsSharingTransitionInfo.transform.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 192);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 SyncedLyricsSharingTransitionInfo.transform.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 160) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 176) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 192) = result;
  return result;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 208);
  swift_retain();
  return v1;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionWillBeginHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 208) = a1;
  *(void *)(v2 + 216) = a2;
  return result;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 224);
  swift_retain();
  return v1;
}

uint64_t SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 224) = a1;
  *(void *)(v2 + 232) = a2;
  return result;
}

double (*SyncedLyricsSharingTransitionInfo.transitionCompletionHandler.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SyncedLyricsViewController.isPlayingSpatial.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
  swift_beginAccess();
  return *v1;
}

uint64_t SyncedLyricsViewController.isPlayingSpatial.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
  if (v5)
  {
    uint64_t result = swift_beginAccess();
    *(unsigned char *)(v5 + 88) = a1 & 1;
  }
  return result;
}

void (*SyncedLyricsViewController.isPlayingSpatial.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_100B29EC8;
}

void sub_100B29EC8(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v5)
    {
      char v6 = *(unsigned char *)(v4 + v3[4]);
      swift_beginAccess();
      *(unsigned char *)(v5 + 88) = v6;
    }
  }

  free(v3);
}

uint64_t SyncedLyricsViewController.isFullScreen.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen);
  swift_beginAccess();
  return *v1;
}

uint64_t SyncedLyricsViewController.isFullScreen.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*SyncedLyricsViewController.isFullScreen.modify())()
{
  return j__swift_endAccess;
}

double SyncedLyricsViewController.bottomTapAreaHeight.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SyncedLyricsViewController.bottomTapAreaHeight.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*SyncedLyricsViewController.bottomTapAreaHeight.modify())()
{
  return j_j__swift_endAccess;
}

double SyncedLyricsViewController.containerHeight.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight;
  swift_beginAccess();
  return *(double *)v1;
}

void SyncedLyricsViewController.containerHeight.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight);
  swift_beginAccess();
  double v4 = *v3;
  *uint64_t v3 = a1;
  if (v4 != a1) {
    sub_100B2F7A8();
  }
}

void (*SyncedLyricsViewController.containerHeight.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = (void *)(v1 + v4);
  swift_beginAccess();
  v3[3] = *v5;
  return sub_100B2A25C;
}

void sub_100B2A25C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  double v2 = *(double *)(*(void *)a1 + 24);
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  uint64_t v3 = *(void *)(*(void *)a1 + 40);
  double v5 = *(double *)(v4 + v3);
  *(double *)(v4 + v3) = v2;
  if (v2 != v5) {
    sub_100B2F7A8();
  }

  free(v1);
}

id sub_100B2A2B4(uint64_t a1)
{
  double v2 = v1;
  id result = [v2 isViewLoaded];
  if (result)
  {
    double v5 = (unsigned __int8 *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
    swift_beginAccess();
    memcpy(__dst, v5, 0x219uLL);
    sub_100262548((uint64_t)__dst);
    char v6 = _s11MusicCoreUI26SyncedLyricsViewControllerC5SpecsV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)__dst, a1);
    id result = (id)sub_1002622C8((uint64_t)__dst);
    if ((v6 & 1) == 0)
    {
      sub_100B2F7A8();
      [*(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] setShowsVerticalScrollIndicator:v5[536]];
      char v7 = &v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess();
      uint64_t v8 = *(void *)v7;
      if (*(void *)v7 >> 62)
      {
        swift_bridgeObjectRetain();
        id result = (id)_CocoaArrayWrapper.endIndex.getter();
        uint64_t v9 = (uint64_t)result;
        if (result) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        id result = (id)swift_bridgeObjectRetain();
        if (v9)
        {
LABEL_5:
          uint64_t v27 = v9 - 1;
          if (v9 < 1)
          {
            __break(1u);
            return result;
          }
          uint64_t v10 = 0;
          id v25 = v5;
          unint64_t v26 = v8 & 0xC000000000000001;
          if ((v8 & 0xC000000000000001) == 0) {
            goto LABEL_8;
          }
LABEL_7:
          for (uint64_t i = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                ;
                uint64_t i = (char *)*(id *)(v8 + 8 * v10 + 32))
          {
            unint64_t v12 = i;
            memcpy(v29, v5, 0x219uLL);
            id v13 = &v12[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs];
            memcpy(v30, &v12[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], 0x219uLL);
            memmove(&v12[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_specs], v5, 0x219uLL);
            sub_100262548((uint64_t)v29);
            sub_100262548((uint64_t)v29);
            sub_1002622C8((uint64_t)v30);
            double v15 = sub_100B21014((uint64_t)v28);
            if (*v14)
            {
              double v16 = v14;
              memcpy(v31, v13, 0x219uLL);
              long long v18 = *v16;
              long long v17 = v16[1];
              uint64_t ObjectType = swift_getObjectType();
              uint64_t v20 = v10;
              uint64_t v21 = v8;
              long long v22 = (void (*)(unsigned char *, uint64_t, void *))v17[2];
              sub_100262548((uint64_t)v31);
              id v23 = v18;
              v22(v31, ObjectType, v17);
              uint64_t v8 = v21;
              uint64_t v10 = v20;
              long long v24 = *v16;
              *double v16 = v18;
              v16[1] = v17;
            }
            v15((long long *)v28, 0);
            sub_1002622C8((uint64_t)v29);
            sub_100B30B8C(v12);

            if (v27 == v10) {
              break;
            }
            ++v10;
            double v5 = v25;
            if (v26) {
              goto LABEL_7;
            }
LABEL_8:
            ;
          }
        }
      }
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *SyncedLyricsViewController.specs.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
  swift_beginAccess();
  memcpy(__dst, v3, 0x219uLL);
  sub_100262548((uint64_t)__dst);
  return memcpy(a1, __dst, 0x219uLL);
}

uint64_t SyncedLyricsViewController.specs.setter(const void *a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
  swift_beginAccess();
  memcpy(__dst, v3, 0x219uLL);
  memcpy(v6, v3, 0x219uLL);
  memcpy(v3, a1, 0x219uLL);
  sub_100262548((uint64_t)__dst);
  sub_100262548((uint64_t)a1);
  sub_1002622C8((uint64_t)v6);
  sub_100B2A2B4((uint64_t)__dst);
  sub_1002622C8((uint64_t)a1);
  return sub_1002622C8((uint64_t)__dst);
}

void (*SyncedLyricsViewController.specs.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0xF08uLL);
  *a1 = v3;
  v3[479] = v1;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  v3[480] = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  double v5 = (const void *)(v1 + v4);
  swift_beginAccess();
  memcpy(v3, v5, 0x219uLL);
  memcpy(v3 + 204, v5, 0x219uLL);
  sub_100262548((uint64_t)v3);
  return sub_100B2A74C;
}

void sub_100B2A74C(uint64_t a1, char a2)
{
  double v2 = *(void **)a1;
  uint64_t v3 = (const void *)(*(void *)a1 + 1632);
  uint64_t v4 = (void *)(*(void *)a1 + 2176);
  double v5 = (void *)(*(void *)a1 + 2720);
  if (a2)
  {
    char v6 = (void *)(v2[479] + v2[480]);
    memcpy(v2 + 408, v3, 0x219uLL);
    memcpy(v2 + 68, v6, 0x219uLL);
    memcpy(v5, v6, 0x219uLL);
    memcpy(v6, v3, 0x219uLL);
    sub_100262548((uint64_t)(v2 + 408));
    sub_100262548((uint64_t)(v2 + 408));
    sub_100262548((uint64_t)(v2 + 68));
    sub_1002622C8((uint64_t)v5);
    sub_100B2A2B4((uint64_t)(v2 + 68));
    sub_1002622C8((uint64_t)(v2 + 408));
    sub_1002622C8((uint64_t)(v2 + 68));
    memcpy(v4, v3, 0x219uLL);
    uint64_t v7 = (uint64_t)v4;
  }
  else
  {
    uint64_t v8 = (void *)(v2[479] + v2[480]);
    memcpy((void *)(*(void *)a1 + 2176), v3, 0x219uLL);
    memcpy(v2 + 136, v8, 0x219uLL);
    memcpy(v5, v8, 0x219uLL);
    memcpy(v8, v3, 0x219uLL);
    sub_100262548((uint64_t)(v2 + 136));
    sub_100262548((uint64_t)v4);
    sub_1002622C8((uint64_t)v5);
    sub_100B2A2B4((uint64_t)(v2 + 136));
    sub_1002622C8((uint64_t)v4);
    uint64_t v7 = (uint64_t)(v2 + 136);
  }
  sub_1002622C8(v7);

  free(v2);
}

uint64_t SyncedLyricsViewController.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t SyncedLyricsViewController.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*SyncedLyricsViewController.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100B2AA10;
}

void sub_100B2AA10(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t SyncedLyricsViewController.mode.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_100B2AAE0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  uint64_t result = swift_beginAccess();
  if (*v4)
  {
    if (a1 && *v4 == a1) {
      return result;
    }
  }
  else if (!a1)
  {
    return result;
  }
  char v6 = (void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess();
  *char v6 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
  {
    sub_100AED3A4((unint64_t)_swiftEmptyArrayStorage);
    uint64_t v7 = v25;
  }
  else
  {
    uint64_t v7 = &_swiftEmptySetSingleton;
  }
  uint64_t v8 = (void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews);
  swift_beginAccess();
  *uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t v9 = *v4;
  if (*v4)
  {
    uint64_t v10 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v11 = (void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
    swift_beginAccess();
    uint64_t v12 = v11[66];
    uint64_t v13 = v11[19];
    uint64_t v14 = v11[20];
    double v15 = (char *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial);
    swift_beginAccess();
    char v16 = *v15;
    type metadata accessor for SyncedLyricsManager();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 72) = 0;
    swift_unknownObjectWeakInit();
    *(void *)(v17 + 80) = _swiftEmptyArrayStorage;
    *(_OWORD *)(v17 + 96) = 0u;
    *(_OWORD *)(v17 + 112) = 0u;
    *(_OWORD *)(v17 + 128) = 0u;
    *(void *)(v17 + 144) = 0;
    *(void *)(v17 + 16) = v9;
    *(void *)(v17 + 24) = sub_100B3B798;
    *(void *)(v17 + 32) = v10;
    *(void *)(v17 + 40) = v12;
    *(void *)(v17 + 48) = v13;
    *(void *)(v17 + 56) = v14;
    swift_beginAccess();
    *(void *)(v17 + 72) = &protocol witness table for SyncedLyricsViewController;
    swift_unknownObjectWeakAssign();
    *(unsigned char *)(v17 + 88) = v16;
    uint64_t v18 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
    *(void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager) = v17;
    swift_retain_n();
    swift_retain();
    swift_release();
    sub_100B3720C();
    sub_100B30DA8(v9);
    uint64_t v19 = *(void *)(v2 + v18);
    if (v19)
    {
      uint64_t v20 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_beginAccess();
      uint64_t v21 = *(void *)(v19 + 96);
      *(void *)(v19 + 96) = sub_100B3B72C;
      *(void *)(v19 + 104) = v20;
      swift_retain();
      swift_retain_n();
      sub_10006ADFC(v21);
      sub_100B24080();
      swift_release_n();
      swift_release();
    }
    long long v22 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    if (v22)
    {
      id v23 = v22;
      [v23 setPaused:sub_100B31E38() & 1];
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    long long v24 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    if (v24) {
      [v24 setPaused:1];
    }
    *(void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager) = 0;
  }
  return swift_release();
}

double sub_100B2AE60(double a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0.0;
  }
  uint64_t v3 = (void *)Strong;
  uint64_t v4 = Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
  swift_beginAccess();
  if (*(void *)v4 && *(unsigned char *)(*(void *)v4 + 56) == 2)
  {
    double v5 = (a1 + -0.2) / 0.55;
    if (a1 > 0.75) {
      double v5 = 1.0;
    }
    if (a1 < 0.2) {
      double v5 = 0.0;
    }
    double v6 = (1.0 - v5) * 0.12 + 0.78;
    double v7 = v5 * 0.27 + 0.48;
    sub_100057778(0, &qword_1010CA980);
    id v8 = UISpringTimingParameters.init(dampingRatio:response:)(v6, v7);
  }
  else
  {
    id v8 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:100.0 damping:18.0 initialVelocity:0.0];
  }
  uint64_t v9 = v8;

  [v9 settlingDuration];
  double v11 = v10;

  return v11;
}

uint64_t SyncedLyricsViewController.lyrics.getter()
{
  return swift_retain();
}

uint64_t SyncedLyricsViewController.lyrics.setter(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  swift_retain();
  sub_100B2AAE0(v4);
  swift_release();
  return swift_release();
}

void (*SyncedLyricsViewController.lyrics.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
  v3[4] = v1;
  v3[5] = v4;
  double v5 = (void *)(v1 + v4);
  swift_beginAccess();
  v3[3] = *v5;
  swift_retain();
  return sub_100B2B130;
}

void sub_100B2B130(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 32);
  uint64_t v3 = *(void *)(*(void *)a1 + 40);
  uint64_t v5 = *(void *)(v4 + v3);
  *(void *)(v4 + v3) = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    swift_retain_n();
    sub_100B2AAE0(v5);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_100B2AAE0(v5);
  }
  swift_release();
  swift_release();

  free(v2);
}

void sub_100B2B1D8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess();
  sub_100B2FB64(v4, (uint64_t)&v23);
  if (v24)
  {
    sub_100068978(&v23, (uint64_t)v26);
    sub_100B2FB64(a1, (uint64_t)&v23);
    uint64_t v5 = v24;
    if (v24)
    {
      uint64_t v6 = v25;
      sub_100068990(&v23, v24);
      double v7 = (double (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
      double v8 = v7();
      swift_release();
      sub_1000760E4((uint64_t)&v23);
      uint64_t v9 = v27;
      uint64_t v10 = v28;
      sub_100068990(v26, v27);
      double v11 = (double (*)(void))(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
      double v12 = v11();
      swift_release();
      if (vabdd_f64(v8, v12) <= 0.5)
      {
        uint64_t v13 = (unsigned char *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
        swift_beginAccess();
        if (*v13 != 2)
        {
          uint64_t v14 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
          if (v14)
          {
            id v15 = v14;
            [v15 setPaused:sub_100B31E38() & 1];
          }
          sub_1000760E4((uint64_t)v26);
          return;
        }
      }
    }
    else
    {
      sub_1000637B8((uint64_t)&v23, &qword_1010CAA80);
    }
    uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v18)
    {
      uint64_t v19 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_beginAccess();
      uint64_t v20 = *(void *)(v18 + 96);
      *(void *)(v18 + 96) = sub_100B3B72C;
      *(void *)(v18 + 104) = v19;
      swift_retain();
      swift_retain_n();
      sub_10006ADFC(v20);
      sub_100B24080();
      swift_release_n();
      swift_release();
    }
    sub_1000760E4((uint64_t)v26);
  }
  else
  {
    sub_1000637B8((uint64_t)&v23, &qword_1010CAA80);
    uint64_t v16 = *(void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    if (v16)
    {
      swift_beginAccess();
      uint64_t v17 = *(void *)(v16 + 96);
      *(void *)(v16 + 96) = 0;
      *(void *)(v16 + 104) = 0;
      swift_retain();
      sub_10006ADFC(v17);
      sub_100B24080();
      swift_release();
    }
  }
  uint64_t v21 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
  if (v21)
  {
    id v22 = v21;
    [v22 setPaused:sub_100B31E38() & 1];
  }
}

double sub_100B2B4D0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  double v1 = 0.0;
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
    swift_beginAccess();
    sub_100B2FB64(v3, (uint64_t)v14);

    uint64_t v4 = v15;
    if (v15)
    {
      uint64_t v5 = v16;
      sub_100068990(v14, v15);
      uint64_t v6 = *(void *)(v4 - 8);
      __n128 v7 = __chkstk_darwin();
      uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
      (*(void (**)(char *, __n128))(v6 + 16))(v9, v7);
      sub_1000637B8((uint64_t)v14, &qword_1010CAA80);
      uint64_t v10 = (double (*)(uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      uint64_t v11 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
      double v1 = v10(v11);
      swift_release();
    }
    else
    {
      sub_1000637B8((uint64_t)v14, &qword_1010CAA80);
    }
  }
  return v1;
}

uint64_t SyncedLyricsViewController.timingProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess();
  return sub_100B2FB64(v3, a1);
}

uint64_t SyncedLyricsViewController.timingProvider.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess();
  sub_100B2FB64(v3, (uint64_t)v5);
  swift_beginAccess();
  sub_100B2FBCC(a1, v3);
  swift_endAccess();
  sub_100B2B1D8((uint64_t)v5);
  sub_1000637B8(a1, &qword_1010CAA80);
  return sub_1000637B8((uint64_t)v5, &qword_1010CAA80);
}

void (*SyncedLyricsViewController.timingProvider.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0xB8uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  v3[21] = v1;
  v3[22] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  sub_100B2FB64(v5, (uint64_t)v3);
  return sub_100B2B814;
}

void sub_100B2B814(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  uint64_t v3 = *a1 + 40;
  uint64_t v4 = *a1 + 80;
  if (a2)
  {
    uint64_t v5 = v2[21] + v2[22];
    sub_100B2FB64(*a1, v3);
    sub_100B2FB64(v5, v4);
    swift_beginAccess();
    sub_100B2FBCC(v3, v5);
    swift_endAccess();
    sub_100B2B1D8(v4);
    sub_1000637B8(v3, &qword_1010CAA80);
    sub_1000637B8(v4, &qword_1010CAA80);
    uint64_t v6 = (uint64_t)v2;
  }
  else
  {
    uint64_t v7 = v2[21] + v2[22];
    sub_100B2FB64(v7, v3);
    swift_beginAccess();
    sub_100B2FBCC((uint64_t)v2, v7);
    swift_endAccess();
    sub_100B2B1D8(v3);
    sub_1000637B8((uint64_t)v2, &qword_1010CAA80);
    uint64_t v6 = v3;
  }
  sub_1000637B8(v6, &qword_1010CAA80);

  free(v2);
}

uint64_t SyncedLyricsViewController.shareHandler.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_10007B674(*v1);
  return v2;
}

uint64_t SyncedLyricsViewController.shareHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_10006ADFC(v6);
}

uint64_t (*SyncedLyricsViewController.shareHandler.modify())()
{
  return j_j__swift_endAccess;
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  sub_100063814(&qword_1010CAA90);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (objc_class *)type metadata accessor for SyncedLyricsViewController();
  v43.receiver = v0;
  v43.super_class = v4;
  [super viewDidLoad];
  id v5 = [v0 view];
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v6 = v5;
  [v5 setPreservesSuperviewLayoutMargins:1];

  [v1 setViewRespectsSystemMinimumLayoutMargins:0];
  id v7 = [v1 view];
  if (!v7)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v8 = v7;
  [v7 bounds];
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;

  id v17 = [objc_allocWithZone((Class)UIScrollView) initWithFrame:v10, v12, v14, v16];
  uint64_t v18 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  uint64_t v19 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView];
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] = v17;

  [*(id *)&v1[v18] setClipsToBounds:0];
  [*(id *)&v1[v18] setIndicatorStyle:2];
  [*(id *)&v1[v18] setShowsHorizontalScrollIndicator:0];
  [*(id *)&v1[v18] setAutoresizingMask:18];
  [*(id *)&v1[v18] setDelegate:v1];
  [*(id *)&v1[v18] setMultipleTouchEnabled:0];
  uint64_t v20 = *(void **)&v1[v18];
  uint64_t v21 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  swift_beginAccess();
  [v20 setShowsVerticalScrollIndicator:v21[536]];
  id v22 = [v1 view];
  if (!v22)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  long long v23 = v22;
  [v22 addSubview:*(void *)&v1[v18]];

  uint64_t v24 = self;
  id v25 = [v24 defaultCenter];
  uint64_t v26 = NSNotificationCenter.notifications(named:object:)();

  id v27 = [v24 defaultCenter];
  uint64_t v42 = NSNotificationCenter.notifications(named:object:)();

  sub_100063814(&qword_1010CAAA0);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100E251D0;
  *(void *)(v28 + 32) = type metadata accessor for UITraitAccessibilityContrast();
  *(void *)(v28 + 40) = &protocol witness table for UITraitAccessibilityContrast;
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v29 = type metadata accessor for TaskPriority();
  id v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
  v30(v3, 1, 1, v29);
  uint64_t v31 = (uint64_t)v3;
  uint64_t v32 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  swift_retain();
  uint64_t v33 = static MainActor.shared.getter();
  id v34 = (void *)swift_allocObject();
  v34[2] = v33;
  void v34[3] = &protocol witness table for MainActor;
  v34[4] = v26;
  v34[5] = v32;
  swift_release();
  sub_100066A94(v31, (uint64_t)&unk_1010CAAB0, (uint64_t)v34);
  swift_release();
  v30((char *)v31, 1, 1, v29);
  uint64_t v35 = v42;
  uint64_t v36 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_retain();
  uint64_t v37 = static MainActor.shared.getter();
  id v38 = (void *)swift_allocObject();
  v38[2] = v37;
  v38[3] = &protocol witness table for MainActor;
  v38[4] = v35;
  v38[5] = v36;
  swift_release();
  sub_100066A94(v31, (uint64_t)&unk_1010CAAC0, (uint64_t)v38);
  swift_release();
  id v39 = [objc_allocWithZone((Class)UITapGestureRecognizer) init];
  [v39 setDelegate:v1];
  [v39 addTarget:v1 action:"bottomTapHandler"];
  id v40 = [v1 view];
  if (v40)
  {
    id v41 = v40;
    [v40 addGestureRecognizer:v39];

    swift_release();
    swift_release();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_100B2BFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a4;
  v5[16] = a5;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  v5[17] = v6;
  v5[18] = *(void *)(v6 - 8);
  v5[19] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  v5[20] = v7;
  v5[21] = *(void *)(v7 - 8);
  v5[22] = swift_task_alloc();
  type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v5[23] = swift_task_alloc();
  uint64_t v8 = sub_100063814(&qword_1010CACA0);
  v5[24] = v8;
  v5[25] = *(void *)(v8 - 8);
  v5[26] = swift_task_alloc();
  uint64_t v9 = sub_100063814(&qword_1010CACA8);
  v5[27] = v9;
  v5[28] = *(void *)(v9 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = type metadata accessor for MainActor();
  v5[31] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[32] = v11;
  v5[33] = v10;
  return _swift_task_switch(sub_100B2C228, v11, v10);
}

uint64_t sub_100B2C228()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[24];
  v0[11] = v0[15];
  type metadata accessor for NSNotificationCenter.Notifications();
  v0[34] = sub_100057778(0, &qword_1010CACB8);
  sub_100B3B748(&qword_1010CACC0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications);
  swift_retain();
  AsyncCompactMapSequence.init(_:transform:)();
  AsyncCompactMapSequence.base.getter();
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncCompactMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  AsyncCompactMapSequence.Iterator.init(_:transform:)();
  swift_beginAccess();
  uint64_t v4 = static MainActor.shared.getter();
  v0[35] = v4;
  uint64_t v7 = (char *)&dword_1010CACC8 + dword_1010CACC8;
  id v5 = (void *)swift_task_alloc();
  v0[36] = v5;
  *id v5 = v0;
  v5[1] = sub_100B2C45C;
  return ((uint64_t (*)(uint64_t, void *, void *))v7)(v4, &protocol witness table for MainActor, v0 + 13);
}

uint64_t sub_100B2C45C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 296) = a1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 264);
  uint64_t v4 = *(void *)(v2 + 256);
  return _swift_task_switch(sub_100B2C5A8, v4, v3);
}

void sub_100B2C5A8()
{
  uint64_t v1 = (void *)v0[37];
  if (v1)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      goto LABEL_11;
    }
    uint64_t v3 = Strong;
    id v4 = [Strong view];

    if (!v4)
    {

      __break(1u);
      return;
    }
    id v5 = [v4 window];

    id v6 = [v5 windowScene];
    if (v6)
    {
      id v7 = v1;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8)
      {
        if (qword_1010C8518 != -1) {
          swift_once();
        }
        uint64_t v9 = type metadata accessor for Logger();
        sub_100050A90(v9, (uint64_t)static Logger.lyrics);
        uint64_t v10 = Logger.logObject.getter();
        os_log_type_t v11 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v10, v11))
        {
          double v12 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)double v12 = 0;
          swift_slowDealloc();
        }
        uint64_t v13 = v0[22];
        uint64_t v14 = v0[19];
        uint64_t v23 = v0[21];
        uint64_t v24 = v0[20];
        uint64_t v16 = v0[17];
        uint64_t v15 = v0[18];
        uint64_t v17 = v0[16];

        sub_100057778(0, (unint64_t *)&qword_1010C8910);
        id v22 = (void *)static OS_dispatch_queue.main.getter();
        v0[6] = sub_100B3B790;
        v0[7] = v17;
        v0[2] = _NSConcreteStackBlock;
        v0[3] = 1107296256;
        v0[4] = sub_100020238;
        v0[5] = &unk_10100DA30;
        uint64_t v18 = _Block_copy(v0 + 2);
        swift_retain();
        static DispatchQoS.unspecified.getter();
        v0[14] = _swiftEmptyArrayStorage;
        sub_100B3B748((unint64_t *)&unk_1010CACD0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100063814(&qword_1010C9228);
        sub_10007ACD8((unint64_t *)&qword_1010CACE0, &qword_1010C9228);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v18);

        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v13, v24);
        swift_release();
      }
      else
      {
      }
    }
    else
    {
LABEL_11:
    }
    uint64_t v20 = static MainActor.shared.getter();
    v0[35] = v20;
    id v25 = (void (*)(uint64_t, uint64_t))((char *)&dword_1010CACC8 + dword_1010CACC8);
    uint64_t v21 = (void *)swift_task_alloc();
    v0[36] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_100B2C45C;
    v25(v20, (uint64_t)&protocol witness table for MainActor);
  }
  else
  {
    (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (void (*)(void))v0[1];
    v19();
  }
}

uint64_t sub_100B2CA3C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return _swift_task_switch(sub_100B2CA5C, 0, 0);
}

uint64_t sub_100B2CA5C()
{
  Notification.object.getter();
  uint64_t v1 = (void *)v0[6];
  if (v0[5])
  {
    sub_100057778(0, &qword_1010CACB8);
    if ((swift_dynamicCast() & 1) == 0) {
      *(void *)v0[6] = 0;
    }
  }
  else
  {
    sub_1000637B8((uint64_t)(v0 + 2), &qword_1010CAD00);
    *uint64_t v1 = 0;
  }
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100B2CB28(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  uint64_t v5 = sub_100063814(&qword_1010CACA8);
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  sub_100063814(&qword_1010CACF0);
  v3[13] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Notification();
  v3[14] = v6;
  v3[15] = *(void *)(v6 - 8);
  v3[16] = swift_task_alloc();
  if (a1)
  {
    swift_getObjectType();
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  v3[17] = v7;
  v3[18] = v9;
  return _swift_task_switch(sub_100B2CCB8, v7, v9);
}

uint64_t sub_100B2CCB8()
{
  v0[19] = AsyncCompactMapSequence.Iterator.baseIterator.modify();
  type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  sub_100B3B748(&qword_1010CACF8, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[20] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100B2CDBC;
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v2, v3, v4);
}

uint64_t sub_100B2CDBC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_100B2D0F4;
  }
  else
  {
    (*(void (**)(void))(v2 + 152))();
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_100B2CEE4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100B2CEE4()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[13];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000637B8(v3, &qword_1010CACF0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4(0);
  }
  else
  {
    uint64_t v7 = v0[11];
    uint64_t v6 = v0[12];
    uint64_t v9 = v0[9];
    uint64_t v8 = v0[10];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[16], v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
    uint64_t v10 = (int *)AsyncCompactMapSequence.Iterator.transform.getter();
    v0[21] = v11;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v14 = (int *)((char *)v10 + *v10);
    double v12 = (void *)swift_task_alloc();
    v0[22] = v12;
    *double v12 = v0;
    v12[1] = sub_100B2D190;
    uint64_t v13 = v0[16];
    return ((uint64_t (*)(void *, uint64_t))v14)(v0 + 6, v13);
  }
}

uint64_t sub_100B2D0F4()
{
  (*(void (**)(void))(v0 + 152))();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B2D190()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 128);
  uint64_t v3 = *(void *)(*v0 + 120);
  uint64_t v4 = *(void *)(*v0 + 112);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 144);
  uint64_t v6 = *(void *)(v1 + 136);
  return _swift_task_switch(sub_100B2D330, v6, v5);
}

uint64_t sub_100B2D330()
{
  uint64_t v1 = v0[6];
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
    return v2(v1);
  }
  else
  {
    v0[19] = AsyncCompactMapSequence.Iterator.baseIterator.modify();
    type metadata accessor for NSNotificationCenter.Notifications.Iterator();
    sub_100B3B748(&qword_1010CACF8, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[20] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100B2CDBC;
    uint64_t v5 = v0[13];
    uint64_t v6 = v0[7];
    uint64_t v7 = v0[8];
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v5, v6, v7);
  }
}

void sub_100B2D498()
{
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 1;
  }
  swift_beginAccess();
  uint64_t v1 = swift_unknownObjectWeakLoadStrong();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    id v4 = v3;

    if (v3)
    {
      [v4 setPaused:1];
    }
  }
}

uint64_t sub_100B2D554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[15] = a4;
  v5[16] = a5;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  v5[17] = v6;
  v5[18] = *(void *)(v6 - 8);
  v5[19] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchQoS();
  v5[20] = v7;
  v5[21] = *(void *)(v7 - 8);
  v5[22] = swift_task_alloc();
  type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v5[23] = swift_task_alloc();
  uint64_t v8 = sub_100063814(&qword_1010CACA0);
  v5[24] = v8;
  v5[25] = *(void *)(v8 - 8);
  v5[26] = swift_task_alloc();
  uint64_t v9 = sub_100063814(&qword_1010CACA8);
  v5[27] = v9;
  v5[28] = *(void *)(v9 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = type metadata accessor for MainActor();
  v5[31] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[32] = v11;
  v5[33] = v10;
  return _swift_task_switch(sub_100B2D794, v11, v10);
}

uint64_t sub_100B2D794()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[24];
  v0[11] = v0[15];
  type metadata accessor for NSNotificationCenter.Notifications();
  v0[34] = sub_100057778(0, &qword_1010CACB8);
  sub_100B3B748(&qword_1010CACC0, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications);
  swift_retain();
  AsyncCompactMapSequence.init(_:transform:)();
  AsyncCompactMapSequence.base.getter();
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  AsyncCompactMapSequence.transform.getter();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  AsyncCompactMapSequence.Iterator.init(_:transform:)();
  swift_beginAccess();
  uint64_t v4 = static MainActor.shared.getter();
  v0[35] = v4;
  uint64_t v7 = (char *)&dword_1010CACC8 + dword_1010CACC8;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[36] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100B2D9C8;
  return ((uint64_t (*)(uint64_t, void *, void *))v7)(v4, &protocol witness table for MainActor, v0 + 13);
}

uint64_t sub_100B2D9C8(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 296) = a1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 264);
  uint64_t v4 = *(void *)(v2 + 256);
  return _swift_task_switch(sub_100B2DB14, v4, v3);
}

void sub_100B2DB14()
{
  uint64_t v1 = (void *)v0[37];
  if (v1)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (!Strong) {
      goto LABEL_7;
    }
    uint64_t v3 = Strong;
    id v4 = [Strong view];

    if (!v4)
    {

      __break(1u);
      return;
    }
    id v5 = [v4 window];

    id v6 = [v5 windowScene];
    if (v6)
    {
      id v7 = v1;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8)
      {
        uint64_t v9 = v0[22];
        uint64_t v19 = v0[21];
        uint64_t v10 = v0[19];
        uint64_t v20 = v0[20];
        uint64_t v11 = v0[17];
        uint64_t v12 = v0[18];
        uint64_t v13 = v0[16];
        sub_100057778(0, (unint64_t *)&qword_1010C8910);
        uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
        v0[6] = sub_100B3B724;
        v0[7] = v13;
        v0[2] = _NSConcreteStackBlock;
        v0[3] = 1107296256;
        v0[4] = sub_100020238;
        v0[5] = &unk_10100D9E0;
        uint64_t v14 = _Block_copy(v0 + 2);
        swift_retain();
        static DispatchQoS.unspecified.getter();
        v0[14] = _swiftEmptyArrayStorage;
        sub_100B3B748((unint64_t *)&unk_1010CACD0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100063814(&qword_1010C9228);
        sub_10007ACD8((unint64_t *)&qword_1010CACE0, &qword_1010C9228);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v14);

        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v9, v20);
        swift_release();
      }
      else
      {
      }
    }
    else
    {
LABEL_7:
    }
    uint64_t v16 = static MainActor.shared.getter();
    v0[35] = v16;
    uint64_t v21 = (void (*)(uint64_t, uint64_t))((char *)&dword_1010CACC8 + dword_1010CACC8);
    uint64_t v17 = (void *)swift_task_alloc();
    v0[36] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_100B2D9C8;
    v21(v16, (uint64_t)&protocol witness table for MainActor);
  }
  else
  {
    (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (void (*)(void))v0[1];
    v15();
  }
}

uint64_t sub_100B2DEF4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return _swift_task_switch(sub_100B3B870, 0, 0);
}

void sub_100B2DF14()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
    swift_retain();

    if (v2)
    {
      uint64_t v3 = swift_allocObject();
      swift_beginAccess();
      id v4 = (void *)swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectWeakInit();

      swift_beginAccess();
      uint64_t v5 = *(void *)(v2 + 96);
      *(void *)(v2 + 96) = sub_100B3B72C;
      *(void *)(v2 + 104) = v3;
      swift_retain_n();
      sub_10006ADFC(v5);
      sub_100B24080();
      swift_release_n();
      swift_release();
    }
  }
  swift_beginAccess();
  id v6 = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;
  }
  if (qword_1010C8518 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100050A90(v7, (uint64_t)static Logger.lyrics);
  swift_retain_n();
  char v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    v22[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_beginAccess();
    uint64_t v11 = swift_unknownObjectWeakLoadStrong();
    if (v11)
    {
      uint64_t v12 = (void *)v11;
      sub_100B31E38();
    }
    sub_100063814(&qword_1010CACE8);
    uint64_t v13 = String.init<A>(describing:)();
    *(void *)(v10 + 4) = sub_100076010(v13, v14, v22);
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  swift_beginAccess();
  uint64_t v15 = swift_unknownObjectWeakLoadStrong();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    uint64_t v17 = *(void **)(v15 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
    id v18 = v17;

    if (v17)
    {
      swift_beginAccess();
      uint64_t v19 = swift_unknownObjectWeakLoadStrong();
      if (v19)
      {
        uint64_t v20 = (void *)v19;
        char v21 = sub_100B31E38();
      }
      else
      {
        char v21 = 1;
      }
      [v18 setPaused:v21 & 1];
    }
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  [super viewDidAppear:a1];
  id v3 = [v1 view];
  if (v3)
  {
    id v4 = v3;
    id v5 = [v3 window];

    if (v5)
    {
      id v6 = [v5 screen];

      id v5 = [v6 displayLinkWithTarget:v1 selector:"displayLinkFired:"];
    }
    uint64_t v7 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink;
    char v8 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink];
    *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = v5;

    os_log_type_t v9 = *(void **)&v1[v7];
    if (v9)
    {
      id v10 = v9;
      [v10 setPaused:sub_100B31E38() & 1];

      uint64_t v11 = *(void **)&v1[v7];
      if (v11)
      {
        uint64_t v12 = self;
        id v13 = v11;
        id v14 = [v12 mainRunLoop];
        [v13 addToRunLoop:v14 forMode:NSRunLoopCommonModes];

        uint64_t v15 = *(void **)&v1[v7];
        if (v15) {
          [v15 setPreferredFramesPerSecond:30];
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  [super viewDidDisappear:a1];
  uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink;
  [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] invalidate];
  id v4 = *(void **)&v1[v3];
  *(void *)&v1[v3] = 0;
}

Swift::Void __swiftcall SyncedLyricsViewController.viewDidLayoutSubviews()()
{
  uint64_t v1 = v0;
  v35.receiver = v0;
  v35.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  [super viewDidLayoutSubviews];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    return;
  }
  uint64_t v3 = v2;
  _s3__C6CGRectVMa_1(0);
  [v3 bounds];

  id v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)() & 1) == 0) {
    return;
  }
  id v5 = [v1 view];
  if (!v5) {
    goto LABEL_14;
  }
  id v6 = v5;
  [v5 bounds];
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;

  v36.origin.x = v8;
  v36.origin.y = v10;
  v36.size.width = v12;
  v36.size.height = v14;
  CGRectGetWidth(v36);
  CGRectGetWidth(*(CGRect *)v4);
  if (static ApproximatelyEquatable.!=~ infix(_:_:)()) {
    sub_100B2FC58();
  }
  id v15 = [v1 view];
  if (!v15) {
    goto LABEL_15;
  }
  objc_super v16 = v15;
  [v15 bounds];
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;

  v37.origin.x = v18;
  v37.origin.y = v20;
  v37.size.width = v22;
  v37.size.height = v24;
  CGRectGetHeight(v37);
  CGRectGetHeight(*(CGRect *)v4);
  if (static ApproximatelyEquatable.!=~ infix(_:_:)())
  {
    sub_100B32AE8(0);
    swift_beginAccess();
    sub_100B38188();
    if (static ApproximatelyEquatable<>.==~ infix(_:_:)()) {
      sub_100B2F7A8();
    }
  }
  id v25 = [v1 view];
  if (!v25) {
    goto LABEL_16;
  }
  uint64_t v26 = v25;
  [v25 bounds];
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;

  *(void *)id v4 = v28;
  *((void *)v4 + 1) = v30;
  *((void *)v4 + 2) = v32;
  *((void *)v4 + 3) = v34;
}

Swift::Void __swiftcall SyncedLyricsViewController.viewLayoutMarginsDidChange()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  [super viewLayoutMarginsDidChange];
  sub_100B2FC58();
}

void sub_100B2E9EC(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v3)
  {
    _s19SBS_TextContentViewCMa();
    uint64_t v5 = swift_dynamicCastClass();
    if (v5)
    {
      uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
      if (v6)
      {
        uint64_t v7 = v5;
        swift_beginAccess();
        CGFloat v8 = *(double (**)(uint64_t))(v6 + 96);
        if (v8)
        {
          id v9 = v3;
          swift_retain();
          uint64_t v10 = sub_10007B674((uint64_t)v8);
          double v11 = v8(v10);
          swift_beginAccess();
          double v12 = 0.0;
          if (*(unsigned char *)(v6 + 88) == 1)
          {
            Lyrics.spatialOffset.getter();
            double v12 = v13;
          }
          sub_10006ADFC((uint64_t)v8);
          swift_release();
          double v14 = v11 - v12;
          if (v14 != *(double *)(v7 + OBJC_IVAR___MusicSBS_TextContentView_progress))
          {
            *(double *)(v7 + OBJC_IVAR___MusicSBS_TextContentView_progress) = v14;
            id v15 = *(void **)(v7 + OBJC_IVAR___MusicSBS_TextContentView_textView);
            if (!v15)
            {
              __break(1u);
              return;
            }
            id v16 = v15;
            uint64_t v17 = a2 & 1;
            sub_100B114EC(v17, v14);

            CGFloat v18 = *(void **)(v7 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
            if (v18)
            {
              id v19 = v18;
              sub_100B114EC(v17, v14);

              id v9 = v19;
            }
          }
        }
      }
    }
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.presentSharing()()
{
  id v4 = v0;
  uint64_t v5 = (unint64_t *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
  swift_beginAccess();
  unint64_t v6 = *v5;
  if (v6 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(char **)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_19;
  }
LABEL_3:
  CGFloat v8 = v7 - 1;
  if (__OFSUB__(v7, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_33:
    id v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if (((unint64_t)v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v8 < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v9 = (char *)*(id *)(v6 + 8 * (void)v8 + 32);
LABEL_8:
    uint64_t v7 = v9;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  swift_bridgeObjectRetain();
  uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v3 >= v27)
  {
LABEL_38:
    sub_1000688E4(v1, (uint64_t)v43);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_46;
    }
    swift_bridgeObjectRelease();
    sub_1000688E4(v1, (uint64_t)v43);
    uint64_t v28 = (uint64_t)v44;
    uint64_t v29 = v45;
    sub_100068990(v43, (uint64_t)v44);
    uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
    sub_1000760E4((uint64_t)v43);
    if (v30 < 1) {
      goto LABEL_46;
    }
    sub_1000688E4(v1, (uint64_t)v43);
    uint64_t v31 = (uint64_t)v44;
    uint64_t v32 = v45;
    sub_100068990(v43, (uint64_t)v44);
    uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
    unint64_t v6 = v33 - 1;
    if (!__OFSUB__(v33, 1))
    {
      sub_1000760E4((uint64_t)v43);
      uint64_t v34 = (uint64_t *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      swift_beginAccess();
      uint64_t v1 = *v34;
      if ((v1 & 0xC000000000000001) != 0)
      {
LABEL_48:
        swift_bridgeObjectRetain();
        objc_super v35 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();

        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
      if ((v6 & 0x8000000000000000) == 0)
      {
        if (v6 < *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_44:
          objc_super v35 = (char *)*(id *)(v1 + 8 * v6 + 32);

LABEL_45:
          uint64_t v7 = v35;
LABEL_46:
          [v7 setHighlighted:1];
          sub_100057778(0, (unint64_t *)&qword_1010C8910);
          CGRect v36 = (void *)static OS_dispatch_queue.main.getter();
          uint64_t v37 = swift_allocObject();
          *(void *)(v37 + 16) = v4;
          *(void *)(v37 + 24) = v7;
          id v38 = v4;
          id v39 = v7;
          OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100B3821C, v37);

          swift_release();
          return;
        }
LABEL_53:
        __break(1u);
LABEL_54:
        swift_bridgeObjectRetain();
        uint64_t v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  while (1)
  {
    sub_1000688E4(v1, (uint64_t)v43);
    uint64_t v12 = (uint64_t)v44;
    uint64_t v13 = v45;
    sub_100068990(v43, (uint64_t)v44);
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
    unint64_t v6 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    sub_1000760E4((uint64_t)v43);
    uint64_t v1 = *v2;
    if ((*v2 & 0xC000000000000001) != 0) {
      goto LABEL_48;
    }
    if ((v6 & 0x8000000000000000) != 0) {
      goto LABEL_50;
    }
    if (v6 < *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_44;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v7 = (char *)_CocoaArrayWrapper.endIndex.getter();
    if (v7) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
    if (!v15) {
      return;
    }
    swift_beginAccess();
    id v16 = *(double (**)(uint64_t))(v15 + 96);
    if (!v16) {
      return;
    }
    swift_retain();
    uint64_t v17 = sub_10007B674((uint64_t)v16);
    double v18 = v16(v17);
    swift_beginAccess();
    double v19 = 0.0;
    if (*(unsigned char *)(v15 + 88) == 1)
    {
      Lyrics.spatialOffset.getter();
      double v19 = v20;
    }
    sub_10006ADFC((uint64_t)v16);
    swift_release();
    double v21 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
    swift_beginAccess();
    if (!*(void *)v21)
    {
      uint64_t v42 = 0;
      long long v40 = 0u;
      long long v41 = 0u;
LABEL_31:
      sub_1000637B8((uint64_t)&v40, &qword_1010CAAF0);
      return;
    }
    swift_retain();
    Lyrics.line(before:useOriginalLines:)(0, (uint64_t)&v40, v18 - v19);
    swift_release();
    if (!*((void *)&v41 + 1)) {
      goto LABEL_31;
    }
    sub_100068978(&v40, (uint64_t)v43);
    uint64_t v22 = (uint64_t)v44;
    uint64_t v23 = v45;
    sub_100068990(v43, (uint64_t)v44);
    unint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
    id v25 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess();
    uint64_t v26 = *(void *)v25;
    if ((*(void *)v25 & 0xC000000000000001) != 0) {
      goto LABEL_54;
    }
    if ((v24 & 0x8000000000000000) != 0) {
      break;
    }
    if (v24 >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_56;
    }
    uint64_t v7 = (char *)*(id *)(v26 + 8 * v24 + 32);
LABEL_29:
    sub_1000760E4((uint64_t)v43);
LABEL_9:
    uint64_t v1 = (uint64_t)&v7[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess();
    sub_1000688E4(v1, (uint64_t)v43);
    sub_100063814(&qword_1010C9A68);
    if (!swift_dynamicCast()) {
      goto LABEL_38;
    }
    sub_1000688E4(v1, (uint64_t)v43);
    uint64_t v2 = v44;
    uint64_t v10 = v45;
    sub_100068990(v43, (uint64_t)v44);
    uint64_t v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 16))(v2, v10);
    uint64_t v3 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    sub_1000760E4((uint64_t)v43);
    uint64_t v2 = (uint64_t *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess();
    if ((unint64_t)*v2 >> 62) {
      goto LABEL_37;
    }
    if (v3 >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_38;
    }
  }
  __break(1u);
LABEL_56:
  __break(1u);
}

uint64_t sub_100B2F2FC(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess();
  sub_1000688E4(v4, (uint64_t)&v41);
  sub_100063814(&qword_1010C9A68);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v6 = v58;
    uint64_t v7 = v62;
    CGFloat v8 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    long long v39 = v61;
    long long v40 = v60;
    if (!v8) {
      goto LABEL_10;
    }
    long long v9 = v56;
    uint64_t v10 = v57;
    char v11 = BYTE8(v57);
    int v12 = BYTE9(v57);
    char v13 = BYTE10(v57);
    uint64_t v14 = *((void *)&v58 + 1);
    long long v15 = v59;
    [v8 copy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100057778(0, (unint64_t *)&qword_1010CD3B0);
    if (swift_dynamicCast())
    {
      char v37 = v13;
      id v38 = (void *)v41;
      [a1 cancelTrackingWithEvent:0];
      uint64_t result = (uint64_t)[v2 view];
      if (!result)
      {
        __break(1u);
        return result;
      }
      id v16 = (void *)result;
      if (v12) {
        uint64_t v17 = 2;
      }
      else {
        uint64_t v17 = 0;
      }
      [(id)result convertRect:*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] fromCoordinateSpace:UIView.untransformedFrame.getter()];
      uint64_t v35 = v19;
      uint64_t v36 = v18;
      uint64_t v21 = v20;
      uint64_t v23 = v22;

      unsigned __int8 v24 = [a1 isSelected];
      [a1 transform];
      long long v25 = v56;
      long long v26 = v57;
      long long v27 = v58;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = a1;
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = a1;
      long long v41 = v9;
      *(void *)&long long v42 = v10;
      BYTE8(v42) = v11;
      BYTE9(v42) = v12;
      BYTE10(v42) = v37;
      *(void *)&long long v43 = v6;
      *((void *)&v43 + 1) = v14;
      long long v44 = v15;
      long long v45 = v40;
      long long v46 = v39;
      *(void *)&long long v47 = v7;
      *((void *)&v47 + 1) = v38;
      *(void *)&long long v48 = v17;
      *((void *)&v48 + 1) = v36;
      *(void *)&long long v49 = v35;
      *((void *)&v49 + 1) = v21;
      *(void *)&long long v50 = v23;
      BYTE8(v50) = v24;
      long long v51 = v25;
      long long v52 = v26;
      long long v53 = v27;
      *(void *)&long long v54 = sub_1002417D8;
      *((void *)&v54 + 1) = v28;
      *(void *)&long long v55 = sub_100B3B48C;
      *((void *)&v55 + 1) = v29;
      long long v64 = v49;
      long long v65 = v50;
      long long v56 = v9;
      long long v57 = v42;
      long long v62 = v47;
      long long v63 = v48;
      long long v60 = v40;
      long long v61 = v39;
      long long v58 = v43;
      long long v59 = v15;
      long long v69 = v54;
      long long v70 = v55;
      long long v67 = v26;
      long long v68 = v27;
      uint64_t v30 = &v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
      long long v66 = v25;
      swift_beginAccess();
      uint64_t v31 = *(void (**)(long long *))v30;
      if (!*(void *)v30)
      {
        uint64_t v34 = a1;
        return sub_100B3B4E0((uint64_t)&v41);
      }
      uint64_t v32 = a1;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      id v33 = v38;
      sub_10007B674((uint64_t)v31);
      v31(&v56);

      sub_10006ADFC((uint64_t)v31);
      sub_100B3B4E0((uint64_t)&v41);
      swift_release();
      swift_release();
    }
    else
    {
LABEL_10:
      swift_release();
      swift_release();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall SyncedLyricsViewController.displayLinkResumeIfNeeded()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink);
  if (v1)
  {
    id v2 = v1;
    [v2 setPaused:sub_100B31E38() & 1];
  }
}

void sub_100B2F7A8()
{
  uint64_t v1 = v0;
  id v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  swift_beginAccess();
  if (v2[40] < 0)
  {
    uint64_t v20 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess();
    uint64_t v21 = *(void *)v20;
    if (*(void *)v20 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_9:
        if ((v21 & 0xC000000000000001) != 0)
        {
          id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_22;
          }
          id v23 = *(id *)(v21 + 32);
        }
        unsigned __int8 v24 = v23;
        swift_bridgeObjectRelease();
        uint64_t v25 = (uint64_t)v24 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
        swift_beginAccess();
        sub_1000688E4(v25, (uint64_t)v45);

        sub_100068978(v45, (uint64_t)v46);
        uint64_t v26 = v47;
        uint64_t v27 = v48;
        sub_100068990(v46, v47);
        unint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 16))(v26, v27);
        uint64_t v29 = *(void *)v20;
        if ((*(void *)v20 & 0xC000000000000001) == 0)
        {
          if ((v28 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v28 < *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v30 = *(id *)(v29 + 8 * v28 + 32);
LABEL_16:
            id v31 = v30;
            double v32 = UIView.untransformedFrame.getter();
            CGFloat v34 = v33;
            CGFloat v36 = v35;
            CGFloat v38 = v37;

            sub_100B325BC(v32, v34, v36, v38);
            double v40 = v39;

            double v19 = fabs(v40);
            sub_1000760E4((uint64_t)v46);
            goto LABEL_19;
          }
          __break(1u);
          goto LABEL_25;
        }
LABEL_22:
        swift_bridgeObjectRetain();
        id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v22) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    [*((id *)v2 + 21) _bodyLeading];
    double v19 = v41;
    goto LABEL_19;
  }
  double v3 = *((double *)v2 + 1);
  [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] contentOffset];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  id v8 = [v1 view];
  if (!v8)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  long long v9 = v8;
  [v8 frame];
  CGFloat v11 = v10;

  int v12 = (CGFloat *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  swift_beginAccess();
  CGFloat v13 = *v12;
  if (*v12 > 0.0)
  {
LABEL_6:
    v49.origin.x = v5;
    v49.origin.y = v7;
    v49.size.width = v11;
    v49.size.height = v13;
    double v17 = v3 * (CGRectGetHeight(v49) / 100.0);
    [*((id *)v2 + 21) ascender];
    double v19 = v17 - v18;
LABEL_19:
    sub_100B3720C();
    uint64_t v42 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    id v43 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView];
    [v43 contentInset];
    [v43 setContentInset:v19];

    id v44 = *(id *)&v1[v42];
    [v44 contentOffset];
    [v44 setContentOffset:];

    return;
  }
  id v14 = [v1 view];
  if (v14)
  {
    long long v15 = v14;
    [v14 frame];
    CGFloat v13 = v16;

    goto LABEL_6;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_100B2FB64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010CAA80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B2FBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010CAA80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SyncedLyricsViewController()
{
  return self;
}

void sub_100B2FC58()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = isEscapingClosureAtFileLocation;
  if ((*(unsigned char *)(isEscapingClosureAtFileLocation
                 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) & 1) != 0)
  {
    id v2 = (unint64_t *)(isEscapingClosureAtFileLocation
                            + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
    swift_beginAccess();
    unint64_t v3 = *v2;
    if (!(v3 >> 62))
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v5 = (id)isEscapingClosureAtFileLocation;
      swift_bridgeObjectRetain();
      if (v4) {
        goto LABEL_4;
      }
LABEL_13:
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
  }
  else
  {
    CGFloat v11 = self;
    unint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = isEscapingClosureAtFileLocation;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_100B3B6FC;
    *(void *)(v12 + 24) = v3;
    uint64_t v20 = sub_10013DD14;
    uint64_t v21 = v12;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v17 = 1107296256;
    double v18 = sub_10007A61C;
    double v19 = &unk_10100D8F0;
    CGFloat v13 = _Block_copy(&aBlock);
    id v14 = (id)isEscapingClosureAtFileLocation;
    swift_retain();
    swift_release();
    [v11 performWithoutAnimation:v13];
    _Block_release(v13);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
  }
  id v15 = (id)isEscapingClosureAtFileLocation;
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_4:
  unint64_t v6 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_16:
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_9;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v6 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = *(id *)(v3 + 8 * v6 + 32);
LABEL_9:
    id v8 = v7;
    swift_bridgeObjectRelease();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_100B3B6F4;
    *(void *)(v9 + 24) = v1;
    uint64_t v20 = sub_10007A644;
    uint64_t v21 = v9;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v17 = 1107296256;
    double v18 = sub_1002DE0E4;
    double v19 = &unk_10100D940;
    double v10 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v8 addCompletion:v10];
    swift_release();
    _Block_release(v10);

    return;
  }
  __break(1u);
}

uint64_t sub_100B2FF94(void *a1)
{
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_100B3B858;
  *(void *)(v4 + 24) = v3;
  v8[4] = sub_10013DF0C;
  v8[5] = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10007A61C;
  _OWORD v8[3] = &unk_10100D9B8;
  id v5 = _Block_copy(v8);
  id v6 = a1;
  swift_retain();
  swift_release();
  [(id)v2 performWithoutAnimation:v5];
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v2) {
    __break(1u);
  }
  return result;
}

void sub_100B300F8(uint64_t a1)
{
  id v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if ((unint64_t)*v7 >> 62)
  {
    if (v8 < 0) {
      uint64_t v1 = (uint64_t *)*v7;
    }
    else {
      uint64_t v1 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    if (v9) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    double v2 = 0.0;
    CGFloat v3 = 0.0;
    CGFloat v4 = 0.0;
    CGFloat v5 = 0.0;
    goto LABEL_12;
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_11;
  }
LABEL_3:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    id v10 = *(id *)(v8 + 32);
  }
  CGFloat v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t)v11;
  double v2 = UIView.untransformedFrame.getter();
  CGFloat v3 = v12;
  CGFloat v4 = v13;
  CGFloat v5 = v14;

LABEL_12:
  uint64_t v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  uint64_t v15 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v15 < 0) {
      uint64_t v8 = *v1;
    }
    else {
      uint64_t v8 = v15 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    if (!v16) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v16) {
      goto LABEL_24;
    }
  }
  if (v16 < 1)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  for (uint64_t i = 0; i != v16; ++i)
  {
    if ((v15 & 0xC000000000000001) != 0) {
      double v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      double v18 = (char *)*(id *)(v15 + 8 * i + 32);
    }
    double v19 = v18;
    sub_100B30B8C(v18);
  }
LABEL_24:
  swift_bridgeObjectRelease();
  if (!v9) {
    return;
  }
  uint64_t v8 = *v7;
  if (!((unint64_t)*v7 >> 62))
  {
    uint64_t v20 = *(void **)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20) {
      goto LABEL_27;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_40:
  swift_bridgeObjectRetain();
  uint64_t v20 = (void *)_CocoaArrayWrapper.endIndex.getter();
  if (!v20) {
    goto LABEL_41;
  }
LABEL_27:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_45:
      swift_bridgeObjectRetain();
      id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    id v21 = *(id *)(v8 + 32);
  }
  uint64_t v20 = v21;
  swift_bridgeObjectRelease();
  [v20 frame];
  v42.origin.x = v2;
  v42.origin.y = v3;
  v42.size.width = v4;
  v42.size.height = v5;
  if (CGRectEqualToRect(v41, v42))
  {
LABEL_36:

    return;
  }
  uint64_t v22 = (uint64_t)v20 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  sub_1000688E4(v22, (uint64_t)v38);
  uint64_t v23 = v39;
  uint64_t v24 = v40;
  sub_100068990(v38, v39);
  unint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
  uint64_t v26 = *v1;
  if ((*v1 & 0xC000000000000001) != 0) {
    goto LABEL_45;
  }
  if ((v25 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v25 < *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v27 = *(id *)(v26 + 8 * v25 + 32);
LABEL_35:
    id v28 = v27;
    double v29 = UIView.untransformedFrame.getter();
    CGFloat v31 = v30;
    CGFloat v33 = v32;
    CGFloat v35 = v34;

    sub_100B325BC(v29, v31, v33, v35);
    double v37 = v36;

    sub_1000760E4((uint64_t)v38);
    [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView) setContentOffset:0.0 v37];
    goto LABEL_36;
  }
  __break(1u);
}

void sub_100B304D0(char *a1, unsigned __int8 a2, uint64_t a3)
{
  CGFloat v4 = v3;
  [*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] frame];
  double Width = CGRectGetWidth(v62);
  id v9 = [v4 view];
  if (!v9) {
    goto LABEL_41;
  }
  id v10 = v9;
  int v11 = a2;
  [v9 layoutMargins];

  UIEdgeInsets.horizontal.getter();
  double v13 = Width - v12;
  uint64_t v14 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess();
  sub_1000688E4(v14, (uint64_t)&v60);
  sub_100063814(&qword_1010C9A68);
  if (swift_dynamicCast())
  {
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v15 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
    swift_beginAccess();
    if (*(void *)v15 && !*(unsigned char *)(*(void *)v15 + 96))
    {
      double v17 = 1.0;
    }
    else
    {
      uint64_t v16 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
      swift_beginAccess();
      double v17 = v16[64];
    }
  }
  else
  {
    double v17 = 1.0;
    if ((swift_dynamicCast() & 1) == 0 && swift_dynamicCast()) {
      swift_bridgeObjectRelease();
    }
  }
  sub_1000760E4((uint64_t)&v60);
  if (v11 == 2)
  {
    [a1 sizeThatFits:v13 * v17, INFINITY];
  }
  else
  {
    uint64_t v18 = *(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (v18)
    {
      uint64_t v19 = *(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
      uint64_t ObjectType = swift_getObjectType();
      v57[0] = v18;
      (*(void (**)(void, uint64_t, uint64_t, double, double))(v19 + 96))(v11 & 1, ObjectType, v19, v13 * v17, INFINITY);
    }
  }
  sub_1000688E4(v14, (uint64_t)v57);
  if (swift_dynamicCast())
  {
    uint64_t v21 = *(void *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
    if (v21)
    {
      uint64_t v22 = v21 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
      swift_beginAccess();
      sub_1000688E4(v22, (uint64_t)&v60);
      CGFloat height = v60.size.height;
      uint64_t v24 = v61;
      sub_100068990(&v60, *(uint64_t *)&v60.size.height);
      uint64_t v25 = (*(uint64_t (**)(CGFloat, uint64_t))(v24 + 16))(COERCE_CGFLOAT(*(void *)&height), v24);
      sub_1000760E4((uint64_t)&v60);
    }
    else
    {
      uint64_t v25 = 0;
    }
    sub_1000688E4(v14, (uint64_t)&v60);
    CGFloat v26 = v60.size.height;
    uint64_t v27 = v61;
    sub_100068990(&v60, *(uint64_t *)&v60.size.height);
    uint64_t v28 = (*(uint64_t (**)(CGFloat, uint64_t))(v27 + 16))(COERCE_CGFLOAT(*(void *)&v26), v27);
    if (v21)
    {
      uint64_t v29 = v28;
      sub_1000760E4((uint64_t)&v60);
      if (v25 == v29) {
        swift_beginAccess();
      }
    }
    else
    {
      sub_1000760E4((uint64_t)&v60);
    }
  }
  sub_1000760E4((uint64_t)v57);
  sub_1000688E4(v14, (uint64_t)v57);
  uint64_t v30 = v58;
  uint64_t v31 = v59;
  sub_100068990(v57, v58);
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
  sub_1000760E4((uint64_t)v57);
  if (!v32)
  {
    swift_beginAccess();
    CGRect v49 = &selRef_setObject_forKey_;
    goto LABEL_35;
  }
  sub_10002EDE0(a3, (uint64_t)&v60);
  if ((v61 & 1) == 0)
  {
    CGFloat x = v60.origin.x;
    CGFloat y = v60.origin.y;
    CGFloat v52 = v60.size.width;
    CGFloat v53 = v60.size.height;
    double v54 = CGRectGetHeight(v60);
    v65.origin.CGFloat x = x;
    v65.origin.CGFloat y = y;
    v65.size.width = v52;
    v65.size.CGFloat height = v53;
    CGRectGetMaxY(v65);
    CGRect v49 = &selRef_setObject_forKey_;
    if (v54 <= 0.0) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  sub_1000688E4(v14, (uint64_t)v57);
  uint64_t v33 = v58;
  uint64_t v34 = v59;
  sub_100068990(v57, v58);
  uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
  unint64_t v36 = v35 - 1;
  if (__OFSUB__(v35, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1000760E4((uint64_t)v57);
    double v37 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
    swift_beginAccess();
    uint64_t v38 = *(void *)v37;
    if ((v38 & 0xC000000000000001) == 0)
    {
      if ((v36 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v36 < *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v39 = *(id *)(v38 + 8 * v36 + 32);
        goto LABEL_30;
      }
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
  }
  swift_bridgeObjectRetain();
  id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_30:
  [v39 frame];
  double v40 = CGRectGetHeight(v63);
  id v41 = v39;
  double v42 = UIView.untransformedFrame.getter();
  CGFloat v44 = v43;
  CGFloat v46 = v45;
  CGFloat v48 = v47;

  v64.origin.CGFloat x = v42;
  v64.origin.CGFloat y = v44;
  v64.size.width = v46;
  v64.size.CGFloat height = v48;
  CGRectGetMaxY(v64);

  CGRect v49 = &selRef_setObject_forKey_;
  if (v40 <= 0.0) {
    goto LABEL_35;
  }
LABEL_34:
  swift_beginAccess();
LABEL_35:
  id v55 = [v4 v49[275]];
  if (v55)
  {
    long long v56 = v55;
    [v55 layoutMargins];

    return;
  }
LABEL_42:
  __break(1u);
}

void sub_100B30B8C(char *a1)
{
  uint64_t v2 = v1;
  memset(v29, 0, sizeof(v29));
  char v30 = 1;
  sub_100B304D0(a1, 2u, (uint64_t)v29);
  UIView.untransformedFrame.setter(v4, v5, v6, v7);
  uint64_t v8 = (uint64_t)&a1[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess();
  sub_1000688E4(v8, (uint64_t)v26);
  uint64_t v9 = v27;
  uint64_t v10 = v28;
  sub_100068990(v26, v27);
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  double v12 = (unint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  unint64_t v13 = *v12;
  if (!(v13 >> 62))
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v15 = v14 - 1;
    if (!__OFSUB__(v14, 1)) {
      goto LABEL_3;
    }
LABEL_10:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v15 = v25 - 1;
  if (__OFSUB__(v25, 1)) {
    goto LABEL_10;
  }
LABEL_3:
  sub_1000760E4((uint64_t)v26);
  if (v11 == v15)
  {
    uint64_t v16 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    id v17 = *(id *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView);
    [v17 frame];
    double Width = CGRectGetWidth(v31);
    v32.origin.CGFloat x = UIView.untransformedFrame.getter();
    [v17 setContentSize:CGSizeMake(Width, CGRectGetMaxY(v32))];

    [*(id *)(v2 + v16) frame];
    double Height = CGRectGetHeight(v33);
    [*(id *)(v2 + v16) contentInset];
    double v21 = v20;
    v34.origin.CGFloat x = UIView.untransformedFrame.getter();
    double v22 = Height - (v21 + CGRectGetHeight(v34));
    id v23 = *(id *)(v2 + v16);
    uint64_t v24 = v23;
    if (v22 <= 0.0) {
      [v23 contentInset];
    }
    [v24 contentInset];
    [v24 setContentInset:];
  }
}

void sub_100B30DA8(uint64_t a1)
{
  CGFloat v3 = (char **)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  if ((unint64_t)*v3 >> 62)
  {
LABEL_59:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)(((unint64_t)*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(v5 + 16);
  long long v67 = v3;
  if (v6 >= v4) {
    goto LABEL_8;
  }
  if (!((unint64_t)*v3 >> 62))
  {
    uint64_t v7 = *(void *)(((unint64_t)*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7 >= v6) {
      goto LABEL_6;
    }
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v7 < v6) {
    goto LABEL_61;
  }
LABEL_6:
  if (v6 != v7)
  {
    if (v6 < (unint64_t)v7)
    {
      CGFloat v3 = &selRef_initWithActivityIndicatorStyle_;
      unint64_t v61 = v6;
      while (1)
      {
        CGRect v62 = (char *)*v67;
        if ((*v67 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          id v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v61 & 0x8000000000000000) != 0) {
            goto LABEL_57;
          }
          if (v61 >= *(void *)(((unint64_t)v62 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_58:
            __break(1u);
            goto LABEL_59;
          }
          id v63 = *(id *)&v62[8 * v61 + 32];
        }
        ++v61;
        [v63 removeFromSuperview];

        if (v7 == v61) {
          goto LABEL_7;
        }
      }
    }
    goto LABEL_62;
  }
LABEL_7:
  CGFloat v3 = (char **)v67;
  swift_beginAccess();
  sub_100AE4DB8(v6, v7);
  swift_endAccess();
LABEL_8:
  uint64_t v8 = *(void **)(v69 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  *(void *)(v69 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView) = 0;

  uint64_t v9 = *(void *)(v5 + 16);
  if (v9)
  {
    uint64_t v10 = v69 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics;
    uint64_t v11 = (void *)(v69 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
    uint64_t v64 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
    uint64_t v12 = v5 + 32;
    swift_bridgeObjectRetain();
    uint64_t v68 = v10;
    swift_beginAccess();
    __src = v11;
    swift_beginAccess();
    while (1)
    {
      sub_1000688E4(v12, (uint64_t)v76);
      uint64_t v14 = v77;
      uint64_t v15 = v78;
      sub_100068990(v76, v77);
      uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
      uint64_t v17 = v16;
      if ((unint64_t)*v3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v17 >= v46)
        {
LABEL_32:
          sub_1000688E4((uint64_t)v76, (uint64_t)&v73);
          if (*(void *)v68)
          {
            if (*(unsigned char *)(*(void *)v68 + 96))
            {
              a1 = v9;
              uint64_t v47 = v77;
              uint64_t v48 = v78;
              sub_100068990(v76, v77);
              uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 24))(v47, v48);
            }
            else
            {
              uint64_t v49 = __src[6];
              char v50 = *((unsigned char *)__src + 56);
              sub_1000688E4((uint64_t)v76, (uint64_t)v70);
              if (v50)
              {
                uint64_t v51 = v71;
                uint64_t v52 = v72;
                sub_100068990(v70, v71);
                CGFloat v53 = *(uint64_t (**)(uint64_t, uint64_t))(v52 + 24);
                swift_retain();
                uint64_t v49 = v53(v51, v52);
              }
              else
              {
                swift_retain();
              }
              CGFloat v3 = (char **)v67;
              a1 = v9;
              sub_1000760E4((uint64_t)v70);
              swift_release();
            }
          }
          else
          {
            a1 = v9;
            uint64_t v49 = 4;
          }
          memcpy(__dst, __src, 0x219uLL);
          id v54 = objc_allocWithZone((Class)type metadata accessor for SyncedLyricsLineView());
          sub_100262548((uint64_t)__dst);
          id v55 = sub_100B23518((uint64_t)&v73, v49, __dst);
          sub_1002622C8((uint64_t)__dst);
          sub_100057778(0, &qword_1010CAC68);
          uint64_t v56 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v57 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v58 = swift_allocObject();
          *(void *)(v58 + 16) = v56;
          *(void *)(v58 + 24) = v57;
          uint64_t v59 = v55;
          CGRect v60 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
          [v59 addAction:v60 forControlEvents:64];

          [*(id *)(v69 + v64) addSubview:v59];
          swift_beginAccess();
          uint64_t v24 = v59;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)*v3 & 0xFFFFFFFFFFFFFF8)
                                                                                              + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          unint64_t v13 = (char *)[objc_allocWithZone((Class)UILongPressGestureRecognizer) init];
          [v13 setCancelsTouchesInView:0];
          [v13 addTarget:v69 action:"shareGestureHandler:"];
          [v24 addGestureRecognizer:v13];
          sub_100B30B8C(v24);

          uint64_t v9 = a1;
          goto LABEL_12;
        }
      }
      else if (v16 >= *(void *)(((unint64_t)*v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_32;
      }
      uint64_t v18 = v77;
      uint64_t v19 = v78;
      sub_100068990(v76, v77);
      unint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
      double v21 = *v3;
      if (((unint64_t)*v3 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        double v22 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((v20 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        if (v20 >= *(void *)(((unint64_t)v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_56;
        }
        double v22 = (char *)*(id *)&v21[8 * v20 + 32];
      }
      sub_1000688E4((uint64_t)v76, (uint64_t)&v73);
      id v23 = (uint64_t *)&v22[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess();
      uint64_t v24 = v22;
      sub_1001FF828(v23, (uint64_t *)&v73);
      swift_endAccess();
      sub_100B22404();
      sub_1000760E4((uint64_t)&v73);
      if (*(void *)v68)
      {
        if (*(unsigned char *)(*(void *)v68 + 96))
        {
          uint64_t v25 = v77;
          uint64_t v26 = v78;
          sub_100068990(v76, v77);
          uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 24))(v25, v26);
        }
        else
        {
          uint64_t v27 = __src[6];
          char v28 = *((unsigned char *)__src + 56);
          sub_1000688E4((uint64_t)v76, (uint64_t)&v73);
          if (v28)
          {
            uint64_t v29 = v74;
            uint64_t v30 = v75;
            sub_100068990(&v73, v74);
            a1 = v9;
            CGRect v31 = *(uint64_t (**)(uint64_t, uint64_t))(v30 + 24);
            swift_retain();
            uint64_t v32 = v31(v29, v30);
            uint64_t v9 = a1;
            uint64_t v27 = v32;
          }
          else
          {
            swift_retain();
          }
          sub_1000760E4((uint64_t)&v73);
          swift_release();
        }
      }
      else
      {
        uint64_t v27 = 4;
      }
      *(void *)&v24[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_alignment] = v27;
      sub_100B22404();
      uint64_t v33 = *(void *)&v24[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
      if (v33)
      {
        uint64_t v34 = *(void *)&v24[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView + 8];
        uint64_t ObjectType = swift_getObjectType();
        *(void *)&long long v73 = v33;
        (*(void (**)(uint64_t, uint64_t))(v34 + 80))(ObjectType, v34);
      }
      uint64_t v36 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
      v24[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
      uint64_t v38 = sub_100B21014((uint64_t)&v73);
      id v39 = *(void **)v37;
      if (*(void *)v37)
      {
        uint64_t v40 = v37;
        uint64_t v41 = v24[v36];
        a1 = *(void *)(v37 + 8);
        CGRect v65 = v38;
        uint64_t v42 = swift_getObjectType();
        v70[0] = v39;
        double v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 40);
        id v44 = v39;
        v43(v41, v42, a1);
        CGFloat v3 = (char **)v67;
        double v45 = *(void **)v40;
        *(void *)uint64_t v40 = v70[0];
        *(void *)(v40 + 8) = a1;

        v65(&v73, 0);
      }
      else
      {
        v38(&v73, 0);
      }
      sub_100B21AE0(0, 0);
      sub_100B30B8C(v24);
      unint64_t v13 = v24;
LABEL_12:

      sub_1000760E4((uint64_t)v76);
      v12 += 40;
      if (!--v9)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_100B32AE8(0);
  sub_100B2F7A8();
}

void sub_100B316E0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    swift_beginAccess();
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (!v2)
    {
      uint64_t v33 = v1;
LABEL_34:

      return;
    }
    CGFloat v3 = (char *)v2;
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator] selectionChanged];
    uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink];
    if (v4) {
      [v4 setPaused:1];
    }
    v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 1;
    uint64_t v5 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer;
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer] invalidate];
    uint64_t v6 = *(void **)&v1[v5];
    *(void *)&v1[v5] = 0;

    v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;
    uint64_t v7 = (uint64_t)&v3[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess();
    sub_1000688E4(v7, (uint64_t)v55);
    sub_100063814(&qword_1010C9A68);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_28:
      id v35 = [objc_allocWithZone((Class)MSVLyricsLine) init];
      sub_1000688E4(v7, (uint64_t)__dst);
      uint64_t v37 = __dst[3];
      uint64_t v36 = __dst[4];
      sub_100068990(__dst, __dst[3]);
      uint64_t v38 = *(void *)(v36 + 8);
      id v39 = *(double (**)(uint64_t, uint64_t))(v38 + 8);
      id v40 = v35;
      double v41 = v39(v37, v38);
      uint64_t v42 = *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
      double v43 = 0.0;
      if (v42)
      {
        swift_beginAccess();
        if (*(unsigned char *)(v42 + 88) == 1)
        {
          swift_retain();
          Lyrics.spatialOffset.getter();
          double v43 = v44;
          swift_release();
        }
      }
      sub_1000760E4((uint64_t)__dst);
      [v40 setStartTime:v41 + v43];

      sub_1000688E4(v7, (uint64_t)__dst);
      uint64_t v46 = __dst[3];
      uint64_t v45 = __dst[4];
      sub_100068990(__dst, __dst[3]);
      uint64_t v47 = *(void *)(v45 + 8);
      uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v47 + 16);
      uint64_t v33 = (char *)v40;
      v48(v46, v47);
      [v33 setEndTime:];

      sub_1000760E4((uint64_t)__dst);
      uint64_t v49 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
      swift_beginAccess();
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v50 = *((void *)v49 + 1);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(char *, char *, uint64_t, uint64_t))(v50 + 8))(v1, v33, ObjectType, v50);

        swift_unknownObjectRelease();
      }
      else
      {
      }
      goto LABEL_34;
    }
    uint64_t v8 = *(void **)&v3[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
    if (!v8) {
      goto LABEL_23;
    }
    _s19SBS_TextContentViewCMa();
    uint64_t v9 = swift_dynamicCastClass();
    if (!v9) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v9 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (!v10) {
      goto LABEL_37;
    }
    uint64_t v11 = *(void *)(v10
                    + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
    if (!v11)
    {
LABEL_23:
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    uint64_t v52 = v7;
    CGFloat v53 = v3;
    unint64_t v12 = *(void *)(v11 + 24);
    if (v12 >> 62)
    {
      id v34 = v8;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      if (v13) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v14 = v8;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v13)
      {
LABEL_12:
        sub_100057778(0, (unint64_t *)&qword_1010C8910);
        uint64_t v15 = v13 - 1;
        if (v13 >= 1)
        {
          uint64_t v16 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
          swift_beginAccess();
          uint64_t v17 = 0;
          if ((v12 & 0xC000000000000001) == 0) {
            goto LABEL_15;
          }
LABEL_14:
          uint64_t v18 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          while (1)
          {
            memcpy(__dst, v16, 0x219uLL);
            *(unsigned char *)(v18 + 80) = 1;
            sub_100262548((uint64_t)__dst);
            uint64_t v19 = (void *)static OS_dispatch_queue.main.getter();
            uint64_t v20 = swift_allocObject();
            swift_weakInit();
            swift_retain();
            OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100B3B44C, v20);

            swift_release_n();
            uint64_t v21 = *(void *)(v18 + 72);
            if (v21)
            {
              double v22 = *(void **)(v21 + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView4Line8LineView_gradientView);
              if (v22)
              {
                id v23 = (void *)__dst[21];
                id v24 = v22;
                [v23 lineHeight];
                double v26 = v25 * *(double *)&__dst[28] + *(double *)&__dst[44] + *(double *)&__dst[44];
                CGFloat v27 = *(double *)(v18 + 40);
                CGFloat v28 = *(double *)(v18 + 48);
                CGFloat v29 = *(double *)(v18 + 56);
                CGFloat v30 = *(double *)(v18 + 64);
                v56.origin.CGFloat x = v27;
                v56.origin.CGFloat y = v28;
                v56.size.width = v29;
                v56.size.CGFloat height = v30;
                double v31 = (v26 - CGRectGetHeight(v56)) * 0.5;
                id v32 = v24;
                v57.origin.CGFloat x = v27;
                v57.origin.CGFloat y = v28;
                v57.size.width = v29;
                v57.size.CGFloat height = v30;
                [v32 setFrame:-v31, -v31, v31, CGRectGetHeight(v57) + v31 + v31];
              }
            }
            sub_1002622C8((uint64_t)__dst);
            swift_release();
            if (v15 == v17) {
              break;
            }
            ++v17;
            if ((v12 & 0xC000000000000001) != 0) {
              goto LABEL_14;
            }
LABEL_15:
            uint64_t v18 = *(void *)(v12 + 8 * v17 + 32);
            swift_retain();
          }
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
    }
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_27:

    swift_release();
    uint64_t v7 = v52;
    CGFloat v3 = v53;
    goto LABEL_28;
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.enterTrackingMode()()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess();
  if (*v1 != 2)
  {
    sub_100B33D88();
    *uint64_t v1 = 2;
  }
}

Swift::Void __swiftcall SyncedLyricsViewController.leaveTrackingMode()()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  swift_beginAccess();
  if (*v1 == 2)
  {
    sub_100B32AE8(0);
    *uint64_t v1 = 0;
  }
}

uint64_t sub_100B31E38()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics);
  swift_beginAccess();
  if (!*v2 || (*(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded) & 1) != 0) {
    return 1;
  }
  uint64_t v4 = v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider;
  swift_beginAccess();
  sub_100B2FB64(v4, (uint64_t)&v9);
  if (v10)
  {
    sub_100068978(&v9, (uint64_t)v11);
    uint64_t v5 = v12;
    uint64_t v6 = v13;
    sub_100068990(v11, v12);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6))
    {
      BOOL v3 = 1;
    }
    else
    {
      uint64_t v7 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
      swift_beginAccess();
      BOOL v3 = *v7 == 2;
    }
    sub_1000760E4((uint64_t)v11);
  }
  else
  {
    sub_1000637B8((uint64_t)&v9, &qword_1010CAA80);
    return 1;
  }
  return v3;
}

void *sub_100B31F74()
{
  [*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] contentOffset];
  uint64_t result = [v0 view];
  if (result)
  {
    uint64_t v2 = result;
    [result frame];

    BOOL v3 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    swift_beginAccess();
    if (*v3 > 0.0)
    {
LABEL_5:
      __chkstk_darwin();
      swift_beginAccess();
      __chkstk_darwin();
      unint64_t v5 = swift_bridgeObjectRetain();
      uint64_t v6 = sub_100B38244(v5, (uint64_t (*)(void))sub_100B3B38C);
      swift_bridgeObjectRelease();
      uint64_t v7 = sub_100B39E74((uint64_t)v6);
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_100B294EC(v7);
      swift_bridgeObjectRelease();
      return v8;
    }
    uint64_t result = [v0 view];
    if (result)
    {
      uint64_t v4 = result;
      [result frame];

      goto LABEL_5;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100B32154(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_100068990(a1, v11);
  id v34 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 16);
  uint64_t v13 = v34(v11, v12);
  id v14 = (uint64_t *)(v6 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  int v15 = 0;
  BOOL v16 = v13 == 0;
  if (v13 <= 0) {
    goto LABEL_3;
  }
LABEL_2:
  for (uint64_t i = v13 - 1; ; uint64_t i = 0)
  {
    uint64_t v19 = *v14;
    if ((*v14 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((unint64_t)v13 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_41;
      }
      id v20 = *(id *)(v19 + 8 * v13 + 32);
    }
    [v20 frame];
    v37.origin.CGFloat x = a2;
    v37.origin.CGFloat y = a3;
    v37.size.width = a4;
    v37.size.CGFloat height = a5;
    if (!CGRectIntersectsRect(v35, v37)) {
      break;
    }
    id v21 = v20;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    uint64_t v13 = i;
    BOOL v16 = i == 0;
    if (i > 0) {
      goto LABEL_2;
    }
LABEL_3:
    int v18 = !v16;
    if ((v18 | v15)) {
      goto LABEL_18;
    }
    int v15 = 1;
  }

LABEL_18:
  uint64_t result = v34(v11, v12);
  uint64_t v13 = result + 1;
  if (__OFADD__(result, 1)) {
    goto LABEL_43;
  }
  if ((unint64_t)*v14 >> 62) {
    goto LABEL_44;
  }
  uint64_t v23 = *(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v24 = v23 - 1;
  if (__OFSUB__(v23, 1)) {
    goto LABEL_46;
  }
  while (2)
  {
    int v25 = 0;
    BOOL v26 = v13 == v24;
    if (v13 < v24)
    {
LABEL_22:
      uint64_t v27 = v13 + 1;
      goto LABEL_28;
    }
    while (1)
    {
      int v28 = !v26;
      if ((v28 | v25)) {
        goto LABEL_39;
      }
      int v25 = 1;
      uint64_t v27 = v24;
LABEL_28:
      uint64_t v29 = *v14;
      if ((*v14 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      if (v13 < 0) {
        break;
      }
      if ((unint64_t)v13 >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_42;
      }
      id v30 = *(id *)(v29 + 8 * v13 + 32);
LABEL_32:
      [v30 frame];
      v38.origin.CGFloat x = a2;
      v38.origin.CGFloat y = a3;
      v38.size.width = a4;
      v38.size.CGFloat height = a5;
      if (!CGRectIntersectsRect(v36, v38))
      {

LABEL_39:
        swift_getKeyPath();
        sub_100063814(&qword_1010CAC58);
        sub_10007ACD8(&qword_1010CAC60, &qword_1010CAC58);
        uint64_t v32 = Sequence.sorted<A>(by:comparator:)();
        swift_release();
        swift_bridgeObjectRelease();
        return v32;
      }
      id v31 = v30;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      uint64_t v13 = v27;
      BOOL v26 = v27 == v24;
      if (v27 < v24) {
        goto LABEL_22;
      }
    }
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v24 = v33 - 1;
    if (!__OFSUB__(v33, 1)) {
      continue;
    }
    break;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_100B32544(uint64_t a1, void *a2)
{
  sub_1000688E4(a1, (uint64_t)v5);
  BOOL v3 = (uint64_t *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line);
  swift_beginAccess();
  sub_1001FF828(v3, v5);
  swift_endAccess();
  sub_100B22404();
  return sub_1000760E4((uint64_t)v5);
}

double sub_100B325BC(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v9 = v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
  swift_beginAccess();
  int v10 = *(char *)(v9 + 40);
  if (v10 < 0)
  {
    CGFloat v11 = *(double *)(v9 + 8);
    CGFloat v12 = *(double *)(v9 + 16);
    char v13 = *(unsigned char *)(v9 + 40);
    CGFloat v15 = *(double *)(v9 + 24);
    CGFloat v14 = *(double *)(v9 + 32);
    if (v10)
    {
      [*(id *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView) frame];
    }
    else
    {
      CGFloat v16 = v11;
      CGFloat v17 = v12;
      CGFloat v18 = v15;
      CGFloat v19 = v14;
    }
    CGRectGetHeight(*(CGRect *)&v16);
    v22.origin.CGFloat x = a1;
    v22.origin.CGFloat y = a2;
    v22.size.width = a3;
    v22.size.CGFloat height = a4;
    CGRectGetHeight(v22);
    v23.origin.CGFloat x = a1;
    v23.origin.CGFloat y = a2;
    v23.size.width = a3;
    v23.size.CGFloat height = a4;
    CGRectGetMinY(v23);
    if ((v13 & 1) == 0)
    {
      v24.origin.CGFloat x = v11;
      v24.origin.CGFloat y = v12;
      v24.size.width = v15;
      v24.size.CGFloat height = v14;
      CGRectGetMinY(v24);
    }
  }
  else
  {
    v21.origin.CGFloat x = a1;
    v21.origin.CGFloat y = a2;
    v21.size.width = a3;
    v21.size.CGFloat height = a4;
    CGRectGetMinY(v21);
    [*(id *)(v4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView) contentInset];
  }
  return 0.0;
}

void sub_100B3271C(void *a1, void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  sub_100068990(a1, v9);
  unint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  CGFloat v12 = (uint64_t *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  uint64_t v13 = *v12;
  if ((*v12 & 0xC000000000000001) == 0)
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v11 < *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      CGFloat v12 = (uint64_t *)*(id *)(v13 + 8 * v11 + 32);
      if ((a3 & 1) == 0) {
        goto LABEL_21;
      }
LABEL_5:
      char v31 = a4;
      a3 = (uint64_t *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
      swift_beginAccess();
      a4 = *a3;
      uint64_t v32 = v5;
      if (!((unint64_t)*a3 >> 62))
      {
        uint64_t v14 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v14)
        {
LABEL_7:
          type metadata accessor for SyncedLyricsLineView();
          if (v14 < 1)
          {
            __break(1u);
            return;
          }
          for (uint64_t i = 0; i != v14; ++i)
          {
            if ((a4 & 0xC000000000000001) != 0) {
              id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v16 = *(id *)(a4 + 8 * i + 32);
            }
            CGFloat v17 = v16;
            if ((static NSObject.== infix(_:_:)() & 1) == 0) {
              sub_100B21AE0(0, a2);
            }
          }
        }
LABEL_20:
        swift_bridgeObjectRelease();
        *a3 = (uint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRelease();
        uint64_t v5 = v32;
        LOBYTE(a4) = v31;
        goto LABEL_21;
      }
LABEL_19:
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      if (v14) {
        goto LABEL_7;
      }
      goto LABEL_20;
    }
    __break(1u);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  CGFloat v12 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
  if (a3) {
    goto LABEL_5;
  }
LABEL_21:
  sub_100B21AE0(1, a2);
  sub_100B2E9EC((uint64_t)v12, a2 != 0);
  CGFloat v18 = *(void **)((char *)v12 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
  if (v18)
  {
    _s23InstrumentalContentViewCMa();
    if (swift_dynamicCastClass())
    {
      CGFloat v19 = *(void **)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
      *(void *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView) = v12;
      id v20 = v18;
      CGRect v21 = v12;

      if (a4)
      {
        uint64_t v22 = *(void *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager);
        double v23 = 0.0;
        if (v22)
        {
          swift_beginAccess();
          CGRect v24 = *(double (**)(uint64_t))(v22 + 96);
          if (v24)
          {
            swift_retain();
            uint64_t v25 = sub_10007B674((uint64_t)v24);
            double v26 = v24(v25);
            swift_beginAccess();
            double v27 = 0.0;
            if (*(unsigned char *)(v22 + 88) == 1)
            {
              Lyrics.spatialOffset.getter();
              double v27 = v28;
            }
            sub_10006ADFC((uint64_t)v24);
            swift_release();
            double v23 = v26 - v27;
          }
        }
        sub_100B1D8FC(v23);
      }
    }
  }
  sub_100B33C6C(v12, 1, 0.0);
  uint64_t v29 = (void *)(v5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess();
  id v30 = v12;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
}

id sub_100B32AE8(uint64_t a1)
{
  uint64_t v4 = v1;
  id v6 = [v1 traitCollection];
  id v7 = [v6 accessibilityContrast];

  uint64_t v139 = v4;
  if (v7 != (id)1)
  {
    uint64_t v14 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
    id result = (id)swift_beginAccess();
    if (*v14 == 1) {
      return result;
    }
    if (a1)
    {
      uint64_t v149 = a1;
      uint64_t v3 = a1;
      goto LABEL_7;
    }
    uint64_t v72 = *(void *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager];
    if (!v72 || (swift_beginAccess(), uint64_t v73 = *(void *)(v72 + 80), !*(void *)(v73 + 16)))
    {
      double v85 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
      id result = (id)swift_beginAccess();
      if (*(void *)v85 >> 62) {
        goto LABEL_153;
      }
      if (*(uint64_t *)((*(void *)v85 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1) {
        return result;
      }
      goto LABEL_84;
    }
    sub_1000688E4(v73 + 32, (uint64_t)&v151);
    [*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] contentOffset];
    CGFloat v75 = v74;
    CGFloat v77 = v76;
    id result = [v4 view];
    if (!result) {
      goto LABEL_168;
    }
    uint64_t v78 = result;
    [result frame];
    CGFloat v80 = v79;

    double v81 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
    swift_beginAccess();
    CGFloat v82 = *v81;
    if (*v81 <= 0.0)
    {
      id result = [v4 view];
      if (!result) {
        goto LABEL_170;
      }
      double v83 = result;
      [result frame];
      CGFloat v82 = v84;
    }
    uint64_t v3 = sub_100B32154(&v151, v75, v77, v80, v82);
    sub_1000760E4((uint64_t)&v151);
    uint64_t v149 = v3;
LABEL_7:
    uint64_t v8 = (uint64_t *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
    swift_beginAccess();
    uint64_t v12 = *v8;
    uint64_t v148 = *v8;
    if ((unint64_t)v3 >> 62)
    {
LABEL_100:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v2)
      {
LABEL_9:
        if (v2 >= 1)
        {
          a1 = 0;
          uint64_t v16 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
          uint64_t v136 = v2;
          unint64_t v138 = v3 & 0xC000000000000001;
          uint64_t v135 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
          while (1)
          {
            if (v138) {
              id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v19 = *(id *)(v3 + 8 * a1 + 32);
            }
            uint64_t v12 = (uint64_t)v19;
            uint64_t v20 = *(void *)&v4[v16];
            if (!v20) {
              goto LABEL_30;
            }
            swift_beginAccess();
            uint64_t v21 = *(void *)(v20 + 80);
            if (!*(void *)(v21 + 16)) {
              goto LABEL_30;
            }
            sub_1000688E4(v21 + 32, (uint64_t)&v151);
            uint64_t v22 = *(void *)(v21 + 16);
            if (!v22)
            {
              sub_1000760E4((uint64_t)&v151);
LABEL_30:
              uint64_t v42 = a1 + 3;
              if (__OFADD__(a1, 3))
              {
                __break(1u);
                goto LABEL_98;
              }
              id v43 = [v4 traitCollection];
              id v44 = [v43 accessibilityContrast];

              if (v44 != (id)1 || v42 <= 0)
              {
                double v46 = (double)v42;
                if ((double)v42 > 4.0) {
                  double v46 = 4.0;
                }
                sub_100B21F78(1, v46);
                swift_beginAccess();
                if (a1 == -3)
                {
                  uint64_t v48 = (void *)sub_100BB9F20((void *)v12);
                  swift_endAccess();
                }
                else
                {
                  sub_100BB8530(&v145, (id)v12);
                  uint64_t v47 = (void *)v145;
                  swift_endAccess();
                }
              }
              goto LABEL_13;
            }
            uint64_t v23 = v3;
            sub_1000688E4(v21 + 32 + 40 * v22 - 40, (uint64_t)&v145);
            uint64_t v24 = v12 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
            swift_beginAccess();
            sub_1000688E4(v24, (uint64_t)v142);
            uint64_t v25 = v143;
            uint64_t v26 = v144;
            sub_100068990(v142, v143);
            uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
            uint64_t v29 = v146;
            uint64_t v28 = v147;
            sub_100068990(&v145, v146);
            uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v29, v28);
            sub_1000760E4((uint64_t)v142);
            if (v30 >= v27)
            {
              sub_1000688E4(v24, (uint64_t)v142);
              uint64_t v49 = v143;
              uint64_t v50 = v144;
              sub_100068990(v142, v143);
              uint64_t v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 16))(v49, v50);
              uint64_t v52 = v154;
              unint64_t v53 = v155;
              sub_100068990(&v151, v154);
              uint64_t v54 = (*(uint64_t (**)(uint64_t, unint64_t))(v53 + 16))(v52, v53);
              sub_1000760E4((uint64_t)v142);
              uint64_t v4 = v139;
              id v55 = [v139 traitCollection];
              id v56 = [v55 accessibilityContrast];

              if (v51 >= v54)
              {
                sub_100B21F78(1, 0.0);
                swift_beginAccess();
                CGFloat v17 = (void *)sub_100BB9F20((void *)v12);
                swift_endAccess();

                uint64_t v3 = v23;
                uint64_t v16 = v135;
                uint64_t v2 = v136;
              }
              else
              {
                uint64_t v3 = v23;
                uint64_t v16 = v135;
                uint64_t v2 = v136;
                if (v56 != (id)1)
                {
                  sub_100B21F78(1, 3.0);
LABEL_44:
                  swift_beginAccess();
                  sub_100BB8530(&v141, (id)v12);
                  CGRect v57 = v141;
                  swift_endAccess();
                }
              }
            }
            else
            {
              sub_1000688E4(v24, (uint64_t)v142);
              uint64_t v31 = v143;
              uint64_t v32 = v144;
              sub_100068990(v142, v143);
              uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32);
              uint64_t v3 = v146;
              uint64_t v34 = v147;
              sub_100068990(&v145, v146);
              uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v3, v34);
              uint64_t v36 = v33 - v35;
              uint64_t v4 = v139;
              if (__OFSUB__(v33, v35)) {
                goto LABEL_99;
              }
              sub_1000760E4((uint64_t)v142);
              double v37 = (double)v36 + 1.0;
              id v38 = [v139 traitCollection];
              id v39 = [v38 accessibilityContrast];

              uint64_t v3 = v23;
              uint64_t v16 = v135;
              uint64_t v2 = v136;
              if (v39 == (id)1 && v37 > 0.0) {
                goto LABEL_12;
              }
              if (v37 <= 4.0) {
                double v40 = (double)v36 + 1.0;
              }
              else {
                double v40 = 4.0;
              }
              sub_100B21F78(1, v40);
              if (v37 != 0.0) {
                goto LABEL_44;
              }
              swift_beginAccess();
              double v41 = (void *)sub_100BB9F20((void *)v12);
              swift_endAccess();
            }
LABEL_12:
            sub_1000760E4((uint64_t)&v145);
            sub_1000760E4((uint64_t)&v151);
LABEL_13:
            ++a1;
            CGFloat v18 = (void *)sub_100BB9F20((void *)v12);

            if (v2 == a1)
            {
              swift_bridgeObjectRelease();
              uint64_t v12 = v148;
              if ((v148 & 0xC000000000000001) == 0) {
                goto LABEL_102;
              }
LABEL_73:
              __CocoaSet.makeIterator()();
              type metadata accessor for SyncedLyricsLineView();
              sub_100B3B748(&qword_1010CAC98, (void (*)(uint64_t))type metadata accessor for SyncedLyricsLineView);
              Set.Iterator.init(_cocoa:)();
              uint64_t v12 = v151;
              uint64_t v69 = v152;
              uint64_t v70 = v153;
              a1 = v154;
              unint64_t v71 = v155;
              goto LABEL_106;
            }
          }
        }
        goto LABEL_145;
      }
    }
    else
    {
      uint64_t v2 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v2) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    if ((v12 & 0xC000000000000001) != 0) {
      goto LABEL_73;
    }
LABEL_102:
    a1 = 0;
    uint64_t v103 = -1 << *(unsigned char *)(v12 + 32);
    uint64_t v69 = v12 + 56;
    uint64_t v70 = ~v103;
    uint64_t v104 = -v103;
    if (v104 < 64) {
      uint64_t v105 = ~(-1 << v104);
    }
    else {
      uint64_t v105 = -1;
    }
    unint64_t v71 = v105 & *(void *)(v12 + 56);
LABEL_106:
    uint64_t v3 = (unint64_t)(v70 + 64) >> 6;
    if (v12 < 0) {
      goto LABEL_109;
    }
    while (1)
    {
      if (v71)
      {
        uint64_t v4 = (char *)((v71 - 1) & v71);
        unint64_t v106 = __clz(__rbit64(v71)) | (a1 << 6);
        uint64_t v107 = a1;
      }
      else
      {
        uint64_t v109 = a1 + 1;
        if (__OFADD__(a1, 1))
        {
          __break(1u);
LABEL_145:
          __break(1u);
          goto LABEL_146;
        }
        if (v109 >= v3)
        {
LABEL_129:
          id result = (id)sub_100048F1C();
          double v85 = (char *)*v8;
          if ((*v8 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            uint64_t v114 = __CocoaSet.count.getter();
            id result = (id)swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v114 = *((void *)v85 + 2);
          }
          if (v114 < 1) {
            return result;
          }
          uint64_t v115 = (uint64_t *)&v139[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
          swift_beginAccess();
          a1 = *v115;
          if (!((unint64_t)*v115 >> 62))
          {
            uint64_t v116 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (!v116) {
              return (id)swift_bridgeObjectRelease();
            }
            goto LABEL_135;
          }
LABEL_146:
          if (a1 < 0) {
            double v85 = (char *)a1;
          }
          else {
            double v85 = (char *)(a1 & 0xFFFFFFFFFFFFFF8);
          }
          swift_bridgeObjectRetain();
          uint64_t v116 = _CocoaArrayWrapper.endIndex.getter();
          if (!v116) {
            return (id)swift_bridgeObjectRelease();
          }
LABEL_135:
          if (v116 >= 1)
          {
            uint64_t v117 = 0;
            uint64_t v137 = v116;
            do
            {
              if ((a1 & 0xC000000000000001) != 0) {
                uint64_t v126 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                uint64_t v126 = (unsigned __int8 *)*(id *)(a1 + 8 * v117 + 32);
              }
              unint64_t v127 = v126;
              uint64_t v128 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
              v126[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 0;
              id v125 = sub_100B21014((uint64_t)&v145);
              os_log_type_t v130 = *(void **)v129;
              if (*(void *)v129)
              {
                uint64_t v118 = v129;
                uint64_t v119 = v127[v128];
                uint64_t v120 = *(void *)(v129 + 8);
                v140 = v125;
                uint64_t ObjectType = swift_getObjectType();
                uint64_t v141 = v130;
                uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 40);
                id v123 = v130;
                v122(v119, ObjectType, v120);
                id v124 = *(void **)v118;
                *(void *)uint64_t v118 = v141;
                *(void *)(v118 + 8) = v120;
                uint64_t v116 = v137;

                id v125 = v140;
              }
              v125(&v145, 0);
              ++v117;
            }
            while (v116 != v117);
            return (id)swift_bridgeObjectRelease();
          }
          __break(1u);
LABEL_153:
          swift_bridgeObjectRetain();
          uint64_t v131 = _CocoaArrayWrapper.endIndex.getter();
          id result = (id)swift_bridgeObjectRelease();
          if (v131 < 1) {
            return result;
          }
LABEL_84:
          [*(id *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] contentOffset];
          CGFloat v87 = v86;
          CGFloat v89 = v88;
          double v90 = &selRef_setObject_forKey_;
          id result = [v4 view];
          if (!result) {
            goto LABEL_169;
          }
          double v91 = result;
          [result frame];
          CGFloat v93 = v92;

          uint64_t v94 = (double *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
          swift_beginAccess();
          CGFloat v95 = *v94;
          if (*v94 <= 0.0)
          {
            id result = [v4 view];
            if (!result) {
              goto LABEL_171;
            }
            id v96 = result;
            [result frame];
            CGFloat v95 = v97;
          }
          uint64_t v98 = *(void *)v85;
          if ((*(void *)v85 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            id v99 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            if (!*(void *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_157;
            }
            id v99 = *(id *)(v98 + 32);
          }
          uint64_t v100 = (uint64_t)v99 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
          swift_beginAccess();
          sub_1000688E4(v100, (uint64_t)&v151);

          uint64_t v3 = sub_100B32154(&v151, v87, v89, v93, v95);
          sub_1000760E4((uint64_t)&v151);
          uint64_t v149 = v3;
          double v90 = (char **)((unint64_t)v3 >> 62);
          if ((unint64_t)v3 >> 62)
          {
LABEL_157:
            swift_bridgeObjectRetain();
            uint64_t v132 = _CocoaArrayWrapper.endIndex.getter();
            uint64_t v2 = v3;
            swift_bridgeObjectRelease();
            if (v132 < 1) {
              goto LABEL_166;
            }
            swift_bridgeObjectRetain();
            uint64_t v133 = _CocoaArrayWrapper.endIndex.getter();
            id result = (id)swift_bridgeObjectRelease();
            if (!v133) {
              goto LABEL_172;
            }
            swift_bridgeObjectRetain();
            uint64_t v134 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            uint64_t v4 = v139;
            if (v134)
            {
LABEL_93:
              if ((v3 & 0xC000000000000001) != 0) {
                goto LABEL_161;
              }
              if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                id result = *(id *)(v3 + 32);
                os_log_type_t v101 = result;
                if (!v90) {
                  goto LABEL_96;
                }
                goto LABEL_162;
              }
              __break(1u);
LABEL_166:
              uint64_t v4 = v139;
              uint64_t v3 = v2;
            }
            else
            {
              __break(1u);
LABEL_161:
              id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              os_log_type_t v101 = result;
              if (!v90)
              {
LABEL_96:
                uint64_t v102 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
                goto LABEL_163;
              }
LABEL_162:
              swift_bridgeObjectRetain();
              uint64_t v102 = _CocoaArrayWrapper.endIndex.getter();
              id result = (id)swift_bridgeObjectRelease();
LABEL_163:
              if (!v102)
              {
                __break(1u);
LABEL_168:
                __break(1u);
LABEL_169:
                __break(1u);
LABEL_170:
                __break(1u);
LABEL_171:
                __break(1u);
LABEL_172:
                __break(1u);
                return result;
              }
              sub_100AE4DB8(0, 1);

              uint64_t v3 = v149;
            }
          }
          else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_93;
          }
          goto LABEL_7;
        }
        unint64_t v110 = *(void *)(v69 + 8 * v109);
        uint64_t v107 = a1 + 1;
        if (!v110)
        {
          uint64_t v107 = a1 + 2;
          if (a1 + 2 >= v3) {
            goto LABEL_129;
          }
          unint64_t v110 = *(void *)(v69 + 8 * v107);
          if (!v110)
          {
            uint64_t v107 = a1 + 3;
            if (a1 + 3 >= v3) {
              goto LABEL_129;
            }
            unint64_t v110 = *(void *)(v69 + 8 * v107);
            if (!v110)
            {
              uint64_t v107 = a1 + 4;
              if (a1 + 4 >= v3) {
                goto LABEL_129;
              }
              unint64_t v110 = *(void *)(v69 + 8 * v107);
              if (!v110)
              {
                uint64_t v111 = a1 + 5;
                do
                {
                  if (v3 == v111) {
                    goto LABEL_129;
                  }
                  unint64_t v110 = *(void *)(v69 + 8 * v111++);
                }
                while (!v110);
                uint64_t v107 = v111 - 1;
              }
            }
          }
        }
        uint64_t v4 = (char *)((v110 - 1) & v110);
        unint64_t v106 = __clz(__rbit64(v110)) + (v107 << 6);
      }
      uint64_t v2 = (uint64_t)*(id *)(*(void *)(v12 + 48) + 8 * v106);
      if (!v2) {
        goto LABEL_129;
      }
      while (1)
      {
        id v112 = [v139 traitCollection];
        [v112 accessibilityContrast];

        sub_100B21F78(0, 0.0);
        swift_beginAccess();
        os_log_type_t v113 = (void *)sub_100BB9F20((void *)v2);
        swift_endAccess();

        a1 = v107;
        unint64_t v71 = (unint64_t)v4;
        if ((v12 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_109:
        uint64_t v108 = __CocoaSet.Iterator.next()();
        if (v108)
        {
          v142[0] = v108;
          type metadata accessor for SyncedLyricsLineView();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          uint64_t v2 = v145;
          swift_unknownObjectRelease();
          uint64_t v107 = a1;
          uint64_t v4 = (char *)v71;
          if (v2) {
            continue;
          }
        }
        goto LABEL_129;
      }
    }
  }
  uint64_t v8 = (uint64_t *)&v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
  swift_beginAccess();
  uint64_t v9 = *v8;
  if ((*v8 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for SyncedLyricsLineView();
    sub_100B3B748(&qword_1010CAC98, (void (*)(uint64_t))type metadata accessor for SyncedLyricsLineView);
    Set.Iterator.init(_cocoa:)();
    uint64_t v9 = v151;
    uint64_t v10 = v152;
    uint64_t v11 = v153;
    uint64_t v12 = v154;
    unint64_t v13 = v155;
  }
  else
  {
    uint64_t v58 = -1 << *(unsigned char *)(v9 + 32);
    uint64_t v10 = v9 + 56;
    uint64_t v11 = ~v58;
    uint64_t v59 = -v58;
    if (v59 < 64) {
      uint64_t v60 = ~(-1 << v59);
    }
    else {
      uint64_t v60 = -1;
    }
    unint64_t v13 = v60 & *(void *)(v9 + 56);
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
  }
  int64_t v61 = (unint64_t)(v11 + 64) >> 6;
  if (v9 < 0) {
    goto LABEL_52;
  }
  while (1)
  {
    if (v13)
    {
      uint64_t v4 = (char *)((v13 - 1) & v13);
      unint64_t v62 = __clz(__rbit64(v13)) | (v12 << 6);
      uint64_t v3 = v12;
      goto LABEL_69;
    }
    int64_t v64 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
      goto LABEL_100;
    }
    if (v64 >= v61) {
      return (id)sub_100048F1C();
    }
    unint64_t v65 = *(void *)(v10 + 8 * v64);
    uint64_t v3 = v12 + 1;
    if (!v65)
    {
      uint64_t v3 = v12 + 2;
      if (v12 + 2 >= v61) {
        return (id)sub_100048F1C();
      }
      unint64_t v65 = *(void *)(v10 + 8 * v3);
      if (!v65)
      {
        uint64_t v3 = v12 + 3;
        if (v12 + 3 >= v61) {
          return (id)sub_100048F1C();
        }
        unint64_t v65 = *(void *)(v10 + 8 * v3);
        if (!v65)
        {
          uint64_t v3 = v12 + 4;
          if (v12 + 4 >= v61) {
            return (id)sub_100048F1C();
          }
          unint64_t v65 = *(void *)(v10 + 8 * v3);
          if (!v65) {
            break;
          }
        }
      }
    }
LABEL_68:
    uint64_t v4 = (char *)((v65 - 1) & v65);
    unint64_t v62 = __clz(__rbit64(v65)) + (v3 << 6);
LABEL_69:
    a1 = (uint64_t)*(id *)(*(void *)(v9 + 48) + 8 * v62);
    if (!a1) {
      return (id)sub_100048F1C();
    }
    while (1)
    {
      id v67 = [v139 traitCollection];
      [v67 accessibilityContrast];

      sub_100B21F78(0, 0.0);
      swift_beginAccess();
      uint64_t v68 = (void *)sub_100BB9F20((void *)a1);
      swift_endAccess();

      uint64_t v12 = v3;
      unint64_t v13 = (unint64_t)v4;
      if ((v9 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_52:
      uint64_t v63 = __CocoaSet.Iterator.next()();
      if (v63)
      {
        uint64_t v150 = v63;
        type metadata accessor for SyncedLyricsLineView();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        a1 = v142[0];
        swift_unknownObjectRelease();
        uint64_t v3 = v12;
        uint64_t v4 = (char *)v13;
        if (v142[0]) {
          continue;
        }
      }
      return (id)sub_100048F1C();
    }
  }
  uint64_t v66 = v12 + 5;
  while (v61 != v66)
  {
    unint64_t v65 = *(void *)(v10 + 8 * v66++);
    if (v65)
    {
      uint64_t v3 = v66 - 1;
      goto LABEL_68;
    }
  }
  return (id)sub_100048F1C();
}

void sub_100B33C6C(void *a1, char a2, double a3)
{
  uint64_t v4 = v3;
  id v8 = [v4 traitCollection];
  id v9 = [v8 accessibilityContrast];

  if (v9 != (id)1 || a3 <= 0.0)
  {
    double v10 = 4.0;
    if (a3 <= 4.0) {
      double v10 = a3;
    }
    sub_100B21F78(a2 & 1, v10);
    swift_beginAccess();
    if (a3 == 0.0)
    {
      uint64_t v11 = (void *)sub_100BB9F20(a1);
    }
    else
    {
      sub_100BB8530(&v12, a1);
      uint64_t v11 = v12;
    }
    swift_endAccess();
  }
}

uint64_t sub_100B33D88()
{
  uint64_t v2 = v0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews];
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  if ((*(void *)v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for SyncedLyricsLineView();
    sub_100B3B748(&qword_1010CAC98, (void (*)(uint64_t))type metadata accessor for SyncedLyricsLineView);
    Set.Iterator.init(_cocoa:)();
    uint64_t v4 = v42[10];
    uint64_t v40 = v42[11];
    uint64_t v5 = v42[12];
    uint64_t v6 = v42[13];
    unint64_t v7 = v42[14];
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(v4 + 32);
    uint64_t v40 = v4 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v4 + 56);
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  uint64_t v37 = v5;
  int64_t v39 = (unint64_t)(v5 + 64) >> 6;
  if (v4 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v7)
    {
      uint64_t v11 = (v7 - 1) & v7;
      unint64_t v12 = __clz(__rbit64(v7)) | (v6 << 6);
      uint64_t v13 = v6;
      goto LABEL_27;
    }
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v15 >= v39) {
      goto LABEL_30;
    }
    unint64_t v16 = *(void *)(v40 + 8 * v15);
    uint64_t v13 = v6 + 1;
    if (!v16)
    {
      uint64_t v13 = v6 + 2;
      if (v6 + 2 >= v39) {
        goto LABEL_30;
      }
      unint64_t v16 = *(void *)(v40 + 8 * v13);
      if (!v16)
      {
        uint64_t v13 = v6 + 3;
        if (v6 + 3 >= v39) {
          goto LABEL_30;
        }
        unint64_t v16 = *(void *)(v40 + 8 * v13);
        if (!v16)
        {
          uint64_t v13 = v6 + 4;
          if (v6 + 4 >= v39) {
            goto LABEL_30;
          }
          unint64_t v16 = *(void *)(v40 + 8 * v13);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
LABEL_27:
    unint64_t v1 = (unint64_t)*(id *)(*(void *)(v4 + 48) + 8 * v12);
    if (!v1) {
      goto LABEL_30;
    }
    while (1)
    {
      id v18 = [v2 traitCollection];
      [v18 accessibilityContrast];

      sub_100B21F78(1, 0.0);
      swift_beginAccess();
      id v19 = (void *)sub_100BB9F20((void *)v1);
      swift_endAccess();

      uint64_t v6 = v13;
      unint64_t v7 = v11;
      if ((v4 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      uint64_t v14 = __CocoaSet.Iterator.next()();
      if (v14)
      {
        v42[4] = v14;
        type metadata accessor for SyncedLyricsLineView();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        unint64_t v1 = v42[0];
        swift_unknownObjectRelease();
        uint64_t v13 = v6;
        uint64_t v11 = v7;
        if (v42[0]) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  uint64_t v17 = v6 + 5;
  while (v39 != v17)
  {
    unint64_t v16 = *(void *)(v40 + 8 * v17++);
    if (v16)
    {
      uint64_t v13 = v17 - 1;
      goto LABEL_26;
    }
  }
LABEL_30:
  sub_100048F1C();
  uint64_t v20 = (id *)&v2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess();
  unint64_t v1 = (unint64_t)*v20;
  if (!((unint64_t)*v20 >> 62))
  {
    uint64_t v21 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_32;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_42:
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v21 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_32:
  if (v21 >= 1)
  {
    uint64_t v23 = 0;
    uint64_t v38 = v21;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        uint64_t v24 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v24 = (unsigned __int8 *)*(id *)(v1 + 8 * v23 + 32);
      }
      uint64_t v25 = v24;
      uint64_t v26 = OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling;
      v24[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_isScrolling] = 1;
      uint64_t v28 = sub_100B21014((uint64_t)v42);
      uint64_t v29 = *(void **)v27;
      if (*(void *)v27)
      {
        uint64_t v30 = v27;
        uint64_t v31 = v25[v26];
        uint64_t v32 = *(void *)(v27 + 8);
        double v41 = v28;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 40);
        id v35 = v29;
        v34(v31, ObjectType, v32);
        uint64_t v36 = *(void **)v30;
        *(void *)uint64_t v30 = v29;
        *(void *)(v30 + 8) = v32;
        uint64_t v21 = v38;

        v41((long long *)v42, 0);
      }
      else
      {
        v28((long long *)v42, 0);
      }
      ++v23;
    }
    while (v21 != v23);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_100B3423C(unint64_t a1, char a2, uint64_t a3, char a4, char a5, double a6, double a7, double a8)
{
  uint64_t v9 = v8;
  uint64_t v17 = swift_allocObject();
  *(double *)(v17 + 16) = a6;
  *(double *)(v17 + 24) = a7;
  uint64_t v18 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  [*(id *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] contentOffset];
  double v20 = v19;
  [*(id *)&v9[v18] contentOffset];
  double v22 = v21;
  CGFloat v24 = v23;
  uint64_t v25 = &selRef_setObject_forKey_;
  id v26 = [v9 view];
  if (!v26) {
    goto LABEL_122;
  }
  uint64_t v27 = v26;
  [v26 frame];
  CGFloat v29 = v28;

  uint64_t v30 = (CGFloat *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  swift_beginAccess();
  CGFloat v31 = *v30;
  if (*v30 <= 0.0)
  {
    id v32 = [v9 view];
    if (!v32) {
      goto LABEL_123;
    }
    uint64_t v33 = v32;
    [v32 frame];
    CGFloat v31 = v34;
  }
  uint64_t v35 = a4 & 1;
  double v36 = a7 - v20;
  v176.origin.CGFloat x = v22;
  v176.origin.CGFloat y = v24;
  v176.size.width = v29;
  v176.size.CGFloat height = v31;
  CGRect v180 = CGRectOffset(v176, 0.0, v36);
  v177.origin.CGFloat x = v22;
  v177.origin.CGFloat y = v24;
  v177.size.width = v29;
  v177.size.CGFloat height = v31;
  CGRect v178 = CGRectUnion(v177, v180);
  unint64_t v156 = sub_100B32154((void *)a1, v178.origin.x, v178.origin.y, v178.size.width, v178.size.height);
  uint64_t v37 = *(void *)(a1 + 24);
  uint64_t v38 = *(void *)(a1 + 32);
  sub_100068990((void *)a1, v37);
  unint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
  uint64_t v40 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess();
  uint64_t v41 = *(void *)v40;
  if ((v41 & 0xC000000000000001) == 0)
  {
    if ((v39 & 0x8000000000000000) != 0)
    {
LABEL_105:
      __break(1u);
    }
    else if (v39 < *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v161 = *(id *)(v41 + 8 * v39 + 32);
      if (v35) {
        goto LABEL_17;
      }
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_107;
  }
  swift_bridgeObjectRetain();
  id v161 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
  if (v35) {
    goto LABEL_17;
  }
LABEL_9:
  uint64_t v42 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
  swift_beginAccess();
  if (!*(void *)v42 || *(unsigned char *)(*(void *)v42 + 56) != 2)
  {
LABEL_17:
    if (a2)
    {
      id v47 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:2.0 stiffness:260.0 damping:50.0 initialVelocity:0.0];
    }
    else
    {
      uint64_t v48 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
      swift_beginAccess();
      if (*(void *)v48 && *(unsigned char *)(*(void *)v48 + 56) == 2) {
        id v47 = sub_100B28934(a3, v35);
      }
      else {
        id v47 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:100.0 damping:18.0 initialVelocity:0.0];
      }
    }
    goto LABEL_23;
  }
  double v43 = (*(double *)&a3 + -0.2) / 0.55;
  if (*(double *)&a3 > 0.75) {
    double v43 = 1.0;
  }
  double v44 = 0.0;
  if (*(double *)&a3 >= 0.2) {
    double v44 = v43;
  }
  double v45 = (1.0 - v44) * 0.12 + 0.78;
  double v46 = v44 * 0.27 + 0.48;
  sub_100057778(0, &qword_1010CA980);
  id v47 = UISpringTimingParameters.init(dampingRatio:response:)(v45, v46);
LABEL_23:
  id v168 = v47;
  uint64_t v49 = *(void *)(a1 + 24);
  uint64_t v50 = *(void *)(a1 + 32);
  sub_100068990((void *)a1, v49);
  double v51 = (*(double (**)(uint64_t))(*(void *)(v50 + 8) + 16))(v49);
  v159 = (double *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  swift_beginAccess();
  uint64_t v146 = a3;
  if ((a2 & 1) != 0 || (double v52 = v51 - v159[19], [v168 settlingDuration], v52 >= v53 + a8))
  {
    [v168 settlingDuration];
    double v22 = v54;
  }
  else
  {
    double v22 = v52 - a8;
    [v168 setImplicitDuration:0];
  }
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 1;
  uint64_t v25 = (char **)OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView;
  id v55 = *(char **)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
  v162 = v9;
  v160 = (char **)a1;
  char v145 = a2;
  if (v55
    && (id v56 = *(void **)&v55[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView]) != 0
    && (_s23InstrumentalContentViewCMa(), (uint64_t v57 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v58 = v57;
    int v144 = v35;
    uint64_t v149 = v17;
    uint64_t v59 = (uint64_t)&v55[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess();
    sub_1000688E4(v59, (uint64_t)aBlock);
    uint64_t v60 = v170;
    int64_t v61 = v171;
    unint64_t v62 = (char *)sub_100068990(aBlock, (uint64_t)v170);
    uint64_t v9 = (char *)v61 + 16;
    uint64_t v63 = (uint64_t (*)(void *, void (*)(uint64_t)))*((void *)v61 + 2);
    int64_t v64 = v55;
    id v65 = v56;
    uint64_t v66 = v62;
    uint64_t v67 = v63(v60, v61);
    a1 = v67 + 1;
    if (__OFADD__(v67, 1))
    {
      __break(1u);
      goto LABEL_109;
    }
    sub_1000760E4((uint64_t)aBlock);
    uint64_t v68 = (uint64_t)v160[3];
    uint64_t v69 = v160[4];
    sub_100068990(v160, v68);
    uint64_t v70 = (*((uint64_t (**)(uint64_t, char *))v69 + 2))(v68, v69);
    BOOL v71 = a1 == v70;
    uint64_t v17 = v149;
    uint64_t v9 = v162;
    LODWORD(v35) = v144;
    if (a1 == v70)
    {
      uint64_t v72 = *(char **)((char *)v25 + (void)v162);
      *(char **)((char *)v25 + (void)v162) = 0;

      [v64 frame];
      *(double *)(v149 + 24) = *(double *)(v149 + 24) - (CGRectGetHeight(v179) + v159[10]);
      sub_100B1D57C();
    }

    a1 = (unint64_t)v160;
  }
  else
  {
    BOOL v71 = 0;
  }
  sub_1000688E4(a1, (uint64_t)aBlock);
  sub_100063814(&qword_1010C9A68);
  if (swift_dynamicCast())
  {
    uint64_t v73 = (void *)a1;
    a1 = v156;
    sub_100B3557C(v73, v156, (uint64_t)v168, *(double *)(v17 + 16), *(double *)(v17 + 24), v22, v36, a8);
    goto LABEL_112;
  }
  if (v71)
  {
    double v74 = (void *)a1;
    a1 = v156;
    sub_100B36158(v74, v156, (uint64_t)v168, *(double *)(v17 + 16), *(double *)(v17 + 24), v22, v36);
    goto LABEL_112;
  }
  unsigned int v143 = v35;
  a1 = v156;
  uint64_t v35 = v156 >> 62;
  if (!(v156 >> 62))
  {
    uint64_t v58 = *(void *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_41;
  }
LABEL_107:
  swift_bridgeObjectRetain();
  uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_41:
  CGFloat v75 = _swiftEmptyArrayStorage;
  if (v58)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    uint64_t v66 = (char *)aBlock;
    sub_100AFC1F4(0, v58 & ~(v58 >> 63), 0);
    if ((v58 & 0x8000000000000000) == 0)
    {
      uint64_t v76 = 0;
      CGFloat v75 = (void *)aBlock[0];
      do
      {
        CGFloat v77 = v75;
        if ((a1 & 0xC000000000000001) != 0) {
          id v78 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v78 = *(id *)(a1 + 8 * v76 + 32);
        }
        double v79 = v78;
        double v80 = UIView.untransformedFrame.getter();
        uint64_t v82 = v81;
        uint64_t v84 = v83;
        uint64_t v86 = v85;

        CGFloat v75 = v77;
        aBlock[0] = v77;
        unint64_t v88 = v77[2];
        unint64_t v87 = v77[3];
        if (v88 >= v87 >> 1)
        {
          sub_100AFC1F4((char *)(v87 > 1), v88 + 1, 1);
          CGFloat v75 = (void *)aBlock[0];
        }
        ++v76;
        v75[2] = v88 + 1;
        CGFloat v89 = (double *)&v75[4 * v88];
        v89[4] = v80;
        *((void *)v89 + 5) = v82;
        *((void *)v89 + 6) = v84;
        *((void *)v89 + 7) = v86;
      }
      while (v58 != v76);
      goto LABEL_50;
    }
LABEL_109:
    __break(1u);
    goto LABEL_110;
  }
LABEL_50:
  uint64_t v148 = v75;
  uint64_t v150 = v17;
  if (v35)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = (char **)_CocoaArrayWrapper.endIndex.getter();
    if (!v25) {
      goto LABEL_83;
    }
  }
  else
  {
    uint64_t v25 = *(char ***)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v25)
    {
LABEL_83:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100B29778((uint64_t)v161, a1);
      uint64_t v25 = v160;
      if (v125) {
        goto LABEL_111;
      }
      uint64_t v58 = v124;
      uint64_t v66 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
      swift_beginAccess();
      if (!(*(void *)v66 >> 62))
      {
        if (v58 < *(void *)((*(void *)v66 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_86;
        }
        goto LABEL_111;
      }
LABEL_110:
      swift_bridgeObjectRetain();
      uint64_t v138 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v58 < v138)
      {
LABEL_86:
        uint64_t v126 = *(void *)v66;
        if ((v126 & 0xC000000000000001) == 0)
        {
          if (v58 < 0)
          {
            __break(1u);
          }
          else if ((unint64_t)v58 < *(void *)((v126 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v127 = *(id *)(v126 + 8 * v58 + 32);
LABEL_90:
            sub_100B3271C(v25, v127, (uint64_t *)1, 1);

            goto LABEL_112;
          }
          __break(1u);
          goto LABEL_120;
        }
        swift_bridgeObjectRetain();
        id v127 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_90;
      }
LABEL_111:
      sub_100B3271C(v25, 0, (uint64_t *)1, 1);
LABEL_112:
      uint64_t v139 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
      swift_beginAccess();
      if (*v139 == 1)
      {
        *uint64_t v139 = 0;
        v140 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate];
        swift_beginAccess();
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v141 = *((void *)v140 + 1);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(char *, uint64_t, uint64_t))(v141 + 24))(v9, ObjectType, v141);
          swift_unknownObjectRelease();
        }
      }
      sub_100B32AE8(a1);
      swift_bridgeObjectRelease();

LABEL_116:
      swift_release();

      return;
    }
  }
  sub_100057778(0, (unint64_t *)&qword_1010CAA20);
  uint64_t v90 = 0;
  unsigned int v155 = 0;
  uint64_t v152 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
  unint64_t v158 = a1 & 0xC000000000000001;
  uint64_t v151 = v58 - 1;
  BOOL v91 = __OFSUB__(v58, 1);
  BOOL v153 = v91;
  unint64_t v147 = a1 + 32;
  long long v92 = 0uLL;
  char v93 = 1;
  uint64_t v35 = 56;
  long long v94 = 0uLL;
  uint64_t v154 = v25;
  while (1)
  {
    v174[0] = v92;
    v174[1] = v94;
    char v175 = v93 & 1;
    if (v158) {
      CGFloat v95 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      CGFloat v95 = (char *)*(id *)(v147 + 8 * v90);
    }
    id v96 = v95;
    if (__OFADD__(v90, 1))
    {
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
    v165 = (char **)(v90 + 1);
    uint64_t v17 = (uint64_t)[objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v168 timingParameters:v22];
    uint64_t v97 = swift_allocObject();
    char v98 = static NSObject.== infix(_:_:)();
    sub_100B304D0(v96, v98 & 1, (uint64_t)v174);
    *(void *)(v97 + 16) = v99;
    *(void *)(v97 + 24) = v100;
    *(void *)(v97 + 32) = v101;
    *(void *)(v97 + 40) = v102;
    uint64_t v166 = v35;
    v167 = (void *)v17;
    if (v90)
    {
      if (a5) {
        goto LABEL_74;
      }
    }
    else
    {
      swift_beginAccess();
      *(double *)(v97 + 24) = *(double *)(v97 + 24) - v36;
      if (a5) {
        goto LABEL_74;
      }
    }
    if ((unint64_t)v90 >= v148[2]) {
      goto LABEL_104;
    }
    double v103 = *(double *)((char *)v148 + v35);
    swift_beginAccess();
    if (v103 == *(double *)(v97 + 40))
    {
      uint64_t v17 = v155;
      uint64_t v104 = v160;
    }
    else
    {
      uint64_t v104 = v160;
      uint64_t v106 = (uint64_t)v160[3];
      uint64_t v105 = v160[4];
      sub_100068990(v160, v106);
      uint64_t v107 = (*((uint64_t (**)(uint64_t, char *))v105 + 2))(v106, v105);
      uint64_t v108 = (uint64_t)&v96[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
      swift_beginAccess();
      sub_1000688E4(v108, (uint64_t)aBlock);
      unint64_t v110 = v170;
      uint64_t v109 = v171;
      sub_100068990(aBlock, (uint64_t)v170);
      LODWORD(v108) = (*((uint64_t (**)(void *, void (*)(uint64_t)))v109 + 2))(v110, v109) < v107;
      sub_1000760E4((uint64_t)aBlock);
      uint64_t v17 = v108 | v155;
    }
    uint64_t v111 = (uint64_t)&v96[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
    swift_beginAccess();
    sub_1000688E4(v111, (uint64_t)aBlock);
    id v112 = v170;
    os_log_type_t v113 = v171;
    sub_100068990(aBlock, (uint64_t)v170);
    uint64_t v114 = (*((uint64_t (**)(void *, void (*)(uint64_t)))v113 + 2))(v112, v113);
    uint64_t v115 = (uint64_t)v104[3];
    uint64_t v116 = v104[4];
    sub_100068990(v104, v115);
    uint64_t v117 = (*((uint64_t (**)(uint64_t, char *))v116 + 2))(v115, v116);
    sub_1000760E4((uint64_t)aBlock);
    unsigned int v155 = (v114 != v117) & v17;
    if (v114 != v117)
    {
      uint64_t v9 = v162;
      a1 = v156;
      uint64_t v25 = v154;
      goto LABEL_74;
    }
    uint64_t v9 = v162;
    a1 = v156;
    uint64_t v25 = v154;
    if (v17) {
      break;
    }
LABEL_74:
    swift_beginAccess();
    long long v163 = *(_OWORD *)(v97 + 32);
    long long v164 = *(_OWORD *)(v97 + 16);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v96;
    *(void *)(v35 + 24) = v97;
    uint64_t v118 = v96;
    swift_retain();
    UIViewPropertyAnimator.addModifiedAnimations(with:animations:)(2, (uint64_t)sub_100B3B21C, v35);
    swift_release();
    if (v153) {
      goto LABEL_103;
    }
    if (v151 == v90)
    {
      sub_1000688E4((uint64_t)v160, (uint64_t)v173);
      uint64_t v119 = swift_allocObject();
      *(void *)(v119 + 16) = a1;
      *(double *)(v119 + 24) = v36;
      *(void *)(v119 + 32) = v9;
      *(void *)(v119 + 40) = v150;
      sub_100068978(v173, v119 + 48);
      v171 = sub_100B3B274;
      uint64_t v172 = v119;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1002DE0E4;
      v170 = &unk_10100D5A8;
      uint64_t v120 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      unint64_t v121 = v9;
      uint64_t v25 = v154;
      swift_retain();
      swift_release();
      [v167 addCompletion:v120];
      _Block_release(v120);
    }
    swift_beginAccess();
    id v122 = v167;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v152 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v152 & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    if (v90 <= 1) {
      uint64_t v123 = 1;
    }
    else {
      uint64_t v123 = v90;
    }
    [v122 startAnimationAfterDelay:v159[18] * (double)(v123 - 1)];
    swift_release();

    char v93 = 0;
    ++v90;
    uint64_t v35 = v166 + 32;
    uint64_t v9 = v162;
    long long v94 = v163;
    long long v92 = v164;
    if (v165 == v25) {
      goto LABEL_83;
    }
  }
  swift_bridgeObjectRelease();
  sub_100B3720C();
  CGFloat v128 = *(double *)(v97 + 16);
  CGFloat v129 = v36 + *(double *)(v97 + 24);
  *(CGFloat *)(v97 + 24) = v129;
  sub_100B325BC(v128, v129, *(CGFloat *)(v97 + 32), *(CGFloat *)(v97 + 40));
  double v131 = v130;
  if (!v90)
  {
LABEL_101:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100B3423C(v160, v145 & 1, v146, v143, 1, 0.0, v131, a8);

    swift_release();
    goto LABEL_116;
  }
  if (v158)
  {
    unint64_t v132 = v90 - 1;
    uint64_t v133 = v148;
  }
  else
  {
    unint64_t v132 = v90 - 1;
    uint64_t v133 = v148;
    if ((unint64_t)(v90 - 1) >= *(void *)((v156 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_121;
    }
  }
  if (v132 < v133[2])
  {
    uint64_t v134 = 0;
    uint64_t v135 = (CGFloat *)(v133 + 7);
    do
    {
      if (v158) {
        id v136 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v136 = *(id *)(v156 + 8 * v134 + 32);
      }
      uint64_t v137 = v136;
      ++v134;
      UIView.untransformedFrame.setter(*(v135 - 3), *(v135 - 2), *(v135 - 1), *v135);

      v135 += 4;
    }
    while (v90 != v134);
    goto LABEL_101;
  }
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
}

id sub_100B352BC(uint64_t a1, CGFloat *a2)
{
  return UIView.untransformedFrame.setter(a2[2], a2[3], a2[4], a2[5]);
}

void sub_100B35308(double a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (!v11) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_10;
    }
  }
  if (v11 < 1)
  {
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v12 = 0;
    do
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      ++v12;
      double v13 = UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(v13, v14 + a1, v15, v16);
      swift_unknownObjectRelease();
    }
    while (v11 != v12);
  }
  else
  {
    uint64_t v17 = 0;
    do
    {
      uint64_t v18 = *(void **)(a3 + 8 * v17++ + 32);
      id v19 = v18;
      double v20 = UIView.untransformedFrame.getter();
      UIView.untransformedFrame.setter(v20, v21 + a1, v22, v23);
    }
    while (v11 != v17);
  }
LABEL_10:
  swift_bridgeObjectRelease();
  CGFloat v24 = *(void **)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView);
  swift_beginAccess();
  [v24 setContentOffset:*(double *)(a5 + 16), *(double *)(a5 + 24)];
  *(unsigned char *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
  uint64_t v25 = (void *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess();
  *uint64_t v25 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  id v26 = *(void **)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  if (!v26) {
    return;
  }
  uint64_t v27 = a6[3];
  uint64_t v28 = a6[4];
  sub_100068990(a6, v27);
  CGFloat v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 16);
  a6 = v26;
  unint64_t v30 = v29(v27, v28);
  CGFloat v31 = (uint64_t *)(a4 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  uint64_t v32 = *v31;
  if ((v32 & 0xC000000000000001) != 0) {
    goto LABEL_20;
  }
  if ((v30 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v30 >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_22:
    __break(1u);
    return;
  }
  id v33 = *(id *)(v32 + 8 * v30 + 32);
LABEL_15:
  sub_100B369FC((uint64_t)a6, (uint64_t)v33);
}

uint64_t sub_100B3557C(void *a1, unint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8)
{
  unint64_t v11 = a2;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = _CocoaArrayWrapper.endIndex.getter();
    if (v57)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
LABEL_3:
      uint64_t v54 = v16 - 1;
      if (__OFSUB__(v16, 1))
      {
        __break(1u);
      }
      else if (v57 >= 1)
      {
        uint64_t v17 = &v56[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
        unint64_t v51 = v11 & 0xC000000000000001;
        double v52 = (double *)&v56[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
        swift_beginAccess();
        uint64_t v18 = 0;
        unint64_t v53 = v11;
        do
        {
          if (v51) {
            id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v19 = *(id *)(v11 + 8 * v18 + 32);
          }
          double v20 = v19;
          id v21 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:a3 timingParameters:a6];
          sub_1000688E4((uint64_t)a1, (uint64_t)v65);
          uint64_t v22 = swift_allocObject();
          *(void *)(v22 + 16) = v20;
          sub_100068978(v65, v22 + 24);
          *(void *)(v22 + 64) = v56;
          *(double *)(v22 + 72) = a7;
          uint64_t v63 = (uint64_t (**)(void *, void *))sub_100B3B090;
          uint64_t v64 = v22;
          CGAffineTransform aBlock = _NSConcreteStackBlock;
          uint64_t v60 = 1107296256;
          int64_t v61 = sub_100020238;
          unint64_t v62 = &unk_10100D3F0;
          CGFloat v23 = _Block_copy(&aBlock);
          CGFloat v24 = v20;
          uint64_t v25 = v56;
          swift_release();
          [v21 addAnimations:v23];
          _Block_release(v23);
          uint64_t v26 = (uint64_t)&v24[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
          swift_beginAccess();
          sub_1000688E4(v26, (uint64_t)&aBlock);
          uint64_t v27 = v62;
          uint64_t v28 = v63;
          sub_100068990(&aBlock, (uint64_t)v62);
          uint64_t v29 = v28[2](v27, v28);
          uint64_t v31 = a1[3];
          uint64_t v30 = a1[4];
          sub_100068990(a1, v31);
          uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v31, v30);
          sub_1000760E4((uint64_t)&aBlock);
          if (v29 == v32)
          {
            id v33 = v21;
            sub_100B3271C(a1, v21, (uint64_t *)1, 0);

            double v34 = *(void **)&v24[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
            if (v34)
            {
              _s23InstrumentalContentViewCMa();
              uint64_t v35 = swift_dynamicCastClass();
              if (v35)
              {
                uint64_t v50 = v35;
                uint64_t v36 = swift_allocObject();
                *(void *)(v36 + 16) = v25;
                *(void *)(v36 + 24) = v24;
                *(double *)(v36 + 32) = a7;
                uint64_t v63 = (uint64_t (**)(void *, void *))sub_100B3B14C;
                uint64_t v64 = v36;
                CGAffineTransform aBlock = _NSConcreteStackBlock;
                uint64_t v60 = 1107296256;
                int64_t v61 = sub_100020238;
                unint64_t v62 = &unk_10100D490;
                uint64_t v37 = _Block_copy(&aBlock);
                uint64_t v38 = v24;
                unint64_t v39 = v25;
                id v40 = v34;
                swift_release();
                [v33 addAnimations:v37];
                _Block_release(v37);
                uint64_t v41 = swift_allocObject();
                *(void *)(v41 + 16) = v50;
                *(double *)(v41 + 24) = a8;
                uint64_t v63 = (uint64_t (**)(void *, void *))sub_100B3B190;
                uint64_t v64 = v41;
                CGAffineTransform aBlock = _NSConcreteStackBlock;
                uint64_t v60 = 1107296256;
                int64_t v61 = sub_1002DE0E4;
                unint64_t v62 = &unk_10100D4E0;
                uint64_t v42 = _Block_copy(&aBlock);
                id v43 = v40;
                swift_release();
                [v33 addCompletion:v42];
                _Block_release(v42);
              }
            }
          }
          unint64_t v11 = v53;
          if (v54 == v18)
          {
            sub_1000688E4((uint64_t)a1, (uint64_t)v65);
            uint64_t v44 = swift_allocObject();
            *(void *)(v44 + 16) = v53;
            *(double *)(v44 + 24) = a7;
            *(void *)(v44 + 32) = v24;
            *(void *)(v44 + 40) = v25;
            *(double *)(v44 + 48) = a4;
            *(double *)(v44 + 56) = a5;
            sub_100068978(v65, v44 + 64);
            uint64_t v63 = (uint64_t (**)(void *, void *))sub_100B3B0F4;
            uint64_t v64 = v44;
            CGAffineTransform aBlock = _NSConcreteStackBlock;
            uint64_t v60 = 1107296256;
            int64_t v61 = sub_1002DE0E4;
            unint64_t v62 = &unk_10100D440;
            double v45 = _Block_copy(&aBlock);
            swift_bridgeObjectRetain();
            double v46 = v24;
            id v47 = v25;
            swift_release();
            [v21 addCompletion:v45];
            _Block_release(v45);
          }
          swift_beginAccess();
          id v48 = v21;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*(void *)v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v17 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          if (v18 <= 1) {
            uint64_t v49 = 1;
          }
          else {
            uint64_t v49 = v18;
          }
          ++v18;
          [v48 startAnimationAfterDelay:v52[18] * (double)(v49 - 1) v50];
        }
        while (v57 != v18);
        return swift_bridgeObjectRelease();
      }
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v16 = v14;
    uint64_t v57 = v14;
    if (v14) {
      goto LABEL_3;
    }
  }

  return swift_bridgeObjectRelease();
}

id sub_100B35C2C(void *a1, void *a2)
{
  uint64_t v4 = (uint64_t)a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  sub_1000688E4(v4, (uint64_t)v12);
  uint64_t v5 = v13;
  uint64_t v6 = v14;
  sub_100068990(v12, v13);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  sub_100068990(a2, v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  sub_1000760E4((uint64_t)v12);
  if (v10 < v7) {
    swift_beginAccess();
  }
  [a1 frame];
  return [a1 setFrame:];
}

id sub_100B35D94(uint64_t a1, char *a2)
{
  sub_100B30B8C(a2);
  uint64_t v3 = (uint64_t)&a2[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line];
  swift_beginAccess();
  sub_1000688E4(v3, (uint64_t)v8);
  uint64_t v4 = v9;
  uint64_t v5 = v10;
  sub_100068990(v8, v9);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  id result = (id)sub_1000760E4((uint64_t)v8);
  if (!v6)
  {
    [a2 frame];
    return [a2 setFrame:];
  }
  return result;
}

uint64_t sub_100B35E70(double a1, double a2, double a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v12 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v12) {
      goto LABEL_10;
    }
  }
  if (v12 < 1) {
    goto LABEL_26;
  }
  uint64_t v14 = 0;
  do
  {
    if ((a5 & 0xC000000000000001) != 0) {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v15 = *(id *)(a5 + 8 * v14 + 32);
    }
    uint64_t v16 = v15;
    ++v14;
    [v15 frame];
    [v16 setFrame:];
  }
  while (v12 != v14);
LABEL_10:
  swift_bridgeObjectRelease();
  uint64_t v17 = a6 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  sub_1000688E4(v17, (uint64_t)v26);
  uint64_t v18 = v27;
  uint64_t v19 = v28;
  sub_100068990(v26, v27);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
  id v21 = (uint64_t *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  uint64_t result = swift_beginAccess();
  if ((unint64_t)*v21 >> 62) {
    goto LABEL_24;
  }
  for (i = *(void *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x10); i >= v20; uint64_t result = swift_bridgeObjectRelease())
  {
    uint64_t result = sub_1000760E4((uint64_t)v26);
    if (v20 == i)
    {
LABEL_13:
      [*(id *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView) setContentOffset:a2, a3];
      *(unsigned char *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
      CGFloat v23 = (void *)(a7 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
      swift_beginAccess();
      *CGFloat v23 = _swiftEmptyArrayStorage;
      return swift_bridgeObjectRelease();
    }
    if (v20 >= i) {
      goto LABEL_27;
    }
    while (1)
    {
      uint64_t v24 = *v21;
      if ((*v21 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      if (v20 < 0) {
        break;
      }
      if ((unint64_t)v20 >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_23;
      }
      uint64_t v25 = (char *)*(id *)(v24 + 8 * v20 + 32);
LABEL_19:
      ++v20;
      sub_100B30B8C(v25);

      if (i == v20) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t i = _CocoaArrayWrapper.endIndex.getter();
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100B36158(void *a1, unint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  unint64_t v9 = a2;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
    if (v44)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
LABEL_3:
      uint64_t v41 = v15 - 1;
      if (__OFSUB__(v15, 1))
      {
        __break(1u);
      }
      else if (v44 >= 1)
      {
        uint64_t v16 = &v43[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators];
        unint64_t v38 = v9 & 0xC000000000000001;
        unint64_t v39 = (double *)&v43[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
        swift_beginAccess();
        uint64_t v17 = 0;
        unint64_t v40 = v9;
        do
        {
          if (v38) {
            id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v18 = *(id *)(v9 + 8 * v17 + 32);
          }
          uint64_t v19 = v18;
          id v20 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:a3 timingParameters:a6];
          sub_1000688E4((uint64_t)a1, (uint64_t)v51);
          uint64_t v21 = swift_allocObject();
          *(void *)(v21 + 16) = v19;
          sub_100068978(v51, v21 + 24);
          *(double *)(v21 + 64) = a7;
          *(void *)(v21 + 72) = v43;
          uint64_t v49 = (uint64_t (**)(void *, void *))sub_100B3AFDC;
          uint64_t v50 = v21;
          CGAffineTransform aBlock = _NSConcreteStackBlock;
          uint64_t v46 = 1107296256;
          id v47 = sub_100020238;
          id v48 = &unk_10100D350;
          uint64_t v22 = _Block_copy(&aBlock);
          id v23 = v19;
          uint64_t v24 = v43;
          swift_release();
          [v20 addAnimations:v22];
          _Block_release(v22);
          uint64_t v25 = (uint64_t)v23 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
          swift_beginAccess();
          sub_1000688E4(v25, (uint64_t)&aBlock);
          uint64_t v26 = v48;
          uint64_t v27 = v49;
          sub_100068990(&aBlock, (uint64_t)v48);
          uint64_t v28 = v27[2](v26, v27);
          uint64_t v30 = a1[3];
          uint64_t v29 = a1[4];
          sub_100068990(a1, v30);
          uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v30, v29);
          sub_1000760E4((uint64_t)&aBlock);
          if (v28 == v31)
          {
            id v32 = v20;
            sub_100B3271C(a1, v20, (uint64_t *)1, 1);
          }
          unint64_t v9 = v40;
          if (v41 == v17)
          {
            sub_1000688E4((uint64_t)a1, (uint64_t)v51);
            uint64_t v33 = swift_allocObject();
            *(void *)(v33 + 16) = v40;
            *(void *)(v33 + 24) = v24;
            *(double *)(v33 + 32) = a4;
            *(double *)(v33 + 40) = a5;
            sub_100068978(v51, v33 + 48);
            uint64_t v49 = (uint64_t (**)(void *, void *))sub_100B3B038;
            uint64_t v50 = v33;
            CGAffineTransform aBlock = _NSConcreteStackBlock;
            uint64_t v46 = 1107296256;
            id v47 = sub_1002DE0E4;
            id v48 = &unk_10100D3A0;
            double v34 = _Block_copy(&aBlock);
            swift_bridgeObjectRetain();
            uint64_t v35 = v24;
            swift_release();
            [v20 addCompletion:v34];
            _Block_release(v34);
          }
          swift_beginAccess();
          id v36 = v20;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*(void *)v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v16 & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          if (v17 <= 1) {
            uint64_t v37 = 1;
          }
          else {
            uint64_t v37 = v17;
          }
          ++v17;
          [v36 startAnimationAfterDelay:v39[18] * (double)(v37 - 1) v38];
        }
        while (v44 != v17);
        return swift_bridgeObjectRelease();
      }
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v15 = v13;
    uint64_t v44 = v13;
    if (v13) {
      goto LABEL_3;
    }
  }

  return swift_bridgeObjectRelease();
}

id sub_100B36668(void *a1, void *a2)
{
  uint64_t v4 = (uint64_t)a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  sub_1000688E4(v4, (uint64_t)v12);
  uint64_t v5 = v13;
  uint64_t v6 = v14;
  sub_100068990(v12, v13);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  sub_100068990(a2, v8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  sub_1000760E4((uint64_t)v12);
  if (v7 < v10) {
    swift_beginAccess();
  }
  [a1 frame];
  return [a1 setFrame:];
}

uint64_t sub_100B367B8(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((a4 & 0xC000000000000001) != 0) {
    goto LABEL_18;
  }
  if (*(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(a4 + 32);
    goto LABEL_4;
  }
  __break(1u);
  do
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v16 < v5) {
      goto LABEL_21;
    }
LABEL_6:
    uint64_t result = sub_1000760E4((uint64_t)v20);
    if (v5 == v16)
    {
LABEL_7:
      [*(id *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView) setContentOffset:a1 a2];
      *(unsigned char *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = 0;
      uint64_t v17 = (void *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
      swift_beginAccess();
      *uint64_t v17 = _swiftEmptyArrayStorage;
      return swift_bridgeObjectRelease();
    }
    if (v5 >= v16) {
      goto LABEL_22;
    }
    while (1)
    {
      uint64_t v18 = *v6;
      if ((*v6 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      if (v5 < 0) {
        break;
      }
      if ((unint64_t)v5 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_17;
      }
      uint64_t v19 = (char *)*(id *)(v18 + 8 * v5 + 32);
LABEL_13:
      ++v5;
      sub_100B30B8C(v19);

      if (v16 == v5) {
        goto LABEL_7;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_4:
    unint64_t v11 = v10;
    uint64_t v12 = (uint64_t)v10 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
    swift_beginAccess();
    sub_1000688E4(v12, (uint64_t)v20);

    uint64_t v13 = v21;
    uint64_t v14 = v22;
    sub_100068990(v20, v21);
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    uint64_t v6 = (uint64_t *)(a5 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
    uint64_t result = swift_beginAccess();
  }
  while ((unint64_t)*v6 >> 62);
  uint64_t v16 = *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v16 >= v5) {
    goto LABEL_6;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

void sub_100B369FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  [*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView) contentOffset];
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  id v11 = [(id)v3 view];
  if (!v11)
  {
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v12 = v11;
  [v11 frame];
  CGFloat v14 = v13;

  uint64_t v15 = (double *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight);
  swift_beginAccess();
  CGFloat v16 = *v15;
  if (*v15 > 0.0) {
    goto LABEL_5;
  }
  id v17 = [(id)v3 view];
  if (!v17)
  {
LABEL_67:
    __break(1u);
    return;
  }
  uint64_t v18 = v17;
  [v17 frame];
  CGFloat v16 = v19;

LABEL_5:
  uint64_t v20 = a2 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  sub_1000688E4(v20, (uint64_t)aBlock);
  unint64_t v21 = sub_100B32154(aBlock, v8, v10, v14, v16);
  sub_1000760E4((uint64_t)aBlock);
  uint64_t v22 = a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  sub_1000688E4(v22, (uint64_t)aBlock);
  id v23 = v72;
  uint64_t v24 = v73;
  sub_100068990(aBlock, (uint64_t)v72);
  uint64_t v67 = (*((uint64_t (**)(void *, void (*)()))v24 + 2))(v23, v24);
  sub_1000688E4(v20, (uint64_t)v75);
  uint64_t v25 = v76;
  uint64_t v26 = v77;
  sub_100068990(v75, v76);
  uint64_t v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
  sub_1000760E4((uint64_t)v75);
  sub_1000760E4((uint64_t)aBlock);
  sub_1000688E4(v22, (uint64_t)aBlock);
  uint64_t v27 = v72;
  uint64_t v28 = v73;
  sub_100068990(aBlock, (uint64_t)v72);
  uint64_t v29 = (*((uint64_t (**)(void *, void (*)()))v28 + 2))(v27, v28);
  uint64_t v30 = (uint64_t *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  uint64_t v70 = v30;
  uint64_t v61 = v6;
  if ((unint64_t)*v30 >> 62) {
    goto LABEL_63;
  }
  uint64_t v31 = *(void *)((*v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v31 >= v29) {
    goto LABEL_7;
  }
LABEL_64:
  __break(1u);
LABEL_65:
  swift_bridgeObjectRetain();
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  while (1)
  {
    uint64_t v63 = (void *)(v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
    uint64_t v35 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs;
    swift_beginAccess();
    uint64_t v62 = v35;
    swift_beginAccess();
    uint64_t v65 = 0;
    if (v29 <= v31) {
      uint64_t v36 = v31;
    }
    else {
      uint64_t v36 = v29;
    }
    unint64_t v68 = v21 & 0xC000000000000001;
    uint64_t v69 = v36;
    uint64_t v64 = v3;
    while (1)
    {
      if (v29 == v69)
      {
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      uint64_t v37 = *v70;
      if ((*v70 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        if (!v34) {
          goto LABEL_18;
        }
      }
      else
      {
        if (v29 < 0) {
          goto LABEL_58;
        }
        if ((unint64_t)v29 >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_59;
        }
        id v38 = *(id *)(v37 + 8 * v29 + 32);
        if (!v34) {
          goto LABEL_18;
        }
      }
      uint64_t v39 = v31;
      if (v68)
      {
        swift_bridgeObjectRetain();
        id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        unint64_t v40 = *(void **)(v21 + 32);
        swift_bridgeObjectRetain();
        id v41 = v40;
      }
      uint64_t v42 = v41;
      type metadata accessor for SyncedLyricsLineView();
      char v43 = static NSObject.== infix(_:_:)();

      if ((v43 & 1) == 0) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_29:
      uint64_t v31 = v39;
LABEL_30:
      if (v66 >= v67) {
        goto LABEL_18;
      }
      id v44 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:100.0 damping:18.0 initialVelocity:0.0];
      sub_100057778(0, (unint64_t *)&qword_1010CAC50);
      Class isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v44).super.isa;
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v3;
      *(void *)(v46 + 24) = v38;
      uint64_t v73 = sub_100B3AF6C;
      uint64_t v74 = v46;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100020238;
      uint64_t v72 = &unk_10100D300;
      id v47 = _Block_copy(aBlock);
      id v48 = (id)v3;
      id v49 = v38;
      swift_release();
      [(objc_class *)isa addAnimations:v47];
      _Block_release(v47);
      swift_beginAccess();
      uint64_t v50 = isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      uint64_t v51 = v65;
      [(objc_class *)v50 startAnimationAfterDelay:*(double *)(v62 + 144) * (double)v65];

      ++v65;
      if (__OFADD__(v51, 1)) {
        goto LABEL_62;
      }
LABEL_19:
      if (++v29 == v31) {
        goto LABEL_8;
      }
    }
    uint64_t v31 = v39;
    if (v34 == 1) {
      goto LABEL_17;
    }
    if (v68)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      char v52 = static NSObject.== infix(_:_:)();
      swift_unknownObjectRelease();
      if ((v52 & 1) == 0)
      {
        if (v34 == 2)
        {
LABEL_17:
          swift_bridgeObjectRelease();
LABEL_18:
          sub_100B30B8C((char *)v38);

          goto LABEL_19;
        }
        uint64_t v53 = 2;
        while (1)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v54 = v53 + 1;
          if (__OFADD__(v53, 1)) {
            break;
          }
          char v55 = static NSObject.== infix(_:_:)();
          swift_unknownObjectRelease();
          if (v55) {
            goto LABEL_53;
          }
          ++v53;
          uint64_t v3 = v64;
          if (v54 == v34)
          {
            swift_bridgeObjectRelease();
            uint64_t v31 = v39;
            goto LABEL_18;
          }
        }
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
LABEL_46:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    id v56 = *(id *)(v21 + 40);
    char v57 = static NSObject.== infix(_:_:)();

    if (v57) {
      goto LABEL_46;
    }
    if (v34 == 2) {
      goto LABEL_17;
    }
    uint64_t v3 = 6;
    while (1)
    {
      uint64_t v58 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v59 = *(id *)(v21 + 8 * v3);
      char v60 = static NSObject.== infix(_:_:)();

      if (v60)
      {
LABEL_53:
        swift_bridgeObjectRelease();
        uint64_t v3 = v64;
        goto LABEL_29;
      }
      ++v3;
      if (v58 == v34)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v64;
        uint64_t v31 = v39;
        goto LABEL_18;
      }
    }
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v31 < v29) {
      goto LABEL_64;
    }
LABEL_7:
    sub_1000760E4((uint64_t)aBlock);
    if (v29 == v31) {
      break;
    }
    if (v21 >> 62) {
      goto LABEL_65;
    }
    uint64_t v34 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
LABEL_8:
  swift_bridgeObjectRelease();
  if (v66 >= v67)
  {
    id v32 = *(void **)(v3 + v61);
    swift_beginAccess();
    id v33 = v32;
    [v33 contentOffset];
    [v33 setContentOffset:];
  }
}

uint64_t sub_100B3720C()
{
  unint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v2 + 8 * i + 32);
      }
      double v7 = v6;
      if ([v6 state] == (id)1)
      {
        [v7 stopAnimation:0];
        [v7 finishAnimationAtPosition:0];
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id Card.ViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone(v4) initWithNibName:v6 bundle:a3];

  return v7;
}

id SyncedLyricsViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial] = 0;
  v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen] = 0;
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  double v7 = Int.seconds.getter(0);
  *(double *)&v3[v6] = v7;
  *(double *)&v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight] = v7;
  CGFloat v8 = &v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  double v9 = v3;
  sub_100B2794C(0, __src);
  memcpy(v8, __src, 0x219uLL);
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode] = 0;
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics] = 0;
  CGFloat v10 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider];
  *(_OWORD *)CGFloat v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  id v11 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
  *id v11 = 0;
  v11[1] = 0;
  uint64_t v12 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  *(void *)&v9[v12] = [objc_allocWithZone((Class)UIScrollView) init];
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager] = 0;
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = 0;
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews] = _swiftEmptyArrayStorage;
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews] = _swiftEmptyArrayStorage;
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews] = &_swiftEmptySetSingleton;
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = 0;
  uint64_t v13 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator;
  *(void *)&v9[v13] = [objc_allocWithZone((Class)UISelectionFeedbackGenerator) init];
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators] = _swiftEmptyArrayStorage;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;
  CGFloat v14 = &v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  *CGFloat v14 = 0u;
  v14[1] = 0u;
  *(void *)&v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer] = 0;
  v9[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  if (a2)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  v18.receiver = v9;
  v18.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  id v16 = [super initWithNibName:v15 bundle:a3];

  return v16;
}

id SyncedLyricsViewController.init(coder:)(void *a1)
{
  v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isPlayingSpatial] = 0;
  v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen] = 0;
  uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight;
  double v4 = Int.seconds.getter(0);
  *(double *)&v1[v3] = v4;
  *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight] = v4;
  uint64_t v5 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs];
  uint64_t v6 = v1;
  sub_100B2794C(0, __src);
  memcpy(v5, __src, 0x219uLL);
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics] = 0;
  double v7 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_timingProvider];
  *(_OWORD *)double v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  CGFloat v8 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_shareHandler];
  *CGFloat v8 = 0;
  v8[1] = 0;
  uint64_t v9 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  *(void *)&v6[v9] = [objc_allocWithZone((Class)UIScrollView) init];
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_displayLink] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews] = _swiftEmptyArrayStorage;
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews] = _swiftEmptyArrayStorage;
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_blurredLineViews] = &_swiftEmptySetSingleton;
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = 0;
  uint64_t v10 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_tapFeedbackGenerator;
  *(void *)&v6[v10] = [objc_allocWithZone((Class)UISelectionFeedbackGenerator) init];
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators] = _swiftEmptyArrayStorage;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isBackgrounded] = 0;
  id v11 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_previousBounds];
  *id v11 = 0u;
  v11[1] = 0u;
  *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer] = 0;
  v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;

  v14.receiver = v6;
  v14.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  id v12 = [super initWithCoder:a1];

  return v12;
}

id SyncedLyricsViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SyncedLyricsViewController();
  return [super dealloc];
}

void SyncedLyricsViewController.syncedLyrics(_:animateTo:elapsedTime:gap:)(double a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
}

void SyncedLyricsViewController.syncedLyrics(_:jumpTo:select:elapsedTime:)(double a1, uint64_t a2, void *a3, int a4)
{
}

void SyncedLyricsViewController.syncedLyrics(_:update:elapsedTime:)(double a1, uint64_t a2, void *a3)
{
}

void SyncedLyricsViewController.syncedLyrics(_:select:)(uint64_t a1, void *a2)
{
}

unint64_t sub_100B37A5C()
{
  unint64_t result = (unint64_t)sub_100B31F74();
  unint64_t v1 = result;
  if (result >> 62)
  {
    unint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_8;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  long long v23 = 0u;
  long long v24 = 0u;
  char v25 = 1;
  if ((v1 & 0xC000000000000001) != 0) {
    uint64_t v3 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    uint64_t v3 = (char *)*(id *)(v1 + 32);
  }
  double v4 = v3;
  sub_100B304D0(v3, 2u, (uint64_t)&v23);
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  uint64_t v13 = v4;
  UIView.untransformedFrame.setter(v6, v8, v10, v12);

  uint64_t v14 = v2 - 1;
  if (v2 != 1)
  {
    uint64_t v15 = 0;
    do
    {
      *(CGFloat *)&long long v23 = v6;
      *((CGFloat *)&v23 + 1) = v8;
      *(CGFloat *)&long long v24 = v10;
      *((CGFloat *)&v24 + 1) = v12;
      char v25 = 0;
      if ((v1 & 0xC000000000000001) != 0) {
        id v16 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v16 = (char *)*(id *)(v1 + 8 * v15 + 40);
      }
      id v17 = v16;
      sub_100B304D0(v16, 2u, (uint64_t)&v23);
      CGFloat v6 = v18;
      CGFloat v8 = v19;
      CGFloat v10 = v20;
      CGFloat v12 = v21;
      uint64_t v22 = v17;
      UIView.untransformedFrame.setter(v6, v8, v10, v12);

      ++v15;
    }
    while (v14 != v15);
  }
LABEL_8:

  return swift_bridgeObjectRelease();
}

uint64_t sub_100B37C10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (unint64_t *)(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_currentAnimators);
  uint64_t result = swift_beginAccess();
  unint64_t v5 = *v3;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(unsigned char *)(a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating) = v6 > 0;
  return result;
}

void SyncedLyricsViewController.syncedLyrics(_:finish:)(uint64_t a1, uint64_t a2)
{
}

Swift::Bool __swiftcall SyncedLyricsViewController.gestureRecognizer(_:shouldReceive:)(UIGestureRecognizer _, UITouch shouldReceive)
{
  return sub_100B3A388(shouldReceive.super.isa);
}

Swift::Void __swiftcall SyncedLyricsViewController.scrollViewWillBeginDragging(_:)(UIScrollView a1)
{
  sub_100B33D88();
  sub_100B3720C();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll) = 0;
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer;
  [*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer) invalidate];
  uint64_t v3 = *(void **)(v1 + v2);
  *(void *)(v1 + v2) = 0;
}

void sub_100B37E20()
{
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] = 1;
  }
}

id sub_100B37F58()
{
  return sub_100B32AE8(0);
}

uint64_t sub_100B37F80()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100B37FBC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  CGFloat v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *CGFloat v8 = v2;
  v8[1] = sub_1000154F4;
  return sub_100B2BFE8(a1, v4, v5, v7, v6);
}

uint64_t sub_100B38080()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B380C8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  CGFloat v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *CGFloat v8 = v2;
  v8[1] = sub_100081D08;
  return sub_100B2D554(a1, v4, v5, v7, v6);
}

unint64_t sub_100B38188()
{
  unint64_t result = qword_1010CAAD8;
  if (!qword_1010CAAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CAAD8);
  }
  return result;
}

uint64_t sub_100B381DC()
{
  return swift_deallocObject();
}

uint64_t sub_100B3821C()
{
  return sub_100B2F2FC(*(char **)(v0 + 24));
}

void *sub_100B38244(unint64_t a1, uint64_t (*a2)(void))
{
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v3) {
      return _swiftEmptyArrayStorage;
    }
    unint64_t result = sub_100AFC214(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0) {
      break;
    }
    uint64_t v5 = 0;
    unint64_t v15 = v2 & 0xC000000000000001;
    unint64_t v6 = v2;
    while (v3 != v5)
    {
      if (v15) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      CGFloat v8 = v7;
      uint64_t v9 = a2();
      char v11 = v10;

      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_100AFC214((void *)(v12 > 1), v13 + 1, 1);
      }
      ++v5;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      uint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v9;
      *((unsigned char *)v14 + 40) = v11 & 1;
      unint64_t v2 = v6;
      if (v3 == v5) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100B383C4(unint64_t a1, char *a2)
{
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_17:
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4) {
    goto LABEL_14;
  }
LABEL_3:
  uint64_t v30 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  uint64_t v5 = (CGFloat *)&a2[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  swift_beginAccess();
  uint64_t v6 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(a1 + 8 * v6);
    }
    CGFloat v8 = v7;
    uint64_t v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    [v7 frame];
    CGFloat v11 = v10;
    CGFloat v13 = v12;
    CGFloat v15 = v14;
    CGFloat v17 = v16;
    [*(id *)&a2[v30] contentOffset];
    CGFloat v19 = v18;
    CGFloat v21 = v20;
    uint64_t result = (uint64_t)[a2 view];
    if (!result) {
      break;
    }
    long long v23 = (void *)result;
    [(id)result frame];
    CGFloat v25 = v24;

    CGFloat v26 = *v5;
    if (*v5 <= 0.0)
    {
      uint64_t result = (uint64_t)[a2 view];
      if (!result) {
        goto LABEL_20;
      }
      uint64_t v27 = (void *)result;
      [(id)result frame];
      CGFloat v26 = v28;
    }
    v31.origin.CGFloat x = v11;
    v31.origin.CGFloat y = v13;
    v31.size.width = v15;
    v31.size.CGFloat height = v17;
    v32.origin.CGFloat x = v19;
    v32.origin.CGFloat y = v21;
    v32.size.width = v25;
    v32.size.CGFloat height = v26;
    BOOL v29 = CGRectIntersectsRect(v31, v32);

    if (v29)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    ++v6;
    if (v9 == v4) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

void sub_100B38608(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v6 = v4;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_100068990(a1, v11);
  unint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  double v14 = &v4[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess();
  uint64_t v15 = *(void *)v14;
  double v70 = a4;
  if ((*(void *)v14 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v13 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v13 = (unint64_t)*(id *)(v15 + 8 * v13 + 32);
LABEL_6:
  [v13 frame:a4];
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  uint64_t v24 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  [*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] contentOffset];
  CGFloat v26 = v25;
  CGFloat v28 = v27;
  id v29 = [v6 view];
  if (!v29)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v30 = v29;
  [v29 frame];
  CGFloat v32 = v31;

  id v33 = (CGFloat *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  swift_beginAccess();
  CGFloat v34 = *v33;
  if (*v33 <= 0.0)
  {
    id v35 = [v6 view];
    if (!v35)
    {
LABEL_32:
      __break(1u);
      return;
    }
    uint64_t v36 = v35;
    [v35 frame];
    CGFloat v34 = v37;
  }
  char v5 = a3 & 1;
  v77.origin.CGFloat x = v17;
  v77.origin.CGFloat y = v19;
  v77.size.width = v21;
  v77.size.CGFloat height = v23;
  v78.origin.CGFloat x = v26;
  v78.origin.CGFloat y = v28;
  v78.size.width = v32;
  v78.size.CGFloat height = v34;
  if (CGRectIntersectsRect(v77, v78))
  {
    int v38 = 0;
  }
  else
  {
    swift_beginAccess();
    uint64_t v39 = v6;
    unint64_t v40 = swift_bridgeObjectRetain();
    int v41 = sub_100B383C4(v40, v39);

    swift_bridgeObjectRelease();
    int v38 = v41 ^ 1;
  }
  uint64_t v42 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  swift_beginAccess();
  if (*v42 != 2
    && (([*(id *)&v6[v24] isDragging] | v38) & 1) == 0
    && v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScroll] == 1)
  {
    a3 = v13 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
    swift_beginAccess();
    sub_1000688E4(a3, (uint64_t)&aBlock);
    char v43 = v74;
    id v44 = v75;
    sub_100068990(&aBlock, (uint64_t)v74);
    unint64_t v45 = (*((uint64_t (**)(void *, uint64_t (*)()))v44 + 2))(v43, v44);
    uint64_t v46 = *(void *)v14;
    if ((*(void *)v14 & 0xC000000000000001) == 0)
    {
      if ((v45 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v45 < *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v47 = *(id *)(v46 + 8 * v45 + 32);
LABEL_20:
        id v48 = v47;
        double v49 = UIView.untransformedFrame.getter();
        CGFloat v51 = v50;
        CGFloat v53 = v52;
        CGFloat v55 = v54;

        sub_100B325BC(v49, v51, v53, v55);
        double v57 = v56;

        sub_1000760E4((uint64_t)&aBlock);
        sub_1000688E4(a3, (uint64_t)&aBlock);
        uint64_t v58 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling;
        sub_100B3423C((unint64_t)&aBlock, v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_needsTapHandling], a2, v5, 0, 0.0, v57, v70);

        sub_1000760E4((uint64_t)&aBlock);
        v6[v58] = 0;
        return;
      }
      __break(1u);
      goto LABEL_31;
    }
LABEL_28:
    swift_bridgeObjectRetain();
    id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  id v59 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lyrics];
  swift_beginAccess();
  if (*(void *)v59 && *(unsigned char *)(*(void *)v59 + 56) == 2) {
    char v60 = (objc_class *)sub_100B28934(a2, v5);
  }
  else {
    char v60 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:100.0 damping:18.0 initialVelocity:0.0];
  }
  v61.super.Class isa = v60;
  sub_100057778(0, (unint64_t *)&qword_1010CAC50);
  Class isa = UIViewPropertyAnimator.init(springTimingParameters:)(v61).super.isa;
  sub_100B3271C(a1, isa, (uint64_t *)1, 1);
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v6;
  CGFloat v75 = sub_100B3B844;
  uint64_t v76 = v63;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v72 = 1107296256;
  uint64_t v73 = sub_100020238;
  uint64_t v74 = &unk_10100D800;
  uint64_t v64 = _Block_copy(&aBlock);
  uint64_t v65 = v6;
  swift_release();
  [(objc_class *)isa addAnimations:v64];
  _Block_release(v64);
  BOOL v66 = [(objc_class *)isa state] == (id)3;
  v65[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = v66;
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = v65;
  CGFloat v75 = sub_100B3B7A0;
  uint64_t v76 = v67;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v72 = 1107296256;
  uint64_t v73 = sub_1002DE0E4;
  uint64_t v74 = &unk_10100D850;
  unint64_t v68 = _Block_copy(&aBlock);
  uint64_t v69 = v65;
  swift_release();
  [(objc_class *)isa addCompletion:v68];
  _Block_release(v68);
  [(objc_class *)isa startAnimation];
}

void sub_100B38C78(void *a1, int a2, double a3)
{
  uint64_t v6 = v3;
  LODWORD(v8) = a2;
  uint64_t v9 = a1;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_100068990(a1, v10);
  unint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  unint64_t v13 = &v3[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews];
  swift_beginAccess();
  uint64_t v14 = *(void *)v13;
  if ((*(void *)v13 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v12 < *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    unint64_t v12 = (unint64_t)*(id *)(v14 + 8 * v12 + 32);
    goto LABEL_5;
  }
  __break(1u);
LABEL_59:
  swift_bridgeObjectRetain();
  id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_9:
  id v21 = v20;
  double v22 = UIView.untransformedFrame.getter();
  CGFloat v24 = v23;
  CGFloat v26 = v25;
  CGFloat v28 = v27;

  sub_100B325BC(v22, v24, v26, v28);
  double v5 = v29;

  sub_1000760E4((uint64_t)aBlock);
  uint64_t v30 = (unint64_t *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
  swift_beginAccess();
  unint64_t v31 = *v30;
  swift_bridgeObjectRetain();
  char v4 = sub_100B2959C(v12, v31);
  swift_bridgeObjectRelease();
  double v18 = &v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  swift_beginAccess();
  if (*v18 == 2 && (v4 & 1) == 0)
  {
    sub_100B3720C();
    CGFloat v32 = (double *)swift_allocObject();
    *((void *)v32 + 2) = v6;
    v32[3] = 0.0;
    v32[4] = v5;
    *((void *)v32 + 5) = v12;
    id v33 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    unint64_t v88 = sub_100B3B6D4;
    CGFloat v89 = v32;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100020238;
    unint64_t v87 = &unk_10100D7B0;
    CGFloat v34 = _Block_copy(aBlock);
    id v35 = v6;
    id v36 = (id)v12;
    swift_release();
    unint64_t v12 = (unint64_t)[v33 initWithDuration:3 curve:v34 animations:0.25];
    _Block_release(v34);
    if (v8)
    {
      sub_1000688E4(v11, (uint64_t)aBlock);
      id v37 = (id)v12;
      sub_100B3271C(aBlock, (void *)v12, (uint64_t *)1, 1);

      sub_1000760E4((uint64_t)aBlock);
    }
    [(id)v12 startAnimation];

    goto LABEL_45;
  }
  uint64_t v85 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView;
  [*(id *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] contentOffset];
  CGFloat v39 = v38;
  CGFloat v41 = v40;
  id v42 = [v6 view];
  if (!v42) {
    goto LABEL_68;
  }
  char v43 = v42;
  [v42 frame];
  CGFloat v45 = v44;

  uint64_t v46 = (CGFloat *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_containerHeight];
  swift_beginAccess();
  uint64_t v84 = v46;
  CGFloat v47 = *v46;
  if (*v46 <= 0.0)
  {
    id v48 = [v6 view];
    if (!v48)
    {
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    double v49 = v48;
    [v48 frame];
    CGFloat v47 = v50;
  }
  [(id)v12 frame];
  v92.origin.CGFloat x = v51;
  v92.origin.CGFloat y = v52;
  v92.size.width = v53;
  v92.size.CGFloat height = v54;
  v91.origin.CGFloat x = v39;
  v91.origin.CGFloat y = v41;
  v91.size.width = v45;
  v91.size.CGFloat height = v47;
  if (CGRectIntersectsRect(v91, v92))
  {
    sub_1000688E4((uint64_t)v9, (uint64_t)aBlock);
    sub_100063814(&qword_1010C9A68);
    if (swift_dynamicCast() & 1) == 0 && (v8)
    {
      sub_100B3720C();
      sub_100B38608(v9, 0, 1, a3);
LABEL_45:

      return;
    }
  }
  sub_1000688E4((uint64_t)v9, (uint64_t)aBlock);
  sub_100063814(&qword_1010C9A68);
  if (swift_dynamicCast())
  {
    unsigned int v83 = v8;
    uint64_t v55 = v9[3];
    uint64_t v8 = v9[4];
    sub_100068990(v9, v55);
    unint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v55, v8);
    uint64_t v57 = *(void *)v13;
    if ((*(void *)v13 & 0xC000000000000001) != 0) {
      goto LABEL_62;
    }
    if ((v56 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v8 = v83;
      if (v56 < *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v58 = (char *)*(id *)(v57 + 8 * v56 + 32);
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_65:
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((uint64_t)v9 >= v8) {
      goto LABEL_38;
    }
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
LABEL_33:
  if (!(v4 & 1 | ((v8 & 1) == 0)))
  {
    sub_1000688E4(v11, (uint64_t)aBlock);
    sub_100B3271C(aBlock, 0, (uint64_t *)1, 0);
    sub_1000760E4((uint64_t)aBlock);
  }
LABEL_35:
  unint64_t v12 = (unint64_t)(id)v12;
  UIView.untransformedFrame.getter();
  a3 = v63;

  memset(v90, 0, 32);
  v90[32] = 1;
  sub_100B304D0((char *)v12, 2u, (uint64_t)v90);
  if (v64 != a3)
  {
    sub_1000688E4(v11, (uint64_t)aBlock);
    uint64_t v65 = v87;
    BOOL v66 = v88;
    sub_100068990(aBlock, (uint64_t)v87);
    uint64_t v67 = (*((uint64_t (**)(void *, id (*)()))v66 + 2))(v65, v66);
    uint64_t v8 = v67;
    if (*(void *)v13 >> 62) {
      goto LABEL_65;
    }
    uint64_t v9 = *(void **)((*(void *)v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((uint64_t)v9 < v67) {
      goto LABEL_66;
    }
LABEL_38:
    sub_1000760E4((uint64_t)aBlock);
    if ((void *)v8 != v9)
    {
      if (v8 >= (uint64_t)v9) {
        goto LABEL_67;
      }
      do
      {
        uint64_t v81 = *(void *)v13;
        if ((*(void *)v13 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v82 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v8 < 0)
          {
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            swift_bridgeObjectRetain();
            unint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_bridgeObjectRelease();
LABEL_5:
            uint64_t v11 = v12 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
            swift_beginAccess();
            sub_1000688E4(v11, (uint64_t)aBlock);
            uint64_t v15 = v87;
            double v16 = v88;
            sub_100068990(aBlock, (uint64_t)v87);
            unint64_t v17 = (*((uint64_t (**)(void *, id (*)()))v16 + 2))(v15, v16);
            double v18 = (char *)v17;
            uint64_t v19 = *(void *)v13;
            if ((*(void *)v13 & 0xC000000000000001) != 0) {
              goto LABEL_59;
            }
            if ((v17 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v17 < *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v20 = *(id *)(v19 + 8 * v17 + 32);
              goto LABEL_9;
            }
            __break(1u);
LABEL_62:
            swift_bridgeObjectRetain();
            uint64_t v58 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_bridgeObjectRelease();
            LOBYTE(v8) = v83;
LABEL_27:
            id v59 = *(void **)&v58[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
            id v60 = v59;

            if (v59)
            {
              _s23InstrumentalContentViewCMa();
              if (swift_dynamicCastClass())
              {
                UISpringTimingParameters v61 = *(void **)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView];
                *(void *)&v6[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView] = v12;
                id v62 = (id)v12;

                if (v4)
                {
                  sub_100B1E030(a3);

                  goto LABEL_35;
                }
                sub_100B1D8FC(a3);
                LOBYTE(v8) = v83;
              }
            }
            goto LABEL_33;
          }
          if ((unint64_t)v8 >= *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_55;
          }
          uint64_t v82 = (char *)*(id *)(v81 + 8 * v8 + 32);
        }
        ++v8;
        sub_100B30B8C(v82);
      }
      while (v9 != (void *)v8);
    }
  }
  sub_100B3720C();
  [*(id *)&v6[v85] setContentOffset:0.0 v5];
  if (*v18) {
    goto LABEL_45;
  }
  [*(id *)&v6[v85] contentOffset];
  CGFloat v69 = v68;
  CGFloat v71 = v70;
  id v72 = [v6 view];
  if (!v72) {
    goto LABEL_70;
  }
  uint64_t v73 = v72;
  [v72 frame];
  CGFloat v75 = v74;

  CGFloat v76 = *v84;
  if (*v84 > 0.0)
  {
LABEL_44:
    sub_1000688E4(v11, (uint64_t)aBlock);
    uint64_t v80 = sub_100B32154(aBlock, v69, v71, v75, v76);
    sub_1000760E4((uint64_t)aBlock);
    sub_100B32AE8(v80);
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  id v77 = [v6 view];
  if (v77)
  {
    CGRect v78 = v77;
    [v77 frame];
    CGFloat v76 = v79;

    goto LABEL_44;
  }
LABEL_71:
  __break(1u);
}

uint64_t _s11MusicCoreUI26SyncedLyricsViewControllerC06syncedE14DesectAllLinesyyAA0dE7ManagerCF_0()
{
  uint64_t v1 = v0;
  unint64_t v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  uint64_t result = swift_beginAccess();
  if (!*v2)
  {
    uint64_t result = (uint64_t)[*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView] isDragging];
    if ((result & 1) == 0)
    {
      swift_beginAccess();
      id v4 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:100.0 damping:18.0 initialVelocity:0.0];
      sub_100057778(0, (unint64_t *)&qword_1010CAC50);
      v5.super.Class isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v4).super.isa;
      uint64_t v6 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews];
      swift_beginAccess();
      double v16 = v6;
      uint64_t v7 = *(void *)v6;
      if (*(void *)v6 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v8 = result;
        if (result) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (v8)
        {
LABEL_5:
          if (v8 < 1)
          {
            __break(1u);
            return result;
          }
          for (uint64_t i = 0; i != v8; ++i)
          {
            if ((v7 & 0xC000000000000001) != 0) {
              id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v10 = *(id *)(v7 + 8 * i + 32);
            }
            uint64_t v11 = v10;
            unint64_t v12 = v5.super.isa;
            sub_100B21AE0(0, v5.super.isa);

            id v13 = [v1 traitCollection];
            id v14 = [v13 accessibilityContrast];

            if (v14 != (id)1)
            {
              sub_100B21F78(1, 3.0);
              swift_beginAccess();
              id v15 = v11;
              sub_100BB8530(&v17, v15);
              uint64_t v11 = v17;
              swift_endAccess();
            }
          }
        }
      }
      swift_bridgeObjectRelease();
      *(void *)double v16 = _swiftEmptyArrayStorage;

      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_100B39810(void *a1, double a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_100068990(a1, v4);
  unint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_lineViews);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if ((v8 & 0xC000000000000001) == 0)
  {
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v6 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v9 = (char *)*(id *)(v8 + 8 * v6 + 32);
      goto LABEL_5;
    }
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_5:
  id v10 = *(void **)&v9[OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView];
  id v11 = v10;

  if (v10)
  {
    _s23InstrumentalContentViewCMa();
    if (swift_dynamicCastClass())
    {
      id v12 = v11;
      sub_100B1E030(a2);
    }
  }
}

void sub_100B3994C(uint64_t a1)
{
  sub_1000688E4(a1, (uint64_t)v15);
  sub_100063814(&qword_1010C9A68);
  if (swift_dynamicCast())
  {
    char v2 = BYTE1(__dst[3]);
    swift_beginAccess();
    uint64_t v3 = type metadata accessor for SyncedLyricsLineView();
    swift_bridgeObjectRetain();
    Array.subscript.getter(v3, (uint64_t)__dst);
    swift_bridgeObjectRelease();
    uint64_t v4 = (void *)__dst[0];
    if (!__dst[0])
    {
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v5 = *(void **)(__dst[0] + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView);
    if (!v5) {
      goto LABEL_15;
    }
    _s19SBS_TextContentViewCMa();
    uint64_t v6 = swift_dynamicCastClass();
    if (!v6) {
      goto LABEL_15;
    }
    uint64_t v7 = *(void *)(v6 + OBJC_IVAR___MusicSBS_TextContentView_textView);
    if (!v7) {
      goto LABEL_21;
    }
    uint64_t v8 = *(void *)(v7
                   + OBJC_IVAR____TtCCC11MusicCoreUI20SyncedLyricsLineView19SBS_TextContentView8TextView_frameVisualRepresentation);
    if (!v8)
    {
LABEL_15:
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v9 = *(void *)(v8 + 24);
    if (v9 >> 62)
    {
      id v14 = v5;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      if (v10) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v11 = v5;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v10)
      {
LABEL_9:
        if (v10 >= 1)
        {
          id v12 = (const void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_specs);
          swift_beginAccess();
          uint64_t v13 = 0;
          do
          {
            if ((v9 & 0xC000000000000001) != 0) {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              swift_retain();
            }
            ++v13;
            memcpy(__dst, v12, 0x219uLL);
            sub_100262548((uint64_t)__dst);
            sub_100B16B94((unint64_t)__dst, v2);
            sub_1002622C8((uint64_t)__dst);
            swift_release();
          }
          while (v10 != v13);
          goto LABEL_18;
        }
        __break(1u);
LABEL_21:
        __break(1u);
        return;
      }
    }
LABEL_18:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
}

void sub_100B39C1C(void *a1)
{
  swift_beginAccess();
  id v3 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:100.0 damping:18.0 initialVelocity:0.0];
  sub_100057778(0, (unint64_t *)&qword_1010CAC50);
  Class isa = UIViewPropertyAnimator.init(springTimingParameters:)((UISpringTimingParameters)v3).super.isa;
  sub_100B3271C(a1, isa, 0, 1);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  double v16 = sub_100B3B65C;
  uint64_t v17 = v5;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  id v14 = sub_100020238;
  id v15 = &unk_10100D710;
  uint64_t v6 = _Block_copy(&aBlock);
  uint64_t v7 = v1;
  swift_release();
  [(objc_class *)isa addAnimations:v6];
  _Block_release(v6);
  BOOL v8 = [(objc_class *)isa state] == (id)3;
  v7[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating] = v8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  double v16 = sub_100B3B678;
  uint64_t v17 = v9;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  id v14 = sub_1002DE0E4;
  id v15 = &unk_10100D760;
  uint64_t v10 = _Block_copy(&aBlock);
  id v11 = v7;
  swift_release();
  [(objc_class *)isa addCompletion:v10];
  _Block_release(v10);
  [(objc_class *)isa startAnimation];
}

uint64_t sub_100B39E74(uint64_t result)
{
  unint64_t v1 = 0;
  unint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = result + 40;
LABEL_2:
  if (v1 <= v2) {
    unint64_t v4 = v2;
  }
  else {
    unint64_t v4 = v1;
  }
  unint64_t v5 = v4 + 1;
  uint64_t v6 = (unsigned __int8 *)(v3 + 16 * v1);
  while (1)
  {
    if (v2 == v1) {
      return (uint64_t)_swiftEmptyArrayStorage;
    }
    if (v5 == ++v1) {
      break;
    }
    uint64_t v7 = v6 + 16;
    int v8 = *v6;
    v6 += 16;
    if (v8 == 1)
    {
      id v9 = *((id *)v7 - 3);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = (uint64_t)sub_100AFC214(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1) {
        uint64_t result = (uint64_t)sub_100AFC214((void *)(v10 > 1), v11 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v11 + 1;
      id v12 = &_swiftEmptyArrayStorage[2 * v11];
      void v12[4] = v9;
      *((unsigned char *)v12 + 40) = 1;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

void sub_100B39F8C()
{
  uint64_t v1 = v0;
  unint64_t v2 = (unint64_t)sub_100B31F74();
  unint64_t v3 = v2;
  if (v2 >> 62)
  {
LABEL_26:
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t v5 = &unk_1010CA000;
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v5 = &unk_1010CA000;
    if (v4)
    {
LABEL_3:
      uint64_t v45 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_manager;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = &OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_contentView;
      uint64_t v8 = 4;
      uint64_t v41 = v1;
      uint64_t v42 = v4;
      unint64_t v44 = v3;
      while (1)
      {
        if (v6) {
          id v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v9 = (char *)*(id *)(v3 + 8 * v8);
        }
        unint64_t v10 = v9;
        uint64_t v11 = v8 - 3;
        if (__OFADD__(v8 - 4, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        id v12 = *(void **)&v9[*v7];
        if (v12)
        {
          _s19SBS_TextContentViewCMa();
          uint64_t v13 = swift_dynamicCastClass();
          if (v13)
          {
            id v14 = v7;
            uint64_t v15 = *(void *)(v1 + v45);
            if (v15)
            {
              uint64_t v16 = v13;
              unint64_t v17 = v6;
              swift_beginAccess();
              double v18 = *(double (**)(uint64_t))(v15 + 96);
              if (v18)
              {
                id v43 = v12;
                swift_retain();
                uint64_t v19 = sub_10007B674((uint64_t)v18);
                double v20 = v18(v19);
                swift_beginAccess();
                double v21 = 0.0;
                if (*(unsigned char *)(v15 + 88) == 1)
                {
                  Lyrics.spatialOffset.getter();
                  double v21 = v22;
                }
                sub_10006ADFC((uint64_t)v18);
                swift_release();
                double v23 = v20 - v21;
                if (v23 == *(double *)(v16 + OBJC_IVAR___MusicSBS_TextContentView_progress))
                {
                  unint64_t v6 = v17;
                  uint64_t v1 = v41;
                  uint64_t v4 = v42;
                  uint64_t v7 = v14;
                  id v24 = v43;
                  unint64_t v3 = v44;
                }
                else
                {
                  *(double *)(v16 + OBJC_IVAR___MusicSBS_TextContentView_progress) = v23;
                  double v25 = *(void **)(v16 + OBJC_IVAR___MusicSBS_TextContentView_textView);
                  uint64_t v1 = v41;
                  if (!v25) {
                    goto LABEL_50;
                  }
                  unint64_t v6 = v17;
                  uint64_t v7 = v14;
                  id v26 = v25;
                  sub_100B114EC(1, v23);

                  double v27 = *(void **)(v16 + OBJC_IVAR___MusicSBS_TextContentView_backgroundTextView);
                  uint64_t v4 = v42;
                  unint64_t v3 = v44;
                  if (v27)
                  {
                    id v24 = v27;
                    sub_100B114EC(1, v23);

                    unint64_t v10 = v43;
                  }
                  else
                  {
                    id v24 = v43;
                  }
                }

                unint64_t v10 = v24;
                goto LABEL_6;
              }
              unint64_t v6 = v17;
              uint64_t v4 = v42;
            }
            uint64_t v7 = v14;
            unint64_t v3 = v44;
          }
        }
LABEL_6:

        ++v8;
        if (v11 == v4)
        {
          swift_bridgeObjectRelease();
          unint64_t v5 = (void *)&unk_1010CA000;
          goto LABEL_28;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_28:
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isAnimating)) {
    return;
  }
  uint64_t v28 = OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView;
  double v29 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_instrumentalBreakVisibleView);
  if (!v29) {
    goto LABEL_43;
  }
  uint64_t v30 = (unint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_selectedLineViews);
  swift_beginAccess();
  unint64_t v31 = *v30;
  if (!(*v30 >> 62))
  {
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v33 = v29;
    swift_bridgeObjectRetain();
    if (v32) {
      goto LABEL_32;
    }
LABEL_41:
    swift_bridgeObjectRelease();
LABEL_42:

LABEL_43:
    if (*(void *)(v1 + v5[327]))
    {
      swift_retain();
      SyncedLyricsManager.update()();
      swift_release();
    }
    return;
  }
  id v40 = v29;
  swift_bridgeObjectRetain();
  uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
  if (!v32) {
    goto LABEL_41;
  }
LABEL_32:
  unint64_t v34 = v32 - 1;
  if (__OFSUB__(v32, 1))
  {
    __break(1u);
    goto LABEL_47;
  }
  if ((v31 & 0xC000000000000001) != 0)
  {
LABEL_47:
    id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_37;
  }
  if ((v34 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v34 < *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v35 = *(id *)(v31 + 8 * v34 + 32);
LABEL_37:
    id v36 = v35;
    swift_bridgeObjectRelease();
    unint64_t v37 = *v30;
    swift_bridgeObjectRetain();
    char v38 = sub_100B2959C((uint64_t)v29, v37);
    swift_bridgeObjectRelease();
    if ((v38 & 1) == 0)
    {
      CGFloat v39 = *(void **)(v1 + v28);
      *(void *)(v1 + v28) = 0;

      sub_100B369FC((uint64_t)v29, (uint64_t)v36);
      sub_100B219B4();
    }

    goto LABEL_42;
  }
  __break(1u);
LABEL_50:
  __break(1u);
}

id sub_100B3A388(void *a1)
{
  unint64_t v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_isFullScreen];
  swift_beginAccess();
  if (*v3 != 1) {
    return 0;
  }
  uint64_t v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode];
  swift_beginAccess();
  if (*v4) {
    return 0;
  }
  unint64_t v5 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_bottomTapAreaHeight];
  swift_beginAccess();
  if (*v5 <= 0.0) {
    return 0;
  }
  id v6 = [v1 view:*v5];
  [a1 locationInView:v6];
  double v8 = v7;

  id result = [v1 view];
  if (result)
  {
    unint64_t v10 = result;
    [result frame];
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;

    v19.origin.CGFloat x = v12;
    v19.origin.CGFloat y = v14;
    v19.size.width = v16;
    v19.size.CGFloat height = v18;
    return (id)(CGRectGetHeight(v19) - *v5 < v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void _s11MusicCoreUI26SyncedLyricsViewControllerC06scrollF14DidEndDragging_14willDecelerateySo08UIScrollF0C_SbtF_0()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v6[4] = sub_100B3B654;
  v6[5] = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_10023B98C;
  v6[3] = &unk_10100D6C0;
  unint64_t v3 = _Block_copy(v6);
  swift_release();
  id v4 = [v1 scheduledTimerWithTimeInterval:0 repeats:v3 block:3.0];
  _Block_release(v3);
  unint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer);
  *(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_allowAnimateToNextLineAfterScrollTimer) = v4;
}

void _s11MusicCoreUI26SyncedLyricsViewControllerC06scrollF15WillEndDragging_12withVelocity19targetContentOffsetySo08UIScrollF0C_So7CGPointVSpyAJGtF_0(double a1, double a2)
{
  uint64_t v3 = v2;
  if (a2 <= 0.0)
  {
    if (a2 < 0.0)
    {
      double v8 = (unsigned char *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
      swift_beginAccess();
      if (*v8 == 1)
      {
        *double v8 = 0;
        uint64_t v9 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
        swift_beginAccess();
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v10 = *(void *)(v9 + 8);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v3, ObjectType, v10);
          swift_unknownObjectRelease();
        }
      }
      uint64_t v12 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
      swift_beginAccess();
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v13 = *(void *)(v12 + 8);
        uint64_t v14 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v3, v14, v13);
        goto LABEL_11;
      }
    }
  }
  else
  {
    id v4 = (unsigned char *)(v2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
    swift_beginAccess();
    if (*v4 != 1)
    {
      *id v4 = 1;
      uint64_t v5 = v3 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_delegate;
      swift_beginAccess();
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v6 = *(void *)(v5 + 8);
        uint64_t v7 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v7, v6);
LABEL_11:
        swift_unknownObjectRelease();
      }
    }
  }
}

unint64_t sub_100B3A7C8()
{
  unint64_t result = qword_1010CAB40;
  if (!qword_1010CAB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CAB40);
  }
  return result;
}

uint64_t sub_100B3A81C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_100B3A870(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_mode);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t destroy for SyncedLyricsSharingTransitionInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  uint64_t v3 = *(void **)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v3;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  long long v4 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v4;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  uint64_t v5 = *(void *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v6 = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void **)(a2 + 104);
  long long v8 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = v7;
  id v9 = v7;

  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  uint64_t v10 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v11;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for SyncedLyricsSharingTransitionInfo(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

uint64_t assignWithTake for SyncedLyricsSharingTransitionInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  long long v4 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);

  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  long long v5 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v5;
  long long v6 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v6;
  swift_release();
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SyncedLyricsSharingTransitionInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 240)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyncedLyricsSharingTransitionInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 240) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 240) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsSharingTransitionInfo()
{
  return &type metadata for SyncedLyricsSharingTransitionInfo;
}

unsigned char *storeEnumTagSinglePayload for SyncedLyricsViewController.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B3AE7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncedLyricsViewController.Mode()
{
  return &type metadata for SyncedLyricsViewController.Mode;
}

uint64_t sub_100B3AEB4(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000154F4;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1010CAC30 + dword_1010CAC30);
  return v6(a1, v4);
}

void sub_100B3AF6C()
{
  sub_100B30B8C(*(char **)(v0 + 24));
}

uint64_t sub_100B3AF94()
{
  sub_1000760E4(v0 + 24);

  return swift_deallocObject();
}

id sub_100B3AFDC()
{
  return sub_100B36668(*(void **)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_100B3AFF0()
{
  swift_bridgeObjectRelease();

  sub_1000760E4(v0 + 48);

  return swift_deallocObject();
}

uint64_t sub_100B3B038(uint64_t a1)
{
  return sub_100B367B8(*(double *)(v1 + 32), *(double *)(v1 + 40), a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100B3B048()
{
  sub_1000760E4(v0 + 24);

  return swift_deallocObject();
}

id sub_100B3B090()
{
  return sub_100B35C2C(*(void **)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_100B3B0A4()
{
  swift_bridgeObjectRelease();

  sub_1000760E4(v0 + 64);

  return swift_deallocObject();
}

uint64_t sub_100B3B0F4(uint64_t a1)
{
  return sub_100B35E70(*(double *)(v1 + 24), *(double *)(v1 + 48), *(double *)(v1 + 56), a1, *(void *)(v1 + 16), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100B3B10C()
{
  return swift_deallocObject();
}

id sub_100B3B14C()
{
  return sub_100B35D94(*(void *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_100B3B158()
{
  return swift_deallocObject();
}

void sub_100B3B190()
{
  sub_100B1D8FC(*(double *)(v0 + 24));
}

uint64_t sub_100B3B1BC()
{
  return swift_deallocObject();
}

uint64_t sub_100B3B1CC()
{
  return swift_deallocObject();
}

uint64_t sub_100B3B1DC()
{
  swift_release();

  return swift_deallocObject();
}

id sub_100B3B21C()
{
  return sub_100B352BC(*(void *)(v0 + 16), *(CGFloat **)(v0 + 24));
}

uint64_t sub_100B3B224()
{
  swift_bridgeObjectRelease();

  swift_release();
  sub_1000760E4(v0 + 48);

  return swift_deallocObject();
}

void sub_100B3B274(uint64_t a1)
{
  sub_100B35308(*(double *)(v1 + 24), a1, *(void *)(v1 + 16), *(void *)(v1 + 32), *(void *)(v1 + 40), (void *)(v1 + 48));
}

uint64_t sub_100B3B288@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC11MusicCoreUI20SyncedLyricsLineView_line;
  swift_beginAccess();
  return sub_1000688E4(v3, a2);
}

uint64_t sub_100B3B2E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_100068990(a1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  *a2 = result;
  return result;
}

BOOL sub_100B3B340(void *a1)
{
  CGFloat v2 = v1[2];
  CGFloat v3 = v1[3];
  CGFloat v4 = v1[4];
  CGFloat v5 = v1[5];
  [a1 frame];
  v8.origin.CGFloat x = v2;
  v8.origin.CGFloat y = v3;
  v8.size.width = v4;
  v8.size.CGFloat height = v5;
  return CGRectIntersectsRect(v7, v8);
}

id sub_100B3B38C(void *a1)
{
  CGFloat v2 = *(void (**)(void))(v1 + 16);
  id v3 = a1;
  v2();
  return v3;
}

uint64_t sub_100B3B3CC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_100B3B40C()
{
}

uint64_t sub_100B3B414()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100B3B44C()
{
  return sub_100B16B90(v0);
}

uint64_t sub_100B3B454()
{
  return swift_deallocObject();
}

id sub_100B3B48C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  [v1 setHidden:0];

  return [v1 setHighlighted:0];
}

uint64_t sub_100B3B4E0(uint64_t a1)
{
  CGFloat v2 = *(void **)(a1 + 104);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B3B564()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B3B59C(uint64_t a1)
{
  CGFloat v4 = *(int **)(v1 + 16);
  CGFloat v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *CGFloat v5 = v2;
  v5[1] = sub_100081D08;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1010CAC80 + dword_1010CAC80);
  return v6(a1, v4);
}

void sub_100B3B654()
{
}

unint64_t sub_100B3B65C()
{
  return sub_100B37A5C();
}

uint64_t sub_100B3B678(uint64_t a1)
{
  return sub_100B37C10(a1, *(void *)(v1 + 16));
}

uint64_t sub_100B3B694()
{
  return swift_deallocObject();
}

id sub_100B3B6D4()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11MusicCoreUI26SyncedLyricsViewController_scrollView) setContentOffset:*(double *)(v0 + 24) *(double *)(v0 + 32)];
}

uint64_t sub_100B3B6F4()
{
  return sub_100B2FF94(*(void **)(v0 + 16));
}

void sub_100B3B6FC()
{
  sub_100B300F8(*(void *)(v0 + 16));
}

uint64_t sub_100B3B704()
{
  return swift_deallocObject();
}

uint64_t sub_100B3B714()
{
  return swift_deallocObject();
}

void sub_100B3B724()
{
}

double sub_100B3B72C()
{
  return sub_100B2B4D0();
}

uint64_t sub_100B3B748(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100B3B790()
{
}

double sub_100B3B798(double a1)
{
  return sub_100B2AE60(a1);
}

char *LineProgressGradientView.__allocating_init(color:featherWidth:direction:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6, double a7)
{
  char v14 = a2 & 1;
  id v15 = objc_allocWithZone(v7);
  return LineProgressGradientView.init(color:featherWidth:direction:frame:)(a1, v14, a3, a4, a5, a6, a7);
}

char *LineProgressGradientView.init(color:featherWidth:direction:frame:)(void *a1, char a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v14 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView;
  char v15 = a2 & 1;
  type metadata accessor for LineProgressGradientView.GradientView();
  id v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  double v17 = v7;
  *(void *)&v7[v14] = [v16 init];
  uint64_t v18 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView;
  *(void *)&v17[v18] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color] = a1;
  *(double *)&v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth] = a3;
  v17[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction] = v15;
  id v19 = a1;

  v22.receiver = v17;
  v22.super_class = (Class)type metadata accessor for LineProgressGradientView();
  double v20 = (char *)[super initWithFrame:a4, a5, a6, a7];
  [v20 setClipsToBounds:1];
  [v20 addSubview:*(void *)&v20[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView]];
  [v20 addSubview:*(void *)&v20[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView]];
  sub_100B3BC0C();
  sub_100B3BE74();

  return v20;
}

uint64_t type metadata accessor for LineProgressGradientView.GradientView()
{
  return self;
}

uint64_t type metadata accessor for LineProgressGradientView()
{
  return self;
}

Swift::Void __swiftcall LineProgressGradientView.layoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for LineProgressGradientView();
  [super layoutSubviews];
  sub_100B3BD18();
}

void sub_100B3BC0C()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction);
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView;
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView), "layer"));
  self;
  CGFloat v4 = (void *)swift_dynamicCastObjCClassUnconditional();
  if (v1) {
    double v5 = 1.0;
  }
  else {
    double v5 = 0.0;
  }
  if (v1) {
    double v6 = 0.0;
  }
  else {
    double v6 = 1.0;
  }
  [v4 setStartPoint:v5];

  id v7 = [*(id *)(v0 + v2) layer];
  self;
  [swift_dynamicCastObjCClassUnconditional() setEndPoint:v6];

  sub_100B3BD18();
}

void sub_100B3BD18()
{
  if (v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_direction])
  {
    uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth;
    double v2 = *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth];
    double v3 = 0.0;
    double v4 = v2;
  }
  else
  {
    [v0 bounds];
    double Width = CGRectGetWidth(v11);
    uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth;
    double v4 = *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_featherWidth];
    double v3 = Width - v4;
    if (Width - v4 <= 0.0) {
      double v2 = Width - v4;
    }
    else {
      double v2 = 0.0;
    }
  }
  id v6 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView];
  [v0 bounds];
  [v6 setFrame:v3, 0.0, v4, CGRectGetHeight(v12)];

  id v9 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView];
  [v0 bounds];
  double v7 = CGRectGetWidth(v13) - *(double *)&v0[v1];
  if (v7 < 0.0) {
    double v8 = 0.0;
  }
  else {
    double v8 = v7;
  }
  [v0 bounds];
  [v9 setFrame:v2, 0.0, v8, CGRectGetHeight(v14)];
}

id sub_100B3BE74()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_gradientView), "layer"));
  self;
  double v2 = (void *)swift_dynamicCastObjCClassUnconditional();
  sub_100063814(&qword_1010C94C0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100E251B0;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color;
  id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_color), "CGColor"));
  _s3__C7CGColorCMa_1(0);
  uint64_t v7 = v6;
  *(void *)(v3 + 56) = v6;
  *(void *)(v3 + 32) = v5;
  id v8 = [*(id *)(v0 + v4) colorWithAlphaComponent:0.0];
  id v9 = [v8 CGColor];

  *(void *)(v3 + 88) = v7;
  *(void *)(v3 + 64) = v9;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setColors:isa];

  CGRect v11 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI24LineProgressGradientView_fillView);
  uint64_t v12 = *(void *)(v0 + v4);

  return [v11 setBackgroundColor:v12];
}

id sub_100B3C0F0()
{
  return sub_100B3C184(0, type metadata accessor for LineProgressGradientView.GradientView);
}

void LineProgressGradientView.init(frame:)()
{
}

id LineProgressGradientView.__deallocating_deinit(uint64_t a1)
{
  return sub_100B3C184(a1, type metadata accessor for LineProgressGradientView);
}

id sub_100B3C184(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

id MPCPlayerResponseItem.hasStoreLyrics.getter()
{
  id v1 = [v0 metadataObject];
  id v2 = v1;
  if (v1)
  {
    id v3 = [v1 innermostModelObject];

    self;
    objc_super v4 = (void *)swift_dynamicCastObjCClass();
    if (v4 && (id v5 = [v4 lyrics]) != 0)
    {
      uint64_t v6 = v5;
      id v2 = [v5 hasStoreLyrics];
    }
    else
    {
      id v2 = 0;
    }
  }
  return v2;
}

uint64_t MPCPlayerResponseItem.supportsLyrics.getter()
{
  uint64_t result = (uint64_t)[v0 metadataObject];
  if (result)
  {
    id v2 = (void *)result;
    id v3 = [(id)result innermostModelObject];

    self;
    objc_super v4 = (void *)swift_dynamicCastObjCClass();
    if (!v4) {
      goto LABEL_11;
    }
    id v5 = v4;
    if ((_s11MusicCoreUI12LyricsLoaderC08supportsD03forSbSo11MPModelSongC_tFZ_0(v4) & 1) == 0) {
      goto LABEL_11;
    }
    id v6 = [self sharedMonitor];
    unsigned int v7 = [v6 isRemoteServerLikelyReachable];

    if (v7)
    {

      return 1;
    }
    id v8 = [v5 lyrics];
    if (v8 && (id v9 = v8, v10 = [v8 text], v9, v10))
    {
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v13 = v12;

      swift_bridgeObjectRelease();
      uint64_t v14 = HIBYTE(v13) & 0xF;
      if ((v13 & 0x2000000000000000) == 0) {
        uint64_t v14 = v11 & 0xFFFFFFFFFFFFLL;
      }
      return v14 != 0;
    }
    else
    {
LABEL_11:

      return 0;
    }
  }
  return result;
}

unint64_t sub_100B3C430()
{
  unint64_t result = qword_1010CAD48;
  if (!qword_1010CAD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CAD48);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LineProgressGradientView.Direction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B3C550);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LineProgressGradientView.Direction()
{
  return &type metadata for LineProgressGradientView.Direction;
}

unint64_t sub_100B3C588()
{
  unint64_t result = qword_1010CADA0;
  if (!qword_1010CADA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010CADA0);
  }
  return result;
}

char *VocalsAttenuationSlider.init(frame:)(double a1, double a2, double a3, double a4)
{
  v22.receiver = v4;
  v22.super_class = (Class)swift_getObjectType();
  id v9 = [super initWithFrame:a1, a2, a3, a4];
  uint64_t v10 = static AccessibilityIdentifier.named(_:)(0xD000000000000017, (void *)0x8000000100DD4950);
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v10, v11);
  uint64_t v12 = qword_1010C8350;
  unint64_t v13 = (char *)v9;
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v14 = (void *)qword_10112BE80;
  char v15 = (uint64_t *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition];
  swift_beginAccess();
  sub_100054738((uint64_t)v15, (uint64_t)v23);
  uint64_t v20 = v15[1];
  uint64_t v21 = *v15;
  id v19 = (void *)v15[2];
  *(_OWORD *)char v15 = xmmword_100E52640;
  v15[2] = (uint64_t)v14;
  v15[3] = 0x3FF0000000000000;
  void v15[4] = 0;
  v15[5] = 0;
  v15[6] = 0x3FF0000000000000;
  v15[7] = 0;
  v15[8] = 0;
  v15[9] = (uint64_t)_swiftEmptyArrayStorage;
  id v16 = v14;
  sub_100053BB4(v23, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100054404);
  swift_bridgeObjectRetain();
  id v17 = v16;
  swift_bridgeObjectRetain();
  sub_100053B68(v21, v20, v19);
  sub_100C3F1DC((uint64_t)v23);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_100053BB4(v23, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100053B68);

  return v13;
}

void VocalsAttenuationSlider.accessibilitySliderCurrentPercentageValue.getter()
{
  if (*(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) > *(float *)(v0
                                                                                                 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue))
    __break(1u);
}

uint64_t type metadata accessor for VocalsAttenuationSlider()
{
  return self;
}

double Corner.radius(in:)(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, uint64_t a6, char a7)
{
  if ((a7 & 1) == 0) {
    return *(double *)&a1;
  }
  double Width = CGRectGetWidth(*(CGRect *)&a2);
  v14.origin.CGFloat x = a2;
  v14.origin.CGFloat y = a3;
  v14.size.width = a4;
  v14.size.CGFloat height = a5;
  double Height = CGRectGetHeight(v14);
  if (Height >= Width) {
    double Height = Width;
  }
  return Height * 0.5;
}

void Corner.hash(into:)(uint64_t a1, Swift::UInt64 a2, Swift::UInt a3, char a4)
{
  if (a4)
  {
    String.hash(into:)();
  }
  else
  {
    String.hash(into:)();
    if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v6 = a2;
    }
    else {
      Swift::UInt64 v6 = 0;
    }
    Hasher._combine(_:)(v6);
    Hasher._combine(_:)(a3);
  }
}

BOOL static Corner.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  BOOL v6 = (a6 & 1) == 0;
  if (*(double *)&a1 != *(double *)&a4) {
    BOOL v6 = 0;
  }
  if (a2 != a5) {
    BOOL v6 = 0;
  }
  if (a3) {
    return a6 & 1;
  }
  else {
    return v6;
  }
}

Swift::Int Corner.hashValue.getter(Swift::UInt64 a1, Swift::UInt a2, char a3)
{
  Hasher.init(_seed:)();
  if (a3)
  {
    String.hash(into:)();
  }
  else
  {
    String.hash(into:)();
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v6 = a1;
    }
    else {
      Swift::UInt64 v6 = 0;
    }
    Hasher._combine(_:)(v6);
    Hasher._combine(_:)(a2);
  }
  return Hasher._finalize()();
}

Swift::Int sub_100B3CB0C()
{
  Swift::UInt64 v1 = *(void *)v0;
  Swift::UInt v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  Hasher.init(_seed:)();
  Corner.hash(into:)((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

void sub_100B3CB68(uint64_t a1)
{
  Corner.hash(into:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

Swift::Int sub_100B3CB74()
{
  Swift::UInt64 v1 = *(void *)v0;
  Swift::UInt v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  Hasher.init(_seed:)();
  Corner.hash(into:)((uint64_t)v5, v1, v2, v3);
  return Hasher._finalize()();
}

uint64_t sub_100B3CBCC(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a1 + 16);
  uint64_t result = *(unsigned __int8 *)(a2 + 16);
  if ((v3 & 1) == 0)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    unsigned int v6 = (*(double *)a1 == *(double *)a2) & ~result;
    if (v5 == *(void *)(a2 + 8)) {
      return v6;
    }
    else {
      return 0;
    }
  }
  return result;
}

void Border.hash(into:)(double a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  swift_retain();
  Color.hash(into:)();
  swift_release();
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  Hasher._combine(_:)(v6);
  Hasher._combine(_:)(a4);
}

uint64_t static Border.__derived_struct_equals(_:_:)(double a1, double a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, unsigned __int8 a6)
{
  int v7 = a4;
  unsigned int v8 = static Color.== infix(_:_:)() & (a1 == a2);
  if (v7 == a6) {
    return v8;
  }
  else {
    return 0;
  }
}

Swift::Int Border.hashValue.getter(double a1, uint64_t a2, unsigned __int8 a3)
{
  Hasher.init(_seed:)();
  swift_retain();
  Color.hash(into:)();
  swift_release();
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  Hasher._combine(_:)(v5);
  Hasher._combine(_:)(a3);
  return Hasher._finalize()();
}

Swift::Int sub_100B3CD54()
{
  return Border.hashValue.getter(*(double *)(v0 + 8), *(void *)v0, *(unsigned char *)(v0 + 16));
}

void sub_100B3CD64()
{
  Swift::UInt64 v1 = *(void *)(v0 + 8);
  Swift::UInt v2 = *(unsigned __int8 *)(v0 + 16);
  swift_retain();
  Color.hash(into:)();
  swift_release();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v2);
}

Swift::Int sub_100B3CDD0()
{
  Swift::UInt64 v1 = *(void *)(v0 + 8);
  Swift::UInt v2 = *(unsigned __int8 *)(v0 + 16);
  Hasher.init(_seed:)();
  swift_retain();
  Color.hash(into:)();
  swift_release();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

BOOL sub_100B3CE4C(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 16);
  double v4 = *(double *)(a2 + 8);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  char v6 = static Color.== infix(_:_:)();
  BOOL result = 0;
  if ((v6 & 1) != 0 && v2 == v4) {
    return v3 == v5;
  }
  return result;
}

uint64_t View.corner(_:)()
{
  return View.modifier<A>(_:)();
}

uint64_t sub_100B3CEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100063814(&qword_1010CAE08);
  __chkstk_darwin();
  char v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  uint64_t v8 = v2[1];
  char v9 = *((unsigned char *)v2 + 16);
  uint64_t v10 = sub_100063814(&qword_1010CAE10);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v6, a1, v10);
  sub_100B3EB18((uint64_t)v6, a2);
  uint64_t v11 = a2 + *(int *)(sub_100063814(&qword_1010CAE18) + 36);
  *(void *)uint64_t v11 = v7;
  *(void *)(v11 + 8) = v8;
  *(unsigned char *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = 0;
  *(_WORD *)(v11 + 32) = 256;
  return sub_1000637B8((uint64_t)v6, &qword_1010CAE08);
}

uint64_t View.border(_:corner:)()
{
  return View.modifier<A>(_:)();
}

uint64_t sub_100B3D050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t v3 = sub_100063814(&qword_1010CAE20);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v2;
  if (!*((unsigned char *)v2 + 16))
  {
    double v8 = 0.5;
    goto LABEL_5;
  }
  double v7 = 0.0;
  if (*((unsigned char *)v2 + 16) == 1)
  {
    double v8 = -0.5;
LABEL_5:
    double v7 = *((double *)v2 + 1) * v8;
  }
  uint64_t v9 = v2[3];
  uint64_t v25 = v2[4];
  char v10 = *((unsigned char *)v2 + 40);
  swift_retain();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v11 = v28;
  uint64_t v12 = v30;
  uint64_t v13 = v31;
  uint64_t v14 = v32;
  uint64_t v15 = static Alignment.center.getter();
  uint64_t v17 = v16;
  uint64_t v18 = static Alignment.center.getter();
  uint64_t v20 = v19;
  uint64_t v21 = sub_100063814(&qword_1010CAE28);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v5, v26, v21);
  objc_super v22 = &v5[*(int *)(v3 + 36)];
  uint64_t v23 = v25;
  *(void *)objc_super v22 = v9;
  *((void *)v22 + 1) = v23;
  v22[16] = v10;
  *((double *)v22 + 3) = v7;
  *((void *)v22 + 4) = v11;
  *((void *)v22 + 5) = v29;
  *((void *)v22 + 6) = v12;
  *((void *)v22 + 7) = v13;
  *((void *)v22 + 8) = v14;
  *((void *)v22 + 9) = v6;
  *((_WORD *)v22 + 40) = 256;
  *((void *)v22 + 11) = v15;
  *((void *)v22 + 12) = v17;
  *((void *)v22 + 13) = v18;
  *((void *)v22 + 14) = v20;
  return sub_100B3EB80((uint64_t)v5, v27);
}

uint64_t sub_100B3D20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B3D050(a1, a2);
}

uint64_t View.hover(corner:outset:isRelative:namespace:isEnabled:)()
{
  return View.modifier<A>(_:)();
}

uint64_t sub_100B3D2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v27 = a2;
  uint64_t v3 = type metadata accessor for HighlightHoverEffect();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  uint64_t v26 = v4;
  __chkstk_darwin();
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ContentShapeKinds();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  char v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100063814(&qword_1010CAE30);
  __chkstk_darwin();
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v2;
  uint64_t v14 = v2[1];
  char v16 = *((unsigned char *)v2 + 16);
  double v17 = *((double *)v2 + 3);
  v23[3] = *((unsigned __int8 *)v2 + 41);
  static ContentShapeKinds.hoverEffect.getter();
  uint64_t v18 = &v13[*(int *)(v11 + 36)];
  uint64_t v19 = sub_100063814(&qword_1010CAE38);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(&v18[*(int *)(v19 + 40)], v10, v7);
  *(void *)uint64_t v18 = v15;
  *((void *)v18 + 1) = v14;
  v18[16] = v16;
  *((double *)v18 + 3) = -v17;
  v18[32] = 0;
  uint64_t v20 = sub_100063814(&qword_1010CAE40);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v13, v24, v20);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  static CustomHoverEffect<>.highlight.getter();
  sub_100B3EBE8();
  sub_100B3ECAC();
  uint64_t v21 = v25;
  View.hoverEffect<A>(_:isEnabled:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v21);
  return sub_1000637B8((uint64_t)v13, &qword_1010CAE30);
}

void sub_100B3D570(double a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, CGFloat a5@<D0>, CGFloat a6@<D1>, CGFloat a7@<D2>, CGFloat a8@<D3>, CGFloat a9@<D4>)
{
  double v41 = a1;
  uint64_t v42 = a2;
  uint64_t v16 = type metadata accessor for RoundedCornerStyle();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Capsule();
  __chkstk_darwin();
  uint64_t v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin();
  uint64_t v24 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for RoundedRectangle._Inset();
  __n128 v26 = __chkstk_darwin();
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    char v38 = *(void (**)(char *, void, uint64_t, __n128))(v17 + 104);
    v38(v21, enum case for RoundedCornerStyle.continuous(_:), v16, v26);
    ((void (*)(char *, void, uint64_t))v38)(v19, enum case for RoundedCornerStyle.circular(_:), v16);
    static RoundedCornerStyle.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    sub_100B3F138((uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for Capsule);
    Capsule._Inset.path(in:)();
    uint64_t v33 = v43;
    uint64_t v34 = v44;
    uint64_t v35 = v45;
    uint64_t v36 = v46;
    char v37 = v47;
  }
  else
  {
    uint64_t v29 = v42;
    if (v42 == -1)
    {
      (*(void (**)(char *, void, uint64_t, __n128))(v17 + 104))(&v24[*(int *)(v22 + 20)], enum case for RoundedCornerStyle.continuous(_:), v16, v26);
      double v39 = v41;
      *(double *)uint64_t v24 = v41;
      *((double *)v24 + 1) = v39;
      sub_1006C1EF8((uint64_t)v24, (uint64_t)v28);
      *(CGFloat *)&v28[*(int *)(v25 + 20)] = a9;
      sub_100B3F138((uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
      RoundedRectangle._Inset.path(in:)();
      uint64_t v33 = v43;
      uint64_t v34 = v44;
      uint64_t v35 = v45;
      uint64_t v36 = v46;
      char v37 = v47;
      sub_100B3F138((uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle._Inset);
    }
    else
    {
      double v30 = v41;
      v48.origin.CGFloat x = a5;
      v48.origin.CGFloat y = a6;
      v48.size.width = a7;
      v48.size.CGFloat height = a8;
      CGRect v49 = CGRectInset(v48, a9, a9);
      id v31 = [self bezierPathWithRoundedRect:v29 byRoundingCorners:v49.origin.x, v49.origin.y, v49.size.width, v49.size.height cornerRadii:v30, v30];
      id v32 = [v31 CGPath];
      Path.init(_:)();
      uint64_t v33 = v43;
      uint64_t v34 = v44;
      uint64_t v35 = v45;
      uint64_t v36 = v46;
      char v37 = v47;
    }
  }
  *(void *)a4 = v33;
  *(void *)(a4 + 8) = v34;
  *(void *)(a4 + 16) = v35;
  *(void *)(a4 + 24) = v36;
  *(unsigned char *)(a4 + 32) = v37;
}

double sub_100B3D968@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  char v3 = *(unsigned char *)(v2 + 16);
  double result = *(double *)(v2 + 24) + a2;
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(double *)(a1 + 24) = result;
  return result;
}

double sub_100B3D988@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_100B3D570(*(double *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16), (uint64_t)v9, a2, a3, a4, a5, *(CGFloat *)(v5 + 24));
  double result = *(double *)v9;
  long long v8 = v9[1];
  *(_OWORD *)a1 = v9[0];
  *(_OWORD *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 32) = v10;
  return result;
}

uint64_t sub_100B3D9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100B3F08C();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100B3DA44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100B3F08C();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100B3DAA8(uint64_t a1)
{
  unint64_t v2 = sub_100B3F08C();

  return Shape.body.getter(a1, v2);
}

void sub_100B3DAF4()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  byte_1010CADD8 = v1 == (id)6;
}

uint64_t sub_100B3DB58()
{
  if (qword_1010C8578 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v0 = 0x4008000000000000;
  if (byte_1010CADD8) {
    uint64_t v0 = 0x4018000000000000;
  }
  static Corner.extraSmall = v0;
  *(void *)algn_10112CC18 = -1;
  byte_10112CC20 = 0;
  return result;
}

uint64_t *Corner.extraSmall.unsafeMutableAddressor()
{
  if (qword_1010C8580 != -1) {
    swift_once();
  }
  return &static Corner.extraSmall;
}

uint64_t static Corner.extraSmall.getter()
{
  if (qword_1010C8580 != -1) {
    swift_once();
  }
  return static Corner.extraSmall;
}

uint64_t sub_100B3DC68()
{
  if (qword_1010C8578 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v0 = 0x4014000000000000;
  if (byte_1010CADD8) {
    uint64_t v0 = 0x4020000000000000;
  }
  static Corner.small = v0;
  unk_10112CC30 = -1;
  byte_10112CC38 = 0;
  return result;
}

uint64_t *Corner.small.unsafeMutableAddressor()
{
  if (qword_1010C8588 != -1) {
    swift_once();
  }
  return &static Corner.small;
}

uint64_t static Corner.small.getter()
{
  if (qword_1010C8588 != -1) {
    swift_once();
  }
  return static Corner.small;
}

uint64_t sub_100B3DD78()
{
  if (qword_1010C8578 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v0 = 0x4020000000000000;
  if (byte_1010CADD8) {
    uint64_t v0 = 0x4024000000000000;
  }
  static Corner.medium = v0;
  *(void *)algn_10112CC48 = -1;
  byte_10112CC50 = 0;
  return result;
}

uint64_t *Corner.medium.unsafeMutableAddressor()
{
  if (qword_1010C8590 != -1) {
    swift_once();
  }
  return &static Corner.medium;
}

uint64_t static Corner.medium.getter()
{
  if (qword_1010C8590 != -1) {
    swift_once();
  }
  return static Corner.medium;
}

uint64_t sub_100B3DE88()
{
  if (qword_1010C8578 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v0 = 0x4024000000000000;
  if (byte_1010CADD8) {
    uint64_t v0 = 0x4030000000000000;
  }
  static Corner.large = v0;
  unk_10112CC60 = -1;
  byte_10112CC68 = 0;
  return result;
}

uint64_t *Corner.large.unsafeMutableAddressor()
{
  if (qword_1010C8598 != -1) {
    swift_once();
  }
  return &static Corner.large;
}

uint64_t static Corner.large.getter()
{
  if (qword_1010C8598 != -1) {
    swift_once();
  }
  return static Corner.large;
}

uint64_t sub_100B3DF98()
{
  if (qword_1010C8578 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v0 = 0x402C000000000000;
  if (byte_1010CADD8) {
    uint64_t v0 = 0x4038000000000000;
  }
  static Corner.extraLarge = v0;
  *(void *)algn_10112CC78 = -1;
  byte_10112CC80 = 0;
  return result;
}

uint64_t *Corner.extraLarge.unsafeMutableAddressor()
{
  if (qword_1010C85A0 != -1) {
    swift_once();
  }
  return &static Corner.extraLarge;
}

uint64_t static Corner.extraLarge.getter()
{
  if (qword_1010C85A0 != -1) {
    swift_once();
  }
  return static Corner.extraLarge;
}

uint64_t sub_100B3E0A8()
{
  id v0 = objc_allocWithZone((Class)UIColor);
  v3[4] = sub_100B3E184;
  v3[5] = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_10004DA48;
  v3[3] = &unk_10100DE18;
  id v1 = _Block_copy(v3);
  [v0 initWithDynamicProvider:v1];
  _Block_release(v1);
  swift_release();
  uint64_t result = Color.init(uiColor:)();
  static Border.artwork = result;
  qword_10112CC90 = 0x3FE0000000000000;
  byte_10112CC98 = 0;
  return result;
}

id sub_100B3E184(void *a1)
{
  id v1 = [a1 userInterfaceStyle];
  unint64_t v2 = self;
  if (v1 == (id)1)
  {
    id v3 = [v2 blackColor];
    id v4 = [v3 colorWithAlphaComponent:0.08];
  }
  else
  {
    id v3 = [v2 whiteColor];
    id v4 = [v3 colorWithAlphaComponent:0.1];
  }
  id v5 = v4;

  return v5;
}

uint64_t *Border.artwork.unsafeMutableAddressor()
{
  if (qword_1010C85A8 != -1) {
    swift_once();
  }
  return &static Border.artwork;
}

double static Border.artwork.getter()
{
  if (qword_1010C85A8 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_10112CC90;
  swift_retain();
  return v0;
}

unint64_t sub_100B3E2F0()
{
  unint64_t result = qword_1010CADE0;
  if (!qword_1010CADE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CADE0);
  }
  return result;
}

unint64_t sub_100B3E348()
{
  unint64_t result = qword_1010CADE8;
  if (!qword_1010CADE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CADE8);
  }
  return result;
}

unint64_t sub_100B3E3A0()
{
  unint64_t result = qword_1010CADF0;
  if (!qword_1010CADF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CADF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Corner(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t sub_100B3E424(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100B3E440(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 1;
  }
  else
  {
    *(unsigned char *)(result + 16) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Corner()
{
  return &type metadata for Corner;
}

uint64_t sub_100B3E474(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Border(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for Border(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for Border()
{
  return &type metadata for Border;
}

unsigned char *storeEnumTagSinglePayload for Border.StrokeStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B3E628);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Border.StrokeStyle()
{
  return &type metadata for Border.StrokeStyle;
}

uint64_t sub_100B3E660(uint64_t a1)
{
  return sub_100B3E768(a1, (uint64_t)&type metadata for CornerRadiusModifier, (void (*)(void))sub_100B3E680);
}

unint64_t sub_100B3E680()
{
  unint64_t result = qword_1010CE270;
  if (!qword_1010CE270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE270);
  }
  return result;
}

uint64_t sub_100B3E6D4(uint64_t a1)
{
  return sub_100B3E768(a1, (uint64_t)&type metadata for BorderViewModifier, (void (*)(void))sub_100B3E6F4);
}

unint64_t sub_100B3E6F4()
{
  unint64_t result = qword_1010CADF8;
  if (!qword_1010CADF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CADF8);
  }
  return result;
}

uint64_t sub_100B3E748(uint64_t a1)
{
  return sub_100B3E768(a1, (uint64_t)&type metadata for HoverViewModifier, (void (*)(void))sub_100B3E7D8);
}

uint64_t sub_100B3E768(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  return swift_getWitnessTable();
}

unint64_t sub_100B3E7D8()
{
  unint64_t result = qword_1010CAE00;
  if (!qword_1010CAE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CAE00);
  }
  return result;
}

__n128 _s4SizeVwcp(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for HoverViewModifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 42)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 41);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HoverViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 42) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 41) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HoverViewModifier()
{
  return &type metadata for HoverViewModifier;
}

uint64_t initializeWithCopy for BorderViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BorderViewModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v4;
  return a1;
}

__n128 initializeWithTake for BorderViewModifier(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for BorderViewModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for BorderViewModifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BorderViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BorderViewModifier()
{
  return &type metadata for BorderViewModifier;
}

ValueMetadata *type metadata accessor for CornerRadiusModifier()
{
  return &type metadata for CornerRadiusModifier;
}

uint64_t sub_100B3EAC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B3EAE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B3EAFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B3EB18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010CAE08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B3EB80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010CAE20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100B3EBE8()
{
  unint64_t result = qword_1010CAE48;
  if (!qword_1010CAE48)
  {
    sub_10006389C(&qword_1010CAE30);
    sub_100063858(&qword_1010CAE50, &qword_1010CAE40);
    sub_100063858(&qword_1010CAE58, &qword_1010CAE38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CAE48);
  }
  return result;
}

unint64_t sub_100B3ECAC()
{
  unint64_t result = qword_1010CAE60;
  if (!qword_1010CAE60)
  {
    type metadata accessor for HighlightHoverEffect();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CAE60);
  }
  return result;
}

ValueMetadata *type metadata accessor for CornerShape()
{
  return &type metadata for CornerShape;
}

unint64_t sub_100B3ED18()
{
  unint64_t result = qword_1010CAE68;
  if (!qword_1010CAE68)
  {
    sub_10006389C(&qword_1010CAE18);
    sub_100B3EDB8();
    sub_100063858(&qword_1010CAE80, &qword_1010CAE88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CAE68);
  }
  return result;
}

unint64_t sub_100B3EDB8()
{
  unint64_t result = qword_1010CAE70;
  if (!qword_1010CAE70)
  {
    sub_10006389C(&qword_1010CAE08);
    sub_100063858(&qword_1010CAE78, &qword_1010CAE10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CAE70);
  }
  return result;
}

unint64_t sub_100B3EE5C()
{
  unint64_t result = qword_1010CAE90;
  if (!qword_1010CAE90)
  {
    sub_10006389C(&qword_1010CAE20);
    sub_100063858(&qword_1010CAE98, &qword_1010CAE28);
    sub_100063858(&qword_1010CAEA0, &qword_1010CAEA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CAE90);
  }
  return result;
}

uint64_t sub_100B3EF20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B3EF9C()
{
  return sub_100063858(&qword_1010CAEB0, &qword_1010CAEB8);
}

unint64_t sub_100B3EFDC()
{
  unint64_t result = qword_1010CAEC0;
  if (!qword_1010CAEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CAEC0);
  }
  return result;
}

unint64_t sub_100B3F034()
{
  unint64_t result = qword_1010CAEC8;
  if (!qword_1010CAEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CAEC8);
  }
  return result;
}

unint64_t sub_100B3F08C()
{
  unint64_t result = qword_1010CAED0;
  if (!qword_1010CAED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CAED0);
  }
  return result;
}

unint64_t sub_100B3F0E4()
{
  unint64_t result = qword_1010CAED8;
  if (!qword_1010CAED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CAED8);
  }
  return result;
}

uint64_t sub_100B3F138(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t NoticePresenter.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  NoticePresenter.init()();
  return v0;
}

uint64_t property wrapper backing initializer of NoticePresenter.notice(uint64_t a1)
{
  sub_100063814(&qword_1010CAEF0);
  __chkstk_darwin();
  sub_10006CAB8(a1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010CAEF0);
  Published.init(initialValue:)();
  return sub_1000637B8(a1, &qword_1010CAEF0);
}

uint64_t sub_100B3F288()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100B3F304(uint64_t a1)
{
  sub_100063814(&qword_1010CAEF0);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  int v5 = (char *)&v7 - v4;
  sub_10006CAB8(a1, (uint64_t)&v7 - v4, &qword_1010CAEF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10006CAB8((uint64_t)v5, (uint64_t)v3, &qword_1010CAEF0);
  swift_retain();
  static Published.subscript.setter();
  return sub_1000637B8((uint64_t)v5, &qword_1010CAEF0);
}

uint64_t NoticePresenter.notice.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100B3F48C()
{
  return swift_endAccess();
}

uint64_t sub_100B3F4F4(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010CB198);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  int v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v6 = __chkstk_darwin();
  long long v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2, v6);
  ((void (*)(char *, char *, uint64_t))v9)(v5, v8, v2);
  swift_beginAccess();
  sub_100063814(&qword_1010CAEE8);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t NoticePresenter.$notice.getter()
{
  return swift_endAccess();
}

Swift::Void __swiftcall NoticePresenter.dismiss(_:)(Swift::Bool a1)
{
  uint64_t v2 = v1;
  sub_100063814(&qword_1010CAEF0);
  __chkstk_darwin();
  int v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v6 = type metadata accessor for Notice(0);
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  sub_1000637B8((uint64_t)v5, &qword_1010CAEF0);
  if (v7 != 1)
  {
    uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem);
    *(void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = 0;
    if (v8)
    {
      dispatch thunk of DispatchWorkItem.cancel()();
      swift_release();
    }
    if (a1) {
      static Animation.default.getter();
    }
    withAnimation<A>(_:_:)();
    swift_release();
    uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v9)
    {
      *(unsigned char *)(v9
               + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches) = 0;
      sub_100057778(0, (unint64_t *)&qword_1010C8910);
      char v10 = (void *)static OS_dispatch_queue.main.getter();
      swift_retain();
      OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100B3FF20, v2);

      swift_release();
    }
  }
}

uint64_t sub_100B3F8E4()
{
  sub_100063814(&qword_1010CAEF0);
  __chkstk_darwin();
  uint64_t v1 = (char *)v6 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v3 = (char *)v6 - v2;
  uint64_t v4 = type metadata accessor for Notice(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10006CAB8((uint64_t)v3, (uint64_t)v1, &qword_1010CAEF0);
  swift_retain();
  static Published.subscript.setter();
  return sub_1000637B8((uint64_t)v3, &qword_1010CAEF0);
}

void sub_100B3FA2C()
{
  sub_100063814(&qword_1010CAEF0);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v4 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v2 = type metadata accessor for Notice(0);
  int v3 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  sub_1000637B8((uint64_t)v1, &qword_1010CAEF0);
  if (v3 == 1) {
    sub_100B40048(0);
  }
}

uint64_t NoticePresenter.present(_:internalOnly:)(uint64_t a1, char a2)
{
  type metadata accessor for Notice(0);
  __chkstk_darwin();
  int v5 = (unint64_t *)((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  static Notice.variant(_:)(a1, v5);
  _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0((uint64_t)v5, a2);
  return sub_100B43918((uint64_t)v5, type metadata accessor for Notice);
}

void sub_100B3FBF8(uint64_t a1, uint64_t a2)
{
  sub_100063814(&qword_1010CAEF0);
  __chkstk_darwin();
  int v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v20 - v6;
  sub_100B438B0(a2, (uint64_t)&v20 - v6, type metadata accessor for Notice);
  uint64_t v8 = type metadata accessor for Notice(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10006CAB8((uint64_t)v7, (uint64_t)v5, &qword_1010CAEF0);
  swift_retain();
  static Published.subscript.setter();
  sub_1000637B8((uint64_t)v7, &qword_1010CAEF0);
  uint64_t v9 = OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow;
  char v10 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
  if (v10)
  {
    id v11 = [v10 rootViewController];
    if (v11)
    {
      uint64_t v12 = v11;
      type metadata accessor for NoticePresenter.UIRootViewController();
      uint64_t v13 = (void *)swift_dynamicCastClass();
      if (v13)
      {
        id v14 = [v13 view];

        if (!v14)
        {
          __break(1u);
          goto LABEL_15;
        }
        [v14 setNeedsLayout];
        uint64_t v12 = v14;
      }
    }
    uint64_t v15 = *(void **)(a1 + v9);
    if (v15)
    {
      id v16 = [v15 rootViewController];
      if (v16)
      {
        uint64_t v17 = v16;
        type metadata accessor for NoticePresenter.UIRootViewController();
        uint64_t v18 = (void *)swift_dynamicCastClass();
        if (!v18)
        {
LABEL_12:

          return;
        }
        id v19 = [v18 view];

        if (v19)
        {
          [v19 layoutIfNeeded];
          uint64_t v17 = v19;
          goto LABEL_12;
        }
LABEL_15:
        __break(1u);
      }
    }
  }
}

double static NoticePresenter.defaultEdgePadding.getter()
{
  if (qword_1010C85B0 != -1) {
    swift_once();
  }
  return *(double *)&static NoticePresenter.defaultEdgePadding;
}

uint64_t NoticePresenter.UIKitConfiguration.init(edge:padding:insets:)(char a1, double a2, double a3, double a4, double a5, double a6)
{
  uint64_t result = swift_unknownObjectWeakInit();
  *(unsigned char *)(result + 8) = a1;
  *(double *)(result + 16) = a2;
  *(double *)(result + 24) = a3;
  *(double *)(result + 32) = a4;
  *(double *)(result + 40) = a5;
  *(double *)(result + 48) = a6;
  return result;
}

uint64_t sub_100B3FF04()
{
  return sub_100B3F8E4();
}

void sub_100B3FF20()
{
}

uint64_t NoticePresenter.uiKitConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
  swift_beginAccess();
  return sub_1000466EC(v3, a1, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
}

uint64_t NoticePresenter.willPresentHandler.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_10007B674(*v1);
  return v2;
}

uint64_t (*NoticePresenter.willPresentHandler.modify())()
{
  return j__swift_endAccess;
}

void sub_100B40048(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
  *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow) = a1;
  id v4 = a1;
  if (v3)
  {
    id v8 = v4;
    if (!a1
      || (type metadata accessor for NoticePresenter.PassthroughWindow(),
          id v5 = v3,
          id v6 = v8,
          char v7 = static NSObject.== infix(_:_:)(),
          v5,
          v6,
          (v7 & 1) == 0))
    {
      [v3 resignKeyWindow];
    }

    id v4 = v8;
  }
}

uint64_t NoticePresenter.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  uint64_t v2 = sub_100063814(&qword_1010CAEE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_100046744(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration);
  sub_10006ADFC(*(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler));

  return v0;
}

uint64_t NoticePresenter.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter__notice;
  uint64_t v2 = sub_100063814(&qword_1010CAEE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_100046744(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration);
  sub_10006ADFC(*(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler));

  return swift_deallocClassInstance();
}

uint64_t sub_100B40290@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for NoticePresenter();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

unsigned char *sub_100B402D0(uint64_t a1, char a2)
{
  return _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0(a1, a2);
}

uint64_t View.noticePresenting(_:edge:padding:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>, double a5@<D0>)
{
  v15[0] = a4;
  v15[1] = a1;
  uint64_t v8 = type metadata accessor for ModifiedContent();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  id v11 = (char *)v15 - v10;
  type metadata accessor for NoticePresenter();
  sub_100B43C48(&qword_1010C8938, (void (*)(uint64_t))type metadata accessor for NoticePresenter);
  void v15[4] = EnvironmentObject.init()();
  v15[5] = v12;
  char v16 = a2;
  double v17 = a5;
  View.modifier<A>(_:)();
  swift_release();
  unint64_t v13 = sub_100B43248();
  v15[2] = a3;
  v15[3] = v13;
  swift_getWitnessTable();
  View.environmentObject<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

double NoticePresentingModifier.init(edge:padding:)(double a1)
{
  return a1;
}

uint64_t NoticePresentingModifier.controller.getter(uint64_t a1)
{
  if (a1)
  {
    return swift_retain();
  }
  else
  {
    type metadata accessor for NoticePresenter();
    sub_100B43C48(&qword_1010C8938, (void (*)(uint64_t))type metadata accessor for NoticePresenter);
    uint64_t result = EnvironmentObject.error()();
    __break(1u);
  }
  return result;
}

uint64_t NoticePresentingModifier.$controller.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NoticePresenter();
  uint64_t v5 = sub_100B43C48(&qword_1010C8938, (void (*)(uint64_t))type metadata accessor for NoticePresenter);

  return EnvironmentObject.projectedValue.getter(a1, a2, v4, v5);
}

uint64_t NoticePresentingModifier.edge.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

void NoticePresentingModifier.padding.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t NoticePresentingModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W3>, uint64_t a4@<X8>, double a5@<D0>)
{
  switch(a3)
  {
    case 1:
      uint64_t v9 = static Alignment.leading.getter();
      break;
    case 2:
      uint64_t v9 = static Alignment.bottom.getter();
      break;
    case 3:
      uint64_t v9 = static Alignment.trailing.getter();
      break;
    default:
      uint64_t v9 = static Alignment.top.getter();
      break;
  }
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!a2)
  {
    type metadata accessor for NoticePresenter();
    sub_100B43C48(&qword_1010C8938, (void (*)(uint64_t))type metadata accessor for NoticePresenter);
    EnvironmentObject.error()();
    __break(1u);
    JUMPOUT(0x100B40830);
  }
  swift_retain();
  Edge.Set.init(_:)();
  double v13 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(a5);
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  type metadata accessor for NoticePresenter();
  sub_100B43C48(&qword_1010C8938, (void (*)(uint64_t))type metadata accessor for NoticePresenter);
  uint64_t v20 = ObservedObject.init(wrappedValue:)();
  uint64_t v22 = v21;
  uint64_t v23 = sub_100063814(&qword_1010CAF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(a4, a1, v23);
  uint64_t result = sub_100063814(&qword_1010CAF28);
  uint64_t v25 = (uint64_t *)(a4 + *(int *)(result + 36));
  *uint64_t v25 = v20;
  v25[1] = v22;
  *((double *)v25 + 2) = v13;
  v25[3] = v15;
  v25[4] = v17;
  v25[5] = v19;
  v25[6] = v11;
  v25[7] = v12;
  return result;
}

uint64_t sub_100B40840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v3 = *v2;
  double v4 = v2[3];
  switch(*((unsigned char *)v2 + 16))
  {
    case 1:
      uint64_t v7 = static Alignment.leading.getter();
      break;
    case 2:
      uint64_t v7 = static Alignment.bottom.getter();
      break;
    case 3:
      uint64_t v7 = static Alignment.trailing.getter();
      break;
    default:
      uint64_t v7 = static Alignment.top.getter();
      break;
  }
  uint64_t v9 = v7;
  uint64_t v10 = v8;
  if (v3 == 0.0)
  {
    type metadata accessor for NoticePresenter();
    sub_100B43C48(&qword_1010C8938, (void (*)(uint64_t))type metadata accessor for NoticePresenter);
    EnvironmentObject.error()();
    __break(1u);
    JUMPOUT(0x100B40A20);
  }
  swift_retain();
  Edge.Set.init(_:)();
  double v11 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v4);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  type metadata accessor for NoticePresenter();
  sub_100B43C48(&qword_1010C8938, (void (*)(uint64_t))type metadata accessor for NoticePresenter);
  uint64_t v18 = ObservedObject.init(wrappedValue:)();
  uint64_t v20 = v19;
  uint64_t v21 = sub_100063814(&qword_1010CAF20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a2, a1, v21);
  uint64_t result = sub_100063814(&qword_1010CAF28);
  uint64_t v23 = (uint64_t *)(a2 + *(int *)(result + 36));
  *uint64_t v23 = v18;
  v23[1] = v20;
  *((double *)v23 + 2) = v11;
  v23[3] = v13;
  _DWORD v23[4] = v15;
  v23[5] = v17;
  v23[6] = v9;
  v23[7] = v10;
  return result;
}

uint64_t sub_100B40A30@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v115 = a2;
  double v3 = (int *)type metadata accessor for NoticeView(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_100063814(&qword_1010CB160);
  __chkstk_darwin();
  uint64_t v98 = (uint64_t)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100063814(&qword_1010CB168);
  __chkstk_darwin();
  uint64_t v99 = (uint64_t)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_100063814(&qword_1010CB170);
  __chkstk_darwin();
  uint64_t v102 = (uint64_t)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100063814(&qword_1010CB178);
  __chkstk_darwin();
  uint64_t v104 = (uint64_t)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100063814(&qword_1010CB180);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v116 = v10;
  uint64_t v117 = v11;
  __chkstk_darwin();
  uint64_t v103 = (uint64_t)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CAEF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Notice(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v105 = (uint64_t)&v94 - v19;
  sub_100063814(&qword_1010CB188);
  __chkstk_darwin();
  uint64_t v114 = (uint64_t)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v106 = (uint64_t)&v94 - v21;
  uint64_t v113 = *(void *)(a1 + 32);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v112 = v119;
  int v111 = v120;
  uint64_t v110 = v121;
  int v109 = v122;
  uint64_t v108 = v123;
  uint64_t v107 = v124;
  uint64_t v22 = *(void *)(a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  uint64_t v100 = v22;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10047695C(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1000637B8((uint64_t)v14, &qword_1010CAEF0);
    uint64_t v23 = 1;
    uint64_t v24 = v116;
    uint64_t v25 = v106;
  }
  else
  {
    uint64_t v26 = v105;
    sub_100B43844((uint64_t)v14, v105);
    long long v94 = type metadata accessor for Notice;
    sub_100B438B0(v26, (uint64_t)v18, type metadata accessor for Notice);
    uint64_t v27 = &v5[v3[5]];
    *(void *)uint64_t v27 = swift_getKeyPath();
    *((void *)v27 + 1) = 0;
    *((_WORD *)v27 + 8) = 0;
    uint64_t v28 = &v5[v3[6]];
    uint64_t v118 = 0x3FF0000000000000;
    State.init(wrappedValue:)();
    uint64_t v29 = v126;
    *(void *)uint64_t v28 = v125;
    *((void *)v28 + 1) = v29;
    double v30 = &v5[v3[7]];
    LOBYTE(v118) = 0;
    GestureState.init(wrappedValue:)();
    uint64_t v31 = v126;
    long long v32 = v127;
    *double v30 = v125;
    *((void *)v30 + 1) = v31;
    *((_OWORD *)v30 + 1) = v32;
    uint64_t v33 = &v5[v3[8]];
    LOBYTE(v118) = 0;
    State.init(wrappedValue:)();
    uint64_t v34 = v126;
    *uint64_t v33 = v125;
    *((void *)v33 + 1) = v34;
    sub_100B43844((uint64_t)v18, (uint64_t)v5);
    char v35 = static Edge.Set.leading.getter();
    EdgeInsets.init(_all:)();
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    uint64_t v44 = v98;
    sub_100B438B0((uint64_t)v5, v98, type metadata accessor for NoticeView);
    uint64_t v45 = v44 + *(int *)(v95 + 36);
    *(unsigned char *)uint64_t v45 = v35;
    *(void *)(v45 + 8) = v37;
    *(void *)(v45 + 16) = v39;
    *(void *)(v45 + 24) = v41;
    *(void *)(v45 + 32) = v43;
    *(unsigned char *)(v45 + 40) = 0;
    sub_100B43918((uint64_t)v5, type metadata accessor for NoticeView);
    char v46 = static Edge.Set.trailing.getter();
    EdgeInsets.init(_all:)();
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    uint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v55 = v99;
    sub_10006CAB8(v44, v99, &qword_1010CB160);
    uint64_t v56 = v55 + *(int *)(v96 + 36);
    *(unsigned char *)uint64_t v56 = v46;
    *(void *)(v56 + 8) = v48;
    *(void *)(v56 + 16) = v50;
    *(void *)(v56 + 24) = v52;
    *(void *)(v56 + 32) = v54;
    *(unsigned char *)(v56 + 40) = 0;
    sub_1000637B8(v44, &qword_1010CB160);
    char v57 = static Edge.Set.vertical.getter();
    EdgeInsets.init(_all:)();
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    uint64_t v66 = v102;
    sub_10006CAB8(v55, v102, &qword_1010CB168);
    uint64_t v67 = v66 + *(int *)(v97 + 36);
    *(unsigned char *)uint64_t v67 = v57;
    *(void *)(v67 + 8) = v59;
    *(void *)(v67 + 16) = v61;
    *(void *)(v67 + 24) = v63;
    *(void *)(v67 + 32) = v65;
    *(unsigned char *)(v67 + 40) = 0;
    sub_1000637B8(v55, &qword_1010CB168);
    static AnyTransition.opacity.getter();
    static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
    AnyTransition.animation(_:)();
    swift_release();
    swift_release();
    static UnitPoint.center.getter();
    static AnyTransition.scale(scale:anchor:)();
    static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
    AnyTransition.animation(_:)();
    swift_release();
    swift_release();
    static UnitPoint.center.getter();
    static AnyTransition.scale(scale:anchor:)();
    static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
    AnyTransition.animation(_:)();
    swift_release();
    swift_release();
    static AnyTransition.asymmetric(insertion:removal:)();
    swift_release();
    swift_release();
    uint64_t v68 = AnyTransition.combined(with:)();
    swift_release();
    swift_release();
    uint64_t v69 = v104;
    sub_10006CAB8(v66, v104, &qword_1010CB170);
    *(void *)(v69 + *(int *)(v101 + 36)) = v68;
    sub_1000637B8(v66, &qword_1010CB170);
    uint64_t KeyPath = swift_getKeyPath();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v71 = static MainActor.shared.getter();
    uint64_t v72 = swift_allocObject();
    *(void *)(v72 + 16) = v71;
    *(void *)(v72 + 24) = &protocol witness table for MainActor;
    long long v73 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v72 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v72 + 48) = v73;
    *(_OWORD *)(v72 + 64) = *(_OWORD *)(a1 + 32);
    swift_retain();
    uint64_t v74 = static MainActor.shared.getter();
    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = v74;
    *(void *)(v75 + 24) = &protocol witness table for MainActor;
    long long v76 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v75 + 32) = *(_OWORD *)a1;
    *(_OWORD *)(v75 + 48) = v76;
    *(_OWORD *)(v75 + 64) = *(_OWORD *)(a1 + 32);
    Binding.init(get:set:)();
    uint64_t v77 = v125;
    uint64_t v78 = v126;
    char v79 = v127;
    uint64_t v80 = v103;
    sub_10006CAB8(v69, v103, &qword_1010CB178);
    uint64_t v81 = v116;
    uint64_t v82 = v80 + *(int *)(v116 + 36);
    *(void *)uint64_t v82 = KeyPath;
    *(void *)(v82 + 8) = v77;
    *(void *)(v82 + 16) = v78;
    *(unsigned char *)(v82 + 24) = v79;
    sub_1000637B8(v69, &qword_1010CB178);
    sub_100B43918(v105, v94);
    uint64_t v25 = v106;
    sub_10003CABC(v80, v106, &qword_1010CB180);
    uint64_t v23 = 0;
    uint64_t v24 = v81;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v25, v23, 1, v24);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v117 = v125;
  char v83 = v126;
  uint64_t v84 = v127;
  char v85 = BYTE8(v127);
  uint64_t v86 = v128;
  uint64_t v87 = v129;
  uint64_t v88 = v114;
  sub_10006CAB8(v25, v114, &qword_1010CB188);
  CGFloat v89 = v115;
  *uint64_t v115 = 0;
  *((unsigned char *)v89 + 8) = 1;
  v89[2] = v112;
  *((unsigned char *)v89 + 24) = v111;
  v89[4] = v110;
  *((unsigned char *)v89 + 40) = v109;
  uint64_t v90 = v107;
  v89[6] = v108;
  v89[7] = v90;
  uint64_t v91 = sub_100063814(&qword_1010CB190);
  sub_10006CAB8(v88, (uint64_t)v89 + *(int *)(v91 + 48), &qword_1010CB188);
  CGRect v92 = (char *)v89 + *(int *)(v91 + 64);
  *(void *)CGRect v92 = 0;
  v92[8] = 1;
  *((void *)v92 + 2) = v117;
  v92[24] = v83;
  *((void *)v92 + 4) = v84;
  v92[40] = v85;
  *((void *)v92 + 6) = v86;
  *((void *)v92 + 7) = v87;
  sub_1000637B8(v25, &qword_1010CB188);
  return sub_1000637B8(v88, &qword_1010CB188);
}

uint64_t sub_100B415D4@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  sub_100063814(&qword_1010CAEF0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_10047695C(a1);
  uint64_t v6 = type metadata accessor for Notice(0);
  LOBYTE(a1) = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) != 1;
  uint64_t result = sub_1000637B8((uint64_t)v5, &qword_1010CAEF0);
  *a2 = a1;
  return result;
}

unsigned char *sub_100B41708(unsigned char *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((*result & 1) == 0)
  {
    swift_retain();
    NoticePresenter.dismiss(_:)(1);
    return (unsigned char *)sub_10047695C(a4);
  }
  return result;
}

uint64_t sub_100B41764@<X0>(uint64_t a1@<X8>)
{
  sub_100063814((uint64_t *)&unk_1010CF190);
  __chkstk_darwin();
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = v1[1];
  v10[0] = *v1;
  v10[1] = v5;
  v10[2] = v1[2];
  *(void *)uint64_t v4 = static HorizontalAlignment.center.getter();
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v6 = sub_100063814(&qword_1010CB158);
  sub_100B40A30((uint64_t)v10, &v4[*(int *)(v6 + 44)]);
  uint64_t v7 = static Alignment.center.getter();
  sub_100BD9774(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a1, 0.0, 1, 0.0, 1, v7, v8);
  return sub_1000637B8((uint64_t)v4, (uint64_t *)&unk_1010CF190);
}

uint64_t JSShareRequest.RequestContent.contentType.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t NoticePresenter.UIKitConfiguration.edge.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

double NoticePresenter.UIKitConfiguration.insets.getter()
{
  return *(double *)(v0 + 24);
}

void NoticePresenter.UIKitConfiguration.insets.setter(double a1, double a2, double a3, double a4)
{
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  v4[6] = a4;
}

id sub_100B418C8(uint64_t a1, double a2, double a3)
{
  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for NoticePresenter.PassthroughWindow();
  [super hitTest:a1 withEvent:a2];
  id v8 = v7;
  if (*((unsigned char *)v3
       + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches) != 1)
  {
    id v9 = v7;
LABEL_8:

    return 0;
  }
  if (!v7) {
    return v8;
  }
  id v9 = v7;
  id v10 = [v3 rootViewController];
  if (!v10)
  {

    goto LABEL_8;
  }
  uint64_t v11 = v10;
  id result = [v10 view];
  if (result)
  {
    uint64_t v13 = result;
    unsigned __int8 v14 = [v9 isDescendantOfView:result];

    if (v14) {
      return v8;
    }
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

id sub_100B41C24()
{
  return sub_100B42674((uint64_t (*)(void))type metadata accessor for NoticePresenter.PassthroughWindow);
}

id sub_100B41C3C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t)v1
     + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration;
  swift_beginAccess();
  sub_10004676C(a1, v4);
  swift_endAccess();
  if (![v1 isViewLoaded]) {
    return (id)sub_100046744(a1);
  }
  Edge.Set.init(_:)();
  double v5 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(*(double *)(v4 + 16));
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = (void (*)(uint64_t *, void))dispatch thunk of UIHostingController.rootView.modify();
  long long v13[2] = v5;
  *((void *)v13 + 3) = v7;
  *((void *)v13 + 4) = v9;
  *((void *)v13 + 5) = v11;
  v12(&v17, 0);
  id result = [v1 view];
  if (result)
  {
    objc_super v15 = result;
    [result setNeedsLayout];

    id result = [v2 view];
    if (result)
    {
      uint64_t v16 = result;
      [result layoutIfNeeded];

      return (id)sub_100046744(a1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100B41ED0()
{
  uint64_t v1 = v0;
  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for NoticePresenter.UIRootViewController();
  [super viewDidLoad];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController];
  id v3 = [v2 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = v3;
  id v5 = [self clearColor];
  [v4 setBackgroundColor:v5];

  uint64_t v6 = (double *)&v1[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  swift_beginAccess();
  Edge.Set.init(_:)();
  double v7 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v6[2]);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  unsigned __int8 v14 = (void (*)(char *, void))dispatch thunk of UIHostingController.rootView.modify();
  v15[2] = v7;
  *((void *)v15 + 3) = v9;
  *((void *)v15 + 4) = v11;
  *((void *)v15 + 5) = v13;
  v14(v22, 0);
  id v16 = [v1 view];
  if (!v16)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v17 = v16;
  id v18 = [v2 view];
  if (!v18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v19 = v18;
  [v17 addSubview:v18];

  id v20 = [v2 view];
  if (v20)
  {
    uint64_t v21 = v20;
    [v20 layoutIfNeeded];

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100B420E4()
{
  v38.receiver = v0;
  v38.super_class = (Class)type metadata accessor for NoticePresenter.UIRootViewController();
  [super viewDidLayoutSubviews];
  id v1 = [v0 view];
  if (!v1) {
    goto LABEL_12;
  }
  uint64_t v2 = v1;
  [v1 bounds];

  uint64_t v3 = (uint64_t)v0
     + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration;
  swift_beginAccess();
  sub_1000466EC(v3, (uint64_t)aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  id v4 = [v0 view];
  if (!v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v5 = v4;
  sub_100046744((uint64_t)aBlock);
  [v5 effectiveUserInterfaceLayoutDirection];

  CGRect.inset(by:for:)();
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;
  CGFloat v13 = v12;
  unsigned __int8 v14 = self;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v0;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100B43A10;
  *(void *)(v16 + 24) = v15;
  aBlock[4] = sub_10013DD14;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007A61C;
  void aBlock[3] = &unk_10100E120;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = v0;
  swift_retain();
  swift_release();
  [v14 performWithoutAnimation:v17];
  _Block_release(v17);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v20 = *(void **)&v18[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController];
  dispatch thunk of UIHostingController.sizeThatFits(in:)();
  uint64_t v22 = v21;
  id v23 = [v18 traitCollection];
  [v23 displayScale];

  uint64_t v36 = v22;
  CGRect.centeringAlong(axes:bounds:scale:)();
  double MinX = v24;
  double MinY = v26;
  double v29 = v28;
  double v31 = v30;
  switch(*(unsigned char *)(v3 + 8))
  {
    case 1:
      v42.origin.CGFloat x = v7;
      v42.origin.CGFloat y = v9;
      v42.size.width = v11;
      v42.size.CGFloat height = v13;
      double MinX = CGRectGetMinX(v42);
      break;
    case 2:
      v40.origin.CGFloat x = v7;
      v40.origin.CGFloat y = v9;
      v40.size.width = v11;
      v40.size.CGFloat height = v13;
      double MaxY = CGRectGetMaxY(v40);
      v41.origin.CGFloat x = MinX;
      v41.origin.CGFloat y = MinY;
      v41.size.width = v29;
      v41.size.CGFloat height = v31;
      double MinY = MaxY - CGRectGetHeight(v41);
      break;
    case 3:
      v43.origin.CGFloat x = v7;
      v43.origin.CGFloat y = v9;
      v43.size.width = v11;
      v43.size.CGFloat height = v13;
      double MaxX = CGRectGetMaxX(v43);
      v44.origin.CGFloat x = MinX;
      v44.origin.CGFloat y = MinY;
      v44.size.width = v29;
      v44.size.CGFloat height = v31;
      double MinX = MaxX - CGRectGetWidth(v44);
      break;
    default:
      v39.origin.CGFloat x = v7;
      v39.origin.CGFloat y = v9;
      v39.size.width = v11;
      v39.size.CGFloat height = v13;
      double MinY = CGRectGetMinY(v39);
      break;
  }
  id v34 = [v20 view:v36];
  if (!v34)
  {
LABEL_14:
    __break(1u);
    JUMPOUT(0x100B42524);
  }
  char v35 = v34;
  [v34 setFrame:MinX, MinY, v29, v31];
  swift_release();
}

void sub_100B42534(uint64_t a1)
{
  id v1 = *(void **)(a1
                + OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController);
  id v2 = [v1 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = v2;
  [v2 setNeedsLayout];

  id v4 = [v1 view];
  if (!v4)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v5 = v4;
  [v4 layoutIfNeeded];
}

id sub_100B4265C()
{
  return sub_100B42674((uint64_t (*)(void))type metadata accessor for NoticePresenter.UIRootViewController);
}

id sub_100B42674(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return [super dealloc];
}

id UIViewController.noticePresenter.getter()
{
  if (![v0 isViewLoaded])
  {
    id v4 = [v0 parentViewController];
    if (v4)
    {
      uint64_t v6 = UIViewController.noticePresenter.getter();

      return (id)v6;
    }
    return v4;
  }
  id result = [v0 view];
  if (result)
  {
    id v2 = result;
    id v3 = [result window];
    id v4 = v3;
    if (v3)
    {
      id v5 = [v3 windowScene];

      if (v5)
      {
        id v4 = UIWindowScene.noticePresenter.getter();
      }
      else
      {

        return 0;
      }
    }
    else
    {
    }
    return v4;
  }
  __break(1u);
  return result;
}

char *sub_100B4280C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for UIHostingControllerSizingOptions();
  __chkstk_darwin();
  *(void *)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController__noticePresenter] = a1;
  id v5 = (double *)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration];
  sub_1000466EC(a2, (uint64_t)&v2[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_configuration], (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
  swift_beginAccess();
  swift_retain_n();
  uint64_t v6 = v2;
  Edge.Set.init(_:)();
  double v7 = _s7SwiftUI10EdgeInsetsV09MusicCoreB0E_6lengthAcA0C0O3SetV_0F8Graphics7CGFloatVtcfC_0(v5[2]);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  type metadata accessor for NoticePresenter();
  sub_100B43C48(&qword_1010C8938, (void (*)(uint64_t))type metadata accessor for NoticePresenter);
  uint64_t v21 = ObservedObject.init(wrappedValue:)();
  uint64_t v22 = v14;
  double v23 = v7;
  uint64_t v24 = v9;
  uint64_t v25 = v11;
  uint64_t v26 = v13;
  id v15 = objc_allocWithZone((Class)sub_100063814(&qword_1010CB1A0));
  *(void *)&v6[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController] = UIHostingController.init(rootView:)();

  v20.receiver = v6;
  v20.super_class = (Class)type metadata accessor for NoticePresenter.UIRootViewController();
  uint64_t v16 = (char *)[super initWithNibName:0 bundle:0];
  uint64_t v17 = *(void **)&v16[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C120UIRootViewController_hostingController];
  id v18 = v16;
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter();
  [v18 addChildViewController:v17];
  [v17 didMoveToParentViewController:v18];

  sub_100046744(a2);
  return v18;
}

unsigned char *_s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v47 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v48 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)v45 - v8;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin();
  uint64_t v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Notice(0);
  uint64_t v50 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v50 + 64);
  __chkstk_darwin();
  id v15 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0 || (id result = DeviceCapabilities.isInternalInstall.unsafeMutableAddressor(), *result == 1))
  {
    v45[1] = v10;
    long long v45[2] = v12;
    uint64_t v49 = a1;
    char v46 = v9;
    uint64_t v17 = (void (**)(void ***))(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_willPresentHandler);
    swift_beginAccess();
    id v18 = *v17;
    if (*v17)
    {
      uint64_t v19 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
      swift_beginAccess();
      sub_1000466EC(v19, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
      swift_retain();
      v18(&aBlock);
      sub_10006ADFC((uint64_t)v18);
      NoticePresenter.uiKitConfiguration.setter((uint64_t)&aBlock);
    }
    uint64_t v20 = v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_uiKitConfiguration;
    swift_beginAccess();
    sub_1000466EC(v20, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    sub_100046744((uint64_t)&aBlock);
    if (Strong)
    {
      if (!*(void *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow))
      {
        id v22 = [objc_allocWithZone((Class)type metadata accessor for NoticePresenter.PassthroughWindow()) initWithWindowScene:Strong];
        [v22 setWindowLevel:UIWindowLevelStatusBar];
        sub_1000466EC(v20, (uint64_t)&aBlock, (void (*)(uint64_t, uint64_t))&_swift_unknownObjectWeakCopyInit);
        id v23 = objc_allocWithZone((Class)type metadata accessor for NoticePresenter.UIRootViewController());
        id v24 = v22;
        uint64_t v25 = swift_retain();
        uint64_t v26 = sub_100B4280C(v25, (uint64_t)&aBlock);
        swift_release();
        [v24 setRootViewController:v26];

        [v24 makeKeyAndVisible];
        [v24 resignKeyWindow];
        uint64_t v27 = v6;
        id v28 = v24;
        sub_100B40048(v24);

        uint64_t Strong = v28;
        uint64_t v6 = v27;
      }
    }
    double v29 = *(unsigned char **)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_passthroughWindow);
    if (v29)
    {
      v29[OBJC_IVAR____TtCC11MusicCoreUI15NoticePresenterP33_D8FBFBA4851A241D976DAD2E389878C117PassthroughWindow_canReceiveTouches] = 1;
      [v29 makeKeyAndVisible];
    }
    uint64_t v30 = self;
    uint64_t v31 = v49;
    sub_100B438B0(v49, (uint64_t)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Notice);
    unint64_t v32 = (*(unsigned __int8 *)(v50 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v3;
    sub_100B43844((uint64_t)v15, v33 + v32);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = sub_100B43BCC;
    *(void *)(v34 + 24) = v33;
    uint64_t v56 = sub_10013DF0C;
    uint64_t v57 = v34;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v53 = 1107296256;
    uint64_t v54 = sub_10007A61C;
    uint64_t v55 = &unk_10100E198;
    char v35 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    [(id)v30 performWithoutAnimation:v35];
    _Block_release(v35);
    LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();
    id result = (unsigned char *)swift_release();
    if (v30)
    {
      __break(1u);
    }
    else
    {
      uint64_t v36 = v31 + *(int *)(v13 + 36);
      if ((*(unsigned char *)(v36 + 8) & 1) == 0)
      {
        uint64_t v37 = *(void *)v36;
        id v38 = [objc_allocWithZone((Class)UINotificationFeedbackGenerator) init];
        [v38 notificationOccurred:v37];
      }
      if (*(unsigned char *)(v31 + *(int *)(v13 + 40)) == 1)
      {
        uint64_t v56 = sub_100B43C40;
        uint64_t v57 = v3;
        CGAffineTransform aBlock = _NSConcreteStackBlock;
        uint64_t v53 = 1107296256;
        uint64_t v54 = sub_100020238;
        uint64_t v55 = &unk_10100E1C0;
        _Block_copy(&aBlock);
        uint64_t v51 = _swiftEmptyArrayStorage;
        sub_100B43C48((unint64_t *)&unk_1010CACD0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        swift_retain();
        sub_100063814(&qword_1010C9228);
        sub_100063858((unint64_t *)&qword_1010CACE0, &qword_1010C9228);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        type metadata accessor for DispatchWorkItem();
        swift_allocObject();
        uint64_t v39 = DispatchWorkItem.init(flags:block:)();
        swift_release();
        sub_100057778(0, (unint64_t *)&qword_1010C8910);
        CGRect v40 = (void *)static OS_dispatch_queue.main.getter();
        CGRect v41 = v48;
        static DispatchTime.now()();
        CGRect v42 = v46;
        + infix(_:_:)();
        CGRect v43 = *(void (**)(char *, uint64_t))(v47 + 8);
        v43(v41, v6);
        OS_dispatch_queue.asyncAfter(deadline:execute:)();

        v43(v42, v6);
        uint64_t v44 = *(void *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem);
        *(void *)(v3 + OBJC_IVAR____TtC11MusicCoreUI15NoticePresenter_dismissalWorkItem) = v39;
        swift_retain_n();
        if (v44)
        {
          dispatch thunk of DispatchWorkItem.cancel()();
          swift_release();
        }
        swift_release();
        return (unsigned char *)swift_release_n();
      }
      else
      {
        return (unsigned char *)swift_release();
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for NoticePresenter.UIRootViewController()
{
  return self;
}

unint64_t sub_100B43248()
{
  unint64_t result = qword_1010CAF18;
  if (!qword_1010CAF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CAF18);
  }
  return result;
}

uint64_t sub_100B4329C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B432C0()
{
  return type metadata accessor for NoticePresenter();
}

uint64_t initializeWithCopy for NoticePresentingModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for NoticePresentingModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for NoticePresentingModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for NoticePresentingModifier()
{
  return &type metadata for NoticePresentingModifier;
}

double initializeWithCopy for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&double result = sub_100B4344C(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakCopyInit).n128_u64[0];
  return result;
}

double assignWithCopy for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakCopyAssign();
  *(unsigned char *)(v3 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(v3 + 16) = *(void *)(a2 + 16);
  *(void *)(v3 + 24) = *(void *)(a2 + 24);
  *(void *)(v3 + 32) = *(void *)(a2 + 32);
  *(void *)(v3 + 40) = *(void *)(a2 + 40);
  double result = *(double *)(a2 + 48);
  *(double *)(v3 + 48) = result;
  return result;
}

double initializeWithTake for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&double result = sub_100B4344C(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakTakeInit).n128_u64[0];
  return result;
}

__n128 sub_100B4344C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4();
  *(unsigned char *)(v5 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(v5 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(a2 + 24);
  __n128 result = *(__n128 *)(a2 + 40);
  *(__n128 *)(v5 + 40) = result;
  return result;
}

double assignWithTake for NoticePresenter.UIKitConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakTakeAssign();
  *(unsigned char *)(v3 + 8) = *(unsigned char *)(a2 + 8);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 32) = v4;
  double result = *(double *)(a2 + 48);
  *(double *)(v3 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for NoticePresenter.UIKitConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NoticePresenter.UIKitConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticePresenter.UIKitConfiguration()
{
  return &type metadata for NoticePresenter.UIKitConfiguration;
}

uint64_t type metadata accessor for NoticePresenter.PassthroughWindow()
{
  return self;
}

uint64_t sub_100B43598()
{
  return swift_getWitnessTable();
}

unint64_t sub_100B4366C()
{
  unint64_t result = qword_1010CB138;
  if (!qword_1010CB138)
  {
    sub_10006389C(&qword_1010CAF28);
    sub_100063858(&qword_1010CB140, &qword_1010CAF20);
    sub_100063858(&qword_1010CB148, &qword_1010CB150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB138);
  }
  return result;
}

uint64_t initializeWithCopy for NoticePresentationView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  swift_retain();
  return a1;
}

void *assignWithCopy for NoticePresentationView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for NoticePresentationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for NoticePresentationView()
{
  return &type metadata for NoticePresentationView;
}

uint64_t sub_100B43828()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B43844(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Notice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B438B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B43918(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100B4397C@<X0>(unsigned char *a1@<X8>)
{
  return sub_100B415D4(v1 + 32, a1);
}

uint64_t sub_100B4398C()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

unsigned char *sub_100B439CC(unsigned char *a1)
{
  return sub_100B41708(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + 32);
}

uint64_t sub_100B439D8()
{
  return swift_deallocObject();
}

void sub_100B43A10()
{
  sub_100B42534(*(void *)(v0 + 16));
}

uint64_t sub_100B43A18()
{
  return swift_deallocObject();
}

uint64_t sub_100B43A28()
{
  uint64_t v1 = type metadata accessor for Notice(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + *(int *)(v1 + 20);
  uint64_t v4 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = type metadata accessor for Artwork();
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v3, v7);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + *(int *)(v1 + 32))) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_100B43BCC()
{
  uint64_t v1 = *(void *)(type metadata accessor for Notice(0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_100B3FBF8(v2, v3);
}

uint64_t sub_100B43C30()
{
  return swift_deallocObject();
}

void sub_100B43C40()
{
}

uint64_t sub_100B43C48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100B43C94()
{
  unint64_t result = qword_1010CB1A8;
  if (!qword_1010CB1A8)
  {
    sub_10006389C(&qword_1010CB1B0);
    sub_100063858(&qword_1010CB1B8, (uint64_t *)&unk_1010CF190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB1A8);
  }
  return result;
}

uint64_t sub_100B43E68()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_100068990(v1, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100B43F70;
  uint64_t v5 = v0[4];
  return v7(v5, v2, v3);
}

uint64_t sub_100B43F70()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_100B44090, v3, v2);
}

uint64_t sub_100B44090()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100018564(v0[4]);
  }
  else
  {
    uint64_t v5 = v0[6];
    uint64_t v4 = v0[7];
    uint64_t v6 = v0[5];
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 32))(v4, v0[4], v6);
    PresentedViewState.present(_:animated:)(v4, 1);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100B44190(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000154F4;
  return PresentedViewState<A>.present(_:)(a1);
}

uint64_t sub_100B44228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v26[1] = a2;
  uint64_t v29 = a1;
  uint64_t v32 = a4;
  uint64_t v5 = sub_100063814(&qword_1010CB1E8);
  uint64_t v27 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100063814(&qword_1010CB1F0);
  __chkstk_darwin();
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100063814(&qword_1010CB1F8);
  uint64_t v28 = *(void *)(v31 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010C8CC0);
  __chkstk_darwin();
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a3 + *(void *)(*(void *)a3 + 96);
  swift_beginAccess();
  sub_100B44930(v18, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_100018564((uint64_t)v13);
    uint64_t v19 = v27;
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    v20(v7, v29, v5);
    v20(v9, (uint64_t)v7, v5);
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = sub_100063858(&qword_1010CB200, &qword_1010CB1E8);
    uint64_t v33 = v5;
    uint64_t v34 = v21;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v7, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    sub_100063814(&qword_1010CB1C8);
    sub_100063858(&qword_1010CB1D0, &qword_1010CB1C8);
    ObservedObject.projectedValue.getter();
    swift_getKeyPath();
    ObservedObject.Wrapper.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v25 = sub_100063858(&qword_1010CB200, &qword_1010CB1E8);
    View.sharingPicker(isPresented:item:subject:message:)();
    swift_release();
    swift_release();
    uint64_t v23 = v28;
    uint64_t v24 = v31;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v9, v11, v31);
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = v5;
    uint64_t v34 = v25;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_100B44780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B44228(a1, *v2, v2[1], a2);
}

uint64_t View.shareSheetPresenting(_:)()
{
  return swift_release();
}

uint64_t sub_100B4484C()
{
  return swift_getWitnessTable();
}

unint64_t sub_100B448B0()
{
  unint64_t result = qword_1010CB1E0;
  if (!qword_1010CB1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB1E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareSheetModifier()
{
  return &type metadata for ShareSheetModifier;
}

uint64_t sub_100B44914()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B44930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010C8CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B44998@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = PresentedViewState.isPresented.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100B449C8()
{
  return PresentedViewState.isPresented.setter();
}

unint64_t sub_100B449F4()
{
  unint64_t result = qword_1010CB208;
  if (!qword_1010CB208)
  {
    sub_10006389C(&qword_1010CB210);
    sub_10006389C(&qword_1010CB1E8);
    sub_100063858(&qword_1010CB200, &qword_1010CB1E8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB208);
  }
  return result;
}

uint64_t Optional<A>.fontTextStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for Font.TextStyle.body(_:);
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_100B44B40@<X0>(uint64_t a1@<X8>)
{
  return Optional<A>.fontTextStyle.getter(a1);
}

uint64_t sub_100B44B58(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t MusicUIContentConfiguration.makeContentView()(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, a1);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v5, AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t MusicUIContentConfiguration.updated(for:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t MusicUIContentView.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 40);
  a3[3] = swift_getAssociatedTypeWitness();
  a3[4] = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  sub_100068018(a3);
  return v6(a1, a2);
}

uint64_t MusicUIContentView.configuration.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v8 = &v11[-v7 - 8];
  sub_1000688E4(a1, (uint64_t)v11);
  sub_100063814(&qword_1010C9220);
  swift_dynamicCast();
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 48))(v8, a2, a3);
  return sub_1000760E4(a1);
}

void (*MusicUIContentView.configuration.modify(uint64_t **a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v7 = (uint64_t *)malloc(0x68uLL);
  *a1 = v7;
  v7[11] = a3;
  v7[12] = v3;
  v7[10] = a2;
  MusicUIContentView.configuration.getter(a2, a3, v7);
  return sub_100B44F20;
}

void sub_100B44F20(uint64_t *a1, char a2)
{
  uint64_t v2 = (uint64_t *)*a1;
  if (a2)
  {
    uint64_t v3 = v2[11];
    uint64_t v4 = v2[10];
    sub_1000688E4(*a1, (uint64_t)(v2 + 5));
    MusicUIContentView.configuration.setter((uint64_t)(v2 + 5), v4, v3);
    sub_1000760E4((uint64_t)v2);
  }
  else
  {
    MusicUIContentView.configuration.setter(*a1, v2[10], v2[11]);
  }

  free(v2);
}

uint64_t ArtistRazzmatazzView.init(artist:navigationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for ArtistRazzmatazzView(0);
  uint64_t v9 = (void *)(a4 + *(int *)(v8 + 24));
  sub_100063814(&qword_1010C9A38);
  State.init(wrappedValue:)();
  *uint64_t v9 = v13;
  v9[1] = v14;
  sub_100B45154();
  ScaledMetric.init(wrappedValue:)();
  uint64_t v10 = type metadata accessor for Artist();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a4, a1, v10);
  uint64_t v12 = (void *)(a4 + *(int *)(v8 + 20));
  *uint64_t v12 = a2;
  v12[1] = a3;
  return result;
}

uint64_t type metadata accessor for ArtistRazzmatazzView(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CB2C0);
}

uint64_t property wrapper backing initializer of ArtistRazzmatazzView.razzmatazz()
{
  sub_100063814(&qword_1010C9A38);
  State.init(wrappedValue:)();
  return v1;
}

uint64_t property wrapper backing initializer of ArtistRazzmatazzView.rowHeight()
{
  return ScaledMetric.init(wrappedValue:)();
}

unint64_t sub_100B45154()
{
  unint64_t result = qword_1010CB228;
  if (!qword_1010CB228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB228);
  }
  return result;
}

uint64_t ArtistRazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v35 = type metadata accessor for TaskPriority();
  uint64_t v33 = *(void *)(v35 - 8);
  __chkstk_darwin();
  uint64_t v32 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[0] = *(void *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  __chkstk_darwin();
  v28[1] = v3;
  uint64_t v29 = (uint64_t)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CB230);
  __chkstk_darwin();
  uint64_t v31 = (void *)((char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for GridItem.Size();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (void *)((char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100063814(&qword_1010CB238);
  type metadata accessor for GridItem();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100E251B0;
  uint64_t v30 = v1;
  sub_100063814(&qword_1010CB240);
  ScaledMetric.wrappedValue.getter();
  *uint64_t v8 = v36;
  uint64_t v10 = enum case for GridItem.Size.fixed(_:);
  uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, enum case for GridItem.Size.fixed(_:), v5);
  GridItem.init(_:spacing:alignment:)();
  ScaledMetric.wrappedValue.getter();
  *uint64_t v8 = v36;
  v11(v8, v10, v5);
  GridItem.init(_:spacing:alignment:)();
  uint64_t v12 = static HorizontalAlignment.leading.getter();
  if (qword_1010C85C8 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1010CB220;
  uint64_t v14 = (uint64_t)v31;
  *uint64_t v31 = v12;
  *(void *)(v14 + 8) = v13;
  *(unsigned char *)(v14 + 16) = 0;
  uint64_t v15 = sub_100063814(&qword_1010CB248);
  uint64_t v16 = v30;
  sub_100B45684(v9, v30, v14 + *(int *)(v15 + 44));
  swift_bridgeObjectRelease();
  uint64_t v17 = v29;
  sub_100B49E94(v16, v29, type metadata accessor for ArtistRazzmatazzView);
  unint64_t v18 = (*(unsigned __int8 *)(v28[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28[0] + 80);
  uint64_t v19 = swift_allocObject();
  sub_100B4A0E4(v17, v19 + v18, type metadata accessor for ArtistRazzmatazzView);
  uint64_t v20 = v32;
  static TaskPriority.userInitiated.getter();
  uint64_t v21 = sub_100063814(&qword_1010CB260);
  uint64_t v22 = v34;
  uint64_t v23 = (char *)(v34 + *(int *)(v21 + 36));
  uint64_t v24 = type metadata accessor for _TaskModifier();
  uint64_t v25 = v33;
  uint64_t v26 = v35;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(&v23[*(int *)(v24 + 20)], v20, v35);
  *(void *)uint64_t v23 = &unk_1010CB258;
  *((void *)v23 + 1) = v19;
  sub_10006CAB8(v14, v22, &qword_1010CB230);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v26);
  return sub_1000637B8(v14, &qword_1010CB230);
}

uint64_t sub_100B45684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&long long v73 = a1;
  *(void *)&long long v62 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100063814(&qword_1010CB4D0);
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v70 = sub_100063814(&qword_1010CB4D8);
  *(void *)&long long v68 = *(void *)(v70 - 8);
  __chkstk_darwin();
  *(void *)&long long v63 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100063814(&qword_1010CB4E0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100063814(&qword_1010CB4E8);
  __chkstk_darwin();
  uint64_t v72 = (uint64_t)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v64 = (uint64_t)&v55 - v13;
  __chkstk_darwin();
  uint64_t v71 = (uint64_t)&v55 - v14;
  static Font.title2.getter();
  uint64_t v15 = Text.font(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  swift_release();
  static Font.Weight.semibold.getter();
  uint64_t v67 = Text.fontWeight(_:)();
  uint64_t v66 = v20;
  int v56 = v21;
  uint64_t v69 = v22;
  sub_1000D1500(v15, v17, v19 & 1);
  swift_bridgeObjectRelease();
  int v57 = static Edge.Set.horizontal.getter();
  static Axis.Set.horizontal.getter();
  uint64_t v74 = v73;
  uint64_t v75 = a2;
  *(void *)&long long v73 = a2;
  sub_100063814(&qword_1010CB4F0);
  sub_100B4A8B4(&qword_1010CB4F8, &qword_1010CB4F0, (void (*)(void))sub_100B4A440);
  ScrollView.init(_:showsIndicators:content:)();
  static ScrollIndicatorVisibility.hidden.getter();
  unsigned __int8 v23 = static Axis.Set.vertical.getter();
  unsigned __int8 v24 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v23) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v24) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v25 = v63;
  sub_100063858(&qword_1010CB520, &qword_1010CB4D0);
  uint64_t v26 = v60;
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, void))(v61 + 8))(v6, v62);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v8, v26);
  char v27 = static Edge.Set.bottom.getter();
  if (qword_1010C85C0 != -1) {
    swift_once();
  }
  char v28 = v56 & 1;
  EdgeInsets.init(_all:)();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v37 = v68;
  uint64_t v38 = v70;
  (*(void (**)(char *, uint64_t, void))(v68 + 16))(v11, v25, v70);
  uint64_t v39 = &v11[*(int *)(v59 + 36)];
  char *v39 = v27;
  *((void *)v39 + 1) = v30;
  *((void *)v39 + 2) = v32;
  *((void *)v39 + 3) = v34;
  *((void *)v39 + 4) = v36;
  v39[40] = 0;
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v25, v38);
  uint64_t v40 = static Alignment.center.getter();
  uint64_t v42 = v41;
  sub_100B464DC((uint64_t)v76);
  long long v73 = v76[0];
  long long v70 = v76[1];
  long long v68 = v76[2];
  long long v63 = v76[3];
  long long v62 = v76[4];
  uint64_t v43 = v77;
  char v44 = v78;
  uint64_t v45 = v64;
  sub_10006CAB8((uint64_t)v11, v64, &qword_1010CB4E0);
  uint64_t v46 = v45 + *(int *)(v65 + 36);
  long long v47 = v70;
  *(_OWORD *)uint64_t v46 = v73;
  *(_OWORD *)(v46 + 16) = v47;
  long long v48 = v63;
  *(_OWORD *)(v46 + 32) = v68;
  *(_OWORD *)(v46 + 48) = v48;
  *(_OWORD *)(v46 + 64) = v62;
  *(void *)(v46 + 80) = v43;
  *(unsigned char *)(v46 + 88) = v44;
  *(void *)(v46 + 96) = v40;
  *(void *)(v46 + 104) = v42;
  sub_1000637B8((uint64_t)v11, &qword_1010CB4E0);
  uint64_t v49 = v71;
  sub_10003CABC(v45, v71, &qword_1010CB4E8);
  uint64_t v50 = v72;
  sub_10006CAB8(v49, v72, &qword_1010CB4E8);
  uint64_t v51 = v67;
  uint64_t v52 = v66;
  *(void *)a3 = v67;
  *(void *)(a3 + 8) = v52;
  *(unsigned char *)(a3 + 16) = v28;
  *(void *)(a3 + 24) = v69;
  *(unsigned char *)(a3 + 32) = v57;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(unsigned char *)(a3 + 72) = 1;
  uint64_t v53 = sub_100063814(&qword_1010CB528);
  sub_10006CAB8(v50, a3 + *(int *)(v53 + 48), &qword_1010CB4E8);
  sub_1001CC8D0(v51, v52, v28);
  swift_bridgeObjectRetain();
  sub_1000637B8(v49, &qword_1010CB4E8);
  sub_1000637B8(v50, &qword_1010CB4E8);
  sub_1000D1500(v51, v52, v28);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100B45E40@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v15 = a1;
  uint64_t v17 = a2;
  type metadata accessor for PinnedScrollableViews();
  __chkstk_darwin();
  uint64_t v16 = sub_100063814(&qword_1010CB518);
  uint64_t v2 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100063814(&qword_1010CB508);
  __chkstk_darwin();
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v13[1] = static VerticalAlignment.center.getter();
  if (qword_1010C85C0 != -1) {
    swift_once();
  }
  __chkstk_darwin();
  LODWORD(v18) = 0;
  sub_100B4A298(&qword_1010CB530, (void (*)(uint64_t))&type metadata accessor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)();
  sub_100063814(&qword_1010CB538);
  sub_100B4A4F0();
  LazyHGrid.init(rows:alignment:spacing:pinnedViews:content:)();
  type metadata accessor for ArtistRazzmatazzView(0);
  sub_100063814(&qword_1010CB240);
  ScaledMetric.wrappedValue.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v7 = v16;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v6, v4, v16);
  uint64_t v8 = &v6[*(int *)(v14 + 36)];
  long long v9 = v19;
  *(_OWORD *)uint64_t v8 = v18;
  *((_OWORD *)v8 + 1) = v9;
  *((_OWORD *)v8 + 2) = v20;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v7);
  LOBYTE(v7) = static Edge.Set.horizontal.getter();
  uint64_t v10 = v17;
  sub_10006CAB8((uint64_t)v6, v17, &qword_1010CB508);
  uint64_t v11 = v10 + *(int *)(sub_100063814(&qword_1010CB4F0) + 36);
  *(unsigned char *)uint64_t v11 = v7;
  *(_OWORD *)(v11 + 8) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  *(unsigned char *)(v11 + 40) = 1;
  return sub_1000637B8((uint64_t)v6, &qword_1010CB508);
}

uint64_t sub_100B461E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin();
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(v4 + 32));
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v11[2] = v7;
  void v11[3] = v6;
  sub_100063814(&qword_1010CB4C8);
  State.wrappedValue.getter();
  swift_getKeyPath();
  sub_100B49E94(a1, (uint64_t)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtistRazzmatazzView);
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = swift_allocObject();
  sub_100B4A0E4((uint64_t)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, type metadata accessor for ArtistRazzmatazzView);
  sub_100063814(&qword_1010C9A38);
  type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  sub_100063858(&qword_1010CB550, &qword_1010C9A38);
  sub_100B4A298(&qword_1010CB558, (void (*)(uint64_t))type metadata accessor for Razzmatazz);
  sub_100B4A298(&qword_1010CB548, (void (*)(uint64_t))type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100B46424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_100B49E94(a1, a3, type metadata accessor for Razzmatazz);
  uint64_t v5 = (uint64_t *)(a2 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 20));
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  swift_retain();
  sub_100063814(&qword_1010CB240);
  ScaledMetric.wrappedValue.getter();
  uint64_t result = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  uint64_t v9 = (void *)(a3 + *(int *)(result + 20));
  *uint64_t v9 = v7;
  v9[1] = v6;
  *(void *)(a3 + *(int *)(result + 24)) = v10;
  return result;
}

uint64_t sub_100B464DC@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ArtistRazzmatazzView(0);
  sub_100063814(&qword_1010CB4C8);
  State.wrappedValue.getter();
  uint64_t v2 = *(void *)(v19 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  long long v4 = 0uLL;
  if (v2)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    char v10 = 0;
    int64x2_t v11 = 0uLL;
  }
  else
  {
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    v12._countAndFlagsBits = Artist.name.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    v13._countAndFlagsBits = 46;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    static HierarchicalShapeStyle.secondary.getter();
    uint64_t v5 = Text.foregroundStyle<A>(_:)();
    uint64_t v6 = v14;
    char v16 = v15;
    uint64_t v8 = v17;
    swift_bridgeObjectRelease();
    uint64_t v7 = v16 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t result = static Edge.Set.horizontal.getter();
    long long v4 = 0uLL;
    uint64_t v9 = result;
    char v10 = 1;
    int64x2_t v11 = vdupq_n_s64(1uLL);
    v11.i64[0] = KeyPath;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(int64x2_t *)(a1 + 32) = v11;
  *(void *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 72) = v4;
  *(unsigned char *)(a1 + 88) = v10;
  return result;
}

uint64_t sub_100B46678(uint64_t a1)
{
  v1[6] = a1;
  v1[7] = type metadata accessor for MainActor();
  v1[8] = static MainActor.shared.getter();
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1010CBA80 + dword_1010CBA80);
  uint64_t v3 = (void *)swift_task_alloc();
  v1[9] = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100B46740;
  return v5(a1);
}

uint64_t sub_100B46740(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B46884, v3, v2);
}

uint64_t sub_100B46884()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[6];
  swift_release();
  v0[4] = v1;
  swift_getKeyPath();
  sub_100063814(&qword_1010C9A38);
  sub_100063858((unint64_t *)&qword_1010CB4B8, &qword_1010C9A38);
  sub_100B4A298(&qword_1010CB4C0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v3 = Sequence.sorted<A>(by:comparator:)();
  swift_release();
  swift_bridgeObjectRelease();
  long long v4 = (uint64_t *)(v2 + *(int *)(type metadata accessor for ArtistRazzmatazzView(0) + 24));
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  v0[2] = v6;
  v0[3] = v5;
  v0[5] = v3;
  sub_100063814(&qword_1010CB4C8);
  State.wrappedValue.setter();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100B46A04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  sub_100063814(&qword_1010CB3B8);
  __chkstk_darwin();
  long long v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100063814(&qword_1010CB3C0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814(&qword_1010CB3C8);
  __chkstk_darwin();
  char v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100063814(&qword_1010CB3D0);
  __chkstk_darwin();
  Swift::String v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010C85C0 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1010CB218;
  *(void *)long long v4 = static VerticalAlignment.center.getter();
  *((void *)v4 + 1) = v14;
  v4[16] = 0;
  uint64_t v15 = sub_100063814(&qword_1010CB3D8);
  sub_100B46DF4(v2, (uint64_t)&v4[*(int *)(v15 + 44)]);
  if (qword_1010C85C8 != -1) {
    swift_once();
  }
  char v16 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  sub_10006CAB8((uint64_t)v4, (uint64_t)v7, &qword_1010CB3B8);
  uint64_t v25 = &v7[*(int *)(v5 + 36)];
  *uint64_t v25 = v16;
  *((void *)v25 + 1) = v18;
  *((void *)v25 + 2) = v20;
  *((void *)v25 + 3) = v22;
  *((void *)v25 + 4) = v24;
  v25[40] = 0;
  sub_1000637B8((uint64_t)v4, &qword_1010CB3B8);
  type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10006CAB8((uint64_t)v7, (uint64_t)v10, &qword_1010CB3C0);
  uint64_t v26 = &v10[*(int *)(v8 + 36)];
  long long v27 = v41;
  *(_OWORD *)uint64_t v26 = v40;
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v42;
  sub_1000637B8((uint64_t)v7, &qword_1010CB3C0);
  id v28 = [self secondarySystemBackgroundColor];
  uint64_t v29 = Color.init(_:)();
  char v30 = static Edge.Set.all.getter();
  sub_10006CAB8((uint64_t)v10, (uint64_t)v13, &qword_1010CB3C8);
  uint64_t v31 = &v13[*(int *)(v11 + 36)];
  *(void *)uint64_t v31 = v29;
  v31[8] = v30;
  sub_1000637B8((uint64_t)v10, &qword_1010CB3C8);
  if (qword_1010C8598 != -1) {
    swift_once();
  }
  uint64_t v32 = static Corner.large;
  uint64_t v33 = unk_10112CC60;
  char v34 = byte_10112CC68;
  uint64_t v35 = v39;
  sub_10006CAB8((uint64_t)v13, v39, &qword_1010CB3D0);
  uint64_t v36 = v35 + *(int *)(sub_100063814(&qword_1010CB3E0) + 36);
  *(void *)uint64_t v36 = v32;
  *(void *)(v36 + 8) = v33;
  *(unsigned char *)(v36 + 16) = v34;
  return sub_1000637B8((uint64_t)v13, &qword_1010CB3D0);
}

uint64_t sub_100B46DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v49 = *(void *)(type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0) - 8);
  __chkstk_darwin();
  uint64_t v50 = v3;
  uint64_t v51 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010CB3E8);
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  __chkstk_darwin();
  uint64_t v54 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100063814(&qword_1010CB3F0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v57 = (uint64_t)&v48 - v8;
  sub_100063814(&qword_1010CB3F8);
  __chkstk_darwin();
  char v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100063814(&qword_1010CB400);
  __chkstk_darwin();
  Swift::String v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100063814(&qword_1010CB408);
  __chkstk_darwin();
  char v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100063814(&qword_1010CB410);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v48 = (uint64_t)&v48 - v20;
  *(void *)char v10 = static HorizontalAlignment.center.getter();
  *((void *)v10 + 1) = 0;
  v10[16] = 1;
  uint64_t v21 = sub_100063814(&qword_1010CB418);
  sub_100B474F4(a1, (uint64_t)&v10[*(int *)(v21 + 44)]);
  uint64_t v53 = a1;
  if (qword_1010C85C8 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10006CAB8((uint64_t)v10, (uint64_t)v13, &qword_1010CB3F8);
  uint64_t v22 = &v13[*(int *)(v11 + 36)];
  long long v23 = v60;
  *(_OWORD *)uint64_t v22 = v59;
  *((_OWORD *)v22 + 1) = v23;
  *((_OWORD *)v22 + 2) = v61;
  sub_1000637B8((uint64_t)v10, &qword_1010CB3F8);
  id v24 = [self systemBackgroundColor];
  uint64_t v25 = Color.init(_:)();
  char v26 = static Edge.Set.all.getter();
  sub_10006CAB8((uint64_t)v13, (uint64_t)v16, &qword_1010CB400);
  long long v27 = &v16[*(int *)(v14 + 36)];
  *(void *)long long v27 = v25;
  v27[8] = v26;
  sub_1000637B8((uint64_t)v13, &qword_1010CB400);
  if (qword_1010C8590 != -1) {
    swift_once();
  }
  uint64_t v28 = static Corner.medium;
  uint64_t v29 = *(void *)algn_10112CC48;
  char v30 = byte_10112CC50;
  sub_10006CAB8((uint64_t)v16, (uint64_t)v19, &qword_1010CB408);
  uint64_t v31 = &v19[*(int *)(v17 + 36)];
  *(void *)uint64_t v31 = v28;
  *((void *)v31 + 1) = v29;
  v31[16] = v30;
  sub_1000637B8((uint64_t)v16, &qword_1010CB408);
  uint64_t v32 = v48;
  sub_10003CABC((uint64_t)v19, v48, &qword_1010CB410);
  uint64_t v33 = v53;
  uint64_t v34 = v51;
  sub_100B49E94(v53, v51, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
  unint64_t v35 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  uint64_t v36 = swift_allocObject();
  sub_100B4A0E4(v34, v36 + v35, type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
  __chkstk_darwin();
  *(&v48 - 2) = v33;
  sub_100063814(&qword_1010CB420);
  sub_100B4A1C4();
  uint64_t v37 = v54;
  Button.init(action:label:)();
  uint64_t v38 = static Color.primary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = v55;
  uint64_t v40 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v7, v37, v56);
  long long v42 = (uint64_t *)&v7[*(int *)(v52 + 36)];
  *long long v42 = KeyPath;
  v42[1] = v38;
  (*(void (**)(char *, uint64_t))(v41 + 8))(v37, v40);
  uint64_t v43 = v57;
  sub_10003CABC((uint64_t)v7, v57, &qword_1010CB3F0);
  sub_10006CAB8(v32, (uint64_t)v19, &qword_1010CB410);
  sub_10006CAB8(v43, (uint64_t)v7, &qword_1010CB3F0);
  uint64_t v44 = v58;
  sub_10006CAB8((uint64_t)v19, v58, &qword_1010CB410);
  uint64_t v45 = sub_100063814(&qword_1010CB450);
  sub_10006CAB8((uint64_t)v7, v44 + *(int *)(v45 + 48), &qword_1010CB3F0);
  uint64_t v46 = v44 + *(int *)(v45 + 64);
  *(void *)uint64_t v46 = 0;
  *(unsigned char *)(v46 + 8) = 1;
  sub_1000637B8(v43, &qword_1010CB3F0);
  sub_1000637B8(v32, &qword_1010CB410);
  sub_1000637B8((uint64_t)v7, &qword_1010CB3F0);
  return sub_1000637B8((uint64_t)v19, &qword_1010CB410);
}

uint64_t sub_100B474F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v113 = a2;
  uint64_t v3 = type metadata accessor for Date.FormatStyle.Symbol.Day();
  uint64_t v111 = *(void *)(v3 - 8);
  uint64_t v112 = v3;
  __chkstk_darwin();
  uint64_t v110 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_100063814(&qword_1010CB458) - 8;
  __chkstk_darwin();
  uint64_t v108 = (uint64_t *)((char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100063814(&qword_1010CB460);
  __chkstk_darwin();
  uint64_t v104 = (char *)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v95 = *(void (***)(char *, uint64_t))(v96 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for TimeZone();
  uint64_t v120 = *(void *)(v117 - 8);
  __chkstk_darwin();
  uint64_t v115 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date.FormatStyle();
  uint64_t v118 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v85 - v13;
  uint64_t v114 = type metadata accessor for Date();
  uint64_t v119 = *(void *)(v114 - 8);
  uint64_t v15 = v119;
  __chkstk_darwin();
  uint64_t v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100063814(&qword_1010CB468) - 8;
  __chkstk_darwin();
  uint64_t v19 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_100063814(&qword_1010CB470);
  __chkstk_darwin();
  uint64_t v92 = (uint64_t)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100063814(&qword_1010CB478);
  uint64_t v106 = *(void *)(v21 - 8);
  uint64_t v107 = v21;
  __chkstk_darwin();
  char v93 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_100063814(&qword_1010CB480) - 8;
  __chkstk_darwin();
  uint64_t v116 = (uint64_t)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v103 = (uint64_t)&v85 - v24;
  uint64_t v25 = type metadata accessor for Razzmatazz(0);
  uint64_t v102 = a1 + *(int *)(v25 + 24);
  char v26 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v100 = v15 + 16;
  uint64_t v101 = v26;
  long long v27 = v17;
  uint64_t v28 = v17;
  uint64_t v29 = v114;
  ((void (*)(char *))v26)(v27);
  static ParseableFormatStyle<>.dateTime.getter();
  uint64_t v30 = a1 + *(int *)(v25 + 32);
  uint64_t v98 = v30 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 16);
  v120 += 16;
  uint64_t v99 = v31;
  ((void (*)(char *))v31)(v115);
  Date.FormatStyle.timeZone.setter();
  static Date.FormatStyle.Symbol.Month.abbreviated.getter();
  uint64_t v32 = v12;
  uint64_t v86 = v12;
  Date.FormatStyle.month(_:)();
  v95[1](v8, v96);
  uint64_t v34 = v118 + 8;
  uint64_t v33 = *(void (**)(char *, uint64_t))(v118 + 8);
  v33(v32, v10);
  uint64_t v90 = v33;
  uint64_t v118 = v34;
  uint64_t v96 = sub_100B4A298(&qword_1010CB488, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  CGFloat v89 = v14;
  uint64_t v91 = v10;
  uint64_t v87 = v28;
  Date.formatted<A>(_:)();
  v33(v14, v10);
  unint64_t v35 = *(void (***)(char *, uint64_t))(v119 + 8);
  v119 += 8;
  uint64_t v95 = v35;
  ((void (*)(char *, uint64_t))v35)(v28, v29);
  uint64_t v121 = v123;
  uint64_t v122 = v124;
  unint64_t v94 = sub_10005D27C();
  uint64_t v36 = Text.init<A>(_:)();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  LOBYTE(v10) = v41 & 1;
  uint64_t v42 = enum case for Text.Case.uppercase(_:);
  uint64_t v43 = type metadata accessor for Text.Case();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = (uint64_t)v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 104))(v104, v42, v43);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v45, 0, 1, v43);
  uint64_t KeyPath = swift_getKeyPath();
  long long v47 = v108;
  sub_10006CAB8(v45, (uint64_t)v108 + *(int *)(v109 + 36), &qword_1010CB460);
  uint64_t *v47 = KeyPath;
  sub_10006CAB8((uint64_t)v47, (uint64_t)&v19[*(int *)(v88 + 44)], &qword_1010CB458);
  *(void *)uint64_t v19 = v36;
  *((void *)v19 + 1) = v38;
  v19[16] = v10;
  *((void *)v19 + 3) = v40;
  sub_1001CC8D0(v36, v38, v10);
  swift_bridgeObjectRetain();
  sub_1000637B8((uint64_t)v47, &qword_1010CB458);
  sub_1000637B8(v45, &qword_1010CB460);
  sub_1000D1500(v36, v38, v10);
  swift_bridgeObjectRelease();
  uint64_t v48 = static Font.caption.getter();
  uint64_t v49 = swift_getKeyPath();
  uint64_t v50 = v92;
  sub_10006CAB8((uint64_t)v19, v92, &qword_1010CB468);
  uint64_t v51 = (uint64_t *)(v50 + *(int *)(v97 + 36));
  uint64_t *v51 = v49;
  v51[1] = v48;
  sub_1000637B8((uint64_t)v19, &qword_1010CB468);
  static Font.Weight.semibold.getter();
  sub_100B4A2F0();
  uint64_t v52 = v93;
  View.fontWeight(_:)();
  sub_1000637B8(v50, &qword_1010CB470);
  id v53 = [self systemRedColor];
  uint64_t v54 = Color.init(_:)();
  uint64_t v55 = swift_getKeyPath();
  uint64_t v56 = v106;
  uint64_t v57 = v116;
  uint64_t v58 = v52;
  long long v59 = v52;
  uint64_t v60 = v107;
  (*(void (**)(uint64_t, char *, uint64_t))(v106 + 16))(v116, v58, v107);
  long long v61 = (uint64_t *)(v57 + *(int *)(v105 + 44));
  *long long v61 = v55;
  v61[1] = v54;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v59, v60);
  uint64_t v62 = v57;
  uint64_t v63 = v103;
  sub_10003CABC(v62, v103, &qword_1010CB480);
  uint64_t v64 = v87;
  uint64_t v65 = v114;
  v101(v87, v102, v114);
  uint64_t v66 = v86;
  static ParseableFormatStyle<>.dateTime.getter();
  v99(v115, v98, v117);
  Date.FormatStyle.timeZone.setter();
  uint64_t v67 = v110;
  static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
  long long v68 = v89;
  Date.FormatStyle.day(_:)();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v67, v112);
  uint64_t v69 = v91;
  long long v70 = v90;
  v90(v66, v91);
  Date.formatted<A>(_:)();
  v70(v68, v69);
  ((void (*)(char *, uint64_t))v95)(v64, v65);
  uint64_t v121 = v123;
  uint64_t v122 = v124;
  uint64_t v71 = Text.init<A>(_:)();
  uint64_t v73 = v72;
  LOBYTE(v64) = v74 & 1;
  static Font.title3.getter();
  uint64_t v75 = Text.font(_:)();
  uint64_t v77 = v76;
  LOBYTE(v42) = v78;
  uint64_t v80 = v79;
  swift_release();
  sub_1000D1500(v71, v73, (char)v64);
  swift_bridgeObjectRelease();
  uint64_t v81 = v116;
  sub_10006CAB8(v63, v116, &qword_1010CB480);
  uint64_t v82 = v113;
  sub_10006CAB8(v81, v113, &qword_1010CB480);
  uint64_t v83 = v82 + *(int *)(sub_100063814(&qword_1010CB4B0) + 48);
  *(void *)uint64_t v83 = v75;
  *(void *)(v83 + 8) = v77;
  *(unsigned char *)(v83 + 16) = v42 & 1;
  *(void *)(v83 + 24) = v80;
  sub_1001CC8D0(v75, v77, v42 & 1);
  swift_bridgeObjectRetain();
  sub_1000637B8(v63, &qword_1010CB480);
  sub_1000D1500(v75, v77, v42 & 1);
  swift_bridgeObjectRelease();
  return sub_1000637B8(v81, &qword_1010CB480);
}

__n128 sub_100B480D4@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4 = static HorizontalAlignment.leading.getter();
  sub_100B48188(a1, (uint64_t)v14);
  unint64_t v5 = v14[0];
  unint64_t v6 = v14[1];
  unsigned __int8 v7 = v15;
  __n128 v13 = v16;
  unint64_t v8 = v17;
  unsigned __int8 v9 = v18;
  unint64_t v10 = v19;
  uint64_t KeyPath = swift_getKeyPath();
  a2->n128_u64[0] = v4;
  a2->n128_u64[1] = 0x4000000000000000;
  a2[1].n128_u8[0] = 0;
  a2[1].n128_u64[1] = v5;
  a2[2].n128_u64[0] = v6;
  a2[2].n128_u8[8] = v7;
  __n128 result = v13;
  a2[3] = v13;
  a2[4].n128_u64[0] = v8;
  a2[4].n128_u8[8] = v9;
  a2[5].n128_u64[0] = v10;
  a2[5].n128_u64[1] = KeyPath;
  a2[6].n128_u64[0] = 1;
  a2[6].n128_u8[8] = 0;
  return result;
}

uint64_t sub_100B48188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  Razzmatazz.shortName.getter();
  sub_10005D27C();
  uint64_t v3 = Text.init<A>(_:)();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  static Font.Weight.semibold.getter();
  uint64_t v8 = Text.fontWeight(_:)();
  uint64_t v37 = v9;
  uint64_t v38 = v8;
  char v11 = v10;
  uint64_t v39 = v12;
  sub_1000D1500(v3, v5, v7);
  swift_bridgeObjectRelease();
  __n128 v13 = (void *)(a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32));
  uint64_t v15 = v13[6];
  uint64_t v14 = v13[7];
  uint64_t v16 = v13[9];
  if (!v16) {
    goto LABEL_5;
  }
  uint64_t v17 = v13[8];
  swift_bridgeObjectRetain();
  if (String.count.getter() != 2)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  sub_100063814(&qword_1010CF870);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_100E251B0;
  *(void *)(v18 + 32) = v15;
  *(void *)(v18 + 40) = v14;
  *(void *)(v18 + 48) = v17;
  *(void *)(v18 + 56) = v16;
  swift_bridgeObjectRetain();
  sub_100063814(&qword_1010CA7C8);
  sub_100063858((unint64_t *)&qword_1010CA7D0, &qword_1010CA7C8);
  BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v19 = Text.init<A>(_:)();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  static HierarchicalShapeStyle.secondary.getter();
  uint64_t v24 = Text.foregroundStyle<A>(_:)();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  sub_1000D1500(v19, v21, v23);
  swift_bridgeObjectRelease();
  static Font.subheadline.getter();
  uint64_t v29 = Text.font(_:)();
  uint64_t v31 = v30;
  char v33 = v32;
  uint64_t v35 = v34;
  swift_release();
  sub_1000D1500(v24, v26, v28);
  swift_bridgeObjectRelease();
  *(void *)a2 = v38;
  *(void *)(a2 + 8) = v37;
  *(unsigned char *)(a2 + 16) = v11 & 1;
  *(void *)(a2 + 24) = v39;
  *(void *)(a2 + 32) = v29;
  *(void *)(a2 + 40) = v31;
  *(unsigned char *)(a2 + 48) = v33 & 1;
  *(void *)(a2 + 56) = v35;
  sub_1001CC8D0(v38, v37, v11 & 1);
  swift_bridgeObjectRetain();
  sub_1001CC8D0(v29, v31, v33 & 1);
  swift_bridgeObjectRetain();
  sub_1000D1500(v29, v31, v33 & 1);
  swift_bridgeObjectRelease();
  sub_1000D1500(v38, v37, v11 & 1);
  return swift_bridgeObjectRelease();
}

void sub_100B48498()
{
  qword_1010CB218 = 0x4020000000000000;
}

void sub_100B484A8()
{
  qword_1010CB220 = 0x4028000000000000;
}

uint64_t sub_100B484BC()
{
  uint64_t v2 = *(void *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1000154F4;
  return sub_100B46678(v3);
}

uint64_t sub_100B48588()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for ArtistRazzmatazzView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Artist();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    char v10 = (uint64_t *)((char *)a1 + v8);
    char v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *char v10 = *v11;
    v10[1] = v12;
    __n128 v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *__n128 v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v19 = sub_100063814(&qword_1010CB240);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_100063814(&qword_1010CB240);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  char v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  __n128 v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v18 = sub_100063814(&qword_1010CB240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  swift_retain();
  swift_release();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_100063814(&qword_1010CB240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

uint64_t initializeWithTake for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_100063814(&qword_1010CB240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  swift_release();
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_release();
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_100063814(&qword_1010CB240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B48BD8);
}

uint64_t sub_100B48BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Artist();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_100063814(&qword_1010CB240);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for ArtistRazzmatazzView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B48D1C);
}

uint64_t sub_100B48D1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Artist();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_100063814(&qword_1010CB240);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_100B48E4C()
{
  type metadata accessor for Artist();
  if (v0 <= 0x3F)
  {
    sub_100B48F2C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100B48F2C()
{
  if (!qword_1010CB2D0)
  {
    sub_100B45154();
    unint64_t v0 = type metadata accessor for ScaledMetric();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1010CB2D0);
    }
  }
}

unint64_t sub_100B48F8C()
{
  unint64_t result = qword_1010CB308;
  if (!qword_1010CB308)
  {
    sub_10006389C(&qword_1010CB260);
    sub_100063858(&qword_1010CB310, &qword_1010CB230);
    sub_100B4A298(&qword_1010CB318, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB308);
  }
  return result;
}

uint64_t *sub_100B4905C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v35 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = (int *)type metadata accessor for Razzmatazz(0);
    uint64_t v9 = v8[6];
    unint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = v8[7];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for Artist();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = v8[8];
    uint64_t v19 = (uint64_t *)((char *)v4 + v18);
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *uint64_t v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    _OWORD v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    void v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    uint64_t v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    uint64_t v40 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v40;
    uint64_t v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    uint64_t v38 = &v20[v27];
    uint64_t v39 = (char *)v19 + v27;
    uint64_t v28 = type metadata accessor for TimeZone();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v29 = v40;
    v37(v39, v38, v28);
    uint64_t v30 = *(int *)(a3 + 20);
    uint64_t v31 = *(int *)(a3 + 24);
    char v32 = (uint64_t *)((char *)v4 + v30);
    char v33 = (uint64_t *)((char *)a2 + v30);
    uint64_t v34 = v33[1];
    *char v32 = *v33;
    v32[1] = v34;
    *(uint64_t *)((char *)v4 + v31) = *(uint64_t *)((char *)a2 + v31);
  }
  swift_retain();
  return v4;
}

uint64_t sub_100B492BC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v3 = a1 + v2[6];
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = a1 + v2[7];
  uint64_t v6 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + v2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v8 = v7 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v9 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return swift_release();
}

void *sub_100B49428(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  unint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = v7[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = v7[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)((char *)a2 + v17 + 8);
  *uint64_t v18 = *(void *)((char *)a2 + v17);
  v18[1] = v20;
  uint64_t v21 = *(void *)((char *)a2 + v17 + 24);
  v18[2] = *(void *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  uint64_t v22 = *(void *)((char *)a2 + v17 + 40);
  v18[4] = *(void *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  uint64_t v23 = *(void *)((char *)a2 + v17 + 56);
  void v18[6] = *(void *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  uint64_t v24 = *(void *)((char *)a2 + v17 + 72);
  v18[8] = *(void *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  uint64_t v25 = *(void *)((char *)a2 + v17 + 88);
  v18[10] = *(void *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  uint64_t v38 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v38;
  uint64_t v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v36 = &v19[v26];
  uint64_t v37 = (char *)v18 + v26;
  uint64_t v27 = type metadata accessor for TimeZone();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v28 = v38;
  v35(v37, v36, v27);
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = *(int *)(a3 + 24);
  uint64_t v31 = (void *)((char *)a1 + v29);
  char v32 = (void *)((char *)a2 + v29);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  *(void *)((char *)a1 + v30) = *(void *)((char *)a2 + v30);
  swift_retain();
  return a1;
}

void *sub_100B4963C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v6[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *(void *)((char *)a2 + v15);
  v16[1] = *(void *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)v17[12];
  uint64_t v19 = (void *)v16[12];
  v16[12] = v18;
  id v20 = v18;

  uint64_t v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v22 = (char *)v16 + v21;
  uint64_t v23 = (char *)v17 + v21;
  uint64_t v24 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_100B498B4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = v7[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = v7[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  long long v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  long long v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  long long v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((void *)v17 + 12) = *(void *)((char *)a2 + v16 + 96);
  uint64_t v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v23 = &v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  uint64_t v26 = *(int *)(a3 + 24);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  return a1;
}

void *sub_100B49A24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v9 = v8[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = v8[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = v8[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  long long v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = *(void *)((char *)a2 + v17 + 8);
  *uint64_t v18 = *(void *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = v19[7];
  void v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = (void *)v18[12];
  v18[12] = v19[12];

  uint64_t v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v28 = (char *)v18 + v27;
  uint64_t v29 = (char *)v19 + v27;
  uint64_t v30 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100B49C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B49C20);
}

uint64_t sub_100B49C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Razzmatazz(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100B49CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B49CF4);
}

uint64_t sub_100B49CF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Razzmatazz(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010CB378);
}

uint64_t sub_100B49DD0()
{
  uint64_t result = type metadata accessor for Razzmatazz(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100B49E78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B49E94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B49EFC()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0) - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v4 = v2 + v3[6];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v2 + v3[7];
  uint64_t v7 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v2 + v3[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B4A0E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B4A14C()
{
  uint64_t v1 = type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell(0);
  uint64_t v2 = *(void *)(v1 - 8);
  return (*(uint64_t (**)(unint64_t))(v0
                                                     + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
                                                     + *(int *)(v1 + 20)))(v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
}

double sub_100B4A1BC@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_100B480D4(*(void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_100B4A1C4()
{
  unint64_t result = qword_1010CB428;
  if (!qword_1010CB428)
  {
    sub_10006389C(&qword_1010CB420);
    sub_100063858(&qword_1010CB430, &qword_1010CB438);
    sub_100063858((unint64_t *)&qword_1010CB440, &qword_1010CB448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB428);
  }
  return result;
}

uint64_t sub_100B4A298(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100B4A2F0()
{
  unint64_t result = qword_1010CB490;
  if (!qword_1010CB490)
  {
    sub_10006389C(&qword_1010CB470);
    sub_100B4A390();
    sub_100063858((unint64_t *)&unk_1010CE060, &qword_1010CB4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB490);
  }
  return result;
}

unint64_t sub_100B4A390()
{
  unint64_t result = qword_1010CB498;
  if (!qword_1010CB498)
  {
    sub_10006389C(&qword_1010CB468);
    sub_100063858(&qword_1010CB4A0, &qword_1010CB458);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB498);
  }
  return result;
}

uint64_t sub_100B4A438@<X0>(uint64_t a1@<X8>)
{
  return sub_100B45E40(*(void *)(v1 + 24), a1);
}

unint64_t sub_100B4A440()
{
  unint64_t result = qword_1010CB500;
  if (!qword_1010CB500)
  {
    sub_10006389C(&qword_1010CB508);
    sub_100063858(&qword_1010CB510, &qword_1010CB518);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB500);
  }
  return result;
}

uint64_t sub_100B4A4E8()
{
  return sub_100B461E0(*(void *)(v0 + 16));
}

unint64_t sub_100B4A4F0()
{
  unint64_t result = qword_1010CB540;
  if (!qword_1010CB540)
  {
    sub_10006389C(&qword_1010CB538);
    sub_100B4A298(&qword_1010CB548, (void (*)(uint64_t))type metadata accessor for ArtistRazzmatazzView.RazzmatazzCell);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB540);
  }
  return result;
}

uint64_t sub_100B4A598()
{
  uint64_t v1 = (int *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v4 = v2 + v1[9];
  uint64_t v5 = sub_100063814(&qword_1010CB240);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_deallocObject();
}

uint64_t sub_100B4A6E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ArtistRazzmatazzView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100B46424(a1, v6, a2);
}

unint64_t sub_100B4A76C()
{
  unint64_t result = qword_1010CB560;
  if (!qword_1010CB560)
  {
    sub_10006389C(&qword_1010CB3E0);
    sub_100B4A7E8();
    sub_100B3E680();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB560);
  }
  return result;
}

unint64_t sub_100B4A7E8()
{
  unint64_t result = qword_1010CB568;
  if (!qword_1010CB568)
  {
    sub_10006389C(&qword_1010CB3D0);
    sub_100B4A8B4(&qword_1010CB570, &qword_1010CB3C8, (void (*)(void))sub_100B4A930);
    sub_100063858((unint64_t *)&unk_1010CEF60, &qword_1010CE730);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB568);
  }
  return result;
}

uint64_t sub_100B4A8B4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100B4A930()
{
  unint64_t result = qword_1010CB578;
  if (!qword_1010CB578)
  {
    sub_10006389C(&qword_1010CB3C0);
    sub_100063858(&qword_1010CB580, &qword_1010CB3B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB578);
  }
  return result;
}

id sub_100B4A9D0()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for CitySearchController(0));

  return [v0 init];
}

uint64_t sub_100B4AA08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v14 = a1;
  uint64_t v15 = type metadata accessor for SearchFieldPlacement();
  uint64_t v2 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100063814(&qword_1010CB688);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v1;
  sub_100063814(&qword_1010CB690);
  uint64_t v9 = sub_10006389C(&qword_1010CB698);
  unint64_t v10 = sub_100B4D27C();
  unint64_t v11 = sub_10005D27C();
  uint64_t v17 = v9;
  uint64_t v18 = &type metadata for String;
  unint64_t v19 = v10;
  unint64_t v20 = v11;
  swift_getOpaqueTypeConformance2();
  NavigationStack.init<>(root:)();
  type metadata accessor for CitySearchController(0);
  sub_100B4DA40(&qword_1010CB6C8, (void (*)(uint64_t))type metadata accessor for CitySearchController);
  uint64_t v12 = (void *)StateObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();

  static SearchFieldPlacement.navigationBarDrawer.getter();
  sub_100063858(&qword_1010CB6D0, &qword_1010CB688);
  View.searchable(text:placement:prompt:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100B4AD28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v19[1] = a2;
  uint64_t v3 = *(void *)(type metadata accessor for CitySelectionView(0) - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin();
  uint64_t v5 = sub_100063814(&qword_1010CB698);
  __chkstk_darwin();
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CitySearchController(0);
  sub_100B4DA40(&qword_1010CB6C8, (void (*)(uint64_t))type metadata accessor for CitySearchController);
  uint64_t v8 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  uint64_t v9 = v20[0];
  uint64_t KeyPath = swift_getKeyPath();
  sub_100B4D38C(a1, (uint64_t)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v12 = swift_allocObject();
  sub_100B4D514((uint64_t)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  v19[7] = v12;
  v20[0] = v9;
  v19[4] = v20;
  v19[5] = KeyPath;
  void v19[6] = sub_100B4D578;
  sub_100063814(&qword_1010CB6D8);
  sub_100B4D934();
  List<>.init(content:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v13 = static Alignment.center.getter();
  uint64_t v15 = v14;
  uint64_t v16 = (uint64_t)&v7[*(int *)(v5 + 36)];
  sub_100B4BA68(v16);
  uint64_t v17 = (uint64_t *)(v16 + *(int *)(sub_100063814(&qword_1010CB6C0) + 36));
  *uint64_t v17 = v13;
  v17[1] = v15;
  v20[0] = 0x686372616553;
  v20[1] = 0xE600000000000000;
  sub_100B4D27C();
  sub_10005D27C();
  View.navigationTitle<A>(_:)();
  return sub_1000637B8((uint64_t)v7, &qword_1010CB698);
}

uint64_t sub_100B4B030()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100B4B0A4@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  *(void *)a3 = static HorizontalAlignment.leading.getter();
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v6 = sub_100063814(&qword_1010CB718);
  return sub_100B4B100(v5, a2, (void *)(a3 + *(int *)(v6 + 44)));
}

uint64_t sub_100B4B100@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v81 = a3;
  uint64_t v85 = *(void *)(type metadata accessor for CitySelectionView(0) - 8);
  uint64_t v5 = *(void *)(v85 + 64);
  __chkstk_darwin();
  uint64_t v86 = (uint64_t)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_100063814((uint64_t *)&unk_1010CD5A0);
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin();
  uint64_t v88 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100063814(&qword_1010CB720);
  __chkstk_darwin();
  uint64_t v92 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v8 = __chkstk_darwin().n128_u64[0];
  uint64_t v91 = (uint64_t)&v78 - v9;
  id v10 = [a1 title:v8];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  *(void *)&long long v102 = v11;
  *((void *)&v102 + 1) = v13;
  sub_10005D27C();
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  LODWORD(v102) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v97 = Text.foregroundStyle<A>(_:)();
  uint64_t v100 = v19;
  uint64_t v101 = v20;
  char v22 = v21;
  sub_1000D1500(v14, v16, v18);
  swift_bridgeObjectRelease();
  id v23 = [a1 subtitle];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v26 = v25;

  swift_bridgeObjectRelease();
  uint64_t v27 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0) {
    uint64_t v27 = v24 & 0xFFFFFFFFFFFFLL;
  }
  if (v27)
  {
    id v28 = [a1 subtitle];
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;

    *(void *)&long long v102 = v29;
    *((void *)&v102 + 1) = v31;
    uint64_t v32 = Text.init<A>(_:)();
    uint64_t v34 = v33;
    char v36 = v35 & 1;
    LODWORD(v102) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v37 = Text.foregroundStyle<A>(_:)();
    char v78 = a1;
    uint64_t v38 = v37;
    uint64_t v40 = v39;
    uint64_t v80 = v5;
    uint64_t v79 = a2;
    char v41 = v22;
    char v43 = v42 & 1;
    sub_1000D1500(v32, v34, v36);
    swift_bridgeObjectRelease();
    static Font.subheadline.getter();
    uint64_t v96 = Text.font(_:)();
    uint64_t v99 = v44;
    LOBYTE(v34) = v45;
    uint64_t v84 = v46;
    swift_release();
    uint64_t v95 = v34 & 1;
    char v47 = v43;
    char v22 = v41;
    sub_1000D1500(v38, v40, v47);
    a2 = v79;
    uint64_t v5 = v80;
    swift_bridgeObjectRelease();
    LOBYTE(v38) = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v93 = v49;
    uint64_t v94 = v48;
    uint64_t v83 = v50;
    uint64_t v82 = v51;
    uint64_t v98 = v38;
    a1 = v78;
  }
  else
  {
    uint64_t v95 = 0;
    uint64_t v96 = 0;
    uint64_t v99 = 0;
    uint64_t v84 = 0;
    uint64_t v98 = 0;
    uint64_t v93 = 0;
    uint64_t v94 = 0;
    uint64_t v83 = 0;
    uint64_t v82 = 0;
  }
  char v52 = v22 & 1;
  *(void *)&long long v102 = 0;
  *((void *)&v102 + 1) = 0xE000000000000000;
  uint64_t v53 = v86;
  sub_100B4D38C(a2, v86);
  unint64_t v54 = (*(unsigned __int8 *)(v85 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  uint64_t v55 = swift_allocObject();
  sub_100B4D514(v53, v55 + v54);
  *(void *)(v55 + ((v5 + v54 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  id v56 = a1;
  uint64_t v57 = v88;
  Button<>.init<A>(_:action:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v58 = v89;
  uint64_t v59 = (uint64_t)v92;
  uint64_t v60 = v90;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v92, v57, v90);
  long long v61 = (_OWORD *)(v59 + *(int *)(v87 + 36));
  long long v62 = v103;
  *long long v61 = v102;
  v61[1] = v62;
  v61[2] = v104;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v60);
  uint64_t v63 = v91;
  sub_100B4DC94(v59, v91);
  sub_100B4DCFC(v63, v59);
  uint64_t v64 = v97;
  uint64_t v65 = v81;
  uint64_t v66 = v100;
  *uint64_t v81 = v97;
  v65[1] = v66;
  LODWORD(v80) = v22 & 1;
  *((unsigned char *)v65 + 16) = v22 & 1;
  uint64_t v67 = v96;
  v65[3] = v101;
  v65[4] = v67;
  uint64_t v68 = v98;
  uint64_t v69 = v99;
  uint64_t v70 = v95;
  v65[5] = v99;
  v65[6] = v70;
  uint64_t v71 = v84;
  v65[7] = v84;
  v65[8] = v68;
  uint64_t v98 = v68;
  uint64_t v72 = v93;
  v65[9] = v94;
  v65[10] = v72;
  uint64_t v73 = v82;
  v65[11] = v83;
  v65[12] = v73;
  *((unsigned char *)v65 + 104) = 0;
  uint64_t v74 = sub_100063814(&qword_1010CB728);
  sub_100B4DCFC(v59, (uint64_t)v65 + *(int *)(v74 + 64));
  sub_1001CC8D0(v64, v100, v52);
  swift_bridgeObjectRetain();
  uint64_t v75 = v96;
  uint64_t v76 = v69;
  LOBYTE(v69) = v95;
  sub_1001CC8E0(v96, v76, v95, v71);
  sub_1000637B8(v63, &qword_1010CB720);
  sub_1000637B8(v59, &qword_1010CB720);
  sub_1001CC924(v75, v99, v69, v71);
  sub_1000D1500(v97, v100, v80);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100B4B804(uint64_t a1, void *a2)
{
  uint64_t v20 = a1;
  uint64_t v21 = type metadata accessor for DismissAction();
  uint64_t v3 = *(void *)(v21 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  id v6 = [a2 title];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  id v9 = [a2 subtitle];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  [a2 coordinate];
  uint64_t v14 = v13;
  [a2 coordinate];
  uint64_t v16 = v15;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  long long v25 = v22;
  long long v26 = v23;
  long long v27 = v24;
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)&long long v22 = v19;
  *((void *)&v22 + 1) = v8;
  *(void *)&long long v23 = v10;
  *((void *)&v23 + 1) = v12;
  *(void *)&long long v24 = v14;
  *((void *)&v24 + 1) = v16;
  swift_retain();
  static Published.subscript.setter();
  sub_100B51E60((uint64_t)&v25);
  long long v28 = v25;
  sub_1001ECE50((uint64_t)&v28);
  long long v22 = v26;
  sub_1001ECE50((uint64_t)&v22);
  swift_release();
  type metadata accessor for CitySelectionView(0);
  sub_100B6E244((uint64_t)v5);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v21);
}

uint64_t sub_100B4BA68@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for CitySearchController(0);
  sub_100B4DA40(&qword_1010CB6C8, (void (*)(uint64_t))type metadata accessor for CitySearchController);
  uint64_t v2 = (void *)StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();

  swift_release();
  swift_release();
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v4 = sub_100063814(&qword_1010CB6F8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
  else
  {
    static ContentUnavailableView<>.search.getter();
    uint64_t v6 = sub_100063814(&qword_1010CB6F8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 0, 1, v6);
  }
}

uint64_t sub_100B4BC1C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100B4BC90@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

void sub_100B4BD10(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v8 = a1;
  uint64_t v9 = a2;
  uint64_t v5 = v2;
  static Published.subscript.setter();
  uint64_t v6 = *(void **)&v5[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setQuery:v7, v8, v9];
}

uint64_t sub_100B4BE18@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100B4BE98(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

char *sub_100B4BF10()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_100063814(&qword_1010CB730);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010CB738);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = &v1[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController__query];
  CGAffineTransform aBlock = 0;
  unint64_t v23 = 0xE000000000000000;
  uint64_t v12 = v1;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v10, v7);
  uint64_t v13 = &v12[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController__completionResults];
  CGAffineTransform aBlock = (void **)_swiftEmptyArrayStorage;
  sub_100063814(&qword_1010CB5E8);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v13, v6, v3);
  id v14 = [objc_allocWithZone((Class)MusicMapKitLocalSearchWrapper) init];
  *(void *)&v12[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter] = v14;

  v28.receiver = v12;
  v28.super_class = ObjectType;
  uint64_t v15 = (char *)[super init];
  uint64_t v16 = *(void **)&v15[OBJC_IVAR____TtC11MusicCoreUIP33_66D9DE5C50A23191A347FA0B4F8C41B820CitySearchController_searchCompleter];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v15;
  long long v26 = sub_100B4DDA4;
  uint64_t v27 = v17;
  CGAffineTransform aBlock = _NSConcreteStackBlock;
  unint64_t v23 = 1107296256;
  long long v24 = sub_100B4C650;
  long long v25 = &unk_10100E3C0;
  uint64_t v18 = _Block_copy(&aBlock);
  uint64_t v19 = v15;
  id v20 = v16;
  swift_release();
  [v20 setDidUpdateResults:v18];

  _Block_release(v18);
  return v19;
}

uint64_t sub_100B4C200(unint64_t a1, void *a2)
{
  sub_100063814(&qword_1010CAA90);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = _swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v15 = _swiftEmptyArrayStorage;
LABEL_15:
    uint64_t v16 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
    type metadata accessor for MainActor();
    swift_bridgeObjectRetain();
    id v17 = a2;
    uint64_t v18 = static MainActor.shared.getter();
    uint64_t v19 = (void *)swift_allocObject();
    _OWORD v19[2] = v18;
    v19[3] = &protocol witness table for MainActor;
    v19[4] = v17;
    v19[5] = v15;
    void v19[6] = a1;
    sub_100066A94((uint64_t)v5, (uint64_t)&unk_1010CB748, (uint64_t)v19);
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v21 = a2;
    long long v22 = v5;
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v10 = v9;
      id v11 = [v9 subtitle];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      uint64_t v25 = v12;
      uint64_t v26 = v14;
      uint64_t v23 = 44;
      unint64_t v24 = 0xE100000000000000;
      sub_10005D27C();
      LOBYTE(v11) = StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
      if (v11)
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = v27;
    a2 = v21;
    uint64_t v5 = v22;
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100B4C4A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  type metadata accessor for MainActor();
  void v6[6] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B4C53C, v8, v7);
}

uint64_t sub_100B4C53C()
{
  unint64_t v1 = v0[4];
  swift_release();
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = v0 + 5;
  uint64_t v4 = (void *)v0[3];
  if (v2) {
    uint64_t v3 = v0 + 4;
  }
  uint64_t v5 = *v3;
  swift_bridgeObjectRetain();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[2] = v5;
  id v6 = v4;
  static Published.subscript.setter();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100B4C650(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_100B4DA88();
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100B4C7B4()
{
  return type metadata accessor for CitySearchController(0);
}

uint64_t type metadata accessor for CitySearchController(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CB5C8);
}

void sub_100B4C7DC()
{
  sub_100B4C8B4();
  if (v0 <= 0x3F)
  {
    sub_100B4C90C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100B4C8B4()
{
  if (!qword_1010CB5D8)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1010CB5D8);
    }
  }
}

void sub_100B4C90C()
{
  if (!qword_1010CB5E0)
  {
    sub_10006389C(&qword_1010CB5E8);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1010CB5E0);
    }
  }
}

uint64_t sub_100B4C968(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[2];
    uint64_t v9 = (void *)a2[3];
    char v10 = *((unsigned char *)a2 + 32);
    swift_retain();
    sub_100B4CAB8(v8, v9, v10);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = v10;
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    sub_100063814(&qword_1010C8950);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

id sub_100B4CAB8(uint64_t a1, void *a2, char a3)
{
  if (a3) {
    return a2;
  }
  else {
    return (id)swift_retain();
  }
}

uint64_t sub_100B4CAC8(uint64_t a1, uint64_t a2)
{
  swift_release();
  sub_100B4CB8C(*(void *)(a1 + 16), *(void **)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    id v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

void sub_100B4CB8C(uint64_t a1, void *a2, char a3)
{
  if (a3) {

  }
  else {
    swift_release();
  }
}

uint64_t sub_100B4CB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void **)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 32);
  swift_retain();
  sub_100B4CAB8(v7, v8, v9);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100B4CC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_100B4CAB8(v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void **)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  sub_100B4CB8C(v9, v10, v11);
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_1000637B8(a1 + v12, &qword_1010C8950);
    sub_100063814(&qword_1010C8950);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100B4CDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DismissAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100B4CEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  char v7 = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void **)(a1 + 24);
  char v10 = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = v7;
  sub_100B4CB8C(v8, v9, v10);
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (const void *)(a2 + v11);
    sub_1000637B8(a1 + v11, &qword_1010C8950);
    uint64_t v14 = sub_100063814(&qword_1010C8950);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for DismissAction();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100B4CFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B4CFCC);
}

uint64_t sub_100B4CFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010CD9B0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100B4D080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B4D094);
}

uint64_t sub_100B4D094(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010CD9B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CitySelectionView(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010CB648);
}

void sub_100B4D160()
{
  sub_100B4D200();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100B4D200()
{
  if (!qword_1010CDA30)
  {
    type metadata accessor for DismissAction();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1010CDA30);
    }
  }
}

uint64_t sub_100B4D258()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B4D274@<X0>(uint64_t a1@<X8>)
{
  return sub_100B4AD28(*(void *)(v1 + 16), a1);
}

unint64_t sub_100B4D27C()
{
  unint64_t result = qword_1010CB6A0;
  if (!qword_1010CB6A0)
  {
    sub_10006389C(&qword_1010CB698);
    sub_100063858(&qword_1010CB6A8, &qword_1010CB6B0);
    sub_100063858(&qword_1010CB6B8, &qword_1010CB6C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB6A0);
  }
  return result;
}

void sub_100B4D344(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_100B4BD10(v1, v2);
}

uint64_t sub_100B4D38C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CitySelectionView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B4D3F0()
{
  uint64_t v1 = (int *)(type metadata accessor for CitySelectionView(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  sub_100B4CB8C(*(void *)(v2 + 16), *(void **)(v2 + 24), *(unsigned char *)(v2 + 32));
  uint64_t v3 = v2 + v1[8];
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100B4D514(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CitySelectionView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B4D578@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for CitySelectionView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100B4B0A4(a1, v6, a2);
}

double sub_100B4D5F8@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  return result;
}

uint64_t sub_100B4D688(void *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v1 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[5];
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  long long v9 = v6;
  long long v10 = v7;
  long long v11 = v8;
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)&long long v7 = v2;
  *((void *)&v7 + 1) = v1;
  *(void *)&long long v8 = v3;
  *((void *)&v8 + 1) = v4;
  swift_retain();
  static Published.subscript.setter();
  sub_100B51E60((uint64_t)&v9);
  long long v12 = v9;
  sub_1001ECE50((uint64_t)&v12);
  long long v6 = v10;
  return sub_1001ECE50((uint64_t)&v6);
}

uint64_t sub_100B4D7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100063814(&qword_1010CB5E8);
  sub_100063814(&qword_1010CB6F0);
  sub_100063858(&qword_1010CB700, &qword_1010CB5E8);
  sub_100B4DA40(&qword_1010CB708, (void (*)(uint64_t))sub_100B4DA88);
  sub_100063858(&qword_1010CB6E8, &qword_1010CB6F0);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100B4D928()
{
  return sub_100B4D7B8(v0[2], v0[3], v0[4], v0[5]);
}

unint64_t sub_100B4D934()
{
  unint64_t result = qword_1010CB6E0;
  if (!qword_1010CB6E0)
  {
    sub_10006389C(&qword_1010CB6D8);
    sub_100063858(&qword_1010CB6E8, &qword_1010CB6F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB6E0);
  }
  return result;
}

uint64_t sub_100B4D9CC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B4DA04(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = *a1;
  return v2(&v4);
}

uint64_t sub_100B4DA40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100B4DA88()
{
  unint64_t result = qword_1010CB710;
  if (!qword_1010CB710)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010CB710);
  }
  return result;
}

uint64_t sub_100B4DAC8()
{
  uint64_t v1 = (int *)(type metadata accessor for CitySelectionView(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  swift_release();
  sub_100B4CB8C(*(void *)(v0 + v2 + 16), *(void **)(v0 + v2 + 24), *(unsigned char *)(v0 + v2 + 32));
  unint64_t v4 = v0 + v2 + v1[8];
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100B4DC08()
{
  uint64_t v1 = *(void *)(type metadata accessor for CitySelectionView(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100B4B804(v0 + v2, v3);
}

uint64_t sub_100B4DC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B4DCFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010CB720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B4DD6C()
{
  return swift_deallocObject();
}

uint64_t sub_100B4DDA4(unint64_t a1)
{
  return sub_100B4C200(a1, *(void **)(v1 + 16));
}

uint64_t sub_100B4DDAC()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100B4DDFC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *long long v9 = v2;
  v9[1] = sub_1000154F4;
  return sub_100B4C4A0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100B4DEC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t Razzmatazz.shortName.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Razzmatazz(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  uint64_t v5 = type metadata accessor for CharacterSet();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 16];
  uint64_t v9 = *(void *)(v0 + 16);
  unint64_t v10 = *(void *)(v1 + 24);
  *(void *)&long long v23 = 64;
  *((void *)&v23 + 1) = 0xE100000000000000;
  long long v22 = &v23;
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_100022970(0x7FFFFFFFFFFFFFFFLL, 1, sub_100022D90, (uint64_t)v21, v9, v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = *((void *)v11 + 2);
  if (!v12)
  {
    swift_bridgeObjectRelease();
    sub_100B4F434(v1, (uint64_t)v4);
LABEL_5:
    uint64_t v16 = *((void *)v4 + 2);
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  uint64_t v13 = &v11[32 * v12];
  long long v20 = *(_OWORD *)v13;
  uint64_t v15 = *((void *)v13 + 2);
  uint64_t v14 = *((void *)v13 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v23 = v20;
  uint64_t v24 = v15;
  uint64_t v25 = v14;
  static CharacterSet.whitespaces.getter();
  sub_100B4F3E0();
  uint64_t v16 = StringProtocol.trimmingCharacters(in:)();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  sub_100B4F434(v1, (uint64_t)v4);
  if (!v18) {
    goto LABEL_5;
  }
LABEL_6:
  sub_100B4F498((uint64_t)v4);
  return v16;
}

uint64_t sub_100B4E168(char a1)
{
  if (!a1)
  {
    sub_100B51058((uint64_t)v1, (uint64_t)&v54);
    sub_100B51058((uint64_t)&v54, (uint64_t)v45);
    uint64_t v6 = v1[3];
    uint64_t v46 = v1[2];
    uint64_t v47 = v6;
    sub_100B51058((uint64_t)(v1 + 4), (uint64_t)&v53);
    sub_100B51058((uint64_t)&v53, (uint64_t)&v48);
    uint64_t v7 = v1[7];
    uint64_t v50 = v1[6];
    uint64_t v51 = v7;
    uint64_t v9 = v45[0];
    uint64_t v8 = v45[1];
    sub_1000D230C((uint64_t)&v54);
    swift_bridgeObjectRetain();
    sub_1000D230C((uint64_t)&v53);
    if (v8)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v10 = sub_100073498(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v12 = *((void *)v10 + 2);
      unint64_t v11 = *((void *)v10 + 3);
      unint64_t v13 = v12 + 1;
      if (v12 >= v11 >> 1)
      {
        char v41 = sub_100073498((char *)(v11 > 1), v12 + 1, 1, v10);
        unint64_t v13 = v12 + 1;
        unint64_t v10 = v41;
      }
      *((void *)v10 + 2) = v13;
      uint64_t v14 = &v10[16 * v12];
      *((void *)v14 + 4) = v9;
      *((void *)v14 + 5) = v8;
      uint64_t v15 = v47;
      if (!v47) {
        goto LABEL_21;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v10 = (char *)_swiftEmptyArrayStorage;
      uint64_t v15 = v47;
      if (!v47)
      {
LABEL_21:
        uint64_t v26 = v49;
        if (v49)
        {
          uint64_t v27 = v48;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v10 = sub_100073498(0, *((void *)v10 + 2) + 1, 1, v10);
          }
          unint64_t v29 = *((void *)v10 + 2);
          unint64_t v28 = *((void *)v10 + 3);
          unint64_t v30 = v29 + 1;
          if (v29 >= v28 >> 1)
          {
            char v43 = sub_100073498((char *)(v28 > 1), v29 + 1, 1, v10);
            unint64_t v30 = v29 + 1;
            unint64_t v10 = v43;
          }
          *((void *)v10 + 2) = v30;
          uint64_t v31 = &v10[16 * v29];
          *((void *)v31 + 4) = v27;
          *((void *)v31 + 5) = v26;
        }
        uint64_t v32 = v51;
        if (v51)
        {
          uint64_t v33 = v50;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v10 = sub_100073498(0, *((void *)v10 + 2) + 1, 1, v10);
          }
          unint64_t v35 = *((void *)v10 + 2);
          unint64_t v34 = *((void *)v10 + 3);
          unint64_t v36 = v35 + 1;
          if (v35 >= v34 >> 1)
          {
            uint64_t v44 = sub_100073498((char *)(v34 > 1), v35 + 1, 1, v10);
            unint64_t v36 = v35 + 1;
            unint64_t v10 = v44;
          }
          *((void *)v10 + 2) = v36;
          uint64_t v37 = &v10[16 * v35];
          *((void *)v37 + 4) = v33;
          *((void *)v37 + 5) = v32;
        }
        sub_100063814(&qword_1010D0B40);
        swift_arrayDestroy();
        char v52 = v10;
        goto LABEL_38;
      }
    }
    uint64_t v21 = v46;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v10 = sub_100073498(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v23 = *((void *)v10 + 2);
    unint64_t v22 = *((void *)v10 + 3);
    unint64_t v24 = v23 + 1;
    if (v23 >= v22 >> 1)
    {
      char v42 = sub_100073498((char *)(v22 > 1), v23 + 1, 1, v10);
      unint64_t v24 = v23 + 1;
      unint64_t v10 = v42;
    }
    *((void *)v10 + 2) = v24;
    uint64_t v25 = &v10[16 * v23];
    *((void *)v25 + 4) = v21;
    *((void *)v25 + 5) = v15;
    goto LABEL_21;
  }
  if (a1 != 1)
  {
    uint64_t v16 = v1[5];
    if (v16)
    {
      uint64_t v17 = v1[4];
      swift_bridgeObjectRetain();
      if (String.count.getter() == 2)
      {
        sub_100063814(&qword_1010CF870);
        uint64_t v18 = swift_allocObject();
        long long v19 = *((_OWORD *)v1 + 1);
        *(_OWORD *)(v18 + 16) = xmmword_100E251F0;
        *(_OWORD *)(v18 + 32) = v19;
        *(void *)(v18 + 48) = v17;
        *(void *)(v18 + 56) = v16;
        long long v53 = *((_OWORD *)v1 + 3);
        long long v54 = v19;
        *(_OWORD *)(v18 + 64) = v53;
        char v52 = (_OWORD *)v18;
        sub_1000D230C((uint64_t)&v54);
        sub_1000D230C((uint64_t)&v53);
        sub_100063814(&qword_1010CA7C8);
        sub_100066540();
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
    }
    sub_100063814(&qword_1010CF870);
    uint64_t v38 = (_OWORD *)swift_allocObject();
    long long v39 = *((_OWORD *)v1 + 1);
    v38[1] = xmmword_100E251B0;
    v38[2] = v39;
    long long v53 = *((_OWORD *)v1 + 3);
    long long v54 = v39;
    void v38[3] = v53;
    char v52 = v38;
    sub_1000D230C((uint64_t)&v54);
    sub_1000D230C((uint64_t)&v53);
LABEL_38:
    sub_100063814(&qword_1010CA7C8);
    sub_100066540();
    uint64_t v20 = BidirectionalCollection<>.joined(separator:)();
    goto LABEL_39;
  }
  uint64_t v2 = v1[5];
  if (v2)
  {
    uint64_t v3 = v1[4];
    swift_bridgeObjectRetain();
    if (String.count.getter() == 2)
    {
      sub_100063814(&qword_1010CF870);
      uint64_t v4 = swift_allocObject();
      long long v54 = *((_OWORD *)v1 + 1);
      long long v5 = v54;
      *(_OWORD *)(v4 + 16) = xmmword_100E251B0;
      *(_OWORD *)(v4 + 32) = v5;
      *(void *)(v4 + 48) = v3;
      *(void *)(v4 + 56) = v2;
      *(void *)&long long v53 = v4;
      sub_1000D230C((uint64_t)&v54);
      sub_100063814(&qword_1010CA7C8);
      sub_100066540();
LABEL_14:
      uint64_t v20 = BidirectionalCollection<>.joined(separator:)();
LABEL_39:
      swift_bridgeObjectRelease();
      return v20;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = v1[2];
  swift_bridgeObjectRetain();
  return v20;
}

uint64_t Razzmatazz.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Razzmatazz(0) + 24);
  uint64_t v4 = type metadata accessor for Date();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t Razzmatazz.performingArtist.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Razzmatazz(0) + 28);
  uint64_t v4 = type metadata accessor for Artist();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for Razzmatazz(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010CB7D0);
}

uint64_t sub_100B4E750()
{
  if (*(void *)(v0 + 8))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40))
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100B4E850()
{
  uint64_t result = 0x73736572646461;
  switch(*v0)
  {
    case 1:
      uint64_t result = 2037672291;
      break;
    case 2:
      uint64_t result = 0x6E6F69676572;
      break;
    case 3:
      uint64_t result = 0x7972746E756F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100B4E8D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100B511B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100B4E8F8(uint64_t a1)
{
  unint64_t v2 = sub_100B5169C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B4E934(uint64_t a1)
{
  unint64_t v2 = sub_100B5169C();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_100B4E970()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  long long v1 = *(_OWORD *)(v0 + 48);
  v5[0] = *(_OWORD *)(v0 + 32);
  v5[1] = v1;
  long long v2 = *(_OWORD *)(v0 + 80);
  void v5[2] = *(_OWORD *)(v0 + 64);
  v5[3] = v2;
  sub_100B4F53C((uint64_t)v5);
  sub_100B4E750();
  sub_100B4F594((uint64_t)v5);
  id v3 = *(id *)(v0 + 96);
  NSObject.hash(into:)();

  type metadata accessor for Razzmatazz.Venue(0);
  type metadata accessor for TimeZone();
  sub_100B4F4F4(&qword_1010CB768, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

double sub_100B4EAA4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100B51354(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

Swift::Int sub_100B4EAE8()
{
  return Hasher._finalize()();
}

Swift::Int sub_100B4EB2C()
{
  return Hasher._finalize()();
}

uint64_t sub_100B4EB68(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  _OWORD v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  v8[2] = a2[2];
  void v8[3] = v5;
  return sub_100B4F60C(v7, v8) & 1;
}

uint64_t sub_100B4EBB8()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  long long v1 = *(_OWORD *)(v0 + 48);
  v5[0] = *(_OWORD *)(v0 + 32);
  v5[1] = v1;
  long long v2 = *(_OWORD *)(v0 + 80);
  void v5[2] = *(_OWORD *)(v0 + 64);
  v5[3] = v2;
  sub_100B4F53C((uint64_t)v5);
  sub_100B4E750();
  sub_100B4F594((uint64_t)v5);
  id v3 = *(id *)(v0 + 96);
  NSObject.hash(into:)();

  type metadata accessor for TimeZone();
  sub_100B4F4F4(&qword_1010CB768, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_100B4ECE0()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  long long v1 = *(_OWORD *)(v0 + 48);
  v5[0] = *(_OWORD *)(v0 + 32);
  v5[1] = v1;
  long long v2 = *(_OWORD *)(v0 + 80);
  void v5[2] = *(_OWORD *)(v0 + 64);
  v5[3] = v2;
  sub_100B4F53C((uint64_t)v5);
  sub_100B4E750();
  sub_100B4F594((uint64_t)v5);
  id v3 = *(id *)(v0 + 96);
  NSObject.hash(into:)();

  type metadata accessor for TimeZone();
  sub_100B4F4F4(&qword_1010CB768, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

uint64_t Razzmatazz.hash(into:)()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v1 = type metadata accessor for Razzmatazz(0);
  type metadata accessor for Date();
  sub_100B4F4F4(&qword_1010CB758, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for Artist();
  sub_100B4F4F4(&qword_1010CB760, (void (*)(uint64_t))&type metadata accessor for Artist);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v2 = v0 + *(int *)(v1 + 32);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  long long v3 = *(_OWORD *)(v2 + 48);
  v7[0] = *(_OWORD *)(v2 + 32);
  v7[1] = v3;
  long long v4 = *(_OWORD *)(v2 + 80);
  _OWORD v7[2] = *(_OWORD *)(v2 + 64);
  v7[3] = v4;
  sub_100B4F53C((uint64_t)v7);
  sub_100B4E750();
  sub_100B4F594((uint64_t)v7);
  id v5 = *(id *)(v2 + 96);
  NSObject.hash(into:)();

  type metadata accessor for Razzmatazz.Venue(0);
  type metadata accessor for TimeZone();
  sub_100B4F4F4(&qword_1010CB768, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int Razzmatazz.hashValue.getter()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v1 = type metadata accessor for Razzmatazz(0);
  type metadata accessor for Date();
  sub_100B4F4F4(&qword_1010CB758, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for Artist();
  sub_100B4F4F4(&qword_1010CB760, (void (*)(uint64_t))&type metadata accessor for Artist);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v2 = v0 + *(int *)(v1 + 32);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  long long v3 = *(_OWORD *)(v2 + 48);
  v7[0] = *(_OWORD *)(v2 + 32);
  v7[1] = v3;
  long long v4 = *(_OWORD *)(v2 + 80);
  _OWORD v7[2] = *(_OWORD *)(v2 + 64);
  v7[3] = v4;
  sub_100B4F53C((uint64_t)v7);
  sub_100B4E750();
  sub_100B4F594((uint64_t)v7);
  id v5 = *(id *)(v2 + 96);
  NSObject.hash(into:)();

  type metadata accessor for Razzmatazz.Venue(0);
  type metadata accessor for TimeZone();
  sub_100B4F4F4(&qword_1010CB768, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

Swift::Int sub_100B4F294()
{
  return Hasher._finalize()();
}

uint64_t sub_100B4F2D0(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v10 = *(void *)(a2 + 16) >> 14;
  int v11 = (v10 == a1 >> 14) & a3;
  if (v11 == 1) {
    return v11 ^ 1u;
  }
  if (a1 >> 14 < v10)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = a4;
  uint64_t v5 = String.subscript.getter();
  uint64_t v6 = v12;
  uint64_t v7 = v13;
  uint64_t v8 = v14;
  long long v9 = *(char **)(v4 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v4 + 16) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_9:
    long long v9 = sub_100022EEC(0, *((void *)v9 + 2) + 1, 1, v9);
    *(void *)(v4 + 16) = v9;
  }
  unint64_t v17 = *((void *)v9 + 2);
  unint64_t v16 = *((void *)v9 + 3);
  if (v17 >= v16 >> 1)
  {
    long long v9 = sub_100022EEC((char *)(v16 > 1), v17 + 1, 1, v9);
    *(void *)(v4 + 16) = v9;
  }
  *((void *)v9 + 2) = v17 + 1;
  uint64_t v18 = &v9[32 * v17];
  *((void *)v18 + 4) = v5;
  *((void *)v18 + 5) = v6;
  *((void *)v18 + 6) = v7;
  *((void *)v18 + 7) = v8;
  return v11 ^ 1u;
}

unint64_t sub_100B4F3E0()
{
  unint64_t result = qword_1010CB750;
  if (!qword_1010CB750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB750);
  }
  return result;
}

uint64_t sub_100B4F434(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Razzmatazz(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B4F498(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Razzmatazz(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100B4F4F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B4F53C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100B4F594(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for Razzmatazz.Venue(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010CB870);
}

uint64_t sub_100B4F60C(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a2[1];
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *a1 == *a2 && v4 == v5;
  if (v6 || (char v7 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    if (a1[2] != a2[2] || a1[3] != a2[3])
    {
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = 0;
      if ((v10 & 1) == 0) {
        return result;
      }
    }
    uint64_t v11 = a1[5];
    uint64_t v12 = a2[5];
    if (v11)
    {
      if (v12)
      {
        if (a1[4] != a2[4] || v11 != v12)
        {
          char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t result = 0;
          if ((v13 & 1) == 0) {
            return result;
          }
        }
LABEL_24:
        if (a1[6] == a2[6] && a1[7] == a2[7]) {
          return 1;
        }
        return _stringCompareWithSmolCheck(_:_:expecting:)();
      }
    }
    else if (!v12)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

uint64_t sub_100B4F720(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v5 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (!v5 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  long long v6 = *(_OWORD *)(a1 + 48);
  v12[0] = *(_OWORD *)(a1 + 32);
  v12[1] = v6;
  long long v7 = *(_OWORD *)(a1 + 80);
  v12[2] = *(_OWORD *)(a1 + 64);
  void v12[3] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v13[0] = *(_OWORD *)(a2 + 32);
  v13[1] = v8;
  long long v9 = *(_OWORD *)(a2 + 80);
  void v13[2] = *(_OWORD *)(a2 + 64);
  _OWORD v13[3] = v9;
  if ((sub_100B4F60C(v12, v13) & 1) == 0) {
    return 0;
  }
  sub_100B510C0();
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v10 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);

  return static TimeZone.== infix(_:_:)(a1 + v10, a2 + v10);
}

uint64_t _s11MusicCoreUI10RazzmatazzV23__derived_struct_equalsySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v5 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v5 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = type metadata accessor for Razzmatazz(0);
  if ((static Date.== infix(_:_:)() & 1) == 0 || (static Artist.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v7 = *(int *)(v6 + 32);

  return sub_100B4F720((uint64_t)a1 + v7, (uint64_t)a2 + v7);
}

uint64_t sub_100B4F8F4()
{
  return sub_100B4F4F4(&qword_1010CB770, (void (*)(uint64_t))type metadata accessor for Razzmatazz);
}

uint64_t *initializeBufferWithCopyOfBuffer for Razzmatazz(uint64_t *a1, uint64_t *a2, int *a3)
{
  BOOL v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *BOOL v4 = *a2;
    BOOL v4 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Date();
    char v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v4 + v14;
    unint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for Artist();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[8];
    long long v19 = (uint64_t *)((char *)v4 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = *(uint64_t *)((char *)a2 + v18);
    uint64_t v22 = v20[1];
    *long long v19 = v21;
    v19[1] = v22;
    uint64_t v23 = v20[3];
    _OWORD v19[2] = v20[2];
    v19[3] = v23;
    uint64_t v24 = v20[5];
    v19[4] = v20[4];
    v19[5] = v24;
    uint64_t v25 = v20[7];
    void v19[6] = v20[6];
    v19[7] = v25;
    uint64_t v26 = v20[9];
    void v19[8] = v20[8];
    v19[9] = v26;
    uint64_t v27 = v20[11];
    v19[10] = v20[10];
    v19[11] = v27;
    unint64_t v36 = (void *)v20[12];
    v19[12] = v36;
    uint64_t v28 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    unint64_t v34 = (char *)v20 + v28;
    unint64_t v35 = (char *)v19 + v28;
    uint64_t v29 = type metadata accessor for TimeZone();
    unint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v31 = v36;
    v30(v35, v34, v29);
  }
  return v4;
}

uint64_t destroy for Razzmatazz(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v10 = type metadata accessor for TimeZone();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

void *initializeWithCopy for Razzmatazz(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  long long v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = *(void *)((char *)a2 + v17);
  uint64_t v21 = v19[1];
  *uint64_t v18 = v20;
  v18[1] = v21;
  uint64_t v22 = v19[3];
  v18[2] = v19[2];
  v18[3] = v22;
  uint64_t v23 = v19[5];
  v18[4] = v19[4];
  v18[5] = v23;
  uint64_t v24 = v19[7];
  void v18[6] = v19[6];
  v18[7] = v24;
  uint64_t v25 = v19[9];
  v18[8] = v19[8];
  v18[9] = v25;
  uint64_t v26 = v19[11];
  v18[10] = v19[10];
  v18[11] = v26;
  unint64_t v34 = (void *)v19[12];
  v18[12] = v34;
  uint64_t v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v32 = (char *)v19 + v27;
  uint64_t v33 = (char *)v18 + v27;
  uint64_t v28 = type metadata accessor for TimeZone();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v30 = v34;
  v29(v33, v32, v28);
  return a1;
}

void *assignWithCopy for Razzmatazz(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  *uint64_t v15 = *(void *)((char *)a2 + v14);
  v15[1] = *(void *)((char *)a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[2] = v16[2];
  v15[3] = v16[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v15[4] = v16[4];
  v15[5] = v16[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v15[6] = v16[6];
  v15[7] = v16[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[8] = v16[8];
  v15[9] = v16[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[10] = v16[10];
  v15[11] = v16[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = (void *)v16[12];
  uint64_t v18 = (void *)v15[12];
  v15[12] = v17;
  id v19 = v17;

  uint64_t v20 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v21 = (char *)v15 + v20;
  uint64_t v22 = (char *)v16 + v20;
  uint64_t v23 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

_OWORD *initializeWithTake for Razzmatazz(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  long long v19 = *((_OWORD *)v17 + 3);
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  *((_OWORD *)v16 + 3) = v19;
  long long v20 = *((_OWORD *)v17 + 5);
  *((_OWORD *)v16 + 4) = *((_OWORD *)v17 + 4);
  *((_OWORD *)v16 + 5) = v20;
  *((void *)v16 + 12) = *((void *)v17 + 12);
  uint64_t v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v22 = &v16[v21];
  uint64_t v23 = &v17[v21];
  uint64_t v24 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

void *assignWithTake for Razzmatazz(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v16);
  long long v18 = (void *)((char *)a2 + v16);
  uint64_t v19 = *(void *)((char *)a2 + v16 + 8);
  *uint64_t v17 = *(void *)((char *)a2 + v16);
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = v18[3];
  v17[2] = v18[2];
  v17[3] = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = v18[5];
  void v17[4] = v18[4];
  v17[5] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = v18[7];
  v17[6] = v18[6];
  v17[7] = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = v18[9];
  v17[8] = v18[8];
  v17[9] = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = v18[11];
  v17[10] = v18[10];
  v17[11] = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = (void *)v17[12];
  v17[12] = v18[12];

  uint64_t v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v27 = (char *)v17 + v26;
  uint64_t v28 = (char *)v18 + v26;
  uint64_t v29 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for Razzmatazz(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B503EC);
}

uint64_t sub_100B503EC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for Date();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = type metadata accessor for Artist();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_9;
  }
  uint64_t v14 = type metadata accessor for Razzmatazz.Venue(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[8];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for Razzmatazz(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B50578);
}

uint64_t sub_100B50578(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for Date();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = type metadata accessor for Artist();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for Razzmatazz.Venue(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[8];

  return v15(v17, a2, a2, v16);
}

uint64_t sub_100B506F0()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Artist();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Razzmatazz.Venue(319);
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_100B50800(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    uint64_t v10 = a2[11];
    a1[10] = a2[10];
    a1[11] = v10;
    uint64_t v11 = (void *)a2[12];
    uint64_t v12 = *(int *)(a3 + 32);
    long long v18 = (char *)a2 + v12;
    uint64_t v19 = (char *)a1 + v12;
    a1[12] = (uint64_t)v11;
    uint64_t v13 = type metadata accessor for TimeZone();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v11;
    v17(v19, v18, v13);
  }
  return v3;
}

uint64_t sub_100B5095C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for TimeZone();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100B50A04(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  uint64_t v10 = (void *)a2[12];
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v16 = (char *)a2 + v11;
  uint64_t v17 = (char *)a1 + v11;
  a1[12] = v10;
  uint64_t v12 = type metadata accessor for TimeZone();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v10;
  v15(v17, v16, v12);
  return a1;
}

void *sub_100B50B10(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a2[12];
  uint64_t v7 = (void *)a1[12];
  a1[12] = v6;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_100B50C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = a2 + v7;
  uint64_t v9 = a1 + v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, v8, v10);
  return a1;
}

void *sub_100B50CF4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)a1[12];
  a1[12] = a2[12];

  uint64_t v13 = *(int *)(a3 + 32);
  id v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t sub_100B50DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B50DF4);
}

uint64_t sub_100B50DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for TimeZone();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100B50EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B50EB8);
}

uint64_t sub_100B50EB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for TimeZone();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100B50F60()
{
  uint64_t result = type metadata accessor for TimeZone();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100B51010()
{
  return sub_100B4F4F4(&qword_1010CB8B8, (void (*)(uint64_t))type metadata accessor for Razzmatazz.Venue);
}

uint64_t sub_100B51058(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010D0B40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100B510C0()
{
  unint64_t result = qword_1010CAA20;
  if (!qword_1010CAA20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010CAA20);
  }
  return result;
}

uint64_t sub_100B51100()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100B51138()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for Razzmatazz.Venue.Address()
{
  return &type metadata for Razzmatazz.Venue.Address;
}

unint64_t sub_100B5115C()
{
  unint64_t result = qword_1010CB8C0;
  if (!qword_1010CB8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB8C0);
  }
  return result;
}

uint64_t sub_100B511B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73736572646461 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2037672291 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F69676572 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7972746E756F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100B51354@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100063814(&qword_1010CB8C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100068990(a1, a1[3]);
  sub_100B5169C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_1000760E4((uint64_t)a1);
  }
  char v31 = 0;
  uint64_t v9 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v26 = v9;
  char v30 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v27 = v13;
  uint64_t v25 = v12;
  char v29 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v24 = v14;
  char v28 = 3;
  swift_bridgeObjectRetain();
  uint64_t v15 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v17 = v16;
  long long v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v22 = v15;
  v18(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v19 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000760E4((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v20 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v26;
  a2[1] = v11;
  a2[2] = v25;
  a2[3] = v19;
  a2[4] = v23;
  a2[5] = v20;
  a2[6] = v22;
  a2[7] = v17;
  return result;
}

unint64_t sub_100B5169C()
{
  unint64_t result = qword_1010CB8D0;
  if (!qword_1010CB8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB8D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Razzmatazz.Venue.Address.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B517BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Razzmatazz.Venue.Address.CodingKeys()
{
  return &type metadata for Razzmatazz.Venue.Address.CodingKeys;
}

unint64_t sub_100B517F8()
{
  unint64_t result = qword_1010CB8D8;
  if (!qword_1010CB8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB8D8);
  }
  return result;
}

unint64_t sub_100B51850()
{
  unint64_t result = qword_1010CB8E0;
  if (!qword_1010CB8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB8E0);
  }
  return result;
}

unint64_t sub_100B518A8()
{
  unint64_t result = qword_1010CB8E8;
  if (!qword_1010CB8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB8E8);
  }
  return result;
}

uint64_t sub_100B518FC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v48 = a1;
  sub_100063814(&qword_1010CBAA8);
  __chkstk_darwin();
  uint64_t v47 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for Razzmatazz(0);
  uint64_t v6 = *(void *)(v44 - 8);
  __chkstk_darwin();
  uint64_t v39 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v37 = (uint64_t)&v37 - v8;
  uint64_t v46 = sub_100063814(&qword_1010CBAB0);
  __chkstk_darwin();
  uint64_t v45 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (uint64_t *)((char *)&v37 - v10);
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v41 = a3 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v38 = v6;
  int64_t v42 = (unint64_t)(v13 + 63) >> 6;
  char v43 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v49 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  uint64_t v40 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v15)
    {
      unint64_t v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v19 = v18 | (v17 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v17 >= v42) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v41 + 8 * v17);
    if (!v21) {
      break;
    }
LABEL_18:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_19:
    uint64_t v23 = *(void *)(v49 + 56);
    uint64_t v24 = (uint64_t *)(*(void *)(v49 + 48) + 16 * v19);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = type metadata accessor for ShazamEvent(0);
    sub_100B5C208(v23 + *(void *)(*(void *)(v27 - 8) + 72) * v19, (uint64_t)v11 + *(int *)(v46 + 48), type metadata accessor for ShazamEvent);
    *uint64_t v11 = v25;
    v11[1] = v26;
    uint64_t v28 = v45;
    sub_10003CABC((uint64_t)v11, v45, &qword_1010CBAB0);
    swift_bridgeObjectRetain();
    uint64_t v29 = (uint64_t)v47;
    v48(v28);
    if (v3)
    {
      sub_1000637B8(v28, &qword_1010CBAB0);
      unint64_t v36 = v40;
      swift_bridgeObjectRelease();
LABEL_33:
      swift_release();
      return (uint64_t)v36;
    }
    sub_1000637B8(v28, &qword_1010CBAB0);
    if ((*v43)(v29, 1, v44) == 1)
    {
      uint64_t result = sub_1000637B8(v29, &qword_1010CBAA8);
    }
    else
    {
      uint64_t v30 = v29;
      uint64_t v31 = v37;
      sub_100B5DBD8(v30, v37, type metadata accessor for Razzmatazz);
      sub_100B5DBD8(v31, v39, type metadata accessor for Razzmatazz);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v40 = (void *)sub_100AFB750(0, v40[2] + 1, 1, v40);
      }
      unint64_t v33 = v40[2];
      unint64_t v32 = v40[3];
      if (v33 >= v32 >> 1) {
        uint64_t v40 = (void *)sub_100AFB750(v32 > 1, v33 + 1, 1, v40);
      }
      uint64_t v34 = v39;
      unint64_t v35 = v40;
      v40[2] = v33 + 1;
      uint64_t result = sub_100B5DBD8(v34, (uint64_t)v35+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v33, type metadata accessor for Razzmatazz);
    }
  }
  int64_t v22 = v17 + 1;
  if (v17 + 1 >= v42) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v41 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v17 + 2;
  if (v17 + 2 >= v42) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v41 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v17 + 3;
  if (v17 + 3 >= v42) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v41 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v17 + 4;
  if (v17 + 4 >= v42)
  {
LABEL_32:
    unint64_t v36 = v40;
    goto LABEL_33;
  }
  unint64_t v21 = *(void *)(v41 + 8 * v22);
  if (v21)
  {
LABEL_17:
    int64_t v17 = v22;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v17 >= v42) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v41 + 8 * v17);
    ++v22;
    if (v21) {
      goto LABEL_18;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100B51DEC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

void sub_100B51E60(uint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  BOOL v2 = v4[0] == *(void *)a1 && v4[1] == *(void *)(a1 + 8);
  if (!v2 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (v4[2] != *(void *)(a1 + 16) || v4[3] != *(void *)(a1 + 24))
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_10;
    }
LABEL_14:
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_100B5882C((uint64_t)v4);
    return;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  if (*(double *)&v4[4] != *(double *)(a1 + 32) || *(double *)&v4[5] != *(double *)(a1 + 40)) {
    goto LABEL_14;
  }
}

double sub_100B51FF0@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = v6;
  return result;
}

uint64_t sub_100B5207C()
{
  uint64_t v1 = sub_100063814(&qword_1010CB9F8);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__razzmatazz;
  *(void *)&long long v15 = _swiftEmptyArrayStorage;
  sub_100063814(&qword_1010C9A38);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v5, v4, v1);
  swift_beginAccess();
  strcpy((char *)&v15, "Cupertino, CA");
  HIWORD(v15) = -4864;
  strcpy((char *)&v16, "United States");
  HIWORD(v16) = -4864;
  long long v17 = xmmword_100E52650;
  Published.init(initialValue:)();
  swift_endAccess();
  sub_100B58BFC((uint64_t)v10);
  sub_10003CABC((uint64_t)v10, (uint64_t)v11, &qword_1010CB9D0);
  if (*((void *)&v11[0] + 1))
  {
    long long v12 = v11[0];
    long long v13 = v11[1];
    long long v14 = v11[2];
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    long long v15 = v7;
    long long v16 = v8;
    long long v17 = v9;
    swift_getKeyPath();
    swift_getKeyPath();
    long long v7 = v12;
    long long v8 = v13;
    long long v9 = v14;
    swift_retain();
    static Published.subscript.setter();
    sub_100B51E60((uint64_t)&v15);
    long long v18 = v15;
    sub_1001ECE50((uint64_t)&v18);
    long long v7 = v16;
    sub_1001ECE50((uint64_t)&v7);
  }
  return v0;
}

uint64_t sub_100B52310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[4] = a4;
  uint64_t v5[5] = type metadata accessor for MainActor();
  v5[6] = static MainActor.shared.getter();
  long long v9 = (uint64_t (*)(uint64_t))((char *)&dword_1010CBA10 + dword_1010CBA10);
  long long v7 = (void *)swift_task_alloc();
  v5[7] = v7;
  *long long v7 = v5;
  v7[1] = sub_100B523D8;
  return v9(a5);
}

uint64_t sub_100B523D8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B5251C, v3, v2);
}

uint64_t sub_100B5251C()
{
  uint64_t v1 = v0[8];
  swift_release();
  v0[2] = v1;
  swift_getKeyPath();
  sub_100063814(&qword_1010C9A38);
  sub_100B5983C();
  sub_100B59B98(&qword_1010CB4C0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v2 = Sequence.sorted<A>(by:comparator:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  v0[3] = v2;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_100B5267C()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  if ((*(void *)(v0 + 32) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *(void *)(v0 + 32);
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
  if ((*(void *)(v0 + 40) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = *(void *)(v0 + 40);
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  Hasher._combine(_:)(v2);
}

uint64_t sub_100B52710(void *a1)
{
  uint64_t v3 = sub_100063814(&qword_1010CB9F0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  long long v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100068990(a1, a1[3]);
  sub_100B597E8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100B528C0()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974627573;
      break;
    case 2:
      uint64_t result = 0x656475746974616CLL;
      break;
    case 3:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100B52950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100B59380(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100B52978(uint64_t a1)
{
  unint64_t v2 = sub_100B597E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B529B4(uint64_t a1)
{
  unint64_t v2 = sub_100B597E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

Swift::Int sub_100B529F0()
{
  return Hasher._finalize()();
}

Swift::Int sub_100B52A34()
{
  return Hasher._finalize()();
}

double sub_100B52A70@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100B59540(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_100B52AB4(void *a1)
{
  return sub_100B52710(a1);
}

BOOL sub_100B52ACC(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  _OWORD v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_100B57538((uint64_t)v7, (uint64_t)v8);
}

uint64_t sub_100B52B14()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__razzmatazz;
  uint64_t v2 = sub_100063814(&qword_1010CB9F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC11MusicCoreUI20RazzmatazzController__location;
  uint64_t v4 = sub_100063814(&qword_1010CBA00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_100B52C00()
{
  return type metadata accessor for RazzmatazzController(0);
}

uint64_t type metadata accessor for RazzmatazzController(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CB928);
}

void sub_100B52C28()
{
  sub_100B52CF4();
  if (v0 <= 0x3F)
  {
    sub_100B52D50();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100B52CF4()
{
  if (!qword_1010CB938)
  {
    sub_10006389C(&qword_1010C9A38);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1010CB938);
    }
  }
}

void sub_100B52D50()
{
  if (!qword_1010CB940)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1010CB940);
    }
  }
}

uint64_t initializeWithCopy for RazzmatazzController.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RazzmatazzController.Location(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for RazzmatazzController.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzController.Location()
{
  return &type metadata for RazzmatazzController.Location;
}

unint64_t sub_100B52ED8()
{
  unint64_t result = qword_1010CB9C8;
  if (!qword_1010CB9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB9C8);
  }
  return result;
}

uint64_t sub_100B52F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v9 = type metadata accessor for Artist();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  long long v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CBAB0);
  __chkstk_darwin();
  uint64_t v15 = *(int *)(v14 + 56);
  long long v16 = (void *)((char *)v26 + v15 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100B5C208(a1 + v15, (uint64_t)v16, type metadata accessor for ShazamEvent);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  swift_bridgeObjectRetain();
  sub_100B532C0(v16, a2, (uint64_t)v12, a4);
  if (v4)
  {
    if (qword_1010C85D0 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100050A90(v17, (uint64_t)qword_10112CCB8);
    swift_errorRetain();
    swift_errorRetain();
    long long v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      v26[1] = v4;
      swift_errorRetain();
      sub_100063814(&qword_1010C94D8);
      uint64_t v21 = String.init<A>(describing:)();
      *(void *)(v20 + 4) = sub_100076010(v21, v22, &v27);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Could not initialize Razzmatazz with error=%s", (uint8_t *)v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v25 = type metadata accessor for Razzmatazz(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a4, 1, 1, v25);
  }
  else
  {
    uint64_t v23 = type metadata accessor for Razzmatazz(0);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a4, 0, 1, v23);
  }
}

uint64_t sub_100B532C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v82 = a3;
  uint64_t v9 = type metadata accessor for TimeZone();
  uint64_t v80 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v81 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ShazamEvent(0);
  long long v16 = *(void **)((char *)a1 + *(int *)(v15 + 24) + 8);
  if (v16[2] && *(void *)(a2 + 16))
  {
    uint64_t v17 = v15;
    uint64_t v79 = a4;
    uint64_t v18 = v16[4];
    uint64_t v19 = v16[5];
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_100071D70(v18, v19);
    if (v21)
    {
      unint64_t v22 = (uint64_t *)(*(void *)(a2 + 56) + 104 * v20);
      uint64_t v23 = *v22;
      uint64_t v78 = v12;
      uint64_t v24 = v22[1];
      uint64_t v70 = v22[2];
      uint64_t v71 = v23;
      uint64_t v74 = v22[3];
      uint64_t v75 = v24;
      uint64_t v69 = v22[4];
      uint64_t v76 = v11;
      uint64_t v58 = v22[5];
      uint64_t v25 = v22[6];
      uint64_t v65 = v5;
      uint64_t v26 = v22[7];
      uint64_t v67 = v22[8];
      uint64_t v68 = v25;
      uint64_t v60 = v22[9];
      uint64_t v66 = v22[10];
      uint64_t v77 = v9;
      uint64_t v27 = (void *)v22[12];
      uint64_t v61 = v22[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v59 = v27;
      swift_bridgeObjectRetain();
      uint64_t v28 = v74;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v29 = *a1;
      uint64_t v30 = a1[1];
      uint64_t v31 = (char *)a1 + *(int *)(v17 + 20);
      uint64_t v32 = *((void *)v31 + 1);
      uint64_t v72 = *(void *)v31;
      uint64_t v73 = v29;
      uint64_t v62 = v32;
      uint64_t v63 = v30;
      uint64_t v33 = type metadata accessor for ShazamEvent.Attributes(0);
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v14, &v31[*(int *)(v33 + 20)], v78);
      uint64_t v34 = &v31[*(int *)(v33 + 24)];
      uint64_t v35 = v80;
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v76, v34, v77);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v64 = v14;
      uint64_t v36 = v75;
      swift_bridgeObjectRetain();
      uint64_t v37 = v28;
      swift_bridgeObjectRetain();
      uint64_t v38 = v58;
      swift_bridgeObjectRetain();
      uint64_t v39 = v26;
      swift_bridgeObjectRetain();
      uint64_t v40 = v60;
      swift_bridgeObjectRetain();
      uint64_t v41 = v61;
      swift_bridgeObjectRetain();
      uint64_t v57 = v59;
      sub_100B5AF64((uint64_t)a1, type metadata accessor for ShazamEvent);
      uint64_t v59 = (int *)type metadata accessor for Razzmatazz(0);
      int64_t v42 = v79;
      char v43 = &v79[v59[8]];
      *(void *)char v43 = v71;
      *((void *)v43 + 1) = v36;
      *((void *)v43 + 2) = v70;
      *((void *)v43 + 3) = v37;
      *((void *)v43 + 4) = v69;
      *((void *)v43 + 5) = v38;
      *((void *)v43 + 6) = v68;
      *((void *)v43 + 7) = v39;
      *((void *)v43 + 8) = v67;
      *((void *)v43 + 9) = v40;
      *((void *)v43 + 10) = v66;
      *((void *)v43 + 11) = v41;
      uint64_t v44 = v57;
      *((void *)v43 + 12) = v57;
      uint64_t v45 = type metadata accessor for Razzmatazz.Venue(0);
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v43[*(int *)(v45 + 32)], v76, v77);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v47 = v63;
      uint64_t v46 = v64;
      *(void *)int64_t v42 = v73;
      *((void *)v42 + 1) = v47;
      uint64_t v48 = v62;
      *((void *)v42 + 2) = v72;
      *((void *)v42 + 3) = v48;
      uint64_t v49 = v59;
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(&v42[v59[6]], v46, v78);
      uint64_t v50 = &v42[v49[7]];
      uint64_t v51 = type metadata accessor for Artist();
      return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 32))(v50, v82, v51);
    }
    swift_bridgeObjectRelease();
  }
  type metadata accessor for RazzmatazzAPI.CustomError(0);
  sub_100B59B98(&qword_1010CBAB8, (void (*)(uint64_t))type metadata accessor for RazzmatazzAPI.CustomError);
  swift_allocError();
  uint64_t v54 = v53;
  uint64_t v55 = *(int *)(sub_100063814(&qword_1010CBAC0) + 48);
  sub_100B5C208((uint64_t)a1, v54, type metadata accessor for ShazamEvent);
  *(void *)(v54 + v55) = a2;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  uint64_t v56 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8))(v82, v56);
  return sub_100B5AF64((uint64_t)a1, type metadata accessor for ShazamEvent);
}

uint64_t sub_100B5384C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  long long v6 = (uint64_t (*)(uint64_t))((char *)&dword_1010CBA80 + dword_1010CBA80);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100B538F8;
  return v6(a2);
}

uint64_t sub_100B538F8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100B539F8, 0, 0);
}

uint64_t sub_100B539F8()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B53A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[5] = a2;
  void v3[6] = a3;
  v3[4] = a1;
  v3[2] = a3;
  return _swift_task_switch(sub_100B53A44, 0, 0);
}

uint64_t sub_100B53A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  long long v14 = *(_OWORD *)(v9 + 32);
  *(void *)(v9 + 24) = sub_100B56650(0, *(void *)(*(void *)(v9 + 48) + 16));
  uint64_t v10 = swift_task_alloc();
  *(void *)(v9 + 56) = v10;
  *(void *)(v10 + 16) = v9 + 16;
  *(_OWORD *)(v10 + 24) = v14;
  *(void *)(v10 + 40) = v9 + 24;
  uint64_t v11 = sub_100063814(&qword_1010CBA48);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v9 + 64) = v12;
  *uint64_t v12 = v9;
  v12[1] = sub_100B53B6C;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v12, v11, (char *)&type metadata for () + 8, 0, 0, &unk_1010CBA40, v10, v11, a9);
}

uint64_t sub_100B53B6C()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100B53DD4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100B53C88;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100B53C88()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v3 = 0;
    uint64_t v4 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v5 = *(void *)(v1 + 8 * v3 + 32);
      if (v5)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = sub_100AFB770(0, v4[2] + 1, 1, v4);
        }
        unint64_t v7 = v4[2];
        unint64_t v6 = v4[3];
        if (v7 >= v6 >> 1) {
          uint64_t v4 = sub_100AFB770((void *)(v6 > 1), v7 + 1, 1, v4);
        }
        v4[2] = v7 + 1;
        v4[v7 + 4] = v5;
      }
      ++v3;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v4 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  long long v8 = *(uint64_t (**)(void *))(v0 + 8);
  return v8(v4);
}

uint64_t sub_100B53DD4()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B53E40()
{
  return 0x656372756F736572;
}

uint64_t sub_100B53E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656372756F736572 && a2 == 0xE900000000000073)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100B53F00(uint64_t a1)
{
  unint64_t v2 = sub_100B5C0B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B53F3C(uint64_t a1)
{
  unint64_t v2 = sub_100B5C0B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100B53F78@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100B5BF48(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100B53FA4(char *a1, char *a2)
{
  return sub_100AF532C(*a1, *a2);
}

Swift::Int sub_100B53FB0()
{
  return Hasher._finalize()();
}

uint64_t sub_100B5403C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100B540B4()
{
  return Hasher._finalize()();
}

uint64_t sub_100B5413C@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_101008850;
  return sub_100B55204(v2, a1, a2);
}

void sub_100B54148(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x652D6D617A616873;
  if (*v1) {
    uint64_t v2 = 0x7365756E6576;
  }
  unint64_t v3 = 0xED000073746E6576;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100B54190()
{
  if (*v0) {
    return 0x7365756E6576;
  }
  else {
    return 0x652D6D617A616873;
  }
}

uint64_t sub_100B541D4@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  v2._rawValue = &off_101008850;
  return sub_100B552E0(a1, v2, a2);
}

uint64_t sub_100B541E0(uint64_t a1)
{
  unint64_t v2 = sub_100B5E394();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B5421C(uint64_t a1)
{
  unint64_t v2 = sub_100B5E394();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B54258@<X0>(uint64_t *a1@<X8>)
{
  return sub_100B55C80((uint64_t (*)(void))sub_100B5C270, a1);
}

uint64_t sub_100B54284(char *a1, char *a2)
{
  return sub_100AF5698(*a1, *a2);
}

Swift::Int sub_100B54290()
{
  return Hasher._finalize()();
}

uint64_t sub_100B542F4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100B5433C()
{
  return Hasher._finalize()();
}

uint64_t sub_100B5439C@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_1010088A0;
  return sub_100B55204(v2, a1, a2);
}

void sub_100B543A8(uint64_t *a1@<X8>)
{
  if (*v1) {
    uint64_t v2 = 1701669236;
  }
  else {
    uint64_t v2 = 1701667182;
  }
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_100B543CC()
{
  if (*v0) {
    return 1701669236;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_100B543EC@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  v2._rawValue = &off_1010088A0;
  return sub_100B552E0(a1, v2, a2);
}

uint64_t sub_100B543F8(uint64_t a1)
{
  unint64_t v2 = sub_100B5C160();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B54434(uint64_t a1)
{
  unint64_t v2 = sub_100B5C160();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B54470@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v52 = type metadata accessor for Date();
  uint64_t v51 = *(void *)(v52 - 8);
  __chkstk_darwin();
  uint64_t v71 = (char *)v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date.ISO8601FormatStyle.TimeZoneSeparator();
  uint64_t v69 = *(void *)(v4 - 8);
  uint64_t v70 = v4;
  __chkstk_darwin();
  uint64_t v68 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date.ISO8601FormatStyle.TimeSeparator();
  uint64_t v63 = *(void *)(v6 - 8);
  uint64_t v64 = v6;
  __chkstk_darwin();
  uint64_t v65 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for Date.ISO8601FormatStyle.DateTimeSeparator();
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin();
  uint64_t v61 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for Date.ISO8601FormatStyle.DateSeparator();
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin();
  uint64_t v57 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date.ISO8601FormatStyle();
  uint64_t v66 = *(void *)(v10 - 8);
  uint64_t v67 = v10;
  __chkstk_darwin();
  uint64_t v60 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v62 = (char *)v45 - v12;
  sub_100063814(&qword_1010CBCD8);
  __chkstk_darwin();
  uint64_t v72 = (void *)((char *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v75 = type metadata accessor for TimeZone();
  uint64_t v73 = *(void *)(v75 - 8);
  __chkstk_darwin();
  uint64_t v54 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v16 = (char *)v45 - v15;
  uint64_t v17 = sub_100063814(&qword_1010CBCE0);
  uint64_t v74 = *(void *)(v17 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ShazamEvent.Attributes(0);
  __chkstk_darwin();
  unint64_t v22 = (void *)((char *)v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100068990(a1, a1[3]);
  sub_100B5C160();
  uint64_t v23 = (uint64_t)v76;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v23) {
    return sub_1000760E4((uint64_t)a1);
  }
  uint64_t v50 = v16;
  uint64_t v76 = a1;
  uint64_t v26 = v74;
  uint64_t v25 = v75;
  LOBYTE(v77) = 0;
  uint64_t v27 = v17;
  uint64_t v28 = v22;
  *unint64_t v22 = KeyedDecodingContainer.decode(_:forKey:)();
  v22[1] = v29;
  char v81 = 1;
  sub_100B5C1B4();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v48 = v19;
  uint64_t v49 = v27;
  uint64_t v46 = v77;
  uint64_t v30 = v79;
  uint64_t v47 = v78;
  uint64_t v31 = v80;
  uint64_t v32 = (uint64_t)v72;
  TimeZone.init(identifier:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v32, 1, v25) == 1)
  {
    sub_1000637B8(v32, &qword_1010CBCD8);
    type metadata accessor for RazzmatazzAPI.CustomError(0);
    sub_100B59B98(&qword_1010CBAB8, (void (*)(uint64_t))type metadata accessor for RazzmatazzAPI.CustomError);
    swift_allocError();
    *uint64_t v33 = v30;
    v33[1] = v31;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v48, v49);
    sub_1000760E4((uint64_t)v76);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v45[1] = v31;
    uint64_t v34 = v73;
    uint64_t v35 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v50, v32, v25);
    uint64_t v36 = (char *)v28 + *(int *)(v20 + 24);
    uint64_t v72 = v28;
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    v37(v36, v35, v25);
    v37(v54, v35, v25);
    (*(void (**)(char *, void, uint64_t))(v55 + 104))(v57, enum case for Date.ISO8601FormatStyle.DateSeparator.dash(_:), v56);
    (*(void (**)(char *, void, uint64_t))(v58 + 104))(v61, enum case for Date.ISO8601FormatStyle.DateTimeSeparator.standard(_:), v59);
    (*(void (**)(char *, void, uint64_t))(v63 + 104))(v65, enum case for Date.ISO8601FormatStyle.TimeSeparator.colon(_:), v64);
    (*(void (**)(char *, void, uint64_t))(v69 + 104))(v68, enum case for Date.ISO8601FormatStyle.TimeZoneSeparator.omitted(_:), v70);
    uint64_t v38 = v62;
    Date.ISO8601FormatStyle.init(dateSeparator:dateTimeSeparator:timeSeparator:timeZoneSeparator:includingFractionalSeconds:timeZone:)();
    uint64_t v77 = v46;
    uint64_t v78 = v47;
    uint64_t v40 = v66;
    uint64_t v39 = v67;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v60, v38, v67);
    sub_100B59B98(&qword_1010CBCF8, (void (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle);
    uint64_t v41 = v71;
    Date.init<A>(_:strategy:)();
    uint64_t v42 = v73;
    char v43 = v48;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v75);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v43, v49);
    uint64_t v44 = (uint64_t)v72;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))((char *)v72 + *(int *)(v20 + 20), v41, v52);
    sub_100B5C208(v44, v53, type metadata accessor for ShazamEvent.Attributes);
    sub_1000760E4((uint64_t)v76);
    return sub_100B5AF64(v44, type metadata accessor for ShazamEvent.Attributes);
  }
}

uint64_t sub_100B54F5C()
{
  if (*v0) {
    return 0x656E6F7A656D6974;
  }
  else {
    return 0x6D69547472617473;
  }
}

uint64_t sub_100B54F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100B5C498(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100B54FC4(uint64_t a1)
{
  unint64_t v2 = sub_100B5E564();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B55000(uint64_t a1)
{
  unint64_t v2 = sub_100B5E564();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B5503C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100B5C598(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_100B5506C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B54470(a1, a2);
}

uint64_t sub_100B55084(char *a1, char *a2)
{
  return sub_100AF55F4(*a1, *a2);
}

Swift::Int sub_100B55090()
{
  return Hasher._finalize()();
}

uint64_t sub_100B55110()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100B5517C()
{
  return Hasher._finalize()();
}

uint64_t sub_100B551F8@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  v2._rawValue = &off_1010088F0;
  return sub_100B55204(v2, a1, a2);
}

uint64_t sub_100B55204@<X0>(Swift::OpaquePointer cases@<0:X3>, Swift::String *a2@<X0>, char *a3@<X8>)
{
  Swift::Int v4 = _findStringSwitchCase(cases:string:)(cases, *a2);
  uint64_t result = swift_bridgeObjectRelease();
  if (v4 == 1) {
    char v6 = 1;
  }
  else {
    char v6 = 2;
  }
  if (!v4) {
    char v6 = 0;
  }
  *a3 = v6;
  return result;
}

void sub_100B55260(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x73747369747261;
  if (*v1) {
    uint64_t v2 = 0x7365756E6576;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_100B5529C()
{
  if (*v0) {
    return 0x7365756E6576;
  }
  else {
    return 0x73747369747261;
  }
}

uint64_t sub_100B552D4@<X0>(Swift::String a1@<X1:X0>, char *a2@<X8>)
{
  v2._rawValue = &off_1010088F0;
  return sub_100B552E0(a1, v2, a2);
}

uint64_t sub_100B552E0@<X0>(Swift::String string@<0:X0, 8:X1>, Swift::OpaquePointer cases@<0:X4>, char *a3@<X8>)
{
  object = string._object;
  v4._countAndFlagsBits = string._countAndFlagsBits;
  v4._object = object;
  Swift::Int v6 = _findStringSwitchCase(cases:string:)(cases, v4);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

uint64_t sub_100B55340(uint64_t a1)
{
  unint64_t v2 = sub_100B5E6B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B5537C(uint64_t a1)
{
  unint64_t v2 = sub_100B5E6B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B553B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  type metadata accessor for ShazamEvent.Attributes(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_1010CBD18);
  uint64_t v24 = *(void *)(v6 - 8);
  uint64_t v25 = v6;
  __chkstk_darwin();
  char v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ShazamEvent(0);
  __chkstk_darwin();
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = a1[3];
  uint64_t v26 = a1;
  sub_100068990(a1, v12);
  sub_100B5DB84();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_1000760E4((uint64_t)v26);
  }
  uint64_t v13 = v5;
  uint64_t v22 = v9;
  uint64_t v14 = v24;
  uint64_t v15 = v25;
  LOBYTE(v27) = 0;
  uint64_t v16 = (uint64_t)v11;
  *uint64_t v11 = KeyedDecodingContainer.decode(_:forKey:)();
  v11[1] = v17;
  LOBYTE(v27) = 1;
  sub_100B59B98(&qword_1010CBD28, (void (*)(uint64_t))type metadata accessor for ShazamEvent.Attributes);
  uint64_t v18 = (uint64_t)v13;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v19 = v22;
  sub_100B5DBD8(v18, v16 + *(int *)(v22 + 20), type metadata accessor for ShazamEvent.Attributes);
  char v28 = 2;
  sub_100B5DC40();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  *(_OWORD *)(v16 + *(int *)(v19 + 24)) = v27;
  sub_100B5C208(v16, v23, type metadata accessor for ShazamEvent);
  sub_1000760E4((uint64_t)v26);
  return sub_100B5AF64(v16, type metadata accessor for ShazamEvent);
}

uint64_t sub_100B55764()
{
  return 25705;
}

uint64_t sub_100B55770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100B557F0(uint64_t a1)
{
  unint64_t v2 = sub_100B5F33C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B5582C(uint64_t a1)
{
  unint64_t v2 = sub_100B5F33C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B55868@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100063814(&qword_1010CBF18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  char v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100068990(a1, a1[3]);
  sub_100B5F33C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_1000760E4((uint64_t)a1);
  }
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = sub_1000760E4((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_100B559E0(void *a1)
{
  uint64_t v2 = sub_100063814(&qword_1010CBF28);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100068990(a1, a1[3]);
  sub_100B5F33C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100B55B18()
{
  return 1635017060;
}

uint64_t sub_100B55B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100B55BB0(uint64_t a1)
{
  unint64_t v2 = sub_100B5EDDC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B55BEC(uint64_t a1)
{
  unint64_t v2 = sub_100B5EDDC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100B55C28@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100B5CB58(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100B55C54@<X0>(uint64_t *a1@<X8>)
{
  return sub_100B55C80((uint64_t (*)(void))sub_100B5C7A0, a1);
}

uint64_t sub_100B55C80@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100B55CB0()
{
  uint64_t v1 = 0x7475626972747461;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6F6974616C6572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_100B55D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100B5CD08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100B55D38(uint64_t a1)
{
  unint64_t v2 = sub_100B5DB84();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B55D74(uint64_t a1)
{
  unint64_t v2 = sub_100B5DB84();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B55DB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B553B8(a1, a2);
}

uint64_t sub_100B55DC8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100AF54F8(*a1, *a2);
}

Swift::Int sub_100B55DD4()
{
  return Hasher._finalize()();
}

uint64_t sub_100B55E68()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100B55EE8()
{
  return Hasher._finalize()();
}

unint64_t sub_100B55F78@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100B5CE78(*a1);
  *a2 = result;
  return result;
}

void sub_100B55FA8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE700000000000000;
  uint64_t v5 = 0x73736572646461;
  if (v2 != 1)
  {
    uint64_t v5 = 7300455;
    unint64_t v4 = 0xE300000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1701667182;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_100B55FF8()
{
  uint64_t v1 = 0x73736572646461;
  if (*v0 != 1) {
    uint64_t v1 = 7300455;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701667182;
  }
}

unint64_t sub_100B56044@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100B5CE78(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100B5606C(uint64_t a1)
{
  unint64_t v2 = sub_100B5E5B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B560A8(uint64_t a1)
{
  unint64_t v2 = sub_100B5E5B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_100B560E4()
{
  return 0xD000000000000011;
}

uint64_t sub_100B56100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100B5D284(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100B5612C(uint64_t a1)
{
  unint64_t v2 = sub_100B5ECE0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B56168(uint64_t a1)
{
  unint64_t v2 = sub_100B5ECE0();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100B561A4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100B5D30C(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_100B561E8()
{
  if (*v0) {
    return 6778476;
  }
  else {
    return 7627116;
  }
}

uint64_t sub_100B5620C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100B5D4AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100B56234(uint64_t a1)
{
  unint64_t v2 = sub_100B5ED88();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B56270(uint64_t a1)
{
  unint64_t v2 = sub_100B5ED88();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100B562AC(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_100B5D580(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
  }
}

double sub_100B562D8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100B5CEC4(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v7[4];
    *(void *)(a2 + 80) = v8;
    double result = *(double *)v7;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_100B56334()
{
  if (*v0) {
    return 0x7475626972747461;
  }
  else {
    return 25705;
  }
}

uint64_t sub_100B56368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100B5D72C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100B56390(uint64_t a1)
{
  unint64_t v2 = sub_100B5DADC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B563CC(uint64_t a1)
{
  unint64_t v2 = sub_100B5DADC();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_100B56408@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100B5D814(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(void *)(a2 + 96) = v8;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_100B56468()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100014CA4(v0, qword_10112CCB8);
  sub_100050A90(v0, (uint64_t)qword_10112CCB8);
  return static Logger.music(_:)();
}

uint64_t sub_100B564CC@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100B5654C()
{
  return static Published.subscript.setter();
}

uint64_t sub_100B565C8()
{
  return dispatch thunk of static Comparable.< infix(_:_:)() & 1;
}

void *sub_100B56650(void *result, uint64_t a2)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = result;
    if (a2)
    {
      sub_100063814(&qword_1010C9A48);
      double v4 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      long long v5 = v4;
      v4[2] = a2;
      v4[4] = v3;
      if (a2 != 1)
      {
        v4[5] = v3;
        uint64_t v6 = a2 - 2;
        if (v6)
        {
          uint64_t v7 = v4 + 6;
          do
          {
            *v7++ = v3;
            swift_bridgeObjectRetain();
            --v6;
          }
          while (v6);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    return v5;
  }
  return result;
}

uint64_t sub_100B566F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[15] = a5;
  v6[16] = a6;
  v6[13] = a3;
  v6[14] = a4;
  v6[12] = a2;
  uint64_t v7 = sub_100063814(&qword_1010CBA58);
  v6[17] = v7;
  v6[18] = *(void *)(v7 - 8);
  v6[19] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Artist();
  v6[20] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v6[21] = v9;
  v6[22] = *(void *)(v9 + 64);
  v6[23] = swift_task_alloc();
  sub_100063814(&qword_1010CAA90);
  v6[24] = swift_task_alloc();
  v6[25] = swift_task_alloc();
  uint64_t v10 = sub_100063814(&qword_1010CBA60);
  v6[26] = v10;
  v6[27] = *(void *)(v10 - 8);
  v6[28] = swift_task_alloc();
  sub_100063814(&qword_1010CBA68);
  v6[29] = swift_task_alloc();
  v6[30] = swift_task_alloc();
  return _swift_task_switch(sub_100B56908, 0, 0);
}

uint64_t sub_100B56908()
{
  uint64_t v2 = *(void *)(v1 + 216);
  uint64_t v40 = *(void *)(v1 + 208);
  unint64_t v3 = *(void *)(*(void *)(v1 + 104) + 16);
  uint64_t v39 = *(void *)(v1 + 168);
  uint64_t v38 = (void (**)(void, void, void, void))(v2 + 56);
  uint64_t v37 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  unint64_t v36 = v3;
  while (1)
  {
    if (v4 == v3)
    {
      (*v38)(*(void *)(v1 + 232), 1, 1, *(void *)(v1 + 208));
      unint64_t v5 = v3;
    }
    else
    {
      if (v4 >= v3)
      {
        __break(1u);
        goto LABEL_23;
      }
      uint64_t v6 = *(unint64_t **)(v1 + 232);
      uint64_t v7 = *(void *)(v1 + 208);
      uint64_t v8 = *(void *)(v1 + 160);
      unint64_t v5 = v4 + 1;
      uint64_t v9 = *(void *)(v1 + 224) + *(int *)(v40 + 48);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v39 + 16))(v9, *(void *)(v1 + 104)+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v4, v8);
      uint64_t v10 = (char *)v6 + *(int *)(v40 + 48);
      *uint64_t v6 = v4;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v10, v9, v8);
      (*v38)(v6, 0, 1, v7);
    }
    uint64_t v11 = *(void *)(v1 + 240);
    uint64_t v12 = *(void *)(v1 + 208);
    sub_10003CABC(*(void *)(v1 + 232), v11, &qword_1010CBA68);
    if ((*v37)(v11, 1, v12) == 1) {
      break;
    }
    unint64_t v46 = v5;
    uint64_t v13 = *(uint64_t **)(v1 + 240);
    uint64_t v14 = *(void *)(v1 + 200);
    uint64_t v41 = v14;
    uint64_t v45 = *(void *)(v1 + 192);
    uint64_t v15 = *(char **)(v1 + 184);
    uint64_t v16 = *(void *)(v1 + 160);
    uint64_t v44 = *(void *)(v1 + 120);
    uint64_t v42 = *v13;
    uint64_t v43 = *(void *)(v1 + 112);
    uint64_t v17 = (char *)v13 + *(int *)(v40 + 48);
    uint64_t v18 = type metadata accessor for TaskPriority();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v14, 1, 1, v18);
    uint64_t v20 = *(void (**)(uint64_t, char *, uint64_t))(v39 + 32);
    v20((uint64_t)v15, v17, v16);
    unint64_t v21 = (*(unsigned __int8 *)(v39 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = 0;
    uint64_t v22[3] = 0;
    v22[4] = v42;
    v22[5] = v43;
    v22[6] = v44;
    v20((uint64_t)v22 + v21, v15, v16);
    sub_10007F668(v41, v45);
    LODWORD(v21) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v45, 1, v18);
    swift_retain();
    uint64_t v23 = *(void *)(v1 + 192);
    if (v21 == 1)
    {
      sub_1000637B8(*(void *)(v1 + 192), &qword_1010CAA90);
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v18);
    }
    unint64_t v3 = v36;
    unint64_t v4 = v46;
    if (v22[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v24 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v26 = v25;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v26 = 0;
    }
    uint64_t v27 = **(void **)(v1 + 96);
    sub_100063814(&qword_1010CBA48);
    uint64_t v28 = v26 | v24;
    if (v26 | v24)
    {
      uint64_t v28 = v1 + 16;
      *(void *)(v1 + 16) = 0;
      *(void *)(v1 + 24) = 0;
      *(void *)(v1 + 32) = v24;
      *(void *)(v1 + 40) = v26;
    }
    uint64_t v0 = *(void **)(v1 + 200);
    *(void *)(v1 + 48) = 1;
    *(void *)(v1 + 56) = v28;
    *(void *)(v1 + 64) = v27;
    swift_task_create();
    swift_release();
    sub_1000637B8((uint64_t)v0, &qword_1010CAA90);
  }
  uint64_t v29 = *(void ***)(v1 + 128);
  swift_bridgeObjectRelease();
  sub_100063814(&qword_1010CBA48);
  sub_100063814(&qword_1010C94D8);
  ThrowingTaskGroup.makeAsyncIterator()();
  uint64_t v0 = *v29;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v29 = v0;
  if (isUniquelyReferenced_nonNull_native) {
    goto LABEL_17;
  }
LABEL_23:
  uint64_t v0 = sub_100C4BB80(v0);
LABEL_17:
  uint64_t v31 = *(void **)(v1 + 128);
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v31 = v0;
  if ((v32 & 1) == 0) {
    uint64_t v0 = sub_100C4BB80(v0);
  }
  **(void **)(v1 + 128) = v0;
  uint64_t v33 = (void *)swift_task_alloc();
  *(void *)(v1 + 248) = v33;
  *uint64_t v33 = v1;
  v33[1] = sub_100B56E54;
  uint64_t v34 = *(void *)(v1 + 136);
  return __sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v1 + 72, 0, 0, v34, v1 + 88);
}

uint64_t sub_100B56E54()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_100B57138;
  }
  else {
    uint64_t v1 = sub_100B56F64;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_100B56F64()
{
  uint64_t v1 = v0[10];
  if (v1)
  {
    uint64_t v2 = (void **)v0[16];
    unint64_t v3 = v0[9];
    unint64_t v4 = *v2;
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    void *v2 = v4;
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v3 & 0x8000000000000000) == 0) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v13 = (uint64_t *)v0[16];
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_100C4BB80(v4);
      unint64_t v4 = (void *)isUniquelyReferenced_nonNull_native;
      *uint64_t v13 = isUniquelyReferenced_nonNull_native;
      if ((v3 & 0x8000000000000000) == 0)
      {
LABEL_4:
        if (v3 < v4[2])
        {
          swift_bridgeObjectRelease();
          v4[v3 + 4] = v1;
          uint64_t v10 = (void *)swift_task_alloc();
          v0[31] = v10;
          *uint64_t v10 = v0;
          v10[1] = sub_100B56E54;
          uint64_t v8 = v0[17];
          uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)(v0 + 9);
          uint64_t v6 = 0;
          uint64_t v7 = 0;
          uint64_t v9 = v0 + 11;
          return __sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(isUniquelyReferenced_nonNull_native, v6, v7, v8, v9);
        }
LABEL_13:
        __break(1u);
        return __sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(isUniquelyReferenced_nonNull_native, v6, v7, v8, v9);
      }
    }
    __break(1u);
    goto LABEL_13;
  }
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100B57138()
{
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100B57210(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *a3;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1010CBA50
                                                                                     + dword_1010CBA50);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1000154F4;
  return v15(a1, a2, v12, a4, a5, a6);
}

uint64_t sub_100B572F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int *a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[3] = a1;
  _OWORD v7[4] = a4;
  uint64_t v11 = (int *)((char *)a5 + *a5);
  uint64_t v9 = (void *)swift_task_alloc();
  _OWORD v7[5] = v9;
  *uint64_t v9 = v7;
  v9[1] = sub_100B573E8;
  return ((uint64_t (*)(void *, uint64_t))v11)(v7 + 2, a7);
}

uint64_t sub_100B573E8()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100B57520;
  }
  else {
    uint64_t v2 = sub_100B574FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100B574FC()
{
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 16);
  *uint64_t v1 = *(void *)(v0 + 32);
  v1[1] = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100B57520()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_100B57538(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
      return *(double *)(a1 + 32) == *(double *)(a2 + 32) && *(double *)(a1 + 40) == *(double *)(a2 + 40);
    }
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    BOOL result = 0;
    if (v8) {
      return *(double *)(a1 + 32) == *(double *)(a2 + 32) && *(double *)(a1 + 40) == *(double *)(a2 + 40);
    }
  }
  return result;
}

uint64_t sub_100B575D8(uint64_t a1)
{
  v1[7] = a1;
  uint64_t v2 = type metadata accessor for URLRequest();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v1[11] = v3;
  v1[12] = *(void *)(v3 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date.ISO8601FormatStyle();
  v1[15] = v4;
  v1[16] = *(void *)(v4 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Date();
  v1[21] = v5;
  v1[22] = *(void *)(v5 - 8);
  v1[23] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Locale();
  v1[24] = v6;
  v1[25] = *(void *)(v6 - 8);
  v1[26] = swift_task_alloc();
  sub_100063814(&qword_1010C8CC0);
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  sub_100063814(&qword_1010CBA88);
  v1[29] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URLComponents();
  v1[30] = v7;
  v1[31] = *(void *)(v7 - 8);
  v1[32] = swift_task_alloc();
  return _swift_task_switch(sub_100B5790C, 0, 0);
}

uint64_t sub_100B5790C()
{
  v0[33] = Artist.catalogID.getter();
  v0[34] = v1;
  if (v1)
  {
    uint64_t v2 = v0[28];
    uint64_t v3 = v0[11];
    uint64_t v4 = v0[12];
    URL.init(string:)();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    uint64_t v6 = v5(v2, 1, v3);
    if (v6 == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v39 = v5;
      uint64_t v9 = v0[30];
      uint64_t v8 = v0[31];
      uint64_t v11 = v0[28];
      uint64_t v10 = v0[29];
      uint64_t v12 = v0[11];
      uint64_t v13 = v0[12];
      URLComponents.init(url:resolvingAgainstBaseURL:)();
      uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v0[35] = v14;
      v0[36] = (v13 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v14(v11, v12);
      uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v9);
      if (v6 != 1)
      {
        uint64_t v15 = v0[26];
        uint64_t v38 = v0[27];
        uint64_t v16 = v0[25];
        uint64_t v35 = v0[22];
        uint64_t v36 = v0[21];
        uint64_t v34 = v0[20];
        uint64_t v33 = v0[19];
        uint64_t v31 = v0[23];
        uint64_t v32 = v0[18];
        uint64_t v17 = v0[16];
        uint64_t v29 = v0[24];
        uint64_t v30 = v0[17];
        uint64_t v18 = v0[15];
        uint64_t v37 = v0[11];
        (*(void (**)(void))(v0[31] + 32))();
        sub_100063814(&qword_1010CBA90);
        type metadata accessor for URLQueryItem();
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_100E251F0;
        static Locale.current.getter();
        Locale.identifier.getter();
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v29);
        URLQueryItem.init(name:value:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        URLQueryItem.init(name:value:)();
        swift_bridgeObjectRelease();
        static Date.now.getter();
        static FormatStyle<>.iso8601.getter();
        Date.ISO8601FormatStyle.day()();
        uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
        v19(v30, v18);
        Date.ISO8601FormatStyle.month()();
        v19(v32, v18);
        Date.ISO8601FormatStyle.year()();
        v19(v33, v18);
        sub_100B59B98(&qword_1010CBA98, (void (*)(uint64_t))&type metadata accessor for Date.ISO8601FormatStyle);
        Date.formatted<A>(_:)();
        v19(v34, v18);
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v31, v36);
        URLQueryItem.init(name:value:)();
        swift_bridgeObjectRelease();
        URLComponents.queryItems.setter();
        URLComponents.url.getter();
        int v20 = v39(v38, 1, v37);
        uint64_t v21 = v0[27];
        if (v20 == 1)
        {
          swift_bridgeObjectRelease();
          sub_1000637B8(v21, &qword_1010C8CC0);
          (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
          goto LABEL_6;
        }
        uint64_t v25 = v0[13];
        uint64_t v24 = v0[14];
        uint64_t v26 = v0[11];
        uint64_t v27 = v0[12];
        (*(void (**)(uint64_t, void, uint64_t))(v27 + 32))(v24, v0[27], v26);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v25, v24, v26);
        URLRequest.init(url:cachePolicy:timeoutInterval:)();
        v0[37] = [self sharedSession];
        uint64_t v28 = (void *)swift_task_alloc();
        v0[38] = v28;
        *uint64_t v28 = v0;
        v28[1] = sub_100B57F24;
        uint64_t v6 = v0[10];
        uint64_t v7 = 0;
        return NSURLSession.data(for:delegate:)(v6, v7);
      }
    }
    __break(1u);
    return NSURLSession.data(for:delegate:)(v6, v7);
  }
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void *))v0[1];
  return v22(_swiftEmptyArrayStorage);
}

uint64_t sub_100B57F24(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (void *)*v4;
  v6[39] = a1;
  v6[40] = a2;
  v6[41] = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v7 = sub_100B584D8;
  }
  else
  {
    uint64_t v8 = (void *)v6[37];

    uint64_t v7 = sub_100B58054;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100B58054()
{
  uint64_t v33 = v0;
  uint64_t v1 = v0[41];
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_100B59BE0();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t v3 = v0[39];
  unint64_t v2 = v0[40];
  if (v1)
  {
    sub_10007A5C4(v0[39], v0[40]);
    swift_release();
    if (qword_1010C85D0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100050A90(v4, (uint64_t)qword_10112CCB8);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      v32[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v8 = MusicItemID.description.getter();
      unint64_t v10 = v9;
      swift_bridgeObjectRelease();
      *(void *)(v7 + 4) = sub_100076010(v8, v10, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v7 + 12) = 2080;
      v0[6] = v1;
      swift_errorRetain();
      sub_100063814(&qword_1010C94D8);
      uint64_t v11 = String.init<A>(describing:)();
      *(void *)(v7 + 14) = sub_100076010(v11, v12, v32);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Could not load for artistID=%s with error=%s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v18 = (void (*)(uint64_t, uint64_t))v0[35];
    uint64_t v19 = v0[14];
    uint64_t v21 = v0[10];
    uint64_t v20 = v0[11];
    uint64_t v22 = v0[8];
    uint64_t v23 = v0[9];
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v18(v19, v20);
    uint64_t v31 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v30 = (void (*)(uint64_t, uint64_t))v0[35];
    uint64_t v28 = v0[11];
    uint64_t v29 = v0[14];
    uint64_t v13 = v0[9];
    uint64_t v14 = v0[7];
    uint64_t v26 = v0[8];
    uint64_t v27 = v0[10];
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v16 = v0[4];
    uint64_t v15 = v0[5];
    uint64_t v17 = (void *)swift_task_alloc();
    v17[2] = v16;
    v17[3] = v15;
    void v17[4] = v14;
    swift_bridgeObjectRetain();
    uint64_t v31 = (void *)sub_100B518FC((void (*)(uint64_t))sub_100B59C34, (uint64_t)v17, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10007A5C4(v3, v2);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v27, v26);
    v30(v29, v28);
  }
  (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void *))v0[1];
  return v24(v31);
}

uint64_t sub_100B584D8()
{
  uint64_t v20 = v0;

  uint64_t v1 = *(void *)(v0 + 328);
  if (qword_1010C85D0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100050A90(v2, (uint64_t)qword_10112CCB8);
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v6 = MusicItemID.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v5 + 4) = sub_100076010(v6, v8, &v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 12) = 2080;
    *(void *)(v0 + 48) = v1;
    swift_errorRetain();
    sub_100063814(&qword_1010C94D8);
    uint64_t v9 = String.init<A>(describing:)();
    *(void *)(v5 + 14) = sub_100076010(v9, v10, &v19);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Could not load for artistID=%s with error=%s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 280);
  uint64_t v12 = *(void *)(v0 + 112);
  uint64_t v14 = *(void *)(v0 + 80);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v15 = *(void *)(v0 + 64);
  uint64_t v16 = *(void *)(v0 + 72);
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  v11(v12, v13);
  (*(void (**)(void, void))(*(void *)(v0 + 248) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 240));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void *))(v0 + 8);
  return v17(_swiftEmptyArrayStorage);
}

void sub_100B5882C(uint64_t a1)
{
  sub_10003CABC(a1, (uint64_t)v9, &qword_1010CB9D0);
  if (*((void *)&v9[0] + 1))
  {
    long long v10 = v9[0];
    long long v11 = v9[1];
    long long v12 = v9[2];
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    JSONEncoder.init()();
    sub_100B58BA8();
    uint64_t v3 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    unint64_t v5 = v4;
    swift_release();
    long long v13 = v10;
    sub_1001ECE50((uint64_t)&v13);
    long long v14 = v11;
    sub_1001ECE50((uint64_t)&v14);
    id v6 = [self standardUserDefaults];
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    NSString v8 = String._bridgeToObjectiveC()();
    [v6 setValue:isa forKey:v8];

    sub_10007A5C4(v3, v5);
  }
  else
  {
    id v1 = [self standardUserDefaults];
    NSString v2 = String._bridgeToObjectiveC()();
    [v1 setValue:0 forKey:v2];
  }
}

unint64_t sub_100B58BA8()
{
  unint64_t result = qword_1010CB9D8;
  if (!qword_1010CB9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB9D8);
  }
  return result;
}

uint64_t sub_100B58BFC@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self standardUserDefaults];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 valueForKey:v3];

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_10003CABC((uint64_t)v18, (uint64_t)v13, &qword_1010CAD00);
  if (!v14)
  {
    uint64_t result = sub_1000637B8((uint64_t)v13, &qword_1010CAD00);
    goto LABEL_8;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_8:
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    long long v12 = 0uLL;
    goto LABEL_9;
  }
  uint64_t v7 = v16;
  unint64_t v6 = v17;
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  sub_100B59CB4();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  sub_10007A5C4(v7, v6);
  uint64_t result = swift_release();
  uint64_t v8 = v13[0];
  uint64_t v9 = v13[1];
  uint64_t v10 = v13[2];
  uint64_t v11 = v14;
  long long v12 = v15;
LABEL_9:
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(_OWORD *)(a1 + 32) = v12;
  return result;
}

uint64_t sub_100B58F54(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100B58F74, 0, 0);
}

uint64_t sub_100B58F74()
{
  swift_getKeyPath();
  sub_100B5EE30(&qword_1010CBA18, &qword_1010C9DE8, (void (*)(void))sub_10006F640);
  uint64_t v1 = Array.removingDuplicates<A>(with:)();
  *(void *)(v0 + 24) = v1;
  swift_release();
  id v4 = (char *)&dword_1010CBA30 + dword_1010CBA30;
  id v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  void *v2 = v0;
  v2[1] = sub_100B590A4;
  return ((uint64_t (*)(void *, void, uint64_t))v4)(&unk_1010CBA28, 0, v1);
}

uint64_t sub_100B590A4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100B591C4, 0, 0);
}

uint64_t sub_100B591C4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    uint64_t v5 = _swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease();
    long long v15 = *(uint64_t (**)(void *))(v0 + 8);
    return v15(v5);
  }
  uint64_t v3 = (uint64_t *)(v1 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v5 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v6 = *v3;
    uint64_t v7 = *(void *)(*v3 + 16);
    int64_t v8 = v5[2];
    int64_t v9 = v8 + v7;
    if (__OFADD__(v8, v7)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result && v9 <= v5[3] >> 1)
    {
      if (*(void *)(v6 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v8 <= v9) {
        int64_t v10 = v8 + v7;
      }
      else {
        int64_t v10 = v8;
      }
      uint64_t result = sub_100AFB750(result, v10, 1, v5);
      uint64_t v5 = (void *)result;
      if (*(void *)(v6 + 16))
      {
LABEL_14:
        uint64_t v11 = (v5[3] >> 1) - v5[2];
        uint64_t result = type metadata accessor for Razzmatazz(0);
        if (v11 < v7) {
          goto LABEL_25;
        }
        uint64_t result = swift_arrayInitWithCopy();
        if (v7)
        {
          uint64_t v12 = v5[2];
          BOOL v13 = __OFADD__(v12, v7);
          uint64_t v14 = v12 + v7;
          if (v13) {
            goto LABEL_26;
          }
          void v5[2] = v14;
        }
        goto LABEL_4;
      }
    }
    if (v7)
    {
      __break(1u);
      break;
    }
LABEL_4:
    uint64_t result = swift_bridgeObjectRelease();
    ++v3;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100B59380(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100B59540@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100063814(&qword_1010CB9E0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  int64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100068990(a1, a1[3]);
  sub_100B597E8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_1000760E4((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  char v23 = 1;
  swift_bridgeObjectRetain();
  uint64_t v19 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v20 = v12;
  char v22 = 2;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v14 = v13;
  char v21 = 3;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1000760E4((uint64_t)a1);
  uint64_t v17 = v20;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v19;
  a2[3] = v17;
  a2[4] = v14;
  a2[5] = v16;
  return result;
}

unint64_t sub_100B597E8()
{
  unint64_t result = qword_1010CB9E8;
  if (!qword_1010CB9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB9E8);
  }
  return result;
}

unint64_t sub_100B5983C()
{
  unint64_t result = qword_1010CB4B8;
  if (!qword_1010CB4B8)
  {
    sub_10006389C(&qword_1010C9A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB4B8);
  }
  return result;
}

uint64_t sub_100B598A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Artist.catalogID.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100B598CC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (uint64_t *)v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_1000154F4;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_1010CBA38
                                                                                       + dword_1010CBA38);
  return v11(a1, a2, v6, v7, v9, v8);
}

uint64_t sub_100B599A8()
{
  uint64_t v1 = type metadata accessor for Artist();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100B59A7C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Artist() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (int *)v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100081D08;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_1010CBA70
                                                                                            + dword_1010CBA70);
  return v12(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100B59B98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100B59BE0()
{
  unint64_t result = qword_1010CBAA0;
  if (!qword_1010CBAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBAA0);
  }
  return result;
}

uint64_t sub_100B59C34@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_100B52F34(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t type metadata accessor for ShazamEvent(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010CBC68);
}

uint64_t type metadata accessor for RazzmatazzAPI.CustomError(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010CBBD8);
}

uint64_t type metadata accessor for ShazamEvent.Attributes(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010CBB28);
}

unint64_t sub_100B59CB4()
{
  unint64_t result = qword_1010CBAC8;
  if (!qword_1010CBAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBAC8);
  }
  return result;
}

uint64_t *sub_100B59D08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_100B59E48(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for TimeZone();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *sub_100B59F08(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

void *sub_100B59FF8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *sub_100B5A0E4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void *sub_100B5A1B8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_100B5A294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B5A2A8);
}

uint64_t sub_100B5A2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for TimeZone();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100B5A3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B5A3E8);
}

uint64_t sub_100B5A3E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for TimeZone();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_100B5A514()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TimeZone();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void destroy for VenueElement(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 96);
}

void *initializeWithCopy for VenueElement(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = (void *)a2[12];
  a1[12] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v9;
  return a1;
}

void *assignWithCopy for VenueElement(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[12];
  uint64_t v5 = (void *)a1[12];
  a1[12] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for VenueElement(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void **)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);

  return a1;
}

ValueMetadata *type metadata accessor for VenueElement()
{
  return &type metadata for VenueElement;
}

uint64_t *sub_100B5A89C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v29 = type metadata accessor for ShazamEvent(0);
      uint64_t v8 = *(int *)(v29 + 20);
      uint64_t v9 = (uint64_t *)((char *)a1 + v8);
      id v10 = (char *)a2 + v8;
      uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
      *uint64_t v9 = *(uint64_t *)((char *)a2 + v8);
      v9[1] = v11;
      uint64_t v12 = type metadata accessor for ShazamEvent.Attributes(0);
      uint64_t v13 = *(int *)(v12 + 20);
      uint64_t v27 = &v10[v13];
      uint64_t v28 = (char *)v9 + v13;
      uint64_t v14 = type metadata accessor for Date();
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26(v28, v27, v14);
      uint64_t v15 = *(int *)(v12 + 24);
      uint64_t v16 = (char *)v9 + v15;
      uint64_t v17 = &v10[v15];
      uint64_t v18 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      uint64_t v19 = *(int *)(v29 + 24);
      uint64_t v20 = (uint64_t *)((char *)a1 + v19);
      char v21 = (uint64_t *)((char *)a2 + v19);
      uint64_t v22 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_100063814(&qword_1010CBAC0);
      *(uint64_t *)((char *)a1 + *(int *)(v23 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v23 + 48));
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100B5AA9C(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = a1 + *(int *)(type metadata accessor for ShazamEvent(0) + 20);
    swift_bridgeObjectRelease();
    uint64_t v5 = type metadata accessor for ShazamEvent.Attributes(0);
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    uint64_t v8 = v4 + *(int *)(v5 + 24);
    uint64_t v9 = type metadata accessor for TimeZone();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100063814(&qword_1010CBAC0);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100B5ABDC(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v26 = type metadata accessor for ShazamEvent(0);
    uint64_t v6 = *(int *)(v26 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
    *uint64_t v7 = *(void *)((char *)a2 + v6);
    v7[1] = v9;
    uint64_t v10 = type metadata accessor for ShazamEvent.Attributes(0);
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v24 = &v8[v11];
    uint64_t v25 = (char *)v7 + v11;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v25, v24, v12);
    uint64_t v14 = *(int *)(v10 + 24);
    uint64_t v15 = (char *)v7 + v14;
    uint64_t v16 = &v8[v14];
    uint64_t v17 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = *(int *)(v26 + 24);
    uint64_t v19 = (void *)((char *)a1 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_100063814(&qword_1010CBAC0);
    *(void *)((char *)a1 + *(int *)(v22 + 48)) = *(void *)((char *)a2 + *(int *)(v22 + 48));
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100B5AD80(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100B5AF64((uint64_t)a1, type metadata accessor for RazzmatazzAPI.CustomError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v23 = type metadata accessor for ShazamEvent(0);
      uint64_t v5 = *(int *)(v23 + 20);
      uint64_t v6 = (void *)((char *)a1 + v5);
      uint64_t v7 = (char *)a2 + v5;
      *uint64_t v6 = *(void *)((char *)a2 + v5);
      v6[1] = *(void *)((char *)a2 + v5 + 8);
      uint64_t v8 = type metadata accessor for ShazamEvent.Attributes(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v21 = &v7[v9];
      uint64_t v22 = (char *)v6 + v9;
      uint64_t v10 = type metadata accessor for Date();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v22, v21, v10);
      uint64_t v11 = *(int *)(v8 + 24);
      uint64_t v12 = (char *)v6 + v11;
      uint64_t v13 = &v7[v11];
      uint64_t v14 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      uint64_t v15 = *(int *)(v23 + 24);
      uint64_t v16 = (void *)((char *)a1 + v15);
      uint64_t v17 = (void *)((char *)a2 + v15);
      *uint64_t v16 = *v17;
      v16[1] = v17[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_100063814(&qword_1010CBAC0);
      *(void *)((char *)a1 + *(int *)(v18 + 48)) = *(void *)((char *)a2 + *(int *)(v18 + 48));
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100B5AF64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_100B5AFC4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = type metadata accessor for ShazamEvent(0);
    uint64_t v7 = *(int *)(v6 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for ShazamEvent.Attributes(0);
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v12 = &v8[v11];
    uint64_t v13 = &v9[v11];
    uint64_t v14 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    uint64_t v15 = *(int *)(v10 + 24);
    uint64_t v16 = &v8[v15];
    uint64_t v17 = &v9[v15];
    uint64_t v18 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    *(_OWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 24));
    uint64_t v19 = sub_100063814(&qword_1010CBAC0);
    *(void *)((char *)a1 + *(int *)(v19 + 48)) = *(void *)((char *)a2 + *(int *)(v19 + 48));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_100B5B140(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100B5AF64((uint64_t)a1, type metadata accessor for RazzmatazzAPI.CustomError);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = type metadata accessor for ShazamEvent(0);
      uint64_t v7 = *(int *)(v6 + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
      uint64_t v10 = type metadata accessor for ShazamEvent.Attributes(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = &v8[v11];
      uint64_t v13 = &v9[v11];
      uint64_t v14 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      uint64_t v15 = *(int *)(v10 + 24);
      uint64_t v16 = &v8[v15];
      uint64_t v17 = &v9[v15];
      uint64_t v18 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(_OWORD *)((char *)a1 + *(int *)(v6 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v6 + 24));
      uint64_t v19 = sub_100063814(&qword_1010CBAC0);
      *(void *)((char *)a1 + *(int *)(v19 + 48)) = *(void *)((char *)a2 + *(int *)(v19 + 48));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100B5B2E0()
{
  v2[4] = &unk_100E57348;
  uint64_t result = type metadata accessor for ShazamEvent(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_100B5B38C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *uint64_t v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    uint64_t v12 = type metadata accessor for ShazamEvent.Attributes(0);
    uint64_t v13 = *(int *)(v12 + 20);
    uint64_t v26 = &v10[v13];
    uint64_t v27 = (char *)v9 + v13;
    uint64_t v14 = type metadata accessor for Date();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v27, v26, v14);
    uint64_t v15 = *(int *)(v12 + 24);
    uint64_t v16 = (char *)v9 + v15;
    uint64_t v17 = &v10[v15];
    uint64_t v18 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = *(int *)(a3 + 24);
    uint64_t v20 = (uint64_t *)((char *)v4 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100B5B524(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for ShazamEvent.Attributes(0);
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v4 + *(int *)(v5 + 24);
  uint64_t v9 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_100B5B620(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = v9;
  uint64_t v10 = type metadata accessor for ShazamEvent.Attributes(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v23 = &v8[v11];
  uint64_t v24 = (char *)v7 + v11;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v24, v23, v12);
  uint64_t v14 = *(int *)(v10 + 24);
  uint64_t v15 = (char *)v7 + v14;
  uint64_t v16 = &v8[v14];
  uint64_t v17 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100B5B764(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (char *)a2 + v6;
  *uint64_t v7 = *(void *)((char *)a2 + v6);
  v7[1] = *(void *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = type metadata accessor for ShazamEvent.Attributes(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = &v8[v10];
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = *(int *)(v9 + 24);
  uint64_t v15 = (char *)v7 + v14;
  uint64_t v16 = &v8[v14];
  uint64_t v17 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_100B5B8CC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(_OWORD *)((char *)a1 + v6) = *(_OWORD *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for ShazamEvent.Attributes(0);
  uint64_t v10 = *(int *)(v9 + 20);
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = *(int *)(v9 + 24);
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_100B5B9D4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)((char *)a2 + v7 + 8);
  *uint64_t v8 = *(void *)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for ShazamEvent.Attributes(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = &v9[v12];
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = (char *)v8 + v16;
  uint64_t v18 = &v9[v16];
  uint64_t v19 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (void *)((char *)a2 + v20);
  *(void *)((char *)a1 + v20) = *v22;
  swift_bridgeObjectRelease();
  *((void *)v21 + 1) = v22[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B5BB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B5BB20);
}

uint64_t sub_100B5BB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ShazamEvent.Attributes(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100B5BBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B5BBE4);
}

uint64_t sub_100B5BBE4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ShazamEvent.Attributes(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100B5BC8C()
{
  uint64_t result = type metadata accessor for ShazamEvent.Attributes(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Root()
{
  return &type metadata for Root;
}

unsigned char *storeEnumTagSinglePayload for RazzmatazzController.Location.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B5BE08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RazzmatazzController.Location.CodingKeys()
{
  return &type metadata for RazzmatazzController.Location.CodingKeys;
}

unint64_t sub_100B5BE44()
{
  unint64_t result = qword_1010CBCA8;
  if (!qword_1010CBCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBCA8);
  }
  return result;
}

unint64_t sub_100B5BE9C()
{
  unint64_t result = qword_1010CBCB0;
  if (!qword_1010CBCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBCB0);
  }
  return result;
}

unint64_t sub_100B5BEF4()
{
  unint64_t result = qword_1010CBCB8;
  if (!qword_1010CBCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBCB8);
  }
  return result;
}

void *sub_100B5BF48(void *a1)
{
  uint64_t v3 = sub_100063814(&qword_1010CBCC0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100068990(a1, a1[3]);
  sub_100B5C0B8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_1000760E4((uint64_t)a1);
  }
  else
  {
    sub_100B5C10C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = v9;
    sub_1000760E4((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_100B5C0B8()
{
  unint64_t result = qword_1010CBCC8;
  if (!qword_1010CBCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBCC8);
  }
  return result;
}

unint64_t sub_100B5C10C()
{
  unint64_t result = qword_1010CBCD0;
  if (!qword_1010CBCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBCD0);
  }
  return result;
}

unint64_t sub_100B5C160()
{
  unint64_t result = qword_1010CBCE8;
  if (!qword_1010CBCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBCE8);
  }
  return result;
}

unint64_t sub_100B5C1B4()
{
  unint64_t result = qword_1010CBCF0;
  if (!qword_1010CBCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBCF0);
  }
  return result;
}

uint64_t sub_100B5C208(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B5C270(void *a1)
{
  uint64_t v3 = sub_100063814(&qword_1010CBD98);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  unsigned int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  sub_100068990(a1, v7);
  sub_100B5E394();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_1000760E4((uint64_t)a1);
  }
  else
  {
    sub_100063814(&qword_1010CBDA8);
    HIBYTE(v9) = 0;
    sub_100B5E3E8();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v7 = v10;
    sub_100063814(&qword_1010CBDC0);
    HIBYTE(v9) = 1;
    sub_100B5E494();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_1000760E4((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_100B5C498(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E6F7A656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100B5C598(void *a1)
{
  uint64_t v3 = sub_100063814(&qword_1010CBDD8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_100068990(a1, a1[3]);
  sub_100B5E564();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_1000760E4((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = KeyedDecodingContainer.decode(_:forKey:)();
    char v10 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    sub_1000760E4((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

void *sub_100B5C7A0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100063814(&qword_1010CBE08);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)a1[3];
  sub_100068990(a1, (uint64_t)v8);
  sub_100B5E6B4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_1000760E4((uint64_t)a1);
  }
  else
  {
    char v34 = 0;
    unint64_t v9 = sub_100B5E708();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    char v11 = v35;
    int64_t v12 = v35[2];
    uint64_t v33 = v7;
    if (v12)
    {
      v28[1] = v9;
      uint64_t v30 = v5;
      uint64_t v31 = v4;
      uint64_t v32 = 0;
      uint64_t v35 = _swiftEmptyArrayStorage;
      uint64_t v29 = v11;
      sub_100076FC8(0, v12, 0);
      uint64_t v8 = v35;
      uint64_t v13 = v29 + 5;
      do
      {
        uint64_t v14 = *(v13 - 1);
        uint64_t v15 = *v13;
        uint64_t v35 = v8;
        unint64_t v17 = v8[2];
        unint64_t v16 = v8[3];
        swift_bridgeObjectRetain();
        if (v17 >= v16 >> 1)
        {
          sub_100076FC8((char *)(v16 > 1), v17 + 1, 1);
          uint64_t v8 = v35;
        }
        v13 += 2;
        v8[2] = v17 + 1;
        uint64_t v18 = &v8[2 * v17];
        v18[4] = v14;
        v18[5] = v15;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      uint64_t v4 = v31;
      uint64_t v2 = v32;
      uint64_t v5 = v30;
      uint64_t v7 = v33;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = _swiftEmptyArrayStorage;
    }
    char v34 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      sub_1000760E4((uint64_t)a1);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v19 = v35;
      int64_t v20 = v35[2];
      if (v20)
      {
        uint64_t v30 = v5;
        uint64_t v31 = v4;
        uint64_t v32 = 0;
        uint64_t v35 = _swiftEmptyArrayStorage;
        sub_100076FC8(0, v20, 0);
        uint64_t v21 = v35;
        uint64_t v29 = v19;
        uint64_t v22 = v19 + 5;
        do
        {
          uint64_t v23 = *(v22 - 1);
          uint64_t v24 = *v22;
          uint64_t v35 = v21;
          unint64_t v26 = v21[2];
          unint64_t v25 = v21[3];
          swift_bridgeObjectRetain();
          if (v26 >= v25 >> 1)
          {
            sub_100076FC8((char *)(v25 > 1), v26 + 1, 1);
            uint64_t v21 = v35;
          }
          v22 += 2;
          v21[2] = v26 + 1;
          uint64_t v27 = &v21[2 * v26];
          v27[4] = v23;
          v27[5] = v24;
          --v20;
        }
        while (v20);
        swift_bridgeObjectRelease();
        uint64_t v4 = v31;
        uint64_t v5 = v30;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v33, v4);
      swift_bridgeObjectRetain();
      sub_1000760E4((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v8;
}

void *sub_100B5CB58(void *a1)
{
  uint64_t v3 = sub_100063814(&qword_1010CBEA8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100068990(a1, a1[3]);
  sub_100B5EDDC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_1000760E4((uint64_t)a1);
  }
  else
  {
    sub_100063814(&qword_1010CBEB8);
    sub_100B5EE30(&qword_1010CBEC0, &qword_1010CBEB8, (void (*)(void))sub_100B5EE9C);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    sub_1000760E4((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_100B5CD08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6974616C6572 && a2 == 0xED00007370696873)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_100B5CE78(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101008940, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_100B5CEC4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100063814(&qword_1010CBDE8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100068990(a1, a1[3]);
  sub_100B5E5B8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_1000760E4((uint64_t)a1);
  }
  LOBYTE(v34) = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v33 = v9;
  char v42 = 1;
  sub_100B5E60C();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  double v12 = v35;
  double v27 = v34;
  uint64_t v28 = v11;
  uint64_t v13 = v37;
  uint64_t v14 = v39;
  uint64_t v25 = v38;
  uint64_t v26 = v36;
  uint64_t v24 = v40;
  uint64_t v32 = v41;
  char v42 = 2;
  sub_100B5E660();
  double v31 = v12;
  swift_bridgeObjectRetain();
  uint64_t v30 = v13;
  swift_bridgeObjectRetain();
  uint64_t v29 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  id v15 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v34 longitude:v35];
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v28;
  swift_bridgeObjectRetain();
  id v17 = v15;
  swift_bridgeObjectRelease();
  sub_1000760E4((uint64_t)a1);

  uint64_t v18 = v32;
  swift_bridgeObjectRelease();
  uint64_t v19 = v29;
  swift_bridgeObjectRelease();
  uint64_t v20 = v30;
  swift_bridgeObjectRelease();
  double v21 = v31;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v33;
  a2[1] = v16;
  *((double *)a2 + 2) = v27;
  *((double *)a2 + 3) = v21;
  a2[4] = v26;
  a2[5] = v20;
  a2[6] = v25;
  a2[7] = v19;
  a2[8] = v24;
  a2[9] = v18;
  a2[10] = (uint64_t)v17;
  return result;
}

uint64_t sub_100B5D284(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000100DD4D90)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_100B5D30C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100063814(&qword_1010CBE80);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100068990(a1, a1[3]);
  sub_100B5ECE0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_1000760E4((uint64_t)a1);
  }
  sub_100B5ED34();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v14 = v17;
  long long v15 = v16;
  long long v13 = v18;
  uint64_t v9 = v19;
  uint64_t v10 = v20;
  uint64_t result = sub_1000760E4((uint64_t)a1);
  long long v12 = v14;
  *(_OWORD *)a2 = v15;
  *(_OWORD *)(a2 + 16) = v12;
  *(_OWORD *)(a2 + 32) = v13;
  *(void *)(a2 + 48) = v9;
  *(void *)(a2 + 56) = v10;
  return result;
}

uint64_t sub_100B5D4AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7627116 && a2 == 0xE300000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6778476 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

double sub_100B5D580(void *a1)
{
  uint64_t v4 = sub_100063814(&qword_1010CBE98);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100068990(a1, a1[3]);
  sub_100B5ED88();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    v10[15] = 0;
    KeyedDecodingContainer.decode(_:forKey:)();
    double v2 = v8;
    v10[14] = 1;
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1000760E4((uint64_t)a1);
  return v2;
}

uint64_t sub_100B5D72C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100B5D814@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100063814(&qword_1010CBD00);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  double v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100068990(a1, a1[3]);
  sub_100B5DADC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_1000760E4((uint64_t)a1);
  }
  LOBYTE(v29) = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  char v40 = 1;
  sub_100B5DB30();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v26 = v31;
  uint64_t v27 = v29;
  uint64_t v21 = v32;
  uint64_t v22 = v30;
  uint64_t v12 = v34;
  uint64_t v24 = v35;
  uint64_t v25 = v33;
  uint64_t v28 = v36;
  uint64_t v13 = v38;
  uint64_t v23 = v37;
  long long v14 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v15 = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000760E4((uint64_t)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v22;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v27;
  a2[3] = v17;
  a2[4] = v26;
  a2[5] = v16;
  a2[6] = v25;
  a2[7] = v12;
  uint64_t v19 = v28;
  a2[8] = v24;
  a2[9] = v19;
  a2[10] = v23;
  a2[11] = v13;
  a2[12] = (uint64_t)v15;
  return result;
}

unint64_t sub_100B5DADC()
{
  unint64_t result = qword_1010CBD08;
  if (!qword_1010CBD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD08);
  }
  return result;
}

unint64_t sub_100B5DB30()
{
  unint64_t result = qword_1010CBD10;
  if (!qword_1010CBD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD10);
  }
  return result;
}

unint64_t sub_100B5DB84()
{
  unint64_t result = qword_1010CBD20;
  if (!qword_1010CBD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD20);
  }
  return result;
}

uint64_t sub_100B5DBD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100B5DC40()
{
  unint64_t result = qword_1010CBD30;
  if (!qword_1010CBD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD30);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.CodingKeys()
{
  return &type metadata for ShazamEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for VenueElement.CodingKeys()
{
  return &type metadata for VenueElement.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamEvent.Attributes.Time()
{
  return &type metadata for ShazamEvent.Attributes.Time;
}

ValueMetadata *type metadata accessor for ShazamEvent.Attributes.CodingKeys()
{
  return &type metadata for ShazamEvent.Attributes.CodingKeys;
}

ValueMetadata *type metadata accessor for Root.CodingKeys()
{
  return &type metadata for Root.CodingKeys;
}

void destroy for VenueElement.Attributes(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 80);
}

void *initializeWithCopy for VenueElement.Attributes(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  double v8 = (void *)a2[10];
  a1[10] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = v8;
  return a1;
}

void *assignWithCopy for VenueElement.Attributes(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[10];
  uint64_t v5 = (void *)a1[10];
  a1[10] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for VenueElement.Attributes(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  double v8 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  return a1;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes()
{
  return &type metadata for VenueElement.Attributes;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships()
{
  return &type metadata for ShazamEvent.Relationships;
}

ValueMetadata *type metadata accessor for Resources()
{
  return &type metadata for Resources;
}

unint64_t sub_100B5DF78()
{
  unint64_t result = qword_1010CBD38;
  if (!qword_1010CBD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD38);
  }
  return result;
}

unint64_t sub_100B5DFD0()
{
  unint64_t result = qword_1010CBD40;
  if (!qword_1010CBD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD40);
  }
  return result;
}

unint64_t sub_100B5E028()
{
  unint64_t result = qword_1010CBD48;
  if (!qword_1010CBD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD48);
  }
  return result;
}

unint64_t sub_100B5E080()
{
  unint64_t result = qword_1010CBD50;
  if (!qword_1010CBD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD50);
  }
  return result;
}

unint64_t sub_100B5E0D8()
{
  unint64_t result = qword_1010CBD58;
  if (!qword_1010CBD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD58);
  }
  return result;
}

unint64_t sub_100B5E130()
{
  unint64_t result = qword_1010CBD60;
  if (!qword_1010CBD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD60);
  }
  return result;
}

unint64_t sub_100B5E188()
{
  unint64_t result = qword_1010CBD68;
  if (!qword_1010CBD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD68);
  }
  return result;
}

unint64_t sub_100B5E1E0()
{
  unint64_t result = qword_1010CBD70;
  if (!qword_1010CBD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD70);
  }
  return result;
}

unint64_t sub_100B5E238()
{
  unint64_t result = qword_1010CBD78;
  if (!qword_1010CBD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD78);
  }
  return result;
}

unint64_t sub_100B5E290()
{
  unint64_t result = qword_1010CBD80;
  if (!qword_1010CBD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD80);
  }
  return result;
}

unint64_t sub_100B5E2E8()
{
  unint64_t result = qword_1010CBD88;
  if (!qword_1010CBD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD88);
  }
  return result;
}

unint64_t sub_100B5E340()
{
  unint64_t result = qword_1010CBD90;
  if (!qword_1010CBD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBD90);
  }
  return result;
}

unint64_t sub_100B5E394()
{
  unint64_t result = qword_1010CBDA0;
  if (!qword_1010CBDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBDA0);
  }
  return result;
}

unint64_t sub_100B5E3E8()
{
  unint64_t result = qword_1010CBDB0;
  if (!qword_1010CBDB0)
  {
    sub_10006389C(&qword_1010CBDA8);
    sub_100B59B98(&qword_1010CBDB8, (void (*)(uint64_t))type metadata accessor for ShazamEvent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBDB0);
  }
  return result;
}

unint64_t sub_100B5E494()
{
  unint64_t result = qword_1010CBDC8;
  if (!qword_1010CBDC8)
  {
    sub_10006389C(&qword_1010CBDC0);
    sub_100B5E510();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBDC8);
  }
  return result;
}

unint64_t sub_100B5E510()
{
  unint64_t result = qword_1010CBDD0;
  if (!qword_1010CBDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBDD0);
  }
  return result;
}

unint64_t sub_100B5E564()
{
  unint64_t result = qword_1010CBDE0;
  if (!qword_1010CBDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBDE0);
  }
  return result;
}

unint64_t sub_100B5E5B8()
{
  unint64_t result = qword_1010CBDF0;
  if (!qword_1010CBDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBDF0);
  }
  return result;
}

unint64_t sub_100B5E60C()
{
  unint64_t result = qword_1010CBDF8;
  if (!qword_1010CBDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBDF8);
  }
  return result;
}

unint64_t sub_100B5E660()
{
  unint64_t result = qword_1010CBE00;
  if (!qword_1010CBE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE00);
  }
  return result;
}

unint64_t sub_100B5E6B4()
{
  unint64_t result = qword_1010CBE10;
  if (!qword_1010CBE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE10);
  }
  return result;
}

unint64_t sub_100B5E708()
{
  unint64_t result = qword_1010CBE18;
  if (!qword_1010CBE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE18);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data()
{
  return &type metadata for ShazamEvent.Relationships.Data;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.CodingKeys()
{
  return &type metadata for ShazamEvent.Relationships.CodingKeys;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.Geo()
{
  return &type metadata for VenueElement.Attributes.Geo;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.StructuredAddress()
{
  return &type metadata for VenueElement.Attributes.StructuredAddress;
}

unsigned char *_s11MusicCoreUI11ShazamEventV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B5E868);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.CodingKeys()
{
  return &type metadata for VenueElement.Attributes.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamEvent.Attributes.Time.CodingKeys()
{
  return &type metadata for ShazamEvent.Attributes.Time.CodingKeys;
}

ValueMetadata *type metadata accessor for Resources.CodingKeys()
{
  return &type metadata for Resources.CodingKeys;
}

unint64_t sub_100B5E8C4()
{
  unint64_t result = qword_1010CBE20;
  if (!qword_1010CBE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE20);
  }
  return result;
}

unint64_t sub_100B5E91C()
{
  unint64_t result = qword_1010CBE28;
  if (!qword_1010CBE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE28);
  }
  return result;
}

unint64_t sub_100B5E974()
{
  unint64_t result = qword_1010CBE30;
  if (!qword_1010CBE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE30);
  }
  return result;
}

unint64_t sub_100B5E9CC()
{
  unint64_t result = qword_1010CBE38;
  if (!qword_1010CBE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE38);
  }
  return result;
}

unint64_t sub_100B5EA24()
{
  unint64_t result = qword_1010CBE40;
  if (!qword_1010CBE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE40);
  }
  return result;
}

unint64_t sub_100B5EA7C()
{
  unint64_t result = qword_1010CBE48;
  if (!qword_1010CBE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE48);
  }
  return result;
}

unint64_t sub_100B5EAD4()
{
  unint64_t result = qword_1010CBE50;
  if (!qword_1010CBE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE50);
  }
  return result;
}

unint64_t sub_100B5EB2C()
{
  unint64_t result = qword_1010CBE58;
  if (!qword_1010CBE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE58);
  }
  return result;
}

unint64_t sub_100B5EB84()
{
  unint64_t result = qword_1010CBE60;
  if (!qword_1010CBE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE60);
  }
  return result;
}

unint64_t sub_100B5EBDC()
{
  unint64_t result = qword_1010CBE68;
  if (!qword_1010CBE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE68);
  }
  return result;
}

unint64_t sub_100B5EC34()
{
  unint64_t result = qword_1010CBE70;
  if (!qword_1010CBE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE70);
  }
  return result;
}

unint64_t sub_100B5EC8C()
{
  unint64_t result = qword_1010CBE78;
  if (!qword_1010CBE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE78);
  }
  return result;
}

unint64_t sub_100B5ECE0()
{
  unint64_t result = qword_1010CBE88;
  if (!qword_1010CBE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE88);
  }
  return result;
}

unint64_t sub_100B5ED34()
{
  unint64_t result = qword_1010CBE90;
  if (!qword_1010CBE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBE90);
  }
  return result;
}

unint64_t sub_100B5ED88()
{
  unint64_t result = qword_1010CBEA0;
  if (!qword_1010CBEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBEA0);
  }
  return result;
}

unint64_t sub_100B5EDDC()
{
  unint64_t result = qword_1010CBEB0;
  if (!qword_1010CBEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBEB0);
  }
  return result;
}

uint64_t sub_100B5EE30(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100B5EE9C()
{
  unint64_t result = qword_1010CBEC8;
  if (!qword_1010CBEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBEC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data.CodingKeys()
{
  return &type metadata for ShazamEvent.Relationships.Data.CodingKeys;
}

unsigned char *_s11MusicCoreUI12VenueElementV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B5EFCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.Geo.CodingKeys()
{
  return &type metadata for VenueElement.Attributes.Geo.CodingKeys;
}

ValueMetadata *type metadata accessor for VenueElement.Attributes.StructuredAddress.CodingKeys()
{
  return &type metadata for VenueElement.Attributes.StructuredAddress.CodingKeys;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data.ID()
{
  return &type metadata for ShazamEvent.Relationships.Data.ID;
}

unint64_t sub_100B5F028()
{
  unint64_t result = qword_1010CBED0;
  if (!qword_1010CBED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBED0);
  }
  return result;
}

unint64_t sub_100B5F080()
{
  unint64_t result = qword_1010CBED8;
  if (!qword_1010CBED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBED8);
  }
  return result;
}

unint64_t sub_100B5F0D8()
{
  unint64_t result = qword_1010CBEE0;
  if (!qword_1010CBEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBEE0);
  }
  return result;
}

unint64_t sub_100B5F130()
{
  unint64_t result = qword_1010CBEE8;
  if (!qword_1010CBEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBEE8);
  }
  return result;
}

unint64_t sub_100B5F188()
{
  unint64_t result = qword_1010CBEF0;
  if (!qword_1010CBEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBEF0);
  }
  return result;
}

unint64_t sub_100B5F1E0()
{
  unint64_t result = qword_1010CBEF8;
  if (!qword_1010CBEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBEF8);
  }
  return result;
}

unint64_t sub_100B5F238()
{
  unint64_t result = qword_1010CBF00;
  if (!qword_1010CBF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBF00);
  }
  return result;
}

unint64_t sub_100B5F290()
{
  unint64_t result = qword_1010CBF08;
  if (!qword_1010CBF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBF08);
  }
  return result;
}

unint64_t sub_100B5F2E8()
{
  unint64_t result = qword_1010CBF10;
  if (!qword_1010CBF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBF10);
  }
  return result;
}

unint64_t sub_100B5F33C()
{
  unint64_t result = qword_1010CBF20;
  if (!qword_1010CBF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBF20);
  }
  return result;
}

unsigned char *_s11MusicCoreUI4RootV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100B5F42CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShazamEvent.Relationships.Data.ID.CodingKeys()
{
  return &type metadata for ShazamEvent.Relationships.Data.ID.CodingKeys;
}

unint64_t sub_100B5F468()
{
  unint64_t result = qword_1010CBF30;
  if (!qword_1010CBF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBF30);
  }
  return result;
}

unint64_t sub_100B5F4C0()
{
  unint64_t result = qword_1010CBF38;
  if (!qword_1010CBF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBF38);
  }
  return result;
}

unint64_t sub_100B5F518()
{
  unint64_t result = qword_1010CBF40;
  if (!qword_1010CBF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CBF40);
  }
  return result;
}

uint64_t RazzmatazzDetailView.init(razzmatazz:noticePresenter:navigateToArtistHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_100B64B58(a1, a5, type metadata accessor for Razzmatazz);
  uint64_t result = type metadata accessor for RazzmatazzDetailView();
  *(void *)(a5 + *(int *)(result + 20)) = a2;
  uint64_t v10 = (void *)(a5 + *(int *)(result + 24));
  *uint64_t v10 = a3;
  v10[1] = a4;
  return result;
}

uint64_t type metadata accessor for RazzmatazzDetailView()
{
  uint64_t result = qword_1010CBFB8;
  if (!qword_1010CBFB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t RazzmatazzDetailView.body.getter()
{
  return List<>.init(content:)();
}

uint64_t sub_100B5F6BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = sub_100063814(&qword_1010CC040);
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  __chkstk_darwin();
  uint64_t v53 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v51 = (char *)&v40 - v5;
  uint64_t v52 = sub_100063814(&qword_1010CC048);
  uint64_t v43 = *(void *)(v52 - 8);
  __chkstk_darwin();
  uint64_t v56 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v49 = (char *)&v40 - v7;
  uint64_t v55 = sub_100063814(&qword_1010CC050);
  uint64_t v50 = *(void *)(v55 - 8);
  __chkstk_darwin();
  uint64_t v54 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v40 - v9;
  sub_100063814(&qword_1010CC058);
  __chkstk_darwin();
  uint64_t v48 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v40 - v12;
  uint64_t v14 = Razzmatazz.shortName.getter();
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v47 = v13;
  if (v14 == v16 && v15 == v17)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      __chkstk_darwin();
      *(&v40 - 2) = (void (*)(char *, char *, uint64_t))a1;
      Section<>.init(content:)();
      uint64_t v20 = sub_100063814(&qword_1010CC060);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 0, 1, v20);
      goto LABEL_7;
    }
  }
  uint64_t v19 = sub_100063814(&qword_1010CC060);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v13, 1, 1, v19);
LABEL_7:
  uint64_t v59 = 1702125892;
  unint64_t v60 = 0xE400000000000000;
  __chkstk_darwin();
  *(&v40 - 2) = (void (*)(char *, char *, uint64_t))a1;
  sub_100063814(&qword_1010CC068);
  sub_100063858(&qword_1010CC070, &qword_1010CC068);
  char v42 = (void (*)(char *, char *, uint64_t))sub_10005D27C();
  Section<>.init<A>(_:content:)();
  LocalizedStringKey.init(stringLiteral:)();
  __chkstk_darwin();
  *(&v40 - 2) = (void (*)(char *, char *, uint64_t))a1;
  uint64_t v41 = v10;
  sub_100063814(&qword_1010CC078);
  sub_100063858(&qword_1010CC080, &qword_1010CC078);
  uint64_t v21 = v49;
  Section<>.init(_:content:)();
  uint64_t v59 = 0x6E6F697461636F4CLL;
  unint64_t v60 = 0xE800000000000000;
  __chkstk_darwin();
  *(&v40 - 2) = (void (*)(char *, char *, uint64_t))a1;
  sub_100063814(&qword_1010CC088);
  uint64_t v22 = sub_10006389C(&qword_1010CC090);
  unint64_t v23 = sub_100B64A2C();
  uint64_t v57 = v22;
  unint64_t v58 = v23;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = v51;
  Section<>.init<A>(_:content:)();
  uint64_t v25 = v48;
  sub_10006CAB8((uint64_t)v47, v48, &qword_1010CC058);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v50 + 16);
  v26(v54, v10, v55);
  uint64_t v27 = v43;
  char v42 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  uint64_t v28 = v52;
  v42(v56, v21, v52);
  uint64_t v29 = v45;
  char v40 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  uint64_t v30 = v24;
  uint64_t v31 = v46;
  v40(v53, v30, v46);
  uint64_t v32 = v44;
  sub_10006CAB8(v25, v44, &qword_1010CC058);
  uint64_t v33 = (int *)sub_100063814(&qword_1010CC0B8);
  v26((char *)(v32 + v33[12]), v54, v55);
  v42((char *)(v32 + v33[16]), v56, v28);
  uint64_t v34 = v53;
  v40((char *)(v32 + v33[20]), v53, v31);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v29 + 8);
  v35(v51, v31);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v27 + 8);
  v36(v49, v28);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v50 + 8);
  uint64_t v38 = v55;
  v37(v41, v55);
  sub_1000637B8((uint64_t)v47, &qword_1010CC058);
  v35(v34, v31);
  v36(v56, v52);
  v37(v54, v38);
  return sub_1000637B8(v48, &qword_1010CC058);
}

uint64_t sub_100B5FE78@<X0>(uint64_t a1@<X8>)
{
  return sub_100B5F6BC(*(void *)(v1 + 16), a1);
}

uint64_t sub_100B5FE80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B5FE9C@<X0>(uint64_t a1@<X8>)
{
  sub_10005D27C();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static HierarchicalShapeStyle.secondary.getter();
  uint64_t v7 = Text.foregroundStyle<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  sub_1000D1500(v2, v4, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_100B5FF88@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v125 = a2;
  uint64_t v122 = *(void *)(type metadata accessor for RazzmatazzDetailView() - 8);
  uint64_t v121 = *(void *)(v122 + 64);
  __chkstk_darwin();
  uint64_t v120 = (uint64_t)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_100063814(&qword_1010CC0E8);
  uint64_t v134 = *(void *)(v124 - 8);
  __chkstk_darwin();
  uint64_t v123 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v133 = (char *)&v87 - v5;
  uint64_t v119 = type metadata accessor for Date.FormatStyle.Symbol.Minute();
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin();
  uint64_t v117 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for Date.FormatStyle.Symbol.Hour.AMPMStyle();
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin();
  uint64_t v112 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for Date.FormatStyle.Symbol.Hour();
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin();
  uint64_t v111 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for Date.FormatStyle.Symbol.Year();
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin();
  uint64_t v108 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin();
  long long v103 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for Date.FormatStyle.Symbol.Day();
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin();
  uint64_t v100 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date.FormatStyle.Symbol.Weekday();
  uint64_t v131 = *(void *)(v12 - 8);
  uint64_t v132 = v12;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = type metadata accessor for TimeZone();
  uint64_t v135 = *(void *)(v129 - 8);
  __chkstk_darwin();
  uint64_t v126 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Date.FormatStyle();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v95 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v97 = (char *)&v87 - v19;
  __chkstk_darwin();
  uint64_t v98 = (char *)&v87 - v20;
  __chkstk_darwin();
  uint64_t v99 = (char *)&v87 - v21;
  __chkstk_darwin();
  unint64_t v23 = (char *)&v87 - v22;
  __chkstk_darwin();
  uint64_t v128 = (char *)&v87 - v24;
  uint64_t v127 = type metadata accessor for Date();
  uint64_t v25 = *(void *)(v127 - 8);
  __chkstk_darwin();
  uint64_t v27 = (char *)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Razzmatazz(0);
  uint64_t v29 = *(int *)(v28 + 24);
  uint64_t v107 = a1;
  uint64_t v90 = a1 + v29;
  uint64_t v89 = *(void (**)(char *))(v25 + 16);
  v89(v27);
  static ParseableFormatStyle<>.dateTime.getter();
  uint64_t v30 = a1 + *(int *)(v28 + 32);
  uint64_t v87 = v30 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v135 + 16);
  v135 += 16;
  uint64_t v88 = v31;
  ((void (*)(char *))v31)(v126);
  Date.FormatStyle.timeZone.setter();
  static Date.FormatStyle.Symbol.Weekday.wide.getter();
  uint64_t v32 = v128;
  uint64_t v91 = v23;
  Date.FormatStyle.weekday(_:)();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v14, v132);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v17 + 8);
  v33(v23, v16);
  uint64_t v96 = sub_100B64EF4(&qword_1010CB488, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  uint64_t v34 = v27;
  Date.formatted<A>(_:)();
  v33(v32, v16);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v93 = v25 + 8;
  uint64_t v94 = v35;
  uint64_t v36 = v27;
  uint64_t v37 = v127;
  v35(v36, v127);
  uint64_t v136 = v140;
  uint64_t v137 = v141;
  unint64_t v92 = sub_10005D27C();
  uint64_t v38 = Text.init<A>(_:)();
  uint64_t v40 = v39;
  LOBYTE(v25) = v41 & 1;
  LODWORD(v140) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v132 = Text.foregroundStyle<A>(_:)();
  uint64_t v104 = v42;
  uint64_t v131 = v43;
  int v130 = v44 & 1;
  sub_1000D1500(v38, v40, v25);
  swift_bridgeObjectRelease();
  uint64_t v45 = v34;
  ((void (*)(char *, uint64_t, uint64_t))v89)(v34, v90, v37);
  uint64_t v46 = v95;
  static ParseableFormatStyle<>.dateTime.getter();
  v88(v126, v87, v129);
  Date.FormatStyle.timeZone.setter();
  uint64_t v47 = v100;
  static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
  uint64_t v48 = v97;
  Date.FormatStyle.day(_:)();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v47, v102);
  v33(v46, v16);
  uint64_t v49 = v103;
  static Date.FormatStyle.Symbol.Month.wide.getter();
  uint64_t v50 = v98;
  Date.FormatStyle.month(_:)();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v49, v106);
  v33(v48, v16);
  uint64_t v51 = v108;
  static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
  uint64_t v52 = v99;
  Date.FormatStyle.year(_:)();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v51, v110);
  v33(v50, v16);
  uint64_t v53 = v112;
  static Date.FormatStyle.Symbol.Hour.AMPMStyle.abbreviated.getter();
  uint64_t v54 = v111;
  static Date.FormatStyle.Symbol.Hour.defaultDigits(amPM:)();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v53, v116);
  uint64_t v55 = v91;
  Date.FormatStyle.hour(_:)();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v54, v114);
  v33(v52, v16);
  uint64_t v56 = v117;
  static Date.FormatStyle.Symbol.Minute.defaultDigits.getter();
  uint64_t v57 = v128;
  Date.FormatStyle.minute(_:)();
  (*(void (**)(char *, uint64_t))(v118 + 8))(v56, v119);
  v33(v55, v16);
  Date.formatted<A>(_:)();
  v33(v57, v16);
  v94(v45, v127);
  uint64_t v136 = v140;
  uint64_t v137 = v141;
  uint64_t v58 = Text.init<A>(_:)();
  uint64_t v60 = v59;
  LOBYTE(v57) = v61 & 1;
  LODWORD(v140) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v62 = Text.foregroundStyle<A>(_:)();
  uint64_t v128 = v63;
  uint64_t v135 = v64;
  LODWORD(v129) = v65 & 1;
  sub_1000D1500(v58, v60, (char)v57);
  swift_bridgeObjectRelease();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v127 = v140;
  LODWORD(v126) = v141;
  uint64_t v119 = v142;
  LODWORD(v118) = v143;
  uint64_t v117 = v144;
  uint64_t v116 = v145;
  uint64_t v66 = v120;
  sub_100B64AF0(v107, v120);
  unint64_t v67 = (*(unsigned __int8 *)(v122 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
  uint64_t v68 = swift_allocObject();
  sub_100B64B58(v66, v68 + v67, (uint64_t (*)(void))type metadata accessor for RazzmatazzDetailView);
  sub_100063814(&qword_1010CC0F0);
  uint64_t v69 = sub_10006389C(&qword_1010CC0F8);
  uint64_t v70 = type metadata accessor for TitleAndIconLabelStyle();
  uint64_t v71 = sub_100063858(&qword_1010CC100, &qword_1010CC0F8);
  uint64_t v72 = sub_100B64EF4(&qword_1010CC108, (void (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle);
  uint64_t v136 = v69;
  uint64_t v137 = v70;
  uint64_t v138 = v71;
  uint64_t v139 = v72;
  swift_getOpaqueTypeConformance2();
  uint64_t v73 = v133;
  Button.init(action:label:)();
  LOBYTE(v66) = v130;
  LOBYTE(v136) = v130;
  uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
  uint64_t v75 = v123;
  uint64_t v76 = v124;
  v74(v123, v73, v124);
  uint64_t v77 = v125;
  uint64_t v78 = v131;
  uint64_t v79 = v132;
  uint64_t v80 = v104;
  *uint64_t v125 = v132;
  v77[1] = v80;
  *((unsigned char *)v77 + 16) = v66;
  v77[3] = v78;
  v77[4] = v62;
  uint64_t v81 = (uint64_t)v128;
  v77[5] = v128;
  *((unsigned char *)v77 + 48) = v129;
  v77[7] = v135;
  v77[8] = 0;
  *((unsigned char *)v77 + 72) = 1;
  v77[10] = v127;
  *((unsigned char *)v77 + 88) = (_BYTE)v126;
  v77[12] = v119;
  *((unsigned char *)v77 + 104) = v118;
  uint64_t v82 = v116;
  v77[14] = v117;
  v77[15] = v82;
  uint64_t v83 = (char *)v77;
  uint64_t v84 = sub_100063814(&qword_1010CC110);
  v74(&v83[*(int *)(v84 + 80)], v75, v76);
  sub_1001CC8D0(v79, v80, v130);
  swift_bridgeObjectRetain();
  LOBYTE(v79) = v129;
  sub_1001CC8D0(v62, v81, v129);
  uint64_t v85 = *(void (**)(char *, uint64_t))(v134 + 8);
  swift_bridgeObjectRetain();
  v85(v133, v76);
  v85(v75, v76);
  sub_1000D1500(v62, v81, v79);
  swift_bridgeObjectRelease();
  sub_1000D1500(v132, v80, v136);
  return swift_bridgeObjectRelease();
}

void sub_100B60FB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for RazzmatazzDetailView() - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin();
  id v4 = [objc_allocWithZone((Class)EKEventStore) init];
  sub_100B64AF0(a1, (uint64_t)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  sub_100B64B58((uint64_t)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (uint64_t (*)(void))type metadata accessor for RazzmatazzDetailView);
  aBlock[4] = sub_100B65138;
  aBlock[5] = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000A8A8;
  void aBlock[3] = &unk_10100F3C8;
  uint64_t v7 = _Block_copy(aBlock);
  id v8 = v4;
  swift_release();
  [v8 requestWriteOnlyAccessToEventsWithCompletion:v7];
  _Block_release(v7);
}

void sub_100B61168(char a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v53 = *(NSObject **)(type metadata accessor for RazzmatazzDetailView() - 8);
  Class isa = v53[8].isa;
  __chkstk_darwin();
  sub_100063814(&qword_1010CAA90);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v51 = v10;
    uint64_t v52 = (uint64_t)&v51 - (((unint64_t)isa + 15) & 0xFFFFFFFFFFFFFFF0);
    id v15 = [self eventWithEventStore:a3];
    NSString v16 = String._bridgeToObjectiveC()();
    [v15 setTitle:v16];

    uint64_t v17 = type metadata accessor for Razzmatazz(0);
    Class v18 = Date._bridgeToObjectiveC()().super.isa;
    [v15 setStartDate:v18];

    Date.addingTimeInterval(_:)();
    Class v19 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    [v15 setEndDate:v19];

    uint64_t v20 = (_OWORD *)(a4 + *(int *)(v17 + 32));
    long long v21 = v20[3];
    v56[0] = v20[2];
    v56[1] = v21;
    long long v22 = v20[5];
    v56[2] = v20[4];
    v56[3] = v22;
    id v23 = v15;
    sub_100B4E168(0);
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v23 setLocation:v24];

    id v25 = v23;
    id v26 = [a3 defaultCalendarForNewEvents];
    [v25 setCalendar:v26];

    id v55 = 0;
    unsigned int v27 = [a3 saveEvent:v25 span:0 error:&v55];
    id v28 = v55;
    if (v27)
    {
      uint64_t v29 = type metadata accessor for TaskPriority();
      uint64_t v30 = (uint64_t)v51;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v51, 1, 1, v29);
      uint64_t v31 = v52;
      sub_100B64AF0(a4, v52);
      type metadata accessor for MainActor();
      id v32 = v28;
      uint64_t v33 = static MainActor.shared.getter();
      unint64_t v34 = (LOBYTE(v53[10].isa) + 32) & ~(unint64_t)LOBYTE(v53[10].isa);
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v33;
      *(void *)(v35 + 24) = &protocol witness table for MainActor;
      sub_100B64B58(v31, v35 + v34, (uint64_t (*)(void))type metadata accessor for RazzmatazzDetailView);
      sub_100B29904(v30, (uint64_t)&unk_1010CC120, v35);
      swift_release();
    }
    else
    {
      id v42 = v55;
      uint64_t v43 = _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1010C85D0 != -1) {
        swift_once();
      }
      uint64_t v44 = type metadata accessor for Logger();
      sub_100050A90(v44, (uint64_t)qword_10112CCB8);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v45 = Logger.logObject.getter();
      os_log_type_t v46 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = swift_slowAlloc();
        id v55 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v47 = 136315138;
        uint64_t v54 = v43;
        swift_errorRetain();
        sub_100063814(&qword_1010C94D8);
        uint64_t v48 = String.init<A>(describing:)();
        *(void *)(v47 + 4) = sub_100076010(v48, v49, (uint64_t *)&v55);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "Failed to save event: %s", (uint8_t *)v47, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
  else
  {
    if (qword_1010C85D0 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_100050A90(v36, (uint64_t)qword_10112CCB8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v53, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      id v55 = a2;
      *(void *)&v56[0] = v39;
      *(_DWORD *)uint64_t v38 = 136315138;
      swift_errorRetain();
      sub_100063814((uint64_t *)&unk_1010CFB10);
      uint64_t v40 = String.init<A>(describing:)();
      *(void *)(v38 + 4) = sub_100076010(v40, v41, (uint64_t *)v56);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v53, v37, "No Calendar access: %s", (uint8_t *)v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      uint64_t v50 = v53;
    }
  }
}

uint64_t sub_100B6190C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  uint64_t v5 = type metadata accessor for UUID();
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  void v4[6] = swift_task_alloc();
  type metadata accessor for Notice(0);
  v4[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[8] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B61A2C, v7, v6);
}

uint64_t sub_100B61A2C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for RazzmatazzDetailView() + 20));
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 48);
    id v4 = *(void **)(v0 + 56);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 40);
    UUID.init()();
    uint64_t v7 = UUID.uuidString.getter();
    uint64_t v9 = v8;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
    Notice.init(id:symbol:message:headnote:link:hapticFeedback:)(v7, v9, 0xD000000000000011, 0x8000000100DD4E00, 0, 0, v4, 0, 0, 0, 0);
    _s11MusicCoreUI15NoticePresenterC7present_12internalOnlyy0aB00D0V_SbtF_0((uint64_t)v4, 0);
    sub_100B654A4((uint64_t)v4, type metadata accessor for Notice);
  }
  **(unsigned char **)(v0 + 16) = v2 == 0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100B61B8C()
{
  uint64_t v0 = type metadata accessor for TitleAndIconLabelStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010CC0F8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = 0x43206F7420646441;
  v9[1] = 0xEF7261646E656C61;
  sub_10005D27C();
  Label<>.init<A>(_:systemImage:)();
  TitleAndIconLabelStyle.init()();
  sub_100063858(&qword_1010CC100, &qword_1010CC0F8);
  sub_100B64EF4(&qword_1010CC108, (void (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle);
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100B61DD0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a2();
  *(void *)(a5 + 8) = 0;
  *(unsigned char *)(a5 + 16) = 1;
  sub_100063814(a3);
  return a4(a1);
}

uint64_t sub_100B61E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v3 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814((uint64_t *)&unk_1010C8960);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100063814(&qword_1010CC0C8);
  uint64_t v11 = *(void *)(v49 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100063814(&qword_1010CDF40);
  __chkstk_darwin();
  id v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100063814(&qword_1010CC0D0);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v52 = (uint64_t)&v47 - v18;
  type metadata accessor for Razzmatazz(0);
  uint64_t v50 = a1;
  sub_100AE5E2C(v10);
  uint64_t v19 = sub_100063814(&qword_1010CF250);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 6, 10, v19);
  if (qword_1010C85D8 != -1) {
    swift_once();
  }
  uint64_t v55 = qword_1010CBF48;
  char v56 = 0;
  uint64_t v57 = qword_1010CBF48;
  char v58 = 0;
  uint64_t v59 = 0;
  __int16 v60 = 513;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v3);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v10, (uint64_t)v8, (uint64_t)&v55, (uint64_t)v6, (uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100B654A4((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder);
  sub_1000637B8((uint64_t)v10, (uint64_t *)&unk_1010C8960);
  uint64_t v20 = v49;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, v13, v49);
  long long v21 = &v15[*(int *)(v47 + 36)];
  *(void *)long long v21 = 0;
  *((void *)v21 + 1) = 0;
  unsigned char v21[16] = 1;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  if (qword_1010C85A8 != -1) {
    swift_once();
  }
  uint64_t v22 = static Border.artwork;
  uint64_t v23 = qword_10112CC90;
  char v24 = byte_10112CC98;
  sub_10006CAB8((uint64_t)v15, (uint64_t)v17, &qword_1010CDF40);
  id v25 = &v17[*(int *)(v48 + 36)];
  *(void *)id v25 = v22;
  *((void *)v25 + 1) = v23;
  v25[16] = v24;
  *((void *)v25 + 3) = 0;
  *((void *)v25 + 4) = 0;
  v25[40] = 1;
  swift_retain();
  sub_1000637B8((uint64_t)v15, &qword_1010CDF40);
  sub_10003CABC((uint64_t)v17, v52, &qword_1010CC0D0);
  uint64_t v53 = Artist.name.getter();
  uint64_t v54 = v26;
  sub_10005D27C();
  uint64_t v27 = Text.init<A>(_:)();
  uint64_t v29 = v28;
  char v31 = v30;
  uint64_t v49 = v32;
  uint64_t v33 = (uint64_t *)(v50 + *(int *)(type metadata accessor for RazzmatazzDetailView() + 24));
  uint64_t v34 = *v33;
  uint64_t v35 = (uint64_t)v17;
  if (*v33)
  {
    uint64_t v36 = v33[1];
    swift_retain();
    sub_10007B674(v34);
    swift_release();
    uint64_t v37 = 1;
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v36 = 0;
  }
  char v38 = v31 & 1;
  uint64_t v39 = v52;
  uint64_t v40 = v35;
  sub_10006CAB8(v52, v35, &qword_1010CC0D0);
  uint64_t v41 = v35;
  uint64_t v42 = v51;
  sub_10006CAB8(v41, v51, &qword_1010CC0D0);
  uint64_t v43 = sub_100063814(&qword_1010CC0D8);
  uint64_t v44 = v42 + *(int *)(v43 + 48);
  *(void *)uint64_t v44 = v27;
  *(void *)(v44 + 8) = v29;
  *(unsigned char *)(v44 + 16) = v38;
  *(void *)(v44 + 24) = v49;
  uint64_t v45 = (void *)(v42 + *(int *)(v43 + 64));
  *uint64_t v45 = 0;
  v45[1] = v37;
  void v45[2] = v34;
  void v45[3] = v36;
  sub_1001CC8D0(v27, v29, v38);
  swift_bridgeObjectRetain();
  sub_100B64C50(0, v37, v34);
  sub_1000637B8(v39, &qword_1010CC0D0);
  sub_100B64C60(0, v37, v34);
  sub_1000D1500(v27, v29, v38);
  swift_bridgeObjectRelease();
  return sub_1000637B8(v40, &qword_1010CC0D0);
}

uint64_t sub_100B62464(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for RazzmatazzDetailView() - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin();
  uint64_t v4 = static HorizontalAlignment.leading.getter();
  sub_100B62714(a1, (uint64_t)v10);
  *(_OWORD *)((char *)&v12[7] + 7) = v10[7];
  *(_OWORD *)((char *)&v12[8] + 7) = v10[8];
  *(_OWORD *)((char *)&v12[9] + 7) = v11[0];
  v12[10] = *(_OWORD *)((char *)v11 + 9);
  *(_OWORD *)((char *)&v12[3] + 7) = v10[3];
  *(_OWORD *)((char *)&v12[4] + 7) = v10[4];
  *(_OWORD *)((char *)&v12[5] + 7) = v10[5];
  *(_OWORD *)((char *)&v12[6] + 7) = v10[6];
  *(_OWORD *)((char *)v12 + 7) = v10[0];
  *(_OWORD *)((char *)&v12[1] + 7) = v10[1];
  char v13 = 0;
  *(_OWORD *)((char *)&v12[2] + 7) = v10[2];
  if (qword_1010C8408 != -1) {
    swift_once();
  }
  *(_OWORD *)((char *)&v9[7] + 1) = v12[7];
  *(_OWORD *)((char *)&v9[8] + 1) = v12[8];
  *(_OWORD *)((char *)&v9[9] + 1) = v12[9];
  *(_OWORD *)((char *)&v9[10] + 1) = v12[10];
  *(_OWORD *)((char *)&v9[3] + 1) = v12[3];
  *(_OWORD *)((char *)&v9[4] + 1) = v12[4];
  *(_OWORD *)((char *)&v9[5] + 1) = v12[5];
  *(_OWORD *)((char *)&v9[6] + 1) = v12[6];
  *(_OWORD *)((char *)v9 + 1) = v12[0];
  *(_OWORD *)((char *)&v9[1] + 1) = v12[1];
  *(_OWORD *)((char *)&v9[2] + 1) = v12[2];
  *(_OWORD *)((char *)&v9[11] + 8) = static EdgeInsets.zero;
  char v14 = 0;
  long long v8 = (unint64_t)v4;
  LOBYTE(v9[0]) = 0;
  *(_OWORD *)((char *)&v9[12] + 8) = *(_OWORD *)&qword_10112C0E8;
  BYTE8(v9[13]) = 0;
  sub_100B64AF0(a1, (uint64_t)&v9[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v5 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = swift_allocObject();
  sub_100B64B58((uint64_t)&v9[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v6 + v5, (uint64_t (*)(void))type metadata accessor for RazzmatazzDetailView);
  sub_100063814(&qword_1010CC090);
  sub_100B64A2C();
  View.onTapGesture(count:perform:)();
  swift_release();
  v15[12] = v9[11];
  v16[0] = v9[12];
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)&v9[12] + 9);
  v15[8] = v9[7];
  v15[9] = v9[8];
  v15[10] = v9[9];
  v15[11] = v9[10];
  void v15[4] = v9[3];
  v15[5] = v9[4];
  void v15[6] = v9[5];
  v15[7] = v9[6];
  v15[0] = v8;
  v15[1] = v9[0];
  v15[2] = v9[1];
  v15[3] = v9[2];
  return sub_100B64BD8((uint64_t)v15);
}

uint64_t sub_100B62714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32);
  [*(id *)(v3 + 96) coordinate];
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v27 = *(void *)(v3 + 24);
  uint64_t v28 = *(void *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_100063814(&qword_1010C9270);
  State.init(wrappedValue:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  DWORD1(v29) = (unint64_t)sub_100B4E168(0) >> 32;
  sub_10005D27C();
  uint64_t v8 = Text.init<A>(_:)();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  LODWORD(v29) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v13 = Text.foregroundStyle<A>(_:)();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  sub_1000D1500(v8, v10, v12);
  swift_bridgeObjectRelease();
  char v20 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  *(_DWORD *)(a2 + 57) = v29;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)((char *)&v29 + 3);
  *(_DWORD *)(a2 + 73) = *(_DWORD *)v38;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v38[3];
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v37[3];
  *(_DWORD *)(a2 + 113) = *(_DWORD *)v37;
  *(_DWORD *)(a2 + 132) = *(_DWORD *)&v36[3];
  *(_DWORD *)(a2 + 129) = *(_DWORD *)v36;
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v27;
  *(_OWORD *)(a2 + 32) = v35;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = v30;
  *(void *)(a2 + 64) = v31;
  *(unsigned char *)(a2 + 72) = v32;
  *(void *)(a2 + 80) = v33;
  *(void *)(a2 + 88) = v34;
  *(void *)(a2 + 96) = v13;
  *(void *)(a2 + 104) = v15;
  *(unsigned char *)(a2 + 112) = v19;
  *(void *)(a2 + 120) = v17;
  *(unsigned char *)(a2 + 128) = v20;
  *(void *)(a2 + 136) = v21;
  *(void *)(a2 + 144) = v22;
  *(void *)(a2 + 152) = v23;
  *(void *)(a2 + 160) = v24;
  *(unsigned char *)(a2 + 168) = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  id v25 = (id)v35;
  sub_1001CC8D0(v13, v15, v19);
  swift_bridgeObjectRetain();
  sub_1000D1500(v13, v15, v19);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100B629CC(uint64_t a1)
{
  sub_100063814(&qword_1010C8CC0);
  __chkstk_darwin();
  uint64_t v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1 + *(int *)(type metadata accessor for Razzmatazz(0) + 32);
  [*(id *)(v8 + 96) coordinate];
  v28[0] = 0;
  v28[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  v9._countAndFlagsBits = 0x3F2F2F3A7370616DLL;
  v9._object = (void *)0xEA00000000003D71;
  String.append(_:)(v9);
  uint64_t v10 = *(void *)(v8 + 16);
  char v11 = *(void **)(v8 + 24);
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v10;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 1030515750;
  v13._object = (void *)0xE400000000000000;
  String.append(_:)(v13);
  Double.write<A>(to:)();
  v14._countAndFlagsBits = 44;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  Double.write<A>(to:)();
  v15._countAndFlagsBits = 893221414;
  v15._object = (void *)0xE400000000000000;
  String.append(_:)(v15);
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_1000637B8((uint64_t)v3, &qword_1010C8CC0);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  uint64_t v17 = self;
  id v18 = [v17 sharedApplication];
  URL._bridgeToObjectiveC()(v19);
  uint64_t v21 = v20;
  unsigned int v22 = [v18 canOpenURL:v20];

  if (v22)
  {
    id v23 = [v17 sharedApplication];
    URL._bridgeToObjectiveC()(v24);
    uint64_t v26 = v25;
    sub_100AF1054((uint64_t)_swiftEmptyArrayStorage);
    _s3__C25OpenExternalURLOptionsKeyVMa_1(0);
    sub_100B64EF4(&qword_1010C8D60, _s3__C25OpenExternalURLOptionsKeyVMa_1);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v23 openURL:v26 options:isa completionHandler:0];
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

double sub_100B62D60@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v5 = type metadata accessor for Image.ResizingMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GeometryProxy();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin();
  long long v34 = a2[2];
  long long v29 = a2[2];
  sub_100063814(&qword_1010CC010);
  State.wrappedValue.getter();
  if (v24)
  {
    id v12 = v24;
    Image.init(uiImage:)();
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Image.ResizingMode.stretch(_:), v5);
    Swift::String v13 = (void *)Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    id v24 = v13;
    long long v25 = xmmword_100E26B10;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    char v28 = 0;
    swift_retain();
    sub_100063814(&qword_1010CC018);
    sub_100063814(&qword_1010CC020);
    sub_100586390(&qword_1010CC028, &qword_1010CC018);
    sub_100586390(&qword_1010CC030, &qword_1010CC020);
    _ConditionalContent<>.init(storage:)();
    swift_release();
  }
  else
  {
    sub_10003CABC((uint64_t)&v34, (uint64_t)v36, &qword_1010C9270);
    sub_10003CABC((uint64_t)&v34 + 8, (uint64_t)v35, &qword_1010CC008);
    [objc_allocWithZone((Class)UIColor) initWithRed:0.97 green:0.96 blue:0.93 alpha:1.0];
    Swift::String v14 = (void *)Color.init(uiColor:)();
    long long v33 = a2[1];
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v9);
    unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v16 = (char *)swift_allocObject();
    long long v17 = a2[1];
    *((_OWORD *)v16 + 1) = *a2;
    *((_OWORD *)v16 + 2) = v17;
    *((_OWORD *)v16 + 3) = a2[2];
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v16[v15], (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    id v24 = v14;
    *(void *)&long long v25 = sub_100B6488C;
    *((void *)&v25 + 1) = v16;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    char v28 = 1;
    sub_1000D230C((uint64_t)&v33);
    sub_10003CB4C(v36);
    sub_100477868((uint64_t)v35);
    sub_100063814(&qword_1010CC018);
    sub_100063814(&qword_1010CC020);
    sub_100586390(&qword_1010CC028, &qword_1010CC018);
    sub_100586390(&qword_1010CC030, &qword_1010CC020);
    _ConditionalContent<>.init(storage:)();
  }
  double result = *(double *)&v29;
  long long v19 = v30;
  uint64_t v20 = v31;
  char v21 = v32;
  *(_OWORD *)a3 = v29;
  *(_OWORD *)(a3 + 16) = v19;
  *(void *)(a3 + 32) = v20;
  *(unsigned char *)(a3 + 40) = v21;
  return result;
}

void sub_100B631BC()
{
  GeometryProxy.size.getter();
  double v1 = v0;
  GeometryProxy.size.getter();
  sub_100B63200(v1, v2);
}

void sub_100B63200(double a1, double a2)
{
  uint64_t v3 = v2;
  id v6 = [objc_allocWithZone((Class)MKPlacemark) initWithCoordinate:*v2, v2[1]];
  id v7 = [objc_allocWithZone((Class)MKMapItem) initWithPlacemark:v6];

  NSString v8 = String._bridgeToObjectiveC()();
  [v7 setName:v8];

  sub_100063814(&qword_1010C9B10);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100E251C0;
  *(void *)(v9 + 32) = v7;
  v17[0] = v9;
  specialized Array._endMutation()();
  id v10 = objc_allocWithZone((Class)MusicMapKitAnnotatedMapSnapshotter);
  sub_100B648F0();
  id v11 = v7;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [v10 initWithMapItems:isa, a1, a2, 5000.0, v17[0]];

  long long v18 = *((_OWORD *)v3 + 2);
  sub_10003CABC((uint64_t)&v18, (uint64_t)&v20, &qword_1010C9270);
  sub_10003CABC((uint64_t)&v18 + 8, (uint64_t)v19, &qword_1010CC008);
  Swift::String v14 = (_OWORD *)swift_allocObject();
  long long v15 = *((_OWORD *)v3 + 1);
  v14[1] = *(_OWORD *)v3;
  void v14[2] = v15;
  void v14[3] = *((_OWORD *)v3 + 2);
  void v17[4] = sub_100B6497C;
  v17[5] = v14;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10000D3BC;
  v17[3] = &unk_10100F328;
  uint64_t v16 = _Block_copy(v17);
  swift_bridgeObjectRetain();
  sub_10003CB4C(&v20);
  sub_100477868((uint64_t)v19);
  swift_release();
  [v13 startWithCompletionHandler:v16];
  _Block_release(v16);
}

void *sub_100B63474(void *result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    id v4 = result;
    id v5 = [v4 image];
    long long v7 = *(_OWORD *)(a3 + 32);
    sub_10003CABC((uint64_t)&v7 + 8, (uint64_t)v9, &qword_1010CC008);
    sub_10003CABC((uint64_t)&v7, (uint64_t)&v8, &qword_1010C9270);
    sub_10003CB4C(&v8);
    sub_100477868((uint64_t)v9);
    id v6 = v5;
    sub_100063814(&qword_1010CC010);
    State.wrappedValue.setter();

    sub_10003CB20(&v8);
    return (void *)sub_1004FC8D8((uint64_t)v9);
  }
  return result;
}

uint64_t sub_100B63558@<X0>(double (**a1)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  long long v6 = v1[2];
  long long v7 = v1[1];
  long long v8 = v6;
  sub_10003CABC((uint64_t)&v8, (uint64_t)&v10, &qword_1010C9270);
  sub_10003CABC((uint64_t)&v8 + 8, (uint64_t)v9, &qword_1010CC008);
  uint64_t v3 = (double (*)@<D0>(uint64_t@<X0>, uint64_t@<X8>))swift_allocObject();
  long long v4 = v1[1];
  *((_OWORD *)v3 + 1) = *v1;
  *((_OWORD *)v3 + 2) = v4;
  *((_OWORD *)v3 + 3) = v1[2];
  *a1 = sub_100B647A8;
  a1[1] = v3;
  sub_1000D230C((uint64_t)&v7);
  sub_10003CB4C(&v10);
  return sub_100477868((uint64_t)v9);
}

void sub_100B63618()
{
  qword_1010CBF48 = 0x4046000000000000;
}

uint64_t sub_100B63628()
{
  return List<>.init(content:)();
}

uint64_t *initializeBufferWithCopyOfBuffer for RazzmatazzDetailView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v35 = *a2;
    *long long v4 = *a2;
    long long v4 = (uint64_t *)(v35 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    long long v8 = (int *)type metadata accessor for Razzmatazz(0);
    uint64_t v9 = v8[6];
    id v10 = (char *)v4 + v9;
    id v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Date();
    id v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = v8[7];
    long long v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for Artist();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = v8[8];
    long long v19 = (uint64_t *)((char *)v4 + v18);
    id v20 = (char *)a2 + v18;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *long long v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    _OWORD v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    void v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    unsigned char v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    uint64_t v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    uint64_t v40 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v40;
    uint64_t v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    char v38 = &v20[v27];
    uint64_t v39 = (char *)v19 + v27;
    uint64_t v28 = type metadata accessor for TimeZone();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v29 = v40;
    v37(v39, v38, v28);
    uint64_t v30 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v31 = (uint64_t *)((char *)v4 + v30);
    char v32 = (uint64_t *)((char *)a2 + v30);
    uint64_t v33 = *v32;
    swift_retain();
    if (v33)
    {
      uint64_t v34 = v32[1];
      *uint64_t v31 = v33;
      v31[1] = v34;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    }
  }
  return v4;
}

uint64_t destroy for RazzmatazzDetailView(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v4 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v5 = a1 + v4[6];
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + v4[7];
  uint64_t v8 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + v4[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v10 = v9 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v11 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t result = swift_release();
  if (*(void *)(a1 + *(int *)(a2 + 24)))
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for RazzmatazzDetailView(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = v7[7];
  uint64_t v14 = (char *)a1 + v13;
  long long v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = v7[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  long long v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)((char *)a2 + v17 + 8);
  *uint64_t v18 = *(void *)((char *)a2 + v17);
  v18[1] = v20;
  uint64_t v21 = *(void *)((char *)a2 + v17 + 24);
  _OWORD v18[2] = *(void *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  uint64_t v22 = *(void *)((char *)a2 + v17 + 40);
  v18[4] = *(void *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  uint64_t v23 = *(void *)((char *)a2 + v17 + 56);
  void v18[6] = *(void *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  uint64_t v24 = *(void *)((char *)a2 + v17 + 72);
  v18[8] = *(void *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  uint64_t v25 = *(void *)((char *)a2 + v17 + 88);
  v18[10] = *(void *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  char v38 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v38;
  uint64_t v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v36 = &v19[v26];
  uint64_t v37 = (char *)v18 + v26;
  uint64_t v27 = type metadata accessor for TimeZone();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v28 = v38;
  v35(v37, v36, v27);
  uint64_t v29 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v32 = *v31;
  swift_retain();
  if (v32)
  {
    uint64_t v33 = v31[1];
    *uint64_t v30 = v32;
    v30[1] = v33;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  }
  return a1;
}

void *assignWithCopy for RazzmatazzDetailView(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v6[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *(void *)((char *)a2 + v15);
  v16[1] = *(void *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _OWORD v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)v17[12];
  long long v19 = (void *)v16[12];
  v16[12] = v18;
  id v20 = v18;

  uint64_t v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v22 = (char *)v16 + v21;
  uint64_t v23 = (char *)v17 + v21;
  uint64_t v24 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  uint64_t v25 = *(int *)(a3 + 24);
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = *(void *)((char *)a1 + v25);
  uint64_t v29 = *v27;
  if (!v28)
  {
    if (v29)
    {
      uint64_t v31 = v27[1];
      *uint64_t v26 = v29;
      v26[1] = v31;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    return a1;
  }
  if (!v29)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v30 = v27[1];
  *uint64_t v26 = v29;
  v26[1] = v30;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for RazzmatazzDetailView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = v7[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = v7[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  long long v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  long long v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  long long v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((void *)v17 + 12) = *(void *)((char *)a2 + v16 + 96);
  uint64_t v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v23 = &v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  uint64_t v26 = *(int *)(a3 + 24);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (uint64_t *)((char *)a2 + v26);
  uint64_t v29 = *v28;
  if (*v28)
  {
    uint64_t v30 = v28[1];
    *uint64_t v27 = v29;
    v27[1] = v30;
  }
  else
  {
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  }
  return a1;
}

void *assignWithTake for RazzmatazzDetailView(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v9 = v8[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = v8[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = v8[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  long long v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = *(void *)((char *)a2 + v17 + 8);
  *uint64_t v18 = *(void *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = v19[3];
  _OWORD v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = v19[7];
  void v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = (void *)v18[12];
  v18[12] = v19[12];

  uint64_t v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v28 = (char *)v18 + v27;
  uint64_t v29 = (char *)v19 + v27;
  uint64_t v30 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  uint64_t v31 = *(int *)(a3 + 24);
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v34 = *(void *)((char *)a1 + v31);
  uint64_t v35 = *v33;
  if (!v34)
  {
    if (v35)
    {
      uint64_t v37 = v33[1];
      *uint64_t v32 = v35;
      v32[1] = v37;
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    return a1;
  }
  if (!v35)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v36 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v36;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RazzmatazzDetailView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B6437C);
}

uint64_t sub_100B6437C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Razzmatazz(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for RazzmatazzDetailView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B6445C);
}

uint64_t sub_100B6445C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Razzmatazz(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t sub_100B64518()
{
  uint64_t result = type metadata accessor for Razzmatazz(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100B645B8()
{
  return sub_100063858(&qword_1010CBFF8, &qword_1010CC000);
}

uint64_t destroy for RazzmatazzDetailView.MapImage(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for RazzmatazzDetailView.MapImage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v5 = *(void **)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  id v6 = v5;
  swift_retain();
  return a1;
}

void *assignWithCopy for RazzmatazzDetailView.MapImage(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RazzmatazzDetailView.MapImage(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzDetailView.MapImage()
{
  return &type metadata for RazzmatazzDetailView.MapImage;
}

uint64_t sub_100B64788()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_100B647A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B62D60(a1, (_OWORD *)(v2 + 16), a2);
}

uint64_t sub_100B647B0()
{
  uint64_t v1 = type metadata accessor for GeometryProxy();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_100B6488C()
{
  type metadata accessor for GeometryProxy();

  sub_100B631BC();
}

unint64_t sub_100B648F0()
{
  unint64_t result = qword_1010CC038;
  if (!qword_1010CC038)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010CC038);
  }
  return result;
}

uint64_t sub_100B64934()
{
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocObject();
}

void *sub_100B6497C(void *a1, uint64_t a2)
{
  return sub_100B63474(a1, a2, v2 + 16);
}

uint64_t sub_100B64984@<X0>(uint64_t a1@<X8>)
{
  return sub_100B5FE9C(a1);
}

uint64_t sub_100B6498C@<X0>(uint64_t a1@<X8>)
{
  return sub_100B61DD0(*(void *)(v1 + 16), (uint64_t (*)(void))&static HorizontalAlignment.leading.getter, &qword_1010CC0E0, (uint64_t (*)(uint64_t))sub_100B5FF88, a1);
}

uint64_t sub_100B649D8@<X0>(uint64_t a1@<X8>)
{
  return sub_100B61DD0(*(void *)(v1 + 16), (uint64_t (*)(void))&static VerticalAlignment.center.getter, &qword_1010CC0C0, (uint64_t (*)(uint64_t))sub_100B61E34, a1);
}

uint64_t sub_100B64A24()
{
  return sub_100B62464(*(void *)(v0 + 16));
}

unint64_t sub_100B64A2C()
{
  unint64_t result = qword_1010CC098;
  if (!qword_1010CC098)
  {
    sub_10006389C(&qword_1010CC090);
    sub_100063858(&qword_1010CC0A0, &qword_1010CC0A8);
    sub_100063858(&qword_1010CC0B0, &qword_1010CE340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC098);
  }
  return result;
}

uint64_t sub_100B64AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RazzmatazzDetailView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B64B58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B64BC0()
{
  return sub_100B64E80(sub_100B629CC);
}

uint64_t sub_100B64BD8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 120);
  uint64_t v4 = *(void *)(a1 + 128);
  char v5 = *(unsigned char *)(a1 + 136);
  swift_bridgeObjectRelease();

  swift_release();
  sub_1000D1500(v3, v4, v5);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B64C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100B64C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100B64C74()
{
  uint64_t v1 = (int *)(type metadata accessor for RazzmatazzDetailView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v4 = v2 + v3[6];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v2 + v3[7];
  uint64_t v7 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v2 + v3[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  if (*(void *)(v2 + v1[8])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100B64E68()
{
  return sub_100B64E80((uint64_t (*)(uint64_t))sub_100B60FB8);
}

uint64_t sub_100B64E80(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for RazzmatazzDetailView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100B64EF4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B64F3C()
{
  uint64_t v1 = (int *)(type metadata accessor for RazzmatazzDetailView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = (int *)type metadata accessor for Razzmatazz(0);
  unint64_t v4 = v0 + v2 + v3[6];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unint64_t v6 = v0 + v2 + v3[7];
  uint64_t v7 = type metadata accessor for Artist();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  unint64_t v8 = v0 + v2 + v3[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  unint64_t v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  if (*(void *)(v0 + v2 + v1[8])) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_100B65138(char a1, void *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for RazzmatazzDetailView() - 8);
  unint64_t v6 = *(void **)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_100B61168(a1, a2, v6, v7);
}

uint64_t sub_100B651BC()
{
  uint64_t v1 = (int *)(type metadata accessor for RazzmatazzDetailView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = (int *)type metadata accessor for Razzmatazz(0);
  unint64_t v4 = v0 + v2 + v3[6];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unint64_t v6 = v0 + v2 + v3[7];
  uint64_t v7 = type metadata accessor for Artist();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  unint64_t v8 = v0 + v2 + v3[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  unint64_t v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();
  if (*(void *)(v0 + v2 + v1[8])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100B653B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for RazzmatazzDetailView() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_1000154F4;
  return sub_100B6190C(a1, v5, v6, v7);
}

uint64_t sub_100B654A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100B65504()
{
  return sub_100063858(&qword_1010CC128, &qword_1010CC130);
}

uint64_t RazzmatazzView.init(navigationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  State.init(wrappedValue:)();
  uint64_t result = AppStorage.init<A>(wrappedValue:_:store:)();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = sub_100B65674;
  *(void *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 40) = v7;
  *(void *)(a3 + 48) = v8;
  *(void *)(a3 + 56) = result;
  return result;
}

uint64_t (*variable initialization expression of RazzmatazzView._controller())()
{
  return sub_100B65674;
}

uint64_t property wrapper backing initializer of Radiosity.ViewModifier.isRadiosityEnabled()
{
  State.init(wrappedValue:)();
  return v1;
}

uint64_t property wrapper backing initializer of RazzmatazzView.isFilteringToFavorites()
{
  return AppStorage.init<A>(wrappedValue:_:store:)();
}

uint64_t sub_100B65674()
{
  return sub_100B5207C();
}

uint64_t RazzmatazzView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (_OWORD *)v1;
  uint64_t v56 = a1;
  uint64_t v49 = type metadata accessor for TaskPriority();
  uint64_t v3 = *(void *)(v49 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_100063814(&qword_1010CC150);
  uint64_t v6 = *(void *)(v48 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814(&qword_1010CC158);
  uint64_t v46 = v9;
  __chkstk_darwin();
  uint64_t v57 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100063814(&qword_1010CC160);
  uint64_t v53 = *(void *)(v52 - 8);
  __chkstk_darwin();
  uint64_t v50 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100063814(&qword_1010CC168);
  uint64_t v55 = *(void *)(v54 - 8);
  __chkstk_darwin();
  uint64_t v51 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = v1;
  sub_100063814(&qword_1010CC170);
  sub_100063858(&qword_1010CC178, &qword_1010CC170);
  List<>.init(content:)();
  uint64_t v13 = *(void *)(v1 + 8);
  long long v14 = *(_OWORD *)(v1 + 16);
  char v68 = *(unsigned char *)(v1 + 32);
  long long v66 = *(_OWORD *)(v1 + 40);
  long long v67 = v14;
  uint64_t v58 = *(void *)(v1 + 56);
  uint64_t v15 = (_OWORD *)swift_allocObject();
  long long v16 = *(_OWORD *)(v1 + 16);
  v15[1] = *(_OWORD *)v1;
  v15[2] = v16;
  long long v17 = *(_OWORD *)(v1 + 48);
  v15[3] = *(_OWORD *)(v1 + 32);
  void v15[4] = v17;
  uint64_t v47 = v13;
  swift_retain();
  sub_10020F160((uint64_t)&v67);
  sub_1006F8F64((uint64_t)&v66);
  swift_retain();
  static TaskPriority.userInitiated.getter();
  uint64_t v18 = v57;
  long long v19 = &v57[*(int *)(v9 + 36)];
  uint64_t v20 = type metadata accessor for _TaskModifier();
  uint64_t v21 = v49;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(&v19[*(int *)(v20 + 20)], v5, v49);
  *(void *)long long v19 = &unk_1010CC188;
  *((void *)v19 + 1) = v15;
  uint64_t v22 = v18;
  uint64_t v23 = v48;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v22, v8, v48);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v23);
  long long v65 = v66;
  sub_100063814(&qword_1010CC190);
  State.projectedValue.getter();
  uint64_t v24 = (_OWORD *)swift_allocObject();
  long long v25 = v2[1];
  v24[1] = *v2;
  v24[2] = v25;
  long long v26 = v2[3];
  v24[3] = v2[2];
  v24[4] = v26;
  swift_retain();
  sub_10020F160((uint64_t)&v67);
  sub_1006F8F64((uint64_t)&v66);
  uint64_t v27 = type metadata accessor for CitySelectionView(0);
  unint64_t v28 = sub_100B67EB0();
  uint64_t v29 = sub_100B6D8AC(&qword_1010CC1A8, (void (*)(uint64_t))type metadata accessor for CitySelectionView);
  swift_retain();
  uint64_t v30 = v50;
  uint64_t v31 = v46;
  uint64_t v32 = (uint64_t)v57;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  sub_1000637B8(v32, &qword_1010CC158);
  uint64_t v59 = v2;
  uint64_t v33 = sub_100063814(&qword_1010CC1B0);
  uint64_t v61 = v31;
  uint64_t v62 = v27;
  unint64_t v63 = v28;
  uint64_t v64 = v29;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = sub_10006389C(&qword_1010CC1B8);
  uint64_t v36 = sub_100063858(&qword_1010CC1C0, &qword_1010CC1B8);
  uint64_t v61 = v35;
  uint64_t v62 = v36;
  uint64_t v37 = swift_getOpaqueTypeConformance2();
  char v38 = v51;
  uint64_t v39 = v52;
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v39);
  AppStorage.wrappedValue.getter();
  LOBYTE(v65) = v61;
  uint64_t v40 = (_OWORD *)swift_allocObject();
  long long v41 = v2[1];
  v40[1] = *v2;
  v40[2] = v41;
  long long v42 = v2[3];
  v40[3] = v2[2];
  v40[4] = v42;
  swift_retain();
  sub_10020F160((uint64_t)&v67);
  sub_1006F8F64((uint64_t)&v66);
  swift_retain();
  uint64_t v61 = v39;
  uint64_t v62 = v33;
  unint64_t v63 = OpaqueTypeConformance2;
  uint64_t v64 = v37;
  swift_getOpaqueTypeConformance2();
  uint64_t v43 = v54;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v38, v43);
}

uint64_t sub_100B65E50@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  long long v42 = a2;
  uint64_t v39 = sub_100063814(&qword_1010CC398);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100063814(&qword_1010CC3A0);
  uint64_t v38 = *(void *)(v41 - 8);
  __chkstk_darwin();
  uint64_t v40 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v43 = (char *)&v34 - v6;
  sub_100063814(&qword_1010CC3A8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CC3B0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = sub_100063814(&qword_1010CC3B8);
  uint64_t v36 = *(void *)(v13 - 8);
  uint64_t v14 = v36;
  uint64_t v37 = v13;
  __chkstk_darwin();
  long long v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v45 = a1;
  *(void *)uint64_t v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  unsigned char v8[16] = 0;
  uint64_t v19 = sub_100063814(&qword_1010CC3C0);
  sub_100B669E4(a1, (uint64_t)&v8[*(int *)(v19 + 44)]);
  sub_100B66D40((uint64_t)v10);
  sub_1000637B8((uint64_t)v8, &qword_1010CC3A8);
  sub_10003CABC((uint64_t)v10, (uint64_t)v12, &qword_1010CC3B0);
  sub_100063814(&qword_1010CC3C8);
  sub_100B6D1DC();
  sub_100B6D438();
  uint64_t v20 = v18;
  uint64_t v35 = v18;
  Section<>.init(header:content:)();
  uint64_t v44 = a1;
  sub_100B671A8(0x6F637055206C6C41, 0xEC000000676E696DLL, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v4);
  sub_100063814(&qword_1010CC450);
  sub_100B6D620();
  sub_100B6D574();
  uint64_t v21 = v43;
  Section<>.init(header:content:)();
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v34 = v16;
  uint64_t v23 = v37;
  v22(v16, v20, v37);
  uint64_t v24 = v38;
  long long v25 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  long long v26 = v40;
  uint64_t v27 = v21;
  uint64_t v28 = v41;
  v25(v40, v27, v41);
  uint64_t v29 = v42;
  v22(v42, v16, v23);
  uint64_t v30 = sub_100063814(&qword_1010CC498);
  v25(&v29[*(int *)(v30 + 48)], v26, v28);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v24 + 8);
  v31(v43, v28);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v36 + 8);
  v32(v35, v23);
  v31(v26, v28);
  return ((uint64_t (*)(char *, uint64_t))v32)(v34, v23);
}

uint64_t sub_100B6630C@<X0>(char *a1@<X8>)
{
  return sub_100B65E50(*(void *)(v1 + 16), a1);
}

uint64_t sub_100B66314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v40 = sub_100063814(&qword_1010CC450);
  uint64_t v36 = *(void *)(v40 - 8);
  __chkstk_darwin();
  uint64_t v35 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100063814(&qword_1010CC4B8);
  __chkstk_darwin();
  uint64_t v38 = (uint64_t *)((char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  type metadata accessor for RazzmatazzController(0);
  sub_100B6D8AC(&qword_1010CC2E0, (void (*)(uint64_t))type metadata accessor for RazzmatazzController);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = (uint64_t)v41;
  v46[0] = *(_OWORD *)(a1 + 40);
  uint64_t v45 = *(void *)(a1 + 56);
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter();
  sub_1006F8F64((uint64_t)v46);
  sub_100477868((uint64_t)&v45);
  uint64_t v9 = sub_100B6C210(v8, v5, v6, v7);
  swift_release();
  sub_10020EEF0();
  sub_10047695C((uint64_t)v46);
  sub_1004FC8D8((uint64_t)&v45);
  swift_bridgeObjectRelease();
  uint64_t v10 = v9[2];
  swift_bridgeObjectRelease();
  if (v10)
  {
    StateObject.wrappedValue.getter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v11 = (uint64_t)v41;
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter();
    sub_1006F8F64((uint64_t)v46);
    sub_100477868((uint64_t)&v45);
    uint64_t v12 = sub_100B6C210(v11, v5, v6, v7);
    swift_release();
    sub_10020EEF0();
    sub_10047695C((uint64_t)v46);
    sub_1004FC8D8((uint64_t)&v45);
    swift_bridgeObjectRelease();
    uint64_t v41 = v12;
    swift_getKeyPath();
    uint64_t v13 = (_OWORD *)swift_allocObject();
    long long v14 = *(_OWORD *)(a1 + 16);
    v13[1] = *(_OWORD *)a1;
    void v13[2] = v14;
    long long v15 = *(_OWORD *)(a1 + 48);
    void v13[3] = *(_OWORD *)(a1 + 32);
    _OWORD v13[4] = v15;
    swift_retain();
    KeyValueObservationTrigger.keyPath.getter();
    sub_1006F8F64((uint64_t)v46);
    sub_100477868((uint64_t)&v45);
    sub_100063814(&qword_1010C9A38);
    type metadata accessor for RazzmatazzView.CompactListCell();
    sub_100063858(&qword_1010CB550, &qword_1010C9A38);
    sub_100B6D8AC(&qword_1010CB558, (void (*)(uint64_t))type metadata accessor for Razzmatazz);
    sub_100B6D8AC(&qword_1010CC458, (void (*)(uint64_t))type metadata accessor for RazzmatazzView.CompactListCell);
    long long v16 = v35;
    ForEach<>.init(_:id:content:)();
    uint64_t v17 = v36;
    uint64_t v18 = v40;
    (*(void (**)(uint64_t *, char *, uint64_t))(v36 + 16))(v38, v16, v40);
    swift_storeEnumTagMultiPayload();
    sub_100063814(&qword_1010CC420);
    sub_100B6D4B4();
    sub_100B6D574();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v16, v18);
  }
  else
  {
    uint64_t v41 = 0;
    unint64_t v42 = 0xE000000000000000;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    unint64_t v43 = 0xD000000000000017;
    unint64_t v44 = 0x8000000100DD4E40;
    StateObject.wrappedValue.getter();
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v20 = (uint64_t)v41;
    uint64_t v21 = (void *)v42;
    swift_bridgeObjectRelease();
    v22._countAndFlagsBits = v20;
    v22._object = v21;
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    LODWORD(v41) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v23 = Text.foregroundStyle<A>(_:)();
    uint64_t v25 = v24;
    char v27 = v26;
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v31 = static Font.subheadline.getter();
    uint64_t v32 = swift_getKeyPath();
    uint64_t v33 = v38;
    *uint64_t v38 = v23;
    v33[1] = v25;
    *((unsigned char *)v33 + 16) = v27 & 1;
    _OWORD v33[3] = v29;
    v33[4] = KeyPath;
    *((unsigned char *)v33 + 40) = 1;
    v33[6] = v32;
    v33[7] = v31;
    swift_storeEnumTagMultiPayload();
    sub_100063814(&qword_1010CC420);
    sub_100B6D4B4();
    sub_100B6D574();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_100B669E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100063814((uint64_t *)&unk_1010CD5A0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v18 - v7;
  type metadata accessor for RazzmatazzController(0);
  sub_100B6D8AC(&qword_1010CC2E0, (void (*)(uint64_t))type metadata accessor for RazzmatazzController);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  long long v8 = v21;
  swift_bridgeObjectRelease();
  long long v20 = v8;
  long long v21 = *(_OWORD *)(a1 + 40);
  uint64_t v22 = *(void *)(a1 + 56);
  uint64_t v9 = (_OWORD *)swift_allocObject();
  long long v10 = *(_OWORD *)(a1 + 16);
  v9[1] = *(_OWORD *)a1;
  void v9[2] = v10;
  long long v11 = *(_OWORD *)(a1 + 48);
  _OWORD v9[3] = *(_OWORD *)(a1 + 32);
  v9[4] = v11;
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter();
  sub_1006F8F64((uint64_t)&v21);
  sub_100477868((uint64_t)&v22);
  sub_10005D27C();
  uint64_t v12 = v18;
  Button<>.init<A>(_:action:)();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  long long v14 = v19;
  v13(v19, v12, v4);
  *(_OWORD *)a2 = xmmword_100E52660;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a2 + 32) = xmmword_100E52670;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = _swiftEmptyArrayStorage;
  uint64_t v15 = sub_100063814(&qword_1010CC4B0);
  v13((char *)(a2 + *(int *)(v15 + 64)), v14, v4);
  sub_1001CC8D0(1918985550, 0xE400000000000000, 0);
  swift_bridgeObjectRetain();
  sub_1001CC8D0(32, 0xE100000000000000, 0);
  long long v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  swift_bridgeObjectRetain();
  v16(v12, v4);
  v16(v14, v4);
  sub_1000D1500(32, 0xE100000000000000, 0);
  swift_bridgeObjectRelease();
  sub_1000D1500(1918985550, 0xE400000000000000, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100B66D40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  sub_100063814(&qword_1010CB460);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100063814(&qword_1010CC3F8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100063814(&qword_1010CC4A8);
  uint64_t v6 = *(void *)(v38 - 8);
  __chkstk_darwin();
  long long v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814(&qword_1010CC3F0) - 8;
  __chkstk_darwin();
  long long v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v39 = sub_100063814(&qword_1010CC3E0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = static Font.callout.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006CAB8(v37, (uint64_t)v5, &qword_1010CC3A8);
  long long v16 = (uint64_t *)&v5[*(int *)(v3 + 36)];
  *long long v16 = KeyPath;
  v16[1] = v14;
  static Font.Weight.semibold.getter();
  sub_100B6D374();
  View.fontWeight(_:)();
  sub_1000637B8((uint64_t)v5, &qword_1010CC3F8);
  uint64_t v17 = type metadata accessor for Text.Case();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v2, 1, 1, v17);
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = (uint64_t *)&v11[*(int *)(v9 + 44)];
  uint64_t v20 = sub_100063814(&qword_1010CB458);
  sub_10006CAB8((uint64_t)v2, (uint64_t)v19 + *(int *)(v20 + 28), &qword_1010CB460);
  *uint64_t v19 = v18;
  uint64_t v21 = v38;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v38);
  sub_1000637B8((uint64_t)v2, &qword_1010CB460);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v21);
  char v22 = static Edge.Set.horizontal.getter();
  if (qword_1010C85F0 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_10006CAB8((uint64_t)v11, (uint64_t)v13, &qword_1010CC3F0);
  uint64_t v31 = &v13[*(int *)(v39 + 36)];
  *uint64_t v31 = v22;
  *((void *)v31 + 1) = v24;
  *((void *)v31 + 2) = v26;
  *((void *)v31 + 3) = v28;
  *((void *)v31 + 4) = v30;
  v31[40] = 0;
  sub_1000637B8((uint64_t)v11, &qword_1010CC3F0);
  if (qword_1010C8408 != -1) {
    swift_once();
  }
  long long v39 = static EdgeInsets.zero;
  uint64_t v32 = qword_10112C0E8;
  uint64_t v33 = unk_10112C0F0;
  uint64_t v34 = v40;
  sub_10006CAB8((uint64_t)v13, v40, &qword_1010CC3E0);
  uint64_t v35 = v34 + *(int *)(sub_100063814(&qword_1010CC3B0) + 36);
  *(_OWORD *)uint64_t v35 = v39;
  *(void *)(v35 + 16) = v32;
  *(void *)(v35 + 24) = v33;
  *(unsigned char *)(v35 + 32) = 0;
  return sub_1000637B8((uint64_t)v13, &qword_1010CC3E0);
}

uint64_t sub_100B671A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v50 = a5;
  sub_100063814(&qword_1010CB460);
  __chkstk_darwin();
  uint64_t v45 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100063814(&qword_1010CC4A0);
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v47 = v10;
  __chkstk_darwin();
  unint64_t v44 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100063814(&qword_1010CC480) - 8;
  __chkstk_darwin();
  unint64_t v43 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v48 = sub_100063814(&qword_1010CC470);
  __chkstk_darwin();
  uint64_t v49 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = static Font.callout.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v51 = a1;
  uint64_t v52 = a2;
  char v53 = a3 & 1;
  uint64_t v42 = a4;
  uint64_t v54 = a4;
  uint64_t v55 = KeyPath;
  uint64_t v56 = v15;
  sub_1001CC8D0(a1, a2, a3 & 1);
  swift_bridgeObjectRetain();
  static Font.Weight.semibold.getter();
  sub_100063814(&qword_1010CC488);
  sub_100B6D7E0(&qword_1010CC490, &qword_1010CC488, (unint64_t *)&unk_1010CE060, &qword_1010CB4A8);
  uint64_t v17 = v44;
  View.fontWeight(_:)();
  sub_1000D1500(a1, a2, a3 & 1);
  uint64_t v18 = (uint64_t)v43;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v19 = type metadata accessor for Text.Case();
  uint64_t v20 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v45, 1, 1, v19);
  uint64_t v21 = swift_getKeyPath();
  char v22 = (uint64_t *)(v18 + *(int *)(v12 + 44));
  uint64_t v23 = sub_100063814(&qword_1010CB458);
  sub_10006CAB8(v20, (uint64_t)v22 + *(int *)(v23 + 28), &qword_1010CB460);
  *char v22 = v21;
  uint64_t v25 = v46;
  uint64_t v24 = v47;
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v18, v17, v47);
  sub_1000637B8(v20, &qword_1010CB460);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v17, v24);
  char v26 = static Edge.Set.horizontal.getter();
  if (qword_1010C85F0 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v35 = v49;
  sub_10006CAB8(v18, v49, &qword_1010CC480);
  uint64_t v36 = v35 + *(int *)(v48 + 36);
  *(unsigned char *)uint64_t v36 = v26;
  *(void *)(v36 + 8) = v28;
  *(void *)(v36 + 16) = v30;
  *(void *)(v36 + 24) = v32;
  *(void *)(v36 + 32) = v34;
  *(unsigned char *)(v36 + 40) = 0;
  sub_1000637B8(v18, &qword_1010CC480);
  if (qword_1010C8408 != -1) {
    swift_once();
  }
  long long v48 = static EdgeInsets.zero;
  uint64_t v37 = qword_10112C0E8;
  uint64_t v38 = unk_10112C0F0;
  uint64_t v39 = v50;
  sub_10006CAB8(v35, v50, &qword_1010CC470);
  uint64_t v40 = v39 + *(int *)(sub_100063814(&qword_1010CC398) + 36);
  *(_OWORD *)uint64_t v40 = v48;
  *(void *)(v40 + 16) = v37;
  *(void *)(v40 + 24) = v38;
  *(unsigned char *)(v40 + 32) = 0;
  return sub_1000637B8(v35, &qword_1010CC470);
}

uint64_t sub_100B67648(uint64_t a1)
{
  type metadata accessor for RazzmatazzController(0);
  sub_100B6D8AC(&qword_1010CC2E0, (void (*)(uint64_t))type metadata accessor for RazzmatazzController);
  StateObject.wrappedValue.getter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  long long v7 = *(_OWORD *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v2 = (_OWORD *)swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 16);
  v2[1] = *(_OWORD *)a1;
  v2[2] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v2[3] = *(_OWORD *)(a1 + 32);
  v2[4] = v4;
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter();
  sub_1006F8F64((uint64_t)&v7);
  sub_100477868((uint64_t)&v6);
  sub_100063814(&qword_1010C9A38);
  type metadata accessor for RazzmatazzView.CompactListCell();
  sub_100063858(&qword_1010CB550, &qword_1010C9A38);
  sub_100B6D8AC(&qword_1010CB558, (void (*)(uint64_t))type metadata accessor for Razzmatazz);
  sub_100B6D8AC(&qword_1010CC458, (void (*)(uint64_t))type metadata accessor for RazzmatazzView.CompactListCell);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100B678A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  sub_100B6D8F4(a1, a3, type metadata accessor for Razzmatazz);
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  long long v7 = (void *)(a3 + *(int *)(type metadata accessor for RazzmatazzView.CompactListCell() + 20));
  *long long v7 = v6;
  v7[1] = v5;

  return swift_retain();
}

uint64_t sub_100B6791C(uint64_t a1)
{
  v1[2] = a1;
  sub_100063814(&qword_1010CAA90);
  v1[3] = swift_task_alloc();
  v1[4] = type metadata accessor for MainActor();
  v1[5] = static MainActor.shared.getter();
  v1[6] = static MainActor.shared.getter();
  uint64_t v3 = *(void *)(a1 + 56);
  long long v4 = (void *)swift_task_alloc();
  v1[7] = v4;
  *long long v4 = v1;
  v4[1] = sub_100B67A08;
  return sub_100B6C564(v3);
}

uint64_t sub_100B67A08(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B67B4C, v3, v2);
}

uint64_t sub_100B67B4C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 24);
  swift_release();
  type metadata accessor for RazzmatazzController(0);
  sub_100B6D8AC(&qword_1010CC2E0, (void (*)(uint64_t))type metadata accessor for RazzmatazzController);
  uint64_t v3 = StateObject.wrappedValue.getter();
  uint64_t v4 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v5 = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = v3;
  v6[5] = v1;
  sub_100066A94(v2, (uint64_t)&unk_1010CC390, (uint64_t)v6);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B6DD6C, v8, v7);
}

uint64_t sub_100B67D0C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  void *v2 = v1;
  v2[1] = sub_100081D08;
  return sub_100B6791C(v0 + 16);
}

uint64_t sub_100B67DA0@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for RazzmatazzController(0);
  sub_100B6D8AC(&qword_1010CC2E0, (void (*)(uint64_t))type metadata accessor for RazzmatazzController);
  StateObject.wrappedValue.getter();
  *(void *)a1 = ObservedObject.init(wrappedValue:)();
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = sub_100B4A9D0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CitySelectionView(0) + 24));
  *uint64_t v3 = swift_getKeyPath();
  sub_100063814(&qword_1010C8950);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100B67EA8@<X0>(uint64_t a1@<X8>)
{
  return sub_100B67DA0(a1);
}

unint64_t sub_100B67EB0()
{
  unint64_t result = qword_1010CC198;
  if (!qword_1010CC198)
  {
    sub_10006389C(&qword_1010CC158);
    sub_100063858(&qword_1010CC1A0, &qword_1010CC150);
    sub_100B6D8AC(&qword_1010CB318, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC198);
  }
  return result;
}

uint64_t sub_100B67F80(uint64_t a1)
{
  type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin();
  uint64_t v2 = sub_100063814(&qword_1010CC1B8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.topBarTrailing.getter();
  uint64_t v12 = a1;
  sub_100063814(&qword_1010CC318);
  uint64_t v6 = sub_10006389C(&qword_1010CC320);
  uint64_t v7 = type metadata accessor for ButtonMenuStyle();
  uint64_t v8 = sub_100063858(&qword_1010CC328, &qword_1010CC320);
  uint64_t v9 = sub_100B6D8AC(&qword_1010CC330, (void (*)(uint64_t))&type metadata accessor for ButtonMenuStyle);
  uint64_t v13 = v6;
  uint64_t v14 = v7;
  uint64_t v15 = v8;
  uint64_t v16 = v9;
  swift_getOpaqueTypeConformance2();
  ToolbarItem<>.init(placement:content:)();
  sub_100063858(&qword_1010CC1C0, &qword_1010CC1B8);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100B681CC()
{
  return sub_100B67F80(*(void *)(v0 + 16));
}

uint64_t sub_100B681D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v11[1] = a2;
  uint64_t v3 = type metadata accessor for ButtonMenuStyle();
  v11[0] = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_1010CC320);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[8] = a1;
  void v11[4] = a1;
  sub_100063814(&qword_1010CC338);
  sub_100063814(&qword_1010CC340);
  sub_100B6D0E4();
  sub_100063858(&qword_1010CC360, &qword_1010CC340);
  Menu.init(content:label:)();
  ButtonMenuStyle.init()();
  sub_100063858(&qword_1010CC328, &qword_1010CC320);
  sub_100B6D8AC(&qword_1010CC330, (void (*)(uint64_t))&type metadata accessor for ButtonMenuStyle);
  View.menuStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v11[0] + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100B68474()
{
  return Picker<>.init<A>(_:selection:content:)();
}

uint64_t sub_100B68558@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v24 = sub_100063814(&qword_1010CC378) - 8;
  __chkstk_darwin();
  uint64_t v2 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100063814(&qword_1010CC0F8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010CC380) - 8;
  __chkstk_darwin();
  uint64_t v22 = (uint64_t)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)v20 - v9;
  __chkstk_darwin();
  uint64_t v12 = (char *)v20 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)v20 - v13;
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v21(v2, v6, v3);
  v2[*(int *)(v24 + 44)] = 0;
  sub_10006CAB8((uint64_t)v2, (uint64_t)v12, &qword_1010CC378);
  v12[*(int *)(v7 + 44)] = 0;
  sub_1000637B8((uint64_t)v2, &qword_1010CC378);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20[1] = v4 + 8;
  v15(v6, v3);
  sub_10003CABC((uint64_t)v12, (uint64_t)v14, &qword_1010CC380);
  LocalizedStringKey.init(stringLiteral:)();
  Label<>.init(_:systemImage:)();
  v21(v2, v6, v3);
  v2[*(int *)(v24 + 44)] = 1;
  sub_10006CAB8((uint64_t)v2, (uint64_t)v10, &qword_1010CC378);
  v10[*(int *)(v7 + 44)] = 1;
  sub_1000637B8((uint64_t)v2, &qword_1010CC378);
  v15(v6, v3);
  sub_10003CABC((uint64_t)v10, (uint64_t)v12, &qword_1010CC380);
  sub_10006CAB8((uint64_t)v14, (uint64_t)v10, &qword_1010CC380);
  uint64_t v16 = v22;
  sub_10006CAB8((uint64_t)v12, v22, &qword_1010CC380);
  uint64_t v17 = v23;
  sub_10006CAB8((uint64_t)v10, v23, &qword_1010CC380);
  uint64_t v18 = sub_100063814(&qword_1010CC388);
  sub_10006CAB8(v16, v17 + *(int *)(v18 + 48), &qword_1010CC380);
  sub_1000637B8((uint64_t)v12, &qword_1010CC380);
  sub_1000637B8((uint64_t)v14, &qword_1010CC380);
  sub_1000637B8(v16, &qword_1010CC380);
  return sub_1000637B8((uint64_t)v10, &qword_1010CC380);
}

uint64_t sub_100B68920@<X0>(uint64_t *a1@<X8>)
{
  sub_100063814(&qword_1010CE6C0);
  __chkstk_darwin();
  uint64_t v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Image.init(systemName:)();
  static SymbolRenderingMode.palette.getter();
  uint64_t v4 = type metadata accessor for SymbolRenderingMode();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 0, 1, v4);
  uint64_t v5 = Image.symbolRenderingMode(_:)();
  swift_release();
  sub_1000637B8((uint64_t)v3, &qword_1010CE6C0);
  AppStorage.wrappedValue.getter();
  if (v10[15] == 1) {
    uint64_t v6 = static Color.white.getter();
  }
  else {
    uint64_t v6 = static Color.accentColor.getter();
  }
  uint64_t v7 = v6;
  AppStorage.wrappedValue.getter();
  if (v10[14] == 1)
  {
    uint64_t result = static Color.accentColor.getter();
  }
  else
  {
    id v9 = [self tertiarySystemFillColor];
    uint64_t result = Color.init(uiColor:)();
  }
  *a1 = v5;
  a1[1] = v7;
  a1[2] = result;
  return result;
}

void sub_100B68ABC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  sub_100063814(&qword_1010CAA90);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 != *a2)
  {
    uint64_t v8 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
    type metadata accessor for MainActor();
    long long v9 = *(_OWORD *)(a3 + 16);
    char v18 = *(unsigned char *)(a3 + 32);
    long long v16 = *(_OWORD *)(a3 + 40);
    long long v17 = v9;
    uint64_t v15 = *(void *)(a3 + 56);
    swift_retain();
    sub_10020F160((uint64_t)&v17);
    sub_1006F8F64((uint64_t)&v16);
    sub_100477868((uint64_t)&v15);
    uint64_t v10 = static MainActor.shared.getter();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = &protocol witness table for MainActor;
    long long v12 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v11 + 32) = *(_OWORD *)a3;
    *(_OWORD *)(v11 + 48) = v12;
    long long v13 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(v11 + 64) = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(v11 + 80) = v13;
    sub_100066A94((uint64_t)v7, (uint64_t)&unk_1010CC2D0, v11);
    swift_release();
  }
}

void sub_100B68C34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_100B68ABC(a1, a2, v2 + 16);
}

uint64_t sub_100B68C3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B68C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  sub_100063814(&qword_1010CAA90);
  v4[3] = swift_task_alloc();
  v4[4] = type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  void v4[6] = static MainActor.shared.getter();
  uint64_t v6 = *(void *)(a4 + 56);
  uint64_t v7 = (void *)swift_task_alloc();
  v4[7] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_100B68D44;
  return sub_100B6C564(v6);
}

uint64_t sub_100B68D44(uint64_t a1)
{
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B68E88, v3, v2);
}

uint64_t sub_100B68E88()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 24);
  swift_release();
  type metadata accessor for RazzmatazzController(0);
  sub_100B6D8AC(&qword_1010CC2E0, (void (*)(uint64_t))type metadata accessor for RazzmatazzController);
  uint64_t v3 = StateObject.wrappedValue.getter();
  uint64_t v4 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 1, 1, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v5 = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = v3;
  v6[5] = v1;
  sub_100066A94(v2, (uint64_t)&unk_1010CC2E8, (uint64_t)v6);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B69044, v8, v7);
}

uint64_t sub_100B69044()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B690B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  sub_100063814(&qword_1010CC258);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010CC260);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010CC268);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100063814(&qword_1010CC270);
  __chkstk_darwin();
  long long v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = static VerticalAlignment.center.getter();
  if (qword_1010C85F0 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1010CC148;
  *(void *)uint64_t v3 = v13;
  *((void *)v3 + 1) = v14;
  v3[16] = 0;
  uint64_t v15 = sub_100063814(&qword_1010CC278);
  sub_100B69470(v1, (uint64_t)&v3[*(int *)(v15 + 44)]);
  char v16 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  sub_10006CAB8((uint64_t)v3, (uint64_t)v6, &qword_1010CC258);
  uint64_t v25 = &v6[*(int *)(v4 + 36)];
  *uint64_t v25 = v16;
  *((void *)v25 + 1) = v18;
  *((void *)v25 + 2) = v20;
  *((void *)v25 + 3) = v22;
  *((void *)v25 + 4) = v24;
  v25[40] = 0;
  sub_1000637B8((uint64_t)v3, &qword_1010CC258);
  char v26 = static Edge.Set.leading.getter();
  if (qword_1010C85E8 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_10006CAB8((uint64_t)v6, (uint64_t)v9, &qword_1010CC260);
  uint64_t v35 = &v9[*(int *)(v7 + 36)];
  *uint64_t v35 = v26;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  v35[40] = 0;
  sub_1000637B8((uint64_t)v6, &qword_1010CC260);
  if (qword_1010C8408 != -1) {
    swift_once();
  }
  long long v47 = static EdgeInsets.zero;
  uint64_t v36 = qword_10112C0E8;
  uint64_t v37 = unk_10112C0F0;
  sub_10006CAB8((uint64_t)v9, (uint64_t)v12, &qword_1010CC268);
  uint64_t v38 = &v12[*(int *)(v10 + 36)];
  *(_OWORD *)uint64_t v38 = v47;
  *((void *)v38 + 2) = v36;
  *((void *)v38 + 3) = v37;
  v38[32] = 0;
  sub_1000637B8((uint64_t)v9, &qword_1010CC268);
  uint64_t v39 = static Alignment.leading.getter();
  uint64_t v41 = v40;
  uint64_t v42 = sub_100063814(&qword_1010CC280);
  uint64_t v43 = v48;
  uint64_t v44 = v48 + *(int *)(v42 + 36);
  sub_100B6A4FC(v44);
  uint64_t v45 = (uint64_t *)(v44 + *(int *)(sub_100063814(&qword_1010CC288) + 36));
  *uint64_t v45 = v39;
  v45[1] = v41;
  return sub_10003CABC((uint64_t)v12, v43, &qword_1010CC270);
}

uint64_t sub_100B69470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v64 = *(void *)(type metadata accessor for RazzmatazzView.CompactListCell() - 8);
  __chkstk_darwin();
  uint64_t v65 = v3;
  uint64_t v67 = (uint64_t)&KeyPath - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v4 = *(void *)(v74 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&KeyPath - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814((uint64_t *)&unk_1010C8960);
  __chkstk_darwin();
  uint64_t v10 = (char *)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100063814(&qword_1010CC0C8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&KeyPath - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v72 + 1) = sub_100063814(&qword_1010CDF40);
  __chkstk_darwin();
  char v16 = (char *)&KeyPath - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100063814(&qword_1010CC0D0);
  __chkstk_darwin();
  uint64_t v76 = (uint64_t)&KeyPath - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v75 = (uint64_t)&KeyPath - v18;
  type metadata accessor for Razzmatazz(0);
  uint64_t v66 = a1;
  sub_100AE5E2C(v10);
  uint64_t v19 = sub_100063814(&qword_1010CF250);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 6, 10, v19);
  if (qword_1010C85E0 != -1) {
    swift_once();
  }
  uint64_t v77 = qword_1010CC138;
  char v78 = 0;
  uint64_t v79 = qword_1010CC138;
  char v80 = 0;
  uint64_t v81 = 0;
  __int16 v82 = 513;
  uint64_t v20 = v74;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v74);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v10, (uint64_t)v8, (uint64_t)&v77, (uint64_t)v6, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  sub_100B6DA18((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder);
  sub_1000637B8((uint64_t)v10, (uint64_t *)&unk_1010C8960);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v11);
  uint64_t v21 = &v16[*(int *)(*((void *)&v72 + 1) + 36)];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  unsigned char v21[16] = 1;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (qword_1010C85A8 != -1) {
    swift_once();
  }
  uint64_t v22 = static Border.artwork;
  uint64_t v23 = qword_10112CC90;
  char v24 = byte_10112CC98;
  uint64_t v25 = v76;
  sub_10006CAB8((uint64_t)v16, v76, &qword_1010CDF40);
  uint64_t v26 = v25 + *(int *)(v73 + 36);
  *(void *)uint64_t v26 = v22;
  *(void *)(v26 + 8) = v23;
  *(unsigned char *)(v26 + 16) = v24;
  *(void *)(v26 + 24) = 0;
  *(void *)(v26 + 32) = 0;
  *(unsigned char *)(v26 + 40) = 1;
  swift_retain();
  sub_1000637B8((uint64_t)v16, &qword_1010CDF40);
  uint64_t v27 = v75;
  sub_10003CABC(v25, v75, &qword_1010CC0D0);
  uint64_t v28 = static HorizontalAlignment.leading.getter();
  if (qword_1010C85E8 != -1) {
    swift_once();
  }
  uint64_t v73 = qword_1010CC140;
  uint64_t v29 = v66;
  sub_100B69D30(v66, &v100);
  uint64_t v69 = v101;
  uint64_t v70 = v100;
  unsigned __int8 v30 = v102;
  long long v72 = v104;
  uint64_t v74 = v105;
  unsigned __int8 v31 = v106;
  uint64_t v62 = v107;
  uint64_t v63 = *((void *)&v106 + 1);
  uint64_t v61 = v108;
  unsigned __int8 v32 = v109;
  uint64_t v71 = v110;
  uint64_t KeyPath = swift_getKeyPath();
  unsigned __int8 v91 = 0;
  unsigned __int8 v89 = v30;
  unsigned __int8 v87 = v31;
  unsigned __int8 v85 = v32;
  char v83 = 0;
  uint64_t v33 = v29;
  uint64_t v34 = v67;
  sub_100B6D8F4(v33, v67, (uint64_t (*)(void))type metadata accessor for RazzmatazzView.CompactListCell);
  unint64_t v35 = (*(unsigned __int8 *)(v64 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  uint64_t v36 = swift_allocObject();
  sub_100B6DA78(v34, v36 + v35, (uint64_t (*)(void))type metadata accessor for RazzmatazzView.CompactListCell);
  sub_10006CAB8(v27, v25, &qword_1010CC0D0);
  unsigned __int8 v37 = v91;
  LODWORD(v64) = v91;
  unsigned __int8 v38 = v89;
  LODWORD(v65) = v89;
  uint64_t v39 = v25;
  unsigned __int8 v40 = v87;
  LODWORD(v66) = v87;
  unsigned __int8 v41 = v85;
  LODWORD(v67) = v85;
  char v42 = v83;
  uint64_t v43 = v68;
  sub_10006CAB8(v39, v68, &qword_1010CC0D0);
  uint64_t v44 = (int *)sub_100063814(&qword_1010CC2B0);
  uint64_t v45 = (_OWORD *)(v43 + v44[12]);
  *(void *)&long long v92 = v28;
  *((void *)&v92 + 1) = v73;
  LOBYTE(v93) = v37;
  *(_DWORD *)((char *)&v93 + 1) = *(_DWORD *)v90;
  DWORD1(v93) = *(_DWORD *)&v90[3];
  *((void *)&v93 + 1) = v70;
  *(void *)&long long v94 = v69;
  BYTE8(v94) = v38;
  *(_DWORD *)((char *)&v94 + 9) = *(_DWORD *)v88;
  HIDWORD(v94) = *(_DWORD *)&v88[3];
  long long v95 = v72;
  *(void *)&long long v96 = v74;
  BYTE8(v96) = v40;
  *(_DWORD *)((char *)&v96 + 9) = *(_DWORD *)v86;
  HIDWORD(v96) = *(_DWORD *)&v86[3];
  uint64_t v47 = v62;
  uint64_t v46 = v63;
  *(void *)&long long v97 = v63;
  *((void *)&v97 + 1) = v62;
  uint64_t v48 = v61;
  *(void *)&long long v98 = v61;
  BYTE8(v98) = v41;
  *(_DWORD *)((char *)&v98 + 9) = *(_DWORD *)v84;
  HIDWORD(v98) = *(_DWORD *)&v84[3];
  uint64_t v49 = KeyPath;
  *(void *)&v99[0] = v71;
  *((void *)&v99[0] + 1) = KeyPath;
  *(void *)&v99[1] = 1;
  BYTE8(v99[1]) = v42;
  long long v50 = v92;
  long long v51 = v93;
  long long v52 = v72;
  long long v53 = v96;
  void v45[2] = v94;
  void v45[3] = v52;
  *uint64_t v45 = v50;
  v45[1] = v51;
  long long v54 = v97;
  long long v55 = v98;
  *(_OWORD *)((char *)v45 + 121) = *(_OWORD *)((char *)v99 + 9);
  long long v56 = v99[0];
  v45[6] = v55;
  v45[7] = v56;
  v45[4] = v53;
  v45[5] = v54;
  uint64_t v57 = v43 + v44[16];
  *(void *)uint64_t v57 = 0;
  *(unsigned char *)(v57 + 8) = 0;
  uint64_t v58 = (uint64_t (**)())(v43 + v44[20]);
  *uint64_t v58 = sub_100B6BF18;
  v58[1] = (uint64_t (*)())v36;
  sub_100B6BF88((uint64_t)&v92);
  swift_retain();
  sub_1000637B8(v75, &qword_1010CC0D0);
  swift_release();
  uint64_t v100 = v28;
  uint64_t v101 = v73;
  unsigned __int8 v102 = v64;
  *(_DWORD *)long long v103 = *(_DWORD *)v90;
  *(_DWORD *)&v103[3] = *(_DWORD *)&v90[3];
  *(void *)&long long v104 = v70;
  *((void *)&v104 + 1) = v69;
  LOBYTE(v105) = v65;
  *(_DWORD *)((char *)&v105 + 1) = *(_DWORD *)v88;
  HIDWORD(v105) = *(_DWORD *)&v88[3];
  long long v106 = v72;
  uint64_t v107 = v74;
  LOBYTE(v108) = v66;
  HIDWORD(v108) = *(_DWORD *)&v86[3];
  *(_DWORD *)((char *)&v108 + 1) = *(_DWORD *)v86;
  uint64_t v109 = v46;
  uint64_t v110 = v47;
  uint64_t v111 = v48;
  char v112 = v67;
  *(_DWORD *)&v113[3] = *(_DWORD *)&v84[3];
  *(_DWORD *)uint64_t v113 = *(_DWORD *)v84;
  uint64_t v114 = v71;
  uint64_t v115 = v49;
  uint64_t v116 = 1;
  char v117 = v42;
  sub_100B6C044((uint64_t)&v100);
  return sub_1000637B8(v76, &qword_1010CC0D0);
}

uint64_t sub_100B69D30@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v70 = a2;
  type metadata accessor for FormatStyleCapitalizationContext();
  __chkstk_darwin();
  uint64_t v64 = (char *)&v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Calendar();
  __chkstk_darwin();
  uint64_t v63 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v62 = type metadata accessor for TimeZone();
  uint64_t v4 = *(void *)(v62 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CC2B8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CC2C0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for Date.FormatStyle();
  uint64_t v69 = *(void *)(v73 - 8);
  __chkstk_darwin();
  uint64_t v71 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Razzmatazz(0);
  *(void *)&long long v77 = Artist.name.getter();
  *((void *)&v77 + 1) = v13;
  unint64_t v65 = sub_10005D27C();
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  LODWORD(v77) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v72 = Text.foregroundStyle<A>(_:)();
  uint64_t v67 = v19;
  uint64_t v68 = v20;
  int v66 = v21 & 1;
  sub_1000D1500(v14, v16, v18);
  swift_bridgeObjectRelease();
  static Date.FormatStyle.DateStyle.abbreviated.getter();
  uint64_t v22 = type metadata accessor for Date.FormatStyle.DateStyle();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 0, 1, v22);
  static Date.FormatStyle.TimeStyle.omitted.getter();
  uint64_t v23 = type metadata accessor for Date.FormatStyle.TimeStyle();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, 0, 1, v23);
  char v24 = (char *)(v61 + *(int *)(v12 + 32));
  uint64_t v25 = type metadata accessor for Razzmatazz.Venue(0);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, &v24[*(int *)(v25 + 32)], v62);
  static Locale.autoupdatingCurrent.getter();
  static Calendar.autoupdatingCurrent.getter();
  static FormatStyleCapitalizationContext.unknown.getter();
  Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
  sub_100B6D8AC(&qword_1010CB488, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  Date.formatted<A>(_:)();
  long long v77 = v76;
  v26._countAndFlagsBits = 12288995;
  v26._object = (void *)0xA300000000000000;
  String.append(_:)(v26);
  v27._countAndFlagsBits = Razzmatazz.shortName.getter();
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  LODWORD(v77) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v28 = Text.foregroundStyle<A>(_:)();
  uint64_t v30 = v29;
  LOBYTE(v8) = v31;
  swift_bridgeObjectRelease();
  static Font.footnote.getter();
  uint64_t v63 = (char *)Text.font(_:)();
  uint64_t v62 = v32;
  LOBYTE(v12) = v33;
  uint64_t v64 = v34;
  swift_release();
  char v35 = v12 & 1;
  sub_1000D1500(v28, v30, v8 & 1);
  swift_bridgeObjectRelease();
  long long v36 = *((_OWORD *)v24 + 3);
  long long v77 = *((_OWORD *)v24 + 2);
  long long v78 = v36;
  long long v37 = *((_OWORD *)v24 + 5);
  long long v79 = *((_OWORD *)v24 + 4);
  long long v80 = v37;
  *(void *)&long long v76 = sub_100B4E168(2);
  *((void *)&v76 + 1) = v38;
  uint64_t v39 = Text.init<A>(_:)();
  uint64_t v41 = v40;
  LOBYTE(v10) = v42 & 1;
  LODWORD(v76) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v43 = Text.foregroundStyle<A>(_:)();
  uint64_t v45 = v44;
  LOBYTE(v24) = v46 & 1;
  sub_1000D1500(v39, v41, (char)v10);
  swift_bridgeObjectRelease();
  static Font.footnote.getter();
  uint64_t v47 = Text.font(_:)();
  uint64_t v49 = v48;
  LOBYTE(v4) = v50;
  uint64_t v52 = v51;
  swift_release();
  LOBYTE(v4) = v4 & 1;
  sub_1000D1500(v43, v45, (char)v24);
  swift_bridgeObjectRelease();
  char v53 = v66;
  LOBYTE(v76) = v66;
  char v75 = v35;
  char v74 = v4;
  long long v54 = v70;
  uint64_t v55 = v72;
  uint64_t v56 = v67;
  *uint64_t v70 = v72;
  v54[1] = v56;
  *((unsigned char *)v54 + 16) = v53;
  uint64_t v57 = (uint64_t)v63;
  v54[3] = v68;
  v54[4] = v57;
  uint64_t v58 = v62;
  v54[5] = v62;
  *((unsigned char *)v54 + 48) = v35;
  v54[7] = v64;
  v54[8] = v47;
  v54[9] = v49;
  *((unsigned char *)v54 + 80) = v4;
  v54[11] = v52;
  sub_1001CC8D0(v55, v56, v53);
  swift_bridgeObjectRetain();
  sub_1001CC8D0(v57, v58, v35);
  swift_bridgeObjectRetain();
  sub_1001CC8D0(v47, v49, v4);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v69 + 8);
  swift_bridgeObjectRetain();
  v59(v71, v73);
  sub_1000D1500(v47, v49, v74);
  swift_bridgeObjectRelease();
  sub_1000D1500(v57, v58, v75);
  swift_bridgeObjectRelease();
  sub_1000D1500(v72, v56, v76);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100B6A4FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v48 = sub_100063814(&qword_1010CE1A0);
  __chkstk_darwin();
  uint64_t v2 = (uint64_t *)((char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = type metadata accessor for Image.Scale();
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin();
  uint64_t v49 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CC290);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100063814(&qword_1010CC298);
  __chkstk_darwin();
  uint64_t v7 = (uint64_t *)((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v47 = sub_100063814(&qword_1010CC2A0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100063814(&qword_1010CC2A8);
  uint64_t v53 = *(void *)(v10 - 8);
  uint64_t v54 = v10;
  __chkstk_darwin();
  uint64_t v51 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MusicFavoriteStatus();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  char v17 = (char *)&v46 - v16;
  type metadata accessor for Razzmatazz(0);
  Artist.favoriteStatus.getter();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for MusicFavoriteStatus.favorited(_:), v12);
  char v18 = static MusicFavoriteStatus.== infix(_:_:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v13 + 8);
  v19(v15, v12);
  v19(v17, v12);
  if (v18)
  {
    uint64_t v20 = Image.init(systemName:)();
    static Font.Weight.semibold.getter();
    uint64_t v21 = type metadata accessor for Font.Design();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v5, 1, 1, v21);
    uint64_t v22 = static Font.system(size:weight:design:)();
    sub_1000637B8((uint64_t)v5, &qword_1010CC290);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v25 = v49;
    uint64_t v24 = v50;
    uint64_t v26 = v52;
    (*(void (**)(char *, void, uint64_t))(v50 + 104))(v49, enum case for Image.Scale.medium(_:), v52);
    uint64_t v27 = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))((char *)v2 + *(int *)(v48 + 28), v25, v26);
    uint64_t *v2 = v27;
    sub_10006CAB8((uint64_t)v2, (uint64_t)v7 + *(int *)(v46 + 36), &qword_1010CE1A0);
    *uint64_t v7 = v20;
    v7[1] = KeyPath;
    _OWORD v7[2] = v22;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000637B8((uint64_t)v2, &qword_1010CE1A0);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v28 = static Color.accentColor.getter();
    uint64_t v29 = swift_getKeyPath();
    sub_10006CAB8((uint64_t)v7, (uint64_t)v9, &qword_1010CC298);
    uint64_t v30 = (uint64_t *)&v9[*(int *)(v47 + 36)];
    *uint64_t v30 = v29;
    v30[1] = v28;
    sub_1000637B8((uint64_t)v7, &qword_1010CC298);
    char v31 = static Edge.Set.leading.getter();
    if (qword_1010C85E8 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v40 = v51;
    sub_10006CAB8((uint64_t)v9, v51, &qword_1010CC2A0);
    uint64_t v41 = v54;
    uint64_t v42 = v40 + *(int *)(v54 + 36);
    *(unsigned char *)uint64_t v42 = v31;
    *(void *)(v42 + 8) = v33;
    *(void *)(v42 + 16) = v35;
    *(void *)(v42 + 24) = v37;
    *(void *)(v42 + 32) = v39;
    *(unsigned char *)(v42 + 40) = 0;
    sub_1000637B8((uint64_t)v9, &qword_1010CC2A0);
    uint64_t v43 = v55;
    sub_10003CABC(v40, v55, &qword_1010CC2A8);
    uint64_t v44 = 0;
  }
  else
  {
    uint64_t v44 = 1;
    uint64_t v41 = v54;
    uint64_t v43 = v55;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v43, v44, 1, v41);
}

void sub_100B6AB58()
{
  qword_1010CC138 = 0x404B000000000000;
}

uint64_t sub_100B6AB68@<X0>(uint64_t a1@<X8>)
{
  return RazzmatazzView.body.getter(a1);
}

uint64_t destroy for RazzmatazzView()
{
  swift_release();
  sub_10020EEF0();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter();
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  KeyValueObservationTrigger.keyPath.getter();
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_10020EEF0();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for RazzmatazzView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  char v4 = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = v4;
  sub_10020EEF0();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for RazzmatazzView()
{
  return &type metadata for RazzmatazzView;
}

uint64_t sub_100B6ADAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_100B6AF50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v34 = *a2;
    *char v4 = *a2;
    char v4 = (uint64_t *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = (int *)type metadata accessor for Razzmatazz(0);
    uint64_t v9 = v8[6];
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = v8[7];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for Artist();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = v8[8];
    uint64_t v19 = (uint64_t *)((char *)v4 + v18);
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *uint64_t v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v18 + 24);
    _OWORD v19[2] = *(uint64_t *)((char *)a2 + v18 + 16);
    v19[3] = v22;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v18 + 40);
    v19[4] = *(uint64_t *)((char *)a2 + v18 + 32);
    v19[5] = v23;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v18 + 56);
    void v19[6] = *(uint64_t *)((char *)a2 + v18 + 48);
    v19[7] = v24;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v18 + 72);
    unsigned char v19[8] = *(uint64_t *)((char *)a2 + v18 + 64);
    v19[9] = v25;
    uint64_t v26 = *(uint64_t *)((char *)a2 + v18 + 88);
    v19[10] = *(uint64_t *)((char *)a2 + v18 + 80);
    v19[11] = v26;
    uint64_t v39 = *(void **)((char *)a2 + v18 + 96);
    v19[12] = v39;
    uint64_t v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
    uint64_t v37 = &v20[v27];
    uint64_t v38 = (char *)v19 + v27;
    uint64_t v28 = type metadata accessor for TimeZone();
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v29 = v39;
    v36(v38, v37, v28);
    uint64_t v30 = *(int *)(a3 + 20);
    char v31 = (uint64_t *)((char *)v4 + v30);
    uint64_t v32 = (uint64_t *)((char *)a2 + v30);
    uint64_t v33 = v32[1];
    *char v31 = *v32;
    v31[1] = v33;
  }
  swift_retain();
  return v4;
}

void *sub_100B6B1A8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = v7[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = v7[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)((char *)a2 + v17 + 8);
  *uint64_t v18 = *(void *)((char *)a2 + v17);
  v18[1] = v20;
  uint64_t v21 = *(void *)((char *)a2 + v17 + 24);
  _OWORD v18[2] = *(void *)((char *)a2 + v17 + 16);
  v18[3] = v21;
  uint64_t v22 = *(void *)((char *)a2 + v17 + 40);
  v18[4] = *(void *)((char *)a2 + v17 + 32);
  v18[5] = v22;
  uint64_t v23 = *(void *)((char *)a2 + v17 + 56);
  void v18[6] = *(void *)((char *)a2 + v17 + 48);
  v18[7] = v23;
  uint64_t v24 = *(void *)((char *)a2 + v17 + 72);
  v18[8] = *(void *)((char *)a2 + v17 + 64);
  v18[9] = v24;
  uint64_t v25 = *(void *)((char *)a2 + v17 + 88);
  v18[10] = *(void *)((char *)a2 + v17 + 80);
  v18[11] = v25;
  uint64_t v37 = *(void **)((char *)a2 + v17 + 96);
  v18[12] = v37;
  uint64_t v26 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v35 = &v19[v26];
  uint64_t v36 = (char *)v18 + v26;
  uint64_t v27 = type metadata accessor for TimeZone();
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v28 = v37;
  v34(v36, v35, v27);
  uint64_t v29 = *(int *)(a3 + 20);
  uint64_t v30 = (void *)((char *)a1 + v29);
  char v31 = (void *)((char *)a2 + v29);
  uint64_t v32 = v31[1];
  *uint64_t v30 = *v31;
  v30[1] = v32;
  swift_retain();
  return a1;
}

void *sub_100B6B3B4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v7 = v6[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v6[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *(void *)((char *)a2 + v15);
  v16[1] = *(void *)((char *)a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _OWORD v16[2] = v17[2];
  v16[3] = v17[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v16[4] = v17[4];
  v16[5] = v17[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[6] = v17[6];
  v16[7] = v17[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[8] = v17[8];
  v16[9] = v17[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[10] = v17[10];
  v16[11] = v17[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)v17[12];
  uint64_t v19 = (void *)v16[12];
  v16[12] = v18;
  id v20 = v18;

  uint64_t v21 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v22 = (char *)v16 + v21;
  uint64_t v23 = (char *)v17 + v21;
  uint64_t v24 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = *(int *)(a3 + 20);
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100B6B620(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = v7[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = v7[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  long long v19 = *(_OWORD *)((char *)a2 + v16 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)((char *)a2 + v16);
  *((_OWORD *)v17 + 1) = v19;
  long long v20 = *(_OWORD *)((char *)a2 + v16 + 48);
  *((_OWORD *)v17 + 2) = *(_OWORD *)((char *)a2 + v16 + 32);
  *((_OWORD *)v17 + 3) = v20;
  long long v21 = *(_OWORD *)((char *)a2 + v16 + 80);
  *((_OWORD *)v17 + 4) = *(_OWORD *)((char *)a2 + v16 + 64);
  *((_OWORD *)v17 + 5) = v21;
  *((void *)v17 + 12) = *(void *)((char *)a2 + v16 + 96);
  uint64_t v22 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v23 = &v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_100B6B788(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v9 = v8[6];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = v8[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Artist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  uint64_t v17 = v8[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  long long v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = *(void *)((char *)a2 + v17 + 8);
  *uint64_t v18 = *(void *)((char *)a2 + v17);
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = v19[3];
  _OWORD v18[2] = v19[2];
  v18[3] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = v19[7];
  void v18[6] = v19[6];
  v18[7] = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = v19[9];
  v18[8] = v19[8];
  v18[9] = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = v19[11];
  v18[10] = v19[10];
  v18[11] = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = (void *)v18[12];
  v18[12] = v19[12];

  uint64_t v27 = *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v28 = (char *)v18 + v27;
  uint64_t v29 = (char *)v19 + v27;
  uint64_t v30 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_100B6B964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B6B978);
}

uint64_t sub_100B6B978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Razzmatazz(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100B6BA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B6BA4C);
}

uint64_t sub_100B6BA4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Razzmatazz(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for RazzmatazzView.CompactListCell()
{
  uint64_t result = qword_1010CC220;
  if (!qword_1010CC220) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100B6BB54()
{
  uint64_t result = type metadata accessor for Razzmatazz(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100B6BBEC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_100B6BC08()
{
  qword_1010CC140 = 0x4010000000000000;
}

void sub_100B6BC18()
{
  qword_1010CC148 = 0x4028000000000000;
}

uint64_t sub_100B6BC30()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_100B6BC54(uint64_t a1)
{
  type metadata accessor for Image.Scale();
  __n128 v2 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, __n128))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  return EnvironmentValues.imageScale.setter();
}

uint64_t sub_100B6BD30()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for RazzmatazzView.CompactListCell() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = (int *)type metadata accessor for Razzmatazz(0);
  uint64_t v4 = v2 + v3[6];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v2 + v3[7];
  uint64_t v7 = type metadata accessor for Artist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v2 + v3[8];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v9 = v8 + *(int *)(type metadata accessor for Razzmatazz.Venue(0) + 32);
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B6BF18()
{
  uint64_t v1 = type metadata accessor for RazzmatazzView.CompactListCell();
  uint64_t v2 = *(void *)(v1 - 8);
  return (*(uint64_t (**)(unint64_t))(v0
                                                     + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
                                                     + *(int *)(v1 + 20)))(v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)));
}

uint64_t sub_100B6BF88(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  char v7 = *(unsigned char *)(a1 + 104);
  sub_1001CC8D0(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_1001CC8D0(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_1001CC8D0(v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100B6C044(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  char v7 = *(unsigned char *)(a1 + 104);
  sub_1000D1500(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_1000D1500(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_1000D1500(v5, v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B6C100()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_10020EEF0();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B6C15C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1000154F4;
  return sub_100B68C58(a1, v4, v5, v1 + 32);
}

void *sub_100B6C210(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v27 = type metadata accessor for Razzmatazz(0);
  __chkstk_darwin();
  uint64_t v26 = (uint64_t)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)v23 - v9;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v32 = _swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    int v25 = a4 & 1;
    uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v14 = *(void *)(v8 + 72);
    v23[1] = v4;
    uint64_t v24 = (v13 + 32) & ~v13;
    uint64_t v15 = a1 + v24;
    do
    {
      sub_100B6D8F4(v15, (uint64_t)v10, type metadata accessor for Razzmatazz);
      uint64_t v16 = *(void **)&v10[*(int *)(v27 + 32) + 96];
      type metadata accessor for RazzmatazzController(0);
      sub_100B6D8AC(&qword_1010CC2E0, (void (*)(uint64_t))type metadata accessor for RazzmatazzController);
      StateObject.wrappedValue.getter();
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      swift_release();
      id v17 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v30 longitude:v31];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      [v16 distanceFromLocation:v17];
      double v19 = v18;

      if (v19 > 85000.0)
      {
        sub_100B6DA18((uint64_t)v10, type metadata accessor for Razzmatazz);
      }
      else
      {
        sub_100B6DA78((uint64_t)v10, v26, type metadata accessor for Razzmatazz);
        uint64_t v20 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100AFC234(0, v20[2] + 1, 1);
          uint64_t v20 = v32;
        }
        unint64_t v22 = v20[2];
        unint64_t v21 = v20[3];
        if (v22 >= v21 >> 1)
        {
          sub_100AFC234(v21 > 1, v22 + 1, 1);
          uint64_t v20 = v32;
        }
        void v20[2] = v22 + 1;
        sub_100B6DA78(v26, (uint64_t)v20 + v24 + v22 * v14, type metadata accessor for Razzmatazz);
      }
      v15 += v14;
      --v12;
    }
    while (v12);
    return v32;
  }
  return result;
}

uint64_t sub_100B6C564(uint64_t a1)
{
  v1[8] = a1;
  uint64_t v2 = type metadata accessor for Artist();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  uint64_t v3 = sub_100063814(&qword_1010CC2F0);
  v1[12] = v3;
  v1[13] = *(void *)(v3 - 8);
  v1[14] = swift_task_alloc();
  uint64_t v4 = sub_100063814(&qword_1010CC2F8);
  v1[15] = v4;
  v1[16] = *(void *)(v4 - 8);
  v1[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for MusicFavoriteStatus();
  v1[18] = v5;
  v1[19] = *(void *)(v5 - 8);
  v1[20] = swift_task_alloc();
  uint64_t v6 = sub_100063814(&qword_1010CC300);
  v1[21] = v6;
  v1[22] = *(void *)(v6 - 8);
  v1[23] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[24] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[25] = v8;
  v1[26] = v7;
  return _swift_task_switch(sub_100B6C7D4, v8, v7);
}

uint64_t sub_100B6C7D4()
{
  MusicLibraryRequest.init()();
  AppStorage.wrappedValue.getter();
  if (*(unsigned char *)(v0 + 232) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 160);
    uint64_t v2 = *(void *)(v0 + 144);
    uint64_t v3 = *(void *)(v0 + 152);
    swift_getKeyPath();
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for MusicFavoriteStatus.favorited(_:), v2);
    sub_100B6D8AC(&qword_1010CC310, (void (*)(uint64_t))&type metadata accessor for MusicFavoriteStatus);
    MusicLibraryRequest<>.filter<A>(matching:equalTo:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  }
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100B6C970;
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 136);
  return MusicLibraryRequest.response()(v6, v5);
}

uint64_t sub_100B6C970()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 208);
  uint64_t v4 = *(void *)(v2 + 200);
  if (v0) {
    uint64_t v5 = sub_100B6CD68;
  }
  else {
    uint64_t v5 = sub_100B6CAAC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100B6CAAC()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  swift_release();
  MusicLibraryResponse.items.getter();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = sub_100063858(&qword_1010CC308, &qword_1010CC2F0);
  uint64_t v5 = dispatch thunk of Collection.count.getter();
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = v0 + 7;
    sub_100AFC270(0, v5 & ~(v5 >> 63), 0);
    uint64_t result = dispatch thunk of Collection.startIndex.getter();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v9 = v0[10];
    do
    {
      uint64_t v10 = v0[11];
      uint64_t v11 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
      (*(void (**)(uint64_t))(v9 + 16))(v10);
      v11(v0 + 2, 0);
      uint64_t v12 = v7;
      uint64_t v13 = v4;
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      unint64_t v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1) {
        sub_100AFC270(v14 > 1, v15 + 1, 1);
      }
      uint64_t v16 = v0[11];
      uint64_t v17 = v0[9];
      _swiftEmptyArrayStorage[2] = v15 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v15, v16, v17);
      dispatch thunk of Collection.formIndex(after:)();
      --v6;
      uint64_t v4 = v13;
      uint64_t v7 = v12;
    }
    while (v6);
  }
  uint64_t v19 = v0[22];
  uint64_t v18 = v0[23];
  uint64_t v20 = v0[21];
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v21 = (uint64_t (*)(void *))v0[1];
  return v21(_swiftEmptyArrayStorage);
}

uint64_t sub_100B6CD68()
{
  unint64_t v15 = v0;
  swift_release();
  if (qword_1010C85D0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100050A90(v1, (uint64_t)qword_10112CCB8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[28];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[6] = v5;
    swift_errorRetain();
    sub_100063814(&qword_1010C94D8);
    uint64_t v7 = String.init<A>(describing:)();
    *(void *)(v6 + 4) = sub_100076010(v7, v8, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Could not load favorite artists error=%s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v10 = v0[22];
  uint64_t v9 = v0[23];
  uint64_t v11 = v0[21];
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void *))v0[1];
  return v12(_swiftEmptyArrayStorage);
}

uint64_t sub_100B6CFC4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_100081D08;
  return sub_100B52310(a1, v4, v5, v7, v6);
}

uint64_t sub_100B6D084(void *a1)
{
  return dispatch thunk of LibraryArtistInternalFilter.favoriteStatus.getter();
}

uint64_t sub_100B6D0CC@<X0>(uint64_t a1@<X8>)
{
  return sub_100B681D4(*(void *)(v1 + 16), a1);
}

uint64_t sub_100B6D0D4()
{
  return sub_100B68474();
}

uint64_t sub_100B6D0DC@<X0>(uint64_t *a1@<X8>)
{
  return sub_100B68920(a1);
}

unint64_t sub_100B6D0E4()
{
  unint64_t result = qword_1010CC348;
  if (!qword_1010CC348)
  {
    sub_10006389C(&qword_1010CC338);
    sub_100063858(&qword_1010CC350, &qword_1010CC358);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC348);
  }
  return result;
}

uint64_t sub_100B6D18C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100B6D1D4@<X0>(uint64_t a1@<X8>)
{
  return sub_100B66314(*(void *)(v1 + 16), a1);
}

unint64_t sub_100B6D1DC()
{
  unint64_t result = qword_1010CC3D0;
  if (!qword_1010CC3D0)
  {
    sub_10006389C(&qword_1010CC3B0);
    sub_100B6DC48(&qword_1010CC3D8, &qword_1010CC3E0, (void (*)(void))sub_100B6D2A0);
    sub_100063858(&qword_1010CC0B0, &qword_1010CE340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC3D0);
  }
  return result;
}

unint64_t sub_100B6D2A0()
{
  unint64_t result = qword_1010CC3E8;
  if (!qword_1010CC3E8)
  {
    sub_10006389C(&qword_1010CC3F0);
    sub_10006389C(&qword_1010CC3F8);
    sub_100B6D374();
    swift_getOpaqueTypeConformance2();
    sub_100063858(&qword_1010CB4A0, &qword_1010CB458);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC3E8);
  }
  return result;
}

unint64_t sub_100B6D374()
{
  unint64_t result = qword_1010CC400;
  if (!qword_1010CC400)
  {
    sub_10006389C(&qword_1010CC3F8);
    sub_100063858(&qword_1010CC408, &qword_1010CC3A8);
    sub_100063858((unint64_t *)&unk_1010CE060, &qword_1010CB4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC400);
  }
  return result;
}

unint64_t sub_100B6D438()
{
  unint64_t result = qword_1010CC410;
  if (!qword_1010CC410)
  {
    sub_10006389C(&qword_1010CC3C8);
    sub_100B6D4B4();
    sub_100B6D574();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC410);
  }
  return result;
}

unint64_t sub_100B6D4B4()
{
  unint64_t result = qword_1010CC418;
  if (!qword_1010CC418)
  {
    sub_10006389C(&qword_1010CC420);
    sub_100B6D7E0(&qword_1010CC428, &qword_1010CC430, &qword_1010CC438, &qword_1010CC440);
    sub_100063858((unint64_t *)&unk_1010CE060, &qword_1010CB4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC418);
  }
  return result;
}

unint64_t sub_100B6D574()
{
  unint64_t result = qword_1010CC448;
  if (!qword_1010CC448)
  {
    sub_10006389C(&qword_1010CC450);
    sub_100B6D8AC(&qword_1010CC458, (void (*)(uint64_t))type metadata accessor for RazzmatazzView.CompactListCell);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC448);
  }
  return result;
}

uint64_t sub_100B6D618()
{
  return sub_100B67648(*(void *)(v0 + 16));
}

unint64_t sub_100B6D620()
{
  unint64_t result = qword_1010CC460;
  if (!qword_1010CC460)
  {
    sub_10006389C(&qword_1010CC398);
    sub_100B6DC48(&qword_1010CC468, &qword_1010CC470, (void (*)(void))sub_100B6D6E4);
    sub_100063858(&qword_1010CC0B0, &qword_1010CE340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC460);
  }
  return result;
}

unint64_t sub_100B6D6E4()
{
  unint64_t result = qword_1010CC478;
  if (!qword_1010CC478)
  {
    sub_10006389C(&qword_1010CC480);
    sub_10006389C(&qword_1010CC488);
    sub_100B6D7E0(&qword_1010CC490, &qword_1010CC488, (unint64_t *)&unk_1010CE060, &qword_1010CB4A8);
    swift_getOpaqueTypeConformance2();
    sub_100063858(&qword_1010CB4A0, &qword_1010CB458);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC478);
  }
  return result;
}

uint64_t sub_100B6D7E0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    sub_100063858(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B6D890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B678A8(a1, (uint64_t *)(v2 + 16), a2);
}

uint64_t sub_100B6D8AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B6D8F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B6D968()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100B6D9BC()
{
  swift_release();
  sub_10020EEF0();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B6DA18(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100B6DA78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100B6DAE4()
{
  unint64_t result = qword_1010CC4C0;
  if (!qword_1010CC4C0)
  {
    sub_10006389C(&qword_1010CC280);
    sub_100B6DB84();
    sub_100063858(&qword_1010CC4E8, &qword_1010CC288);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC4C0);
  }
  return result;
}

unint64_t sub_100B6DB84()
{
  unint64_t result = qword_1010CC4C8;
  if (!qword_1010CC4C8)
  {
    sub_10006389C(&qword_1010CC270);
    sub_100B6DC48(&qword_1010CC4D0, &qword_1010CC268, (void (*)(void))sub_100B6DCC8);
    sub_100063858(&qword_1010CC0B0, &qword_1010CE340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC4C8);
  }
  return result;
}

uint64_t sub_100B6DC48(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100B6DCC8()
{
  unint64_t result = qword_1010CC4D8;
  if (!qword_1010CC4D8)
  {
    sub_10006389C(&qword_1010CC260);
    sub_100063858(&qword_1010CC4E0, &qword_1010CC258);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC4D8);
  }
  return result;
}

uint64_t Logger.artwork.unsafeMutableAddressor()
{
  return sub_100B6E1B0(&qword_1010C8628, (uint64_t (*)(void))&type metadata accessor for Logger, (uint64_t)static Logger.artwork);
}

uint64_t MPModelPlaylistType.variant.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 0:
      uint64_t v3 = (unsigned int *)&enum case for Playlist.Variant.regular(_:);
      goto LABEL_10;
    case 1:
      uint64_t v3 = (unsigned int *)&enum case for Playlist.Variant.smart(_:);
      goto LABEL_10;
    case 2:
      uint64_t v3 = (unsigned int *)&enum case for Playlist.Variant.genius(_:);
      goto LABEL_10;
    case 3:
      uint64_t v3 = (unsigned int *)&enum case for Playlist.Variant.folder(_:);
      goto LABEL_10;
    case 4:
    case 5:
    case 6:
    case 8:
      uint64_t v3 = (unsigned int *)&enum case for Playlist.Variant.subscribed(_:);
      goto LABEL_10;
    case 7:
      uint64_t v3 = (unsigned int *)&enum case for Playlist.Variant.personalMix(_:);
      goto LABEL_10;
    case 9:
      uint64_t v3 = (unsigned int *)&enum case for Playlist.Variant.favoriteSongs(_:);
LABEL_10:
      uint64_t v9 = *v3;
      uint64_t v10 = type metadata accessor for Playlist.Variant();
      uint64_t v12 = *(void *)(v10 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104))(a2, v9, v10);
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
      uint64_t v7 = a2;
      uint64_t v8 = 0;
      uint64_t v6 = v10;
      break;
    default:
      uint64_t v4 = type metadata accessor for Playlist.Variant();
      uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
      uint64_t v6 = v4;
      uint64_t v7 = a2;
      uint64_t v8 = 1;
      break;
  }

  return v5(v7, v8, 1, v6);
}

uint64_t Playlist.Variant.symbolName.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Playlist.Variant();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin();
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, v1, v2, v4);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == enum case for Playlist.Variant.smart(_:)) {
    return 0x7061687372616567;
  }
  if (v7 == enum case for Playlist.Variant.genius(_:)) {
    return 0x7375696E6567;
  }
  if (v7 == enum case for Playlist.Variant.folder(_:)) {
    return 0x7265646C6F66;
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return 0x6F6E2E636973756DLL;
}

uint64_t ArtworkImage.ViewModel.init(artwork:cropStyle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t v7 = type metadata accessor for ArtworkImage.ViewModel(0);
  return sub_10003CABC(a2, a3 + *(int *)(v7 + 20), &qword_1010C94F8);
}

uint64_t Artwork.CropStyle.fallback.unsafeMutableAddressor()
{
  return sub_100B6E1B0(&qword_1010C8618, (uint64_t (*)(void))&type metadata accessor for Artwork.CropStyle, (uint64_t)static Artwork.CropStyle.fallback);
}

uint64_t sub_100B6E1B0(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);

  return sub_100050A90(v5, a3);
}

uint64_t Artwork.ImageFormat.fallback.unsafeMutableAddressor()
{
  return sub_100B6E1B0(&qword_1010C8620, (uint64_t (*)(void))&type metadata accessor for Artwork.ImageFormat, (uint64_t)static Artwork.ImageFormat.fallback);
}

uint64_t sub_100B6E244@<X0>(uint64_t a1@<X8>)
{
  return sub_100B6E4BC(&qword_1010C8950, (uint64_t (*)(void))&type metadata accessor for DismissAction, 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_100B6E284(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) == 0)
  {
    swift_retain();
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    uint64_t v9 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      *(void *)(v10 + 4) = sub_100076010(0xD000000000000011, 0x8000000100DD4EF0, &v12);
      _os_log_impl((void *)&_mh_execute_header, v9, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    sub_100B82DB8(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v12;
  }
  return a1;
}

uint64_t sub_100B6E47C@<X0>(uint64_t a1@<X8>)
{
  return sub_100B6E4BC(&qword_1010C8958, (uint64_t (*)(void))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_100B6E4BC@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v22 = a4;
  uint64_t v9 = v5;
  uint64_t v11 = type metadata accessor for EnvironmentValues();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(a1);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006CAB8(v9, (uint64_t)v16, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a5, v16, v17);
  }
  else
  {
    os_log_type_t v19 = static os_log_type_t.fault.getter();
    uint64_t v20 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v20, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      *(void *)(v21 + 4) = sub_100076010(a3, v22, &v23);
      _os_log_impl((void *)&_mh_execute_header, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_100B6E744@<X0>(uint64_t a1@<X8>)
{
  return sub_100B6E4BC((uint64_t *)&unk_1010CD530, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_100B6E784(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  uint64_t v9 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    *(void *)(v10 + 4) = sub_100076010(1819242306, 0xE400000000000000, &v12);
    _os_log_impl((void *)&_mh_execute_header, v9, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  sub_100237F44(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v13;
}

uint64_t sub_100B6E95C@<X0>(uint64_t a1@<X8>)
{
  return sub_100B6E4BC(&qword_1010C89E0, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_100B6E998@<X0>(uint64_t a1@<X8>)
{
  return sub_100B6E9C4(&qword_1010CD5C0, &qword_1010C8CB8, 0xD000000000000020, 0x8000000100DBE980, a1);
}

uint64_t sub_100B6E9C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v22 = a4;
  uint64_t v9 = v5;
  uint64_t v11 = type metadata accessor for EnvironmentValues();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100063814(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006CAB8(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_10003CABC((uint64_t)v17, a5, a2);
  }
  os_log_type_t v19 = static os_log_type_t.fault.getter();
  uint64_t v20 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v20, v19))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315138;
    *(void *)(v21 + 4) = sub_100076010(a3, v22, &v23);
    _os_log_impl((void *)&_mh_execute_header, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_100B6EC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EnvironmentValues();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 0x100) != 0)
  {
    sub_100B82D78(a1, a2);
  }
  else
  {
    swift_retain();
    os_log_type_t v10 = static os_log_type_t.fault.getter();
    uint64_t v11 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      *(void *)(v12 + 4) = sub_100076010(0xD000000000000019, 0x8000000100DD4ED0, &v15);
      _os_log_impl((void *)&_mh_execute_header, v11, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    sub_100B82D6C(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v15;
  }
  return a1;
}

uint64_t sub_100B6EE2C(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    uint64_t v9 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      *(void *)(v10 + 4) = sub_100076010(0xD000000000000017, 0x8000000100DD4EB0, &v12);
      _os_log_impl((void *)&_mh_execute_header, v9, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    sub_100237F44(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v13;
  }
  return a1;
}

uint64_t sub_100B6F00C(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    uint64_t v9 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      *(void *)(v10 + 4) = sub_100076010(0x6C616E6F6974704FLL, 0xEF3E726F6C6F433CLL, &v13);
      _os_log_impl((void *)&_mh_execute_header, v9, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    j__swift_release_0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v13;
  }
  return a1;
}

uint64_t sub_100B6F1F4@<X0>(uint64_t a1@<X8>)
{
  return sub_100B6E4BC(&qword_1010C8948, (uint64_t (*)(void))&type metadata accessor for ColorSchemeContrast, 0xD000000000000013, 0x8000000100DD4E90, a1);
}

uint64_t ArtworkImage.Size.init(width:height:fittingAspectRatio:contentMode:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(unsigned char *)(a8 + 8) = a2 & 1;
  *(void *)(a8 + 16) = a3;
  *(unsigned char *)(a8 + 24) = a4 & 1;
  *(void *)(a8 + 32) = a5;
  *(unsigned char *)(a8 + 40) = a6 & 1;
  *(unsigned char *)(a8 + 41) = a7;
  return result;
}

uint64_t static ArtworkImage.with(_:placeholder:size:reusePolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v60 = a4;
  uint64_t v71 = a2;
  uint64_t v8 = type metadata accessor for ArtworkImage.Placeholder(0);
  uint64_t v69 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v70 = v9;
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100063814(&qword_1010C94F8);
  __chkstk_darwin(v11 - 8);
  uint64_t v64 = (uint64_t)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Artwork.CropStyle();
  uint64_t v65 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v63 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100063814(&qword_1010CC0C8);
  uint64_t v72 = *(void *)(v15 - 8);
  uint64_t v73 = v15;
  __chkstk_darwin(v15);
  uint64_t v68 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100063814((uint64_t *)&unk_1010C8960);
  __chkstk_darwin(v17 - 8);
  os_log_type_t v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  unint64_t v22 = (char *)&v57 - v21;
  uint64_t v23 = sub_100063814((uint64_t *)&unk_1010CEE80);
  __chkstk_darwin(v23 - 8);
  int v25 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for ArtworkImage();
  uint64_t v66 = *(void *)(v26 - 8);
  uint64_t v67 = v26;
  __chkstk_darwin(v26);
  char v74 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v59 = (char *)&v57 - v29;
  __chkstk_darwin(v30);
  uint64_t v62 = (char *)&v57 - v31;
  __chkstk_darwin(v32);
  char v75 = (char *)&v57 - v33;
  uint64_t v61 = a1;
  sub_10006CAB8(a1, (uint64_t)v22, (uint64_t *)&unk_1010C8960);
  uint64_t v34 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48);
  if (v35(v22, 1, v34) == 1)
  {
    sub_1000637B8((uint64_t)v22, (uint64_t *)&unk_1010C8960);
    uint64_t v36 = type metadata accessor for Artwork();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v25, 1, 1, v36);
  }
  else
  {
    uint64_t v37 = type metadata accessor for Artwork();
    uint64_t v57 = v13;
    uint64_t v58 = v10;
    uint64_t v38 = v37;
    uint64_t v39 = a5;
    uint64_t v40 = *(void *)(v37 - 8);
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v25, v22, v37);
    sub_100B79D8C((uint64_t)v22, type metadata accessor for ArtworkImage.ViewModel);
    uint64_t v41 = v38;
    uint64_t v13 = v57;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v25, 0, 1, v41);
    a5 = v39;
    uint64_t v10 = v58;
  }
  sub_100B6FF60((uint64_t)v25, *(void *)a3, *(unsigned char *)(a3 + 8), *(void *)(a3 + 16), *(unsigned char *)(a3 + 24));
  ArtworkImage.artworkReusablePolicy(_:)();
  sub_10006CAB8(v61, (uint64_t)v19, (uint64_t *)&unk_1010C8960);
  unsigned int v42 = v35(v19, 1, v34);
  uint64_t v43 = v63;
  if (v42 == 1)
  {
    sub_1000637B8((uint64_t)v19, (uint64_t *)&unk_1010C8960);
    uint64_t v45 = v64;
    uint64_t v44 = v65;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(v64, 1, 1, v13);
  }
  else
  {
    uint64_t v45 = v64;
    sub_10006CAB8((uint64_t)&v19[*(int *)(v34 + 20)], v64, &qword_1010C94F8);
    sub_100B79D8C((uint64_t)v19, type metadata accessor for ArtworkImage.ViewModel);
    uint64_t v44 = v65;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v45, 1, v13) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v43, v45, v13);
      goto LABEL_11;
    }
  }
  if (qword_1010C8618 != -1) {
    swift_once();
  }
  uint64_t v46 = sub_100050A90(v13, (uint64_t)static Artwork.CropStyle.fallback);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, v46, v13);
  sub_1000637B8(v45, &qword_1010C94F8);
LABEL_11:
  uint64_t v47 = v59;
  uint64_t v48 = v74;
  ArtworkImage.artworkCropStyle(_:)();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v13);
  uint64_t v49 = v67;
  uint64_t v50 = *(void (**)(char *, uint64_t))(v66 + 8);
  v50(v48, v67);
  uint64_t v51 = v62;
  ArtworkImage.artworkIdealAspectRatio(_:contentMode:)();
  v50(v47, v49);
  sub_100B79D24(v71, (uint64_t)v10, type metadata accessor for ArtworkImage.Placeholder);
  unint64_t v52 = (*(unsigned __int8 *)(v69 + 80) + 58) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  uint64_t v53 = (_OWORD *)swift_allocObject();
  long long v54 = *(_OWORD *)(a3 + 16);
  v53[1] = *(_OWORD *)a3;
  uint64_t v53[2] = v54;
  *(_OWORD *)((char *)v53 + 42) = *(_OWORD *)(a3 + 26);
  sub_100B79CBC((uint64_t)v10, (uint64_t)v53 + v52, type metadata accessor for ArtworkImage.Placeholder);
  sub_100063814((uint64_t *)&unk_1010CE210);
  sub_100B778F0();
  uint64_t v55 = v68;
  ArtworkImage.artworkPlaceholder<A>(_:)();
  swift_release();
  v50(v51, v49);
  v50(v75, v49);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v72 + 32))(a5, v55, v73);
}

uint64_t ArtworkImage.ViewModel.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Artwork();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ArtworkImage.ViewModel.cropStyle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100B6FBF4(type metadata accessor for ArtworkImage.ViewModel, (uint64_t)&qword_1010C94F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10006CAB8, a1);
}

uint64_t ArtworkImage.ViewModel.calculatedAspectRatio.getter()
{
  if (Artwork.maximumWidth.getter() < 1 || Artwork.maximumHeight.getter() < 1)
  {
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    double v0 = (double)Artwork.maximumWidth.getter();
    *(double *)&uint64_t result = v0 / (double)Artwork.maximumHeight.getter();
  }
  return result;
}

uint64_t ArtworkImage.Info.viewModel.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006CAB8(v1, a1, (uint64_t *)&unk_1010C8960);
}

uint64_t ArtworkImage.Info.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100B6FBF4(type metadata accessor for ArtworkImage.Info, (uint64_t)type metadata accessor for ArtworkImage.Placeholder, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100B79D24, a1);
}

uint64_t sub_100B6FBF4@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

uint64_t ArtworkImage.Info.aspectRatio.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 24));
}

uint64_t ArtworkImage.Info.size.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for ArtworkImage.Info(0);
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 28));
  uint64_t v5 = *v4;
  char v6 = *((unsigned char *)v4 + 8);
  uint64_t v7 = v4[2];
  char v8 = *((unsigned char *)v4 + 24);
  uint64_t v9 = v4[4];
  char v10 = *((unsigned char *)v4 + 40);
  LOBYTE(v4) = *((unsigned char *)v4 + 41);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v10;
  *(unsigned char *)(a1 + 41) = (_BYTE)v4;
  return result;
}

uint64_t ArtworkImage.Info.corner.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ArtworkImage.Info(0) + 32));
}

__n128 ArtworkImage.Info.init(viewModel:placeholder:aspectRatio:size:corner:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  sub_10003CABC(a1, a9, (uint64_t *)&unk_1010C8960);
  uint64_t v17 = (int *)type metadata accessor for ArtworkImage.Info(0);
  sub_100B79CBC(a2, a9 + v17[5], type metadata accessor for ArtworkImage.Placeholder);
  uint64_t v18 = a9 + v17[6];
  *(void *)uint64_t v18 = a3;
  *(unsigned char *)(v18 + 8) = a4 & 1;
  uint64_t v19 = a9 + v17[7];
  long long v20 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)a5;
  *(_OWORD *)(v19 + 16) = v20;
  __n128 result = *(__n128 *)(a5 + 26);
  *(__n128 *)(v19 + 26) = result;
  uint64_t v22 = a9 + v17[8];
  *(void *)uint64_t v22 = a6;
  *(void *)(v22 + 8) = a7;
  *(unsigned char *)(v22 + 16) = a8 & 1;
  return result;
}

uint64_t ArtworkImage.Size.width.getter()
{
  return *(void *)v0;
}

uint64_t ArtworkImage.Size.height.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t ArtworkImage.Size.height.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t ArtworkImage.Size.fittingAspectRatio.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t ArtworkImage.Size.init(cgSize:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v4 = a3 & 1;
  if (a3) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = result;
  }
  *(void *)a4 = v5;
  *(unsigned char *)(a4 + 8) = v4;
  if (a3) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = a2;
  }
  *(void *)(a4 + 16) = v6;
  *(unsigned char *)(a4 + 24) = v4;
  *(void *)(a4 + 32) = 0;
  *(_WORD *)(a4 + 40) = 513;
  return result;
}

void *CGFloat.squareAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.squareAspectRatio;
}

uint64_t ArtworkImage.Size.init(width:aspectRatio:fittingAspectRatio:)@<X0>(uint64_t result@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  double v6 = 0.0;
  if ((a2 & 1) == 0)
  {
    double v6 = *(double *)&result / a6;
    if ((a4 & 1) == 0 && a3 > a6)
    {
      double v6 = *(double *)&result / a3;
      *(double *)&__n128 result = *(double *)&result / a3 * a6;
    }
  }
  *(double *)a5 = *(double *)&result;
  *(unsigned char *)(a5 + 8) = a2 & 1;
  *(double *)(a5 + 16) = v6;
  *(unsigned char *)(a5 + 24) = a2 & 1;
  *(double *)(a5 + 32) = a3;
  *(unsigned char *)(a5 + 40) = a4 & 1;
  *(unsigned char *)(a5 + 41) = 2;
  return result;
}

uint64_t ArtworkImage.Size.init(height:aspectRatio:fittingAspectRatio:)@<X0>(uint64_t result@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  double v6 = 0.0;
  if ((a2 & 1) == 0)
  {
    double v6 = *(double *)&result * a6;
    if ((a4 & 1) == 0 && a3 < a6)
    {
      double v6 = *(double *)&result * a3;
      *(double *)&__n128 result = *(double *)&result * a3 / a6;
    }
  }
  *(double *)a5 = v6;
  *(unsigned char *)(a5 + 8) = a2 & 1;
  *(double *)(a5 + 16) = *(double *)&result;
  *(unsigned char *)(a5 + 24) = a2 & 1;
  *(double *)(a5 + 32) = a3;
  *(unsigned char *)(a5 + 40) = a4 & 1;
  *(unsigned char *)(a5 + 41) = 2;
  return result;
}

uint64_t sub_100B6FF14(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 10) = *(long long *)((char *)a1 + 26);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 10) = *(long long *)((char *)a2 + 26);
  return _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4SizeV23__derived_struct_equalsySbAF_AFtFZ_0((uint64_t)&v5, (uint64_t)&v7) & 1;
}

uint64_t sub_100B6FF60(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v8 = sub_100063814((uint64_t *)&unk_1010CEE80);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  if (a3)
  {
    sub_10006CAB8(a1, (uint64_t)&v12 - v10, (uint64_t *)&unk_1010CEE80);
    if (a5) {
      ArtworkImage.init(_:)();
    }
    else {
      ArtworkImage.init(_:height:)();
    }
  }
  else
  {
    sub_10006CAB8(a1, (uint64_t)&v12 - v10, (uint64_t *)&unk_1010CEE80);
    if (a5) {
      ArtworkImage.init(_:width:)();
    }
    else {
      ArtworkImage.init(_:width:height:)();
    }
  }
  return sub_1000637B8(a1, (uint64_t *)&unk_1010CEE80);
}

uint64_t sub_100B700C4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v45 = a3;
  uint64_t v4 = type metadata accessor for ArtworkImage.Placeholder(0);
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v41 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v44 = sub_100063814(&qword_1010CCC10);
  __chkstk_darwin(v44);
  long long v7 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  __chkstk_darwin(v8);
  unint64_t v10 = (double *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v39 = sub_100063814(&qword_1010CC518);
  __chkstk_darwin(v39);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100063814(&qword_1010CC510);
  __chkstk_darwin(v43);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v40 = (uint64_t)&v39 - v19;
  sub_10003CABC(a1, (uint64_t)v49, &qword_1010CCC18);
  sub_10003CABC((uint64_t)v49, (uint64_t)&v50, &qword_1010CCC18);
  if (v51 & 1) != 0 || (*(unsigned char *)(a1 + 24))
  {
    sub_100B79D24(v42, (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ArtworkImage.Placeholder);
    unint64_t v20 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    uint64_t v21 = swift_allocObject();
    sub_100B79CBC((uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, type metadata accessor for ArtworkImage.Placeholder);
    uint64_t v22 = (_OWORD *)(v21 + ((v5 + v20 + 7) & 0xFFFFFFFFFFFFFFF8));
    long long v23 = *(_OWORD *)(a1 + 16);
    *uint64_t v22 = *(_OWORD *)a1;
    v22[1] = v23;
    *(_OWORD *)((char *)v22 + 26) = *(_OWORD *)(a1 + 26);
    *long long v7 = sub_100B8308C;
    v7[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v21;
    swift_storeEnumTagMultiPayload();
    sub_100063814((uint64_t *)&unk_1010CE260);
    sub_100B77990();
    sub_100063858(&qword_1010CC528, (uint64_t *)&unk_1010CE260);
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v25 = *(void *)(a1 + 16);
    uint64_t v26 = v50;
    sub_100B70AF8();
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    double v31 = sub_100B70AF8();
    swift_bridgeObjectRelease();
    sub_100B70AF8();
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    uint64_t v34 = (uint64_t *)((char *)v10 + *(int *)(v8 + 32));
    *uint64_t v34 = swift_getKeyPath();
    sub_100063814(&qword_1010C8940);
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = (uint64_t *)((char *)v10 + *(int *)(v8 + 36));
    *uint64_t v35 = swift_getKeyPath();
    sub_100063814(&qword_1010C8948);
    swift_storeEnumTagMultiPayload();
    *(void *)unint64_t v10 = v28;
    *((void *)v10 + 1) = v30;
    v10[2] = v31;
    *((void *)v10 + 3) = v26;
    *((void *)v10 + 4) = v25;
    *((void *)v10 + 5) = v33;
    sub_100B79CBC((uint64_t)v10, (uint64_t)v13, type metadata accessor for ArtworkImage.Placeholder.View);
    sub_100B79D24((uint64_t)v13, (uint64_t)v15, type metadata accessor for ArtworkImage.Placeholder.View);
    v15[*(int *)(v39 + 36)] = 0;
    sub_100B79D8C((uint64_t)v13, type metadata accessor for ArtworkImage.Placeholder.View);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    sub_10006CAB8((uint64_t)v15, (uint64_t)v17, &qword_1010CC518);
    uint64_t v36 = &v17[*(int *)(v43 + 36)];
    long long v37 = v47;
    *(_OWORD *)uint64_t v36 = v46;
    *((_OWORD *)v36 + 1) = v37;
    *((_OWORD *)v36 + 2) = v48;
    sub_1000637B8((uint64_t)v15, &qword_1010CC518);
    uint64_t v38 = v40;
    sub_10003CABC((uint64_t)v17, v40, &qword_1010CC510);
    sub_10006CAB8(v38, (uint64_t)v7, &qword_1010CC510);
    swift_storeEnumTagMultiPayload();
    sub_100063814((uint64_t *)&unk_1010CE260);
    sub_100B77990();
    sub_100063858(&qword_1010CC528, (uint64_t *)&unk_1010CE260);
    _ConditionalContent<>.init(storage:)();
    return sub_1000637B8(v38, &qword_1010CC510);
  }
}

uint64_t ArtworkImage.Placeholder.view(availableSize:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v6 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  uint64_t v7 = v6 - 8;
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v23 - v11;
  sub_100B70AF8();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  double v17 = sub_100B70AF8();
  swift_bridgeObjectRelease();
  sub_100B70AF8();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  unint64_t v20 = (uint64_t *)&v10[*(int *)(v7 + 40)];
  *unint64_t v20 = swift_getKeyPath();
  sub_100063814(&qword_1010C8940);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = (uint64_t *)&v10[*(int *)(v7 + 44)];
  *uint64_t v21 = swift_getKeyPath();
  sub_100063814(&qword_1010C8948);
  swift_storeEnumTagMultiPayload();
  *(void *)unint64_t v10 = v14;
  *((void *)v10 + 1) = v16;
  *((double *)v10 + 2) = v17;
  *((double *)v10 + 3) = a2;
  *((double *)v10 + 4) = a3;
  *((void *)v10 + 5) = v19;
  sub_100B79CBC((uint64_t)v10, (uint64_t)v12, type metadata accessor for ArtworkImage.Placeholder.View);
  sub_100B79D24((uint64_t)v12, a1, type metadata accessor for ArtworkImage.Placeholder.View);
  *(unsigned char *)(a1 + *(int *)(sub_100063814(&qword_1010CC518) + 36)) = 0;
  return sub_100B79D8C((uint64_t)v12, type metadata accessor for ArtworkImage.Placeholder.View);
}

uint64_t sub_100B7084C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = (double *)((char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - v6;
  uint64_t v8 = sub_100063814(&qword_1010CC518);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  GeometryProxy.size.getter();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  sub_100B70AF8();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  double v20 = sub_100B70AF8();
  swift_bridgeObjectRelease();
  sub_100B70AF8();
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = (uint64_t *)((char *)v4 + *(int *)(v2 + 40));
  *uint64_t v23 = swift_getKeyPath();
  sub_100063814(&qword_1010C8940);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (uint64_t *)((char *)v4 + *(int *)(v2 + 44));
  *uint64_t v24 = swift_getKeyPath();
  sub_100063814(&qword_1010C8948);
  swift_storeEnumTagMultiPayload();
  *(void *)uint64_t v4 = v17;
  *((void *)v4 + 1) = v19;
  v4[2] = v20;
  *((void *)v4 + 3) = v13;
  *((void *)v4 + 4) = v15;
  *((void *)v4 + 5) = v22;
  sub_100B79CBC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View);
  sub_100B79D24((uint64_t)v7, (uint64_t)v11, type metadata accessor for ArtworkImage.Placeholder.View);
  v11[*(int *)(v9 + 44)] = 0;
  sub_100B79D8C((uint64_t)v7, type metadata accessor for ArtworkImage.Placeholder.View);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v25 = v30;
  sub_10006CAB8((uint64_t)v11, v30, &qword_1010CC518);
  uint64_t v26 = (_OWORD *)(v25 + *(int *)(sub_100063814(&qword_1010CC510) + 36));
  long long v27 = v32;
  *uint64_t v26 = v31;
  v26[1] = v27;
  void v26[2] = v33;
  return sub_1000637B8((uint64_t)v11, &qword_1010CC518);
}

double sub_100B70AF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Playlist.Variant();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = sub_100063814(&qword_1010C9288);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v25 - v13;
  uint64_t v15 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100B79D24(v1, (uint64_t)v17, type metadata accessor for ArtworkImage.Placeholder);
  uint64_t v18 = sub_100063814(&qword_1010CF250);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 10, v18))
  {
    case 1u:
    case 2u:
    case 3u:
    case 9u:
    case 0xAu:
      static Font.Weight.light.getter();
      goto LABEL_7;
    case 4u:
    case 5u:
    case 7u:
    case 8u:
      static Font.Weight.regular.getter();
LABEL_7:
      double v21 = v19;
      break;
    case 6u:
      static Font.Weight.regular.getter();
      double v21 = v20;
      break;
    default:
      sub_10003CABC((uint64_t)v17, (uint64_t)v14, &qword_1010C9288);
      sub_10006CAB8((uint64_t)v14, (uint64_t)v12, &qword_1010C9288);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1)
      {
        (*(void (**)(char *, void, uint64_t))(v3 + 104))(v8, enum case for Playlist.Variant.regular(_:), v2);
        sub_1000637B8((uint64_t)v12, &qword_1010C9288);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v12, v2);
      }
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
      int v23 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
      if (v23 != enum case for Playlist.Variant.smart(_:)
        && v23 != enum case for Playlist.Variant.genius(_:)
        && v23 != enum case for Playlist.Variant.folder(_:))
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      }
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      static Font.Weight.light.getter();
      double v21 = v24;
      sub_1000637B8((uint64_t)v14, &qword_1010C9288);
      break;
  }
  return v21;
}

uint64_t ArtworkImage.Placeholder.View.init(name:weight:availableSize:scaleFactor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  uint64_t v14 = type metadata accessor for ArtworkImage.Placeholder.View(0);
  uint64_t v15 = (uint64_t *)(a3 + *(int *)(v14 + 32));
  *uint64_t v15 = swift_getKeyPath();
  sub_100063814(&qword_1010C8940);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = (uint64_t *)(a3 + *(int *)(v14 + 36));
  *uint64_t v16 = swift_getKeyPath();
  sub_100063814(&qword_1010C8948);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(double *)(a3 + 16) = a4;
  *(double *)(a3 + 24) = a5;
  *(double *)(a3 + 32) = a6;
  *(double *)(a3 + 40) = a7;
  return result;
}

uint64_t EnvironmentValues.placeholderStyle.getter()
{
  sub_100B79DEC();

  return EnvironmentValues.subscript.getter();
}

uint64_t sub_100B71174()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t sub_100B711B4(uint64_t a1)
{
  sub_100063814(&qword_1010CC538);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v7 - v4;
  sub_10006CAB8(a1, (uint64_t)&v7 - v4, &qword_1010CC538);
  sub_10006CAB8((uint64_t)v5, (uint64_t)v3, &qword_1010CC538);
  sub_100B79DEC();
  EnvironmentValues.subscript.setter();
  return sub_1000637B8((uint64_t)v5, &qword_1010CC538);
}

uint64_t EnvironmentValues.placeholderStyle.setter(uint64_t a1)
{
  sub_100063814(&qword_1010CC538);
  __chkstk_darwin();
  sub_10006CAB8(a1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010CC538);
  sub_100B79DEC();
  EnvironmentValues.subscript.setter();
  return sub_1000637B8(a1, &qword_1010CC538);
}

uint64_t ArtworkImage.Placeholder.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v30 = sub_100063814(&qword_1010CC540);
  __chkstk_darwin();
  uint64_t v2 = (char *)v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100063814(&qword_1010CC548);
  __chkstk_darwin();
  uint64_t v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CC538);
  __chkstk_darwin();
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)v28 - v7;
  type metadata accessor for ArtworkImage.Placeholder.View(0);
  sub_100B6E9C4(&qword_1010C8940, &qword_1010CC538, 0x6C616E6F6974704FLL, 0xEF3E656C7974533CLL, (uint64_t)v8);
  uint64_t v9 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (v10(v8, 1, v9) == 1)
  {
    sub_1000637B8((uint64_t)v8, &qword_1010CC538);
    long long v32 = 0u;
    long long v33 = 0u;
    uint64_t v34 = 0;
  }
  else
  {
    sub_10006CAB8((uint64_t)(v8 + 40), (uint64_t)&v32, (uint64_t *)&unk_1010CE2A0);
    sub_100B79D8C((uint64_t)v8, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    if (*((void *)&v33 + 1))
    {
      sub_100068978(&v32, (uint64_t)v35);
      void v28[2] = v37;
      sub_100068990(v35, v36);
      v28[1] = v28;
      __n128 v11 = __chkstk_darwin();
      (*(void (**)(char *, __n128))(v13 + 16))((char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
      uint64_t v14 = AnyShapeStyle.init<A>(_:)();
      sub_1000760E4((uint64_t)v35);
      goto LABEL_6;
    }
  }
  sub_1000637B8((uint64_t)&v32, (uint64_t *)&unk_1010CE2A0);
  uint64_t v14 = 0;
LABEL_6:
  sub_100B6E9C4(&qword_1010C8940, &qword_1010CC538, 0x6C616E6F6974704FLL, 0xEF3E656C7974533CLL, (uint64_t)v6);
  if (v10(v6, 1, v9) == 1)
  {
    sub_1000637B8((uint64_t)v6, &qword_1010CC538);
    long long v32 = 0u;
    long long v33 = 0u;
    uint64_t v34 = 0;
  }
  else
  {
    sub_10006CAB8((uint64_t)v6, (uint64_t)&v32, (uint64_t *)&unk_1010CE2A0);
    sub_100B79D8C((uint64_t)v6, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    if (*((void *)&v33 + 1))
    {
      sub_100068978(&v32, (uint64_t)v35);
      sub_100068990(v35, v36);
      __n128 v15 = __chkstk_darwin();
      (*(void (**)(char *, __n128))(v17 + 16))((char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
      uint64_t v18 = AnyShapeStyle.init<A>(_:)();
      sub_1000760E4((uint64_t)v35);
      goto LABEL_11;
    }
  }
  sub_1000637B8((uint64_t)&v32, (uint64_t *)&unk_1010CE2A0);
  uint64_t v18 = 0;
LABEL_11:
  uint64_t v19 = static Color.clear.getter();
  if (v14)
  {
    uint64_t v20 = v14;
  }
  else
  {
    id v21 = [self secondarySystemFillColor];
    v35[0] = Color.init(_:)();
    uint64_t v20 = AnyShapeStyle.init<A>(_:)();
  }
  swift_retain();
  char v22 = static Edge.Set.all.getter();
  uint64_t v23 = static Alignment.center.getter();
  uint64_t v25 = v24;
  sub_100B7193C(v18, (uint64_t)v2);
  uint64_t v26 = (uint64_t *)&v2[*(int *)(v30 + 36)];
  *uint64_t v26 = v23;
  v26[1] = v25;
  sub_10006CAB8((uint64_t)v2, (uint64_t)&v4[*(int *)(v29 + 36)], &qword_1010CC540);
  *(void *)uint64_t v4 = v19;
  *((void *)v4 + 1) = v20;
  v4[16] = v22;
  swift_retain();
  swift_retain();
  sub_1000637B8((uint64_t)v2, &qword_1010CC540);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_10003CABC((uint64_t)v4, v31, &qword_1010CC548);
}

uint64_t sub_100B7193C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  sub_100063814(&qword_1010CC538);
  __chkstk_darwin();
  uint64_t v40 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CC550);
  __chkstk_darwin();
  uint64_t v41 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BlendMode();
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  __chkstk_darwin();
  uint64_t v42 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CC290);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814(&qword_1010CCB98);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  __chkstk_darwin();
  __n128 v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CCBA0);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100063814(&qword_1010CCBA8);
  __chkstk_darwin();
  uint64_t v38 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v14 = Image.init(_internalSystemName:)();
  if (a1)
  {
    uint64_t v15 = a1;
  }
  else
  {
    id v16 = [self tertiaryLabelColor];
    uint64_t v46 = Color.init(_:)();
    uint64_t v15 = AnyShapeStyle.init<A>(_:)();
  }
  uint64_t v17 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 1, 1, v17);
  swift_retain();
  uint64_t v18 = static Font.system(size:weight:design:)();
  sub_1000637B8((uint64_t)v8, &qword_1010CC290);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v46 = v14;
  unint64_t v47 = v15;
  uint64_t v48 = KeyPath;
  uint64_t v49 = v18;
  uint64_t v20 = sub_100063814(&qword_1010CCBB0);
  unint64_t v21 = sub_100B82DCC();
  View.fontWeight(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v46 = v20;
  unint64_t v47 = v21;
  swift_getOpaqueTypeConformance2();
  uint64_t v22 = (uint64_t)v39;
  uint64_t v23 = v36;
  View.accessibility(hidden:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v23);
  type metadata accessor for ArtworkImage.Placeholder.View(0);
  uint64_t v24 = v40;
  sub_100B6E9C4(&qword_1010C8940, &qword_1010CC538, 0x6C616E6F6974704FLL, 0xEF3E656C7974533CLL, v40);
  uint64_t v25 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25) == 1)
  {
    sub_1000637B8(v24, &qword_1010CC538);
    uint64_t v27 = v43;
    uint64_t v26 = v44;
    uint64_t v28 = v41;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v41, 1, 1, v44);
    uint64_t v29 = v42;
  }
  else
  {
    uint64_t v30 = v24 + *(int *)(v25 + 24);
    uint64_t v28 = v41;
    sub_10006CAB8(v30, v41, &qword_1010CC550);
    sub_100B79D8C(v24, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    uint64_t v27 = v43;
    uint64_t v26 = v44;
    int v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v28, 1, v44);
    uint64_t v29 = v42;
    if (v31 != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v42, v28, v26);
      goto LABEL_9;
    }
  }
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v29, enum case for BlendMode.normal(_:), v26);
  sub_1000637B8(v28, &qword_1010CC550);
LABEL_9:
  uint64_t v32 = (uint64_t)v38;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(&v38[*(int *)(v37 + 36)], v29, v26);
  sub_10006CAB8(v22, v32, &qword_1010CCBA0);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  sub_1000637B8(v22, &qword_1010CCBA0);
  return sub_10003CABC(v32, v45, &qword_1010CCBA8);
}

uint64_t sub_100B71FC8()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t ArtworkImage.Placeholder.View.Style.foreground.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006CAB8(v1, a1, (uint64_t *)&unk_1010CE2A0);
}

uint64_t ArtworkImage.Placeholder.View.Style.foreground.setter(uint64_t a1)
{
  return sub_10002D09C(a1, v1, (uint64_t *)&unk_1010CE2A0);
}

uint64_t ArtworkImage.Placeholder.View.Style.background.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006CAB8(v1 + 40, a1, (uint64_t *)&unk_1010CE2A0);
}

uint64_t ArtworkImage.Placeholder.View.Style.background.setter(uint64_t a1)
{
  return sub_10002D09C(a1, v1 + 40, (uint64_t *)&unk_1010CE2A0);
}

uint64_t ArtworkImage.Placeholder.View.Style.blendMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return sub_10006CAB8(v1 + *(int *)(v3 + 24), a1, &qword_1010CC550);
}

uint64_t ArtworkImage.Placeholder.View.Style.blendMode.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  return sub_10002D09C(a1, v1 + *(int *)(v3 + 24), &qword_1010CC550);
}

double (*ArtworkImage.Placeholder.View.Style.blendMode.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t ArtworkImage.Placeholder.View.Style.init(foreground:background:blendMode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v8 = (uint64_t)a4 + 40;
  uint64_t v9 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  *a4 = 0u;
  a4[1] = 0u;
  a4[2] = 0u;
  a4[3] = 0u;
  a4[4] = 0u;
  uint64_t v10 = (uint64_t)a4 + *(int *)(v9 + 24);
  uint64_t v11 = type metadata accessor for BlendMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_10002D09C(a1, (uint64_t)a4, (uint64_t *)&unk_1010CE2A0);
  sub_10002D09C(a2, v8, (uint64_t *)&unk_1010CE2A0);
  return sub_10002D09C(a3, v10, &qword_1010CC550);
}

uint64_t sub_100B72230()
{
  uint64_t v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  uint64_t v2 = (_OWORD *)((char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100063814(&qword_1010CC550);
  __chkstk_darwin();
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014CA4(v0, static ArtworkImage.Placeholder.View.Style.nowPlaying);
  uint64_t v5 = sub_100050A90(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying);
  static Color.white.getter();
  uint64_t v6 = Color.opacity(_:)();
  swift_release();
  void v13[3] = &type metadata for Color;
  _OWORD v13[4] = &protocol witness table for Color;
  v13[0] = v6;
  static Color.black.getter();
  uint64_t v7 = Color.opacity(_:)();
  swift_release();
  void v12[3] = &type metadata for Color;
  _OWORD v12[4] = &protocol witness table for Color;
  v12[0] = v7;
  uint64_t v8 = type metadata accessor for BlendMode();
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v9(v4, 1, 1, v8);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  _OWORD *v2 = 0u;
  uint64_t v10 = (uint64_t)v2 + *(int *)(v0 + 24);
  v9((char *)v10, 1, 1, v8);
  sub_10002D09C((uint64_t)v13, (uint64_t)v2, (uint64_t *)&unk_1010CE2A0);
  sub_10002D09C((uint64_t)v12, (uint64_t)v2 + 40, (uint64_t *)&unk_1010CE2A0);
  sub_10002D09C((uint64_t)v4, v10, &qword_1010CC550);
  return sub_100B79CBC((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.nowPlaying.unsafeMutableAddressor()
{
  return sub_100B6E1B0(&qword_1010C85F8, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying);
}

uint64_t static ArtworkImage.Placeholder.View.Style.nowPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100B72C78(&qword_1010C85F8, (uint64_t)static ArtworkImage.Placeholder.View.Style.nowPlaying, a1);
}

uint64_t sub_100B724C0()
{
  uint64_t v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  uint64_t v2 = (_OWORD *)((char *)v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100063814(&qword_1010CC550);
  __chkstk_darwin();
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014CA4(v0, static ArtworkImage.Placeholder.View.Style.miniPlayer);
  uint64_t v5 = sub_100050A90(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer);
  uint64_t v6 = self;
  id v7 = [v6 quaternaryLabelColor];
  uint64_t v8 = Color.init(_:)();
  v16[3] = &type metadata for Color;
  void v16[4] = &protocol witness table for Color;
  v16[0] = v8;
  id v9 = [v6 tertiarySystemFillColor];
  uint64_t v10 = Color.init(_:)();
  v15[3] = &type metadata for Color;
  void v15[4] = &protocol witness table for Color;
  v15[0] = v10;
  uint64_t v11 = type metadata accessor for BlendMode();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(v4, 1, 1, v11);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  _OWORD *v2 = 0u;
  uint64_t v13 = (uint64_t)v2 + *(int *)(v0 + 24);
  v12((char *)v13, 1, 1, v11);
  sub_10002D09C((uint64_t)v16, (uint64_t)v2, (uint64_t *)&unk_1010CE2A0);
  sub_10002D09C((uint64_t)v15, (uint64_t)v2 + 40, (uint64_t *)&unk_1010CE2A0);
  sub_10002D09C((uint64_t)v4, v13, &qword_1010CC550);
  return sub_100B79CBC((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.miniPlayer.unsafeMutableAddressor()
{
  return sub_100B6E1B0(&qword_1010C8600, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer);
}

uint64_t static ArtworkImage.Placeholder.View.Style.miniPlayer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100B72C78(&qword_1010C8600, (uint64_t)static ArtworkImage.Placeholder.View.Style.miniPlayer, a1);
}

uint64_t sub_100B72754()
{
  uint64_t v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin();
  uint64_t v2 = (_OWORD *)((char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100063814(&qword_1010CC550);
  __chkstk_darwin();
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014CA4(v0, static ArtworkImage.Placeholder.View.Style.widgets);
  uint64_t v5 = sub_100050A90(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets);
  static Color.white.getter();
  uint64_t v6 = Color.opacity(_:)();
  swift_release();
  v15[3] = &type metadata for Color;
  void v15[4] = &protocol witness table for Color;
  v15[0] = v6;
  static Color.white.getter();
  uint64_t v7 = Color.opacity(_:)();
  swift_release();
  void v14[3] = &type metadata for Color;
  v14[4] = &protocol witness table for Color;
  v14[0] = v7;
  uint64_t v8 = enum case for BlendMode.plusLighter(_:);
  uint64_t v9 = type metadata accessor for BlendMode();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v4, v8, v9);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v11(v4, 0, 1, v9);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  _OWORD *v2 = 0u;
  uint64_t v12 = (uint64_t)v2 + *(int *)(v0 + 24);
  v11((char *)v12, 1, 1, v9);
  sub_10002D09C((uint64_t)v15, (uint64_t)v2, (uint64_t *)&unk_1010CE2A0);
  sub_10002D09C((uint64_t)v14, (uint64_t)v2 + 40, (uint64_t *)&unk_1010CE2A0);
  sub_10002D09C((uint64_t)v4, v12, &qword_1010CC550);
  return sub_100B79CBC((uint64_t)v2, v5, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.widgets.unsafeMutableAddressor()
{
  return sub_100B6E1B0(&qword_1010C8608, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets);
}

uint64_t static ArtworkImage.Placeholder.View.Style.widgets.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100B72C78(&qword_1010C8608, (uint64_t)static ArtworkImage.Placeholder.View.Style.widgets, a1);
}

uint64_t sub_100B72A20()
{
  uint64_t v0 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  __chkstk_darwin(v0);
  uint64_t v2 = (_OWORD *)((char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_100063814(&qword_1010CC550);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014CA4(v0, static ArtworkImage.Placeholder.View.Style.accentuated);
  uint64_t v6 = sub_100050A90(v0, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated);
  uint64_t v7 = static Color.accentColor.getter();
  void v14[3] = &type metadata for Color;
  v14[4] = &protocol witness table for Color;
  v14[0] = v7;
  uint64_t v8 = type metadata accessor for BlendMode();
  memset(v12, 0, sizeof(v12));
  uint64_t v13 = 0;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v9(v5, 1, 1, v8);
  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  _OWORD *v2 = 0u;
  uint64_t v10 = (uint64_t)v2 + *(int *)(v0 + 24);
  v9((char *)v10, 1, 1, v8);
  sub_10002D09C((uint64_t)v14, (uint64_t)v2, (uint64_t *)&unk_1010CE2A0);
  sub_10002D09C((uint64_t)v12, (uint64_t)v2 + 40, (uint64_t *)&unk_1010CE2A0);
  sub_10002D09C((uint64_t)v5, v10, &qword_1010CC550);
  return sub_100B79CBC((uint64_t)v2, v6, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

uint64_t ArtworkImage.Placeholder.View.Style.accentuated.unsafeMutableAddressor()
{
  return sub_100B6E1B0(&qword_1010C8610, type metadata accessor for ArtworkImage.Placeholder.View.Style, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated);
}

uint64_t static ArtworkImage.Placeholder.View.Style.accentuated.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100B72C78(&qword_1010C8610, (uint64_t)static ArtworkImage.Placeholder.View.Style.accentuated, a1);
}

uint64_t sub_100B72C78@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  uint64_t v6 = sub_100050A90(v5, a2);
  return sub_100B79D24(v6, a3, type metadata accessor for ArtworkImage.Placeholder.View.Style);
}

void ArtworkImage.Placeholder.hash(into:)()
{
  uint64_t v1 = type metadata accessor for Playlist.Variant();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010C9288);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v13 - v7;
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100B79D24(v0, (uint64_t)v10, type metadata accessor for ArtworkImage.Placeholder);
  uint64_t v11 = sub_100063814(&qword_1010CF250);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 10, v11))
  {
    case 1u:
      Swift::UInt v12 = 0;
      goto LABEL_14;
    case 2u:
      Swift::UInt v12 = 1;
      goto LABEL_14;
    case 3u:
      Swift::UInt v12 = 2;
      goto LABEL_14;
    case 4u:
      Swift::UInt v12 = 4;
      goto LABEL_14;
    case 5u:
      Swift::UInt v12 = 5;
      goto LABEL_14;
    case 6u:
      Swift::UInt v12 = 6;
      goto LABEL_14;
    case 7u:
      Swift::UInt v12 = 7;
      goto LABEL_14;
    case 8u:
      Swift::UInt v12 = 8;
      goto LABEL_14;
    case 9u:
      Swift::UInt v12 = 9;
      goto LABEL_14;
    case 0xAu:
      Swift::UInt v12 = 10;
LABEL_14:
      Hasher._combine(_:)(v12);
      break;
    default:
      sub_10003CABC((uint64_t)v10, (uint64_t)v8, &qword_1010C9288);
      Hasher._combine(_:)(3uLL);
      sub_10006CAB8((uint64_t)v8, (uint64_t)v6, &qword_1010C9288);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v6, 1, v1) == 1)
      {
        Hasher._combine(_:)(0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v6, v1);
        Hasher._combine(_:)(1u);
        sub_100B79E60(&qword_1010CC558, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant);
        dispatch thunk of Hashable.hash(into:)();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      }
      sub_1000637B8((uint64_t)v8, &qword_1010C9288);
      break;
  }
}

uint64_t sub_100B73048(char a1)
{
  uint64_t result = 0x636973756DLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6979616C50776F6ELL;
      break;
    case 2:
      uint64_t result = 0x6C79616C5077656ELL;
      break;
    case 3:
      uint64_t result = 0x7473696C79616C70;
      break;
    case 4:
      uint64_t result = 0x646956636973756DLL;
      break;
    case 5:
      uint64_t result = 30324;
      break;
    case 6:
      uint64_t result = 0x6F68706F7263696DLL;
      break;
    case 7:
      uint64_t result = 0x6E6F73726570;
      break;
    case 8:
      uint64_t result = 0x6F69646172;
      break;
    case 9:
      uint64_t result = 0x65726E6567;
      break;
    case 10:
      uint64_t result = 0x7265736F706D6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100B73198()
{
  return sub_100B73048(*v0);
}

uint64_t sub_100B731A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100B82900(a1, a2);
  *a3 = result;
  return result;
}

void sub_100B731C8(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_100B731D4(uint64_t a1)
{
  unint64_t v2 = sub_100B79EA8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B73210(uint64_t a1)
{
  unint64_t v2 = sub_100B79EA8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B7324C(uint64_t a1)
{
  unint64_t v2 = sub_100B79EFC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B73288(uint64_t a1)
{
  unint64_t v2 = sub_100B79EFC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B732C4(uint64_t a1)
{
  unint64_t v2 = sub_100B79F50();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B73300(uint64_t a1)
{
  unint64_t v2 = sub_100B79F50();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B7333C(uint64_t a1)
{
  unint64_t v2 = sub_100B7A04C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B73378(uint64_t a1)
{
  unint64_t v2 = sub_100B7A04C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B733B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_100B733E4(uint64_t a1)
{
  unint64_t v2 = sub_100B7A244();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B73420(uint64_t a1)
{
  unint64_t v2 = sub_100B7A244();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B7345C(uint64_t a1)
{
  unint64_t v2 = sub_100B7A0F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B73498(uint64_t a1)
{
  unint64_t v2 = sub_100B7A0F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B734D4(uint64_t a1)
{
  unint64_t v2 = sub_100B7A19C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B73510(uint64_t a1)
{
  unint64_t v2 = sub_100B7A19C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B7354C(uint64_t a1)
{
  unint64_t v2 = sub_100B7A1F0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B73588(uint64_t a1)
{
  unint64_t v2 = sub_100B7A1F0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B735C4(uint64_t a1)
{
  unint64_t v2 = sub_100B79FF8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B73600(uint64_t a1)
{
  unint64_t v2 = sub_100B79FF8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B7363C()
{
  return 1701869940;
}

uint64_t sub_100B7364C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100B736D4(uint64_t a1)
{
  unint64_t v2 = sub_100B7A148();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B73710(uint64_t a1)
{
  unint64_t v2 = sub_100B7A148();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B7374C(uint64_t a1)
{
  unint64_t v2 = sub_100B79FA4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B73788(uint64_t a1)
{
  unint64_t v2 = sub_100B79FA4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B737C4(uint64_t a1)
{
  unint64_t v2 = sub_100B7A0A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B73800(uint64_t a1)
{
  unint64_t v2 = sub_100B7A0A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ArtworkImage.Placeholder.encode(to:)(void *a1)
{
  uint64_t v2 = sub_100063814(&qword_1010CC560);
  uint64_t v72 = *(void *)(v2 - 8);
  uint64_t v73 = v2;
  __chkstk_darwin();
  uint64_t v71 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010CC568);
  uint64_t v69 = *(void *)(v4 - 8);
  uint64_t v70 = v4;
  __chkstk_darwin();
  uint64_t v68 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100063814(&qword_1010CC570);
  uint64_t v45 = *(void *)(v46 - 8);
  __chkstk_darwin();
  uint64_t v44 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010CC578);
  uint64_t v66 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  __chkstk_darwin();
  uint64_t v65 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814(&qword_1010CC580);
  uint64_t v63 = *(void *)(v9 - 8);
  uint64_t v64 = v9;
  __chkstk_darwin();
  uint64_t v62 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100063814(&qword_1010CC588);
  uint64_t v60 = *(void *)(v11 - 8);
  uint64_t v61 = v11;
  __chkstk_darwin();
  uint64_t v58 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100063814(&qword_1010CC590);
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin();
  uint64_t v53 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100063814(&qword_1010CC598);
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin();
  long long v54 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010C9288);
  __chkstk_darwin();
  uint64_t v52 = (uint64_t)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100063814(&qword_1010CC5A0);
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100063814(&qword_1010CC5A8);
  uint64_t v48 = *(void *)(v49 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010CC5B0);
  uint64_t v47 = *(void *)(v20 - 8);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100063814(&qword_1010CC5B8);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v74 = v25;
  uint64_t v75 = v26;
  __chkstk_darwin();
  uint64_t v28 = (char *)&v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100068990(a1, a1[3]);
  sub_100B79EA8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100B79D24(v76, (uint64_t)v24, type metadata accessor for ArtworkImage.Placeholder);
  uint64_t v29 = sub_100063814(&qword_1010CF250);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v24, 10, v29))
  {
    case 1u:
      v77[5] = 0;
      sub_100B7A244();
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v22, v20);
      goto LABEL_15;
    case 2u:
      v77[6] = 1;
      sub_100B7A1F0();
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v36 = *(void (**)(char *, void))(v48 + 8);
      uint64_t v37 = v19;
      uint64_t v38 = (uint64_t *)v78;
      goto LABEL_14;
    case 3u:
      v77[7] = 2;
      sub_100B7A19C();
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v36 = *(void (**)(char *, void))(v50 + 8);
      uint64_t v37 = v17;
      uint64_t v38 = &v79;
      goto LABEL_14;
    case 4u:
      v78[1] = 4;
      sub_100B7A0F4();
      uint64_t v39 = v53;
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v36 = *(void (**)(char *, void))(v55 + 8);
      uint64_t v37 = v39;
      uint64_t v38 = &v80;
      goto LABEL_14;
    case 5u:
      v78[2] = 5;
      sub_100B7A0A0();
      uint64_t v40 = v58;
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v42 = v60;
      uint64_t v41 = v61;
      goto LABEL_12;
    case 6u:
      v78[3] = 6;
      sub_100B7A04C();
      uint64_t v40 = v62;
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v42 = v63;
      uint64_t v41 = v64;
      goto LABEL_12;
    case 7u:
      v78[4] = 7;
      sub_100B79FF8();
      uint64_t v40 = v65;
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v42 = v66;
      uint64_t v41 = v67;
      goto LABEL_12;
    case 8u:
      v78[5] = 8;
      sub_100B79FA4();
      uint64_t v43 = v44;
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v36 = *(void (**)(char *, void))(v45 + 8);
      uint64_t v37 = v43;
      uint64_t v38 = (uint64_t *)v77;
LABEL_14:
      v36(v37, *(v38 - 32));
      goto LABEL_15;
    case 9u:
      v78[6] = 9;
      sub_100B79F50();
      uint64_t v40 = v68;
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v42 = v69;
      uint64_t v41 = v70;
      goto LABEL_12;
    case 0xAu:
      v78[7] = 10;
      sub_100B79EFC();
      uint64_t v40 = v71;
      uint64_t v35 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v42 = v72;
      uint64_t v41 = v73;
LABEL_12:
      (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v41);
LABEL_15:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v28, v35);
      break;
    default:
      uint64_t v30 = v52;
      sub_10003CABC((uint64_t)v24, v52, &qword_1010C9288);
      v78[0] = 3;
      sub_100B7A148();
      int v31 = v54;
      uint64_t v32 = v74;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      type metadata accessor for Playlist.Variant();
      sub_100B79E60(&qword_1010CC608, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant);
      uint64_t v33 = v59;
      KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v33);
      sub_1000637B8(v30, &qword_1010C9288);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v28, v32);
      break;
  }
  return result;
}

Swift::Int ArtworkImage.Placeholder.hashValue.getter()
{
  return Hasher._finalize()();
}

uint64_t ArtworkImage.Placeholder.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v104 = a2;
  uint64_t v109 = sub_100063814(&qword_1010CC628);
  uint64_t v95 = *(void *)(v109 - 8);
  __chkstk_darwin();
  uint64_t v108 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010CC630);
  uint64_t v93 = *(void *)(v4 - 8);
  uint64_t v94 = v4;
  __chkstk_darwin();
  long long v103 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100063814(&qword_1010CC638);
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin();
  unsigned __int8 v102 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_100063814(&qword_1010CC640);
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin();
  uint64_t v101 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100063814(&qword_1010CC648);
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin();
  uint64_t v100 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100063814(&qword_1010CC650);
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin();
  uint64_t v99 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100063814(&qword_1010CC658);
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin();
  long long v98 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_100063814(&qword_1010CC660);
  uint64_t v96 = *(void *)(v84 - 8);
  __chkstk_darwin();
  uint64_t v107 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100063814(&qword_1010CC668);
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin();
  long long v97 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_100063814(&qword_1010CC670);
  uint64_t v79 = *(void *)(v78 - 8);
  __chkstk_darwin();
  long long v106 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100063814(&qword_1010CC678);
  uint64_t v77 = *(void *)(v76 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100063814(&qword_1010CC680);
  uint64_t v105 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v23 = (char *)&v74 - v22;
  uint64_t v24 = a1[3];
  uint64_t v110 = a1;
  sub_100068990(a1, v24);
  sub_100B79EA8();
  uint64_t v25 = v111;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v25)
  {
    uint64_t v26 = (uint64_t)v110;
  }
  else
  {
    uint64_t v75 = v15;
    uint64_t v27 = v106;
    uint64_t v74 = v21;
    uint64_t v111 = 0;
    uint64_t v28 = v107;
    uint64_t v29 = v108;
    uint64_t v30 = v109;
    uint64_t v31 = KeyedDecodingContainer.allKeys.getter();
    if (*(void *)(v31 + 16) == 1)
    {
      switch(*(unsigned char *)(v31 + 32))
      {
        case 1:
          char v113 = 1;
          sub_100B7A1F0();
          uint64_t v41 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v41) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v79 + 8))(v27, v78);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v65 = sub_100063814(&qword_1010CF250);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v23, 2, 10, v65);
          goto LABEL_33;
        case 2:
          char v114 = 2;
          sub_100B7A19C();
          uint64_t v42 = v97;
          uint64_t v43 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v43) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v80 + 8))(v42, v81);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v44 = sub_100063814(&qword_1010CF250);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v23, 3, 10, v44);
          goto LABEL_33;
        case 3:
          char v115 = 3;
          sub_100B7A148();
          uint64_t v45 = v28;
          uint64_t v46 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v46)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v16);
            goto LABEL_8;
          }
          type metadata accessor for Playlist.Variant();
          sub_100B79E60(&qword_1010CC690, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant);
          uint64_t v66 = (uint64_t)v74;
          uint64_t v67 = v84;
          KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
          uint64_t v68 = v45;
          uint64_t v69 = v105;
          (*(void (**)(char *, uint64_t))(v96 + 8))(v68, v67);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v69 + 8))(v18, v16);
          uint64_t v73 = sub_100063814(&qword_1010CF250);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v66, 0, 10, v73);
          sub_100B79CBC(v66, (uint64_t)v23, type metadata accessor for ArtworkImage.Placeholder);
          uint64_t v26 = (uint64_t)v110;
          goto LABEL_33;
        case 4:
          char v116 = 4;
          sub_100B7A0F4();
          uint64_t v47 = v98;
          uint64_t v48 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v48) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v82 + 8))(v47, v83);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v49 = sub_100063814(&qword_1010CF250);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v23, 4, 10, v49);
          goto LABEL_33;
        case 5:
          char v117 = 5;
          sub_100B7A0A0();
          uint64_t v50 = v99;
          uint64_t v51 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v51) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v85 + 8))(v50, v86);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v52 = sub_100063814(&qword_1010CF250);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v23, 5, 10, v52);
          goto LABEL_33;
        case 6:
          char v118 = 6;
          sub_100B7A04C();
          uint64_t v53 = v100;
          uint64_t v54 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v54) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v87 + 8))(v53, v88);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v55 = sub_100063814(&qword_1010CF250);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v23, 6, 10, v55);
          goto LABEL_33;
        case 7:
          char v119 = 7;
          sub_100B79FF8();
          uint64_t v56 = v101;
          uint64_t v57 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v57) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v89 + 8))(v56, v90);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v58 = sub_100063814(&qword_1010CF250);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v23, 7, 10, v58);
          goto LABEL_33;
        case 8:
          char v120 = 8;
          sub_100B79FA4();
          uint64_t v59 = v102;
          uint64_t v60 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v60) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v91 + 8))(v59, v92);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v61 = sub_100063814(&qword_1010CF250);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v23, 8, 10, v61);
          goto LABEL_33;
        case 9:
          char v121 = 9;
          sub_100B79F50();
          uint64_t v62 = v103;
          uint64_t v63 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v63) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v93 + 8))(v62, v94);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v70 = sub_100063814(&qword_1010CF250);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v23, 9, 10, v70);
          goto LABEL_33;
        case 0xA:
          char v122 = 10;
          sub_100B79EFC();
          uint64_t v64 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v64) {
            goto LABEL_26;
          }
          (*(void (**)(char *, uint64_t))(v95 + 8))(v29, v30);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          uint64_t v71 = sub_100063814(&qword_1010CF250);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v23, 10, 10, v71);
          goto LABEL_33;
        default:
          char v112 = 0;
          sub_100B7A244();
          uint64_t v32 = v75;
          uint64_t v33 = v111;
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v34 = v16;
          uint64_t v26 = (uint64_t)v110;
          if (v33)
          {
LABEL_26:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v77 + 8))(v32, v76);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v105 + 8))(v18, v34);
            uint64_t v35 = sub_100063814(&qword_1010CF250);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v23, 1, 10, v35);
LABEL_33:
            sub_100B79CBC((uint64_t)v23, v104, type metadata accessor for ArtworkImage.Placeholder);
          }
          break;
      }
    }
    else
    {
      uint64_t v36 = v16;
      uint64_t v37 = type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v38 = v18;
      uint64_t v40 = v39;
      sub_100063814(&qword_1010CC688);
      *uint64_t v40 = v19;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v37 - 8) + 104))(v40, enum case for DecodingError.typeMismatch(_:), v37);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v38, v36);
LABEL_8:
      uint64_t v26 = (uint64_t)v110;
    }
  }
  return sub_1000760E4(v26);
}

uint64_t sub_100B75700@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ArtworkImage.Placeholder.init(from:)(a1, a2);
}

uint64_t sub_100B75718(void *a1)
{
  return ArtworkImage.Placeholder.encode(to:)(a1);
}

Swift::Int sub_100B75734()
{
  return Hasher._finalize()();
}

uint64_t GenericMusicItem.placeholder.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Playlist();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for GenericMusicItem();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v40 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = __chkstk_darwin();
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v13((char *)&v39 - v11, v1, v7, v10);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v12, v7);
  if (v14 == enum case for GenericMusicItem.album(_:)) {
    goto LABEL_2;
  }
  uint64_t v41 = a1;
  if (v14 == enum case for GenericMusicItem.artist(_:)) {
    goto LABEL_13;
  }
  if (v14 == enum case for GenericMusicItem.composer(_:))
  {
    uint64_t v19 = sub_100063814(&qword_1010CF250);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v41, 10, 10, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  if (v14 == enum case for GenericMusicItem.creditArtist(_:) || v14 == enum case for GenericMusicItem.curator(_:)) {
    goto LABEL_13;
  }
  if (v14 == enum case for GenericMusicItem.editorialItem(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
LABEL_17:
    uint64_t v15 = sub_100063814(&qword_1010CF250);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v41;
    goto LABEL_3;
  }
  if (v14 == enum case for GenericMusicItem.genre(_:))
  {
    uint64_t v22 = sub_100063814(&qword_1010CF250);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v41, 9, 10, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  if (v14 == enum case for GenericMusicItem.musicMovie(_:)) {
    goto LABEL_21;
  }
  if (v14 == enum case for GenericMusicItem.musicVideo(_:))
  {
    uint64_t v24 = sub_100063814(&qword_1010CF250);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v41, 4, 10, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  if (v14 == enum case for GenericMusicItem.playlist(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v12, v7);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v12, v3);
    uint64_t v25 = v41;
    Playlist.variant.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v26 = sub_100063814(&qword_1010CF250);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 10, v26);
  }
  if (v14 == enum case for GenericMusicItem.radioShow(_:)) {
    goto LABEL_27;
  }
  if (v14 == enum case for GenericMusicItem.recordLabel(_:))
  {
LABEL_13:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    uint64_t v15 = sub_100063814(&qword_1010CF250);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v41;
    uint64_t v18 = 6;
    return v16(v17, v18, 10, v15);
  }
  if (v14 == enum case for GenericMusicItem.socialProfile(_:))
  {
    uint64_t v28 = sub_100063814(&qword_1010CF250);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v41, 7, 10, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  a1 = v41;
  if (v14 == enum case for GenericMusicItem.song(_:)) {
    goto LABEL_2;
  }
  if (v14 == enum case for GenericMusicItem.station(_:))
  {
LABEL_27:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    uint64_t v27 = sub_100063814(&qword_1010CF250);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v41, 8, 10, v27);
  }
  if (v14 == enum case for GenericMusicItem.tvEpisode(_:)
    || v14 == enum case for GenericMusicItem.tvSeason(_:)
    || v14 == enum case for GenericMusicItem.tvShow(_:))
  {
LABEL_21:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    uint64_t v23 = sub_100063814(&qword_1010CF250);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v41, 5, 10, v23);
  }
  a1 = v41;
  if (v14 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
LABEL_2:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    uint64_t v15 = sub_100063814(&qword_1010CF250);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = a1;
LABEL_3:
    uint64_t v18 = 1;
    return v16(v17, v18, 10, v15);
  }
  if (v14 == enum case for GenericMusicItem.uploadedVideo(_:)) {
    goto LABEL_21;
  }
  uint64_t v29 = v8;
  if (v14 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(v8 + 96))(v12, v7);
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (qword_1010C8628 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_100050A90(v30, (uint64_t)static Logger.artwork);
  ((void (*)(char *, uint64_t, uint64_t))v13)(v40, v1, v7);
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136315394;
    *(void *)(v33 + 4) = sub_100076010(0xD000000000000010, 0x8000000100DD3410, &v42);
    *(_WORD *)(v33 + 12) = 2080;
    sub_100B79E60((unint64_t *)&qword_1010C9500, (void (*)(uint64_t))&type metadata accessor for GenericMusicItem);
    uint64_t v34 = v40;
    uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v33 + 14) = sub_100076010(v35, v36, &v42);
    swift_bridgeObjectRelease();
    uint64_t v37 = *(void (**)(char *, uint64_t))(v29 + 8);
    v37(v34, v7);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Unhandled case for %s: %s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v37 = *(void (**)(char *, uint64_t))(v29 + 8);
    v37(v40, v7);
  }

  uint64_t v38 = sub_100063814(&qword_1010CF250);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v41, 1, 10, v38);
  return ((uint64_t (*)(char *, uint64_t))v37)(v12, v7);
}

uint64_t GenericMusicItem.aspectRatio.getter()
{
  sub_100063814((uint64_t *)&unk_1010C8960);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UploadedVideo();
  uint64_t v27 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for GenericMusicItem();
  double v7 = *(double *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = __chkstk_darwin();
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)&v7 + 16);
  v13((char *)&v25 - v11, v0, v6, v10);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(*(void *)&v7 + 88))(v12, v6);
  if (v14 == enum case for GenericMusicItem.album(_:)
    || v14 == enum case for GenericMusicItem.artist(_:)
    || v14 == enum case for GenericMusicItem.composer(_:)
    || v14 == enum case for GenericMusicItem.creditArtist(_:)
    || v14 == enum case for GenericMusicItem.curator(_:)
    || v14 == enum case for GenericMusicItem.editorialItem(_:)
    || v14 == enum case for GenericMusicItem.genre(_:)
    || v14 == enum case for GenericMusicItem.musicMovie(_:)
    || v14 == enum case for GenericMusicItem.musicVideo(_:)
    || v14 == enum case for GenericMusicItem.playlist(_:)
    || v14 == enum case for GenericMusicItem.radioShow(_:)
    || v14 == enum case for GenericMusicItem.recordLabel(_:)
    || v14 == enum case for GenericMusicItem.socialProfile(_:)
    || v14 == enum case for GenericMusicItem.song(_:))
  {
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)&v7 + 8))(v12, v6);
  }
  double v26 = v7;
  if (v14 == enum case for GenericMusicItem.station(_:)) {
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)&v26 + 8))(v12, v6);
  }
  double v7 = v26;
  if (v14 == enum case for GenericMusicItem.tvEpisode(_:)) {
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)&v7 + 8))(v12, v6);
  }
  if (v14 == enum case for GenericMusicItem.tvSeason(_:)
    || v14 == enum case for GenericMusicItem.tvShow(_:)
    || v14 == enum case for GenericMusicItem.uploadedAudio(_:))
  {
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)&v26 + 8))(v12, v6);
  }
  if (v14 == enum case for GenericMusicItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(*(void *)&v26 + 96))(v12, v6);
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v5, v12, v3);
    sub_100AE5E00(v2);
    uint64_t v16 = type metadata accessor for ArtworkImage.ViewModel(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v2, 1, v16) == 1)
    {
      sub_1000637B8((uint64_t)v2, (uint64_t *)&unk_1010C8960);
    }
    else
    {
      if (Artwork.maximumWidth.getter() >= 1 && Artwork.maximumHeight.getter() >= 1)
      {
        double v17 = (double)Artwork.maximumWidth.getter();
        double v26 = v17 / (double)Artwork.maximumHeight.getter();
        sub_100B79D8C((uint64_t)v2, type metadata accessor for ArtworkImage.ViewModel);
        return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v5, v3);
      }
      sub_100B79D8C((uint64_t)v2, type metadata accessor for ArtworkImage.ViewModel);
    }
    double v26 = 1.77777778;
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v5, v3);
  }
  if (v14 == enum case for GenericMusicItem.other(_:))
  {
    (*(void (**)(char *, uint64_t))(*(void *)&v26 + 96))(v12, v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1010C8628 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100050A90(v18, (uint64_t)static Logger.artwork);
    ((void (*)(char *, uint64_t, uint64_t))v13)(v9, v0, v6);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315394;
      *(void *)(v21 + 4) = sub_100076010(0xD000000000000010, 0x8000000100DD3410, &v28);
      *(_WORD *)(v21 + 12) = 2080;
      sub_100B79E60((unint64_t *)&qword_1010C9500, (void (*)(uint64_t))&type metadata accessor for GenericMusicItem);
      uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v21 + 14) = sub_100076010(v22, v23, &v28);
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void (**)(char *, uint64_t))(*(void *)&v26 + 8);
      v24(v9, v6);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Unhandled case for %s: %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v24 = *(void (**)(char *, uint64_t))(*(void *)&v26 + 8);
      v24(v9, v6);
    }

    return ((uint64_t (*)(char *, uint64_t))v24)(v12, v6);
  }
}

void *CGFloat.videoAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.videoAspectRatio;
}

void *CGFloat.moviePosterAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.moviePosterAspectRatio;
}

void Playlist.Variant.symbolImage.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Playlist.Variant();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, v1, v2, v4);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 != enum case for Playlist.Variant.smart(_:)
    && v7 != enum case for Playlist.Variant.genius(_:)
    && v7 != enum case for Playlist.Variant.folder(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [self _systemImageNamed:v8];

  if (!v9) {
    __break(1u);
  }
}

uint64_t ArtworkImage.ViewModel.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100063814(&qword_1010C94F8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Artwork();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = type metadata accessor for ArtworkImage.ViewModel(0);
  __n128 v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v31 = v15;
    id v19 = a1;
    Artwork.init(_:)();
    id v20 = [v19 token];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100057778(0, &qword_1010CC698);
    if (swift_dynamicCast())
    {
      uint64_t v30 = a2;
      id v21 = v32;
      id v22 = [v32 cropStyle];

      if (v22)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v29 = v6;

        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
        NSString v23 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v24 = (uint64_t)v29;
        Artwork.CropStyle.init(_:)(v23, (uint64_t)v29);

        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v18, v10, v7);
        sub_10003CABC(v24, (uint64_t)&v18[*(int *)(v14 + 20)], &qword_1010C94F8);
        a2 = v30;
LABEL_11:
        sub_100B79CBC((uint64_t)v18, a2, type metadata accessor for ArtworkImage.ViewModel);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(a2, 0, 1, v14);
      }

      a2 = v30;
    }
    else
    {
    }
    uint64_t v27 = &v18[*(int *)(v14 + 20)];
    uint64_t v28 = type metadata accessor for Artwork.CropStyle();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v18, v13, v7);
    goto LABEL_11;
  }
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v15 + 56);

  return v25(a2, 1, 1, v14, v16);
}

uint64_t Artwork.CropStyle.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Artwork.CropStyle();
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_53;
  }
  uint64_t v61 = v5;
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;
  if (v9 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v11 == v12)
  {
    id v26 = a1;
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
  id v15 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_16:
    static Artwork.CropStyle.boundedBox.getter();
LABEL_17:

    (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(a2, v8, v4);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(a2, 0, 1, v4);
  }
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;
  if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21)
  {
LABEL_19:
    static Artwork.CropStyle.constrainedWidth.getter();
    goto LABEL_17;
  }
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;
  if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
LABEL_21:
    static Artwork.CropStyle.constrainedHeight.getter();
    goto LABEL_17;
  }
  char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v28) {
    goto LABEL_21;
  }
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;
  if (v29 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v31 == v32)
  {
    swift_bridgeObjectRelease_n();
LABEL_26:
    static Artwork.CropStyle.featuredContentCrop270.getter();
    goto LABEL_17;
  }
  char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v33) {
    goto LABEL_26;
  }
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v36 = v35;
  if (v34 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v36 == v37)
  {
    swift_bridgeObjectRelease_n();
LABEL_31:
    static Artwork.CropStyle.featuredContentCrop44.getter();
    goto LABEL_17;
  }
  char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v38) {
    goto LABEL_31;
  }
  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v40;
  if (v39 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v41 == v42)
  {
    swift_bridgeObjectRelease_n();
LABEL_36:
    static Artwork.CropStyle.featuredContentCrop170T100B.getter();
    goto LABEL_17;
  }
  char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v43) {
    goto LABEL_36;
  }
  uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v46 = v45;
  if (v44 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v46 == v47)
  {
    swift_bridgeObjectRelease_n();
LABEL_41:
    static Artwork.CropStyle.sourceSize.getter();
    goto LABEL_17;
  }
  char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v48) {
    goto LABEL_41;
  }
  uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v51 = v50;
  if (v49 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v51 == v52)
  {
    swift_bridgeObjectRelease_n();
LABEL_46:
    static Artwork.CropStyle.specificRectangle.getter();
    goto LABEL_17;
  }
  char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53) {
    goto LABEL_46;
  }
  uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v56 = v55;
  if (v54 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v56 == v57)
  {
    swift_bridgeObjectRelease_n();
LABEL_51:
    static Artwork.CropStyle.squareCenterCrop.getter();
    goto LABEL_17;
  }
  char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v58) {
    goto LABEL_51;
  }

  uint64_t v5 = v61;
LABEL_53:
  uint64_t v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);

  return v59(a2, 1, 1, v4, v6);
}

uint64_t sub_100B773C8()
{
  uint64_t v0 = type metadata accessor for Artwork.CropStyle();
  sub_100014CA4(v0, static Artwork.CropStyle.fallback);
  sub_100050A90(v0, (uint64_t)static Artwork.CropStyle.fallback);
  return static Artwork.CropStyle.boundedBox.getter();
}

uint64_t static Artwork.CropStyle.fallback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100B77B34(&qword_1010C8618, (uint64_t (*)(void))&type metadata accessor for Artwork.CropStyle, (uint64_t)static Artwork.CropStyle.fallback, a1);
}

uint64_t sub_100B7744C()
{
  uint64_t v0 = type metadata accessor for Artwork.ImageFormat();
  sub_100014CA4(v0, static Artwork.ImageFormat.fallback);
  uint64_t v1 = sub_100050A90(v0, (uint64_t)static Artwork.ImageFormat.fallback);
  uint64_t v2 = enum case for Artwork.ImageFormat.heic(_:);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t static Artwork.ImageFormat.fallback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100B77B34(&qword_1010C8620, (uint64_t (*)(void))&type metadata accessor for Artwork.ImageFormat, (uint64_t)static Artwork.ImageFormat.fallback, a1);
}

double static CGFloat.videoAspectRatio.getter()
{
  return 1.77777778;
}

void *CGFloat.verticalVideoAspectRatio.unsafeMutableAddressor()
{
  return &static CGFloat.verticalVideoAspectRatio;
}

double static CGFloat.verticalVideoAspectRatio.getter()
{
  return 0.5625;
}

double static CGFloat.moviePosterAspectRatio.getter()
{
  return 0.666666667;
}

uint64_t static Artwork.monogramArtwork(for:layoutDirection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v9 = a4 & 1;
  sub_100057778(0, (unint64_t *)&qword_1010CDFA0);
  if (static MPArtworkCatalog.monogram(for:layoutDirection:)(a1, a2, a3, v9))
  {
    Artwork.init(_:)();
    uint64_t v10 = type metadata accessor for Artwork();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v12 = v10;
    uint64_t v13 = a5;
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v15 = type metadata accessor for Artwork();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v12 = v15;
    uint64_t v13 = a5;
    uint64_t v14 = 1;
  }

  return v11(v13, v14, 1, v12);
}

uint64_t sub_100B77638()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100014CA4(v0, static Logger.artwork);
  sub_100050A90(v0, (uint64_t)static Logger.artwork);
  return static Logger.music(_:)();
}

uint64_t type metadata accessor for ArtworkImage.ViewModel(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CC718);
}

uint64_t type metadata accessor for ArtworkImage.Placeholder(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CC870);
}

uint64_t sub_100B776D8()
{
  uint64_t v1 = *(void *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 58) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = sub_100063814(&qword_1010CF250);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v0 + v2, 10, v3))
  {
    uint64_t v4 = type metadata accessor for Playlist.Variant();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
    }
  }

  return swift_deallocObject();
}

uint64_t sub_100B7784C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 58) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100B700C4(v1 + 16, v4, a1);
}

unint64_t sub_100B778F0()
{
  unint64_t result = qword_1010CC508;
  if (!qword_1010CC508)
  {
    sub_10006389C((uint64_t *)&unk_1010CE210);
    sub_100B77990();
    sub_100063858(&qword_1010CC528, (uint64_t *)&unk_1010CE260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC508);
  }
  return result;
}

unint64_t sub_100B77990()
{
  unint64_t result = qword_1010CE220;
  if (!qword_1010CE220)
  {
    sub_10006389C(&qword_1010CC510);
    sub_100B77A0C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE220);
  }
  return result;
}

unint64_t sub_100B77A0C()
{
  unint64_t result = qword_1010CE230;
  if (!qword_1010CE230)
  {
    sub_10006389C(&qword_1010CC518);
    sub_100B79E60((unint64_t *)&unk_1010CE240, (void (*)(uint64_t))type metadata accessor for ArtworkImage.Placeholder.View);
    sub_100063858(&qword_1010CC520, (uint64_t *)&unk_1010CE250);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE230);
  }
  return result;
}

uint64_t type metadata accessor for ArtworkImage.Placeholder.View(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CC8F0);
}

uint64_t static Logger.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100B77B34(&qword_1010C8628, (uint64_t (*)(void))&type metadata accessor for Logger, (uint64_t)static Logger.artwork, a1);
}

uint64_t sub_100B77B34@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_100050A90(v7, a3);
  char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_100B77BD4()
{
  uint64_t v0 = sub_100063814(&qword_1010CC538);
  sub_100014CA4(v0, qword_1010CC4F0);
  uint64_t v1 = sub_100050A90(v0, (uint64_t)qword_1010CC4F0);
  uint64_t v2 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(v1, 1, 1, v2);
}

uint64_t sub_100B77C6C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1010C8630 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100063814(&qword_1010CC538);
  uint64_t v3 = sub_100050A90(v2, (uint64_t)qword_1010CC4F0);
  return sub_10006CAB8(v3, a1, &qword_1010CC538);
}

void (*EnvironmentValues.placeholderStyle.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  size_t v4 = *(void *)(*(void *)(sub_100063814(&qword_1010CC538) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_100B79DEC();
  EnvironmentValues.subscript.getter();
  return sub_100B77DA8;
}

void sub_100B77DA8(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  sub_10006CAB8((*a1)[3], (*a1)[2], &qword_1010CC538);
  size_t v4 = (void *)v3[3];
  uint64_t v5 = (void *)v3[1];
  __n128 v6 = (void *)v3[2];
  if (a2)
  {
    sub_10006CAB8(v3[2], v3[1], &qword_1010CC538);
    EnvironmentValues.subscript.setter();
    sub_1000637B8((uint64_t)v6, &qword_1010CC538);
  }
  else
  {
    EnvironmentValues.subscript.setter();
  }
  sub_1000637B8((uint64_t)v4, &qword_1010CC538);
  free(v4);
  free(v6);
  free(v5);

  free(v3);
}

uint64_t sub_100B77E98(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  sub_100063814(&qword_1010CC550);
  __chkstk_darwin();
  size_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BlendMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CC538);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006CAB8(a2, (uint64_t)v10, &qword_1010CC538);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_1000637B8((uint64_t)v10, &qword_1010CC538);
  }
  sub_100B79CBC((uint64_t)v10, (uint64_t)v14, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  sub_10006CAB8((uint64_t)v14, (uint64_t)&v21, (uint64_t *)&unk_1010CE2A0);
  if (v22)
  {
    sub_100068978(&v21, (uint64_t)v23);
    uint64_t v16 = v20;
    sub_1000637B8(v20, (uint64_t *)&unk_1010CE2A0);
    sub_100068978(v23, v16);
  }
  else
  {
    sub_1000637B8((uint64_t)&v21, (uint64_t *)&unk_1010CE2A0);
    uint64_t v16 = v20;
  }
  sub_10006CAB8((uint64_t)(v14 + 40), (uint64_t)&v21, (uint64_t *)&unk_1010CE2A0);
  if (v22)
  {
    sub_100068978(&v21, (uint64_t)v23);
    sub_1000637B8(v16 + 40, (uint64_t *)&unk_1010CE2A0);
    sub_100068978(v23, v16 + 40);
  }
  else
  {
    sub_1000637B8((uint64_t)&v21, (uint64_t *)&unk_1010CE2A0);
  }
  sub_10006CAB8((uint64_t)&v14[*(int *)(v11 + 24)], (uint64_t)v4, &qword_1010CC550);
  sub_100B79D8C((uint64_t)v14, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_1000637B8((uint64_t)v4, &qword_1010CC550);
  }
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v17(v8, v4, v5);
  uint64_t v18 = v16 + *(int *)(v11 + 24);
  sub_1000637B8(v18, &qword_1010CC550);
  v17((char *)v18, v8, v5);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v5);
}

uint64_t PlaceholderStyleModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100063814(&qword_1010CC538);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  sub_100B783CC((uint64_t)v5);
  uint64_t v7 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
  uint64_t v8 = (uint64_t *)(a2 + *(int *)(sub_100063814(&qword_1010CC6A0) + 36));
  uint64_t v9 = sub_100063814(&qword_1010CC6A8);
  sub_10006CAB8((uint64_t)v5, (uint64_t)v8 + *(int *)(v9 + 28), &qword_1010CC538);
  *uint64_t v8 = KeyPath;
  uint64_t v10 = sub_100063814(&qword_1010CC6B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a2, a1, v10);
  return sub_1000637B8((uint64_t)v5, &qword_1010CC538);
}

uint64_t sub_100B783CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (_OWORD *)((char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100063814(&qword_1010CC550);
  __chkstk_darwin();
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CC538);
  __chkstk_darwin();
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaceholderStyleModifier(0);
  sub_100B6E9C4(&qword_1010C8940, &qword_1010CC538, 0x6C616E6F6974704FLL, 0xEF3E656C7974533CLL, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    uint64_t v19 = 0;
    memset(v18, 0, sizeof(v18));
    uint64_t v12 = type metadata accessor for BlendMode();
    memset(v16, 0, sizeof(v16));
    uint64_t v17 = 0;
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    v13(v9, 1, 1, v12);
    _OWORD v7[3] = 0u;
    _OWORD v7[4] = 0u;
    v7[1] = 0u;
    _OWORD v7[2] = 0u;
    *uint64_t v7 = 0u;
    uint64_t v14 = (uint64_t)v7 + *(int *)(v4 + 24);
    v13((char *)v14, 1, 1, v12);
    sub_10002D09C((uint64_t)v18, (uint64_t)v7, (uint64_t *)&unk_1010CE2A0);
    sub_10002D09C((uint64_t)v16, (uint64_t)v7 + 40, (uint64_t *)&unk_1010CE2A0);
    sub_10002D09C((uint64_t)v9, v14, &qword_1010CC550);
    sub_100B79CBC((uint64_t)v7, a1, type metadata accessor for ArtworkImage.Placeholder.View.Style);
    sub_1000637B8((uint64_t)v11, &qword_1010CC538);
  }
  else
  {
    sub_100B79CBC((uint64_t)v11, a1, type metadata accessor for ArtworkImage.Placeholder.View.Style);
  }
  return (*v2)(a1);
}

uint64_t View.placeholderStyle(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a3;
  uint64_t v4 = *(void *)(sub_100063814(&qword_1010CC538) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin();
  uint64_t v6 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin();
  uint64_t v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v10 = (char *)&v15 - v9;
  sub_10006CAB8(a1, (uint64_t)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010CC538);
  uint64_t v11 = (void *)((char *)v8 + *(int *)(v6 + 20));
  *uint64_t v11 = swift_getKeyPath();
  sub_100063814(&qword_1010C8940);
  swift_storeEnumTagMultiPayload();
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v13 = swift_allocObject();
  sub_10003CABC((uint64_t)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, &qword_1010CC538);
  *uint64_t v8 = sub_100B7A2BC;
  v8[1] = v13;
  sub_100B79CBC((uint64_t)v8, (uint64_t)v10, type metadata accessor for PlaceholderStyleModifier);
  View.modifier<A>(_:)();
  return sub_100B79D8C((uint64_t)v10, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t View.placeholderStyle(_:)(void (*a1)(__n128), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a4;
  uint64_t v5 = sub_100063814(&qword_1010CC538);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __n128 v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v19 - v13;
  a1(v12);
  uint64_t v15 = (void *)((char *)v10 + *(int *)(v8 + 20));
  *uint64_t v15 = swift_getKeyPath();
  sub_100063814(&qword_1010C8940);
  swift_storeEnumTagMultiPayload();
  unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = swift_allocObject();
  sub_10003CABC((uint64_t)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, &qword_1010CC538);
  *uint64_t v10 = sub_100B7A2BC;
  v10[1] = v17;
  sub_100B79CBC((uint64_t)v10, (uint64_t)v14, type metadata accessor for PlaceholderStyleModifier);
  View.modifier<A>(_:)();
  return sub_100B79D8C((uint64_t)v14, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t View.placeholderStyle(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PlaceholderStyleModifier(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v11 = (void *)((char *)v6 + *(int *)(v10 + 20));
  *uint64_t v11 = swift_getKeyPath();
  sub_100063814(&qword_1010C8940);
  swift_storeEnumTagMultiPayload();
  *uint64_t v6 = a1;
  v6[1] = a2;
  sub_100B79CBC((uint64_t)v6, (uint64_t)v9, type metadata accessor for PlaceholderStyleModifier);
  swift_retain();
  View.modifier<A>(_:)();
  return sub_100B79D8C((uint64_t)v9, type metadata accessor for PlaceholderStyleModifier);
}

uint64_t _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4SizeV23__derived_struct_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if ((*(unsigned char *)(a1 + 8) & 1) == 0)
  {
    if (*(double *)a1 != *(double *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
LABEL_7:
    char v3 = *(unsigned char *)(a2 + 24);
    if (*(unsigned char *)(a1 + 24))
    {
      if (!*(unsigned char *)(a2 + 24)) {
        return 0;
      }
    }
    else
    {
      if (*(double *)(a1 + 16) != *(double *)(a2 + 16)) {
        char v3 = 1;
      }
      if (v3) {
        return 0;
      }
    }
    char v4 = *(unsigned char *)(a2 + 40);
    if (*(unsigned char *)(a1 + 40))
    {
      if (!*(unsigned char *)(a2 + 40)) {
        return 0;
      }
    }
    else
    {
      if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
        char v4 = 1;
      }
      if (v4) {
        return 0;
      }
    }
    int v5 = *(unsigned __int8 *)(a2 + 41);
    if (*(unsigned char *)(a1 + 41) == 2)
    {
      if (v5 != 2) {
        return 0;
      }
    }
    else if (v5 == 2 || (static ContentMode.== infix(_:_:)() & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  if (*(unsigned char *)(a2 + 8)) {
    goto LABEL_7;
  }
  return 0;
}

BOOL _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E9ViewModelV23__derived_struct_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artwork.CropStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814(&qword_1010CCC00);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010C94F8);
  __chkstk_darwin();
  __n128 v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v28 - v13;
  __chkstk_darwin();
  unint64_t v16 = (char *)&v28 - v15;
  if ((static Artwork.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v29 = v7;
  uint64_t v17 = v5;
  uint64_t v18 = type metadata accessor for ArtworkImage.ViewModel(0);
  sub_10006CAB8(a1 + *(int *)(v18 + 20), (uint64_t)v16, &qword_1010C94F8);
  uint64_t v19 = *(int *)(v18 + 20);
  uint64_t v20 = v17;
  sub_10006CAB8(a2 + v19, (uint64_t)v14, &qword_1010C94F8);
  uint64_t v21 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10006CAB8((uint64_t)v16, (uint64_t)v10, &qword_1010C94F8);
  sub_10006CAB8((uint64_t)v14, v21, &qword_1010C94F8);
  uint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v22((uint64_t)v10, 1, v4) == 1)
  {
    sub_1000637B8((uint64_t)v14, &qword_1010C94F8);
    sub_1000637B8((uint64_t)v16, &qword_1010C94F8);
    if (v22(v21, 1, v4) == 1)
    {
      sub_1000637B8((uint64_t)v10, &qword_1010C94F8);
      return 1;
    }
    goto LABEL_7;
  }
  sub_10006CAB8((uint64_t)v10, (uint64_t)v12, &qword_1010C94F8);
  if (v22(v21, 1, v4) == 1)
  {
    sub_1000637B8((uint64_t)v14, &qword_1010C94F8);
    sub_1000637B8((uint64_t)v16, &qword_1010C94F8);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v4);
LABEL_7:
    sub_1000637B8((uint64_t)v10, &qword_1010CCC00);
    return 0;
  }
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 32);
  uint64_t v24 = v29;
  v23(v29, v21, v4);
  sub_100B79E60(&qword_1010CCC08, (void (*)(uint64_t))&type metadata accessor for Artwork.CropStyle);
  char v25 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v26 = *(void (**)(char *, uint64_t))(v20 + 8);
  v26(v24, v4);
  sub_1000637B8((uint64_t)v14, &qword_1010C94F8);
  sub_1000637B8((uint64_t)v16, &qword_1010C94F8);
  v26(v12, v4);
  sub_1000637B8((uint64_t)v10, &qword_1010C94F8);
  return (v25 & 1) != 0;
}

uint64_t type metadata accessor for ArtworkImage.Info(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CC7B0);
}

uint64_t _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4InfoV23__derived_struct_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v39 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010CCBF8) - 8;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814((uint64_t *)&unk_1010C8960);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v38 - v12;
  __chkstk_darwin();
  uint64_t v15 = (char *)&v38 - v14;
  uint64_t v40 = a1;
  sub_10006CAB8(a1, (uint64_t)&v38 - v14, (uint64_t *)&unk_1010C8960);
  uint64_t v41 = a2;
  sub_10006CAB8(a2, (uint64_t)v13, (uint64_t *)&unk_1010C8960);
  uint64_t v16 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_10006CAB8((uint64_t)v15, (uint64_t)v9, (uint64_t *)&unk_1010C8960);
  sub_10006CAB8((uint64_t)v13, v16, (uint64_t *)&unk_1010C8960);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v17((uint64_t)v9, 1, v4) != 1)
  {
    sub_10006CAB8((uint64_t)v9, (uint64_t)v11, (uint64_t *)&unk_1010C8960);
    if (v17(v16, 1, v4) != 1)
    {
      uint64_t v18 = v39;
      sub_100B79CBC(v16, v39, type metadata accessor for ArtworkImage.ViewModel);
      BOOL v19 = _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E9ViewModelV23__derived_struct_equalsySbAF_AFtFZ_0((uint64_t)v11, v18);
      sub_100B79D8C(v18, type metadata accessor for ArtworkImage.ViewModel);
      sub_1000637B8((uint64_t)v13, (uint64_t *)&unk_1010C8960);
      sub_1000637B8((uint64_t)v15, (uint64_t *)&unk_1010C8960);
      sub_100B79D8C((uint64_t)v11, type metadata accessor for ArtworkImage.ViewModel);
      sub_1000637B8((uint64_t)v9, (uint64_t *)&unk_1010C8960);
      if (!v19) {
        return 0;
      }
      goto LABEL_8;
    }
    sub_1000637B8((uint64_t)v13, (uint64_t *)&unk_1010C8960);
    sub_1000637B8((uint64_t)v15, (uint64_t *)&unk_1010C8960);
    sub_100B79D8C((uint64_t)v11, type metadata accessor for ArtworkImage.ViewModel);
LABEL_6:
    sub_1000637B8((uint64_t)v9, &qword_1010CCBF8);
    return 0;
  }
  sub_1000637B8((uint64_t)v13, (uint64_t *)&unk_1010C8960);
  sub_1000637B8((uint64_t)v15, (uint64_t *)&unk_1010C8960);
  if (v17(v16, 1, v4) != 1) {
    goto LABEL_6;
  }
  sub_1000637B8((uint64_t)v9, (uint64_t *)&unk_1010C8960);
LABEL_8:
  uint64_t v20 = (int *)type metadata accessor for ArtworkImage.Info(0);
  uint64_t v22 = v40;
  uint64_t v21 = v41;
  if (_s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderO21__derived_enum_equalsySbAF_AFtFZ_0(v40 + v20[5], v41 + v20[5]))
  {
    uint64_t v23 = v20[6];
    uint64_t v24 = (double *)(v22 + v23);
    char v25 = *(unsigned char *)(v22 + v23 + 8);
    id v26 = (double *)(v21 + v23);
    int v27 = *(unsigned __int8 *)(v21 + v23 + 8);
    if (v25)
    {
      if (!v27) {
        return 0;
      }
    }
    else
    {
      if (*v24 != *v26) {
        LOBYTE(v27) = 1;
      }
      if (v27) {
        return 0;
      }
    }
    uint64_t v28 = (long long *)(v22 + v20[7]);
    long long v29 = *(long long *)((char *)v28 + 26);
    long long v30 = v28[1];
    long long v42 = *v28;
    v43[0] = v30;
    *(_OWORD *)((char *)v43 + 10) = v29;
    uint64_t v31 = (long long *)(v21 + v20[7]);
    *(_OWORD *)&v45[10] = *(long long *)((char *)v31 + 26);
    long long v32 = v31[1];
    long long v44 = *v31;
    *(_OWORD *)uint64_t v45 = v32;
    if (_s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E4SizeV23__derived_struct_equalsySbAF_AFtFZ_0((uint64_t)&v42, (uint64_t)&v44))
    {
      uint64_t v33 = v20[8];
      uint64_t v34 = v22 + v33;
      char v35 = *(unsigned char *)(v22 + v33 + 16);
      uint64_t v36 = v21 + v33;
      if (v35)
      {
        if ((*(unsigned char *)(v36 + 16) & 1) == 0) {
          return 0;
        }
      }
      else if ((*(unsigned char *)(v36 + 16) & 1) != 0 {
             || *(double *)v34 != *(double *)v36
      }
             || *(void *)(v34 + 8) != *(void *)(v36 + 8))
      {
        return 0;
      }
      return 1;
    }
  }
  return 0;
}

uint64_t _s17_MusicKit_SwiftUI12ArtworkImageV0a4CoreD0E11PlaceholderO21__derived_enum_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Playlist.Variant();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010CCBE0);
  __chkstk_darwin();
  uint64_t v31 = (uint64_t)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010C9288);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v30 - v11;
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CCBE8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t)&v16[*(int *)(v17 + 56)];
  sub_100B79D24(a1, (uint64_t)v16, type metadata accessor for ArtworkImage.Placeholder);
  sub_100B79D24(a2, v18, type metadata accessor for ArtworkImage.Placeholder);
  uint64_t v19 = sub_100063814(&qword_1010CF250);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  switch(v20((uint64_t)v16, 10, v19))
  {
    case 1u:
      if (v20(v18, 10, v19) == 1) {
        goto LABEL_23;
      }
      goto LABEL_24;
    case 2u:
      if (v20(v18, 10, v19) != 2) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 3u:
      if (v20(v18, 10, v19) != 3) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 4u:
      if (v20(v18, 10, v19) != 4) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 5u:
      if (v20(v18, 10, v19) != 5) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 6u:
      if (v20(v18, 10, v19) != 6) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 7u:
      if (v20(v18, 10, v19) != 7) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 8u:
      if (v20(v18, 10, v19) != 8) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 9u:
      if (v20(v18, 10, v19) != 9) {
        goto LABEL_24;
      }
      goto LABEL_23;
    case 0xAu:
      if (v20(v18, 10, v19) == 10) {
        goto LABEL_23;
      }
      goto LABEL_24;
    default:
      sub_100B79D24((uint64_t)v16, (uint64_t)v14, type metadata accessor for ArtworkImage.Placeholder);
      if (v20(v18, 10, v19))
      {
        sub_1000637B8((uint64_t)v14, &qword_1010C9288);
LABEL_24:
        sub_1000637B8((uint64_t)v16, &qword_1010CCBE8);
        return 0;
      }
      sub_10003CABC(v18, (uint64_t)v12, &qword_1010C9288);
      uint64_t v22 = v31 + *(int *)(v7 + 48);
      uint64_t v23 = (uint64_t)v14;
      uint64_t v24 = v31;
      sub_10003CABC(v23, v31, &qword_1010C9288);
      sub_10006CAB8((uint64_t)v12, v22, &qword_1010C9288);
      uint64_t v26 = v32;
      uint64_t v25 = v33;
      int v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
      if (v27(v24, 1, v33) == 1)
      {
        sub_1000637B8((uint64_t)v12, &qword_1010C9288);
        if (v27(v22, 1, v25) == 1)
        {
          sub_1000637B8(v24, &qword_1010C9288);
LABEL_23:
          sub_100B79D8C((uint64_t)v16, type metadata accessor for ArtworkImage.Placeholder);
          return 1;
        }
        goto LABEL_31;
      }
      sub_10006CAB8(v24, (uint64_t)v10, &qword_1010C9288);
      if (v27(v22, 1, v25) == 1)
      {
        sub_1000637B8((uint64_t)v12, &qword_1010C9288);
        (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v25);
LABEL_31:
        sub_1000637B8(v24, &qword_1010CCBE0);
        goto LABEL_33;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v6, v22, v25);
      sub_100B79E60(&qword_1010CCBF0, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant);
      char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
      long long v29 = *(void (**)(char *, uint64_t))(v26 + 8);
      v29(v6, v25);
      sub_1000637B8((uint64_t)v12, &qword_1010C9288);
      v29(v10, v25);
      sub_1000637B8(v24, &qword_1010C9288);
      if (v28) {
        goto LABEL_23;
      }
LABEL_33:
      sub_100B79D8C((uint64_t)v16, type metadata accessor for ArtworkImage.Placeholder);
      return 0;
  }
}

uint64_t sub_100B79C54()
{
  return EnvironmentValues.subscript.getter();
}

uint64_t sub_100B79C98()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t sub_100B79CBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B79D24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B79D8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100B79DEC()
{
  unint64_t result = qword_1010CC530;
  if (!qword_1010CC530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC530);
  }
  return result;
}

uint64_t type metadata accessor for ArtworkImage.Placeholder.View.Style(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CC9A0);
}

uint64_t sub_100B79E60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100B79EA8()
{
  unint64_t result = qword_1010CC5C0;
  if (!qword_1010CC5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC5C0);
  }
  return result;
}

unint64_t sub_100B79EFC()
{
  unint64_t result = qword_1010CC5C8;
  if (!qword_1010CC5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC5C8);
  }
  return result;
}

unint64_t sub_100B79F50()
{
  unint64_t result = qword_1010CC5D0;
  if (!qword_1010CC5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC5D0);
  }
  return result;
}

unint64_t sub_100B79FA4()
{
  unint64_t result = qword_1010CC5D8;
  if (!qword_1010CC5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC5D8);
  }
  return result;
}

unint64_t sub_100B79FF8()
{
  unint64_t result = qword_1010CC5E0;
  if (!qword_1010CC5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC5E0);
  }
  return result;
}

unint64_t sub_100B7A04C()
{
  unint64_t result = qword_1010CC5E8;
  if (!qword_1010CC5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC5E8);
  }
  return result;
}

unint64_t sub_100B7A0A0()
{
  unint64_t result = qword_1010CC5F0;
  if (!qword_1010CC5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC5F0);
  }
  return result;
}

unint64_t sub_100B7A0F4()
{
  unint64_t result = qword_1010CC5F8;
  if (!qword_1010CC5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC5F8);
  }
  return result;
}

unint64_t sub_100B7A148()
{
  unint64_t result = qword_1010CC600;
  if (!qword_1010CC600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC600);
  }
  return result;
}

unint64_t sub_100B7A19C()
{
  unint64_t result = qword_1010CC610;
  if (!qword_1010CC610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC610);
  }
  return result;
}

unint64_t sub_100B7A1F0()
{
  unint64_t result = qword_1010CC618;
  if (!qword_1010CC618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC618);
  }
  return result;
}

unint64_t sub_100B7A244()
{
  unint64_t result = qword_1010CC620;
  if (!qword_1010CC620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CC620);
  }
  return result;
}

uint64_t type metadata accessor for PlaceholderStyleModifier(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010CCA40);
}

uint64_t sub_100B7A2C4()
{
  uint64_t v1 = *(void *)(sub_100063814(&qword_1010CC538) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v0 + v2;
  uint64_t v4 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v0 + v2, 1, v4))
  {
    if (*(void *)(v3 + 24)) {
      sub_1000760E4(v0 + v2);
    }
    if (*(void *)(v3 + 64)) {
      sub_1000760E4(v3 + 40);
    }
    uint64_t v5 = v3 + *(int *)(v4 + 24);
    uint64_t v6 = type metadata accessor for BlendMode();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
  }

  return swift_deallocObject();
}

uint64_t sub_100B7A464(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100063814(&qword_1010CC538) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100B77E98(a1, v4);
}

uint64_t sub_100B7A4D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B7A4F4()
{
  return sub_100B79E60(&qword_1010CC6B8, (void (*)(uint64_t))type metadata accessor for ArtworkImage.Placeholder);
}

uint64_t sub_100B7A53C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *_s9ViewModelVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Artwork();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Artwork.CropStyle();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = sub_100063814(&qword_1010C94F8);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t _s9ViewModelVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Artwork.CropStyle();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t _s9ViewModelVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Artwork.CropStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100063814(&qword_1010C94F8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t _s9ViewModelVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Artwork.CropStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100063814(&qword_1010C94F8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t _s9ViewModelVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Artwork.CropStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100063814(&qword_1010C94F8);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t _s9ViewModelVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Artwork.CropStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100063814(&qword_1010C94F8);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t _s9ViewModelVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B7AE14);
}

uint64_t sub_100B7AE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Artwork();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_100063814(&qword_1010C94F8);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t _s9ViewModelVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B7AF24);
}

uint64_t sub_100B7AF24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Artwork();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_100063814(&qword_1010C94F8);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_100B7B02C()
{
  type metadata accessor for Artwork();
  if (v0 <= 0x3F)
  {
    sub_100B7D1CC(319, (unint64_t *)&unk_1010CC728, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork.CropStyle, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *_s4InfoVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ArtworkImage.ViewModel(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100063814((uint64_t *)&unk_1010C8960);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(v7 + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for Artwork.CropStyle();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_100063814(&qword_1010C94F8);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v18 = a3[5];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_100063814(&qword_1010CF250);
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 10, v21))
    {
      uint64_t v23 = type metadata accessor for ArtworkImage.Placeholder(0);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v24 = type metadata accessor for Playlist.Variant();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v24))
      {
        uint64_t v26 = sub_100063814(&qword_1010C9288);
        memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v19, v20, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v19, 0, 1, v24);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 10, v21);
    }
    uint64_t v27 = a3[6];
    uint64_t v28 = a3[7];
    long long v29 = (char *)a1 + v27;
    uint64_t v30 = (char *)a2 + v27;
    *(void *)long long v29 = *(void *)v30;
    v29[8] = v30[8];
    uint64_t v31 = (_OWORD *)((char *)a1 + v28);
    uint64_t v32 = (_OWORD *)((char *)a2 + v28);
    long long v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    *(_OWORD *)((char *)v31 + 26) = *(_OWORD *)((char *)v32 + 26);
    uint64_t v34 = a3[8];
    char v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    *(_OWORD *)char v35 = *(_OWORD *)v36;
    v35[16] = v36[16];
  }
  return a1;
}

uint64_t _s4InfoVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ArtworkImage.ViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    uint64_t v5 = type metadata accessor for Artwork();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    uint64_t v6 = a1 + *(int *)(v4 + 20);
    uint64_t v7 = type metadata accessor for Artwork.CropStyle();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);
  uint64_t v10 = sub_100063814(&qword_1010CF250);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 10, v10);
  if (!result)
  {
    uint64_t v12 = type metadata accessor for Playlist.Variant();
    uint64_t v14 = *(void *)(v12 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v9, 1, v12);
    if (!result)
    {
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8);
      return v13(v9, v12);
    }
  }
  return result;
}

char *_s4InfoVwcp(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100063814((uint64_t *)&unk_1010C8960);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for Artwork();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for Artwork.CropStyle();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_100063814(&qword_1010C94F8);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v16 = a3[5];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_100063814(&qword_1010CF250);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    uint64_t v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = type metadata accessor for Playlist.Variant();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      uint64_t v24 = sub_100063814(&qword_1010C9288);
      memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v17, v18, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  uint64_t v25 = a3[6];
  uint64_t v26 = a3[7];
  uint64_t v27 = &a1[v25];
  uint64_t v28 = &a2[v25];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  long long v29 = &a1[v26];
  uint64_t v30 = &a2[v26];
  long long v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)long long v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *(_OWORD *)(v29 + 26) = *(_OWORD *)(v30 + 26);
  uint64_t v32 = a3[8];
  long long v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  *(_OWORD *)long long v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  return a1;
}

uint64_t _s4InfoVwca(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v21 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 24))(a1, a2, v21);
      uint64_t v22 = *(int *)(v6 + 20);
      uint64_t v23 = (void *)(a1 + v22);
      uint64_t v24 = &a2[v22];
      uint64_t v25 = type metadata accessor for Artwork.CropStyle();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      int v28 = v27(v23, 1, v25);
      int v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      size_t v18 = *(void *)(*(void *)(sub_100063814(&qword_1010C94F8) - 8) + 64);
      uint64_t v19 = v23;
      uint64_t v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_100B79D8C(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    size_t v18 = *(void *)(*(void *)(sub_100063814((uint64_t *)&unk_1010C8960) - 8) + 64);
    uint64_t v19 = (void *)a1;
    uint64_t v20 = a2;
    goto LABEL_8;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 20);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Artwork.CropStyle();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_100063814(&qword_1010C94F8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  uint64_t v30 = a3[5];
  long long v31 = (void *)(a1 + v30);
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_100063814(&qword_1010CF250);
  uint64_t v34 = *(void *)(v33 - 8);
  char v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 10, v33);
  int v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      uint64_t v42 = type metadata accessor for Playlist.Variant();
      uint64_t v43 = *(void *)(v42 - 8);
      long long v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      int v45 = v44(v31, 1, v42);
      int v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 16))(v31, v32, v42);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 24))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      uint64_t v41 = sub_100063814(&qword_1010C9288);
      goto LABEL_21;
    }
    sub_1000637B8((uint64_t)v31, &qword_1010CF250);
LABEL_20:
    uint64_t v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37) {
    goto LABEL_20;
  }
  uint64_t v38 = type metadata accessor for Playlist.Variant();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    uint64_t v40 = sub_100063814(&qword_1010C9288);
    memcpy(v31, v32, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v31, v32, v38);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  uint64_t v47 = a3[6];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = &a2[v47];
  uint64_t v50 = *(void *)v49;
  *(unsigned char *)(v48 + 8) = v49[8];
  *(void *)uint64_t v48 = v50;
  uint64_t v51 = a3[7];
  uint64_t v52 = a1 + v51;
  char v53 = &a2[v51];
  uint64_t v54 = *(void *)v53;
  *(unsigned char *)(v52 + 8) = v53[8];
  *(void *)uint64_t v52 = v54;
  uint64_t v55 = *((void *)v53 + 2);
  *(unsigned char *)(v52 + 24) = v53[24];
  *(void *)(v52 + 16) = v55;
  uint64_t v56 = *((void *)v53 + 4);
  *(unsigned char *)(v52 + 40) = v53[40];
  *(void *)(v52 + 32) = v56;
  *(unsigned char *)(v52 + 41) = v53[41];
  uint64_t v57 = a3[8];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = &a2[v57];
  long long v60 = *(_OWORD *)v59;
  *(unsigned char *)(v58 + 16) = v59[16];
  *(_OWORD *)uint64_t v58 = v60;
  return a1;
}

char *_s4InfoVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100063814((uint64_t *)&unk_1010C8960);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for Artwork();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    uint64_t v10 = *(int *)(v6 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for Artwork.CropStyle();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_100063814(&qword_1010C94F8);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v16 = a3[5];
  uint64_t v17 = &a1[v16];
  size_t v18 = &a2[v16];
  uint64_t v19 = sub_100063814(&qword_1010CF250);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 10, v19))
  {
    uint64_t v21 = type metadata accessor for ArtworkImage.Placeholder(0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = type metadata accessor for Playlist.Variant();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v22))
    {
      uint64_t v24 = sub_100063814(&qword_1010C9288);
      memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v17, v18, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v17, 0, 1, v22);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 10, v19);
  }
  uint64_t v25 = a3[6];
  uint64_t v26 = a3[7];
  uint64_t v27 = &a1[v25];
  int v28 = &a2[v25];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  int v29 = &a1[v26];
  uint64_t v30 = &a2[v26];
  long long v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)int v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *(_OWORD *)(v29 + 26) = *(_OWORD *)(v30 + 26);
  uint64_t v32 = a3[8];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  return a1;
}

uint64_t _s4InfoVwta(uint64_t a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ArtworkImage.ViewModel(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8((uint64_t)a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v21 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 40))(a1, a2, v21);
      uint64_t v22 = *(int *)(v6 + 20);
      uint64_t v23 = (void *)(a1 + v22);
      uint64_t v24 = &a2[v22];
      uint64_t v25 = type metadata accessor for Artwork.CropStyle();
      uint64_t v26 = *(void *)(v25 - 8);
      uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
      int v28 = v27(v23, 1, v25);
      int v29 = v27(v24, 1, v25);
      if (v28)
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v29)
        {
          (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
      }
      size_t v18 = *(void *)(*(void *)(sub_100063814(&qword_1010C94F8) - 8) + 64);
      uint64_t v19 = v23;
      uint64_t v20 = v24;
LABEL_8:
      memcpy(v19, v20, v18);
      goto LABEL_14;
    }
    sub_100B79D8C(a1, type metadata accessor for ArtworkImage.ViewModel);
LABEL_7:
    size_t v18 = *(void *)(*(void *)(sub_100063814((uint64_t *)&unk_1010C8960) - 8) + 64);
    uint64_t v19 = (void *)a1;
    uint64_t v20 = a2;
    goto LABEL_8;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  uint64_t v12 = *(int *)(v6 + 20);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Artwork.CropStyle();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_100063814(&qword_1010C94F8);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  uint64_t v30 = a3[5];
  long long v31 = (void *)(a1 + v30);
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_100063814(&qword_1010CF250);
  uint64_t v34 = *(void *)(v33 - 8);
  char v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 10, v33);
  int v37 = v35(v32, 10, v33);
  if (!v36)
  {
    if (!v37)
    {
      uint64_t v42 = type metadata accessor for Playlist.Variant();
      uint64_t v43 = *(void *)(v42 - 8);
      long long v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
      int v45 = v44(v31, 1, v42);
      int v46 = v44(v32, 1, v42);
      if (v45)
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 32))(v31, v32, v42);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v31, 0, 1, v42);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v46)
        {
          (*(void (**)(void *, char *, uint64_t))(v43 + 40))(v31, v32, v42);
          goto LABEL_27;
        }
        (*(void (**)(void *, uint64_t))(v43 + 8))(v31, v42);
      }
      uint64_t v41 = sub_100063814(&qword_1010C9288);
      goto LABEL_21;
    }
    sub_1000637B8((uint64_t)v31, &qword_1010CF250);
LABEL_20:
    uint64_t v41 = type metadata accessor for ArtworkImage.Placeholder(0);
LABEL_21:
    memcpy(v31, v32, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_27;
  }
  if (v37) {
    goto LABEL_20;
  }
  uint64_t v38 = type metadata accessor for Playlist.Variant();
  uint64_t v39 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v32, 1, v38))
  {
    uint64_t v40 = sub_100063814(&qword_1010C9288);
    memcpy(v31, v32, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v31, v32, v38);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v38);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 10, v33);
LABEL_27:
  uint64_t v47 = a3[6];
  uint64_t v48 = a3[7];
  uint64_t v49 = a1 + v47;
  uint64_t v50 = &a2[v47];
  *(void *)uint64_t v49 = *(void *)v50;
  *(unsigned char *)(v49 + 8) = v50[8];
  uint64_t v51 = a1 + v48;
  uint64_t v52 = &a2[v48];
  *(void *)uint64_t v51 = *(void *)v52;
  *(unsigned char *)(v51 + 8) = v52[8];
  *(void *)(v51 + 16) = *((void *)v52 + 2);
  *(unsigned char *)(v51 + 24) = v52[24];
  *(unsigned char *)(v51 + 40) = v52[40];
  *(void *)(v51 + 32) = *((void *)v52 + 4);
  *(unsigned char *)(v51 + 41) = v52[41];
  uint64_t v53 = a3[8];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = &a2[v53];
  *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
  *(unsigned char *)(v54 + 16) = v55[16];
  return a1;
}

uint64_t _s4InfoVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B7CE68);
}

uint64_t sub_100B7CE68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100063814((uint64_t *)&unk_1010C8960);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for ArtworkImage.Placeholder(0);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41) <= 2u) {
    int v14 = 2;
  }
  else {
    int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41);
  }
  unsigned int v15 = v14 - 2;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 41) >= 2u) {
    return v15;
  }
  else {
    return 0;
  }
}

uint64_t _s4InfoVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B7CFA0);
}

uint64_t sub_100B7CFA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_100063814((uint64_t *)&unk_1010C8960);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for ArtworkImage.Placeholder(0);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 28) + 41) = a2 + 2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100B7D0B8()
{
  sub_100B7D1CC(319, (unint64_t *)&unk_1010CC7C0, type metadata accessor for ArtworkImage.ViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ArtworkImage.Placeholder(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100B7D1CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t _s4SizeVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 42)) {
    return (*(_DWORD *)a1 + 254);
  }
  if (*(unsigned __int8 *)(a1 + 41) <= 2u) {
    int v3 = 2;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 41);
  }
  int v4 = v3 - 3;
  if (*(unsigned __int8 *)(a1 + 41) < 2u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t _s4SizeVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 42) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 41) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArtworkImage.Size()
{
  return &type metadata for ArtworkImage.Size;
}

uint64_t *_s11PlaceholderOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_100063814(&qword_1010CF250);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 10, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for Playlist.Variant();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = sub_100063814(&qword_1010C9288);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 10, v7);
    }
  }
  return a1;
}

uint64_t _s11PlaceholderOwxx(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010CF250);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 10, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for Playlist.Variant();
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v4);
    if (!result)
    {
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v5(a1, v4);
    }
  }
  return result;
}

void *_s11PlaceholderOwcp(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100063814(&qword_1010CF250);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 10, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for Playlist.Variant();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      uint64_t v10 = sub_100063814(&qword_1010C9288);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  }
  return a1;
}

void *_s11PlaceholderOwca(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100063814(&qword_1010CF250);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 10, v6);
  int v10 = v8(a2, 10, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v15 = type metadata accessor for Playlist.Variant();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      int v18 = v17(a1, 1, v15);
      int v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 16))(a1, a2, v15);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 24))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      size_t v14 = *(void *)(*(void *)(sub_100063814(&qword_1010C9288) - 8) + 64);
      goto LABEL_8;
    }
    sub_1000637B8((uint64_t)a1, &qword_1010CF250);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v14);
    return a1;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for Playlist.Variant();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    uint64_t v13 = sub_100063814(&qword_1010C9288);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  return a1;
}

void *_s11PlaceholderOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100063814(&qword_1010CF250);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 10, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for Playlist.Variant();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      uint64_t v10 = sub_100063814(&qword_1010C9288);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  }
  return a1;
}

void *_s11PlaceholderOwta(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100063814(&qword_1010CF250);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 10, v6);
  int v10 = v8(a2, 10, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v15 = type metadata accessor for Playlist.Variant();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      int v18 = v17(a1, 1, v15);
      int v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 32))(a1, a2, v15);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 40))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      size_t v14 = *(void *)(*(void *)(sub_100063814(&qword_1010C9288) - 8) + 64);
      goto LABEL_8;
    }
    sub_1000637B8((uint64_t)a1, &qword_1010CF250);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v14);
    return a1;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for Playlist.Variant();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    uint64_t v13 = sub_100063814(&qword_1010C9288);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  return a1;
}

uint64_t _s11PlaceholderOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B7E04C);
}

uint64_t sub_100B7E04C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010CF250);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 0xB) {
    return v5 - 10;
  }
  else {
    return 0;
  }
}

uint64_t _s11PlaceholderOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B7E0D0);
}

uint64_t sub_100B7E0D0(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 10);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_100063814(&qword_1010CF250);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_100B7E158(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010CF250);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 10, v2);
}

uint64_t sub_100B7E1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010CF250);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 10, v4);
}

void sub_100B7E238()
{
  sub_100B7D1CC(319, &qword_1010CC880, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

uint64_t _s11PlaceholderO4ViewVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v8 = *(int *)(a3 + 32);
    int v9 = (_OWORD *)(a1 + v8);
    int v10 = (_OWORD *)((char *)a2 + v8);
    *(void *)(a1 + 40) = a2[5];
    swift_bridgeObjectRetain();
    sub_100063814(&qword_1010C8940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = sub_100063814(&qword_1010CC538);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v15 = *((void *)v10 + 3);
        if (v15)
        {
          uint64_t v16 = *((void *)v10 + 4);
          *((void *)v9 + 3) = v15;
          *((void *)v9 + 4) = v16;
          (**(void (***)(_OWORD *, _OWORD *))(v15 - 8))(v9, v10);
        }
        else
        {
          long long v17 = v10[1];
          *int v9 = *v10;
          v9[1] = v17;
          *((void *)v9 + 4) = *((void *)v10 + 4);
        }
        int v18 = (_OWORD *)((char *)v9 + 40);
        int v19 = (_OWORD *)((char *)v10 + 40);
        uint64_t v20 = *((void *)v10 + 8);
        if (v20)
        {
          uint64_t v21 = *((void *)v10 + 9);
          *((void *)v9 + 8) = v20;
          *((void *)v9 + 9) = v21;
          (**(void (***)(_OWORD *, _OWORD *))(v20 - 8))(v18, v19);
        }
        else
        {
          long long v22 = *(_OWORD *)((char *)v10 + 56);
          *int v18 = *v19;
          *(_OWORD *)((char *)v9 + 56) = v22;
          *((void *)v9 + 9) = *((void *)v10 + 9);
        }
        uint64_t v23 = *(int *)(v11 + 24);
        __dst = (char *)v9 + v23;
        uint64_t v24 = (char *)v10 + v23;
        uint64_t v25 = type metadata accessor for BlendMode();
        uint64_t v26 = *(void *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        {
          uint64_t v27 = sub_100063814(&qword_1010CC550);
          memcpy(__dst, v24, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    else
    {
      *(void *)int v9 = *(void *)v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = *(int *)(a3 + 36);
    int v29 = (void *)(a1 + v28);
    uint64_t v30 = (uint64_t *)((char *)a2 + v28);
    sub_100063814(&qword_1010C8948);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *int v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwxx(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  sub_100063814(&qword_1010C8940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
    {
      if (*(void *)(v4 + 24)) {
        sub_1000760E4(v4);
      }
      if (*(void *)(v4 + 64)) {
        sub_1000760E4(v4 + 40);
      }
      uint64_t v6 = v4 + *(int *)(v5 + 24);
      uint64_t v7 = type metadata accessor for BlendMode();
      uint64_t v8 = *(void *)(v7 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      }
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = a1 + *(int *)(a2 + 36);
  sub_100063814(&qword_1010C8948);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorSchemeContrast();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v9, v10);
  }
  else
  {
    return swift_release();
  }
}

uint64_t _s11PlaceholderO4ViewVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = *(int *)(a3 + 32);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  sub_100063814(&qword_1010C8940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100063814(&qword_1010CC538);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = *((void *)v9 + 3);
      if (v13)
      {
        uint64_t v14 = *((void *)v9 + 4);
        *((void *)v8 + 3) = v13;
        *((void *)v8 + 4) = v14;
        (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v8, v9);
      }
      else
      {
        long long v15 = v9[1];
        *uint64_t v8 = *v9;
        v8[1] = v15;
        *((void *)v8 + 4) = *((void *)v9 + 4);
      }
      uint64_t v16 = (_OWORD *)((char *)v8 + 40);
      long long v17 = (_OWORD *)((char *)v9 + 40);
      uint64_t v18 = *((void *)v9 + 8);
      if (v18)
      {
        uint64_t v19 = *((void *)v9 + 9);
        *((void *)v8 + 8) = v18;
        *((void *)v8 + 9) = v19;
        (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v16, v17);
      }
      else
      {
        long long v20 = *(_OWORD *)((char *)v9 + 56);
        *uint64_t v16 = *v17;
        *(_OWORD *)((char *)v8 + 56) = v20;
        *((void *)v8 + 9) = *((void *)v9 + 9);
      }
      uint64_t v21 = *(int *)(v10 + 24);
      __dst = (char *)v8 + v21;
      long long v22 = (char *)v9 + v21;
      uint64_t v23 = type metadata accessor for BlendMode();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        uint64_t v25 = sub_100063814(&qword_1010CC550);
        memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = *(int *)(a3 + 36);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  sub_100063814(&qword_1010C8948);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    *uint64_t v27 = *v28;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *_s11PlaceholderO4ViewVwca(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = (_OWORD *)((char *)a1 + v6);
    uint64_t v8 = (long long *)((char *)a2 + v6);
    sub_1000637B8((uint64_t)a1 + v6, &qword_1010C8940);
    sub_100063814(&qword_1010C8940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_100063814(&qword_1010CC538);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        uint64_t v12 = *((void *)v8 + 3);
        if (v12)
        {
          *((void *)v7 + 3) = v12;
          *((void *)v7 + 4) = *((void *)v8 + 4);
          (**(void (***)(_OWORD *, long long *))(v12 - 8))(v7, v8);
        }
        else
        {
          long long v13 = *v8;
          long long v14 = v8[1];
          *((void *)v7 + 4) = *((void *)v8 + 4);
          *uint64_t v7 = v13;
          v7[1] = v14;
        }
        long long v15 = (_OWORD *)((char *)v7 + 40);
        uint64_t v16 = (long long *)((char *)v8 + 40);
        uint64_t v17 = *((void *)v8 + 8);
        if (v17)
        {
          *((void *)v7 + 8) = v17;
          *((void *)v7 + 9) = *((void *)v8 + 9);
          (**(void (***)(_OWORD *, long long *))(v17 - 8))(v15, v16);
        }
        else
        {
          long long v18 = *v16;
          long long v19 = *(long long *)((char *)v8 + 56);
          *((void *)v7 + 9) = *((void *)v8 + 9);
          *long long v15 = v18;
          *(_OWORD *)((char *)v7 + 56) = v19;
        }
        uint64_t v20 = *(int *)(v9 + 24);
        __dst = (char *)v7 + v20;
        uint64_t v21 = (char *)v8 + v20;
        uint64_t v22 = type metadata accessor for BlendMode();
        uint64_t v23 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          uint64_t v24 = sub_100063814(&qword_1010CC550);
          memcpy(__dst, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v21, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else
    {
      *(void *)uint64_t v7 = *(void *)v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = *(int *)(a3 + 36);
    uint64_t v26 = (void *)((char *)a1 + v25);
    uint64_t v27 = (void *)((char *)a2 + v25);
    sub_1000637B8((uint64_t)a1 + v25, &qword_1010C8948);
    sub_100063814(&qword_1010C8948);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      *uint64_t v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = sub_100063814(&qword_1010C8940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      uint64_t v12 = sub_100063814(&qword_1010CC538);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      long long v13 = v8[1];
      *uint64_t v7 = *v8;
      v7[1] = v13;
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
      *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
      *((void *)v7 + 9) = *((void *)v8 + 9);
      uint64_t v14 = *(int *)(v10 + 24);
      __dst = (char *)v7 + v14;
      long long v15 = (char *)v8 + v14;
      uint64_t v16 = type metadata accessor for BlendMode();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = sub_100063814(&qword_1010CC550);
        memcpy(__dst, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(__dst, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v19 = *(int *)(a3 + 36);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v22 = sub_100063814(&qword_1010C8948);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 32);
    uint64_t v9 = (_OWORD *)(a1 + v8);
    uint64_t v10 = (_OWORD *)(a2 + v8);
    sub_1000637B8(a1 + v8, &qword_1010C8940);
    uint64_t v11 = sub_100063814(&qword_1010C8940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        uint64_t v14 = sub_100063814(&qword_1010CC538);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        long long v15 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v15;
        *((void *)v9 + 4) = *((void *)v10 + 4);
        *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
        *(_OWORD *)((char *)v9 + 56) = *(_OWORD *)((char *)v10 + 56);
        *((void *)v9 + 9) = *((void *)v10 + 9);
        uint64_t v16 = *(int *)(v12 + 24);
        __dst = (char *)v9 + v16;
        uint64_t v17 = (char *)v10 + v16;
        uint64_t v18 = type metadata accessor for BlendMode();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          uint64_t v20 = sub_100063814(&qword_1010CC550);
          memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v21 = *(int *)(a3 + 36);
    uint64_t v22 = (void *)(a1 + v21);
    uint64_t v23 = (const void *)(a2 + v21);
    sub_1000637B8(a1 + v21, &qword_1010C8948);
    uint64_t v24 = sub_100063814(&qword_1010C8948);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B7F780);
}

uint64_t sub_100B7F780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010CC888);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100063814(&qword_1010CC890);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t _s11PlaceholderO4ViewVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B7F8C8);
}

uint64_t sub_100B7F8C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010CC888);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100063814(&qword_1010CC890);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100B7F9FC()
{
  sub_100B7FB18();
  if (v0 <= 0x3F)
  {
    sub_100B7D1CC(319, (unint64_t *)&unk_1010CC908, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100B7FB18()
{
  if (!qword_1010CC900)
  {
    sub_10006389C(&qword_1010CC538);
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1010CC900);
    }
  }
}

uint64_t _s11PlaceholderO4ViewV5StyleVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[3];
    if (v7)
    {
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    }
    else
    {
      long long v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      *(void *)(a1 + 32) = a2[4];
    }
    uint64_t v11 = (_OWORD *)(v4 + 40);
    uint64_t v12 = a2 + 5;
    uint64_t v13 = a2[8];
    if (v13)
    {
      uint64_t v14 = a2[9];
      *(void *)(v4 + 64) = v13;
      *(void *)(v4 + 72) = v14;
      (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v11, v12);
    }
    else
    {
      long long v15 = *(_OWORD *)(a2 + 7);
      *uint64_t v11 = *v12;
      *(_OWORD *)(v4 + 56) = v15;
      *(void *)(v4 + 72) = a2[9];
    }
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = (void *)(v4 + v16);
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for BlendMode();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_100063814(&qword_1010CC550);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return v4;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwxx(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    sub_1000760E4(a1);
  }
  if (*(void *)(a1 + 64)) {
    sub_1000760E4(a1 + 40);
  }
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for BlendMode();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v9 = (_OWORD *)(a1 + 40);
  long long v10 = (_OWORD *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 64);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v12;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 56);
    *uint64_t v9 = *v10;
    *(_OWORD *)(a1 + 56) = v13;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  long long v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for BlendMode();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_100063814(&qword_1010CC550);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwca(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24))
  {
    if (v6)
    {
      sub_1001FF828((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    sub_1000760E4(a1);
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
    goto LABEL_8;
  }
  long long v7 = *a2;
  long long v8 = a2[1];
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(_OWORD *)a1 = v7;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_8:
  uint64_t v9 = *((void *)a2 + 8);
  if (*(void *)(a1 + 64))
  {
    if (v9)
    {
      sub_1001FF828((uint64_t *)(a1 + 40), (uint64_t *)a2 + 5);
      goto LABEL_15;
    }
    sub_1000760E4(a1 + 40);
  }
  else if (v9)
  {
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, (uint64_t)a2 + 40);
    goto LABEL_15;
  }
  long long v10 = *(long long *)((char *)a2 + 40);
  long long v11 = *(long long *)((char *)a2 + 56);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(_OWORD *)(a1 + 40) = v10;
  *(_OWORD *)(a1 + 56) = v11;
LABEL_15:
  uint64_t v12 = *(int *)(a3 + 24);
  long long v13 = (void *)(a1 + v12);
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for BlendMode();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_20;
  }
  if (v19)
  {
LABEL_20:
    uint64_t v20 = sub_100063814(&qword_1010CC550);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (const void *)(a2 + v5);
  long long v7 = (void *)(a1 + v5);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = type metadata accessor for BlendMode();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
  {
    uint64_t v10 = sub_100063814(&qword_1010CC550);
    memcpy(v7, v6, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v7, v6, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  }
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24)) {
    sub_1000760E4(a1);
  }
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (*(void *)(a1 + 64)) {
    sub_1000760E4(a1 + 40);
  }
  long long v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v7;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for BlendMode();
  uint64_t v12 = *(void *)(v11 - 8);
  long long v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_10;
  }
  if (v15)
  {
LABEL_10:
    uint64_t v16 = sub_100063814(&qword_1010CC550);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t _s11PlaceholderO4ViewV5StyleVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B805F0);
}

uint64_t sub_100B805F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100063814(&qword_1010CC550);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t _s11PlaceholderO4ViewV5StyleVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B806C4);
}

uint64_t sub_100B806C4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010CC550);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100B80770()
{
  sub_100B7D1CC(319, (unint64_t *)&unk_1010CC9B0, (uint64_t (*)(uint64_t))&type metadata accessor for BlendMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *initializeBufferWithCopyOfBuffer for PlaceholderStyleModifier(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (_OWORD *)((char *)a1 + v7);
    uint64_t v9 = (_OWORD *)((char *)a2 + v7);
    swift_retain();
    sub_100063814(&qword_1010C8940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_100063814(&qword_1010CC538);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        uint64_t v13 = *((void *)v9 + 3);
        if (v13)
        {
          uint64_t v14 = *((void *)v9 + 4);
          *((void *)v8 + 3) = v13;
          *((void *)v8 + 4) = v14;
          (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v8, v9);
        }
        else
        {
          long long v15 = v9[1];
          *uint64_t v8 = *v9;
          v8[1] = v15;
          *((void *)v8 + 4) = *((void *)v9 + 4);
        }
        uint64_t v16 = (_OWORD *)((char *)v8 + 40);
        uint64_t v17 = (_OWORD *)((char *)v9 + 40);
        uint64_t v18 = *((void *)v9 + 8);
        if (v18)
        {
          uint64_t v19 = *((void *)v9 + 9);
          *((void *)v8 + 8) = v18;
          *((void *)v8 + 9) = v19;
          (**(void (***)(_OWORD *, _OWORD *))(v18 - 8))(v16, v17);
        }
        else
        {
          long long v20 = *(_OWORD *)((char *)v9 + 56);
          *uint64_t v16 = *v17;
          *(_OWORD *)((char *)v8 + 56) = v20;
          *((void *)v8 + 9) = *((void *)v9 + 9);
        }
        uint64_t v21 = *(int *)(v10 + 24);
        uint64_t v22 = (char *)v8 + v21;
        uint64_t v23 = (char *)v9 + v21;
        uint64_t v24 = type metadata accessor for BlendMode();
        uint64_t v25 = *(void *)(v24 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
        {
          uint64_t v26 = sub_100063814(&qword_1010CC550);
          memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PlaceholderStyleModifier(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_100063814(&qword_1010C8940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
    if (!result)
    {
      if (*(void *)(v4 + 24)) {
        sub_1000760E4(v4);
      }
      if (*(void *)(v4 + 64)) {
        sub_1000760E4(v4 + 40);
      }
      uint64_t v7 = v4 + *(int *)(v5 + 24);
      uint64_t v8 = type metadata accessor for BlendMode();
      uint64_t v10 = *(void *)(v8 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8);
      if (!result)
      {
        uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
        return v9(v7, v8);
      }
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for PlaceholderStyleModifier(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (_OWORD *)((char *)a1 + v5);
  uint64_t v7 = (_OWORD *)((char *)a2 + v5);
  swift_retain();
  sub_100063814(&qword_1010C8940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = sub_100063814(&qword_1010CC538);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v11 = *((void *)v7 + 3);
      if (v11)
      {
        uint64_t v12 = *((void *)v7 + 4);
        *((void *)v6 + 3) = v11;
        *((void *)v6 + 4) = v12;
        (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v6, v7);
      }
      else
      {
        long long v13 = v7[1];
        *uint64_t v6 = *v7;
        v6[1] = v13;
        *((void *)v6 + 4) = *((void *)v7 + 4);
      }
      uint64_t v14 = (_OWORD *)((char *)v6 + 40);
      long long v15 = (_OWORD *)((char *)v7 + 40);
      uint64_t v16 = *((void *)v7 + 8);
      if (v16)
      {
        uint64_t v17 = *((void *)v7 + 9);
        *((void *)v6 + 8) = v16;
        *((void *)v6 + 9) = v17;
        (**(void (***)(_OWORD *, _OWORD *))(v16 - 8))(v14, v15);
      }
      else
      {
        long long v18 = *(_OWORD *)((char *)v7 + 56);
        *uint64_t v14 = *v15;
        *(_OWORD *)((char *)v6 + 56) = v18;
        *((void *)v6 + 9) = *((void *)v7 + 9);
      }
      uint64_t v19 = *(int *)(v8 + 24);
      long long v20 = (char *)v6 + v19;
      uint64_t v21 = (char *)v7 + v19;
      uint64_t v22 = type metadata accessor for BlendMode();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        uint64_t v24 = sub_100063814(&qword_1010CC550);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  else
  {
    *(void *)uint64_t v6 = *(void *)v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PlaceholderStyleModifier(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (_OWORD *)((char *)a1 + v7);
    uint64_t v9 = (long long *)((char *)a2 + v7);
    sub_1000637B8((uint64_t)a1 + v7, &qword_1010C8940);
    sub_100063814(&qword_1010C8940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = sub_100063814(&qword_1010CC538);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        uint64_t v13 = *((void *)v9 + 3);
        if (v13)
        {
          *((void *)v8 + 3) = v13;
          *((void *)v8 + 4) = *((void *)v9 + 4);
          (**(void (***)(_OWORD *, long long *))(v13 - 8))(v8, v9);
        }
        else
        {
          long long v14 = *v9;
          long long v15 = v9[1];
          *((void *)v8 + 4) = *((void *)v9 + 4);
          *uint64_t v8 = v14;
          v8[1] = v15;
        }
        uint64_t v16 = (_OWORD *)((char *)v8 + 40);
        uint64_t v17 = (long long *)((char *)v9 + 40);
        uint64_t v18 = *((void *)v9 + 8);
        if (v18)
        {
          *((void *)v8 + 8) = v18;
          *((void *)v8 + 9) = *((void *)v9 + 9);
          (**(void (***)(_OWORD *, long long *))(v18 - 8))(v16, v17);
        }
        else
        {
          long long v19 = *v17;
          long long v20 = *(long long *)((char *)v9 + 56);
          *((void *)v8 + 9) = *((void *)v9 + 9);
          *uint64_t v16 = v19;
          *(_OWORD *)((char *)v8 + 56) = v20;
        }
        uint64_t v21 = *(int *)(v10 + 24);
        uint64_t v22 = (char *)v8 + v21;
        uint64_t v23 = (char *)v9 + v21;
        uint64_t v24 = type metadata accessor for BlendMode();
        uint64_t v25 = *(void *)(v24 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
        {
          uint64_t v26 = sub_100063814(&qword_1010CC550);
          memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      *(void *)uint64_t v8 = *(void *)v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for PlaceholderStyleModifier(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (_OWORD *)((char *)a1 + v4);
  uint64_t v6 = (_OWORD *)((char *)a2 + v4);
  uint64_t v7 = sub_100063814(&qword_1010C8940);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      uint64_t v10 = sub_100063814(&qword_1010CC538);
      memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      long long v11 = v6[1];
      *uint64_t v5 = *v6;
      v5[1] = v11;
      *((void *)v5 + 4) = *((void *)v6 + 4);
      *(_OWORD *)((char *)v5 + 40) = *(_OWORD *)((char *)v6 + 40);
      *(_OWORD *)((char *)v5 + 56) = *(_OWORD *)((char *)v6 + 56);
      *((void *)v5 + 9) = *((void *)v6 + 9);
      uint64_t v12 = *(int *)(v8 + 24);
      uint64_t v13 = (char *)v5 + v12;
      long long v14 = (char *)v6 + v12;
      uint64_t v15 = type metadata accessor for BlendMode();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_100063814(&qword_1010CC550);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for PlaceholderStyleModifier(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (_OWORD *)((char *)a1 + v6);
    uint64_t v8 = (_OWORD *)((char *)a2 + v6);
    sub_1000637B8((uint64_t)a1 + v6, &qword_1010C8940);
    uint64_t v9 = sub_100063814(&qword_1010C8940);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ArtworkImage.Placeholder.View.Style(0);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        uint64_t v12 = sub_100063814(&qword_1010CC538);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        long long v13 = v8[1];
        *uint64_t v7 = *v8;
        v7[1] = v13;
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
        *(_OWORD *)((char *)v7 + 56) = *(_OWORD *)((char *)v8 + 56);
        *((void *)v7 + 9) = *((void *)v8 + 9);
        uint64_t v14 = *(int *)(v10 + 24);
        uint64_t v15 = (char *)v7 + v14;
        uint64_t v16 = (char *)v8 + v14;
        uint64_t v17 = type metadata accessor for BlendMode();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          uint64_t v19 = sub_100063814(&qword_1010CC550);
          memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaceholderStyleModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B81870);
}

uint64_t sub_100B81870(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010CC888);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PlaceholderStyleModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B81938);
}

void *sub_100B81938(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010CC888);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100B819E4()
{
  sub_100B7FB18();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100B81A80()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100B81AE4()
{
  unint64_t result = qword_1010CCA78;
  if (!qword_1010CCA78)
  {
    sub_10006389C(&qword_1010CC548);
    sub_100B81B84();
    sub_100063858(&qword_1010CCAA0, &qword_1010CC540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCA78);
  }
  return result;
}

unint64_t sub_100B81B84()
{
  unint64_t result = qword_1010CCA80;
  if (!qword_1010CCA80)
  {
    sub_10006389C(&qword_1010CCA88);
    sub_100063858(&qword_1010CCA90, &qword_1010CCA98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCA80);
  }
  return result;
}

unint64_t sub_100B81C28()
{
  unint64_t result = qword_1010CCAA8;
  if (!qword_1010CCAA8)
  {
    sub_10006389C(&qword_1010CC6A0);
    sub_100063858(&qword_1010CCAB0, &qword_1010CC6B0);
    sub_100063858(&qword_1010CCAB8, &qword_1010CC6A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCAA8);
  }
  return result;
}

uint64_t sub_100B81CEC()
{
  return swift_getWitnessTable();
}

unsigned char *_s11PlaceholderO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B81E54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11PlaceholderO10CodingKeysOMa()
{
  return &_s11PlaceholderO10CodingKeysON;
}

ValueMetadata *_s11PlaceholderO15MusicCodingKeysOMa()
{
  return &_s11PlaceholderO15MusicCodingKeysON;
}

ValueMetadata *_s11PlaceholderO20NowPlayingCodingKeysOMa()
{
  return &_s11PlaceholderO20NowPlayingCodingKeysON;
}

ValueMetadata *_s11PlaceholderO21NewPlaylistCodingKeysOMa()
{
  return &_s11PlaceholderO21NewPlaylistCodingKeysON;
}

unsigned char *_s11PlaceholderO18PlaylistCodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100B81F58);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s11PlaceholderO18PlaylistCodingKeysOMa()
{
  return &_s11PlaceholderO18PlaylistCodingKeysON;
}

ValueMetadata *_s11PlaceholderO20MusicVideoCodingKeysOMa()
{
  return &_s11PlaceholderO20MusicVideoCodingKeysON;
}

ValueMetadata *_s11PlaceholderO12TvCodingKeysOMa()
{
  return &_s11PlaceholderO12TvCodingKeysON;
}

ValueMetadata *_s11PlaceholderO20MicrophoneCodingKeysOMa()
{
  return &_s11PlaceholderO20MicrophoneCodingKeysON;
}

ValueMetadata *_s11PlaceholderO16PersonCodingKeysOMa()
{
  return &_s11PlaceholderO16PersonCodingKeysON;
}

ValueMetadata *_s11PlaceholderO15RadioCodingKeysOMa()
{
  return &_s11PlaceholderO15RadioCodingKeysON;
}

ValueMetadata *_s11PlaceholderO15GenreCodingKeysOMa()
{
  return &_s11PlaceholderO15GenreCodingKeysON;
}

ValueMetadata *_s11PlaceholderO18ComposerCodingKeysOMa()
{
  return &_s11PlaceholderO18ComposerCodingKeysON;
}

ValueMetadata *_s19PlaceholderStyleKeyVMa()
{
  return &_s19PlaceholderStyleKeyVN;
}

unint64_t sub_100B82014()
{
  unint64_t result = qword_1010CCAC8;
  if (!qword_1010CCAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCAC8);
  }
  return result;
}

unint64_t sub_100B8206C()
{
  unint64_t result = qword_1010CCAD0;
  if (!qword_1010CCAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCAD0);
  }
  return result;
}

unint64_t sub_100B820C4()
{
  unint64_t result = qword_1010CCAD8;
  if (!qword_1010CCAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCAD8);
  }
  return result;
}

unint64_t sub_100B8211C()
{
  unint64_t result = qword_1010CCAE0;
  if (!qword_1010CCAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCAE0);
  }
  return result;
}

unint64_t sub_100B82174()
{
  unint64_t result = qword_1010CCAE8;
  if (!qword_1010CCAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCAE8);
  }
  return result;
}

unint64_t sub_100B821CC()
{
  unint64_t result = qword_1010CCAF0;
  if (!qword_1010CCAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCAF0);
  }
  return result;
}

unint64_t sub_100B82224()
{
  unint64_t result = qword_1010CCAF8;
  if (!qword_1010CCAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCAF8);
  }
  return result;
}

unint64_t sub_100B8227C()
{
  unint64_t result = qword_1010CCB00;
  if (!qword_1010CCB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB00);
  }
  return result;
}

unint64_t sub_100B822D4()
{
  unint64_t result = qword_1010CCB08;
  if (!qword_1010CCB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB08);
  }
  return result;
}

unint64_t sub_100B8232C()
{
  unint64_t result = qword_1010CCB10;
  if (!qword_1010CCB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB10);
  }
  return result;
}

unint64_t sub_100B82384()
{
  unint64_t result = qword_1010CCB18;
  if (!qword_1010CCB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB18);
  }
  return result;
}

unint64_t sub_100B823DC()
{
  unint64_t result = qword_1010CCB20;
  if (!qword_1010CCB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB20);
  }
  return result;
}

unint64_t sub_100B82434()
{
  unint64_t result = qword_1010CCB28;
  if (!qword_1010CCB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB28);
  }
  return result;
}

unint64_t sub_100B8248C()
{
  unint64_t result = qword_1010CCB30;
  if (!qword_1010CCB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB30);
  }
  return result;
}

unint64_t sub_100B824E4()
{
  unint64_t result = qword_1010CCB38;
  if (!qword_1010CCB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB38);
  }
  return result;
}

unint64_t sub_100B8253C()
{
  unint64_t result = qword_1010CCB40;
  if (!qword_1010CCB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB40);
  }
  return result;
}

unint64_t sub_100B82594()
{
  unint64_t result = qword_1010CCB48;
  if (!qword_1010CCB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB48);
  }
  return result;
}

unint64_t sub_100B825EC()
{
  unint64_t result = qword_1010CCB50;
  if (!qword_1010CCB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB50);
  }
  return result;
}

unint64_t sub_100B82644()
{
  unint64_t result = qword_1010CCB58;
  if (!qword_1010CCB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB58);
  }
  return result;
}

unint64_t sub_100B8269C()
{
  unint64_t result = qword_1010CCB60;
  if (!qword_1010CCB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB60);
  }
  return result;
}

unint64_t sub_100B826F4()
{
  unint64_t result = qword_1010CCB68;
  if (!qword_1010CCB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB68);
  }
  return result;
}

unint64_t sub_100B8274C()
{
  unint64_t result = qword_1010CCB70;
  if (!qword_1010CCB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB70);
  }
  return result;
}

unint64_t sub_100B827A4()
{
  unint64_t result = qword_1010CCB78;
  if (!qword_1010CCB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB78);
  }
  return result;
}

unint64_t sub_100B827FC()
{
  unint64_t result = qword_1010CCB80;
  if (!qword_1010CCB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB80);
  }
  return result;
}

unint64_t sub_100B82854()
{
  unint64_t result = qword_1010CCB88;
  if (!qword_1010CCB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB88);
  }
  return result;
}

unint64_t sub_100B828AC()
{
  unint64_t result = qword_1010CCB90;
  if (!qword_1010CCB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCB90);
  }
  return result;
}

uint64_t sub_100B82900(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636973756DLL && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6979616C50776F6ELL && a2 == 0xEA0000000000676ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C79616C5077656ELL && a2 == 0xEB00000000747369 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7473696C79616C70 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646956636973756DLL && a2 == 0xEA00000000006F65 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 30324 && a2 == 0xE200000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F68706F7263696DLL && a2 == 0xEA0000000000656ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F73726570 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F69646172 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x65726E6567 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7265736F706D6F63 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_100B82D6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return sub_100AB7500(a1, a2);
  }
  else {
    return swift_release();
  }
}

uint64_t sub_100B82D78(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100B82DB8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_release();
  }
  return result;
}

unint64_t sub_100B82DCC()
{
  unint64_t result = qword_1010CCBB8;
  if (!qword_1010CCBB8)
  {
    sub_10006389C(&qword_1010CCBB0);
    sub_100B82E6C();
    sub_100063858((unint64_t *)&unk_1010CE060, &qword_1010CB4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCBB8);
  }
  return result;
}

unint64_t sub_100B82E6C()
{
  unint64_t result = qword_1010CCBC0;
  if (!qword_1010CCBC0)
  {
    sub_10006389C(&qword_1010CCBC8);
    sub_100063858(&qword_1010CCBD0, &qword_1010CCBD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCBC0);
  }
  return result;
}

uint64_t sub_100B82F0C()
{
  uint64_t v1 = *(void *)(type metadata accessor for ArtworkImage.Placeholder(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = sub_100063814(&qword_1010CF250);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v0 + v2, 10, v3))
  {
    uint64_t v4 = type metadata accessor for Playlist.Variant();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
    }
  }

  return swift_deallocObject();
}

uint64_t sub_100B8308C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for ArtworkImage.Placeholder(0);

  return sub_100B7084C(a1);
}

uint64_t TextBadge.init(immersive:)(char a1)
{
  if (a1) {
    return 4;
  }
  else {
    return 2;
  }
}

uint64_t TextBadge.view.getter(char a1)
{
  id v2 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleLargeTitle];
  [v2 scaledValueForValue:10.0];
  double v4 = v3;

  id v5 = [self configurationWithPointSize:7 weight:v4];
  _OWORD v10[3] = type metadata accessor for TintShapeStyle();
  v10[4] = (uint64_t)&protocol witness table for TintShapeStyle;
  sub_100068018(v10);
  TintShapeStyle.init()();
  id v9 = v5;
  TextBadge.view(favoriteBadgeConfiguration:)(&v9, a1);
  uint64_t v7 = v6;
  sub_100B862A4(&v9);
  return v7;
}

void TextBadge.view(favoriteBadgeConfiguration:)(void *a1, char a2)
{
  if (a2 != 2)
  {
    if (a2 == 3)
    {
      sub_1000688E4((uint64_t)(a1 + 1), (uint64_t)v46);
      sub_100068990(v46, v46[3]);
      String.nonBreakingSpace.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      NSString v18 = String._bridgeToObjectiveC()();
      id v19 = [self systemImageNamed:v18];

      if (v19)
      {
        id v20 = [v19 imageWithConfiguration:*a1];

        id v21 = [v20 imageWithRenderingMode:2];
        Image.init(uiImage:)();
        uint64_t v22 = Text.init(_:)();
        uint64_t v24 = v23;
        char v26 = v25 & 1;
        uint64_t v27 = static Text.+ infix(_:_:)();
        uint64_t v29 = v28;
        char v31 = v30 & 1;
        sub_1000D1500(v22, v24, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v32 = Text.foregroundStyle<A>(_:)();
        uint64_t v34 = v33;
        char v36 = v35 & 1;
        sub_1000D1500(v27, v29, v31);
        swift_bridgeObjectRelease();
        AccessibilityString.favoriteBadgeLabel.unsafeMutableAddressor();
        swift_bridgeObjectRetain();
        Text.accessibilityLabel(_:)();
        swift_bridgeObjectRelease();
        sub_1000D1500(v32, v34, v36);
        swift_bridgeObjectRelease();
        sub_1000760E4((uint64_t)v46);
      }
      else
      {
        __break(1u);
      }
    }
    else if (a2 == 4)
    {
      String.nonBreakingSpace.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      Image.init(_internalSystemName:)();
      uint64_t v2 = Text.init(_:)();
      uint64_t v4 = v3;
      char v6 = v5 & 1;
      uint64_t v7 = static Text.+ infix(_:_:)();
      uint64_t v9 = v8;
      char v11 = v10 & 1;
      sub_1000D1500(v2, v4, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LODWORD(v46[0]) = static HierarchicalShapeStyle.secondary.getter();
      uint64_t v12 = Text.foregroundStyle<A>(_:)();
      uint64_t v14 = v13;
      char v16 = v15 & 1;
      sub_1000D1500(v7, v9, v11);
      swift_bridgeObjectRelease();
      AccessibilityString.immersiveBadgeLabel.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      Text.accessibilityLabel(_:)();
      swift_bridgeObjectRelease();
      sub_1000D1500(v12, v14, v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      char v37 = a2 & 1;
      uint64_t v38 = (uint64_t *)String.nonBreakingSpace.unsafeMutableAddressor();
      uint64_t v40 = *v38;
      uint64_t v39 = v38[1];
      v45[0] = v40;
      v45[1] = v39;
      swift_bridgeObjectRetain();
      uint64_t v41 = *ExplicitRestrictionsController.shared.unsafeMutableAddressor();
      swift_beginAccess();
      uint64_t v42 = *(void *)(v41 + 32);
      uint64_t v43 = *(void **)(v41 + 40);
      swift_bridgeObjectRetain();
      v44._countAndFlagsBits = v42;
      v44._object = v43;
      String.append(_:)(v44);
      swift_bridgeObjectRelease();
      LODWORD(v45[0]) = static HierarchicalShapeStyle.secondary.getter();
      Text.playableForegroundStyle<A>(_:isPlayable:)((uint64_t)v45, v37);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t static FavoriteBadgeConfiguration.default.getter@<X0>(void *a1@<X8>)
{
  id v2 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleLargeTitle];
  [v2 scaledValueForValue:10.0];
  double v4 = v3;

  id v5 = [self configurationWithPointSize:7 weight:v4];
  a1[4] = type metadata accessor for TintShapeStyle();
  a1[5] = &protocol witness table for TintShapeStyle;
  sub_100068018(a1 + 1);
  uint64_t result = TintShapeStyle.init()();
  *a1 = v5;
  return result;
}

uint64_t sub_100B837C0()
{
  uint64_t result = 0x7974706D65;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746963696C707865;
      break;
    case 2:
      uint64_t result = 0x657469726F766166;
      break;
    case 3:
      uint64_t result = 0x76697372656D6D69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100B83850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100B86480(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100B83878(uint64_t a1)
{
  unint64_t v2 = sub_100B862DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B838B4(uint64_t a1)
{
  unint64_t v2 = sub_100B862DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B838F0(uint64_t a1)
{
  unint64_t v2 = sub_100B8642C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B8392C(uint64_t a1)
{
  unint64_t v2 = sub_100B8642C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B83968()
{
  return 0x626179616C507369;
}

uint64_t sub_100B83984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x626179616C507369 && a2 == 0xEA0000000000656CLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_100B83A28(uint64_t a1)
{
  unint64_t v2 = sub_100B863D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B83A64(uint64_t a1)
{
  unint64_t v2 = sub_100B863D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B83AA0(uint64_t a1)
{
  unint64_t v2 = sub_100B86384();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B83ADC(uint64_t a1)
{
  unint64_t v2 = sub_100B86384();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B83B18(uint64_t a1)
{
  unint64_t v2 = sub_100B86330();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B83B54(uint64_t a1)
{
  unint64_t v2 = sub_100B86330();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TextBadge.encode(to:)(void *a1, unsigned __int8 a2)
{
  int v3 = a2;
  uint64_t v4 = sub_100063814(&qword_1010CCC20);
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  __chkstk_darwin();
  uint64_t v29 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_1010CCC28);
  uint64_t v27 = *(void *)(v6 - 8);
  uint64_t v28 = v6;
  __chkstk_darwin();
  uint64_t v24 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814(&qword_1010CCC30);
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v26 = v8;
  __chkstk_darwin();
  char v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100063814(&qword_1010CCC38);
  uint64_t v23 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100063814(&qword_1010CCC40);
  uint64_t v32 = *(void *)(v14 - 8);
  __chkstk_darwin();
  char v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100068990(a1, a1[3]);
  sub_100B862DC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  switch(v3)
  {
    case 2:
      char v33 = 0;
      sub_100B8642C();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v16, v14);
    case 3:
      char v35 = 2;
      sub_100B86384();
      uint64_t v17 = v24;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v19 = v27;
      uint64_t v18 = v28;
      goto LABEL_7;
    case 4:
      char v36 = 3;
      sub_100B86330();
      uint64_t v17 = v29;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v19 = v30;
      uint64_t v18 = v31;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v16, v14);
  }
  char v34 = 1;
  sub_100B863D8();
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  uint64_t v21 = v26;
  KeyedEncodingContainer.encode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v16, v14);
}

uint64_t TextBadge.init(from:)(void *a1)
{
  return sub_100B86640(a1);
}

uint64_t sub_100B84028@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100B86640(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100B84054(void *a1)
{
  return TextBadge.encode(to:)(a1, *v1);
}

uint64_t GenericMusicItem.favoriteBadge.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  __chkstk_darwin();
  uint64_t v50 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Artist();
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Playlist();
  uint64_t v57 = *(void *)(v7 - 8);
  uint64_t v58 = v7;
  __chkstk_darwin();
  uint64_t v56 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Song();
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v55 = v9;
  __chkstk_darwin();
  uint64_t v53 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MusicVideo();
  uint64_t v60 = *(void *)(v11 - 8);
  uint64_t v61 = v11;
  __chkstk_darwin();
  uint64_t v59 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CCC70);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Album();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(type metadata accessor for GenericMusicItem() - 8);
  __chkstk_darwin();
  uint64_t v49 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v21 = __chkstk_darwin();
  uint64_t v23 = (char *)&v47 - v22;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v19 + 16);
  uint64_t v48 = v1;
  uint64_t v25 = v1;
  uint64_t v27 = v26;
  v24((char *)&v47 - v22, v25, v26, v21);
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v23, v27);
  if (v28 != enum case for GenericMusicItem.album(_:))
  {
    if (v28 == enum case for GenericMusicItem.artist(_:))
    {
      (*(void (**)(char *, uint64_t))(v19 + 96))(v23, v27);
      uint64_t v32 = v62;
      uint64_t v31 = v63;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v6, v23, v63);
      Artist.favoriteStatus.getter();
      uint64_t v33 = type metadata accessor for MusicFavoriteStatus();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v14, 0, 1, v33);
      uint64_t v30 = _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0((uint64_t)v14);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v31);
      return v30;
    }
    if (v28 == enum case for GenericMusicItem.composer(_:)
      || v28 == enum case for GenericMusicItem.creditArtist(_:)
      || v28 == enum case for GenericMusicItem.curator(_:)
      || v28 == enum case for GenericMusicItem.editorialItem(_:)
      || v28 == enum case for GenericMusicItem.genre(_:)
      || v28 == enum case for GenericMusicItem.musicMovie(_:))
    {
      goto LABEL_12;
    }
    if (v28 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v19 + 96))(v23, v27);
      char v35 = v59;
      uint64_t v36 = v60;
      uint64_t v37 = v61;
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v59, v23, v61);
      MusicVideo.favoriteStatus.getter();
    }
    else
    {
      if (v28 != enum case for GenericMusicItem.playlist(_:))
      {
        if (v28 != enum case for GenericMusicItem.radioShow(_:)
          && v28 != enum case for GenericMusicItem.recordLabel(_:)
          && v28 != enum case for GenericMusicItem.socialProfile(_:))
        {
          if (v28 == enum case for GenericMusicItem.song(_:))
          {
            (*(void (**)(char *, uint64_t))(v19 + 96))(v23, v27);
            char v35 = v53;
            uint64_t v36 = v54;
            uint64_t v37 = v55;
            (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v53, v23, v55);
            Song.favoriteStatus.getter();
            goto LABEL_19;
          }
          if (v28 != enum case for GenericMusicItem.station(_:)
            && v28 != enum case for GenericMusicItem.tvEpisode(_:)
            && v28 != enum case for GenericMusicItem.tvSeason(_:)
            && v28 != enum case for GenericMusicItem.tvShow(_:)
            && v28 != enum case for GenericMusicItem.uploadedAudio(_:)
            && v28 != enum case for GenericMusicItem.uploadedVideo(_:))
          {
            if (v28 == enum case for GenericMusicItem.other(_:))
            {
              (*(void (**)(char *, uint64_t))(v19 + 96))(v23, v27);
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v39 = Logger.badging.unsafeMutableAddressor();
              (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v39, v52);
              ((void (*)(char *, uint64_t, uint64_t))v24)(v49, v48, v27);
              uint64_t v40 = Logger.logObject.getter();
              os_log_type_t v41 = static os_log_type_t.fault.getter();
              if (os_log_type_enabled(v40, v41))
              {
                uint64_t v42 = swift_slowAlloc();
                uint64_t v63 = swift_slowAlloc();
                uint64_t v64 = v63;
                *(_DWORD *)uint64_t v42 = 136315394;
                *(void *)(v42 + 4) = sub_100076010(0xD000000000000010, 0x8000000100DD3410, &v64);
                *(_WORD *)(v42 + 12) = 2080;
                sub_100B87654((unint64_t *)&qword_1010C9500, (void (*)(uint64_t))&type metadata accessor for GenericMusicItem);
                uint64_t v43 = v49;
                uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
                *(void *)(v42 + 14) = sub_100076010(v44, v45, &v64);
                swift_bridgeObjectRelease();
                int v46 = *(void (**)(char *, uint64_t))(v19 + 8);
                v46(v43, v27);
                _os_log_impl((void *)&_mh_execute_header, v40, v41, "Unhandled case for favorite badge with item: %s, %s", (uint8_t *)v42, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {
                int v46 = *(void (**)(char *, uint64_t))(v19 + 8);
                v46(v49, v27);
              }

              (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v52);
              v46(v23, v27);
            }
            return 2;
          }
        }
LABEL_12:
        (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v27);
        return 2;
      }
      (*(void (**)(char *, uint64_t))(v19 + 96))(v23, v27);
      char v35 = v56;
      uint64_t v36 = v57;
      uint64_t v37 = v58;
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v56, v23, v58);
      Playlist.favoriteStatus.getter();
    }
LABEL_19:
    uint64_t v38 = type metadata accessor for MusicFavoriteStatus();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v14, 0, 1, v38);
    uint64_t v30 = _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0((uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v35, v37);
    return v30;
  }
  (*(void (**)(char *, uint64_t))(v19 + 96))(v23, v27);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v23, v15);
  Album.favoriteStatus.getter();
  uint64_t v29 = type metadata accessor for MusicFavoriteStatus();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 0, 1, v29);
  uint64_t v30 = _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  return v30;
}

uint64_t GenericMusicItem.explicitBadge(_:)(int a1)
{
  int v94 = a1;
  uint64_t v66 = type metadata accessor for Logger();
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin();
  uint64_t v64 = (char *)&v60 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for TVSeason();
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin();
  uint64_t v73 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for MusicMovie();
  uint64_t v91 = *(void *)(v3 - 8);
  uint64_t v92 = v3;
  __chkstk_darwin();
  uint64_t v90 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for TVShow();
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin();
  uint64_t v70 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CCC78);
  __chkstk_darwin();
  uint64_t v93 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TVEpisode();
  uint64_t v77 = *(void *)(v7 - 8);
  uint64_t v78 = v7;
  __chkstk_darwin();
  uint64_t v76 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for UploadedVideo();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin();
  uint64_t v61 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for UploadedAudio();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin();
  uint64_t v67 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Playlist();
  uint64_t v86 = *(void *)(v11 - 8);
  uint64_t v87 = v11;
  __chkstk_darwin();
  uint64_t v85 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Station();
  uint64_t v80 = *(void *)(v13 - 8);
  uint64_t v81 = v13;
  __chkstk_darwin();
  uint64_t v79 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Song();
  uint64_t v83 = *(void *)(v15 - 8);
  uint64_t v84 = v15;
  __chkstk_darwin();
  uint64_t v82 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for MusicVideo();
  uint64_t v88 = *(void *)(v17 - 8);
  uint64_t v89 = v17;
  __chkstk_darwin();
  uint64_t v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CCC80);
  __chkstk_darwin();
  __n128 v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Album();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin();
  uint64_t v25 = (char *)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for GenericMusicItem();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin();
  uint64_t v60 = (char *)&v60 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v29 = __chkstk_darwin();
  uint64_t v31 = (char *)&v60 - v30;
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v27 + 16);
  v32((char *)&v60 - v30, v95, v26, v29);
  int v33 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))(v31, v26);
  if (v33 != enum case for GenericMusicItem.album(_:))
  {
    char v35 = v94;
    if (v33 == enum case for GenericMusicItem.artist(_:)
      || v33 == enum case for GenericMusicItem.composer(_:)
      || v33 == enum case for GenericMusicItem.creditArtist(_:)
      || v33 == enum case for GenericMusicItem.curator(_:)
      || v33 == enum case for GenericMusicItem.editorialItem(_:)
      || v33 == enum case for GenericMusicItem.genre(_:))
    {
      goto LABEL_9;
    }
    if (v33 == enum case for GenericMusicItem.musicMovie(_:))
    {
      (*(void (**)(char *, uint64_t))(v27 + 96))(v31, v26);
      uint64_t v37 = v90;
      uint64_t v38 = v91;
      uint64_t v39 = v92;
      (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v90, v31, v92);
      uint64_t v40 = (uint64_t)v93;
      MusicMovie.contentRating.getter();
LABEL_14:
      uint64_t v41 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A11KitInternal18VideoContentRatingVSg_SbtcfC_0(v40, v35 & 1);
LABEL_20:
      uint64_t v34 = v41;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
      return v34;
    }
    if (v33 == enum case for GenericMusicItem.musicVideo(_:))
    {
      (*(void (**)(char *, uint64_t))(v27 + 96))(v31, v26);
      uint64_t v42 = v88;
      uint64_t v43 = v31;
      uint64_t v44 = v89;
      (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v19, v43, v89);
      MusicVideo.contentRating.getter();
      uint64_t v34 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v21, v35 & 1);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v19, v44);
      return v34;
    }
    if (v33 == enum case for GenericMusicItem.playlist(_:))
    {
      (*(void (**)(char *, uint64_t))(v27 + 96))(v31, v26);
      uint64_t v37 = v85;
      uint64_t v38 = v86;
      uint64_t v39 = v87;
      (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v85, v31, v87);
      Playlist.contentRating.getter();
    }
    else
    {
      if (v33 == enum case for GenericMusicItem.radioShow(_:)
        || v33 == enum case for GenericMusicItem.recordLabel(_:)
        || v33 == enum case for GenericMusicItem.socialProfile(_:))
      {
LABEL_9:
        (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v26);
        return 2;
      }
      if (v33 != enum case for GenericMusicItem.song(_:))
      {
        if (v33 == enum case for GenericMusicItem.station(_:))
        {
          (*(void (**)(char *, uint64_t))(v27 + 96))(v31, v26);
          int v46 = v79;
          uint64_t v45 = v80;
          uint64_t v47 = v81;
          (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v79, v31, v81);
          Station.contentRating.getter();
        }
        else
        {
          if (v33 == enum case for GenericMusicItem.tvEpisode(_:))
          {
            (*(void (**)(char *, uint64_t))(v27 + 96))(v31, v26);
            uint64_t v37 = v76;
            uint64_t v38 = v77;
            uint64_t v39 = v78;
            (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v76, v31, v78);
            uint64_t v40 = (uint64_t)v93;
            TVEpisode.contentRating.getter();
            goto LABEL_14;
          }
          if (v33 == enum case for GenericMusicItem.tvSeason(_:))
          {
            (*(void (**)(char *, uint64_t))(v27 + 96))(v31, v26);
            uint64_t v48 = v74;
            uint64_t v49 = v73;
            uint64_t v50 = v75;
            (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v73, v31, v75);
            uint64_t v51 = (uint64_t)v93;
            TVSeason.contentRating.getter();
            uint64_t v34 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A11KitInternal18VideoContentRatingVSg_SbtcfC_0(v51, v35 & 1);
            (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
            return v34;
          }
          if (v33 == enum case for GenericMusicItem.tvShow(_:))
          {
            (*(void (**)(char *, uint64_t))(v27 + 96))(v31, v26);
            uint64_t v38 = v71;
            uint64_t v37 = v70;
            uint64_t v39 = v72;
            (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v70, v31, v72);
            uint64_t v40 = (uint64_t)v93;
            TVShow.contentRating.getter();
            goto LABEL_14;
          }
          if (v33 == enum case for GenericMusicItem.uploadedAudio(_:))
          {
            (*(void (**)(char *, uint64_t))(v27 + 96))(v31, v26);
            uint64_t v45 = v68;
            int v46 = v67;
            uint64_t v47 = v69;
            (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v67, v31, v69);
            UploadedAudio.contentRating.getter();
          }
          else
          {
            if (v33 != enum case for GenericMusicItem.uploadedVideo(_:))
            {
              if (v33 == enum case for GenericMusicItem.other(_:))
              {
                (*(void (**)(char *, uint64_t))(v27 + 96))(v31, v26);
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v52 = Logger.badging.unsafeMutableAddressor();
                (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v52, v66);
                ((void (*)(char *, uint64_t, uint64_t))v32)(v60, v95, v26);
                uint64_t v53 = Logger.logObject.getter();
                os_log_type_t v54 = static os_log_type_t.info.getter();
                if (os_log_type_enabled(v53, v54))
                {
                  uint64_t v55 = swift_slowAlloc();
                  uint64_t v96 = swift_slowAlloc();
                  *(_DWORD *)uint64_t v55 = 136315394;
                  *(void *)(v55 + 4) = sub_100076010(0xD000000000000010, 0x8000000100DD3410, &v96);
                  *(_WORD *)(v55 + 12) = 2080;
                  sub_100B87654((unint64_t *)&qword_1010C9500, (void (*)(uint64_t))&type metadata accessor for GenericMusicItem);
                  uint64_t v56 = v60;
                  uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
                  *(void *)(v55 + 14) = sub_100076010(v57, v58, &v96);
                  swift_bridgeObjectRelease();
                  uint64_t v59 = *(void (**)(char *, uint64_t))(v27 + 8);
                  v59(v56, v26);
                  _os_log_impl((void *)&_mh_execute_header, v53, v54, "Unhandled case for explicit badge with item: %s, %s", (uint8_t *)v55, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {
                  uint64_t v59 = *(void (**)(char *, uint64_t))(v27 + 8);
                  v59(v60, v26);
                }

                (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v66);
                v59(v31, v26);
              }
              return 2;
            }
            (*(void (**)(char *, uint64_t))(v27 + 96))(v31, v26);
            uint64_t v45 = v62;
            int v46 = v61;
            uint64_t v47 = v63;
            (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v61, v31, v63);
            UploadedVideo.contentRating.getter();
          }
        }
        uint64_t v34 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v21, v35 & 1);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
        return v34;
      }
      (*(void (**)(char *, uint64_t))(v27 + 96))(v31, v26);
      uint64_t v37 = v82;
      uint64_t v38 = v83;
      uint64_t v39 = v84;
      (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v82, v31, v84);
      Song.contentRating.getter();
    }
    uint64_t v41 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v21, v35 & 1);
    goto LABEL_20;
  }
  (*(void (**)(char *, uint64_t))(v27 + 96))(v31, v26);
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v31, v22);
  Album.contentRating.getter();
  uint64_t v34 = _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0((uint64_t)v21, v94 & 1);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  return v34;
}

uint64_t FavoriteBadgeConfiguration.foregroundStyle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000688E4(v1 + 8, a1);
}

uint64_t FavoriteBadgeConfiguration.init(symbolConfiguration:foregroundStyle:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  return sub_100068978(a2, (uint64_t)(a3 + 1));
}

uint64_t _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A3Kit13ContentRatingOSg_SbtcfC_0(uint64_t a1, int a2)
{
  int v21 = a2;
  uint64_t v3 = type metadata accessor for ContentRating();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100063814(&qword_1010CCD10) - 8;
  __chkstk_darwin();
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100063814(&qword_1010CCC80);
  __chkstk_darwin();
  uint64_t v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __n128 v12 = __chkstk_darwin();
  uint64_t v14 = &v20[-v13];
  (*(void (**)(unsigned char *, void, uint64_t, __n128))(v4 + 104))(&v20[-v13], enum case for ContentRating.explicit(_:), v3, v12);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v4 + 56))(v14, 0, 1, v3);
  uint64_t v15 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_10006CAB8(a1, (uint64_t)v9, &qword_1010CCC80);
  sub_10006CAB8((uint64_t)v14, v15, &qword_1010CCC80);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v16((uint64_t)v9, 1, v3) == 1)
  {
    sub_1000637B8(a1, &qword_1010CCC80);
    sub_1000637B8((uint64_t)v14, &qword_1010CCC80);
    if (v16(v15, 1, v3) == 1)
    {
      sub_1000637B8((uint64_t)v9, &qword_1010CCC80);
      return v21 & 1;
    }
    goto LABEL_6;
  }
  sub_10006CAB8((uint64_t)v9, (uint64_t)v11, &qword_1010CCC80);
  if (v16(v15, 1, v3) == 1)
  {
    sub_1000637B8(a1, &qword_1010CCC80);
    sub_1000637B8((uint64_t)v14, &qword_1010CCC80);
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v11, v3);
LABEL_6:
    sub_1000637B8((uint64_t)v9, &qword_1010CCD10);
    return 2;
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 32))(v6, v15, v3);
  sub_100B87654(&qword_1010CCD18, (void (*)(uint64_t))&type metadata accessor for ContentRating);
  char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_1000637B8(a1, &qword_1010CCC80);
  uint64_t v18 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v18(v6, v3);
  sub_1000637B8((uint64_t)v14, &qword_1010CCC80);
  v18(v11, v3);
  sub_1000637B8((uint64_t)v9, &qword_1010CCC80);
  if (v17) {
    return v21 & 1;
  }
  return 2;
}

uint64_t _s11MusicCoreUI9TextBadgeO3for10isPlayableAC0A11KitInternal18VideoContentRatingVSg_SbtcfC_0(uint64_t a1, char a2)
{
  sub_100063814(&qword_1010CCC78);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for VideoContentRating();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006CAB8(a1, (uint64_t)v5, &qword_1010CCC78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1000637B8(a1, &qword_1010CCC78);
    sub_1000637B8((uint64_t)v5, &qword_1010CCC78);
    return 2;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    char v11 = VideoContentRating.isExplicit.getter();
    sub_1000637B8(a1, &qword_1010CCC78);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t result = 2;
    if (v11 != 2)
    {
      if (v11) {
        return a2 & 1;
      }
      else {
        return 2;
      }
    }
  }
  return result;
}

uint64_t _s11MusicCoreUI9TextBadgeO3forAC0A11KitInternal0A14FavoriteStatusOSg_tcfC_0(uint64_t a1)
{
  sub_100063814(&qword_1010CCC70);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v11 - v4;
  sub_10006CAB8(a1, (uint64_t)&v11 - v4, &qword_1010CCC70);
  uint64_t v6 = type metadata accessor for MusicFavoriteStatus();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1
    || (sub_10006CAB8((uint64_t)v5, (uint64_t)v3, &qword_1010CCC70),
        int v8 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v3, v6),
        v8 == enum case for MusicFavoriteStatus.neutral(_:)))
  {
LABEL_7:
    uint64_t v9 = 2;
    goto LABEL_8;
  }
  if (v8 != enum case for MusicFavoriteStatus.favorited(_:))
  {
    if (v8 != enum case for MusicFavoriteStatus.disliked(_:)) {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
    }
    goto LABEL_7;
  }
  uint64_t v9 = 3;
LABEL_8:
  sub_1000637B8(a1, &qword_1010CCC70);
  sub_1000637B8((uint64_t)v5, &qword_1010CCC70);
  return v9;
}

id *sub_100B862A4(id *a1)
{
  uint64_t v2 = (uint64_t)(a1 + 1);

  sub_1000760E4(v2);
  return a1;
}

unint64_t sub_100B862DC()
{
  unint64_t result = qword_1010CCC48;
  if (!qword_1010CCC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCC48);
  }
  return result;
}

unint64_t sub_100B86330()
{
  unint64_t result = qword_1010CCC50;
  if (!qword_1010CCC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCC50);
  }
  return result;
}

unint64_t sub_100B86384()
{
  unint64_t result = qword_1010CCC58;
  if (!qword_1010CCC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCC58);
  }
  return result;
}

unint64_t sub_100B863D8()
{
  unint64_t result = qword_1010CCC60;
  if (!qword_1010CCC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCC60);
  }
  return result;
}

unint64_t sub_100B8642C()
{
  unint64_t result = qword_1010CCC68;
  if (!qword_1010CCC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCC68);
  }
  return result;
}

uint64_t sub_100B86480(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974706D65 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746963696C707865 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657469726F766166 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x76697372656D6D69 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100B86640(void *a1)
{
  uint64_t v31 = sub_100063814(&qword_1010CCCE8);
  uint64_t v33 = *(void *)(v31 - 8);
  __chkstk_darwin();
  char v35 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100063814(&qword_1010CCCF0);
  uint64_t v32 = *(void *)(v29 - 8);
  __chkstk_darwin();
  uint64_t v34 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100063814(&qword_1010CCCF8);
  uint64_t v30 = *(void *)(v27 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_1010CCD00);
  uint64_t v28 = *(void *)(v6 - 8);
  __chkstk_darwin();
  int v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814(&qword_1010CCD08);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v36 = a1;
  sub_100068990(a1, v13);
  sub_100B862DC();
  uint64_t v14 = v37;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v14) {
    goto LABEL_9;
  }
  uint64_t v26 = v6;
  uint64_t v37 = v5;
  uint64_t v15 = v34;
  uint64_t v16 = v35;
  uint64_t v17 = v10;
  uint64_t v18 = KeyedDecodingContainer.allKeys.getter();
  if (*(void *)(v18 + 16) != 1)
  {
    uint64_t v10 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v19 = v12;
    int v21 = v20;
    sub_100063814(&qword_1010CC688);
    *int v21 = &type metadata for TextBadge;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v10 - 8) + 104))(v21, enum case for DecodingError.typeMismatch(_:), v10);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v9);
LABEL_9:
    sub_1000760E4((uint64_t)v36);
    return v10;
  }
  switch(*(unsigned char *)(v18 + 32))
  {
    case 1:
      char v39 = 1;
      sub_100B863D8();
      uint64_t v22 = v37;
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      uint64_t v23 = v27;
      char v24 = KeyedDecodingContainer.decode(_:forKey:)();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v23);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v10 = v24 & 1;
      sub_1000760E4((uint64_t)v36);
      break;
    case 2:
      char v40 = 2;
      sub_100B86384();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v29);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v10 = 3;
      goto LABEL_9;
    case 3:
      char v41 = 3;
      sub_100B86330();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v31);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v10 = 4;
      goto LABEL_9;
    default:
      char v38 = 0;
      sub_100B8642C();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v10 = 2;
      goto LABEL_9;
  }
  return v10;
}

uint64_t getEnumTagSinglePayload for TextBadge(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100B86D8CLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 2;
  if (v8 <= 2) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TextBadge(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x100B86E74);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextBadge()
{
  return &type metadata for TextBadge;
}

uint64_t destroy for FavoriteBadgeConfiguration(id *a1)
{
  uint64_t v1 = (uint64_t)(a1 + 1);

  return sub_1000760E4(v1);
}

uint64_t initializeWithCopy for FavoriteBadgeConfiguration(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a1 + 8;
  uint64_t v5 = a2 + 8;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = v6;
  unsigned int v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  id v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

void **assignWithCopy for FavoriteBadgeConfiguration(void **a1, void **a2)
{
  uint64_t v4 = (uint64_t *)(a2 + 1);
  unsigned int v3 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  long long v6 = (uint64_t *)(a1 + 1);
  id v7 = v3;

  sub_1001FF828(v6, v4);
  return a1;
}

uint64_t assignWithTake for FavoriteBadgeConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  sub_1000760E4(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for FavoriteBadgeConfiguration()
{
  return &type metadata for FavoriteBadgeConfiguration;
}

unsigned char *storeEnumTagSinglePayload for TextBadge.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B870F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextBadge.CodingKeys()
{
  return &type metadata for TextBadge.CodingKeys;
}

ValueMetadata *type metadata accessor for TextBadge.EmptyCodingKeys()
{
  return &type metadata for TextBadge.EmptyCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TextBadge.ExplicitCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100B871DCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextBadge.ExplicitCodingKeys()
{
  return &type metadata for TextBadge.ExplicitCodingKeys;
}

ValueMetadata *type metadata accessor for TextBadge.FavoriteCodingKeys()
{
  return &type metadata for TextBadge.FavoriteCodingKeys;
}

ValueMetadata *type metadata accessor for TextBadge.ImmersiveCodingKeys()
{
  return &type metadata for TextBadge.ImmersiveCodingKeys;
}

unint64_t sub_100B87238()
{
  unint64_t result = qword_1010CCC88;
  if (!qword_1010CCC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCC88);
  }
  return result;
}

unint64_t sub_100B87290()
{
  unint64_t result = qword_1010CCC90;
  if (!qword_1010CCC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCC90);
  }
  return result;
}

unint64_t sub_100B872E8()
{
  unint64_t result = qword_1010CCC98;
  if (!qword_1010CCC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCC98);
  }
  return result;
}

unint64_t sub_100B87340()
{
  unint64_t result = qword_1010CCCA0;
  if (!qword_1010CCCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCCA0);
  }
  return result;
}

unint64_t sub_100B87398()
{
  unint64_t result = qword_1010CCCA8;
  if (!qword_1010CCCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCCA8);
  }
  return result;
}

unint64_t sub_100B873F0()
{
  unint64_t result = qword_1010CCCB0;
  if (!qword_1010CCCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCCB0);
  }
  return result;
}

unint64_t sub_100B87448()
{
  unint64_t result = qword_1010CCCB8;
  if (!qword_1010CCCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCCB8);
  }
  return result;
}

unint64_t sub_100B874A0()
{
  unint64_t result = qword_1010CCCC0;
  if (!qword_1010CCCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCCC0);
  }
  return result;
}

unint64_t sub_100B874F8()
{
  unint64_t result = qword_1010CCCC8;
  if (!qword_1010CCCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCCC8);
  }
  return result;
}

unint64_t sub_100B87550()
{
  unint64_t result = qword_1010CCCD0;
  if (!qword_1010CCCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCCD0);
  }
  return result;
}

unint64_t sub_100B875A8()
{
  unint64_t result = qword_1010CCCD8;
  if (!qword_1010CCCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCCD8);
  }
  return result;
}

unint64_t sub_100B87600()
{
  unint64_t result = qword_1010CCCE0;
  if (!qword_1010CCCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCCE0);
  }
  return result;
}

uint64_t sub_100B87654(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100B8769C()
{
  qword_1010CCD20 = 0x403E000000000000;
}

void sub_100B876AC()
{
  qword_1010CCD28 = 0x4018000000000000;
}

void sub_100B876BC()
{
  qword_1010CCD30 = 0x402A000000000000;
}

void sub_100B876CC()
{
  id v0 = [self currentTraitCollection];
  id v1 = [v0 userInterfaceIdiom];

  byte_1010CCD38 = v1 == (id)6;
}

uint64_t sub_100B87730()
{
  if (qword_1010C8650 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 20.0;
  if (byte_1010CCD38) {
    double v1 = 20.0;
  }
  else {
    double v1 = 0.0;
  }
  *(void *)&xmmword_1010CCD40 = 0x4034000000000000;
  *((double *)&xmmword_1010CCD40 + 1) = v1;
  if (byte_1010CCD38) {
    double v0 = 0.0;
  }
  qword_1010CCD50 = 0;
  qword_1010CCD58 = *(void *)&v0;
  return result;
}

uint64_t sub_100B877AC()
{
  if (qword_1010C8650 != -1) {
    swift_once();
  }
  if (byte_1010CCD38 == 1)
  {
    uint64_t result = static Font.headline.getter();
    uint64_t v1 = result;
  }
  else
  {
    static Font.caption.getter();
    uint64_t v1 = Font.bold()();
    uint64_t result = swift_release();
  }
  qword_1010CCD60 = v1;
  return result;
}

void sub_100B87834()
{
  qword_1010CCD68 = 0x4018000000000000;
}

uint64_t sub_100B87844()
{
  if (qword_1010C8650 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 44.0;
  if (!byte_1010CCD38) {
    double v0 = 24.0;
  }
  qword_1010CCD70 = *(void *)&v0;
  *(double *)algn_1010CCD78 = v0;
  return result;
}

uint64_t sub_100B878B0()
{
  if (qword_1010C8650 != -1) {
    swift_once();
  }
  if (byte_1010CCD38 == 1) {
    uint64_t result = static Alignment.topLeading.getter();
  }
  else {
    uint64_t result = static Alignment.topTrailing.getter();
  }
  qword_1010CCD80 = result;
  *(void *)algn_1010CCD88 = v1;
  return result;
}

uint64_t Card.DisplayStyle.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a2;
  uint64_t v4 = type metadata accessor for ScrollBounceBehavior();
  uint64_t v85 = *(void *)(v4 - 8);
  uint64_t v86 = v4;
  __chkstk_darwin();
  uint64_t v84 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v79 = *(void *)(v6 - 8);
  uint64_t v80 = v6;
  __chkstk_darwin();
  uint64_t v76 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin();
  id v9 = (double *)((char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100063814(&qword_1010CCD90);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100063814(&qword_1010CCD98) - 8;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100063814(&qword_1010CCDA0);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_100063814(&qword_1010CCDA8);
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin();
  uint64_t v69 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100063814(&qword_1010CCDB0);
  uint64_t v75 = *(void *)(v77 - 8);
  __chkstk_darwin();
  uint64_t v72 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100063814(&qword_1010CCDB8);
  __chkstk_darwin();
  uint64_t v78 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100063814(&qword_1010CCDC0);
  __chkstk_darwin();
  uint64_t v83 = (char *)&v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100063814(&qword_1010CCDC8);
  __chkstk_darwin();
  uint64_t v82 = (uint64_t)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = a1;
  static Axis.Set.vertical.getter();
  sub_100063814(&qword_1010CCDD0);
  sub_100B88480();
  ScrollView.init(_:showsIndicators:content:)();
  LOBYTE(a1) = static Edge.Set.all.getter();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v13, v10);
  v16[*(int *)(v14 + 44)] = a1;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v24 = *(void *)v2;
  uint64_t v25 = *(unsigned __int8 *)(v2 + 8);
  uint64_t v87 = v2;
  int v26 = *(unsigned __int8 *)(v2 + 9);
  sub_100B88520(v24, v25, *(unsigned char *)(v2 + 9));
  double v27 = COERCE_DOUBLE(sub_100B6E284(v24, v25 | (v26 << 8)));
  LOBYTE(v13) = v28;
  sub_100B82DB8(v24, v25, v26);
  if ((v13 & 1) != 0 || v27 <= 0.0)
  {
    if (qword_1010C8648 != -1) {
      swift_once();
    }
    double v29 = *(double *)&qword_1010CCD30;
  }
  else
  {
    if (qword_1010C8640 != -1) {
      swift_once();
    }
    double v29 = v27 - *(double *)&qword_1010CCD28;
  }
  uint64_t v30 = v84;
  uint64_t v31 = v70;
  uint64_t v32 = (char *)v9 + *(int *)(v67 + 20);
  uint64_t v33 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v34 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v32, v33, v34);
  *id v9 = v29;
  v9[1] = v29;
  uint64_t v35 = (uint64_t)&v18[*(int *)(v31 + 36)];
  sub_100B8B2E4((uint64_t)v9, v35, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v35 + *(int *)(sub_100063814((uint64_t *)&unk_1010CEF20) + 36)) = 256;
  sub_10006CAB8((uint64_t)v16, (uint64_t)v18, &qword_1010CCD98);
  sub_100B8A6BC((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000637B8((uint64_t)v16, &qword_1010CCD98);
  uint64_t v36 = v76;
  static ScrollIndicatorVisibility.never.getter();
  unsigned __int8 v37 = static Axis.Set.vertical.getter();
  unsigned __int8 v38 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v37) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v38) {
    Axis.Set.init(rawValue:)();
  }
  char v39 = v69;
  unint64_t v40 = sub_100B8852C();
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v36, v80);
  sub_1000637B8((uint64_t)v18, &qword_1010CCDA0);
  static ScrollBounceBehavior.basedOnSize.getter();
  unsigned __int8 v41 = static Axis.Set.vertical.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v41) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v90 = v31;
  unint64_t v91 = v40;
  swift_getOpaqueTypeConformance2();
  uint64_t v42 = v72;
  uint64_t v43 = v74;
  View.scrollBounceBehavior(_:axes:)();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v30, v86);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v39, v43);
  uint64_t v44 = static SafeAreaRegions.all.getter();
  char v45 = static Edge.Set.all.getter();
  uint64_t v46 = v75;
  uint64_t v47 = (uint64_t)v78;
  uint64_t v48 = v77;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v78, v42, v77);
  uint64_t v49 = v47 + *(int *)(v68 + 36);
  *(void *)uint64_t v49 = v44;
  *(unsigned char *)(v49 + 8) = v45;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v42, v48);
  if (qword_1010C8678 != -1) {
    swift_once();
  }
  uint64_t v50 = qword_1010CCD80;
  uint64_t v51 = *(void *)algn_1010CCD88;
  uint64_t v52 = (uint64_t)v83;
  uint64_t v53 = (uint64_t)&v83[*(int *)(v71 + 36)];
  sub_100B88690(v87, v53);
  os_log_type_t v54 = (uint64_t *)(v53 + *(int *)(sub_100063814(&qword_1010CCE18) + 36));
  *os_log_type_t v54 = v50;
  v54[1] = v51;
  sub_10003CABC(v47, v52, &qword_1010CCDB8);
  if (qword_1010C8640 != -1) {
    swift_once();
  }
  char v55 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v64 = v82;
  sub_10006CAB8(v52, v82, &qword_1010CCDC0);
  uint64_t v65 = v64 + *(int *)(v81 + 36);
  *(unsigned char *)uint64_t v65 = v55;
  *(void *)(v65 + 8) = v57;
  *(void *)(v65 + 16) = v59;
  *(void *)(v65 + 24) = v61;
  *(void *)(v65 + 32) = v63;
  *(unsigned char *)(v65 + 40) = 0;
  sub_1000637B8(v52, &qword_1010CCDC0);
  return sub_10003CABC(v64, v88, &qword_1010CCDC8);
}

uint64_t sub_100B88380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1010C8638 != -1) {
    swift_once();
  }
  char v4 = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = sub_100063814(&qword_1010CCDE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a2, a1, v13);
  uint64_t result = sub_100063814(&qword_1010CCDD0);
  uint64_t v15 = a2 + *(int *)(result + 36);
  *(unsigned char *)uint64_t v15 = v4;
  *(void *)(v15 + 8) = v6;
  *(void *)(v15 + 16) = v8;
  *(void *)(v15 + 24) = v10;
  *(void *)(v15 + 32) = v12;
  *(unsigned char *)(v15 + 40) = 0;
  return result;
}

uint64_t sub_100B88478@<X0>(uint64_t a1@<X8>)
{
  return sub_100B88380(*(void *)(v1 + 16), a1);
}

unint64_t sub_100B88480()
{
  unint64_t result = qword_1010CCDD8;
  if (!qword_1010CCDD8)
  {
    sub_10006389C(&qword_1010CCDD0);
    sub_100063858(&qword_1010CCDE0, &qword_1010CCDE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCDD8);
  }
  return result;
}

uint64_t sub_100B88520(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_100B8852C()
{
  unint64_t result = qword_1010CCDF0;
  if (!qword_1010CCDF0)
  {
    sub_10006389C(&qword_1010CCDA0);
    sub_100B885CC();
    sub_100063858((unint64_t *)&unk_1010CEF70, (uint64_t *)&unk_1010CEF20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCDF0);
  }
  return result;
}

unint64_t sub_100B885CC()
{
  unint64_t result = qword_1010CCDF8;
  if (!qword_1010CCDF8)
  {
    sub_10006389C(&qword_1010CCD98);
    sub_100063858(&qword_1010CCE00, &qword_1010CCD90);
    sub_100063858(&qword_1010CCE08, &qword_1010CCE10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCDF8);
  }
  return result;
}

uint64_t sub_100B88690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = type metadata accessor for PlainButtonStyle();
  uint64_t v42 = *(void *)(v3 - 8);
  *(void *)&long long v43 = v3;
  __chkstk_darwin();
  unsigned __int8 v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ContentShapeKinds();
  uint64_t v5 = *(void *)(v38 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(type metadata accessor for Card.DisplayStyle() - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin();
  uint64_t v36 = sub_100063814(&qword_1010CCF70);
  uint64_t v10 = *(void *)(v36 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_100063814(&qword_1010CCF78);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100063814(&qword_1010CCF80);
  uint64_t v39 = *(void *)(v15 - 8);
  uint64_t v40 = v15;
  __chkstk_darwin();
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100B8B2E4(a1, (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for Card.DisplayStyle);
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = swift_allocObject();
  sub_100B8A658((uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  sub_100063814(&qword_1010CCF88);
  sub_100B8B4CC();
  Button.init(action:label:)();
  static ContentShapeKinds.interaction.getter();
  if (qword_1010C8670 != -1) {
    swift_once();
  }
  double v20 = (*(double *)&qword_1010CCD70 + -44.0) * 0.5;
  uint64_t v21 = &v14[*(int *)(v37 + 36)];
  uint64_t v22 = sub_100063814(&qword_1010CD000);
  uint64_t v23 = v38;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(&v21[*(int *)(v22 + 40)], v7, v38);
  *(double *)uint64_t v21 = v20;
  v21[8] = 0;
  uint64_t v24 = v36;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v36);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v24);
  uint64_t v25 = v41;
  PlainButtonStyle.init()();
  sub_100B8B824();
  sub_100B8B8E8((unint64_t *)&qword_1010CD020, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v26 = v43;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v26);
  sub_1000637B8((uint64_t)v14, &qword_1010CCF78);
  if (qword_1010C8658 != -1) {
    swift_once();
  }
  long long v43 = xmmword_1010CCD40;
  uint64_t v27 = qword_1010CCD50;
  uint64_t v28 = qword_1010CCD58;
  char v29 = static Edge.Set.all.getter();
  uint64_t v31 = v39;
  uint64_t v30 = v40;
  uint64_t v32 = v44;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v44, v17, v40);
  uint64_t v33 = v32 + *(int *)(sub_100063814(&qword_1010CD028) + 36);
  *(unsigned char *)uint64_t v33 = v29;
  *(_OWORD *)(v33 + 8) = v43;
  *(void *)(v33 + 24) = v27;
  *(void *)(v33 + 32) = v28;
  *(unsigned char *)(v33 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v17, v30);
}

uint64_t sub_100B88C68()
{
  uint64_t v0 = type metadata accessor for DismissAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Card.DisplayStyle();
  sub_100B6E244((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100B88D4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v40 = sub_100063814(&qword_1010CCFF8);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for Material();
  uint64_t v36 = *(void *)(v41 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100063814(&qword_1010CCFA0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100063814(&qword_1010CCF88);
  __chkstk_darwin();
  uint64_t v35 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = Image.init(systemName:)();
  uint64_t v39 = static Color.secondary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1010C8660 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1010CCD60;
  uint64_t v9 = swift_getKeyPath();
  uint64_t v10 = qword_1010C8668;
  swift_retain();
  if (v10 != -1) {
    swift_once();
  }
  LODWORD(v33) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  if (qword_1010C8670 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)&long long v44 = v43;
  *((void *)&v44 + 1) = KeyPath;
  *(void *)&long long v45 = v39;
  *((void *)&v45 + 1) = v9;
  *(void *)&long long v46 = v8;
  BYTE8(v46) = v33;
  *(void *)&long long v47 = v12;
  *((void *)&v47 + 1) = v14;
  *(void *)&long long v48 = v16;
  *((void *)&v48 + 1) = v18;
  LOBYTE(v49) = 0;
  *((void *)&v49 + 1) = v56;
  LOBYTE(v50) = v57;
  *((void *)&v50 + 1) = v58;
  LOBYTE(v51) = v59;
  *((void *)&v51 + 1) = v60;
  LOBYTE(v52) = v61;
  *((void *)&v52 + 1) = v62;
  LOBYTE(v53) = v63;
  *((void *)&v53 + 1) = v64;
  LOBYTE(v54) = v65;
  *((void *)&v54 + 1) = v66;
  v55[0] = v67;
  *(_OWORD *)&v55[8] = v68;
  static Material.thin.getter();
  char v19 = static Edge.Set.all.getter();
  uint64_t v33 = v9;
  uint64_t v20 = v36;
  uint64_t v21 = (uint64_t)v2;
  uint64_t v22 = v2;
  uint64_t v23 = v41;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v22, v4, v41);
  *(unsigned char *)(v21 + *(int *)(v40 + 36)) = v19;
  sub_10006CAB8(v21, (uint64_t)&v6[*(int *)(v34 + 36)], &qword_1010CCFF8);
  long long v24 = *(_OWORD *)v55;
  *((_OWORD *)v6 + 10) = v54;
  *((_OWORD *)v6 + 11) = v24;
  *((void *)v6 + 24) = *(void *)&v55[16];
  long long v25 = v51;
  *((_OWORD *)v6 + 6) = v50;
  *((_OWORD *)v6 + 7) = v25;
  long long v26 = v53;
  *((_OWORD *)v6 + 8) = v52;
  *((_OWORD *)v6 + 9) = v26;
  long long v27 = v47;
  *((_OWORD *)v6 + 2) = v46;
  *((_OWORD *)v6 + 3) = v27;
  long long v28 = v49;
  *((_OWORD *)v6 + 4) = v48;
  *((_OWORD *)v6 + 5) = v28;
  long long v29 = v45;
  *(_OWORD *)uint64_t v6 = v44;
  *((_OWORD *)v6 + 1) = v29;
  sub_100B8B940((uint64_t)&v44);
  sub_1000637B8(v21, &qword_1010CCFF8);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v23);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v30 = v35;
  sub_10006CAB8((uint64_t)v6, v35, &qword_1010CCFA0);
  *(_WORD *)(v30 + *(int *)(v42 + 36)) = 256;
  sub_1000637B8((uint64_t)v6, &qword_1010CCFA0);
  return sub_10003CABC(v30, v38, &qword_1010CCF88);
}

uint64_t Card.ViewController.__allocating_init(content:)(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = objc_allocWithZone(v1);
  sub_100B89E90(a1);
  uint64_t v6 = v5;
  (*(void (**)(uint64_t))(*(void *)(*((void *)v2 + 10) - 8) + 8))(a1);
  return v6;
}

uint64_t Card.ViewController.init(content:)(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  sub_100B89E90(a1);
  uint64_t v5 = v4;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(a1);
  return v5;
}

uint64_t sub_100B893C8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    Card.ViewController.preferredContentSize(forWidth:)(0, 1);
    uint64_t v3 = v2;

    return v3;
  }
  else
  {
    id v5 = [self largeDetent];
    uint64_t v4 = UISheetPresentationControllerDetent.resolvedValue(in:)();
  }
  return v4;
}

void sub_100B8948C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _s11MusicCoreUI4CardO14ViewControllerC5coderAEy_xGSgSo7NSCoderC_tcfc_0();
}

Swift::Void __swiftcall Card.ViewController.viewDidLoad()()
{
  uint64_t ObjectType = swift_getObjectType();
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for Card.ViewController();
  [super viewDidLoad];
  Card.ViewController.preferredContentSize(forWidth:)(0, 1);
  [v0 setPreferredContentSize:];
  sub_100063814(&qword_1010CAAA0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100E251D0;
  *(void *)(v2 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v2 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  *(void *)(swift_allocObject() + 16) = ObjectType;
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
}

void sub_100B895F0(void *a1)
{
  id v1 = a1;
  Card.ViewController.viewDidLoad()();
}

id Card.ViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  Card.ViewController.preferredContentSize(forWidth:)(*(uint64_t *)&a2, 0);
  [v3 setPreferredContentSize:];
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for Card.ViewController();
  return [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2];
}

void sub_100B896F8(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  swift_unknownObjectRetain();
  id v9 = a1;
  Card.ViewController.viewWillTransition(to:with:)(a5, a2, a3);
  swift_unknownObjectRelease();
}

Swift::Void __swiftcall Card.ViewController.viewDidLayoutSubviews()()
{
  v49.receiver = v0;
  v49.super_class = (Class)type metadata accessor for Card.ViewController();
  [super viewDidLayoutSubviews];
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v2 = v1;
  [v1 bounds];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;

  v50.origin.CGFloat x = v4;
  v50.origin.CGFloat y = v6;
  v50.size.width = v8;
  v50.size.CGFloat height = v10;
  *(double *)&uint64_t v11 = CGRectGetWidth(v50);
  Card.ViewController.preferredContentSize(forWidth:)(v11, 0);
  CGFloat v13 = v12;
  v51.size.CGFloat height = v14;
  v51.origin.CGFloat x = 0.0;
  v51.origin.CGFloat y = 0.0;
  v51.size.width = v13;
  double Height = CGRectGetHeight(v51);
  id v16 = [v0 view];
  if (!v16)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v17 = v16;
  [v16 bounds];
  CGFloat v19 = v18;
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v25 = v24;

  v52.origin.CGFloat x = v19;
  v52.origin.CGFloat y = v21;
  v52.size.width = v23;
  v52.size.CGFloat height = v25;
  double v26 = CGRectGetHeight(v52);
  if (v26 < Height) {
    double Height = v26;
  }
  id v27 = [v0 view];
  if (!v27) {
    goto LABEL_11;
  }
  long long v28 = v27;
  [v27 bounds];
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  CGFloat v36 = v35;

  v53.origin.CGFloat x = v30;
  v53.origin.CGFloat y = v32;
  v53.size.width = v34;
  v53.size.CGFloat height = v36;
  CGRectGetMaxY(v53);
  v54.origin.CGFloat x = 0.0;
  v54.origin.CGFloat y = 0.0;
  v54.size.width = v13;
  v54.size.CGFloat height = Height;
  CGRectGetHeight(v54);
  id v37 = [*(id *)&v0[qword_1010CCEB8] view];
  if (!v37)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v38 = v37;
  id v39 = [v0 view];
  if (v39)
  {
    uint64_t v40 = v39;
    CGRect.centeringAlong(axes:in:)();
    double v42 = v41;
    double v44 = v43;
    double v46 = v45;
    double v48 = v47;

    [v38 setFrame:v42, v44, v46, v48];
    return;
  }
LABEL_13:
  __break(1u);
}

void sub_100B899F4(void *a1)
{
  id v1 = a1;
  Card.ViewController.viewDidLayoutSubviews()();
}

uint64_t sub_100B89A3C()
{
  return 1;
}

void Card.ViewController.preferredContentSize(forWidth:)(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
LABEL_7:
    id v15 = [v2 presentingViewController];
    if (!v15
      || (id v16 = v15,
          id v17 = [v15 traitCollection],
          v16,
          !v17))
    {
      id v18 = [v2 presentationController];
      id v19 = v18;
      if (!v18)
      {
LABEL_12:
        id v20 = *(id *)&v2[qword_1010CCEB8];
        dispatch thunk of UIHostingController.sizeThatFits(in:)();

        return;
      }
      id v17 = [v18 traitCollection];

      if (!v17)
      {
        id v19 = 0;
        goto LABEL_12;
      }
    }
    id v19 = v17;
    [v19 horizontalSizeClass];

    goto LABEL_12;
  }
  id v3 = [v2 presentationController];
  if (v3)
  {
    CGFloat v4 = v3;
    id v5 = [v3 containerView];

    if (v5)
    {
LABEL_6:
      [v5 bounds];
      CGFloat v8 = v7;
      CGFloat v10 = v9;
      CGFloat v12 = v11;
      CGFloat v14 = v13;

      v21.origin.CGFloat x = v8;
      v21.origin.CGFloat y = v10;
      v21.size.width = v12;
      v21.size.CGFloat height = v14;
      CGRectGetWidth(v21);
      goto LABEL_7;
    }
  }
  id v6 = [v2 view];
  if (v6)
  {
    id v5 = v6;
    goto LABEL_6;
  }
  __break(1u);
}

void Card.ViewController.init(nibName:bundle:)()
{
}

void sub_100B89C60(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;

  sub_100B8A5D0();
}

id Card.ViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Card.ViewController();
  [super dealloc];
}

void sub_100B89D48(uint64_t a1)
{
}

uint64_t View.cardDisplayStyle()()
{
  uint64_t v0 = type metadata accessor for Card.DisplayStyle();
  __chkstk_darwin();
  objc_super v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v4 = (char *)&v7 - v3;
  *(void *)objc_super v2 = swift_getKeyPath();
  *((_WORD *)v2 + 4) = 0;
  id v5 = (uint64_t *)&v2[*(int *)(v0 + 20)];
  *id v5 = swift_getKeyPath();
  sub_100063814(&qword_1010C8950);
  swift_storeEnumTagMultiPayload();
  sub_100B8A658((uint64_t)v2, (uint64_t)v4);
  View.modifier<A>(_:)();
  return sub_100B8A6BC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for Card.DisplayStyle);
}

void sub_100B89E90(uint64_t a1)
{
  uint64_t v52 = swift_isaMask & *v1;
  uint64_t v3 = v52;
  uint64_t v4 = type metadata accessor for Card.DisplayStyle();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  CGFloat v10 = (char *)&v49 - v9;
  uint64_t v11 = *(void *)(v3 + 80);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v8);
  CGFloat v14 = (char *)&v49 - v13;
  uint64_t v15 = type metadata accessor for ModifiedContent();
  uint64_t v53 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  CGRect v51 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v19 = (char *)&v49 - v18;
  *(void *)((char *)v1 + qword_1010CCEB0) = 0x4079E00000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  *(void *)uint64_t v7 = swift_getKeyPath();
  *((_WORD *)v7 + 4) = 0;
  id v20 = (uint64_t *)&v7[*(int *)(v4 + 20)];
  *id v20 = swift_getKeyPath();
  sub_100063814(&qword_1010C8950);
  swift_storeEnumTagMultiPayload();
  sub_100B8A658((uint64_t)v7, (uint64_t)v10);
  CGRect v21 = v1;
  ModifiedContent.init(content:modifier:)();
  uint64_t v22 = *(void *)(v52 + 88);
  uint64_t v23 = sub_100B8B8E8(&qword_1010CCF60, (void (*)(uint64_t))type metadata accessor for Card.DisplayStyle);
  uint64_t v56 = v22;
  uint64_t v57 = v23;
  swift_getWitnessTable();
  type metadata accessor for UIHostingController();
  double v24 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  CGRect v50 = v19;
  uint64_t v52 = v15;
  v24(v51, v19, v15);
  CGFloat v25 = (void *)UIHostingController.__allocating_init(rootView:)();
  uint64_t v26 = qword_1010CCEB8;
  *(void *)((char *)v21 + qword_1010CCEB8) = v25;
  id v27 = v25;
  UIHostingController.safeAreaRegions.setter();

  id v28 = [*(id *)((char *)v21 + v26) view];
  if (!v28)
  {

    __break(1u);
LABEL_9:

    __break(1u);
    goto LABEL_10;
  }
  double v29 = v28;
  CGFloat v30 = self;
  id v31 = [v30 clearColor];
  [v29 setBackgroundColor:v31];

  uint64_t v32 = v11;
  double v33 = (objc_class *)type metadata accessor for Card.ViewController();
  v55.receiver = v21;
  v55.super_class = v33;
  CGRect v21 = [super initWithNibName:0 bundle:0];
  [v21 setModalPresentationStyle:2];
  id v34 = [v21 sheetPresentationController];
  if (v34)
  {
    double v35 = v34;
    sub_100063814(&qword_1010C9B10);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_100E251C0;
    sub_100B8B228();
    uint64_t v37 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v38 = (void *)swift_allocObject();
    v38[2] = v32;
    void v38[3] = v22;
    v38[4] = v37;
    swift_retain();
    uint64_t v39 = static UISheetPresentationControllerDetent.custom(identifier:resolver:)();
    swift_release();
    swift_release();
    *(void *)(v36 + 32) = v39;
    uint64_t v54 = v36;
    specialized Array._endMutation()();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v35 setDetents:isa];

    [v35 setWidthFollowsPreferredContentSizeWhenEdgeAttached:1];
  }
  id v41 = [v21 view];
  if (!v41) {
    goto LABEL_9;
  }
  double v42 = v41;
  id v43 = [v30 clearColor];
  [v42 setBackgroundColor:v43];

  uint64_t v44 = qword_1010CCEB8;
  [v21 addChildViewController:*(void *)((char *)v21 + qword_1010CCEB8)];
  id v45 = [v21 view];
  if (!v45)
  {
LABEL_10:

    __break(1u);
    goto LABEL_11;
  }
  double v46 = v45;
  id v47 = [*(id *)((char *)v21 + v44) view];
  if (v47)
  {
    double v48 = v47;
    [v46 addSubview:v47];

    (*(void (**)(char *, uint64_t))(v53 + 8))(v50, v52);
    return;
  }
LABEL_11:

  __break(1u);
}

void _s11MusicCoreUI4CardO14ViewControllerC5coderAEy_xGSgSo7NSCoderC_tcfc_0()
{
  *(void *)&v0[qword_1010CCEB0] = 0x4079E00000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for Card.ViewController()
{
  return sub_10004CF5C();
}

uint64_t sub_100B8A574()
{
  return swift_deallocObject();
}

id sub_100B8A588(void *a1)
{
  Card.ViewController.preferredContentSize(forWidth:)(0, 1);

  return [a1 setPreferredContentSize:];
}

void sub_100B8A5D0()
{
}

uint64_t type metadata accessor for Card.DisplayStyle()
{
  uint64_t result = qword_1010CCE78;
  if (!qword_1010CCE78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100B8A658(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Card.DisplayStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B8A6BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100B8A71C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for Card()
{
  return &type metadata for Card;
}

unint64_t initializeBufferWithCopyOfBuffer for Card.DisplayStyle(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 9);
    unsigned __int8 v9 = *(unsigned char *)(a2 + 8);
    sub_100B88520(*(void *)a2, v9, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v9;
    *(unsigned char *)(a1 + 9) = v8;
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_100063814(&qword_1010C8950);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for Card.DisplayStyle(uint64_t a1, uint64_t a2)
{
  sub_100B82DB8(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(unsigned char *)(a1 + 9));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 9);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 8);
  sub_100B88520(*(void *)a2, v8, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 9) = v7;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 9);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 8);
  sub_100B88520(*(void *)a2, v8, v7);
  uint64_t v9 = *(void *)a1;
  char v10 = *(unsigned char *)(a1 + 9);
  *(void *)a1 = v6;
  uint64_t v11 = *(unsigned __int8 *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 9) = v7;
  sub_100B82DB8(v9, v11, v10);
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_1000637B8(a1 + v12, &qword_1010C8950);
    sub_100063814(&qword_1010C8950);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *uint64_t v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DismissAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 9);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 9);
  *(void *)a1 = *(void *)a2;
  uint64_t v10 = *(unsigned __int8 *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 9) = v7;
  sub_100B82DB8(v8, v10, v9);
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (const void *)(a2 + v11);
    sub_1000637B8(a1 + v11, &qword_1010C8950);
    uint64_t v14 = sub_100063814(&qword_1010C8950);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for DismissAction();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B8AD68);
}

uint64_t sub_100B8AD68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 9);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010CD9B0);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Card.DisplayStyle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B8AE28);
}

uint64_t sub_100B8AE28(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 9) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010CD9B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100B8AED0()
{
  sub_100B4D200();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100B8AF68()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100B8AFBC()
{
  return sub_100B8B638(&qword_1010CCF40, &qword_1010CCDC8, (void (*)(void))sub_100B8B000);
}

unint64_t sub_100B8B000()
{
  unint64_t result = qword_1010CCF48;
  if (!qword_1010CCF48)
  {
    sub_10006389C(&qword_1010CCDC0);
    sub_100B8B0A0();
    sub_100063858(&qword_1010CCF58, &qword_1010CCE18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCF48);
  }
  return result;
}

unint64_t sub_100B8B0A0()
{
  unint64_t result = qword_1010CCF50;
  if (!qword_1010CCF50)
  {
    sub_10006389C(&qword_1010CCDB8);
    sub_10006389C(&qword_1010CCDA8);
    sub_10006389C(&qword_1010CCDA0);
    sub_100B8852C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCF50);
  }
  return result;
}

uint64_t sub_100B8B18C()
{
  return swift_getWitnessTable();
}

unint64_t sub_100B8B228()
{
  unint64_t result = qword_1010CCF68;
  if (!qword_1010CCF68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010CCF68);
  }
  return result;
}

uint64_t sub_100B8B268()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100B8B2A0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B8B2D8()
{
  return sub_100B893C8();
}

uint64_t sub_100B8B2E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B8B34C()
{
  uint64_t v1 = (int *)(type metadata accessor for Card.DisplayStyle() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  sub_100B82DB8(*(void *)(v0 + v2), *(unsigned __int8 *)(v0 + v2 + 8), *(unsigned char *)(v0 + v2 + 9));
  unint64_t v3 = v0 + v2 + v1[7];
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100B8B46C()
{
  type metadata accessor for Card.DisplayStyle();

  return sub_100B88C68();
}

unint64_t sub_100B8B4CC()
{
  unint64_t result = qword_1010CCF90;
  if (!qword_1010CCF90)
  {
    sub_10006389C(&qword_1010CCF88);
    sub_100B8B56C();
    sub_100063858((unint64_t *)&unk_1010CE8A0, &qword_1010CF290);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCF90);
  }
  return result;
}

unint64_t sub_100B8B56C()
{
  unint64_t result = qword_1010CCF98;
  if (!qword_1010CCF98)
  {
    sub_10006389C(&qword_1010CCFA0);
    sub_100B8B638(&qword_1010CCFA8, &qword_1010CCFB0, (void (*)(void))sub_100B8B6B4);
    sub_100063858(&qword_1010CCFF0, &qword_1010CCFF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCF98);
  }
  return result;
}

uint64_t sub_100B8B638(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B8B6B4()
{
  return sub_100B8B638(&qword_1010CCFB8, &qword_1010CCFC0, (void (*)(void))sub_100B8B6E4);
}

unint64_t sub_100B8B6E4()
{
  unint64_t result = qword_1010CCFC8;
  if (!qword_1010CCFC8)
  {
    sub_10006389C(&qword_1010CCFD0);
    sub_100B8B784();
    sub_100063858((unint64_t *)&unk_1010CE060, &qword_1010CB4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCFC8);
  }
  return result;
}

unint64_t sub_100B8B784()
{
  unint64_t result = qword_1010CCFD8;
  if (!qword_1010CCFD8)
  {
    sub_10006389C(&qword_1010CCFE0);
    sub_100063858(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CCFD8);
  }
  return result;
}

unint64_t sub_100B8B824()
{
  unint64_t result = qword_1010CD008;
  if (!qword_1010CD008)
  {
    sub_10006389C(&qword_1010CCF78);
    sub_100063858(&qword_1010CD010, &qword_1010CCF70);
    sub_100063858(&qword_1010CD018, &qword_1010CD000);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CD008);
  }
  return result;
}

uint64_t sub_100B8B8E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B8B940(uint64_t a1)
{
  return a1;
}

double CarouselView.init(items:selectedIndex:selectedItem:animatesProgrammaticSelection:itemSize:horizontalSpacing:carouselToPageIndicatorSpacing:content:didSelect:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15, uint64_t a16, long long a17, uint64_t a18, uint64_t a19)
{
  uint64_t v51 = a7;
  uint64_t v52 = a8;
  int v48 = a6;
  uint64_t v46 = a4;
  uint64_t v47 = a5;
  uint64_t v45 = a3;
  uint64_t v49 = a14;
  uint64_t v50 = a15;
  long long v44 = a17;
  uint64_t v26 = sub_100063814(&qword_1010CD030);
  __chkstk_darwin(v26 - 8);
  id v28 = (char *)&v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  a9[1] = 0;
  a9[2] = 0;
  a9[3] = 0;
  *(void *)uint64_t v53 = a16;
  *(_OWORD *)&v53[8] = v44;
  uint64_t v54 = a18;
  uint64_t v55 = a19;
  double v29 = (int *)type metadata accessor for CarouselView();
  CGFloat v30 = (char *)a9 + v29[16];
  uint64_t v31 = type metadata accessor for Binding();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
  uint64_t v32 = v29[17];
  *((unsigned char *)a9 + v32) = 1;
  double v33 = (void *)((char *)a9 + v29[22]);
  *double v33 = 0;
  v33[1] = 0;
  uint64_t v34 = v29[23];
  uint64_t v56 = 0;
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)a9 + v34) = *(_OWORD *)v53;
  uint64_t v35 = type metadata accessor for ScrollViewProxy();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v28, 1, 1, v35);
  property wrapper backing initializer of CarouselView.scrollViewProxy((uint64_t)v28);
  uint64_t v36 = (void *)((char *)a9 + v29[26]);
  *uint64_t v36 = swift_getKeyPath();
  sub_100063814(&qword_1010C8958);
  swift_storeEnumTagMultiPayload();
  *a9 = a1;
  uint64_t v37 = (double *)((char *)a9 + v29[18]);
  *uint64_t v37 = a10;
  v37[1] = a11;
  sub_100AB7500(a9[1], a9[2]);
  uint64_t v38 = v45;
  a9[1] = a2;
  a9[2] = v38;
  a9[3] = v46;
  uint64_t v39 = type metadata accessor for Optional();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 40))(v30, v47, v39);
  *((unsigned char *)a9 + v32) = v48;
  *(double *)((char *)a9 + v29[20]) = a12;
  *(double *)((char *)a9 + v29[21]) = a13;
  uint64_t v40 = (void *)((char *)a9 + v29[19]);
  uint64_t v41 = v52;
  *uint64_t v40 = v51;
  v40[1] = v41;
  sub_10006ADFC(*v33);
  uint64_t v42 = v50;
  *double v33 = v49;
  v33[1] = v42;
  double result = *v37 + a12;
  *(double *)((char *)a9 + v29[25]) = result;
  return result;
}

uint64_t type metadata accessor for CarouselView()
{
  return swift_getGenericMetadata();
}

uint64_t property wrapper backing initializer of CarouselView.currentIndex()
{
  State.init(wrappedValue:)();
  return v1;
}

uint64_t property wrapper backing initializer of CarouselView.scrollViewProxy(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010CD030);
  __chkstk_darwin(v2);
  sub_10006CAB8(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010CD030);
  State.init(wrappedValue:)();
  return sub_1000637B8(a1, &qword_1010CD030);
}

uint64_t CarouselView.body.getter@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  double v29 = a2;
  uint64_t v3 = a1[2];
  swift_getTupleTypeMetadata2();
  type metadata accessor for Array();
  uint64_t v26 = a1[3];
  unint64_t v4 = a1[6];
  uint64_t v23 = a1;
  unint64_t v27 = v4;
  unint64_t v47 = v4;
  int v48 = &protocol witness table for Int;
  uint64_t v45 = type metadata accessor for IDView();
  uint64_t WitnessTable = swift_getWitnessTable();
  CGFloat v25 = &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>;
  swift_getOpaqueTypeMetadata2();
  v22[2] = swift_getWitnessTable();
  uint64_t v5 = a1[5];
  v22[1] = v3;
  uint64_t v49 = v5;
  uint64_t v6 = v5;
  type metadata accessor for ForEach();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  double v24 = &protocol conformance descriptor for <> ForEach<A, B, C>;
  swift_getWitnessTable();
  type metadata accessor for LazyHStack();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  uint64_t v7 = type metadata accessor for ModifiedContent();
  uint64_t v8 = sub_10006389C(&qword_1010CD038);
  uint64_t v42 = swift_getOpaqueTypeConformance2();
  id v43 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v9 = swift_getWitnessTable();
  unint64_t v10 = sub_100B93544();
  swift_getOpaqueTypeMetadata2();
  type metadata accessor for Optional();
  uint64_t v45 = v7;
  uint64_t WitnessTable = v8;
  unint64_t v47 = v9;
  int v48 = (void *)v10;
  swift_getOpaqueTypeConformance2();
  uint64_t v41 = *(void *)(v6 + 8);
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  type metadata accessor for ScrollView();
  type metadata accessor for SafeAreaPaddingModifier();
  type metadata accessor for ModifiedContent();
  type metadata accessor for ViewAlignedScrollTargetBehavior();
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = sub_100B97F34(&qword_1010CD048, (void (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier);
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  sub_100B935B0();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  type metadata accessor for GeometryReader();
  type metadata accessor for ModifiedContent();
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v38 = &protocol witness table for _FrameLayout;
  swift_getWitnessTable();
  type metadata accessor for ScrollViewReader();
  type metadata accessor for ModifiedContent();
  sub_10006389C(&qword_1010CD058);
  uint64_t v11 = v3;
  uint64_t v49 = v6;
  type metadata accessor for ForEach();
  uint64_t v12 = sub_10006389C(&qword_1010CD060);
  sub_10006389C(&qword_1010CD068);
  type metadata accessor for AutomaticHoverEffect();
  unint64_t v47 = sub_100B93604();
  int v48 = (void *)sub_100B97F34(qword_1010CD0E8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  uint64_t v45 = v12;
  uint64_t WitnessTable = swift_getOpaqueTypeConformance2();
  uint64_t v36 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  type metadata accessor for HStack();
  type metadata accessor for ModifiedContent();
  type metadata accessor for Optional();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v13 = type metadata accessor for VStack();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v18 = (char *)v22 - v17;
  uint64_t v30 = v11;
  uint64_t v31 = v26;
  uint64_t v32 = v23[4];
  uint64_t v33 = v6;
  unint64_t v34 = v27;
  uint64_t v35 = v28;
  static HorizontalAlignment.center.getter();
  VStack.init(alignment:spacing:content:)();
  swift_getWitnessTable();
  id v19 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v19(v18, v16, v13);
  id v20 = *(void (**)(char *, uint64_t))(v14 + 8);
  v20(v16, v13);
  v19(v29, v18, v13);
  return ((uint64_t (*)(char *, uint64_t))v20)(v18, v13);
}

uint64_t sub_100B8C698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, unint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v111 = a6;
  uint64_t v105 = a7;
  uint64_t v106 = a1;
  swift_getTupleTypeMetadata2();
  uint64_t v98 = type metadata accessor for Array();
  sub_10006389C(&qword_1010CD058);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v146 = (uint64_t)a5;
  uint64_t v11 = type metadata accessor for ForEach();
  uint64_t v12 = sub_10006389C(&qword_1010CD060);
  sub_10006389C(&qword_1010CD068);
  type metadata accessor for AutomaticHoverEffect();
  unint64_t v144 = sub_100B93604();
  uint64_t v145 = (void *)sub_100B97F34(qword_1010CD0E8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  uint64_t v142 = v12;
  uint64_t OpaqueTypeConformance2 = (char *)swift_getOpaqueTypeConformance2();
  uint64_t v95 = &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>;
  uint64_t v149 = swift_getOpaqueTypeConformance2();
  uint64_t v96 = &protocol conformance descriptor for <> ForEach<A, B, C>;
  uint64_t v92 = v11;
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v91 = *(void *)(type metadata accessor for HStack() - 8);
  __chkstk_darwin();
  uint64_t v89 = (char *)&v87 - v13;
  uint64_t v104 = v14;
  uint64_t v102 = *(void *)(type metadata accessor for ModifiedContent() - 8);
  __chkstk_darwin();
  uint64_t v88 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v90 = (char *)&v87 - v16;
  uint64_t v109 = v17;
  uint64_t v110 = type metadata accessor for Optional();
  uint64_t v103 = *(void *)(v110 - 8);
  __chkstk_darwin();
  uint64_t v108 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v107 = (char *)&v87 - v19;
  id v20 = (char *)a2;
  uint64_t v142 = a2;
  uint64_t OpaqueTypeConformance2 = a3;
  unint64_t v21 = a4;
  unint64_t v144 = a4;
  uint64_t v145 = a5;
  uint64_t v22 = (uint64_t)a5;
  uint64_t v146 = v111;
  uint64_t v23 = type metadata accessor for CarouselView();
  uint64_t v24 = *(void *)(v23 - 8);
  __n128 v25 = __chkstk_darwin();
  unint64_t v27 = (char *)&v87 - v26;
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v24 + 16);
  uint64_t v101 = v23;
  v28((char *)&v87 - v26, v106, v23, v25);
  unint64_t v29 = (*(unsigned __int8 *)(v24 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v30 = (char *)swift_allocObject();
  uint64_t v100 = (uint64_t)v30;
  *((void *)v30 + 2) = v20;
  *((void *)v30 + 3) = a3;
  uint64_t v94 = v21;
  *((void *)v30 + 4) = v21;
  *((void *)v30 + 5) = v22;
  unint64_t v31 = v111;
  *((void *)v30 + 6) = v111;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v30[v29], v27, v23);
  uint64_t v93 = (uint64_t)a3;
  uint64_t v142 = (uint64_t)a3;
  uint64_t OpaqueTypeConformance2 = (char *)&type metadata for Int;
  unint64_t v144 = v31;
  uint64_t v145 = &protocol witness table for Int;
  uint64_t v32 = type metadata accessor for IDView();
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v142 = v32;
  uint64_t OpaqueTypeConformance2 = (char *)v33;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v142 = v98;
  uint64_t OpaqueTypeConformance2 = v20;
  uint64_t v99 = (uint64_t)v20;
  unint64_t v144 = OpaqueTypeMetadata2;
  uint64_t v145 = (void *)WitnessTable;
  uint64_t v146 = v22;
  uint64_t v35 = v22;
  type metadata accessor for ForEach();
  uint64_t v142 = v32;
  uint64_t OpaqueTypeConformance2 = (char *)v33;
  uint64_t v134 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v36 = type metadata accessor for LazyHStack();
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v142 = v36;
  uint64_t OpaqueTypeConformance2 = (char *)v37;
  swift_getOpaqueTypeMetadata2();
  uint64_t v38 = type metadata accessor for ModifiedContent();
  uint64_t v39 = sub_10006389C(&qword_1010CD038);
  uint64_t v142 = v36;
  uint64_t OpaqueTypeConformance2 = (char *)v37;
  uint64_t v132 = swift_getOpaqueTypeConformance2();
  uint64_t v133 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v40 = swift_getWitnessTable();
  unint64_t v41 = sub_100B93544();
  uint64_t v142 = v38;
  uint64_t OpaqueTypeConformance2 = (char *)v39;
  unint64_t v144 = v40;
  uint64_t v145 = (void *)v41;
  uint64_t v42 = swift_getOpaqueTypeMetadata2();
  uint64_t v43 = type metadata accessor for Optional();
  uint64_t v142 = v38;
  uint64_t OpaqueTypeConformance2 = (char *)v39;
  unint64_t v144 = v40;
  uint64_t v145 = (void *)v41;
  uint64_t v44 = swift_getOpaqueTypeConformance2();
  uint64_t v98 = v35;
  uint64_t v131 = *(void *)(v35 + 8);
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v142 = v42;
  uint64_t OpaqueTypeConformance2 = (char *)v43;
  unint64_t v144 = v44;
  uint64_t v145 = (void *)v45;
  swift_getOpaqueTypeMetadata2();
  uint64_t v142 = v42;
  uint64_t OpaqueTypeConformance2 = (char *)v43;
  unint64_t v144 = v44;
  uint64_t v145 = (void *)v45;
  swift_getOpaqueTypeConformance2();
  type metadata accessor for ScrollView();
  type metadata accessor for SafeAreaPaddingModifier();
  uint64_t v46 = type metadata accessor for ModifiedContent();
  uint64_t v47 = type metadata accessor for ViewAlignedScrollTargetBehavior();
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = sub_100B97F34(&qword_1010CD048, (void (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier);
  uint64_t v129 = v48;
  uint64_t v130 = v49;
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v142 = v46;
  uint64_t OpaqueTypeConformance2 = (char *)v47;
  unint64_t v144 = v50;
  uint64_t v145 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v51 = swift_getOpaqueTypeMetadata2();
  uint64_t v142 = v46;
  uint64_t OpaqueTypeConformance2 = (char *)v47;
  unint64_t v144 = v50;
  uint64_t v145 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v52 = swift_getOpaqueTypeConformance2();
  uint64_t v142 = v51;
  uint64_t OpaqueTypeConformance2 = (char *)v52;
  uint64_t v53 = swift_getOpaqueTypeMetadata2();
  uint64_t v142 = v51;
  uint64_t OpaqueTypeConformance2 = (char *)v52;
  uint64_t v54 = swift_getOpaqueTypeConformance2();
  unint64_t v55 = sub_100B935B0();
  uint64_t v142 = v53;
  uint64_t OpaqueTypeConformance2 = (char *)&type metadata for CGFloat;
  unint64_t v144 = v54;
  uint64_t v145 = (void *)v55;
  uint64_t v56 = swift_getOpaqueTypeMetadata2();
  uint64_t v142 = v53;
  uint64_t OpaqueTypeConformance2 = (char *)&type metadata for CGFloat;
  unint64_t v144 = v54;
  uint64_t v145 = (void *)v55;
  uint64_t v57 = swift_getOpaqueTypeConformance2();
  uint64_t v142 = v56;
  uint64_t OpaqueTypeConformance2 = (char *)v57;
  uint64_t v58 = swift_getOpaqueTypeMetadata2();
  uint64_t v142 = v56;
  uint64_t OpaqueTypeConformance2 = (char *)v57;
  uint64_t v59 = swift_getOpaqueTypeConformance2();
  uint64_t v142 = v58;
  uint64_t OpaqueTypeConformance2 = (char *)v59;
  swift_getOpaqueTypeMetadata2();
  uint64_t v142 = v58;
  uint64_t OpaqueTypeConformance2 = (char *)v59;
  swift_getOpaqueTypeConformance2();
  type metadata accessor for GeometryReader();
  type metadata accessor for ModifiedContent();
  uint64_t v127 = swift_getWitnessTable();
  uint64_t v128 = &protocol witness table for _FrameLayout;
  swift_getWitnessTable();
  uint64_t v142 = ScrollViewReader.init(content:)();
  uint64_t OpaqueTypeConformance2 = v60;
  uint64_t v61 = v106;
  static Alignment.center.getter();
  type metadata accessor for ScrollViewReader();
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v63 = v99;
  View.frame(width:height:alignment:)();
  swift_release();
  char v120 = (uint64_t *)v135;
  char v121 = v136;
  unint64_t v122 = v137;
  char v123 = v138;
  uint64_t v124 = v139;
  char v125 = v140;
  long long v126 = v141;
  uint64_t v64 = type metadata accessor for ModifiedContent();
  v119[4] = v62;
  v119[5] = &protocol witness table for _FrameLayout;
  uint64_t v100 = swift_getWitnessTable();
  char v65 = *(void (**)(uint64_t *, uint64_t **, uint64_t))(*(void *)(v64 - 8) + 16);
  uint64_t v101 = v64;
  v65(&v142, &v120, v64);
  swift_release();
  if (Array.count.getter() < 2)
  {
    uint64_t v78 = v108;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56))(v108, 1, 1, v109);
    v119[2] = swift_getWitnessTable();
    v119[3] = &protocol witness table for _FrameLayout;
    swift_getWitnessTable();
  }
  else
  {
    id v66 = [self currentTraitCollection:v87];
    [v66 userInterfaceIdiom];

    __chkstk_darwin();
    uint64_t v67 = v93;
    *(&v87 - 6) = v63;
    *(&v87 - 5) = v67;
    uint64_t v68 = v98;
    *(&v87 - 4) = v94;
    *(&v87 - 3) = v68;
    *(&v87 - 2) = v111;
    *(&v87 - 1) = v61;
    static VerticalAlignment.center.getter();
    uint64_t v69 = v89;
    HStack.init(alignment:spacing:content:)();
    sub_100B974B0();
    static Alignment.center.getter();
    uint64_t v70 = v104;
    uint64_t v71 = swift_getWitnessTable();
    uint64_t v72 = v88;
    View.frame(width:height:alignment:)();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v69, v70);
    uint64_t v112 = v71;
    char v113 = &protocol witness table for _FrameLayout;
    uint64_t v73 = v109;
    swift_getWitnessTable();
    uint64_t v74 = v102;
    uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v102 + 16);
    uint64_t v76 = v90;
    v75(v90, v72, v73);
    uint64_t v77 = *(void (**)(char *, uint64_t))(v74 + 8);
    v77(v72, v73);
    uint64_t v78 = v108;
    v75(v108, v76, v73);
    v77(v76, v73);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v78, 0, 1, v73);
  }
  uint64_t v79 = v103;
  uint64_t v80 = *(void (**)(char *, char *, uint64_t))(v103 + 16);
  uint64_t v81 = v110;
  v80(v107, v78, v110);
  uint64_t v82 = *(void (**)(char *, uint64_t))(v79 + 8);
  v82(v78, v81);
  uint64_t v135 = v142;
  uint64_t v136 = OpaqueTypeConformance2;
  unint64_t v137 = v144;
  char v138 = (char)v145;
  uint64_t v139 = v146;
  char v140 = v147;
  long long v141 = v148;
  char v120 = &v135;
  uint64_t v84 = v107;
  uint64_t v83 = v108;
  uint64_t v85 = v110;
  v80(v108, v107, v110);
  char v121 = v83;
  swift_retain();
  v119[0] = v101;
  v119[1] = v85;
  uint64_t v117 = v100;
  uint64_t v115 = swift_getWitnessTable();
  char v116 = &protocol witness table for _FrameLayout;
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v118 = swift_getWitnessTable();
  sub_100BE82B8((uint64_t *)&v120, 2uLL, (uint64_t)v119);
  v82(v84, v85);
  swift_release();
  v82(v83, v85);
  return swift_release();
}

uint64_t sub_100B8D5C4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, void *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v71 = (uint64_t)a7;
  uint64_t v72 = a5;
  uint64_t v76 = a6;
  uint64_t v77 = a2;
  uint64_t v70 = a3;
  uint64_t v73 = a1;
  uint64_t v75 = a8;
  uint64_t v13 = type metadata accessor for ScrollViewProxy();
  uint64_t v68 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin();
  uint64_t v69 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = a3;
  uint64_t v99 = a4;
  uint64_t v16 = a4;
  uint64_t v67 = (uint64_t)a4;
  uint64_t v100 = a5;
  uint64_t v101 = a6;
  uint64_t v102 = a7;
  uint64_t v17 = type metadata accessor for CarouselView();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __n128 v20 = __chkstk_darwin();
  uint64_t v22 = (char *)&v67 - v21;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16);
  uint64_t v74 = v17;
  v23((char *)&v67 - v21, v77, v17, v20);
  (*(void (**)(char *, void *, uint64_t))(v14 + 16))((char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v73, v13);
  unint64_t v24 = (*(unsigned __int8 *)(v18 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v25 = (v19 + *(unsigned __int8 *)(v14 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v26 = (void *)swift_allocObject();
  unint64_t v27 = (void *)v70;
  void v26[2] = v70;
  void v26[3] = v16;
  uint64_t v28 = v71;
  unint64_t v29 = v76;
  v26[4] = v72;
  v26[5] = v29;
  v26[6] = v28;
  uint64_t v30 = (char *)v26 + v24;
  unint64_t v31 = v26;
  uint64_t v73 = v26;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v30, v22, v17);
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))((unint64_t)v31 + v25, v69, v68);
  uint64_t v32 = v27;
  swift_getTupleTypeMetadata2();
  uint64_t v33 = type metadata accessor for Array();
  uint64_t v98 = v67;
  uint64_t v99 = &type metadata for Int;
  uint64_t v100 = v28;
  uint64_t v101 = &protocol witness table for Int;
  uint64_t v34 = type metadata accessor for IDView();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v98 = v34;
  uint64_t v99 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v37 = swift_getWitnessTable();
  uint64_t v98 = v33;
  uint64_t v99 = v32;
  uint64_t v100 = OpaqueTypeMetadata2;
  uint64_t v101 = (void *)v37;
  uint64_t v102 = v29;
  type metadata accessor for ForEach();
  uint64_t v98 = v34;
  uint64_t v99 = (void *)WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v38 = type metadata accessor for LazyHStack();
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v98 = v38;
  uint64_t v99 = (void *)v39;
  swift_getOpaqueTypeMetadata2();
  uint64_t v40 = type metadata accessor for ModifiedContent();
  uint64_t v41 = sub_10006389C(&qword_1010CD038);
  uint64_t v98 = v38;
  uint64_t v99 = (void *)v39;
  uint64_t v88 = swift_getOpaqueTypeConformance2();
  uint64_t v89 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v42 = swift_getWitnessTable();
  unint64_t v43 = sub_100B93544();
  uint64_t v98 = v40;
  uint64_t v99 = (void *)v41;
  uint64_t v100 = v42;
  uint64_t v101 = (void *)v43;
  uint64_t v44 = swift_getOpaqueTypeMetadata2();
  uint64_t v45 = type metadata accessor for Optional();
  uint64_t v98 = v40;
  uint64_t v99 = (void *)v41;
  uint64_t v100 = v42;
  uint64_t v101 = (void *)v43;
  uint64_t v46 = swift_getOpaqueTypeConformance2();
  uint64_t v87 = v76[1];
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v98 = v44;
  uint64_t v99 = (void *)v45;
  uint64_t v100 = v46;
  uint64_t v101 = (void *)v47;
  swift_getOpaqueTypeMetadata2();
  uint64_t v98 = v44;
  uint64_t v99 = (void *)v45;
  uint64_t v100 = v46;
  uint64_t v101 = (void *)v47;
  swift_getOpaqueTypeConformance2();
  type metadata accessor for ScrollView();
  type metadata accessor for SafeAreaPaddingModifier();
  uint64_t v48 = type metadata accessor for ModifiedContent();
  uint64_t v49 = type metadata accessor for ViewAlignedScrollTargetBehavior();
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v51 = sub_100B97F34(&qword_1010CD048, (void (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier);
  uint64_t v85 = v50;
  uint64_t v86 = v51;
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v98 = v48;
  uint64_t v99 = (void *)v49;
  uint64_t v100 = v52;
  uint64_t v101 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v53 = swift_getOpaqueTypeMetadata2();
  uint64_t v98 = v48;
  uint64_t v99 = (void *)v49;
  uint64_t v100 = v52;
  uint64_t v101 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v54 = swift_getOpaqueTypeConformance2();
  uint64_t v98 = v53;
  uint64_t v99 = (void *)v54;
  uint64_t v55 = swift_getOpaqueTypeMetadata2();
  uint64_t v98 = v53;
  uint64_t v99 = (void *)v54;
  uint64_t v56 = swift_getOpaqueTypeConformance2();
  unint64_t v57 = sub_100B935B0();
  uint64_t v98 = v55;
  uint64_t v99 = &type metadata for CGFloat;
  uint64_t v100 = v56;
  uint64_t v101 = (void *)v57;
  uint64_t v58 = swift_getOpaqueTypeMetadata2();
  uint64_t v98 = v55;
  uint64_t v99 = &type metadata for CGFloat;
  uint64_t v100 = v56;
  uint64_t v101 = (void *)v57;
  uint64_t v59 = swift_getOpaqueTypeConformance2();
  uint64_t v98 = v58;
  uint64_t v99 = (void *)v59;
  uint64_t v60 = swift_getOpaqueTypeMetadata2();
  uint64_t v98 = v58;
  uint64_t v99 = (void *)v59;
  uint64_t v61 = swift_getOpaqueTypeConformance2();
  uint64_t v98 = v60;
  uint64_t v99 = (void *)v61;
  swift_getOpaqueTypeMetadata2();
  uint64_t v98 = v60;
  uint64_t v99 = (void *)v61;
  swift_getOpaqueTypeConformance2();
  uint64_t v98 = GeometryReader.init(content:)();
  uint64_t v99 = v62;
  static Alignment.center.getter();
  type metadata accessor for GeometryReader();
  uint64_t v63 = swift_getWitnessTable();
  View.frame(width:height:alignment:)();
  swift_release();
  v80[0] = v91;
  v80[1] = v92;
  v80[2] = v93;
  char v81 = v94;
  uint64_t v82 = v95;
  char v83 = v96;
  long long v84 = v97;
  uint64_t v64 = type metadata accessor for ModifiedContent();
  uint64_t v78 = v63;
  uint64_t v79 = &protocol witness table for _FrameLayout;
  swift_getWitnessTable();
  char v65 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v64 - 8) + 16);
  v65(&v98, v80, v64);
  swift_release();
  uint64_t v91 = v98;
  uint64_t v92 = v99;
  uint64_t v93 = v100;
  char v94 = (char)v101;
  uint64_t v95 = v102;
  char v96 = v103;
  long long v97 = v104;
  v65(v75, &v91, v64);
  return swift_release();
}

uint64_t sub_100B8DEB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v140 = a6;
  uint64_t v130 = a3;
  uint64_t v141 = a2;
  uint64_t v127 = a1;
  uint64_t v136 = a9;
  uint64_t v157 = (uint64_t)a4;
  unint64_t v158 = a5;
  uint64_t v139 = a5;
  uint64_t v159 = a6;
  v160 = a7;
  uint64_t v161 = a8;
  uint64_t v142 = a8;
  uint64_t v125 = type metadata accessor for CarouselView();
  uint64_t v135 = *(void *)(v125 - 8);
  uint64_t v133 = *(void *)(v135 + 64);
  __chkstk_darwin();
  uint64_t v134 = (char *)&v96 - v13;
  uint64_t v132 = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v131 = *((void *)v132 - 1);
  __chkstk_darwin();
  uint64_t v129 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ViewAlignedScrollTargetBehavior.LimitBehavior();
  __chkstk_darwin();
  long long v126 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ViewAlignedScrollTargetBehavior();
  uint64_t v128 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v124 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getTupleTypeMetadata2();
  uint64_t v18 = type metadata accessor for Array();
  uint64_t v157 = (uint64_t)a5;
  unint64_t v158 = &type metadata for Int;
  uint64_t v159 = a8;
  v160 = &protocol witness table for Int;
  uint64_t v19 = type metadata accessor for IDView();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v157 = v19;
  unint64_t v158 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v157 = v18;
  unint64_t v158 = a4;
  unsigned __int8 v143 = a4;
  uint64_t v159 = OpaqueTypeMetadata2;
  v160 = (void *)v22;
  uint64_t v161 = (uint64_t)a7;
  uint64_t v23 = a7;
  char v138 = a7;
  type metadata accessor for ForEach();
  uint64_t v157 = v19;
  unint64_t v158 = (void *)WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  swift_getWitnessTable();
  uint64_t v24 = type metadata accessor for LazyHStack();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v157 = v24;
  unint64_t v158 = (void *)v25;
  swift_getOpaqueTypeMetadata2();
  uint64_t v26 = type metadata accessor for ModifiedContent();
  uint64_t v27 = sub_10006389C(&qword_1010CD038);
  uint64_t v157 = v24;
  unint64_t v158 = (void *)v25;
  uint64_t v154 = swift_getOpaqueTypeConformance2();
  unsigned int v155 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v28 = swift_getWitnessTable();
  unint64_t v29 = sub_100B93544();
  uint64_t v157 = v26;
  unint64_t v158 = (void *)v27;
  uint64_t v159 = v28;
  v160 = (void *)v29;
  uint64_t v30 = swift_getOpaqueTypeMetadata2();
  uint64_t v31 = type metadata accessor for Optional();
  uint64_t v157 = v26;
  unint64_t v158 = (void *)v27;
  uint64_t v159 = v28;
  v160 = (void *)v29;
  uint64_t v32 = swift_getOpaqueTypeConformance2();
  uint64_t v153 = v23[1];
  uint64_t v33 = swift_getWitnessTable();
  uint64_t v157 = v30;
  unint64_t v158 = (void *)v31;
  uint64_t v159 = v32;
  v160 = (void *)v33;
  uint64_t v102 = swift_getOpaqueTypeMetadata2();
  uint64_t v157 = v30;
  unint64_t v158 = (void *)v31;
  uint64_t v159 = v32;
  v160 = (void *)v33;
  uint64_t v101 = swift_getOpaqueTypeConformance2();
  uint64_t v34 = type metadata accessor for ScrollView();
  uint64_t v103 = *(void *)(v34 - 8);
  __chkstk_darwin();
  uint64_t v36 = (char *)&v96 - v35;
  type metadata accessor for SafeAreaPaddingModifier();
  uint64_t v37 = type metadata accessor for ModifiedContent();
  uint64_t v104 = *(void *)(v37 - 8);
  __chkstk_darwin();
  uint64_t v100 = (char *)&v96 - v38;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v99 = v39;
  uint64_t v40 = sub_100B97F34(&qword_1010CD048, (void (*)(uint64_t))&type metadata accessor for SafeAreaPaddingModifier);
  uint64_t v151 = v39;
  uint64_t v152 = v40;
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v157 = v37;
  unint64_t v158 = (void *)v16;
  uint64_t v97 = v16;
  uint64_t v159 = v41;
  v160 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v42 = v41;
  uint64_t v98 = v41;
  uint64_t v43 = swift_getOpaqueTypeMetadata2();
  uint64_t v115 = *(void *)(v43 - 8);
  __chkstk_darwin();
  uint64_t v45 = (char *)&v96 - v44;
  uint64_t v157 = v37;
  unint64_t v158 = (void *)v16;
  uint64_t v159 = v42;
  v160 = &protocol witness table for ViewAlignedScrollTargetBehavior;
  uint64_t v46 = swift_getOpaqueTypeConformance2();
  uint64_t v157 = v43;
  unint64_t v158 = (void *)v46;
  uint64_t v47 = swift_getOpaqueTypeMetadata2();
  uint64_t v122 = *(void *)(v47 - 8);
  __chkstk_darwin();
  unint64_t v137 = (char *)&v96 - v48;
  uint64_t v113 = v43;
  uint64_t v157 = v43;
  unint64_t v158 = (void *)v46;
  uint64_t v105 = v46;
  uint64_t v49 = swift_getOpaqueTypeConformance2();
  unint64_t v50 = sub_100B935B0();
  uint64_t v157 = v47;
  unint64_t v158 = &type metadata for CGFloat;
  uint64_t v159 = v49;
  v160 = (void *)v50;
  uint64_t v51 = swift_getOpaqueTypeMetadata2();
  uint64_t v120 = *(void *)(v51 - 8);
  __chkstk_darwin();
  uint64_t v118 = (char *)&v96 - v52;
  uint64_t v123 = v47;
  uint64_t v157 = v47;
  unint64_t v158 = &type metadata for CGFloat;
  uint64_t v119 = v49;
  uint64_t v159 = v49;
  v160 = (void *)v50;
  unint64_t v114 = v50;
  uint64_t v53 = swift_getOpaqueTypeConformance2();
  uint64_t v157 = v51;
  unint64_t v158 = (void *)v53;
  uint64_t v54 = swift_getOpaqueTypeMetadata2();
  uint64_t v116 = *(void *)(v54 - 8);
  __chkstk_darwin();
  uint64_t v111 = (char *)&v96 - v55;
  uint64_t v121 = v51;
  uint64_t v157 = v51;
  unint64_t v158 = (void *)v53;
  uint64_t v109 = v53;
  uint64_t v56 = swift_getOpaqueTypeConformance2();
  uint64_t v117 = v54;
  uint64_t v157 = v54;
  unint64_t v158 = (void *)v56;
  uint64_t v108 = v56;
  uint64_t v112 = swift_getOpaqueTypeMetadata2();
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin();
  uint64_t v106 = (char *)&v96 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v107 = (char *)&v96 - v58;
  GeometryProxy.size.getter();
  uint64_t v59 = v125;
  uint64_t v60 = v141;
  double v62 = (v61 - *(double *)(v141 + *(int *)(v125 + 72))) * 0.5;
  static Axis.Set.horizontal.getter();
  unint64_t v144 = v143;
  uint64_t v145 = v139;
  uint64_t v146 = v140;
  char v147 = v138;
  uint64_t v148 = v142;
  uint64_t v149 = v60;
  uint64_t v63 = v60;
  uint64_t v150 = v130;
  sub_100BE1B88();
  uint64_t v64 = static Edge.Set.horizontal.getter();
  char v65 = v100;
  sub_100B916CC(v64, COERCE__INT64(round(v62)), 0);
  uint64_t v66 = v34;
  uint64_t v67 = v129;
  (*(void (**)(char *, uint64_t))(v103 + 8))(v36, v66);
  static ViewAlignedScrollTargetBehavior.LimitBehavior.automatic.getter();
  uint64_t v68 = v124;
  ViewAlignedScrollTargetBehavior.init(limitBehavior:)();
  uint64_t v69 = v97;
  View.scrollTargetBehavior<A>(_:)();
  (*(void (**)(char *, uint64_t))(v128 + 8))(v68, v69);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v65, v37);
  static ScrollIndicatorVisibility.hidden.getter();
  LOBYTE(v65) = static Axis.Set.vertical.getter();
  unsigned __int8 v70 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v65) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v70) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v71 = v113;
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v131 + 8))(v67, v132);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v45, v71);
  uint64_t v72 = v135;
  uint64_t v132 = *(void (**)(char *, uint64_t, uint64_t))(v135 + 16);
  uint64_t v73 = v134;
  uint64_t v74 = v59;
  v132(v134, v63, v59);
  uint64_t v75 = *(unsigned __int8 *)(v72 + 80);
  uint64_t v76 = (v75 + 56) & ~v75;
  v133 += v76;
  uint64_t v131 = v75 | 7;
  uint64_t v77 = (char *)swift_allocObject();
  uint64_t v78 = v139;
  *((void *)v77 + 2) = v143;
  *((void *)v77 + 3) = v78;
  uint64_t v79 = v140;
  uint64_t v80 = v138;
  *((void *)v77 + 4) = v140;
  *((void *)v77 + 5) = v80;
  *((void *)v77 + 6) = v142;
  char v81 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
  v81(&v77[v76], v73, v74);
  v132(v73, v141, v74);
  uint64_t v82 = (char *)swift_allocObject();
  *((void *)v82 + 2) = v143;
  *((void *)v82 + 3) = v78;
  *((void *)v82 + 4) = v79;
  *((void *)v82 + 5) = v80;
  *((void *)v82 + 6) = v142;
  v81(&v82[v76], v73, v74);
  char v83 = v118;
  uint64_t v84 = v123;
  uint64_t v85 = v137;
  View.onScrollGeometryChange<A>(for:of:action:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v122 + 8))(v85, v84);
  uint64_t v86 = v111;
  uint64_t v87 = v121;
  View.scrollClipDisabled(_:)();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v83, v87);
  Array.count.getter();
  uint64_t v88 = v106;
  uint64_t v89 = v117;
  View.scrollDisabled(_:)();
  (*(void (**)(char *, uint64_t))(v116 + 8))(v86, v89);
  uint64_t v90 = v110;
  uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v110 + 16);
  uint64_t v92 = v107;
  uint64_t v93 = v112;
  v91(v107, v88, v112);
  char v94 = *(void (**)(char *, uint64_t))(v90 + 8);
  v94(v88, v93);
  v91(v136, v92, v93);
  return ((uint64_t (*)(char *, uint64_t))v94)(v92, v93);
}

uint64_t sub_100B8EF58@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, char *a8@<X8>)
{
  uint64_t v154 = a5;
  uint64_t v145 = a2;
  uint64_t v150 = a1;
  uint64_t v111 = a8;
  uint64_t v140 = type metadata accessor for Binding();
  uint64_t v139 = type metadata accessor for Optional();
  uint64_t v138 = *(void *)(v139 - 8);
  __chkstk_darwin();
  unint64_t v137 = (char *)&v108 - v13;
  uint64_t v14 = type metadata accessor for Optional();
  uint64_t v141 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v109 = (char *)&v108 - v15;
  uint64_t v134 = type metadata accessor for ScrollViewProxy();
  uint64_t v131 = *(void *)(v134 - 8);
  uint64_t v143 = *(void *)(v131 + 64);
  __chkstk_darwin();
  uint64_t v130 = (char *)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = (uint64_t)a3;
  id v168 = a4;
  uint64_t v153 = a4;
  uint64_t v169 = a5;
  v170 = a6;
  uint64_t v17 = (uint64_t)a6;
  unsigned int v155 = a6;
  uint64_t v171 = a7;
  uint64_t v152 = a7;
  uint64_t v121 = type metadata accessor for CarouselView();
  uint64_t v123 = *(void (**)(char *, char *, uint64_t))(v121 - 8);
  uint64_t v144 = *((void *)v123 + 8);
  __chkstk_darwin();
  uint64_t v151 = (char *)&v108 - v18;
  type metadata accessor for PinnedScrollableViews();
  __chkstk_darwin();
  char v147 = (char *)&v108 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v20 = a3;
  uint64_t v149 = (uint64_t)a3;
  swift_getTupleTypeMetadata2();
  uint64_t v21 = type metadata accessor for Array();
  uint64_t v167 = (uint64_t)a4;
  id v168 = &type metadata for Int;
  uint64_t v169 = a7;
  v170 = &protocol witness table for Int;
  uint64_t v22 = type metadata accessor for IDView();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v167 = v22;
  id v168 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v167 = v21;
  id v168 = v20;
  uint64_t v169 = OpaqueTypeMetadata2;
  v170 = (void *)v25;
  uint64_t v171 = v17;
  type metadata accessor for ForEach();
  uint64_t v167 = v22;
  id v168 = (void *)WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v114 = swift_getWitnessTable();
  uint64_t v26 = type metadata accessor for LazyHStack();
  uint64_t v146 = *(void (***)(char *, void))(v26 - 8);
  __chkstk_darwin();
  uint64_t v28 = (char *)&v108 - v27;
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v167 = v26;
  id v168 = (void *)v29;
  uint64_t v30 = v26;
  uint64_t v112 = v26;
  uint64_t v31 = (void *)v29;
  uint64_t v113 = v29;
  uint64_t v117 = swift_getOpaqueTypeMetadata2();
  uint64_t v118 = *(void *)(v117 - 8);
  __chkstk_darwin();
  uint64_t v142 = (char *)&v108 - v32;
  uint64_t v33 = type metadata accessor for ModifiedContent();
  uint64_t v124 = *(void *)(v33 - 8);
  __chkstk_darwin();
  uint64_t v116 = (char *)&v108 - v34;
  uint64_t v35 = sub_10006389C(&qword_1010CD038);
  uint64_t v167 = v30;
  id v168 = v31;
  uint64_t v115 = swift_getOpaqueTypeConformance2();
  uint64_t v164 = v115;
  v165 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v36 = swift_getWitnessTable();
  unint64_t v37 = sub_100B93544();
  uint64_t v167 = v33;
  id v168 = (void *)v35;
  uint64_t v169 = v36;
  v170 = (void *)v37;
  uint64_t v38 = swift_getOpaqueTypeMetadata2();
  uint64_t v135 = *(void *)(v38 - 8);
  __chkstk_darwin();
  uint64_t v148 = (char *)&v108 - v39;
  uint64_t v125 = v33;
  uint64_t v167 = v33;
  id v168 = (void *)v35;
  uint64_t v122 = v35;
  uint64_t v120 = v36;
  uint64_t v169 = v36;
  v170 = (void *)v37;
  unint64_t v119 = v37;
  uint64_t v40 = swift_getOpaqueTypeConformance2();
  uint64_t v41 = v155;
  uint64_t v163 = v155[1];
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v136 = v38;
  uint64_t v167 = v38;
  id v168 = (void *)v14;
  uint64_t v110 = v14;
  uint64_t v129 = v40;
  uint64_t v169 = v40;
  v170 = (void *)v42;
  uint64_t v126 = v42;
  uint64_t v133 = swift_getOpaqueTypeMetadata2();
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin();
  uint64_t v127 = (char *)&v108 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v128 = (char *)&v108 - v44;
  static VerticalAlignment.center.getter();
  uint64_t v45 = v121;
  uint64_t v46 = v150;
  uint64_t v47 = v149;
  uint64_t v156 = v149;
  uint64_t v157 = v153;
  uint64_t v158 = v154;
  uint64_t v159 = v41;
  uint64_t v160 = v152;
  uint64_t v161 = v150;
  sub_100B90A68();
  uint64_t v48 = v123;
  LazyHStack.init(alignment:spacing:pinnedViews:content:)();
  uint64_t v49 = v112;
  View.scrollTargetLayout(isEnabled:)();
  v146[1](v28, v49);
  unint64_t v50 = (void (**)(char *, void))*((void *)v48 + 2);
  uint64_t v51 = v151;
  char v147 = (char *)v48 + 16;
  uint64_t v146 = v50;
  ((void (*)(char *, void *, uint64_t))v50)(v151, v46, v45);
  uint64_t v52 = v131;
  uint64_t v53 = v130;
  uint64_t v54 = v134;
  (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v130, v145, v134);
  uint64_t v55 = *((unsigned __int8 *)v48 + 80);
  uint64_t v56 = (v55 + 56) & ~v55;
  uint64_t v57 = v55 | 7;
  uint64_t v58 = *(unsigned __int8 *)(v52 + 80);
  uint64_t v59 = v52;
  v144 += v56;
  uint64_t v60 = (v144 + v58) & ~v58;
  uint64_t v143 = v57;
  double v61 = (char *)swift_allocObject();
  double v62 = v153;
  *((void *)v61 + 2) = v47;
  *((void *)v61 + 3) = v62;
  uint64_t v63 = v155;
  *((void *)v61 + 4) = v154;
  *((void *)v61 + 5) = v63;
  *((void *)v61 + 6) = v152;
  uint64_t v145 = v56;
  uint64_t v64 = &v61[v56];
  char v65 = (void (*)(char *, char *, uint64_t))*((void *)v48 + 4);
  v65(v64, v51, v45);
  uint64_t v66 = v116;
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(&v61[v60], v53, v54);
  uint64_t v67 = v117;
  uint64_t v68 = v142;
  View.onAppear(perform:)();
  swift_release();
  uint64_t v69 = v150;
  (*(void (**)(char *, uint64_t))(v118 + 8))(v68, v67);
  unsigned __int8 v70 = (void *)v69[2];
  if (v70)
  {
    uint64_t v71 = v69[3];
    uint64_t v167 = v69[1];
    id v168 = v70;
    uint64_t v169 = v71;
    swift_retain();
    swift_retain();
    sub_100063814(&qword_1010CD1A8);
    Binding.wrappedValue.getter();
    swift_release();
    swift_release();
    uint64_t v72 = v162;
  }
  else
  {
    uint64_t v72 = 0;
  }
  uint64_t v167 = v72;
  LOBYTE(v168) = v70 == 0;
  uint64_t v73 = v151;
  ((void (*)(char *, void *, uint64_t))v146)(v151, v69, v45);
  uint64_t v74 = (void *)swift_allocObject();
  uint64_t v75 = v153;
  v74[2] = v149;
  v74[3] = v75;
  uint64_t v76 = v155;
  v74[4] = v154;
  v74[5] = v76;
  uint64_t v77 = (char *)v74 + v145;
  uint64_t v78 = v152;
  v74[6] = v152;
  v65(v77, v73, v45);
  uint64_t v79 = v125;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v66, v79);
  uint64_t v80 = (char *)v69 + *(int *)(v45 + 64);
  uint64_t v81 = v45;
  uint64_t v82 = v138;
  char v83 = v137;
  uint64_t v84 = v139;
  (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v137, v80, v139);
  uint64_t v85 = v140;
  uint64_t v86 = *(void *)(v140 - 8);
  uint64_t v87 = 1;
  int v88 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v86 + 48))(v83, 1, v140);
  uint64_t v123 = v65;
  if (v88 == 1)
  {
    uint64_t v89 = v111;
    uint64_t v90 = v110;
    uint64_t v91 = v109;
    uint64_t v92 = v84;
  }
  else
  {
    uint64_t v91 = v109;
    Binding.wrappedValue.getter();
    uint64_t v87 = 0;
    uint64_t v82 = v86;
    uint64_t v92 = v85;
    uint64_t v89 = v111;
    uint64_t v90 = v110;
  }
  uint64_t v93 = v149;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v92);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v91, v87, 1, v93);
  char v94 = v151;
  ((void (*)(char *, void *, uint64_t))v146)(v151, v150, v81);
  uint64_t v95 = (void *)swift_allocObject();
  uint64_t v96 = v153;
  v95[2] = v93;
  v95[3] = v96;
  uint64_t v97 = v155;
  v95[4] = v154;
  v95[5] = v97;
  uint64_t v98 = (char *)v95 + v145;
  v95[6] = v78;
  v123(v98, v94, v81);
  uint64_t v99 = v127;
  uint64_t v100 = v136;
  uint64_t v101 = v148;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v141 + 8))(v91, v90);
  (*(void (**)(char *, uint64_t))(v135 + 8))(v101, v100);
  uint64_t v102 = v132;
  uint64_t v103 = *(void (**)(char *, char *, uint64_t))(v132 + 16);
  uint64_t v104 = v128;
  uint64_t v105 = v133;
  v103(v128, v99, v133);
  uint64_t v106 = *(void (**)(char *, uint64_t))(v102 + 8);
  v106(v99, v105);
  v103(v89, v104, v105);
  return ((uint64_t (*)(char *, uint64_t))v106)(v104, v105);
}

uint64_t sub_100B8FF08@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v51 = a4;
  double v62 = a7;
  *(void *)&long long v76 = a2;
  *((void *)&v76 + 1) = a3;
  uint64_t v45 = a3;
  uint64_t v77 = a4;
  uint64_t v78 = a5;
  uint64_t v79 = a6;
  uint64_t v58 = type metadata accessor for CarouselView();
  uint64_t v50 = *(void *)(v58 - 8);
  uint64_t v52 = *(void *)(v50 + 64);
  __chkstk_darwin();
  uint64_t v47 = (char *)&v43 - v12;
  swift_getTupleTypeMetadata2();
  uint64_t v13 = type metadata accessor for Array();
  uint64_t v59 = v13;
  *(void *)&long long v76 = a3;
  *((void *)&v76 + 1) = &type metadata for Int;
  uint64_t v77 = a6;
  uint64_t v78 = &protocol witness table for Int;
  uint64_t v14 = type metadata accessor for IDView();
  uint64_t v55 = v14;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v76 = v14;
  *((void *)&v76 + 1) = WitnessTable;
  uint64_t v53 = &opaque type descriptor for <<opaque return type of View.onTapGesture(count:perform:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v57 = OpaqueTypeMetadata2;
  uint64_t v56 = swift_getWitnessTable();
  *(void *)&long long v76 = v13;
  *((void *)&v76 + 1) = a2;
  uint64_t v16 = a2;
  uint64_t v77 = OpaqueTypeMetadata2;
  uint64_t v78 = (void *)v56;
  uint64_t v79 = (uint64_t)a5;
  uint64_t v61 = type metadata accessor for ForEach();
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin();
  uint64_t v48 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v49 = (char *)&v43 - v18;
  *(void *)&long long v74 = *a1;
  uint64_t v19 = v74;
  uint64_t v20 = type metadata accessor for Array();
  swift_getWitnessTable();
  RandomAccessCollection<>.indices.getter();
  long long v69 = v76;
  uint64_t v73 = v19;
  uint64_t v21 = sub_100063814(&qword_1010CD188);
  unint64_t v22 = sub_100B97568();
  uint64_t v71 = &protocol witness table for Int;
  unint64_t v72 = v22;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = swift_getWitnessTable();
  zip<A, B>(_:_:)();
  long long v69 = v74;
  uint64_t v70 = v75;
  *(void *)&long long v76 = v21;
  *((void *)&v76 + 1) = v20;
  uint64_t v77 = v23;
  uint64_t v78 = (void *)v24;
  type metadata accessor for Zip2Sequence();
  swift_getWitnessTable();
  *(void *)&long long v74 = Array.init<A>(_:)();
  uint64_t v44 = v16;
  uint64_t v25 = v45;
  uint64_t v63 = v16;
  uint64_t v64 = v45;
  uint64_t v26 = v51;
  uint64_t v65 = v51;
  uint64_t v66 = a5;
  uint64_t v27 = a6;
  uint64_t v67 = a6;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = v50;
  uint64_t v29 = v47;
  uint64_t v30 = a1;
  uint64_t v31 = v58;
  (*(void (**)(char *, void *, uint64_t))(v50 + 16))(v47, v30, v58);
  unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v33 = (char *)swift_allocObject();
  *((void *)v33 + 2) = v16;
  *((void *)v33 + 3) = v25;
  *((void *)v33 + 4) = v26;
  *((void *)v33 + 5) = a5;
  *((void *)v33 + 6) = v27;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v33[v32], v29, v31);
  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = v44;
  void v34[3] = v25;
  v34[4] = v26;
  v34[5] = a5;
  v34[6] = v27;
  v34[7] = sub_100B98240;
  v34[8] = v33;
  *(void *)&long long v76 = v55;
  *((void *)&v76 + 1) = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = v48;
  ForEach<>.init(_:id:content:)();
  uint64_t v68 = OpaqueTypeConformance2;
  uint64_t v36 = v61;
  swift_getWitnessTable();
  uint64_t v37 = v60;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  uint64_t v39 = v49;
  v38(v49, v35, v36);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v37 + 8);
  v40(v35, v36);
  v38(v62, v39, v36);
  return ((uint64_t (*)(char *, uint64_t))v40)(v39, v36);
}

uint64_t sub_100B90524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v52 = a6;
  uint64_t v53 = a7;
  uint64_t v51 = a4;
  uint64_t v46 = a3;
  uint64_t v47 = a2;
  uint64_t v54 = a9;
  uint64_t v55 = a1;
  uint64_t v56 = a4;
  uint64_t v57 = a5;
  uint64_t v58 = a6;
  uint64_t v59 = a7;
  uint64_t v60 = a8;
  uint64_t v11 = type metadata accessor for CarouselView();
  uint64_t v48 = *(void *)(v11 - 8);
  uint64_t v49 = *(void *)(v48 + 64);
  __chkstk_darwin();
  uint64_t v45 = (char *)&v38 - v12;
  uint64_t v42 = *((void *)a5 - 1);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = (uint64_t)a5;
  uint64_t v57 = &type metadata for Int;
  uint64_t v58 = a8;
  uint64_t v59 = &protocol witness table for Int;
  uint64_t v39 = a8;
  uint64_t v15 = type metadata accessor for IDView();
  uint64_t v43 = v15;
  uint64_t v50 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v40 = (char *)&v38 - v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v56 = v15;
  uint64_t v57 = (void *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v18 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v21 = __chkstk_darwin();
  uint64_t v41 = (char *)&v38 - v22;
  uint64_t v23 = v46;
  (*(void (**)(uint64_t, __n128))(v46 + *(int *)(v11 + 76)))(v47, v21);
  uint64_t v56 = v55;
  View.id<A>(_:)();
  (*(void (**)(char *, void *))(v42 + 8))(v14, a5);
  uint64_t v24 = v48;
  uint64_t v25 = v45;
  uint64_t v26 = v23;
  uint64_t v27 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v45, v26, v11);
  unint64_t v28 = (*(unsigned __int8 *)(v24 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  unint64_t v29 = (v49 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = (char *)swift_allocObject();
  *((void *)v30 + 2) = v51;
  *((void *)v30 + 3) = a5;
  uint64_t v31 = v53;
  *((void *)v30 + 4) = v52;
  *((void *)v30 + 5) = v31;
  *((void *)v30 + 6) = v39;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v30[v28], v25, v27);
  *(void *)&v30[v29] = v55;
  uint64_t v32 = v43;
  uint64_t v33 = v40;
  View.onTapGesture(count:perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v33, v32);
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  uint64_t v35 = v41;
  v34(v41, v20, OpaqueTypeMetadata2);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v18 + 8);
  v36(v20, OpaqueTypeMetadata2);
  v34(v54, v35, OpaqueTypeMetadata2);
  return ((uint64_t (*)(char *, uint64_t))v36)(v35, OpaqueTypeMetadata2);
}

uint64_t sub_100B909BC(uint64_t a1, char a2)
{
  if (a2) {
    static Animation.default.getter();
  }
  __chkstk_darwin();
  withAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t sub_100B90A68()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t sub_100B90AE8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v75 = a2;
  uint64_t v70 = *(void *)(a3 - 8);
  __chkstk_darwin();
  long long v69 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Binding();
  uint64_t v73 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v67 = (uint64_t *)((char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v71 = (char *)&v63 - v16;
  uint64_t v72 = a3;
  uint64_t v77 = a3;
  uint64_t v78 = a4;
  uint64_t v79 = a5;
  uint64_t v80 = a6;
  uint64_t v68 = a6;
  uint64_t v81 = a7;
  uint64_t v17 = type metadata accessor for CarouselView();
  uint64_t v65 = *(void *)(v17 - 8);
  __chkstk_darwin();
  uint64_t v63 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v64 = (char *)&v63 - v19;
  sub_10006389C((uint64_t *)&unk_1010CD1C0);
  uint64_t v74 = v14;
  uint64_t v20 = type metadata accessor for Optional();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v66 = *(void *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin();
  uint64_t v23 = (uint64_t *)((char *)&v63 - v22);
  sub_100063814(&qword_1010CD030);
  __chkstk_darwin();
  uint64_t v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v27 = (char *)&v63 - v26;
  uint64_t v28 = type metadata accessor for ScrollViewProxy();
  uint64_t v29 = *(void *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v27, v75, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v27, 0, 1, v28);
  sub_10006CAB8((uint64_t)v27, (uint64_t)v25, &qword_1010CD030);
  sub_100063814(&qword_1010CD180);
  State.wrappedValue.setter();
  sub_1000637B8((uint64_t)v27, &qword_1010CD030);
  uint64_t v31 = a1[1];
  uint64_t v30 = a1[2];
  uint64_t v32 = a1[3];
  uint64_t v75 = v17;
  uint64_t v33 = a1;
  uint64_t v34 = (char *)a1 + *(int *)(v17 + 64);
  uint64_t v35 = (char *)v23 + *(int *)(TupleTypeMetadata2 + 48);
  *uint64_t v23 = v31;
  v23[1] = v30;
  long long v23[2] = v32;
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v35, v34, v20);
  if (v30)
  {
    uint64_t v37 = v73;
    uint64_t v36 = v74;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v35, 1, v74) == 1)
    {
      uint64_t v77 = v31;
      uint64_t v78 = v30;
      uint64_t v79 = v32;
      sub_100B82D78(v31, v30);
      swift_retain();
      swift_retain();
      sub_100063814(&qword_1010CD1A8);
      Binding.wrappedValue.getter();
      uint64_t v38 = v76;
      uint64_t v39 = v64;
      uint64_t v40 = v65;
      uint64_t v41 = *(void (**)(char *, uint64_t *, uint64_t))(v65 + 16);
      uint64_t v42 = v33;
      v41(v64, v33, v75);
      if (v38 < 0)
      {
        uint64_t v58 = *(void (**)(char *, uint64_t))(v40 + 8);
        uint64_t v59 = v39;
        uint64_t v60 = v75;
        v58(v59, v75);
        uint64_t v61 = v63;
        v41(v63, v42, v60);
        v58(v61, v75);
      }
      else
      {
        uint64_t v43 = Array.count.getter();
        uint64_t v44 = v39;
        uint64_t v45 = v43;
        uint64_t v46 = *(void (**)(char *, uint64_t))(v40 + 8);
        v46(v44, v75);
        if (v38 >= v45)
        {
          double v62 = v63;
          v41(v63, v33, v75);
          if (!v38) {
            Array.count.getter();
          }
          v46(v62, v75);
        }
        else
        {
          sub_100B909BC(v38, 1);
        }
      }
      swift_release();
      swift_release();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v71, v35, v36);
      uint64_t v67 = v33;
      uint64_t v76 = *v33;
      sub_100B82D78(v31, v30);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v52 = v69;
      Binding.wrappedValue.getter();
      uint64_t v53 = v72;
      type metadata accessor for Array();
      swift_getWitnessTable();
      Collection<>.firstIndex(of:)();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v52, v53);
      swift_bridgeObjectRelease();
      if (v78 != 1)
      {
        uint64_t v54 = v77;
        uint64_t v77 = v31;
        uint64_t v78 = v30;
        uint64_t v79 = v32;
        sub_100063814(&qword_1010CD1A8);
        Binding.wrappedValue.getter();
        if (v54 == v76) {
          sub_100B909BC(v54, 1);
        }
      }
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v71, v36);
    }
  }
  else
  {
    uint64_t v48 = v66;
    uint64_t v47 = (char *)v67;
    uint64_t v50 = v73;
    uint64_t v49 = v74;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v35, 1, v74) == 1) {
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v48 + 8))(v23, TupleTypeMetadata2);
    }
    uint64_t v55 = v47;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v35, v49);
    uint64_t v76 = *v33;
    swift_bridgeObjectRetain();
    uint64_t v56 = v69;
    Binding.wrappedValue.getter();
    uint64_t v57 = v72;
    type metadata accessor for Array();
    swift_getWitnessTable();
    Collection<>.firstIndex(of:)();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v56, v57);
    swift_bridgeObjectRelease();
    if (v78 != 1) {
      sub_100B909BC(v77, 1);
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v55, v49);
  }
  return sub_100AB7500(*v23, v23[1]);
}

void sub_100B91384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((*(unsigned char *)(a2 + 8) & 1) == 0)
  {
    uint64_t v4 = *(void *)a2;
    uint64_t v5 = type metadata accessor for CarouselView();
    sub_100063814(&qword_1010CD1A0);
    State.wrappedValue.getter();
    if (v4 != v6) {
      sub_100B909BC(v4, *(unsigned char *)(a3 + *(int *)(v5 + 68)));
    }
  }
}

uint64_t sub_100B91424(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v24 = a6;
  uint64_t v25 = a8;
  uint64_t v13 = type metadata accessor for Optional();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = *(void *)(a4 - 8);
  __n128 v18 = __chkstk_darwin();
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v16, a2, v13, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, a4) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v16, a4);
  uint64_t v30 = *a3;
  type metadata accessor for Array();
  swift_getWitnessTable();
  Collection<>.firstIndex(of:)();
  if (BYTE8(v26) != 1)
  {
    uint64_t v22 = v26;
    *(void *)&long long v26 = a4;
    *((void *)&v26 + 1) = a5;
    uint64_t v27 = v24;
    uint64_t v28 = a7;
    uint64_t v29 = v25;
    uint64_t v23 = type metadata accessor for CarouselView();
    long long v26 = *(_OWORD *)((char *)a3 + *(int *)(v23 + 92));
    sub_100063814(&qword_1010CD1A0);
    State.wrappedValue.getter();
    if (v22 != v30) {
      sub_100B909BC(v22, *((unsigned char *)a3 + *(int *)(v23 + 68)));
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, a4);
}

uint64_t sub_100B916CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = type metadata accessor for SafeAreaPaddingModifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  if ((a3 & 1) == 0) {
    EdgeInsets.init(_all:)();
  }
  v13[1] = v8;
  void v13[2] = v9;
  void v13[3] = v10;
  _OWORD v13[4] = v11;
  char v14 = a3 & 1;
  SafeAreaPaddingModifier.init(edges:insets:)();
  View.modifier<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100B9180C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, double *a7@<X8>)
{
  v22[1] = a1;
  uint64_t v23 = a7;
  uint64_t v12 = type metadata accessor for LayoutDirection();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  ScrollGeometry.contentOffset.getter();
  double v17 = v16;
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  type metadata accessor for CarouselView();
  sub_100B6E47C((uint64_t)v15);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  if (v18 == enum case for LayoutDirection.leftToRight(_:))
  {
    uint64_t result = ScrollGeometry.contentInsets.getter();
    double v17 = v17 + v20;
  }
  else if (v18 == enum case for LayoutDirection.rightToLeft(_:))
  {
    uint64_t result = ScrollGeometry.contentInsets.getter();
    double v17 = v17 - v21;
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  *uint64_t v23 = v17;
  return result;
}

uint64_t sub_100B919A8(uint64_t a1, double *a2, uint64_t a3)
{
  double v4 = *a2;
  uint64_t result = type metadata accessor for CarouselView();
  double v6 = v4 / *(double *)(a3 + *(int *)(result + 100));
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v6 < 9.22337204e18) {
    return sub_100B91A4C((uint64_t)v6, result);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100B91A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v34 = type metadata accessor for Binding();
  uint64_t v7 = type metadata accessor for Optional();
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  __chkstk_darwin();
  uint64_t v31 = (char *)v28 - v8;
  uint64_t v30 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v35 = *(void *)v2;
  type metadata accessor for Array();
  swift_getWitnessTable();
  uint64_t result = Collection.isEmpty.getter();
  if (result) {
    return result;
  }
  uint64_t result = Array.count.getter();
  uint64_t v12 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v12 < 0)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (v12 >= (a1 & ~(a1 >> 63))) {
    uint64_t v13 = a1 & ~(a1 >> 63);
  }
  else {
    uint64_t v13 = result - 1;
  }
  uint64_t v14 = (long long *)&v2[*(int *)(a2 + 92)];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  uint64_t v29 = v14;
  *(void *)&long long v35 = v16;
  *((void *)&v35 + 1) = v15;
  uint64_t v17 = sub_100063814(&qword_1010CD1A0);
  uint64_t result = State.wrappedValue.getter();
  if (v13 != v37)
  {
    *(void *)&long long v35 = v16;
    *((void *)&v35 + 1) = v15;
    uint64_t v37 = v13;
    State.wrappedValue.setter();
    int v18 = &v2[*(int *)(a2 + 88)];
    uint64_t v19 = *(void (**)(void, char *))v18;
    if (*(void *)v18)
    {
      v28[1] = *((void *)v18 + 1);
      *(void *)&long long v35 = v16;
      *((void *)&v35 + 1) = v15;
      State.wrappedValue.getter();
      v28[0] = v37;
      *(void *)&long long v35 = v16;
      *((void *)&v35 + 1) = v15;
      State.wrappedValue.getter();
      Array.subscript.getter();
      v19(v28[0], v10);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v6);
    }
    uint64_t v30 = v17;
    uint64_t v20 = *((void *)v2 + 2);
    if (v20)
    {
      uint64_t v21 = *((void *)v2 + 3);
      uint64_t v22 = *((void *)v2 + 1);
      *(void *)&long long v35 = v16;
      *((void *)&v35 + 1) = v15;
      swift_retain();
      swift_retain();
      State.wrappedValue.getter();
      *(void *)&long long v35 = v22;
      *((void *)&v35 + 1) = v20;
      uint64_t v36 = v21;
      sub_100063814(&qword_1010CD1A8);
      Binding.wrappedValue.setter();
      swift_release();
      swift_release();
    }
    uint64_t v24 = v31;
    uint64_t v23 = v32;
    uint64_t v25 = v33;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v31, &v3[*(int *)(a2 + 64)], v33);
    uint64_t v26 = v34;
    uint64_t v27 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v34) != 1)
    {
      long long v35 = *v29;
      State.wrappedValue.getter();
      Array.subscript.getter();
      Binding.wrappedValue.setter();
      uint64_t v23 = v27;
      uint64_t v25 = v26;
    }
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v24, v25);
  }
  return result;
}

uint64_t sub_100B91E20@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v51 = a6;
  unint64_t v50 = a4;
  uint64_t v48 = a3;
  uint64_t v46 = a1;
  uint64_t v60 = a7;
  *(void *)&long long v74 = a2;
  *((void *)&v74 + 1) = a3;
  unint64_t v75 = a4;
  uint64_t v76 = a5;
  uint64_t v77 = a6;
  uint64_t v52 = type metadata accessor for CarouselView();
  uint64_t v10 = *(void *)(v52 - 8);
  __chkstk_darwin();
  uint64_t v49 = (char *)&v45 - v11;
  swift_getTupleTypeMetadata2();
  uint64_t v12 = type metadata accessor for Array();
  uint64_t v58 = v12;
  uint64_t v13 = sub_10006389C(&qword_1010CD058);
  uint64_t v57 = v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v74 = v12;
  *((void *)&v74 + 1) = a2;
  unint64_t v75 = v13;
  uint64_t v76 = WitnessTable;
  uint64_t v77 = a5;
  uint64_t v53 = type metadata accessor for ForEach();
  uint64_t v59 = *(void *)(v53 - 8);
  __chkstk_darwin();
  uint64_t v54 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v55 = (char *)&v45 - v15;
  uint64_t v16 = *a1;
  *(void *)&long long v72 = v16;
  uint64_t v17 = type metadata accessor for Array();
  swift_getWitnessTable();
  RandomAccessCollection<>.indices.getter();
  long long v67 = v74;
  uint64_t v71 = v16;
  uint64_t v18 = sub_100063814(&qword_1010CD188);
  unint64_t v19 = sub_100B97568();
  long long v69 = &protocol witness table for Int;
  unint64_t v70 = v19;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = swift_getWitnessTable();
  zip<A, B>(_:_:)();
  long long v67 = v72;
  uint64_t v68 = v73;
  *(void *)&long long v74 = v18;
  *((void *)&v74 + 1) = v17;
  unint64_t v75 = v20;
  uint64_t v76 = v21;
  type metadata accessor for Zip2Sequence();
  swift_getWitnessTable();
  *(void *)&long long v72 = Array.init<A>(_:)();
  uint64_t v22 = v48;
  uint64_t v61 = a2;
  uint64_t v62 = v48;
  unint64_t v23 = v50;
  unint64_t v63 = v50;
  uint64_t v64 = a5;
  uint64_t v24 = a5;
  uint64_t v25 = v51;
  uint64_t v65 = v51;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = v49;
  uint64_t v27 = v52;
  (*(void (**)(char *, void *, uint64_t))(v10 + 16))(v49, v46, v52);
  unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v29 = (char *)swift_allocObject();
  *((void *)v29 + 2) = a2;
  *((void *)v29 + 3) = v22;
  *((void *)v29 + 4) = v23;
  *((void *)v29 + 5) = v24;
  *((void *)v29 + 6) = v25;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v29[v28], v26, v27);
  uint64_t v30 = (void *)swift_allocObject();
  long long v30[2] = a2;
  v30[3] = v22;
  v30[4] = v23;
  void v30[5] = v24;
  v30[6] = v25;
  v30[7] = sub_100B975C0;
  v30[8] = v29;
  uint64_t v31 = sub_10006389C(&qword_1010CD060);
  uint64_t v32 = sub_10006389C(&qword_1010CD068);
  uint64_t v33 = type metadata accessor for AutomaticHoverEffect();
  unint64_t v34 = sub_100B93604();
  uint64_t v35 = sub_100B97F34(qword_1010CD0E8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  *(void *)&long long v74 = v32;
  *((void *)&v74 + 1) = v33;
  unint64_t v75 = v34;
  uint64_t v76 = v35;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(void *)&long long v74 = v31;
  *((void *)&v74 + 1) = OpaqueTypeConformance2;
  uint64_t v44 = swift_getOpaqueTypeConformance2();
  uint64_t v37 = v54;
  ForEach<>.init(_:id:content:)();
  uint64_t v66 = v44;
  uint64_t v38 = v53;
  swift_getWitnessTable();
  uint64_t v39 = v59;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  uint64_t v41 = v55;
  v40(v55, v37, v38);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v39 + 8);
  v42(v37, v38);
  v40(v60, v41, v38);
  return ((uint64_t (*)(char *, uint64_t))v42)(v41, v38);
}

uint64_t sub_100B92438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  void (*v25)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  long long v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void v75[5];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  long long v69 = a1;
  uint64_t v65 = a8;
  uint64_t v76 = a3;
  uint64_t v77 = a4;
  uint64_t v78 = a5;
  uint64_t v79 = a6;
  uint64_t v80 = a7;
  unint64_t v70 = type metadata accessor for CarouselView();
  uint64_t v64 = *(void *)(v70 - 8);
  uint64_t v59 = *(void *)(v64 + 64);
  __chkstk_darwin();
  uint64_t v61 = (char *)&v49 - v14;
  uint64_t v60 = type metadata accessor for AutomaticHoverEffect();
  uint64_t v52 = *(void *)(v60 - 8);
  __chkstk_darwin();
  unint64_t v50 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CD080);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100063814(&qword_1010CD068);
  __chkstk_darwin();
  unint64_t v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100063814(&qword_1010CD060);
  uint64_t v57 = *(void *)(v58 - 8);
  __chkstk_darwin();
  uint64_t v55 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100063814(&qword_1010CD058);
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin();
  uint64_t v51 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a2;
  uint64_t v23 = a2;
  uint64_t v24 = v69;
  long long v67 = a4;
  uint64_t v62 = a6;
  unint64_t v63 = a7;
  sub_100B92B24(v23, v69, a3, a4, a5, a6, a7, (uint64_t)v17);
  uint64_t v25 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 8);
  uint64_t v66 = a3;
  uint64_t v68 = a5;
  v25(v75, a3, a5);
  sub_10003CABC((uint64_t)v75, (uint64_t)&v76, &qword_1010CD198);
  if (v76)
  {
    uint64_t v26 = v77;
    uint64_t v27 = v78;
    unint64_t v28 = v79;
    uint64_t v29 = v80;
    uint64_t v81 = v76;
    swift_retain();
    sub_1004FC8D8((uint64_t)&v81);
    uint64_t v82 = v26;
    sub_1004FC8D8((uint64_t)&v82);
    swift_release();
    char v83 = v28;
    sub_1004FC8D8((uint64_t)&v83);
    uint64_t v84 = v29;
    sub_1004FC8D8((uint64_t)&v84);
  }
  else
  {
    uint64_t v27 = static Animation.spring(response:dampingFraction:blendDuration:)();
  }
  uint64_t v30 = v22;
  uint64_t v71 = *(_OWORD *)(v22 + *(int *)(v70 + 92));
  sub_100063814(&qword_1010CD1A0);
  State.wrappedValue.getter();
  uint64_t v31 = v74 == v24;
  sub_10006CAB8((uint64_t)v17, (uint64_t)v19, &qword_1010CD080);
  uint64_t v32 = v56;
  uint64_t v33 = &v19[*(int *)(v56 + 36)];
  *(void *)uint64_t v33 = v27;
  v33[8] = v31;
  sub_1000637B8((uint64_t)v17, &qword_1010CD080);
  unint64_t v34 = v50;
  static CustomHoverEffect<>.automatic.getter();
  uint64_t v49 = sub_100B93604();
  uint64_t v35 = sub_100B97F34(qword_1010CD0E8, (void (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect);
  uint64_t v36 = v55;
  uint64_t v37 = v60;
  View.hoverEffect<A>(_:isEnabled:)();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v37);
  sub_1000637B8((uint64_t)v19, &qword_1010CD068);
  uint64_t v38 = v64;
  uint64_t v39 = v61;
  uint64_t v40 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v61, v30, v70);
  uint64_t v41 = (*(unsigned __int8 *)(v38 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v42 = (v59 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v43 = (char *)swift_allocObject();
  uint64_t v44 = v67;
  *((void *)v43 + 2) = v66;
  *((void *)v43 + 3) = v44;
  uint64_t v45 = v62;
  *((void *)v43 + 4) = v68;
  *((void *)v43 + 5) = v45;
  *((void *)v43 + 6) = v63;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v43[v41], v39, v40);
  *(void *)&v43[v42] = v69;
  *(void *)&uint64_t v71 = v32;
  *((void *)&v71 + 1) = v37;
  long long v72 = v49;
  uint64_t v73 = v35;
  swift_getOpaqueTypeConformance2();
  uint64_t v46 = v51;
  uint64_t v47 = v58;
  View.onTapGesture(count:perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v47);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v53 + 32))(v65, v46, v54);
}

uint64_t sub_100B92B24@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  void (*v23)(void *__return_ptr, uint64_t, uint64_t, __n128);
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  long long v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  long long v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void v62[5];
  long long v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void v68[5];
  uint64_t v69;

  uint64_t v52 = a7;
  uint64_t v51 = a6;
  *((void *)&v49 + 1) = a4;
  uint64_t v54 = a2;
  uint64_t v53 = a1;
  uint64_t v57 = a8;
  uint64_t v56 = sub_100063814(&qword_1010CD1B0);
  __chkstk_darwin();
  uint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100063814(&qword_1010CD1B8);
  uint64_t v16 = *(void *)(v46 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100063814(&qword_1010CD0A0);
  __chkstk_darwin();
  uint64_t v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v21 = __chkstk_darwin();
  uint64_t v47 = (uint64_t)v44 - v22;
  uint64_t v23 = *(void (**)(void *__return_ptr, uint64_t, uint64_t, __n128))(a5 + 8);
  *(void *)&uint64_t v49 = a3;
  unint64_t v50 = a5;
  v23(v62, a3, a5, v21);
  sub_10003CABC((uint64_t)v62, (uint64_t)v68, &qword_1010CD198);
  uint64_t v24 = v68[0];
  if (v68[0])
  {
    uint64_t v25 = v68[1];
    uint64_t v45 = v68[2];
    v44[0] = v68[3];
    uint64_t v48 = v68[4];
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)&unint64_t v63 = v24;
    *((void *)&v63 + 1) = KeyPath;
    uint64_t v64 = v25;
    v44[1] = v25;
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for DynamicTypeSize.large(_:), v12);
    swift_retain();
    swift_retain();
    sub_100063814((uint64_t *)&unk_1010CE050);
    sub_100B93868();
    View.dynamicTypeSize(_:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    swift_release();
    swift_release();
    swift_release();
    unint64_t v63 = v49;
    uint64_t v64 = v50;
    uint64_t v65 = v51;
    uint64_t v66 = v52;
    unint64_t v63 = *(_OWORD *)(v53 + *(int *)(type metadata accessor for CarouselView() + 92));
    sub_100063814(&qword_1010CD1A0);
    State.wrappedValue.getter();
    uint64_t v27 = v16;
    unint64_t v28 = v44[0];
    if ((void)v58 == v54) {
      uint64_t v29 = v44[0];
    }
    else {
      uint64_t v29 = v48;
    }
    swift_retain();
    uint64_t v30 = swift_getKeyPath();
    uint64_t v31 = v46;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v20, v18, v46);
    uint64_t v32 = (uint64_t *)&v20[*(int *)(v55 + 36)];
    *uint64_t v32 = v30;
    v32[1] = v29;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v31);
    uint64_t v33 = (uint64_t)v20;
    unint64_t v34 = v47;
    sub_10003CABC(v33, v47, &qword_1010CD0A0);
    sub_10006CAB8(v34, (uint64_t)v11, &qword_1010CD0A0);
    swift_storeEnumTagMultiPayload();
    sub_100063814(&qword_1010CD0B8);
    sub_100B93794();
    sub_100B93908();
    _ConditionalContent<>.init(storage:)();
    swift_release();
    swift_release();
    long long v69 = v45;
    sub_1004FC8D8((uint64_t)&v69);
    *(void *)&uint64_t v58 = v28;
    sub_1004FC8D8((uint64_t)&v58);
    *(void *)&unint64_t v63 = v48;
    sub_1004FC8D8((uint64_t)&v63);
    return sub_1000637B8(v34, &qword_1010CD0A0);
  }
  else
  {
    sub_100B974B0();
    sub_100B974B0();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v36 = v63;
    uint64_t v37 = BYTE8(v63);
    uint64_t v38 = v64;
    uint64_t v39 = v65;
    uint64_t v40 = v66;
    uint64_t v41 = v67;
    static Color.primary.getter();
    uint64_t v58 = v49;
    uint64_t v59 = v50;
    uint64_t v60 = v51;
    uint64_t v61 = v52;
    uint64_t v58 = *(_OWORD *)(v53 + *(int *)(type metadata accessor for CarouselView() + 92));
    sub_100063814(&qword_1010CD1A0);
    State.wrappedValue.getter();
    uint64_t v42 = Color.opacity(_:)();
    swift_release();
    uint64_t v43 = swift_getKeyPath();
    *(void *)uint64_t v11 = v36;
    v11[8] = v37;
    *((void *)v11 + 2) = v38;
    v11[24] = v39;
    *((void *)v11 + 4) = v40;
    *((void *)v11 + 5) = v41;
    *((void *)v11 + 6) = v43;
    *((void *)v11 + 7) = v42;
    swift_storeEnumTagMultiPayload();
    sub_100063814(&qword_1010CD0B8);
    sub_100B93794();
    sub_100B93908();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_100B931DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = type metadata accessor for ScrollViewProxy();
  uint64_t v24 = *(void *)(v14 - 8);
  __chkstk_darwin();
  uint64_t v23 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CD030);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v25 = a3;
  *((void *)&v25 + 1) = a4;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  uint64_t v18 = type metadata accessor for CarouselView();
  sub_100B91A4C(a2, v18);
  long long v25 = *(_OWORD *)(a1 + *(int *)(v18 + 92));
  sub_100063814(&qword_1010CD1A0);
  State.wrappedValue.getter();
  Int.seconds.getter(v29);
  uint64_t v19 = v24;
  sub_100063814(&qword_1010CD180);
  State.wrappedValue.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v14)) {
    return sub_1000637B8((uint64_t)v17, &qword_1010CD030);
  }
  __n128 v21 = v23;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v17, v14);
  sub_1000637B8((uint64_t)v17, &qword_1010CD030);
  static UnitPoint.leading.getter();
  ScrollViewProxy.scrollTo(rect:anchor:)();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v14);
}

uint64_t sub_100B93454()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_100B93478(uint64_t a1)
{
  type metadata accessor for LayoutDirection();
  __n128 v2 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, __n128))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  return EnvironmentValues.layoutDirection.setter();
}

unint64_t sub_100B93544()
{
  unint64_t result = qword_1010CD040;
  if (!qword_1010CD040)
  {
    sub_10006389C(&qword_1010CD038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CD040);
  }
  return result;
}

unint64_t sub_100B935B0()
{
  unint64_t result = qword_1010CD050;
  if (!qword_1010CD050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CD050);
  }
  return result;
}

unint64_t sub_100B93604()
{
  unint64_t result = qword_1010CD070;
  if (!qword_1010CD070)
  {
    sub_10006389C(&qword_1010CD068);
    sub_100B936A4();
    sub_100063858(&qword_1010CD0D8, &qword_1010CD0E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CD070);
  }
  return result;
}

unint64_t sub_100B936A4()
{
  unint64_t result = qword_1010CD078;
  if (!qword_1010CD078)
  {
    sub_10006389C(&qword_1010CD080);
    sub_100B93718();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CD078);
  }
  return result;
}

unint64_t sub_100B93718()
{
  unint64_t result = qword_1010CD088;
  if (!qword_1010CD088)
  {
    sub_10006389C(&qword_1010CD090);
    sub_100B93794();
    sub_100B93908();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CD088);
  }
  return result;
}

unint64_t sub_100B93794()
{
  unint64_t result = qword_1010CD098;
  if (!qword_1010CD098)
  {
    sub_10006389C(&qword_1010CD0A0);
    sub_10006389C((uint64_t *)&unk_1010CE050);
    sub_100B93868();
    swift_getOpaqueTypeConformance2();
    sub_100063858(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CD098);
  }
  return result;
}

unint64_t sub_100B93868()
{
  unint64_t result = qword_1010CD0A8;
  if (!qword_1010CD0A8)
  {
    sub_10006389C((uint64_t *)&unk_1010CE050);
    sub_100063858((unint64_t *)&unk_1010CE060, &qword_1010CB4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CD0A8);
  }
  return result;
}

unint64_t sub_100B93908()
{
  unint64_t result = qword_1010CD0B0;
  if (!qword_1010CD0B0)
  {
    sub_10006389C(&qword_1010CD0B8);
    sub_100B939A8();
    sub_100063858(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CD0B0);
  }
  return result;
}

unint64_t sub_100B939A8()
{
  unint64_t result = qword_1010CD0C0;
  if (!qword_1010CD0C0)
  {
    sub_10006389C(&qword_1010CD0C8);
    sub_100B93A24();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CD0C0);
  }
  return result;
}

unint64_t sub_100B93A24()
{
  unint64_t result = qword_1010CD0D0;
  if (!qword_1010CD0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CD0D0);
  }
  return result;
}

uint64_t sub_100B93A78()
{
  return sub_100B97948((uint64_t (*)(void, void, void, void, void, void))sub_100B8C698);
}

uint64_t sub_100B93A90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for PageIndicator()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for PageIndicator(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for PageIndicator(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PageIndicator(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for PageIndicator()
{
  return &type metadata for PageIndicator;
}

void sub_100B93CC4()
{
  type metadata accessor for Binding();
  type metadata accessor for Optional();
  if (v0 <= 0x3F)
  {
    sub_100B96BC8();
    if (v1 <= 0x3F)
    {
      sub_100B96C24();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_100B93E2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v81 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v81 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  int v82 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = type metadata accessor for ScrollViewProxy();
  uint64_t v10 = *(void *)(v9 - 8);
  int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v83 = v10;
  uint64_t v85 = v9;
  uint64_t v12 = v11 & 0xF8;
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v13 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v10 + 64) + 1;
  }
  uint64_t v14 = type metadata accessor for LayoutDirection();
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(_DWORD *)(v15 + 80);
  uint64_t v17 = v16 & 0xF8;
  uint64_t v18 = v17 | 7;
  if (*(void *)(v15 + 64) <= 8uLL) {
    uint64_t v19 = 8;
  }
  else {
    uint64_t v19 = *(void *)(*(void *)(v14 - 8) + 64);
  }
  uint64_t v20 = v12 | v18 | v6;
  uint64_t v21 = *a2;
  *a1 = *a2;
  if (v20 == 7 && ((v11 | v16 | v6) & 0x100000) == 0)
  {
    uint64_t v23 = v6 | 7;
    size_t v24 = ((v6 + 16) & ~(unint64_t)v6) + v8;
    if (v19
       + ((v17
         + 15
         + ((v13 + 7) & 0xFFFFFFFFFFFFFFF8)
         + 8
         + ((v12
           + 23
           + ((((((((((((v24 + ((v6 + 32) & ~v23)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                   + 23) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12 & 0xFFFFFFFFFFFFFFF8)) & ~v18)
       + 1 <= 0x18)
    {
      uint64_t v71 = v12 + 23;
      unint64_t v72 = ~v12 & 0xFFFFFFFFFFFFFFF8;
      uint64_t v73 = v16 & 0xF8 | 7;
      uint64_t v74 = v13 + 7;
      unint64_t v75 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
      uint64_t v76 = v17 + 15;
      size_t v77 = v13;
      uint64_t v78 = v19;
      uint64_t v79 = v15;
      uint64_t v80 = a1;
      uint64_t v70 = v14;
      uint64_t v25 = ~v23;
      unint64_t v26 = ((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v27 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v28 = *(void *)(v27 + 8);
      swift_bridgeObjectRetain();
      if (v28 < 0xFFFFFFFF)
      {
        long long v30 = *(_OWORD *)v27;
        *(void *)(v26 + 16) = *(void *)(v27 + 16);
        *(_OWORD *)unint64_t v26 = v30;
      }
      else
      {
        *(void *)unint64_t v26 = *(void *)v27;
        *(void *)(v26 + 8) = *(void *)(v27 + 8);
        *(void *)(v26 + 16) = *(void *)(v27 + 16);
        swift_retain();
        swift_retain();
      }
      uint64_t v31 = v83;
      uint64_t v32 = ~v7;
      uint64_t v33 = (void *)((v26 + v23 + 24) & v25);
      unint64_t v34 = (void *)((v27 + v23 + 24) & v25);
      uint64_t v35 = (uint64_t *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v82 < 0)
      {
        if ((*(unsigned int (**)(unint64_t))(v5 + 48))(((unint64_t)v35 + v7 + 8) & v32))
        {
LABEL_21:
          memcpy(v33, v34, v24);
          goto LABEL_24;
        }
      }
      else
      {
        uint64_t v36 = *v35;
        if ((unint64_t)*v35 >= 0xFFFFFFFF) {
          LODWORD(v36) = -1;
        }
        if (v36 != -1) {
          goto LABEL_21;
        }
      }
      *uint64_t v33 = *v34;
      uint64_t v37 = (void *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v37 = *v35;
      uint64_t v84 = ((unint64_t)v37 + v7 + 8) & v32;
      uint64_t v38 = *(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16);
      swift_retain();
      swift_retain();
      v38(v84, ((unint64_t)v35 + v7 + 8) & v32, v81);
LABEL_24:
      *((unsigned char *)v33 + v24) = *((unsigned char *)v34 + v24);
      unint64_t v39 = ((unint64_t)v33 + v24) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v40 = ((unint64_t)v34 + v24) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)(v39 + 8) = *(_OWORD *)(v40 + 8);
      uint64_t v41 = (void *)((v39 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v42 = (void *)((v40 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v43 = v42[1];
      *uint64_t v41 = *v42;
      v41[1] = v43;
      uint64_t v44 = (void *)(((unint64_t)v42 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v45 = (void *)(((unint64_t)v41 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v45 = *v44;
      uint64_t v46 = (void *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v47 = (void *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v47 = *v46;
      unint64_t v48 = ((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v49 = (unint64_t *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v50 = *v49;
      swift_retain();
      if (v50 < 0xFFFFFFFF)
      {
        *(_OWORD *)unint64_t v48 = *(_OWORD *)v49;
      }
      else
      {
        unint64_t v51 = v49[1];
        *(void *)unint64_t v48 = v50;
        *(void *)(v48 + 8) = v51;
        swift_retain();
      }
      uint64_t v52 = ~v73;
      uint64_t v53 = (void *)((v48 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v54 = (void *)(((unint64_t)v49 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v53 = *v54;
      v53[1] = v54[1];
      uint64_t v55 = (char *)(((unint64_t)v53 + v71) & v72);
      uint64_t v56 = (char *)(((unint64_t)v54 + v71) & v72);
      uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      swift_retain();
      if (v57(v56, 1, v85))
      {
        memcpy(v55, v56, v77);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v55, v56, v85);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v55, 0, 1, v85);
      }
      *(void *)((unint64_t)&v55[v74] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v56[v74] & 0xFFFFFFFFFFFFFFF8);
      *(void *)&v55[v75] = *(void *)&v56[v75];
      uint64_t v58 = (void *)((unint64_t)&v55[v75 + v76] & v52);
      uint64_t v59 = (unsigned __int8 *)((unint64_t)&v56[v75 + v76] & v52);
      unsigned int v60 = v59[v78];
      swift_retain();
      if (v60 < 2)
      {
        uint64_t v62 = v79;
        uint64_t v63 = v78;
LABEL_37:
        if (v60 != 1)
        {
LABEL_46:
          *uint64_t v58 = *(void *)v59;
          *((unsigned char *)v58 + v63) = 0;
          swift_retain();
          return v80;
        }
      }
      else
      {
        if (v78 <= 3) {
          uint64_t v61 = v78;
        }
        else {
          uint64_t v61 = 4;
        }
        uint64_t v62 = v79;
        uint64_t v63 = v78;
        switch(v61)
        {
          case 1:
            int v64 = *v59;
            break;
          case 2:
            int v64 = *(unsigned __int16 *)v59;
            break;
          case 3:
            int v64 = *(unsigned __int16 *)v59 | (v59[2] << 16);
            break;
          case 4:
            int v64 = *(_DWORD *)v59;
            break;
          default:
            goto LABEL_37;
        }
        int v66 = (v64 | ((v60 - 2) << (8 * v78))) + 2;
        int v67 = v64 + 2;
        if (v78 >= 4) {
          int v68 = v67;
        }
        else {
          int v68 = v66;
        }
        if (v68 != 1) {
          goto LABEL_46;
        }
      }
      uint64_t v65 = v63;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v62 + 16))(v58, v59, v70);
      *((unsigned char *)v58 + v65) = 1;
      return v80;
    }
  }
  uint64_t v29 = v21 + ((v20 + 16) & ~v20);
  swift_retain();
  return (uint64_t *)v29;
}

uint64_t sub_100B94440(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 15;
  swift_bridgeObjectRelease();
  unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL)
  {
    swift_release();
    swift_release();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + (v7 | 7) + 24) & ~(v7 | 7);
  uint64_t v9 = ~v7;
  uint64_t v10 = (v7 + 16) & ~v7;
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = (uint64_t *)((v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v6 + 84) & 0x80000000) != 0)
  {
    uint64_t v14 = v10 + v11;
    if (!(*(unsigned int (**)(unint64_t))(v6 + 48))(((unint64_t)v12 + v7 + 8) & v9))
    {
LABEL_7:
      swift_release();
      swift_release();
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)v12 + v7 + 8) & v9, v5);
    }
  }
  else
  {
    uint64_t v13 = *v12;
    if ((unint64_t)*v12 >= 0xFFFFFFFF) {
      LODWORD(v13) = -1;
    }
    uint64_t v14 = v10 + v11;
    if (v13 == -1) {
      goto LABEL_7;
    }
  }
  swift_release();
  uint64_t v15 = (void *)((((((((((v14 + v8) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v15 >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  swift_release();
  uint64_t v16 = type metadata accessor for ScrollViewProxy();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(_DWORD *)(v17 + 80) & 0xF8 | 7;
  unint64_t v19 = ((((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8) + v18 + 16) & ~v18;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v19, 1, v16)) {
    (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v19, v16);
  }
  if (*(_DWORD *)(v17 + 84)) {
    uint64_t v20 = *(void *)(v17 + 64);
  }
  else {
    uint64_t v20 = *(void *)(v17 + 64) + 1;
  }
  swift_release();
  uint64_t v21 = *(void *)(type metadata accessor for LayoutDirection() - 8);
  uint64_t v22 = *(_DWORD *)(v21 + 80) & 0xF8 | 7;
  uint64_t v23 = (unsigned __int8 *)((v19 + ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + v22 + 16) & ~v22);
  unint64_t v24 = *(void *)(v21 + 64);
  if (v24 <= 8) {
    unint64_t v24 = 8;
  }
  unsigned int v25 = v23[v24];
  unsigned int v26 = v25 - 2;
  if (v25 >= 2)
  {
    if (v24 <= 3) {
      uint64_t v27 = v24;
    }
    else {
      uint64_t v27 = 4;
    }
    switch(v27)
    {
      case 1:
        int v28 = *v23;
        goto LABEL_28;
      case 2:
        int v28 = *(unsigned __int16 *)v23;
        goto LABEL_28;
      case 3:
        int v28 = *(unsigned __int16 *)v23 | (v23[2] << 16);
        goto LABEL_28;
      case 4:
        int v28 = *(_DWORD *)v23;
LABEL_28:
        int v29 = (v28 | (v26 << (8 * v24))) + 2;
        unsigned int v25 = v28 + 2;
        if (v24 < 4) {
          unsigned int v25 = v29;
        }
        break;
      default:
        break;
    }
  }
  if (v25 == 1)
  {
    long long v30 = *(uint64_t (**)(void))(v21 + 8);
    return v30();
  }
  else
  {
    return swift_release();
  }
}

void *sub_100B94804(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v5 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)(v6 + 8);
  swift_bridgeObjectRetain();
  if (v7 < 0xFFFFFFFF)
  {
    long long v8 = *(_OWORD *)v6;
    *(void *)(v5 + 16) = *(void *)(v6 + 16);
    *(_OWORD *)unint64_t v5 = v8;
  }
  else
  {
    *(void *)unint64_t v5 = *(void *)v6;
    *(void *)(v5 + 8) = *(void *)(v6 + 8);
    *(void *)(v5 + 16) = *(void *)(v6 + 16);
    swift_retain();
    swift_retain();
  }
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (void *)((v5 + (v11 | 7) + 24) & ~(v11 | 7));
  uint64_t v13 = (void *)((v6 + (v11 | 7) + 24) & ~(v11 | 7));
  uint64_t v14 = ~v11;
  uint64_t v15 = (v11 + 16) & ~v11;
  uint64_t v16 = *(void *)(v10 + 64);
  uint64_t v17 = (uint64_t *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v10 + 84) & 0x80000000) != 0)
  {
    size_t v19 = v15 + v16;
    if ((*(unsigned int (**)(unint64_t))(v10 + 48))(((unint64_t)v17 + v11 + 8) & v14))
    {
LABEL_8:
      memcpy(v12, v13, v19);
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v18 = *v17;
    if ((unint64_t)*v17 >= 0xFFFFFFFF) {
      LODWORD(v18) = -1;
    }
    size_t v19 = v15 + v16;
    if (v18 != -1) {
      goto LABEL_8;
    }
  }
  *uint64_t v12 = *v13;
  uint64_t v20 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v20 = *v17;
  uint64_t v21 = v11 + 8;
  uint64_t v22 = ((unint64_t)v20 + v11 + 8) & v14;
  unint64_t v23 = ((unint64_t)v17 + v21) & v14;
  unint64_t v24 = *(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16);
  swift_retain();
  swift_retain();
  v24(v22, v23, v9);
LABEL_11:
  *((unsigned char *)v12 + v19) = *((unsigned char *)v13 + v19);
  unint64_t v25 = ((unint64_t)v12 + v19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((unint64_t)v13 + v19) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v25 + 8) = *(_OWORD *)(v26 + 8);
  uint64_t v27 = (void *)((v25 + 31) & 0xFFFFFFFFFFFFFFF8);
  int v28 = (void *)((v26 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  long long v30 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (void *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v31 = *v30;
  uint64_t v32 = (void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v33 = *v32;
  unint64_t v34 = ((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = (unint64_t *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v36 = *v35;
  swift_retain();
  if (v36 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
  }
  else
  {
    unint64_t v37 = v35[1];
    *(void *)unint64_t v34 = v36;
    *(void *)(v34 + 8) = v37;
    swift_retain();
  }
  uint64_t v38 = (void *)((v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v39 = (void *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  uint64_t v40 = type metadata accessor for ScrollViewProxy();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(_DWORD *)(v41 + 80) & 0xF8;
  uint64_t v43 = v42 + 23;
  unint64_t v44 = (unint64_t)v38 + v42 + 23;
  unint64_t v45 = ~v42 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v46 = v44 & v45;
  unint64_t v47 = ((unint64_t)v39 + v43) & v45;
  unint64_t v48 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v41 + 48);
  swift_retain();
  if (v48(v47, 1, v40))
  {
    int v49 = *(_DWORD *)(v41 + 84);
    uint64_t v50 = *(void *)(v41 + 64);
    if (v49) {
      size_t v51 = *(void *)(v41 + 64);
    }
    else {
      size_t v51 = v50 + 1;
    }
    memcpy((void *)v46, (const void *)v47, v51);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v41 + 16))(v46, v47, v40);
    uint64_t v53 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v41 + 56);
    uint64_t v52 = v41 + 56;
    v53(v46, 0, 1, v40);
    int v49 = *(_DWORD *)(v52 + 28);
    uint64_t v50 = *(void *)(v52 + 8);
  }
  if (v49) {
    uint64_t v54 = v50;
  }
  else {
    uint64_t v54 = v50 + 1;
  }
  *(void *)(((v46 | 7) + v54) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v47 | 7) + v54) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v55 = ((v54 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v56 = (void *)(v55 + v46);
  uint64_t v57 = (char *)(v55 + v47);
  *uint64_t v56 = *(void *)(v55 + v47);
  uint64_t v58 = type metadata accessor for LayoutDirection();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = *(_DWORD *)(v59 + 80) & 0xF8;
  uint64_t v61 = v60 + 15;
  unint64_t v62 = (unint64_t)v56 + v60 + 15;
  unint64_t v63 = ~v60 & 0xFFFFFFFFFFFFFFF8;
  int v64 = (void *)(v62 & v63);
  uint64_t v65 = (unsigned __int8 *)((unint64_t)&v57[v61] & v63);
  if (*(void *)(v59 + 64) <= 8uLL) {
    uint64_t v66 = 8;
  }
  else {
    uint64_t v66 = *(void *)(*(void *)(v58 - 8) + 64);
  }
  unsigned int v67 = v65[v66];
  swift_retain();
  if (v67 >= 2)
  {
    if (v66 <= 3) {
      uint64_t v68 = v66;
    }
    else {
      uint64_t v68 = 4;
    }
    switch(v68)
    {
      case 1:
        int v69 = *v65;
        goto LABEL_35;
      case 2:
        int v69 = *(unsigned __int16 *)v65;
        goto LABEL_35;
      case 3:
        int v69 = *(unsigned __int16 *)v65 | (v65[2] << 16);
        goto LABEL_35;
      case 4:
        int v69 = *(_DWORD *)v65;
LABEL_35:
        int v70 = (v69 | ((v67 - 2) << (8 * v66))) + 2;
        unsigned int v71 = v69 + 2;
        if (v66 >= 4) {
          unsigned int v67 = v71;
        }
        else {
          unsigned int v67 = v70;
        }
        break;
      default:
        break;
    }
  }
  if (v67 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v59 + 16))(v64, v65, v58);
    char v72 = 1;
  }
  else
  {
    void *v64 = *(void *)v65;
    swift_retain();
    char v72 = 0;
  }
  *((unsigned char *)v64 + v66) = v72;
  return a1;
}

void *sub_100B94D1C(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = (void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v6[1] < 0xFFFFFFFFuLL)
  {
    if (v8 >= 0xFFFFFFFF)
    {
      *unint64_t v6 = *v7;
      v6[1] = v7[1];
      _OWORD v6[2] = v7[2];
      swift_retain();
      swift_retain();
      goto LABEL_8;
    }
  }
  else
  {
    if (v8 >= 0xFFFFFFFF)
    {
      *unint64_t v6 = *v7;
      swift_retain();
      swift_release();
      v6[1] = v7[1];
      swift_retain();
      swift_release();
      _OWORD v6[2] = v7[2];
      goto LABEL_8;
    }
    swift_release();
    swift_release();
  }
  long long v9 = *(_OWORD *)v7;
  _OWORD v6[2] = v7[2];
  *(_OWORD *)unint64_t v6 = v9;
LABEL_8:
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (char *)v7 + (v12 | 7);
  uint64_t v14 = (void *)(((unint64_t)v6 + (v12 | 7) + 24) & ~(v12 | 7));
  uint64_t v15 = (void *)((unint64_t)(v13 + 24) & ~(v12 | 7));
  uint64_t v16 = *(unsigned int *)(v11 + 84);
  uint64_t v17 = *(void *)(v11 + 64);
  size_t v18 = ((v12 + 16) & ~v12) + v17;
  size_t v19 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v86 = ~v12;
  if ((v16 & 0x80000000) == 0)
  {
    uint64_t v20 = (uint64_t *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v21 = *v20;
    if ((unint64_t)*v20 >= 0xFFFFFFFF) {
      LODWORD(v21) = -1;
    }
    int v22 = v21 + 1;
    if (*v19 > 0xFFFFFFFEuLL) {
      goto LABEL_12;
    }
LABEL_15:
    if (v22) {
      goto LABEL_16;
    }
    *uint64_t v14 = *v15;
    *size_t v19 = *v20;
    unint64_t v25 = *(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16);
    swift_retain();
    swift_retain();
    v25(((unint64_t)v19 + v12 + 8) & v86, ((unint64_t)v20 + v12 + 8) & v86, v10);
    goto LABEL_19;
  }
  uint64_t v84 = v14;
  size_t v85 = ((v12 + 16) & ~v12) + v17;
  uint64_t v23 = (unint64_t)(v13 + 24) & ~(v12 | 7);
  unint64_t v24 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48);
  int v83 = v24(((unint64_t)v19 + v12 + 8) & ~v12, v16, v10);
  uint64_t v20 = (uint64_t *)((v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)v23;
  uint64_t v14 = v84;
  int v22 = v24(((unint64_t)v20 + v12 + 8) & ~v12, v16, v10);
  size_t v18 = v85;
  if (v83) {
    goto LABEL_15;
  }
LABEL_12:
  if (v22)
  {
    swift_release();
    swift_release();
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(((unint64_t)v19 + v12 + 8) & v86, v10);
LABEL_16:
    memcpy(v14, v15, v18);
    goto LABEL_19;
  }
  *uint64_t v14 = *v15;
  swift_retain();
  swift_release();
  *size_t v19 = *v20;
  swift_retain();
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 24))(((unint64_t)v19 + v12 + 8) & v86, ((unint64_t)v20 + v12 + 8) & v86, v10);
LABEL_19:
  *((unsigned char *)v14 + v18) = *((unsigned char *)v15 + v18);
  unint64_t v26 = ((unint64_t)v14 + v18) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((unint64_t)v15 + v18) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v26 + 8) = *(void *)(v27 + 8);
  *(void *)(v26 + 16) = *(void *)(v27 + 16);
  int v28 = (void *)((v26 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (void *)((v27 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = v29[1];
  *int v28 = *v29;
  v28[1] = v30;
  swift_retain();
  swift_release();
  uint64_t v31 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = (void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v31 = *v32;
  uint64_t v33 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v34 = (void *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v33 = *v34;
  uint64_t v35 = (void *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v36 = (unint64_t *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v37 = *v36;
  if (*v35 < 0xFFFFFFFFuLL)
  {
    if (v37 >= 0xFFFFFFFF)
    {
      unint64_t v39 = v36[1];
      *uint64_t v35 = v37;
      v35[1] = v39;
      swift_retain();
      goto LABEL_26;
    }
  }
  else
  {
    if (v37 >= 0xFFFFFFFF)
    {
      unint64_t v38 = v36[1];
      *uint64_t v35 = v37;
      v35[1] = v38;
      swift_retain();
      swift_release();
      goto LABEL_26;
    }
    swift_release();
  }
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
LABEL_26:
  uint64_t v40 = (void *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v41 = (void *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v40 = *v41;
  v40[1] = v41[1];
  swift_retain();
  swift_release();
  uint64_t v42 = type metadata accessor for ScrollViewProxy();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(_DWORD *)(v43 + 80) & 0xF8;
  uint64_t v45 = v44 + 23;
  unint64_t v46 = (unint64_t)v40 + v44 + 23;
  unint64_t v47 = ~v44 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = v46 & v47;
  unint64_t v49 = ((unint64_t)v41 + v45) & v47;
  uint64_t v50 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v43 + 48);
  int v51 = v50(v46 & v47, 1, v42);
  int v52 = v50(v49, 1, v42);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v43 + 16))(v48, v49, v42);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v43 + 56))(v48, 0, 1, v42);
      goto LABEL_37;
    }
    int v53 = *(_DWORD *)(v43 + 84);
    size_t v54 = *(void *)(v43 + 64);
  }
  else
  {
    if (!v52)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v43 + 24))(v48, v49, v42);
      goto LABEL_37;
    }
    (*(void (**)(unint64_t, uint64_t))(v43 + 8))(v48, v42);
    int v53 = *(_DWORD *)(v43 + 84);
    size_t v54 = *(void *)(v43 + 64);
  }
  if (v53) {
    size_t v55 = v54;
  }
  else {
    size_t v55 = v54 + 1;
  }
  memcpy((void *)v48, (const void *)v49, v55);
LABEL_37:
  if (*(_DWORD *)(v43 + 84)) {
    uint64_t v56 = *(void *)(v43 + 64);
  }
  else {
    uint64_t v56 = *(void *)(v43 + 64) + 1;
  }
  *(void *)(((v48 | 7) + v56) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v49 | 7) + v56) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  unint64_t v57 = ((v56 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v58 = (char *)(v57 + v48);
  uint64_t v59 = (char *)(v57 + v49);
  *(void *)(v57 + v48) = *(void *)(v57 + v49);
  uint64_t v60 = type metadata accessor for LayoutDirection();
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t v62 = *(_DWORD *)(v61 + 80) & 0xF8;
  uint64_t v63 = v62 + 15;
  int v64 = &v58[v62 + 15];
  unint64_t v65 = ~v62 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v66 = (unsigned __int8 *)((unint64_t)v64 & v65);
  unsigned int v67 = &v59[v63];
  uint64_t v68 = (unsigned __int8 *)((unint64_t)v67 & v65);
  if (((unint64_t)v64 & v65) != ((unint64_t)v67 & v65))
  {
    uint64_t v69 = v60;
    uint64_t v70 = *(void *)(v60 - 8);
    if (*(void *)(v61 + 64) <= 8uLL) {
      uint64_t v71 = 8;
    }
    else {
      uint64_t v71 = *(void *)(v61 + 64);
    }
    unsigned int v72 = v66[v71];
    unsigned int v73 = v72 - 2;
    if (v72 >= 2)
    {
      if (v71 <= 3) {
        uint64_t v74 = v71;
      }
      else {
        uint64_t v74 = 4;
      }
      switch(v74)
      {
        case 1:
          int v75 = *v66;
          goto LABEL_53;
        case 2:
          int v75 = *(unsigned __int16 *)v66;
          goto LABEL_53;
        case 3:
          int v75 = *(unsigned __int16 *)v66 | (v66[2] << 16);
          goto LABEL_53;
        case 4:
          int v75 = *(_DWORD *)v66;
LABEL_53:
          int v76 = (v75 | (v73 << (8 * v71))) + 2;
          unsigned int v72 = v75 + 2;
          if (v71 < 4) {
            unsigned int v72 = v76;
          }
          break;
        default:
          break;
      }
    }
    if (v72 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v70 + 8))(v66, v60);
    }
    else {
      swift_release();
    }
    unsigned int v77 = v68[v71];
    unsigned int v78 = v77 - 2;
    if (v77 >= 2)
    {
      if (v71 <= 3) {
        uint64_t v79 = v71;
      }
      else {
        uint64_t v79 = 4;
      }
      switch(v79)
      {
        case 1:
          int v80 = *v68;
          goto LABEL_67;
        case 2:
          int v80 = *(unsigned __int16 *)v68;
          goto LABEL_67;
        case 3:
          int v80 = *(unsigned __int16 *)v68 | (v68[2] << 16);
          goto LABEL_67;
        case 4:
          int v80 = *(_DWORD *)v68;
LABEL_67:
          int v81 = (v80 | (v78 << (8 * v71))) + 2;
          unsigned int v77 = v80 + 2;
          if (v71 < 4) {
            unsigned int v77 = v81;
          }
          break;
        default:
          break;
      }
    }
    if (v77 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v70 + 16))(v66, v68, v69);
      v66[v71] = 1;
    }
    else
    {
      *(void *)uint64_t v66 = *(void *)v68;
      v66[v71] = 0;
      swift_retain();
    }
  }
  return a1;
}

void *sub_100B95554(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v4 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v6 = *(_OWORD *)v5;
  *(void *)(v4 + 16) = *(void *)(v5 + 16);
  *(_OWORD *)unint64_t v4 = v6;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v4 + (v9 | 7) + 24) & ~(v9 | 7));
  uint64_t v11 = (void *)((v5 + (v9 | 7) + 24) & ~(v9 | 7));
  uint64_t v12 = ~v9;
  uint64_t v13 = (v9 + 16) & ~v9;
  uint64_t v14 = *(void *)(v8 + 64);
  uint64_t v15 = (uint64_t *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((*(_DWORD *)(v8 + 84) & 0x80000000) != 0)
  {
    size_t v17 = v13 + v14;
    if ((*(unsigned int (**)(unint64_t))(v8 + 48))(((unint64_t)v15 + v9 + 8) & v12))
    {
LABEL_5:
      memcpy(v10, v11, v17);
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v16 = *v15;
    if ((unint64_t)*v15 >= 0xFFFFFFFF) {
      LODWORD(v16) = -1;
    }
    size_t v17 = v13 + v14;
    if (v16 != -1) {
      goto LABEL_5;
    }
  }
  *uint64_t v10 = *v11;
  size_t v18 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *size_t v18 = *v15;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(((unint64_t)v18 + v9 + 8) & v12, ((unint64_t)v15 + v9 + 8) & v12, v7);
LABEL_8:
  *((unsigned char *)v10 + v17) = *((unsigned char *)v11 + v17);
  unint64_t v19 = ((unint64_t)v10 + v17) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = ((unint64_t)v11 + v17) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
  uint64_t v21 = (_OWORD *)((v19 + 31) & 0xFFFFFFFFFFFFFFF8);
  int v22 = (_OWORD *)((v20 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  uint64_t v23 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v23 = *v24;
  unint64_t v25 = (void *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v26 = (void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v25 = *v26;
  unint64_t v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v28 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v27 = *(_OWORD *)v28;
  }
  else
  {
    uint64_t v29 = *(void *)(v28 + 8);
    *(void *)unint64_t v27 = *(void *)v28;
    *(void *)(v27 + 8) = v29;
  }
  uint64_t v30 = (_OWORD *)((v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (_OWORD *)((v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v30 = *v31;
  uint64_t v32 = type metadata accessor for ScrollViewProxy();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(_DWORD *)(v33 + 80) & 0xF8;
  uint64_t v35 = v34 + 23;
  unint64_t v36 = (unint64_t)v30 + v34 + 23;
  unint64_t v37 = ~v34 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = v36 & v37;
  unint64_t v39 = ((unint64_t)v31 + v35) & v37;
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v33 + 48))(v39, 1, v32))
  {
    int v40 = *(_DWORD *)(v33 + 84);
    size_t v41 = *(void *)(v33 + 64);
    if (v40) {
      size_t v42 = v41;
    }
    else {
      size_t v42 = v41 + 1;
    }
    memcpy((void *)v38, (const void *)v39, v42);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v33 + 32))(v38, v39, v32);
    uint64_t v44 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v33 + 56);
    uint64_t v43 = v33 + 56;
    v44(v38, 0, 1, v32);
    int v40 = *(_DWORD *)(v43 + 28);
    size_t v41 = *(void *)(v43 + 8);
  }
  if (v40) {
    size_t v45 = v41;
  }
  else {
    size_t v45 = v41 + 1;
  }
  *(void *)(((v38 | 7) + v45) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v39 | 7) + v45) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v46 = ((v45 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v47 = (void *)(v46 + v38);
  unint64_t v48 = (void *)(v46 + v39);
  void *v47 = *v48;
  uint64_t v49 = *(void *)(type metadata accessor for LayoutDirection() - 8);
  uint64_t v50 = *(_DWORD *)(v49 + 80) & 0xF8;
  uint64_t v51 = v50 + 15;
  unint64_t v52 = (unint64_t)v47 + v50 + 15;
  unint64_t v53 = ~v50 & 0xFFFFFFFFFFFFFFF8;
  size_t v54 = (void *)(v52 & v53);
  size_t v55 = (unsigned __int8 *)(((unint64_t)v48 + v51) & v53);
  if (*(void *)(v49 + 64) <= 8uLL) {
    uint64_t v56 = 8;
  }
  else {
    uint64_t v56 = *(void *)(v49 + 64);
  }
  unsigned int v57 = v55[v56];
  unsigned int v58 = v57 - 2;
  if (v57 >= 2)
  {
    if (v56 <= 3) {
      uint64_t v59 = v56;
    }
    else {
      uint64_t v59 = 4;
    }
    switch(v59)
    {
      case 1:
        int v60 = *v55;
        goto LABEL_32;
      case 2:
        int v60 = *(unsigned __int16 *)v55;
        goto LABEL_32;
      case 3:
        int v60 = *(unsigned __int16 *)v55 | (v55[2] << 16);
        goto LABEL_32;
      case 4:
        int v60 = *(_DWORD *)v55;
LABEL_32:
        int v61 = (v60 | (v58 << (8 * v56))) + 2;
        unsigned int v57 = v60 + 2;
        if (v56 < 4) {
          unsigned int v57 = v61;
        }
        break;
      default:
        break;
    }
  }
  if (v57 == 1)
  {
    (*(void (**)(void *))(v49 + 32))(v54);
    char v62 = 1;
  }
  else
  {
    char v62 = 0;
    *size_t v54 = *(void *)v55;
  }
  *((unsigned char *)v54 + v56) = v62;
  return a1;
}

void *sub_100B959E4(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_bridgeObjectRelease();
  long long v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  if (v6[1] >= 0xFFFFFFFFuLL)
  {
    if (v7[1] >= 0xFFFFFFFFuLL)
    {
      *long long v6 = *v7;
      swift_release();
      v6[1] = v7[1];
      swift_release();
      _OWORD v6[2] = v7[2];
      goto LABEL_6;
    }
    swift_release();
    swift_release();
  }
  long long v8 = *(_OWORD *)v7;
  _OWORD v6[2] = v7[2];
  *(_OWORD *)long long v6 = v8;
LABEL_6:
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (char *)v7 + (v11 | 7);
  uint64_t v13 = (void *)(((unint64_t)v6 + (v11 | 7) + 24) & ~(v11 | 7));
  uint64_t v14 = (void *)((unint64_t)(v12 + 24) & ~(v11 | 7));
  uint64_t v15 = *(unsigned int *)(v10 + 84);
  uint64_t v16 = *(void *)(v10 + 64);
  size_t v17 = ((v11 + 16) & ~v11) + v16;
  size_t v18 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v86 = ~v11;
  if ((v15 & 0x80000000) == 0)
  {
    unint64_t v19 = (uint64_t *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = *v19;
    if ((unint64_t)*v19 >= 0xFFFFFFFF) {
      LODWORD(v20) = -1;
    }
    int v21 = v20 + 1;
    if (*v18 > 0xFFFFFFFEuLL) {
      goto LABEL_10;
    }
LABEL_13:
    if (v21) {
      goto LABEL_14;
    }
    *uint64_t v13 = *v14;
    *size_t v18 = *v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))(((unint64_t)v18 + v11 + 8) & v86, ((unint64_t)v19 + v11 + 8) & v86, v9);
    goto LABEL_17;
  }
  uint64_t v84 = v13;
  size_t v85 = ((v11 + 16) & ~v11) + v16;
  uint64_t v22 = (unint64_t)(v12 + 24) & ~(v11 | 7);
  uint64_t v23 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
  int v24 = v23(((unint64_t)v18 + v11 + 8) & ~v11, v15, v9);
  unint64_t v25 = v23;
  int v83 = v24;
  unint64_t v19 = (uint64_t *)((v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (void *)v22;
  uint64_t v13 = v84;
  int v21 = v25(((unint64_t)v19 + v11 + 8) & ~v11, v15, v9);
  size_t v17 = v85;
  if (v83) {
    goto LABEL_13;
  }
LABEL_10:
  if (v21)
  {
    swift_release();
    swift_release();
    (*(void (**)(unint64_t, uint64_t))(v10 + 8))(((unint64_t)v18 + v11 + 8) & v86, v9);
LABEL_14:
    memcpy(v13, v14, v17);
    goto LABEL_17;
  }
  *uint64_t v13 = *v14;
  swift_release();
  *size_t v18 = *v19;
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 40))(((unint64_t)v18 + v11 + 8) & v86, ((unint64_t)v19 + v11 + 8) & v86, v9);
LABEL_17:
  *((unsigned char *)v13 + v17) = *((unsigned char *)v14 + v17);
  unint64_t v26 = ((unint64_t)v13 + v17) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((unint64_t)v14 + v17) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v26 + 8) = *(void *)(v27 + 8);
  *(void *)(v26 + 16) = *(void *)(v27 + 16);
  unint64_t v28 = (_OWORD *)((v26 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = (v27 + 31) & 0xFFFFFFFFFFFFFFF8;
  long long v30 = *(_OWORD *)v29;
  v29 += 23;
  *unint64_t v28 = v30;
  swift_release();
  uint64_t v31 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v31 = *(void *)(v29 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v32 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = (void *)(((v29 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v32 = *v33;
  uint64_t v34 = (void *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v35 = (unint64_t *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v36 = *v35;
  if (*v34 < 0xFFFFFFFFuLL)
  {
    if (v36 >= 0xFFFFFFFF)
    {
      unint64_t v38 = v35[1];
      *uint64_t v34 = v36;
      v34[1] = v38;
      goto LABEL_24;
    }
  }
  else
  {
    if (v36 >= 0xFFFFFFFF)
    {
      unint64_t v37 = v35[1];
      *uint64_t v34 = v36;
      v34[1] = v37;
      swift_release();
      goto LABEL_24;
    }
    swift_release();
  }
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
LABEL_24:
  unint64_t v39 = (void *)(((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v40 = (void *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v39 = *v40;
  v39[1] = v40[1];
  swift_release();
  uint64_t v41 = type metadata accessor for ScrollViewProxy();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = *(_DWORD *)(v42 + 80) & 0xF8;
  uint64_t v44 = v43 + 23;
  unint64_t v45 = (unint64_t)v39 + v43 + 23;
  unint64_t v46 = ~v43 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = v45 & v46;
  unint64_t v48 = ((unint64_t)v40 + v44) & v46;
  uint64_t v49 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v42 + 48);
  int v50 = v49(v45 & v46, 1, v41);
  int v51 = v49(v48, 1, v41);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v42 + 32))(v47, v48, v41);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v42 + 56))(v47, 0, 1, v41);
      goto LABEL_35;
    }
    int v52 = *(_DWORD *)(v42 + 84);
    size_t v53 = *(void *)(v42 + 64);
  }
  else
  {
    if (!v51)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v42 + 40))(v47, v48, v41);
      goto LABEL_35;
    }
    (*(void (**)(unint64_t, uint64_t))(v42 + 8))(v47, v41);
    int v52 = *(_DWORD *)(v42 + 84);
    size_t v53 = *(void *)(v42 + 64);
  }
  if (v52) {
    size_t v54 = v53;
  }
  else {
    size_t v54 = v53 + 1;
  }
  memcpy((void *)v47, (const void *)v48, v54);
LABEL_35:
  if (*(_DWORD *)(v42 + 84)) {
    uint64_t v55 = *(void *)(v42 + 64);
  }
  else {
    uint64_t v55 = *(void *)(v42 + 64) + 1;
  }
  *(void *)(((v47 | 7) + v55) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v48 | 7) + v55) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v56 = ((v55 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unsigned int v57 = (char *)(v56 + v47);
  unsigned int v58 = (char *)(v56 + v48);
  *(void *)(v56 + v47) = *(void *)(v56 + v48);
  uint64_t v59 = type metadata accessor for LayoutDirection();
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = *(_DWORD *)(v60 + 80) & 0xF8;
  uint64_t v62 = v61 + 15;
  uint64_t v63 = &v57[v61 + 15];
  unint64_t v64 = ~v61 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = (unsigned __int8 *)((unint64_t)v63 & v64);
  uint64_t v66 = &v58[v62];
  unsigned int v67 = (unsigned __int8 *)((unint64_t)v66 & v64);
  if (((unint64_t)v63 & v64) != ((unint64_t)v66 & v64))
  {
    uint64_t v68 = v59;
    uint64_t v69 = *(void *)(v59 - 8);
    if (*(void *)(v60 + 64) <= 8uLL) {
      uint64_t v70 = 8;
    }
    else {
      uint64_t v70 = *(void *)(v60 + 64);
    }
    unsigned int v71 = v65[v70];
    unsigned int v72 = v71 - 2;
    if (v71 >= 2)
    {
      if (v70 <= 3) {
        uint64_t v73 = v70;
      }
      else {
        uint64_t v73 = 4;
      }
      switch(v73)
      {
        case 1:
          int v74 = *v65;
          goto LABEL_51;
        case 2:
          int v74 = *(unsigned __int16 *)v65;
          goto LABEL_51;
        case 3:
          int v74 = *(unsigned __int16 *)v65 | (v65[2] << 16);
          goto LABEL_51;
        case 4:
          int v74 = *(_DWORD *)v65;
LABEL_51:
          int v75 = (v74 | (v72 << (8 * v70))) + 2;
          unsigned int v71 = v74 + 2;
          if (v70 < 4) {
            unsigned int v71 = v75;
          }
          break;
        default:
          break;
      }
    }
    if (v71 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v69 + 8))(v65, v59);
    }
    else {
      swift_release();
    }
    unsigned int v76 = v67[v70];
    unsigned int v77 = v76 - 2;
    if (v76 >= 2)
    {
      if (v70 <= 3) {
        uint64_t v78 = v70;
      }
      else {
        uint64_t v78 = 4;
      }
      switch(v78)
      {
        case 1:
          int v79 = *v67;
          goto LABEL_65;
        case 2:
          int v79 = *(unsigned __int16 *)v67;
          goto LABEL_65;
        case 3:
          int v79 = *(unsigned __int16 *)v67 | (v67[2] << 16);
          goto LABEL_65;
        case 4:
          int v79 = *(_DWORD *)v67;
LABEL_65:
          int v80 = (v79 | (v77 << (8 * v70))) + 2;
          unsigned int v76 = v79 + 2;
          if (v70 < 4) {
            unsigned int v76 = v80;
          }
          break;
        default:
          break;
      }
    }
    if (v76 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v69 + 32))(v65, v67, v68);
      char v81 = 1;
    }
    else
    {
      char v81 = 0;
      *(void *)unint64_t v65 = *(void *)v67;
    }
    v65[v70] = v81;
  }
  return a1;
}

uint64_t sub_100B96170(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v33 = v5;
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v5 = 0x7FFFFFFF;
  }
  unsigned int v6 = v5 - 1;
  uint64_t v32 = type metadata accessor for ScrollViewProxy();
  uint64_t v7 = *(void *)(v32 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v9 = 2147483646;
  }
  unsigned int v34 = v6;
  if (v6 <= v9) {
    unsigned int v6 = v9;
  }
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  else {
    unsigned int v10 = v6;
  }
  uint64_t v11 = *(void *)(type metadata accessor for LayoutDirection() - 8);
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v12 = 8;
  }
  else {
    uint64_t v12 = *(void *)(v11 + 64);
  }
  uint64_t v13 = *(unsigned __int8 *)(v4 + 80);
  if (v8) {
    uint64_t v14 = 7;
  }
  else {
    uint64_t v14 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v15 = v13 | 7;
  uint64_t v16 = ((v13 + 16) & ~v13) + *(void *)(v4 + 64);
  uint64_t v17 = *(_DWORD *)(v7 + 80) & 0xF8;
  unint64_t v18 = ~v17 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = v17 + 23;
  if (a2 <= v10) {
    goto LABEL_37;
  }
  uint64_t v20 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  unint64_t v21 = v12
      + ((((v14 + *(void *)(v7 + 64)) & 0xFFFFFFFFFFFFFFF8)
        + v20
        + ((v19
          + ((((((((((((v16 + ((v13 + 32) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & v18)
        + 16) & ~v20)
      + 1;
  char v22 = 8 * v21;
  if (v21 <= 3)
  {
    unsigned int v25 = ((a2 - v10 + ~(-1 << v22)) >> v22) + 1;
    if (HIWORD(v25))
    {
      int v23 = *(_DWORD *)((char *)a1 + v21);
      if (!v23) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v25 > 0xFF)
    {
      int v23 = *(unsigned __int16 *)((char *)a1 + v21);
      if (!*(unsigned __int16 *)((char *)a1 + v21)) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v25 < 2)
    {
LABEL_37:
      if ((v6 & 0x80000000) != 0)
      {
        unint64_t v28 = ((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v15 + 24) & ~v15;
        if (v34 == v10)
        {
          unint64_t v29 = (unint64_t *)((v28 + 15) & 0xFFFFFFFFFFFFFFF8);
          if ((v33 & 0x80000000) != 0)
          {
            unsigned int v31 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)v29 + v13 + 8) & ~v13);
          }
          else
          {
            unint64_t v30 = *v29;
            if (v30 >= 0xFFFFFFFF) {
              LODWORD(v30) = -1;
            }
            unsigned int v31 = v30 + 1;
          }
        }
        else
        {
          unsigned int v31 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))((v19+ ((((((((((((v28 + v16) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & v18, v8, v32);
        }
        if (v31 >= 2) {
          return v31 - 1;
        }
        else {
          return 0;
        }
      }
      else
      {
        uint64_t v27 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v27) = -1;
        }
        return (v27 + 1);
      }
    }
  }
  int v23 = *((unsigned __int8 *)a1 + v21);
  if (!*((unsigned char *)a1 + v21)) {
    goto LABEL_37;
  }
LABEL_29:
  int v26 = (v23 - 1) << v22;
  if (v21 > 3) {
    int v26 = 0;
  }
  if (v21)
  {
    if (v21 > 3) {
      LODWORD(v21) = 4;
    }
    switch((int)v21)
    {
      case 2:
        LODWORD(v21) = *a1;
        break;
      case 3:
        LODWORD(v21) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v21) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v21) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v10 + (v21 | v26) + 1;
}

void sub_100B96574(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  unsigned int v45 = v6;
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v6 = 0x7FFFFFFF;
  }
  unsigned int v47 = v6;
  unsigned int v7 = v6 - 1;
  uint64_t v46 = type metadata accessor for ScrollViewProxy();
  uint64_t v8 = *(void *)(v46 - 8);
  uint64_t v48 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v10 <= 0x7FFFFFFE) {
    unsigned int v11 = 2147483646;
  }
  else {
    unsigned int v11 = v10;
  }
  if (v7 <= v11) {
    unsigned int v12 = v11;
  }
  else {
    unsigned int v12 = v7;
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v12;
  }
  uint64_t v14 = type metadata accessor for LayoutDirection();
  int v15 = 0;
  uint64_t v16 = *(void *)(v14 - 8);
  if (*(void *)(v16 + 64) <= 8uLL) {
    uint64_t v17 = 8;
  }
  else {
    uint64_t v17 = *(void *)(v16 + 64);
  }
  uint64_t v18 = *(unsigned __int8 *)(v5 + 80);
  size_t v19 = ((v18 + 16) & ~v18) + *(void *)(v5 + 64);
  uint64_t v20 = *(_DWORD *)(v8 + 80) & 0xF8;
  unint64_t v21 = ~v20 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = v20 + 23;
  size_t v23 = *(void *)(v8 + 64);
  if (!v9) {
    ++v23;
  }
  uint64_t v24 = *(_DWORD *)(v16 + 80) & 0xF8 | 7;
  size_t v25 = v17
      + ((((v23 + 7) & 0xFFFFFFFFFFFFFFF8)
        + v24
        + ((v22
          + ((((((((((((v19 + ((v18 + 32) & ~(v18 | 7))) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)) & v21)
        + 16) & ~v24)
      + 1;
  if (a3 > v13)
  {
    if (v25 <= 3)
    {
      unsigned int v26 = ((a3 - v13 + ~(-1 << (8 * v25))) >> (8 * v25)) + 1;
      if (HIWORD(v26))
      {
        int v15 = 4;
      }
      else if (v26 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v26 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  if (v13 < a2)
  {
    unsigned int v27 = ~v13 + a2;
    if (v25 < 4)
    {
      int v29 = (v27 >> (8 * v25)) + 1;
      if (v25)
      {
        int v30 = v15;
        int v31 = v27 & ~(-1 << (8 * v25));
        bzero(a1, v25);
        if (v25 == 3)
        {
          *(_WORD *)a1 = v31;
          a1[2] = BYTE2(v31);
          int v15 = v30;
        }
        else
        {
          int v15 = v30;
          if (v25 == 2) {
            *(_WORD *)a1 = v31;
          }
          else {
            *a1 = v31;
          }
        }
      }
    }
    else
    {
      int v28 = v15;
      bzero(a1, v25);
      int v15 = v28;
      *(_DWORD *)a1 = v27;
      int v29 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v25] = v29;
        return;
      case 2:
        *(_WORD *)&a1[v25] = v29;
        return;
      case 3:
        goto LABEL_92;
      case 4:
        *(_DWORD *)&a1[v25] = v29;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v25] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 2:
      *(_WORD *)&a1[v25] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 3:
LABEL_92:
      __break(1u);
      JUMPOUT(0x100B96B80);
    case 4:
      *(_DWORD *)&a1[v25] = 0;
      goto LABEL_39;
    default:
LABEL_39:
      if (a2)
      {
LABEL_40:
        if ((v12 & 0x80000000) != 0)
        {
          unint64_t v33 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + (v18 | 7) + 24) & ~(v18 | 7);
          if (v7 == v13)
          {
            uint64_t v34 = a2 + 1;
            if (v34 <= v47)
            {
              if (a2 != -1)
              {
                uint64_t v42 = (void *)((v33 + 15) & 0xFFFFFFFFFFFFFFF8);
                if ((v45 & 0x80000000) != 0)
                {
                  uint64_t v44 = *(void (**)(unint64_t, uint64_t))(v5 + 56);
                  v44(((unint64_t)v42 + v18 + 8) & ~v18, v34);
                }
                else if ((v34 & 0x80000000) != 0)
                {
                  *uint64_t v42 = a2 - 0x7FFFFFFF;
                }
                else
                {
                  *uint64_t v42 = a2;
                }
              }
            }
            else
            {
              if (v19 <= 3) {
                int v35 = ~(-1 << (8 * v19));
              }
              else {
                int v35 = -1;
              }
              if (v19)
              {
                int v36 = v35 & (a2 - v47);
                if (v19 <= 3) {
                  int v37 = v19;
                }
                else {
                  int v37 = 4;
                }
                bzero((void *)((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + (v18 | 7) + 24) & ~(v18 | 7)), v19);
                switch(v37)
                {
                  case 2:
                    *(_WORD *)unint64_t v33 = v36;
                    break;
                  case 3:
                    *(_WORD *)unint64_t v33 = v36;
                    *(unsigned char *)(v33 + 2) = BYTE2(v36);
                    break;
                  case 4:
                    *(_DWORD *)unint64_t v33 = v36;
                    break;
                  default:
                    *(unsigned char *)unint64_t v33 = v36;
                    break;
                }
              }
            }
          }
          else
          {
            unint64_t v38 = (v22
                 + ((((((((((((v33 + v19) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 23) & 0xFFFFFFFFFFFFFFF8)) & v21;
            if (v10 >= a2)
            {
              uint64_t v43 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v48 + 56);
              v43(v38, a2 + 1, v9, v46);
            }
            else
            {
              if (v23 <= 3) {
                int v39 = ~(-1 << (8 * v23));
              }
              else {
                int v39 = -1;
              }
              if (v23)
              {
                int v40 = v39 & (~v10 + a2);
                if (v23 <= 3) {
                  int v41 = v23;
                }
                else {
                  int v41 = 4;
                }
                bzero((void *)((v22+ ((((((((((((v33 + v19) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & v21), v23);
                switch(v41)
                {
                  case 2:
                    *(_WORD *)unint64_t v38 = v40;
                    break;
                  case 3:
                    *(_WORD *)unint64_t v38 = v40;
                    *(unsigned char *)(v38 + 2) = BYTE2(v40);
                    break;
                  case 4:
                    *(_DWORD *)unint64_t v38 = v40;
                    break;
                  default:
                    *(unsigned char *)unint64_t v38 = v40;
                    break;
                }
              }
            }
          }
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v32 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v32 = a2 - 1;
          }
          *(void *)a1 = v32;
        }
      }
      return;
  }
}

void sub_100B96BC8()
{
  if (!qword_1010CD170)
  {
    sub_10006389C(&qword_1010CD030);
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1010CD170);
    }
  }
}

void sub_100B96C24()
{
  if (!qword_1010CD178)
  {
    type metadata accessor for LayoutDirection();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1010CD178);
    }
  }
}

uint64_t sub_100B96C7C()
{
  return swift_getWitnessTable();
}

uint64_t sub_100B973D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = v2[2];
  unsigned int v6 = (void *)v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = (void *)v2[5];
  uint64_t v9 = (void *)v2[6];
  uint64_t v10 = *(void *)(type metadata accessor for CarouselView() - 8);
  uint64_t v11 = (uint64_t)v2 + ((*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));

  return sub_100B8D5C4(a1, v11, v5, v6, v7, v8, v9, a2);
}

uint64_t sub_100B97498()
{
  return sub_100B97948((uint64_t (*)(void, void, void, void, void, void))sub_100B91E20);
}

double sub_100B974B0()
{
  unint64_t v0 = self;
  id v1 = [v0 currentTraitCollection];
  id v2 = [v1 userInterfaceIdiom];

  if (v2 == (id)6) {
    uint64_t v3 = 10;
  }
  else {
    uint64_t v3 = 8;
  }
  id v4 = [v0 currentTraitCollection];
  [v4 userInterfaceIdiom];

  return (double)v3;
}

unint64_t sub_100B97568()
{
  unint64_t result = qword_1010CD190;
  if (!qword_1010CD190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CD190);
  }
  return result;
}

uint64_t sub_100B975C0(uint64_t a1, uint64_t a2)
{
  return sub_100B98258(a1, a2, (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100B92438);
}

uint64_t sub_100B975D8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B9761C()
{
  return sub_100B931DC(v0[7], v0[8], v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_100B97658@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = (void *)v2[2];
  unsigned int v6 = (void *)v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = (void *)v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = *(void *)(type metadata accessor for CarouselView() - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(type metadata accessor for ScrollViewProxy() - 8);
  uint64_t v14 = (uint64_t)v2 + ((v11 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));

  return sub_100B8DEB0(a1, (uint64_t)v2 + v11, v14, v5, v6, v7, v8, v9, a2);
}

uint64_t sub_100B97784@<X0>(char *a1@<X8>)
{
  return sub_100B8EF58(*(void **)(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), a1);
}

uint64_t sub_100B9779C@<X0>(double *a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = *(void *)(type metadata accessor for CarouselView() - 8);
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_100B9180C(v9, v3, v4, v5, v6, v7, a1);
}

uint64_t sub_100B97868(uint64_t a1, double *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for CarouselView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100B919A8(a1, a2, v6);
}

uint64_t sub_100B97930()
{
  return sub_100B97948((uint64_t (*)(void, void, void, void, void, void))sub_100B8FF08);
}

uint64_t sub_100B97948(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[7], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_100B97964()
{
  long long v14 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = (int *)type metadata accessor for CarouselView();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v13 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v3 = type metadata accessor for ScrollViewProxy();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + ((v2 + 56) & ~v2);
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16))
  {
    swift_release();
    swift_release();
  }
  uint64_t v7 = v6 + v1[16];
  uint64_t v8 = type metadata accessor for Binding();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, void))(*(void *)(v14 - 8) + 8))(v7 + *(int *)(v8 + 32), v14);
  }
  swift_release();
  if (*(void *)(v6 + v1[22])) {
    swift_release();
  }
  swift_release();
  uint64_t v9 = v6 + v1[24];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
  }
  sub_100063814(&qword_1010CD180);
  swift_release();
  uint64_t v10 = v6 + v1[26];
  sub_100063814(&qword_1010C8958);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + ((((v2 + 56) & ~v2) + v13 + v5) & ~v5), v3);
  return swift_deallocObject();
}

uint64_t sub_100B97C88()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = *(void *)(type metadata accessor for CarouselView() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(type metadata accessor for ScrollViewProxy() - 8);
  uint64_t v10 = (uint64_t)v0 + ((v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_100B90AE8((void *)((char *)v0 + v7), v10, v1, v2, v3, v4, v5);
}

void sub_100B97DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for CarouselView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_100B91384(a1, a2, v6);
}

uint64_t sub_100B97E6C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = *(void *)(type metadata accessor for CarouselView() - 8);
  uint64_t v11 = (void *)((char *)v2
                 + ((*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)));

  return sub_100B91424(a1, a2, v11, v5, v6, v7, v8, v9);
}

uint64_t sub_100B97F34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B97F80()
{
  long long v11 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = (int *)type metadata accessor for CarouselView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 16))
  {
    swift_release();
    swift_release();
  }
  uint64_t v3 = v2 + v1[16];
  uint64_t v4 = type metadata accessor for Binding();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, void))(*(void *)(v11 - 8) + 8))(v3 + *(int *)(v4 + 32), v11);
  }
  swift_release();
  if (*(void *)(v2 + v1[22])) {
    swift_release();
  }
  swift_release();
  uint64_t v5 = v2 + v1[24];
  uint64_t v6 = type metadata accessor for ScrollViewProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  sub_100063814(&qword_1010CD180);
  swift_release();
  uint64_t v8 = v2 + v1[26];
  sub_100063814(&qword_1010C8958);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_100B98240(uint64_t a1, uint64_t a2)
{
  return sub_100B98258(a1, a2, (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100B90524);
}

uint64_t sub_100B98258(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = *(void *)(type metadata accessor for CarouselView() - 8);
  uint64_t v12 = (char *)v3 + ((*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));

  return a3(a1, a2, v12, v6, v7, v8, v9, v10);
}

uint64_t sub_100B98338(char *a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 56);
  uint64_t v4 = *(void *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(v4, &a1[*(int *)(TupleTypeMetadata2 + 48)]);
}

uint64_t sub_100B983AC()
{
  long long v11 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = (int *)type metadata accessor for CarouselView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 16))
  {
    swift_release();
    swift_release();
  }
  uint64_t v3 = v2 + v1[16];
  uint64_t v4 = type metadata accessor for Binding();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, void))(*(void *)(v11 - 8) + 8))(v3 + *(int *)(v4 + 32), v11);
  }
  swift_release();
  if (*(void *)(v2 + v1[22])) {
    swift_release();
  }
  swift_release();
  uint64_t v5 = v2 + v1[24];
  uint64_t v6 = type metadata accessor for ScrollViewProxy();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  sub_100063814(&qword_1010CD180);
  swift_release();
  uint64_t v8 = v2 + v1[26];
  sub_100063814(&qword_1010C8958);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_100B98678()
{
  uint64_t v1 = *(void *)(type metadata accessor for CarouselView() - 8);
  uint64_t v2 = *(void *)(v0
                 + ((*(void *)(v1 + 64)
                   + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));
  type metadata accessor for CarouselView();
  return sub_100B909BC(v2, 1);
}

char *CircularProgressView.__allocating_init(size:)(double a1, double a2)
{
  id v5 = objc_allocWithZone(v2);
  return CircularProgressView.init(size:)(a1, a2);
}

void CircularProgressView.setState(_:animated:)(uint64_t a1, int a2, char a3)
{
  double v5 = *(double *)&a1;
  LOBYTE(v6) = a2;
  uint64_t v7 = &v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state];
  if ((a2 & 0x10000) != 0)
  {
    if (v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10]) {
      return;
    }
    *(double *)uint64_t v7 = *(double *)&a1;
    *((_WORD *)v7 + 4) = a2;
    v7[10] = 1;
    if (a3)
    {
      uint64_t v8 = *(void **)&v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
      goto LABEL_12;
    }
LABEL_11:
    uint64_t v12 = self;
    [v12 begin];
    [v12 setDisableActions:1];
    uint64_t v8 = *(void **)&v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
    if ((v7[10] & 1) == 0)
    {
      double v5 = *(double *)v7;
      __int16 v6 = *((_WORD *)v7 + 4);
      if ((v6 & 0x100) == 0) {
        goto LABEL_5;
      }
      goto LABEL_21;
    }
LABEL_12:
    [v8 setLineDashPattern:0];
    if (!*(void *)&v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator]) {
      goto LABEL_32;
    }
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v3;
    long long v14 = v3;
    swift_retain();
    sub_100B9A4FC((uint64_t)sub_100B99A28, v13, 0.0);
    swift_release();
    goto LABEL_31;
  }
  if ((v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10] & 1) == 0)
  {
    double v15 = *(double *)v7;
    __int16 v16 = *((_WORD *)v7 + 4);
    if ((a2 & 0x100) != 0)
    {
      if (a1 | a2)
      {
        if ((*((_WORD *)v7 + 4) & 0x100) != 0 && *(void *)&v15 | *((_WORD *)v7 + 4)) {
          return;
        }
      }
      else if ((*((_WORD *)v7 + 4) & 0x100) != 0 && !(*(void *)&v15 | *((_WORD *)v7 + 4)))
      {
        return;
      }
    }
    else if ((*((_WORD *)v7 + 4) & 0x100) == 0)
    {
      if (a2)
      {
        if (v16) {
          return;
        }
      }
      else if ((v16 & 1) == 0 && *(double *)&a1 == v15)
      {
        return;
      }
    }
  }
  *(double *)uint64_t v7 = *(double *)&a1;
  *((_WORD *)v7 + 4) = a2;
  v7[10] = 0;
  if ((a3 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v8 = *(void **)&v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  if ((a2 & 0x100) == 0)
  {
LABEL_5:
    [v8 setLineDashPattern:0];
    LODWORD(v9) = 1.0;
    [v8 setOpacity:v9];
    if (v6)
    {
      uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator;
      uint64_t v18 = *(void *)&v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator];
      if (!v18)
      {
        type metadata accessor for CircularProgressView.SpinAnimator();
        uint64_t v18 = swift_allocObject();
        *(unsigned char *)(v18 + 40) = 0;
        *(void *)(v18 + 16) = 0xD000000000000010;
        *(void *)(v18 + 24) = 0x8000000100DD4F80;
        *(void *)(v18 + 32) = v8;
        id v19 = v8;
      }
      *(void *)&v3[v17] = v18;
      if (!v18) {
        goto LABEL_32;
      }
      swift_retain();
      sub_100B9A1AC();
      goto LABEL_31;
    }
    if (*(void *)&v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator])
    {
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v3;
      swift_retain();
      long long v11 = v3;
      sub_100B9A4FC((uint64_t)sub_100B9B0F8, v10, v5);
      swift_release();
LABEL_31:
      swift_release();
      goto LABEL_32;
    }
    [v8 setStrokeEnd:v5];
    goto LABEL_32;
  }
LABEL_21:
  if (*(void *)&v5 | v6)
  {
    [v8 setOpacity:0.0];
    goto LABEL_32;
  }
  if (*(void *)&v3[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator])
  {
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v3;
    *(void *)(v21 + 24) = v8;
    uint64_t v22 = v3;
    id v23 = v8;
    swift_retain();
    sub_100B9A4FC((uint64_t)sub_100B9AA54, v21, 1.0);
    swift_release();
    goto LABEL_31;
  }
  [v8 setStrokeEnd:1.0];
  sub_100063814(&qword_1010C9B10);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_100E251C0;
  sub_100057778(0, &qword_1010C9670);
  *(NSNumber *)(v24 + 32) = NSNumber.init(integerLiteral:)(4);
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 setLineDashPattern:isa];

LABEL_32:
  if ((a3 & 1) == 0)
  {
    uint64_t v20 = self;
    [v20 commit];
  }
}

uint64_t static CircularProgressView.State.__derived_enum_equals(_:_:)(uint64_t a1, __int16 a2, uint64_t a3, __int16 a4)
{
  if ((a2 & 0x100) != 0)
  {
    BOOL v5 = (a3 | a4) == 0;
    if ((a4 & 0x100) != 0)
    {
      BOOL v6 = (a3 | a4) != 0;
    }
    else
    {
      BOOL v5 = 0;
      BOOL v6 = 0;
    }
    if (a1 | a2) {
      return v6;
    }
    else {
      return v5;
    }
  }
  else
  {
    if ((a4 & 0x100) == 0)
    {
      if (a2)
      {
        if (a4) {
          return 1;
        }
      }
      else if ((a4 & 1) == 0 && *(double *)&a1 == *(double *)&a3)
      {
        return 1;
      }
    }
    return 0;
  }
}

BOOL sub_100B98CAC(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  uint64_t v3 = *(unsigned __int8 *)(a1 + 8);
  double v4 = *(double *)a2;
  uint64_t v5 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 9) == 1)
  {
    if (*(void *)&v2 | v3)
    {
      if (*(unsigned char *)(a2 + 9)) {
        return (*(void *)&v4 | v5) != 0;
      }
    }
    else if (*(unsigned char *)(a2 + 9))
    {
      return (*(void *)&v4 | v5) == 0;
    }
    return 0;
  }
  if (*(unsigned char *)(a2 + 9)) {
    return 0;
  }
  if (v3) {
    return (v5 & 1) != 0;
  }
  return (v5 & 1) == 0 && v2 == v4;
}

char *CircularProgressView.init(size:)(double a1, double a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  BOOL v6 = &v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state];
  *(void *)BOOL v6 = 0;
  *((_WORD *)v6 + 4) = 0;
  v6[10] = 1;
  *(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale] = 0x3FE0000000000000;
  *(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator] = 0;
  uint64_t v7 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer;
  id v8 = objc_allocWithZone((Class)CAShapeLayer);
  double v9 = v2;
  *(void *)&v2[v7] = [v8 init];
  uint64_t v10 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer;
  *(void *)&v9[v10] = [objc_allocWithZone((Class)CAShapeLayer) init];
  long long v11 = (double *)&v9[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize];
  *long long v11 = a1;
  v11[1] = a2;

  v30.receiver = v9;
  v30.super_class = ObjectType;
  uint64_t v12 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", 0.0, 0.0, a1, a2);
  uint64_t v13 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer;
  long long v14 = *(void **)&v12[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer];
  double v15 = self;
  __int16 v16 = v12;
  id v17 = v14;
  id v18 = [v15 clearColor];
  id v19 = [v18 CGColor];

  [v17 setFillColor:v19];
  uint64_t v20 = *(void **)&v12[v13];
  [v20 setLineWidth:2.5];
  id v21 = [v16 layer];
  [v21 addSublayer:v20];

  uint64_t v22 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer;
  id v23 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  [v23 setLineCap:kCALineCapRound];
  [v23 setStrokeEnd:0.0];
  id v24 = v23;
  id v25 = [v15 clearColor];
  id v26 = [v25 CGColor];

  [v24 setFillColor:v26];
  unsigned int v27 = *(void **)&v16[v22];
  [v27 setLineWidth:2.5];
  [v27 setLineDashPhase:6.0];
  id v28 = [v16 layer];
  [v28 addSublayer:v27];

  sub_100B9901C();
  return v16;
}

void sub_100B9901C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer];
  id v2 = [self tertiarySystemFillColor];
  id v3 = [v2 CGColor];

  [v1 setStrokeColor:v3];
  double v4 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  id v5 = [v0 tintColor];
  if (v5)
  {
    BOOL v6 = v5;
    id v7 = [v5 CGColor];

    [v4 setStrokeColor:v7];
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall CircularProgressView.tintColorDidChange()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  [super tintColorDidChange];
  sub_100B9901C();
}

Swift::Void __swiftcall CircularProgressView.layoutSubviews()()
{
  v24.receiver = v0;
  v24.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  [v0 bounds];
  double x = v25.origin.x;
  double y = v25.origin.y;
  double width = v25.size.width;
  double height = v25.size.height;
  double v5 = CGRectGetWidth(v25);
  v26.origin.double x = x;
  v26.origin.double y = y;
  v26.size.double width = width;
  v26.size.double height = height;
  double v6 = CGRectGetHeight(v26);
  if (v6 >= v5) {
    double v6 = v5;
  }
  double v7 = (v6 + -2.5) * 0.5;
  CGRect.center.getter();
  id v10 = [self bezierPathWithArcCenter:1 radius:v8 startAngle:v9 endAngle:v7 clockwise:-1.57079633];
  long long v11 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer];
  id v12 = [v10 CGPath];
  [v11 setPath:v12];

  uint64_t v13 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer];
  id v14 = [v10 CGPath];
  [v13 setPath:v14];

  [v13 setBounds:x, y, width, height];
  v27.origin.double x = x;
  v27.origin.double y = y;
  v27.size.double width = width;
  v27.size.double height = height;
  CGFloat v15 = CGRectGetWidth(v27) * 0.5;
  v28.origin.double x = x;
  v28.origin.double y = y;
  v28.size.double width = width;
  v28.size.double height = height;
  [v13 setPosition:v15, CGRectGetHeight(v28) * 0.5];
  uint64_t v16 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView;
  id v17 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView];
  if (v17)
  {
    [v17 setFrame:CGRectMake(x, y, width, height)];
    id v18 = *(void **)&v0[v16];
    if (v18)
    {
      id v19 = v18;
      [v19 frame];
      double v20 = CGRectGetWidth(v29);
      [v19 frame];
      double v21 = CGRectGetHeight(v30);
      if (v21 < v20) {
        double v20 = v21;
      }
      uint64_t v22 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale];
      swift_beginAccess();
      id v23 = [self configurationWithPointSize:v20 * *v22];
      [v19 setPreferredSymbolConfiguration:v23];

      id v10 = v23;
    }
  }
}

double CircularProgressView.sizeThatFits(_:)()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize;
  swift_beginAccess();
  return *(double *)v1;
}

id CircularProgressView.preferredSize.setter(double a1, double a2)
{
  double v5 = (double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize];
  id result = (id)swift_beginAccess();
  double v7 = *v5;
  double v8 = v5[1];
  *double v5 = a1;
  v5[1] = a2;
  if (v7 != a1 || v8 != a2) {
    return [v2 invalidateIntrinsicContentSize];
  }
  return result;
}

void (*CircularProgressView.preferredSize.modify(void *a1))(id **a1)
{
  id v3 = (char *)malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_preferredSize;
  *((void *)v3 + 5) = v1;
  *((void *)v3 + 6) = v4;
  double v5 = (_OWORD *)(v1 + v4);
  swift_beginAccess();
  *(_OWORD *)(v3 + 24) = *v5;
  return sub_100B996D4;
}

void sub_100B996D4(id **a1)
{
  uint64_t v1 = *a1;
  double v2 = *((double *)*a1 + 3);
  id v3 = (double *)((char *)(*a1)[6] + (void)(*a1)[5]);
  double v4 = *((double *)*a1 + 4);
  double v5 = *v3;
  double v6 = v3[1];
  *id v3 = v2;
  v3[1] = v4;
  if (v2 != v5 || v4 != v6) {
    [v1[5] invalidateIntrinsicContentSize];
  }

  free(v1);
}

uint64_t CircularProgressView.state.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state);
}

void CircularProgressView.state.setter(uint64_t a1, int a2)
{
}

void (*CircularProgressView.state.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)(a1 + 16) = v1;
  __int16 v2 = *(_WORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 8);
  char v3 = *(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10);
  *(void *)a1 = *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state);
  *(_WORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 10) = v3;
  return sub_100B997C4;
}

void sub_100B997C4(uint64_t a1)
{
}

double sub_100B99808(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator);
  if (v5) {
    BOOL v6 = v5 == a1;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    *(void *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator) = 0;
    swift_release();
  }
  sub_100063814(&qword_1010C9B10);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100E251C0;
  sub_100057778(0, &qword_1010C9670);
  *(NSNumber *)(v7 + 32) = NSNumber.init(integerLiteral:)(4);
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a3 setLineDashPattern:isa];

  uint64_t v9 = a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state;
  double result = 0.0;
  if ((*(unsigned char *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10) & 1) == 0)
  {
    double v11 = *(double *)v9;
    __int16 v12 = *(_WORD *)(v9 + 8);
    if ((v12 & 0x100) != 0)
    {
      if (!(*(void *)&v11 | v12)) {
        return 1.0;
      }
    }
    else
    {
      double result = v11;
      if (v12) {
        return 0.6;
      }
    }
  }
  return result;
}

double sub_100B99954(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator);
  if (v3) {
    BOOL v4 = v3 == a1;
  }
  else {
    BOOL v4 = 0;
  }
  if (v4)
  {
    *(void *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator) = 0;
    swift_release();
  }
  uint64_t v5 = a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state;
  double result = 0.0;
  if ((*(unsigned char *)(a2 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state + 10) & 1) == 0)
  {
    double v7 = *(double *)v5;
    __int16 v8 = *(_WORD *)(v5 + 8);
    if ((v8 & 0x100) != 0)
    {
      if (!(*(void *)&v7 | v8)) {
        return 1.0;
      }
    }
    else
    {
      double result = v7;
      if (v8) {
        return 0.6;
      }
    }
  }
  return result;
}

uint64_t sub_100B999F0()
{
  return swift_deallocObject();
}

double sub_100B99A28(uint64_t a1)
{
  return sub_100B99954(a1, *(void *)(v1 + 16));
}

void sub_100B99A44()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image);
  swift_beginAccess();
  __int16 v2 = *v1;
  if (v2)
  {
    uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView;
    BOOL v4 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
    if (v4)
    {
      id v5 = v2;
      id v6 = v4;
    }
    else
    {
      id v8 = objc_allocWithZone((Class)UIImageView);
      id v9 = v2;
      id v6 = [v8 init];
    }
    id v10 = v4;
    [v6 setImage:v2];
    double v11 = *(void **)(v0 + v3);
    if (v11)
    {
      id v12 = v11;
      [v12 frame];
      double Width = CGRectGetWidth(v18);
      [v12 frame];
      double Height = CGRectGetHeight(v19);
      if (Height < Width) {
        double Width = Height;
      }
      CGFloat v15 = (double *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale);
      swift_beginAccess();
      id v16 = [self configurationWithPointSize:Width * *v15];
      [v12 setPreferredSymbolConfiguration:v16];

      id v17 = *(void **)(v0 + v3);
    }
    else
    {
      id v17 = 0;
    }
    *(void *)(v0 + v3) = v6;
    id v7 = v6;
    sub_100B99D4C(v17);
  }
  else
  {
    id v7 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
    *(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView) = 0;
    sub_100B99D4C(v7);
  }
}

void *CircularProgressView.image.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image);
  swift_beginAccess();
  __int16 v2 = *v1;
  id v3 = v2;
  return v2;
}

void CircularProgressView.image.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image);
  swift_beginAccess();
  BOOL v4 = *v3;
  *id v3 = a1;
  id v5 = a1;

  sub_100B99A44();
}

void (*CircularProgressView.image.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_100B99D18;
}

void sub_100B99D18(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_100B99A44();
  }
}

void sub_100B99D4C(void *a1)
{
  __int16 v2 = v1;
  id v3 = a1;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView;
  id v5 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView];
  if (v5)
  {
    if (!a1)
    {
LABEL_10:
      id v13 = v5;
      [v13 setContentMode:4];
      [v2 addSubview:v13];

      return;
    }
    sub_100057778(0, (unint64_t *)&unk_1010CD3B8);
    id v6 = v5;
    id v3 = v3;
    char v7 = static NSObject.== infix(_:_:)();

    if (v7) {
      return;
    }
  }
  else if (!a1)
  {
    return;
  }
  id v8 = v3;
  id v9 = [v8 superview];
  if (v9)
  {
    id v10 = v9;
    sub_100057778(0, (unint64_t *)&qword_1010CD3B0);
    double v11 = v2;
    id v12 = v10;
    LOBYTE(v10) = static NSObject.== infix(_:_:)();

    if (v10) {
      [v8 removeFromSuperview];
    }
  }

  id v5 = *(void **)&v2[v4];
  if (v5) {
    goto LABEL_10;
  }
}

double CircularProgressView.imageScale.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale;
  swift_beginAccess();
  return *(double *)v1;
}

void CircularProgressView.imageScale.setter(double a1)
{
  id v3 = (double *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale);
  swift_beginAccess();
  double v4 = *v3;
  *id v3 = a1;
  if (v4 != a1)
  {
    id v5 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
    if (v5)
    {
      id v6 = v5;
      [v6 frame];
      double Width = CGRectGetWidth(v10);
      [v6 frame];
      double Height = CGRectGetHeight(v11);
      if (Height >= Width) {
        double Height = Width;
      }
      id v9 = [self configurationWithPointSize:*v3 * Height];
      [v6 setPreferredSymbolConfiguration:v9];
    }
  }
}

void (*CircularProgressView.imageScale.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale;
  v3[4] = v1;
  v3[5] = v4;
  id v5 = (void *)(v1 + v4);
  swift_beginAccess();
  v3[3] = *v5;
  return sub_100B9A09C;
}

void sub_100B9A09C(uint64_t a1, char a2)
{
  __int16 v2 = *(void **)a1;
  double v3 = *(double *)(*(void *)a1 + 24);
  if (a2)
  {
    CircularProgressView.imageScale.setter(v3);
  }
  else
  {
    uint64_t v5 = v2[4];
    uint64_t v4 = v2[5];
    double v6 = *(double *)(v5 + v4);
    *(double *)(v5 + v4) = v3;
    if (v3 != v6)
    {
      uint64_t v7 = v2[4];
      id v8 = *(void **)(v7 + OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView);
      if (v8)
      {
        uint64_t v9 = v2[5];
        id v10 = v8;
        [v10 frame];
        double Width = CGRectGetWidth(v15);
        [v10 frame];
        double Height = CGRectGetHeight(v16);
        if (Height >= Width) {
          double Height = Width;
        }
        id v13 = [self configurationWithPointSize:*(double *)(v7 + v9) * Height];
        [v10 setPreferredSymbolConfiguration:v13];
      }
    }
  }

  free(v2);
}

void sub_100B9A1AC()
{
  *(unsigned char *)(v0 + 40) = 0;
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 16);
  NSString v4 = String._bridgeToObjectiveC()();
  [v1 removeAnimationForKey:v4];

  v20[0] = v3;
  v20[1] = v2;
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = 0x676E69646E65;
  v5._object = (void *)0xE600000000000000;
  String.append(_:)(v5);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 removeAnimationForKey:v6];

  [v1 setStrokeEnd:0.6];
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [self animationWithKeyPath:v7];

  id v9 = [v1 presentationLayer];
  if (!v9) {
    id v9 = v1;
  }
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 valueForKeyPath:v10];

  if (v11)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_100056914((uint64_t)v19, (uint64_t)v20);
  if (v20[3]) {
    swift_dynamicCast();
  }
  else {
    sub_10005DF18((uint64_t)v20);
  }
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v8 setFromValue:isa];

  if (qword_1010C8680 != -1) {
    swift_once();
  }
  Class v13 = Double._bridgeToObjectiveC()().super.super.isa;
  [v8 setToValue:v13];

  [v8 setRemovedOnCompletion:1];
  [v8 setFillMode:kCAFillModeBoth];
  [v8 setDuration:1.0];
  LODWORD(v14) = 2139095040;
  [v8 setRepeatCount:v14];
  CFTimeInterval v15 = CACurrentMediaTime();
  id v16 = v8;
  [v16 duration];
  [v16 setBeginTime:(double)(v15 - fmod(v15, v17))];

  NSString v18 = String._bridgeToObjectiveC()();
  [v1 addAnimation:v16 forKey:v18];
}

void sub_100B9A4FC(uint64_t a1, uint64_t a2, double a3)
{
  if ((*(unsigned char *)(v3 + 40) & 1) == 0)
  {
    uint64_t v4 = v3;
    *(unsigned char *)(v3 + 40) = 1;
    NSString v7 = *(void **)(v3 + 32);
    id v8 = [v7 presentationLayer];
    if (!v8) {
      id v8 = v7;
    }
    NSString v9 = String._bridgeToObjectiveC()();
    id v10 = [v8 valueForKeyPath:v9];

    if (v10)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v42, 0, sizeof(v42));
    }
    sub_100056914((uint64_t)v42, (uint64_t)v43);
    if (v43[3]) {
      swift_dynamicCast();
    }
    else {
      sub_10005DF18((uint64_t)v43);
    }
    double v11 = fmin(a3, 0.1);
    NSString v12 = String._bridgeToObjectiveC()();
    Class v13 = self;
    id v14 = [v13 animationWithKeyPath:v12];

    if (qword_1010C8680 != -1) {
      swift_once();
    }
    double v15 = *(double *)&qword_1010CD1D0 - (6.28318531 - (1.0 - (0.6 - v11)) * 6.28318531);
    Class isa = Double._bridgeToObjectiveC()().super.super.isa;
    [v14 setFromValue:isa];

    Class v17 = Double._bridgeToObjectiveC()().super.super.isa;
    [v14 setToValue:v17];

    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = [v13 animationWithKeyPath:v18];

    Class v20 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    [v19 setToValue:v20];

    id v21 = [objc_allocWithZone((Class)CAAnimationGroup) init];
    sub_100063814(&qword_1010C9B10);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_100E252E0;
    *(void *)(v22 + 32) = v14;
    *(void *)(v22 + 40) = v19;
    v43[0] = v22;
    specialized Array._endMutation()();
    sub_100057778(0, &qword_1010CD3C8);
    id v23 = v14;
    id v24 = v19;
    Class v25 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v21 setAnimations:v25];

    [v21 setDuration:v15 * (1.0 / *(double *)&qword_1010CD1D0)];
    [v21 setFillMode:kCAFillModeForwards];
    [v21 setRemovedOnCompletion:0];
    CGRect v26 = (objc_class *)type metadata accessor for CircularProgressView.SpinAnimator.Delegate();
    CGRect v27 = (char *)objc_allocWithZone(v26);
    CGRect v28 = &v27[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop];
    *(void *)CGRect v28 = 0;
    *((void *)v28 + 1) = 0;
    v41.receiver = v27;
    v41.super_class = v26;
    id v29 = v21;
    CGRect v30 = [(char *)[super init]];
    [v29 setDelegate:v30];

    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v30;
    *(void *)(v31 + 24) = v4;
    *(double *)(v31 + 32) = v11;
    *(void *)(v31 + 40) = a1;
    *(void *)(v31 + 48) = a2;
    *(double *)(v31 + 56) = a3;
    uint64_t v32 = (void (**)(uint64_t))&v30[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop];
    uint64_t v33 = *(void *)&v30[OBJC_IVAR____TtCCC11MusicCoreUI20CircularProgressViewP33_2327D9925563EEC9FF3A63D4DED4721D12SpinAnimator8Delegate_onAnimationDidStop];
    *uint64_t v32 = sub_100B9B0E4;
    v32[1] = (void (*)(uint64_t))v31;
    uint64_t v34 = v30;
    swift_retain();
    swift_retain();
    sub_10006ADFC(v33);
    uint64_t v35 = *(void *)(v4 + 16);
    uint64_t v36 = *(void *)(v4 + 24);
    NSString v37 = String._bridgeToObjectiveC()();
    [v7 removeAnimationForKey:v37];

    v43[0] = v35;
    v43[1] = v36;
    swift_bridgeObjectRetain();
    v38._countAndFlagsBits = 0x676E69646E65;
    v38._object = (void *)0xE600000000000000;
    String.append(_:)(v38);
    NSString v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v7 addAnimation:v29 forKey:v39];
  }
}

uint64_t sub_100B9AA14()
{
  return swift_deallocObject();
}

double sub_100B9AA54(uint64_t a1)
{
  return sub_100B99808(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t type metadata accessor for CircularProgressView.SpinAnimator()
{
  return self;
}

void sub_100B9AA80(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  if (*(unsigned char *)(a5 + 40) == 1)
  {
    id v10 = self;
    [v10 begin];
    [v10 setDisableActions:1];
    double v11 = *(void **)(a5 + 32);
    uint64_t v16 = *(void *)(a5 + 16);
    uint64_t v17 = *(void *)(a5 + 24);
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = 0x676E69646E65;
    v12._object = (void *)0xE600000000000000;
    String.append(_:)(v12);
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v11 removeAnimationForKey:v13, v16, v17];

    [v11 setStrokeStart:0.0];
    [v11 setStrokeEnd:a1];
    [v10 commit];
    double v14 = COERCE_DOUBLE(a6(a5));
    if (v15) {
      double v14 = a2;
    }
    [v11 setStrokeEnd:v14];
  }
}

void sub_100B9ABF8()
{
  qword_1010CD1D0 = 0x401921FB54442D18;
}

id sub_100B9ACF0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CircularProgressView.SpinAnimator.Delegate();
  return [super dealloc];
}

uint64_t sub_100B9AD3C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void CircularProgressView.init(frame:)()
{
}

void _s11MusicCoreUI20CircularProgressViewC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView__state];
  *(void *)uint64_t v1 = 0;
  *((_WORD *)v1 + 4) = 0;
  v1[10] = 1;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_image] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_imageScale] = 0x3FE0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_spinAnimator] = 0;
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_progressLayer;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI20CircularProgressView_trackLayer;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)CAShapeLayer) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for CircularProgressView()
{
  return self;
}

{
  return type metadata accessor for CircularProgressView();
}

uint64_t initializeBufferWithCopyOfBuffer for CircularProgressView.State(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)double result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CircularProgressView.State(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CircularProgressView.State(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)double result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)double result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 10) = v3;
  return result;
}

uint64_t sub_100B9B028(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100B9B044(uint64_t result, int a2)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)double result = (a2 - 1);
    *(unsigned char *)(result + 9) = 1;
  }
  else
  {
    *(unsigned char *)(result + 9) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CircularProgressView.State()
{
  return &type metadata for CircularProgressView.State;
}

uint64_t type metadata accessor for CircularProgressView.SpinAnimator.Delegate()
{
  return self;
}

uint64_t sub_100B9B09C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_100B9B0E4(uint64_t a1)
{
  sub_100B9AA80(*(double *)(v1 + 32), *(double *)(v1 + 56), a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 40));
}

uint64_t sub_100B9B100(unint64_t a1)
{
  return sub_100B9B1B4(a1, (unint64_t *)_s5GlyphCMa, &qword_1010CE120, &qword_1010CE118, (uint64_t *)sub_100B147D8);
}

uint64_t sub_100B9B13C(unint64_t a1)
{
  return sub_100B9B1B4(a1, (unint64_t *)_s8SyllableCMa, &qword_1010CE130, &qword_1010CE128, (uint64_t *)sub_100B147D8);
}

uint64_t sub_100B9B178(unint64_t a1)
{
  return sub_100B9B1B4(a1, (unint64_t *)_s4WordCMa, &qword_1010CE140, &qword_1010CE138, (uint64_t *)sub_100543F34);
}

uint64_t sub_100B9B1B4(unint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v5 >> 62))
  {
    uint64_t v12 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v13 = v12 + v11;
    if (!__OFADD__(v12, v11)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v13 = v23 + v11;
  if (__OFADD__(v23, v11)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v14 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *Swift::String v5 = v14;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
    {
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFFF8;
      if (v13 <= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  uint64_t v24 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v14 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *Swift::String v5 = v17;
    uint64_t v16 = v17 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    uint64_t v11 = v24;
LABEL_11:
    uint64_t result = sub_100BBA9DC(v16 + 8 * *(void *)(v16 + 16) + 32, (*(void *)(v16 + 24) >> 1) - *(void *)(v16 + 16), a1, (void (*)(void))a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v19 >= 1)
  {
    uint64_t v20 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v21 = __OFADD__(v20, v19);
    uint64_t v22 = v20 + v19;
    if (v21)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

size_t sub_100B9B3D8(size_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  char v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  size_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = sub_100AFB9D0(result, v11, 1, v3);
  char v3 = (void *)result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = (v3[3] >> 1) - v3[2];
  uint64_t result = type metadata accessor for Playlist.Collaborator();
  if (v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = v3[2];
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    v3[2] = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t Collaboration.Management.Model.__allocating_init(manager:playlist:)(void (*a1)(char *, uint64_t), char *a2)
{
  swift_allocObject();
  uint64_t v4 = sub_100BBAFB4(a1, a2);
  swift_release();
  return v4;
}

uint64_t Collaboration.Management.Model.init(manager:playlist:)(void (*a1)(char *, uint64_t), char *a2)
{
  uint64_t v2 = sub_100BBAFB4(a1, a2);
  swift_release();
  return v2;
}

uint64_t property wrapper backing initializer of Collaboration.Management.Model.pendingCollaborators(uint64_t a1)
{
  return sub_1009E59F0(a1, &qword_1010CD490);
}

uint64_t property wrapper backing initializer of Collaboration.Management.Model.transientCollaborators(uint64_t a1)
{
  return sub_1009E59F0(a1, &qword_1010CD498);
}

uint64_t property wrapper backing initializer of Collaboration.Management.Model.playlist(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Playlist();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  Published.init(initialValue:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_100B9B6A0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    static ApplicationCapabilities.shared.getter((uint64_t)&v1);
    sub_10005E8DC((uint64_t)&v1);
    swift_getKeyPath();
    swift_getKeyPath();
    return static Published.subscript.setter();
  }
  return result;
}

uint64_t sub_100B9B73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[5] = a4;
  v5[6] = a5;
  sub_100063814(&qword_1010CE758);
  v5[7] = swift_task_alloc();
  uint64_t v6 = sub_100063814(&qword_1010CE760);
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  uint64_t v7 = sub_100063814(&qword_1010CE768);
  v5[11] = v7;
  v5[12] = *(void *)(v7 - 8);
  v5[13] = swift_task_alloc();
  uint64_t v8 = sub_100063814(&qword_1010CE770);
  v5[14] = v8;
  v5[15] = *(void *)(v8 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  return _swift_task_switch(sub_100B9B900, 0, 0);
}

uint64_t sub_100B9B900()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[15];
  type metadata accessor for Playlist();
  type metadata accessor for Playlist.Collaborator();
  sub_100BBBBAC(&qword_1010CE778, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
  MusicLibrarySectionedRequest.init()();
  swift_getKeyPath();
  v0[2] = Playlist.id.getter();
  v0[3] = v5;
  MusicLibrarySectionedRequest.filterSections<A>(matching:equalTo:)();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  type metadata accessor for MainActor();
  v0[18] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B9BA90, v7, v6);
}

uint64_t sub_100B9BA90()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  swift_release();
  sub_100063858((unint64_t *)&unk_1010CE780, &qword_1010CE770);
  v0[19] = MusicAutoupdatableRequest.autoupdatingResponse.getter();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[20] = v4;
  v0[21] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v4(v1, v3);
  return _swift_task_switch(sub_100B9BB64, 0, 0);
}

uint64_t sub_100B9BB64()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse;
  *(void *)(v1 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse) = *(void *)(v0 + 152);
  swift_release();
  uint64_t v3 = *(void *)(v1 + v2);
  if (v3)
  {
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 80);
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v9 = *(void *)(v0 + 56);
    uint64_t v14 = *(void *)(v0 + 88);
    swift_retain();
    dispatch thunk of MusicAutoupdatingResponse.$response.getter();
    swift_release();
    sub_100057778(0, (unint64_t *)&qword_1010C8910);
    *(void *)(v0 + 32) = static OS_dispatch_queue.main.getter();
    uint64_t v10 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    sub_100063858(&qword_1010CE790, &qword_1010CE760);
    sub_10004AC50();
    Publisher.receive<A>(on:options:)();
    sub_1000637B8(v9, &qword_1010CE758);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_allocObject();
    swift_weakInit();
    sub_100063858(&qword_1010CE7A0, &qword_1010CE768);
    uint64_t v3 = Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v14);
  }
  uint64_t v11 = *(void *)(v0 + 48);
  (*(void (**)(void, void))(v0 + 160))(*(void *)(v0 + 136), *(void *)(v0 + 112));
  *(void *)(v11
            + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponseSubscription) = v3;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100B9BE0C(void (*a1)(char *, uint64_t, uint64_t), uint64_t a2)
{
  v210 = a1;
  sub_100063814(&qword_1010CAC40);
  __chkstk_darwin();
  uint64_t v206 = (uint64_t)&v175 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v222 = type metadata accessor for Playlist.Collaborator();
  uint64_t v216 = *(void *)(v222 - 8);
  __chkstk_darwin();
  v215 = (char *)&v175 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v214 = (char *)&v175 - v5;
  __chkstk_darwin();
  uint64_t v223 = (uint64_t)&v175 - v6;
  __chkstk_darwin();
  v213 = (char *)&v175 - v7;
  uint64_t v218 = sub_100063814(&qword_1010CE7A8);
  uint64_t v220 = *(void *)(v218 - 8);
  __chkstk_darwin();
  v217 = (char *)&v175 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = sub_100063814(&qword_1010CE7B0);
  __chkstk_darwin();
  v196 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v175 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  v221 = (char *)&v175 - v10;
  uint64_t v189 = type metadata accessor for Date();
  uint64_t v187 = *(void *)(v189 - 8);
  __chkstk_darwin();
  v181 = (char *)&v175 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_100063814(&qword_1010CE7B8);
  __chkstk_darwin();
  v188 = (char *)&v175 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = type metadata accessor for Playlist();
  uint64_t v193 = *(void *)(v194 - 8);
  __chkstk_darwin();
  v191 = (char *)&v175 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v192 = (char *)&v175 - v14;
  __chkstk_darwin();
  v184 = (char *)&v175 - v15;
  sub_100063814(&qword_1010CE0E8);
  __chkstk_darwin();
  uint64_t v182 = (uint64_t)&v175 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v190 = (uint64_t)&v175 - v17;
  __chkstk_darwin();
  v186 = (char *)&v175 - v18;
  sub_100063814(&qword_1010CE100);
  __chkstk_darwin();
  uint64_t v212 = (uint64_t)&v175 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = type metadata accessor for Playlist.Collaborator.Status();
  uint64_t v201 = *(void *)(v207 - 8);
  __chkstk_darwin();
  v199 = (char *)&v175 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v200 = (char *)&v175 - v21;
  uint64_t v224 = type metadata accessor for Playlist.Collaboration();
  uint64_t v225 = *(void *)(v224 - 8);
  __chkstk_darwin();
  v202 = (char *)&v175 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v228 = sub_100063814(&qword_1010CE7C0);
  uint64_t v227 = *(void *)(v228 - 8);
  __chkstk_darwin();
  v208 = (char *)&v175 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v219 = type metadata accessor for Logger();
  uint64_t v230 = *(void *)(v219 - 8);
  __chkstk_darwin();
  v209 = (char *)&v175 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v195 = (char *)&v175 - v25;
  __chkstk_darwin();
  v198 = (char *)&v175 - v26;
  __chkstk_darwin();
  v211 = (uint64_t *)((char *)&v175 - v27);
  v204 = (void (*)(char *, uint64_t, uint64_t))sub_100063814(&qword_1010CE0E0);
  __chkstk_darwin();
  v183 = (char *)&v175 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v205 = (uint64_t)&v175 - v29;
  __chkstk_darwin();
  v203 = (uint64_t *)((char *)&v175 - v30);
  __chkstk_darwin();
  uint64_t v32 = (char *)&v175 - v31;
  __chkstk_darwin();
  uint64_t v34 = (char *)&v175 - v33;
  sub_100063814(&qword_1010CE7C8);
  __chkstk_darwin();
  uint64_t v36 = (char *)&v175 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CE7D0);
  __chkstk_darwin();
  Swift::String v38 = (char *)&v175 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  int v40 = (char *)&v175 - v39;
  __chkstk_darwin();
  uint64_t v42 = (char *)&v175 - v41;
  __chkstk_darwin();
  uint64_t v44 = (char *)&v175 - v43;
  __chkstk_darwin();
  uint64_t v229 = (uint64_t)&v175 - v45;
  swift_beginAccess();
  uint64_t v226 = a2 + 16;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v47 = *(void *)(result
                    + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse);
    swift_retain();
    uint64_t result = swift_release();
    if (v47)
    {
      char v48 = dispatch thunk of MusicAutoupdatingResponse.isLoaded.getter();
      uint64_t result = swift_release();
      if (v48)
      {
        CGRect v180 = v34;
        sub_10006CAB8((uint64_t)v210, (uint64_t)v36, &qword_1010CE7C8);
        uint64_t v49 = sub_100063814(&qword_1010CE7D8);
        uint64_t v50 = *(void *)(v49 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v36, 1, v49) == 1)
        {
          sub_1000637B8((uint64_t)v36, &qword_1010CE7C8);
          uint64_t v51 = v227;
          uint64_t v52 = v229;
          uint64_t v53 = v228;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v227 + 56))(v229, 1, 1, v228);
        }
        else
        {
          uint64_t v54 = MusicLibrarySectionedResponse.sections.getter();
          (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v49);
          uint64_t v51 = v227;
          uint64_t v52 = v229;
          uint64_t v53 = v228;
          if (*(void *)(v54 + 16))
          {
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v227 + 16))(v229, v54 + ((*(unsigned __int8 *)(v227 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v227 + 80)), v228);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v52, 0, 1, v53);
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v227 + 56))(v229, 1, 1, v228);
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v55 = (uint64_t)v180;
        sub_10006CAB8(v52, (uint64_t)v44, &qword_1010CE7D0);
        unint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
        CGRect v177 = (void (*)(void *, uint64_t))(v51 + 48);
        CGRect v176 = v56;
        if (v56(v44, 1, v53) == 1)
        {
          sub_1000637B8((uint64_t)v44, &qword_1010CE7D0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v225 + 56))(v55, 1, 1, v224);
        }
        else
        {
          swift_getKeyPath();
          MusicLibrarySection.subscript.getter();
          uint64_t v55 = (uint64_t)v180;
          uint64_t v52 = v229;
          swift_release();
          (*(void (**)(char *, uint64_t))(v51 + 8))(v44, v53);
        }
        uint64_t v57 = Logger.collaboration.unsafeMutableAddressor();
        unsigned int v58 = *(void (**)(char *, uint64_t, uint64_t))(v230 + 16);
        uint64_t v59 = v211;
        uint64_t v179 = v57;
        uint64_t v60 = v219;
        uint64_t v178 = v230 + 16;
        v210 = v58;
        ((void (*)(void *))v58)(v211);
        sub_10006CAB8(v52, (uint64_t)v42, &qword_1010CE7D0);
        sub_10006CAB8(v55, (uint64_t)v32, &qword_1010CE0E0);
        uint64_t v61 = Logger.logObject.getter();
        os_log_type_t v62 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v61, v62))
        {
          uint64_t v63 = swift_slowAlloc();
          uint64_t v175 = swift_slowAlloc();
          uint64_t v232 = v175;
          *(_DWORD *)uint64_t v63 = 136446466;
          sub_10006CAB8((uint64_t)v42, (uint64_t)v40, &qword_1010CE7D0);
          uint64_t v64 = String.init<A>(describing:)();
          *(void *)(v63 + 4) = sub_100076010(v64, v65, &v232);
          swift_bridgeObjectRelease();
          sub_1000637B8((uint64_t)v42, &qword_1010CE7D0);
          *(_WORD *)(v63 + 12) = 2082;
          sub_10006CAB8((uint64_t)v32, (uint64_t)v203, &qword_1010CE0E0);
          uint64_t v66 = String.init<A>(describing:)();
          *(void *)(v63 + 14) = sub_100076010(v66, v67, &v232);
          swift_bridgeObjectRelease();
          sub_1000637B8((uint64_t)v32, &qword_1010CE0E0);
          _os_log_impl((void *)&_mh_execute_header, v61, v62, "    [Management] Did update collaborative playlist with:\n        playlist=%{public}s\")\n        collaboration=%{public}s", (uint8_t *)v63, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_1000637B8((uint64_t)v42, &qword_1010CE7D0);
          sub_1000637B8((uint64_t)v32, &qword_1010CE0E0);
        }

        uint64_t v68 = *(void (**)(char *, uint64_t))(v230 + 8);
        v68((char *)v59, v60);
        uint64_t v69 = v60;
        uint64_t v70 = v229;
        sub_10006CAB8(v229, (uint64_t)v38, &qword_1010CE7D0);
        uint64_t v71 = v228;
        int v72 = v176(v38, 1, v228);
        uint64_t v73 = v227;
        uint64_t v74 = v224;
        uint64_t v75 = v225;
        uint64_t v76 = v212;
        if (v72 == 1)
        {
          sub_1000637B8((uint64_t)v38, &qword_1010CE7D0);
LABEL_25:
          uint64_t v89 = v209;
          v210(v209, v179, v69);
          uint64_t v90 = Logger.logObject.getter();
          os_log_type_t v91 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v90, v91))
          {
            uint64_t v92 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v92 = 0;
            _os_log_impl((void *)&_mh_execute_header, v90, v91, "[Management] Dismissing management sheet", v92, 2u);
            swift_slowDealloc();
          }

          v68(v89, v69);
          swift_beginAccess();
          if (swift_weakLoadStrong())
          {
            swift_getKeyPath();
            swift_getKeyPath();
            char v233 = 1;
            static Published.subscript.setter();
          }
          sub_1000637B8((uint64_t)v180, &qword_1010CE0E0);
          uint64_t v93 = v70;
          return sub_1000637B8(v93, &qword_1010CE7D0);
        }
        unsigned int v77 = v208;
        (*(void (**)(char *, char *, uint64_t))(v227 + 32))(v208, v38, v71);
        uint64_t v78 = v205;
        sub_10006CAB8((uint64_t)v180, v205, &qword_1010CE0E0);
        v211 = *(void **)(v75 + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v211)(v78, 1, v74) == 1)
        {
          (*(void (**)(char *, uint64_t))(v73 + 8))(v77, v71);
          sub_1000637B8(v78, &qword_1010CE0E0);
          uint64_t v70 = v229;
          goto LABEL_25;
        }
        CGRect v177 = (void (*)(void *, uint64_t))v68;
        int v79 = v202;
        (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v202, v78, v74);
        Playlist.Collaboration.collaboratorStatus.getter();
        uint64_t v80 = v201;
        uint64_t v81 = v75;
        uint64_t v82 = v207;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v201 + 48))(v76, 1, v207) == 1)
        {
          (*(void (**)(char *, uint64_t))(v81 + 8))(v79, v74);
          (*(void (**)(char *, uint64_t))(v73 + 8))(v208, v71);
          sub_1000637B8(v76, &qword_1010CE100);
LABEL_24:
          uint64_t v70 = v229;
          uint64_t v68 = (void (*)(char *, uint64_t))v177;
          goto LABEL_25;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v200, v76, v82);
        int v83 = v199;
        (*(void (**)(char *, void, uint64_t))(v80 + 104))(v199, enum case for Playlist.Collaborator.Status.notJoined(_:), v82);
        sub_100BBBBAC(&qword_1010CE108, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator.Status);
        char v84 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v85 = v207;
        char v86 = v84;
        uint64_t v88 = v80 + 8;
        uint64_t v87 = *(void (**)(char *, uint64_t))(v80 + 8);
        v87(v83, v207);
        if (v86)
        {
          v87(v200, v85);
          (*(void (**)(char *, uint64_t))(v225 + 8))(v202, v74);
          (*(void (**)(char *, uint64_t))(v73 + 8))(v208, v71);
          goto LABEL_24;
        }
        CGRect v176 = (uint64_t (*)(char *, uint64_t, uint64_t))v87;
        uint64_t v201 = v88;
        swift_beginAccess();
        uint64_t Strong = swift_weakLoadStrong();
        uint64_t v95 = v218;
        uint64_t v96 = (uint64_t)v221;
        if (!Strong
          || (swift_getKeyPath(),
              swift_getKeyPath(),
              static Published.subscript.getter(),
              swift_release(),
              swift_release(),
              swift_release(),
              v232 != 1))
        {
LABEL_48:
          swift_beginAccess();
          if (swift_weakLoadStrong())
          {
            uint64_t v111 = v192;
            MusicLibrarySection.item.getter();
            swift_getKeyPath();
            swift_getKeyPath();
            uint64_t v112 = v193;
            uint64_t v113 = v194;
            (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v191, v111, v194);
            swift_retain();
            static Published.subscript.setter();
            (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v113);
            swift_release();
          }
          swift_beginAccess();
          if (swift_weakLoadStrong())
          {
            char v114 = Playlist.Collaboration.isOpenInvitation.getter();
            swift_getKeyPath();
            swift_getKeyPath();
            LOBYTE(v232) = v114 & 1;
            static Published.subscript.setter();
          }
          uint64_t v115 = v217;
          MusicLibrarySection.items.getter();
          uint64_t v116 = v220;
          uint64_t v117 = *(void (**)(char *, uint64_t, uint64_t))(v220 + 16);
          uint64_t v118 = (uint64_t)v196;
          uint64_t v205 = v220 + 16;
          v204 = v117;
          v117((char *)v196, (uint64_t)v115, v95);
          uint64_t v119 = sub_100063858(&qword_1010CE7E0, &qword_1010CE7A8);
          dispatch thunk of Collection.startIndex.getter();
          uint64_t v120 = *(uint64_t **)(v116 + 8);
          uint64_t v220 = v116 + 8;
          v203 = v120;
          ((void (*)(char *, uint64_t))v120)(v115, v95);
          uint64_t v121 = v197;
          *(void *)(v118 + *(int *)(v197 + 36)) = v232;
          sub_10003CABC(v118, v96, &qword_1010CE7B0);
          uint64_t v122 = (uint64_t *)(v96 + *(int *)(v121 + 36));
          swift_beginAccess();
          uint64_t v123 = *v122;
          dispatch thunk of Collection.endIndex.getter();
          if (v123 == v232)
          {
            v211 = _swiftEmptyArrayStorage;
            v209 = (char *)_swiftEmptyArrayStorage;
            uint64_t v124 = (uint64_t)v221;
          }
          else
          {
            uint64_t v139 = (void (**)(char *))(v216 + 16);
            uint64_t v212 = v216 + 32;
            uint64_t v197 = v216 + 8;
            v196 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v216 + 56);
            v209 = (char *)_swiftEmptyArrayStorage;
            v211 = _swiftEmptyArrayStorage;
            uint64_t v124 = (uint64_t)v221;
            v199 = (char *)v119;
            do
            {
              uint64_t v142 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
              uint64_t v143 = v95;
              uint64_t v144 = *v139;
              uint64_t v145 = v213;
              uint64_t v146 = v222;
              (*v139)(v213);
              v142(&v232, 0);
              char v147 = v217;
              uint64_t v148 = v124;
              uint64_t v149 = v146;
              v204(v217, v148, v143);
              dispatch thunk of Collection.formIndex(after:)();
              ((void (*)(char *, uint64_t))v203)(v147, v143);
              uint64_t v150 = *(void (**)(uint64_t, char *, uint64_t))v212;
              uint64_t v151 = v223;
              (*(void (**)(uint64_t, char *, uint64_t))v212)(v223, v145, v149);
              if (Playlist.Collaborator.isPending.getter())
              {
                ((void (*)(char *, uint64_t, uint64_t))v144)(v214, v151, v149);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  v211 = (void *)sub_100AFB9D0(0, v211[2] + 1, 1, v211);
                }
                uint64_t v160 = v216;
                uint64_t v161 = v211;
                unint64_t v163 = v211[2];
                unint64_t v162 = v211[3];
                if (v163 >= v162 >> 1) {
                  uint64_t v161 = (void *)sub_100AFB9D0(v162 > 1, v163 + 1, 1, v211);
                }
                v161[2] = v163 + 1;
                unint64_t v164 = (*(unsigned __int8 *)(v160 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v160 + 80);
                v211 = v161;
                v150((uint64_t)v161 + v164 + *(void *)(v160 + 72) * v163, v214, v149);
                (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v151, v149);
              }
              else
              {
                ((void (*)(char *, uint64_t, uint64_t))v144)(v215, v151, v149);
                uint64_t v152 = v209;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v152 = (char *)sub_100AFB9D0(0, *((void *)v152 + 2) + 1, 1, v152);
                }
                uint64_t v153 = v216;
                unint64_t v155 = *((void *)v152 + 2);
                unint64_t v154 = *((void *)v152 + 3);
                if (v155 >= v154 >> 1) {
                  uint64_t v152 = (char *)sub_100AFB9D0(v154 > 1, v155 + 1, 1, v152);
                }
                *((void *)v152 + 2) = v155 + 1;
                unint64_t v156 = (*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
                v209 = v152;
                v150((uint64_t)&v152[v156 + *(void *)(v153 + 72) * v155], v215, v149);
                if (swift_weakLoadStrong())
                {
                  swift_getKeyPath();
                  swift_getKeyPath();
                  uint64_t v157 = (void (*)(uint64_t *, void))static Published.subscript.modify();
                  uint64_t v158 = v206;
                  uint64_t v159 = v223;
                  sub_100BBA0F0(v223, v206);
                  sub_1000637B8(v158, &qword_1010CAC40);
                  v157(&v232, 0);
                  swift_release();
                  swift_release();
                  swift_release();
                  (*(void (**)(uint64_t, uint64_t))v197)(v159, v222);
                }
                else
                {
                  (*(void (**)(uint64_t, uint64_t))v197)(v223, v149);
                  uint64_t v140 = v206;
                  (*v196)(v206, 1, 1, v149);
                  sub_1000637B8(v140, &qword_1010CAC40);
                }
              }
              uint64_t v141 = *v122;
              uint64_t v124 = (uint64_t)v221;
              uint64_t v95 = v218;
              dispatch thunk of Collection.endIndex.getter();
            }
            while (v141 != v232);
          }
          sub_1000637B8(v124, &qword_1010CE7B0);
          swift_beginAccess();
          uint64_t v125 = swift_weakLoadStrong();
          uint64_t v126 = (uint64_t)v209;
          if (v125)
          {
            swift_getKeyPath();
            swift_getKeyPath();
            v231[1] = v126;
            swift_bridgeObjectRetain();
            static Published.subscript.setter();
          }
          swift_beginAccess();
          uint64_t v127 = swift_weakLoadStrong();
          uint64_t v128 = v219;
          uint64_t v129 = v198;
          uint64_t v130 = v179;
          uint64_t v131 = v211;
          if (v127)
          {
            swift_getKeyPath();
            swift_getKeyPath();
            v231[0] = (uint64_t)v131;
            swift_bridgeObjectRetain();
            static Published.subscript.setter();
          }
          uint64_t v132 = v210;
          v210(v129, v130, v128);
          swift_bridgeObjectRetain();
          uint64_t v133 = Logger.logObject.getter();
          os_log_type_t v134 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v133, v134))
          {
            uint64_t v135 = swift_slowAlloc();
            v231[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v135 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v136 = Array.description.getter();
            unint64_t v138 = v137;
            swift_bridgeObjectRelease();
            *(void *)(v135 + 4) = sub_100076010(v136, v138, v231);
            uint64_t v130 = v179;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v133, v134, "[Management] pendingCollaborators=%s", (uint8_t *)v135, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v132 = v210;
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          v177(v129, v128);
          v165 = v200;
          uint64_t v166 = v195;
          v132(v195, v130, v128);
          swift_bridgeObjectRetain();
          uint64_t v167 = Logger.logObject.getter();
          os_log_type_t v168 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v167, v168))
          {
            uint64_t v169 = swift_slowAlloc();
            v231[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v169 = 136315138;
            swift_bridgeObjectRetain();
            uint64_t v170 = Array.description.getter();
            uint64_t v171 = v166;
            unint64_t v173 = v172;
            swift_bridgeObjectRelease();
            *(void *)(v169 + 4) = sub_100076010(v170, v173, v231);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v167, v168, "[Management] activeCollaborators=%s", (uint8_t *)v169, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            v177(v171, v128);
            v174 = v200;
          }
          else
          {

            swift_bridgeObjectRelease_n();
            v177(v166, v128);
            v174 = v165;
          }
          ((void (*)(char *, uint64_t))v176)(v174, v207);
          (*(void (**)(char *, uint64_t))(v225 + 8))(v202, v224);
          (*(void (**)(char *, uint64_t))(v227 + 8))(v208, v228);
          sub_1000637B8((uint64_t)v180, &qword_1010CE0E0);
          uint64_t v93 = v229;
          return sub_1000637B8(v93, &qword_1010CE7D0);
        }
        swift_beginAccess();
        uint64_t v97 = swift_weakLoadStrong();
        uint64_t v98 = v189;
        uint64_t v99 = (uint64_t)v188;
        uint64_t v100 = v187;
        uint64_t v101 = (uint64_t)v186;
        if (v97)
        {
          swift_getKeyPath();
          swift_getKeyPath();
          uint64_t v102 = v184;
          static Published.subscript.getter();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v103 = (uint64_t)v183;
          Playlist.collaboration.getter();
          (*(void (**)(char *, uint64_t))(v193 + 8))(v102, v194);
          uint64_t v104 = v224;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v211)(v103, 1, v224) != 1)
          {
            Playlist.Collaboration.invitationExpirationDate.getter();
            (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v103, v104);
LABEL_39:
            uint64_t v105 = v190;
            Playlist.Collaboration.invitationExpirationDate.getter();
            uint64_t v106 = v99 + *(int *)(v185 + 48);
            sub_10006CAB8(v101, v99, &qword_1010CE0E8);
            sub_10006CAB8(v105, v106, &qword_1010CE0E8);
            uint64_t v107 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48);
            if (v107(v99, 1, v98) == 1)
            {
              sub_1000637B8(v105, &qword_1010CE0E8);
              sub_1000637B8(v101, &qword_1010CE0E8);
              if (v107(v106, 1, v98) == 1)
              {
                sub_1000637B8(v99, &qword_1010CE0E8);
                uint64_t v96 = (uint64_t)v221;
                goto LABEL_48;
              }
            }
            else
            {
              uint64_t v108 = v182;
              sub_10006CAB8(v99, v182, &qword_1010CE0E8);
              if (v107(v106, 1, v98) != 1)
              {
                uint64_t v109 = v181;
                (*(void (**)(char *, uint64_t, uint64_t))(v100 + 32))(v181, v106, v98);
                sub_100BBBBAC(&qword_1010CE7E8, (void (*)(uint64_t))&type metadata accessor for Date);
                LODWORD(v212) = dispatch thunk of static Equatable.== infix(_:_:)();
                uint64_t v110 = *(void (**)(char *, uint64_t))(v100 + 8);
                v110(v109, v98);
                sub_1000637B8(v190, &qword_1010CE0E8);
                sub_1000637B8(v101, &qword_1010CE0E8);
                v110((char *)v108, v98);
                sub_1000637B8(v99, &qword_1010CE0E8);
                uint64_t v96 = (uint64_t)v221;
                if (v212) {
                  goto LABEL_48;
                }
LABEL_46:
                swift_beginAccess();
                if (swift_weakLoadStrong())
                {
                  swift_getKeyPath();
                  swift_getKeyPath();
                  LOBYTE(v232) = 0;
                  static Published.subscript.setter();
                }
                goto LABEL_48;
              }
              sub_1000637B8(v190, &qword_1010CE0E8);
              sub_1000637B8(v101, &qword_1010CE0E8);
              (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v108, v98);
            }
            sub_1000637B8(v99, &qword_1010CE7B8);
            uint64_t v96 = (uint64_t)v221;
            goto LABEL_46;
          }
          sub_1000637B8(v103, &qword_1010CE0E0);
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v100 + 56))(v101, 1, 1, v98);
        goto LABEL_39;
      }
    }
  }
  return result;
}

uint64_t sub_100B9E2A4()
{
  return sub_1009E6798();
}

uint64_t sub_100B9E2B8()
{
  return sub_1009E6798();
}

uint64_t sub_100B9E2CC()
{
  return sub_1009E6798();
}

uint64_t sub_100B9E2E0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100B9E358()
{
  return sub_1009E69E4();
}

uint64_t sub_100B9E36C()
{
  return sub_1009E69E4();
}

uint64_t sub_100B9E380()
{
  return sub_1009E69E4();
}

uint64_t sub_100B9E394()
{
  return sub_1009E69E4();
}

uint64_t sub_100B9E3A8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100B9E424(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Playlist();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v6 = __chkstk_darwin();
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2, v6);
  swift_getKeyPath();
  swift_getKeyPath();
  ((void (*)(char *, char *, uint64_t))v9)(v5, v8, v2);
  swift_retain();
  static Published.subscript.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_100B9E594()
{
  uint64_t v0 = type metadata accessor for Playlist.Collaborator.Status();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v28 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100063814(&qword_1010CE0F8);
  __chkstk_darwin();
  uint64_t v31 = (uint64_t)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Playlist();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CE0E0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CE100);
  __chkstk_darwin();
  uint64_t v29 = (uint64_t)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v27 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v27 - v13;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Playlist.collaboration.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = type metadata accessor for Playlist.Collaboration();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15) == 1)
  {
    sub_1000637B8((uint64_t)v9, &qword_1010CE0E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v14, 1, 1, v0);
  }
  else
  {
    Playlist.Collaboration.collaboratorStatus.getter();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v15);
  }
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v12, enum case for Playlist.Collaborator.Status.pending(_:), v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v12, 0, 1, v0);
  uint64_t v17 = v31;
  uint64_t v18 = v31 + *(int *)(v30 + 48);
  uint64_t v19 = &qword_1010CE100;
  sub_10006CAB8((uint64_t)v14, v31, &qword_1010CE100);
  sub_10006CAB8((uint64_t)v12, v18, &qword_1010CE100);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v20(v17, 1, v0) == 1)
  {
    sub_1000637B8((uint64_t)v12, &qword_1010CE100);
    sub_1000637B8((uint64_t)v14, &qword_1010CE100);
    if (v20(v18, 1, v0) == 1)
    {
      char v21 = -1;
    }
    else
    {
      uint64_t v19 = &qword_1010CE0F8;
      char v21 = 0;
    }
  }
  else
  {
    uint64_t v22 = v29;
    sub_10006CAB8(v17, v29, &qword_1010CE100);
    if (v20(v18, 1, v0) == 1)
    {
      sub_1000637B8((uint64_t)v12, &qword_1010CE100);
      sub_1000637B8((uint64_t)v14, &qword_1010CE100);
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v22, v0);
      char v21 = 0;
      uint64_t v19 = &qword_1010CE0F8;
    }
    else
    {
      uint64_t v23 = v22;
      uint64_t v24 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v28, v18, v0);
      sub_100BBBBAC(&qword_1010CE108, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator.Status);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v1 + 8);
      v25(v24, v0);
      uint64_t v19 = &qword_1010CE100;
      sub_1000637B8((uint64_t)v12, &qword_1010CE100);
      sub_1000637B8((uint64_t)v14, &qword_1010CE100);
      v25((char *)v23, v0);
    }
  }
  sub_1000637B8(v17, v19);
  return v21 & 1;
}

uint64_t sub_100B9EB5C()
{
  uint64_t v0 = type metadata accessor for Playlist();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v6[15] == 1 && (sub_100B9F290() & 1) == 0) {
    return 1;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v4 = Playlist.isOwner.getter();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  if (v4 == 2) {
    return 0;
  }
  else {
    return v4 & 1;
  }
}

size_t sub_100B9ECE8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v1 == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    sub_100B9B3D8(v1);
  }
  return v1;
}

uint64_t sub_100B9EE4C()
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v0 = type metadata accessor for String.LocalizationValue();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v16 - v4;
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v6 = *(void *)(v17 + 16);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v7 = *(void *)(v17 + 16);
  swift_bridgeObjectRelease();
  if (v7 == 1)
  {
    if (!v6) {
      return 0;
    }
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v8);
    uint64_t v17 = v6;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    unint64_t v9 = 0xD000000000000012;
    unint64_t v10 = 0x8000000100DD5730;
  }
  else
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v11);
    uint64_t v17 = v7;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    if (v6)
    {
      v12._countAndFlagsBits = 0x2064656E696F6A20;
      v12._object = (void *)0xAC00000020A280E2;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v12);
      uint64_t v17 = v6;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      unint64_t v9 = 0x676E69646E657020;
      unint64_t v10 = 0xE800000000000000;
    }
    else
    {
      unint64_t v10 = 0x8000000100DD5710;
      unint64_t v9 = 0xD000000000000011;
    }
  }
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v9);
  String.LocalizationValue.init(stringInterpolation:)();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v5, v0);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v14 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v13 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v0);
  return v13;
}

uint64_t sub_100B9F290()
{
  uint64_t v0 = type metadata accessor for Playlist();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CE0E0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CE0E8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  Swift::String v12 = (char *)&v19 - v11;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Playlist.collaboration.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v13 = type metadata accessor for Playlist.Collaboration();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v5, 1, v13) == 1)
  {
    sub_1000637B8((uint64_t)v5, &qword_1010CE0E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  else
  {
    Playlist.Collaboration.invitationExpirationDate.getter();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v5, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
      uint64_t v16 = v19;
      Date.init()();
      char v15 = static Date.> infix(_:_:)();
      uint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
      v17(v16, v8);
      v17(v12, v8);
      return v15 & 1;
    }
  }
  sub_1000637B8((uint64_t)v7, &qword_1010CE0E8);
  char v15 = 1;
  return v15 & 1;
}

uint64_t sub_100B9F644()
{
  uint64_t v1 = v0;
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin();
  uint64_t v64 = (char *)&v62 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Calendar();
  uint64_t v73 = *(void *)(v3 - 8);
  uint64_t v74 = v3;
  __chkstk_darwin();
  int v72 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DateComponents();
  uint64_t v76 = *(void *)(v5 - 8);
  uint64_t v77 = v5;
  __chkstk_darwin();
  uint64_t v75 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale();
  __chkstk_darwin();
  unint64_t v67 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  uint64_t v69 = *(void *)(v8 - 8);
  uint64_t v70 = v8;
  __chkstk_darwin();
  uint64_t v66 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v68 = (char *)&v62 - v10;
  uint64_t v11 = type metadata accessor for Playlist();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v63 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v65 = (char *)&v62 - v14;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v62 - v15;
  sub_100063814(&qword_1010CE0E0);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CE0E8);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Date();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin();
  uint64_t v71 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v80 = (char *)&v62 - v24;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v79 = v1;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Playlist.collaboration.getter();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v78 = v11;
  v25(v16, v11);
  uint64_t v26 = type metadata accessor for Playlist.Collaboration();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v18, 1, v26) == 1)
  {
    sub_1000637B8((uint64_t)v18, &qword_1010CE0E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
LABEL_4:
    sub_1000637B8((uint64_t)v20, &qword_1010CE0E8);
    return 0;
  }
  Playlist.Collaboration.invitationExpirationDate.getter();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1) {
    goto LABEL_4;
  }
  uint64_t v30 = v21;
  uint64_t v31 = *(void (**)(char *, char *))(v22 + 32);
  uint64_t v32 = v80;
  uint64_t v62 = v30;
  v31(v80, v20);
  if ((sub_100B9F290() & 1) == 0) {
    goto LABEL_9;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v33 = v65;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v34 = Playlist.isOwner.getter();
  v25(v33, v78);
  if (v34)
  {
    uint64_t v55 = v68;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v57 = v69;
    uint64_t v56 = v70;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v55, v70);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    id v58 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v28 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v55, v56);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v80, v62);
  }
  else
  {
LABEL_9:
    uint64_t v35 = v25;
    uint64_t v36 = v72;
    static Calendar.autoupdatingCurrent.getter();
    sub_100063814(&qword_1010CE0F0);
    uint64_t v37 = type metadata accessor for Calendar.Component();
    uint64_t v38 = *(void *)(v37 - 8);
    unint64_t v39 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_100E251D0;
    (*(void (**)(unint64_t, void, uint64_t))(v38 + 104))(v40 + v39, enum case for Calendar.Component.day(_:), v37);
    sub_100AED730(v40);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v41 = v71;
    Date.init()();
    uint64_t v42 = v75;
    Calendar.dateComponents(_:from:to:)();
    swift_bridgeObjectRelease();
    uint64_t v43 = *(void (**)(char *, uint64_t))(v22 + 8);
    uint64_t v44 = v62;
    v43(v41, v62);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v36, v74);
    uint64_t v45 = DateComponents.day.getter();
    if (v46)
    {
      (*(void (**)(char *, uint64_t))(v76 + 8))(v42, v77);
      v43(v32, v44);
      return 0;
    }
    uint64_t v47 = v45;
    swift_getKeyPath();
    swift_getKeyPath();
    char v48 = v63;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    char v49 = Playlist.isOwner.getter();
    v35(v48, v78);
    uint64_t v50 = v69;
    uint64_t v51 = (void (**)(char *, char *, uint64_t))(v69 + 16);
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v52._object = (void *)0x8000000100DD5610;
    v52._countAndFlagsBits = 0xD000000000000010;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v52);
    uint64_t v81 = v47;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    if (v49)
    {
      unint64_t v53 = 0xD00000000000006CLL;
      unint64_t v54 = 0x8000000100DD5630;
    }
    else
    {
      unint64_t v53 = 0x2E29732879616420;
      unint64_t v54 = 0xE800000000000000;
    }
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v53);
    uint64_t v59 = v68;
    String.LocalizationValue.init(stringInterpolation:)();
    uint64_t v60 = v70;
    (*v51)(v66, v59, v70);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    id v61 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v28 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v42, v77);
    v43(v80, v62);
  }
  return v28;
}

uint64_t sub_100BA0184@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Playlist();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CE0E0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_100B9F290())
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    return v9(a1, 1, 1, v8);
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    Playlist.collaboration.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v11 = type metadata accessor for Playlist.Collaboration();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
    {
      sub_1000637B8((uint64_t)v7, &qword_1010CE0E0);
      uint64_t v13 = type metadata accessor for URL();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
    }
    else
    {
      Playlist.Collaboration.invitationURL.getter();
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v7, v11);
    }
  }
}

uint64_t sub_100BA0430@<X0>(char *a1@<X8>)
{
  sub_100063814(&qword_1010CD508);
  __chkstk_darwin();
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v6 = &v11[-v5];
  uint64_t v7 = v1
     + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel;
  swift_beginAccess();
  sub_10006CAB8(v7, (uint64_t)v6, &qword_1010CD508);
  uint64_t v8 = sub_100063814((uint64_t *)&unk_1010C8960);
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1) {
    return sub_10003CABC((uint64_t)v6, (uint64_t)a1, (uint64_t *)&unk_1010C8960);
  }
  sub_1000637B8((uint64_t)v6, &qword_1010CD508);
  sub_100BA0608(a1);
  sub_10006CAB8((uint64_t)a1, (uint64_t)v4, (uint64_t *)&unk_1010C8960);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
  swift_beginAccess();
  sub_10002D09C((uint64_t)v4, v7, &qword_1010CD508);
  return swift_endAccess();
}

uint64_t sub_100BA0608@<X0>(char *a1@<X8>)
{
  uint64_t v24 = a1;
  sub_100063814(&qword_1010C94F8);
  __chkstk_darwin();
  uint64_t v23 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814((uint64_t *)&unk_1010CEE80);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Playlist();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Artwork();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v21 - v11;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Playlist.artwork.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8) == 1)
  {
    sub_1000637B8((uint64_t)v3, (uint64_t *)&unk_1010CEE80);
    uint64_t v13 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v24, 1, 1, v13);
  }
  else
  {
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v15(v12, v3, v8);
    uint64_t v16 = v22;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v22, v12, v8);
    uint64_t v17 = (uint64_t)v23;
    static Artwork.CropStyle.boundedBox.getter();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v18 = type metadata accessor for Artwork.CropStyle();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
    uint64_t v19 = v24;
    v15(v24, v16, v8);
    uint64_t v20 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_10003CABC(v17, (uint64_t)&v19[*(int *)(v20 + 20)], &qword_1010C94F8);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
  }
}

uint64_t sub_100BA09F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 80) = a5;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a4;
  uint64_t v6 = type metadata accessor for Playlist();
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = *(void *)(v6 - 8);
  *(void *)(v5 + 48) = swift_task_alloc();
  return _swift_task_switch(sub_100BA0AB8, 0, 0);
}

uint64_t sub_100BA0AB8()
{
  *(void *)(v0 + 56) = *(void *)(*(void *)(v0 + 24) + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100BA0BC0;
  uint64_t v2 = *(void *)(v0 + 48);
  char v3 = *(unsigned char *)(v0 + 80);
  return Collaboration.Manager.updateShareOption(_:for:)(v3, v2);
}

uint64_t sub_100BA0BC0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[6];
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[4];
  if (v0)
  {
    swift_release();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_100BC53B4;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_release();
    uint64_t v6 = sub_100BA0D7C;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_100BA0D7C()
{
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 72) != 0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100BA0DF0()
{
  uint64_t v1 = v0;
  sub_100063814(&qword_1010CAA90);
  __chkstk_darwin();
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = 0;
  v6[3] = 0;
  v6[4] = v1;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  swift_retain();
  if (v7 == 1)
  {
    sub_1000637B8((uint64_t)v3, &qword_1010CAA90);
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v9 = v10;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v9 = 0;
    }
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = &unk_1010CE0D0;
  *(void *)(v11 + 24) = v6;
  if (v9 | v8)
  {
    v13[0] = 0;
    v13[1] = 0;
    void v13[2] = v8;
    void v13[3] = v9;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_100BA1034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for Playlist();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  void v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_100BA1104, 0, 0);
}

uint64_t sub_100BA1104()
{
  v0[7] = *(void *)(v0[2] + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100BA1208;
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  return Collaboration.Manager.end(_:)(v2, v3);
}

uint64_t sub_100BA1208()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[4] + 8))(v2[5], v2[3]);
    swift_release();
    uint64_t v3 = sub_100BA1404;
  }
  else
  {
    uint64_t v5 = v2[5];
    uint64_t v4 = v2[6];
    uint64_t v8 = v2 + 3;
    uint64_t v6 = v2[3];
    uint64_t v7 = v8[1];
    swift_release();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v9(v5, v6);
    v9(v4, v6);
    uint64_t v3 = sub_100BA139C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100BA139C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100BA1404()
{
  v0[10] = *(void *)(v0[2] + 16);
  type metadata accessor for MainActor();
  swift_retain();
  v0[11] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100BA14AC, v2, v1);
}

uint64_t sub_100BA14AC()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return _swift_task_switch(sub_100BA1528, 0, 0);
}

uint64_t sub_100BA1528()
{
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100BA1598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for Playlist();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  void v4[6] = v6;
  v4[7] = *(void *)(v6 - 8);
  v4[8] = swift_task_alloc();
  return _swift_task_switch(sub_100BA16B4, 0, 0);
}

uint64_t sub_100BA16B4()
{
  v0[9] = *(void *)(v0[2] + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[10] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100BA17BC;
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[5];
  return Collaboration.Manager.resetInvitationURL(_:)(v2, v3);
}

uint64_t sub_100BA17BC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[4] + 8))(v2[5], v2[3]);
    swift_release();
    uint64_t v3 = sub_100BA19CC;
  }
  else
  {
    uint64_t v5 = v2[7];
    uint64_t v4 = v2[8];
    uint64_t v7 = v2[5];
    uint64_t v6 = v2[6];
    uint64_t v10 = v2 + 3;
    uint64_t v8 = v2[3];
    uint64_t v9 = v10[1];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = sub_100BA1960;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100BA1960()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100BA19CC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  *(unsigned char *)(v0 + 112) = 0;
  swift_retain();
  static Published.subscript.setter();
  *(void *)(v0 + 96) = *(void *)(v1 + 16);
  type metadata accessor for MainActor();
  swift_retain();
  *(void *)(v0 + 104) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100BA1AC0, v3, v2);
}

uint64_t sub_100BA1AC0()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return _swift_task_switch(sub_100BA1B3C, 0, 0);
}

uint64_t sub_100BA1B3C()
{
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100BA1BB0(uint64_t a1)
{
  sub_100063814(&qword_1010CAA90);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CAC40);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Playlist.Collaborator();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v18 - v11;
  sub_10006CAB8(a1, (uint64_t)v6, &qword_1010CAC40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000637B8((uint64_t)v6, &qword_1010CAC40);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v13(v12, v6, v7);
    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
    unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v16 = (char *)swift_allocObject();
    *((void *)v16 + 2) = 0;
    *((void *)v16 + 3) = 0;
    *((void *)v16 + 4) = v1;
    v13(&v16[v15], v10, v7);
    swift_retain();
    sub_100066A94((uint64_t)v4, (uint64_t)&unk_1010CE0C0, (uint64_t)v16);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v12, v7);
  }
  return result;
}

uint64_t sub_100BA1EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = type metadata accessor for Playlist();
  _OWORD v5[4] = v6;
  uint64_t v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  v5[7] = swift_task_alloc();
  return _swift_task_switch(sub_100BA1F98, 0, 0);
}

uint64_t sub_100BA1F98()
{
  v0[8] = *(void *)(v0[2] + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100BA20A0;
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = v0[3];
  return Collaboration.Manager.remove(collaborator:in:)(v2, v4, v3);
}

uint64_t sub_100BA20A0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[5] + 8))(v2[6], v2[4]);
    swift_release();
    uint64_t v3 = sub_100BA229C;
  }
  else
  {
    uint64_t v5 = v2[6];
    uint64_t v4 = v2[7];
    uint64_t v8 = v2 + 4;
    uint64_t v6 = v2[4];
    uint64_t v7 = v8[1];
    swift_release();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v9(v5, v6);
    v9(v4, v6);
    uint64_t v3 = sub_100BA2234;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100BA2234()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100BA229C()
{
  v0[11] = *(void *)(v0[2] + 16);
  type metadata accessor for MainActor();
  swift_retain();
  v0[12] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100BA2344, v2, v1);
}

uint64_t sub_100BA2344()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return _swift_task_switch(sub_100BA23C0, 0, 0);
}

uint64_t sub_100BA23C0()
{
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100BA2430(uint64_t a1, char a2)
{
  v18[0] = a1;
  int v20 = a2 & 1;
  sub_100063814(&qword_1010CAA90);
  __chkstk_darwin();
  uint64_t v19 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Playlist.Collaborator();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin();
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = __chkstk_darwin();
  uint64_t v10 = (char *)v18 - v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v11(v7, a1, v4, v8);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v12 = (void (*)(unsigned char *, void))static Published.subscript.modify();
  sub_100BB87B8((uint64_t)v10, v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  v12(v21, 0);
  swift_release();
  swift_release();
  uint64_t v13 = type metadata accessor for TaskPriority();
  uint64_t v14 = (uint64_t)v19;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v19, 1, 1, v13);
  ((void (*)(char *, void, uint64_t))v11)(v10, v18[0], v4);
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0;
  *(void *)(v16 + 32) = v18[1];
  *(unsigned char *)(v16 + 40) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v16 + v15, v10, v4);
  swift_retain();
  sub_100066A94(v14, (uint64_t)&unk_1010CE098, v16);
  return swift_release();
}

uint64_t sub_100BA26F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 136) = a5;
  *(void *)(v6 + 16) = a4;
  *(void *)(v6 + 24) = a6;
  uint64_t v7 = type metadata accessor for Playlist.Collaborator();
  *(void *)(v6 + 32) = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)(v6 + 40) = v8;
  *(void *)(v6 + 48) = *(void *)(v8 + 64);
  *(void *)(v6 + 56) = swift_task_alloc();
  sub_100063814(&qword_1010CAA90);
  *(void *)(v6 + 64) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Playlist();
  *(void *)(v6 + 72) = v9;
  *(void *)(v6 + 80) = *(void *)(v9 - 8);
  *(void *)(v6 + 88) = swift_task_alloc();
  return _swift_task_switch(sub_100BA2850, 0, 0);
}

uint64_t sub_100BA2850()
{
  char v1 = *(unsigned char *)(v0 + 136);
  *(void *)(v0 + 96) = *(void *)(*(void *)(v0 + 16) + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  void *v2 = v0;
  v2[1] = sub_100BA2960;
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 24);
  return Collaboration.Manager.moderate(_:collaborator:in:)(v1 & 1, v4, v3);
}

uint64_t sub_100BA2960()
{
  uint64_t v2 = *(void *)(*v1 + 88);
  uint64_t v3 = *(void *)(*v1 + 80);
  uint64_t v4 = *(void *)(*v1 + 72);
  uint64_t v5 = *v1;
  *(void *)(v5 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0)
  {
    return _swift_task_switch(sub_100BA2B38, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_100BA2B38()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[2];
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v1, 1, 1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v4, v5);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v8 = static MainActor.shared.getter();
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = (char *)swift_allocObject();
  *((void *)v10 + 2) = v8;
  *((void *)v10 + 3) = &protocol witness table for MainActor;
  *((void *)v10 + 4) = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v10[v9], v2, v5);
  sub_100B2992C(v1, (uint64_t)&unk_1010CE0A8, (uint64_t)v10);
  swift_release();
  v0[15] = *(void *)(v6 + 16);
  swift_retain();
  v0[16] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100BA2CF0, v12, v11);
}

uint64_t sub_100BA2CF0()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_release();
  Collaboration.Manager.handleError(_:)(v1);
  swift_release();
  return _swift_task_switch(sub_100BA2D6C, 0, 0);
}

uint64_t sub_100BA2D6C()
{
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100BA2DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  v5[6] = a1;
  type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100BA2E84, v7, v6);
}

uint64_t sub_100BA2E84()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v3 = (void (*)(void *, void))static Published.subscript.modify();
  sub_100BBA0F0(v1, v2);
  v3(v0 + 2, 0);
  swift_release();
  swift_release();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Collaboration.Management.Model.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__pendingCollaborators;
  uint64_t v2 = sub_100063814(&qword_1010CD4A8);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__activeCollaborators, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__transientCollaborators;
  uint64_t v5 = sub_100063814(&qword_1010CD4C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__playlist;
  uint64_t v7 = sub_100063814(&qword_1010CD4D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isOpen;
  uint64_t v9 = sub_100063814(&qword_1010CD4E0);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isResetingURL, v9);
  v10(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__shouldDismiss, v9);
  v10(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__hasNetworkConnectivity, v9);
  sub_1000637B8(v0 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel, &qword_1010CD508);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Collaboration.Management.Model.__deallocating_deinit()
{
  Collaboration.Management.Model.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_100BA31D8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Collaboration.Management.Model(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t Collaboration.Management.View.init(model:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (int *)type metadata accessor for Collaboration.Management.View(0);
  uint64_t v3 = (uint64_t *)((char *)a1 + v2[5]);
  *uint64_t v3 = swift_getKeyPath();
  sub_100063814(&qword_1010C8950);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (uint64_t *)((char *)a1 + v2[6]);
  *uint64_t v4 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_1010CD530);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = (uint64_t *)((char *)a1 + v2[7]);
  *uint64_t v5 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_1010C8970);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = v2[8];
  sub_100063814(&qword_1010CD540);
  State.init(wrappedValue:)();
  *(_OWORD *)((char *)a1 + v6) = v13;
  uint64_t v7 = (char *)a1 + v2[9];
  State.init(wrappedValue:)();
  *uint64_t v7 = v13;
  *((void *)v7 + 1) = *((void *)&v13 + 1);
  uint64_t v8 = (char *)a1 + v2[10];
  State.init(wrappedValue:)();
  *uint64_t v8 = v13;
  *((void *)v8 + 1) = *((void *)&v13 + 1);
  uint64_t v9 = (char *)a1 + v2[11];
  State.init(wrappedValue:)();
  *uint64_t v9 = v13;
  *((void *)v9 + 1) = *((void *)&v13 + 1);
  uint64_t v10 = (char *)a1 + v2[12];
  State.init(wrappedValue:)();
  *uint64_t v10 = v13;
  *((void *)v10 + 1) = *((void *)&v13 + 1);
  type metadata accessor for Collaboration.Management.Model(0);
  sub_100BBBBAC(&qword_1010CD548, (void (*)(uint64_t))type metadata accessor for Collaboration.Management.Model);
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *a1 = result;
  a1[1] = v12;
  return result;
}

uint64_t property wrapper backing initializer of Collaboration.Management.View.shareSheet()
{
  sub_100063814(&qword_1010CD540);
  State.init(wrappedValue:)();
  return v1;
}

uint64_t property wrapper backing initializer of Collaboration.Management.View.viewModel()
{
  type metadata accessor for Collaboration.Management.Model(0);
  sub_100BBBBAC(&qword_1010CD548, (void (*)(uint64_t))type metadata accessor for Collaboration.Management.Model);

  return ObservedObject.init(wrappedValue:)();
}

uint64_t Collaboration.Management.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v24 = a1;
  uint64_t v21 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  uint64_t v3 = *(void *)(v21 + 64);
  __chkstk_darwin();
  uint64_t v4 = sub_100063814(&qword_1010CD550);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  uint64_t v23 = v5;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v2;
  sub_100063814(&qword_1010CD558);
  uint64_t v8 = sub_10006389C(&qword_1010CD560);
  uint64_t v9 = sub_10006389C(&qword_1010CD568);
  uint64_t v10 = sub_10006389C(&qword_1010CD570);
  uint64_t v11 = type metadata accessor for InsetGroupedListStyle();
  unint64_t v12 = sub_100BBB9AC();
  uint64_t v26 = v10;
  uint64_t v27 = v11;
  unint64_t v28 = v12;
  uint64_t v29 = &protocol witness table for InsetGroupedListStyle;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v14 = sub_10006389C((uint64_t *)&unk_1010CD5A0);
  uint64_t v15 = sub_100063858(&qword_1010CF2B0, (uint64_t *)&unk_1010CD5A0);
  uint64_t v26 = v14;
  uint64_t v27 = v15;
  uint64_t v16 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = v8;
  uint64_t v27 = v9;
  unint64_t v28 = OpaqueTypeConformance2;
  uint64_t v29 = (void *)v16;
  swift_getOpaqueTypeConformance2();
  NavigationStack.init<>(root:)();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_100BC10B4(v2, (uint64_t)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View);
  unint64_t v17 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v18 = swift_allocObject();
  sub_100BBBBF4((uint64_t)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, type metadata accessor for Collaboration.Management.View);
  sub_100063858((unint64_t *)&unk_1010CD5B0, &qword_1010CD550);
  uint64_t v19 = v22;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v7, v19);
}

uint64_t sub_100BA38A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v54 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  uint64_t v55 = v3;
  uint64_t v57 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v51 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for String.LocalizationValue();
  uint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin();
  char v46 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v45 = (char *)&v44 - v6;
  uint64_t v59 = sub_100063814((uint64_t *)&unk_1010CD5A0);
  uint64_t v53 = *(void *)(v59 - 8);
  __chkstk_darwin();
  Swift::String v52 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814(&qword_1010CD568);
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  __chkstk_darwin();
  id v58 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for InsetGroupedListStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  long long v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100063814(&qword_1010CD588);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin();
  unint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100063814(&qword_1010CD570);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100063814(&qword_1010CD560);
  uint64_t v49 = *(void *)(v50 - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = a1;
  uint64_t v64 = a1;
  sub_100063814(&qword_1010CE2B8);
  sub_100063858(&qword_1010CE2C0, &qword_1010CE2B8);
  List<>.init(content:)();
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1010C86A0 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_1010CD3E8;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v19, v17, v14);
  uint64_t v24 = (uint64_t *)&v19[*(int *)(v63 + 36)];
  *uint64_t v24 = KeyPath;
  v24[1] = v23;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  InsetGroupedListStyle.init()();
  unint64_t v25 = sub_100BBB9AC();
  View.listStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1000637B8((uint64_t)v19, &qword_1010CD570);
  uint64_t v26 = v45;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v27 = v47;
  uint64_t v28 = v48;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v46, v26, v48);
  uint64_t v29 = v21;
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v30 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v31 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v33 = v32;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v28);
  uint64_t v65 = v31;
  uint64_t v66 = v33;
  uint64_t v34 = v57;
  sub_100BC10B4(v56, v57, type metadata accessor for Collaboration.Management.View);
  unint64_t v35 = (*(unsigned __int8 *)(v54 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  uint64_t v36 = swift_allocObject();
  sub_100BBBBF4(v34, v36 + v35, type metadata accessor for Collaboration.Management.View);
  sub_10005D27C();
  uint64_t v37 = v52;
  Button<>.init<A>(_:action:)();
  static Font.Weight.semibold.getter();
  uint64_t v38 = sub_100063858(&qword_1010CF2B0, (uint64_t *)&unk_1010CD5A0);
  uint64_t v40 = v58;
  uint64_t v39 = v59;
  View.fontWeight(_:)();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v39);
  uint64_t v65 = v63;
  uint64_t v66 = v10;
  unint64_t v67 = v25;
  uint64_t v68 = &protocol witness table for InsetGroupedListStyle;
  swift_getOpaqueTypeConformance2();
  uint64_t v65 = v39;
  uint64_t v66 = v38;
  swift_getOpaqueTypeConformance2();
  uint64_t v41 = v61;
  uint64_t v42 = v50;
  View.navigationBarItems<A>(trailing:)();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v29, v42);
}

uint64_t sub_100BA4160@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v136 = a2;
  uint64_t v133 = type metadata accessor for Playlist();
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin();
  uint64_t v131 = (char *)&v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CE2C8);
  __chkstk_darwin();
  uint64_t v135 = (uint64_t)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  os_log_type_t v134 = (char *)&v106 - v5;
  uint64_t v109 = sub_100063814(&qword_1010CE2D0);
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin();
  uint64_t v117 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v115 = (char *)&v106 - v7;
  sub_100063814(&qword_1010CE2D8);
  __chkstk_darwin();
  uint64_t v116 = (uint64_t)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v114 = (uint64_t)&v106 - v9;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v119 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = type metadata accessor for String.LocalizationValue();
  uint64_t v138 = *(void *)(v129 - 8);
  __chkstk_darwin();
  uint64_t v124 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v118 = (char *)&v106 - v12;
  uint64_t v123 = sub_100063814(&qword_1010CE2E0);
  uint64_t v113 = *(void *)(v123 - 8);
  __chkstk_darwin();
  uint64_t v112 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v107 = (char *)&v106 - v14;
  __chkstk_darwin();
  uint64_t v120 = (char *)&v106 - v15;
  sub_100063814(&qword_1010CAC40);
  __chkstk_darwin();
  uint64_t v110 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for Playlist.Collaborator();
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin();
  uint64_t v111 = (char *)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CE2E8);
  __chkstk_darwin();
  unint64_t v137 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v142 = (uint64_t)&v106 - v19;
  uint64_t v143 = type metadata accessor for Prominence();
  uint64_t v139 = *(void (***)(char *, uint64_t))(v143 - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v106 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_100063814(&qword_1010CE2F0);
  __chkstk_darwin();
  uint64_t v127 = sub_100063814(&qword_1010CE2F8);
  uint64_t v128 = *(void *)(v127 - 8);
  __chkstk_darwin();
  uint64_t v23 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100063814(&qword_1010CE300);
  uint64_t v140 = *(void *)(v24 - 8);
  uint64_t v141 = v24;
  __chkstk_darwin();
  uint64_t v130 = (char *)&v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v27 = (char *)&v106 - v26;
  __chkstk_darwin();
  uint64_t v29 = (void (**)(char *, uint64_t))((char *)&v106 - v28);
  uint64_t v144 = a1;
  sub_100BA88AC(a1);
  uint64_t v125 = sub_100063814(&qword_1010CE308);
  uint64_t v30 = sub_10006389C(&qword_1010CE310);
  uint64_t v31 = sub_10006389C(&qword_1010CE318);
  unint64_t v32 = sub_100BC30C8();
  uint64_t v33 = sub_100BC318C(&qword_1010CE348, &qword_1010CE318, (void (*)(void))sub_100BC3204);
  uint64_t v145 = v30;
  uint64_t v146 = v31;
  uint64_t v34 = a1;
  unint64_t v147 = v32;
  uint64_t v148 = v33;
  swift_getOpaqueTypeConformance2();
  sub_100BC32D0();
  Section<>.init(header:content:)();
  unint64_t v35 = v139;
  uint64_t v36 = v143;
  ((void (*)(char *, void, uint64_t))v139[13])(v21, enum case for Prominence.increased(_:), v143);
  sub_100BC3368();
  uint64_t v37 = v127;
  View.headerProminence(_:)();
  v35[1](v21, v36);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v23, v37);
  uint64_t v38 = *(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v140 + 32);
  uint64_t v139 = v29;
  uint64_t v39 = v27;
  uint64_t v40 = v138;
  v38(v29, v39, v141);
  uint64_t v143 = v34;
  if ((sub_100B9E594() & 1) == 0) {
    goto LABEL_7;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (*(void *)(v145 + 16))
  {
    uint64_t v41 = v121;
    uint64_t v42 = (uint64_t)v110;
    uint64_t v43 = v122;
    (*(void (**)(char *, unint64_t, uint64_t))(v121 + 16))(v110, v145 + ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80)), v122);
    uint64_t v44 = 0;
    uint64_t v45 = v124;
  }
  else
  {
    uint64_t v44 = 1;
    uint64_t v45 = v124;
    uint64_t v43 = v122;
    uint64_t v41 = v121;
    uint64_t v42 = (uint64_t)v110;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v42, v44, 1, v43);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v42, 1, v43) == 1)
  {
    sub_1000637B8(v42, &qword_1010CAC40);
LABEL_7:
    uint64_t v46 = sub_100063814(&qword_1010CE3A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v142, 1, 1, v46);
    goto LABEL_14;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v111, v42, v43);
  __chkstk_darwin();
  uint64_t v47 = v118;
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v45, v47, v129);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v48 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v49 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v51 = v50;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v47, v129);
  uint64_t v145 = v49;
  uint64_t v146 = v51;
  sub_10005D27C();
  uint64_t v145 = Text.init<A>(_:)();
  uint64_t v146 = v52;
  LOBYTE(v147) = v53 & 1;
  uint64_t v148 = v54;
  _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  sub_100BBBBAC(&qword_1010CE3E8, (void (*)(uint64_t))_s10ManagementO4ViewV19CollaboratorRowViewVMa);
  uint64_t v55 = v107;
  Section<>.init(header:content:)();
  (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v120, v55, v123);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v145 == 1)
  {
    __chkstk_darwin();
    sub_100063814(&qword_1010CE410);
    uint64_t v56 = sub_10006389C(&qword_1010CE418);
    uint64_t v57 = sub_10006389C(&qword_1010CE420);
    uint64_t v58 = type metadata accessor for BorderlessButtonStyle();
    uint64_t v59 = sub_100063858(&qword_1010CE428, &qword_1010CE420);
    uint64_t v60 = sub_100BBBBAC(&qword_1010CE430, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
    uint64_t v145 = v57;
    uint64_t v146 = v58;
    unint64_t v147 = v59;
    uint64_t v148 = v60;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v145 = v56;
    uint64_t v146 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2();
    uint64_t v62 = v114;
    Section<>.init(content:)();
    uint64_t v63 = sub_100063814(&qword_1010CE3F0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 0, 1, v63);
  }
  else
  {
    uint64_t v64 = sub_100063814(&qword_1010CE3F0);
    uint64_t v62 = v114;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v114, 1, 1, v64);
  }
  __chkstk_darwin();
  sub_100BAD624((uint64_t)&v145);
  sub_100063814(&qword_1010CE3F8);
  sub_100BC3540();
  uint64_t v65 = v115;
  Section<>.init(header:content:)();
  uint64_t v66 = v113;
  unint64_t v67 = *(void (**)(char *, char *, uint64_t))(v113 + 16);
  uint64_t v68 = v112;
  uint64_t v69 = v123;
  v67(v112, v120, v123);
  sub_10006CAB8(v62, v116, &qword_1010CE2D8);
  uint64_t v70 = v108;
  uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v108 + 16);
  uint64_t v72 = v109;
  v71(v117, v65, v109);
  uint64_t v73 = (uint64_t)v137;
  v67(v137, v68, v69);
  uint64_t v74 = sub_100063814(&qword_1010CE408);
  uint64_t v75 = v116;
  sub_10006CAB8(v116, v73 + *(int *)(v74 + 48), &qword_1010CE2D8);
  uint64_t v76 = v117;
  v71((char *)(v73 + *(int *)(v74 + 64)), v117, v72);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v70 + 8);
  v77(v115, v72);
  sub_1000637B8(v114, &qword_1010CE2D8);
  uint64_t v78 = *(void (**)(char *, uint64_t))(v66 + 8);
  uint64_t v79 = v123;
  v78(v120, v123);
  v77(v76, v72);
  sub_1000637B8(v75, &qword_1010CE2D8);
  v78(v112, v79);
  uint64_t v80 = sub_100063814(&qword_1010CE3A0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v73, 0, 1, v80);
  sub_10003CABC(v73, v142, &qword_1010CE2E8);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v111, v122);
  uint64_t v40 = v138;
LABEL_14:
  uint64_t v81 = (uint64_t)v134;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v82 = v131;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v83 = Playlist.isOwner.getter();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v82, v133);
  if ((v83 & 1) != 0
    && (swift_getKeyPath(),
        swift_getKeyPath(),
        static Published.subscript.getter(),
        swift_release(),
        swift_release(),
        v145 == 1))
  {
    __chkstk_darwin();
    char v84 = v118;
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v124, v84, v129);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    id v85 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v86 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v88 = v87;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v84, v129);
    uint64_t v145 = v86;
    uint64_t v146 = v88;
    sub_10005D27C();
    uint64_t v149 = Text.init<A>(_:)();
    uint64_t v150 = v89;
    char v151 = v90 & 1;
    uint64_t v152 = v91;
    sub_100BADD60((uint64_t)&v145);
    sub_100063814(&qword_1010CE3B8);
    sub_100063814(&qword_1010CE3C0);
    sub_100063858(&qword_1010CE3C8, &qword_1010CE3B8);
    sub_100BC347C();
    Section<>.init(header:footer:content:)();
    uint64_t v92 = sub_100063814(&qword_1010CE3A8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v81, 0, 1, v92);
  }
  else
  {
    uint64_t v93 = sub_100063814(&qword_1010CE3A8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v81, 1, 1, v93);
  }
  uint64_t v94 = v140;
  uint64_t v95 = *(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v140 + 16);
  uint64_t v96 = (void (**)(char *, uint64_t))v130;
  uint64_t v97 = v141;
  v95(v130, v139, v141);
  uint64_t v98 = v142;
  uint64_t v99 = (uint64_t)v137;
  sub_10006CAB8(v142, (uint64_t)v137, &qword_1010CE2E8);
  uint64_t v100 = v135;
  sub_10006CAB8(v81, v135, &qword_1010CE2C8);
  uint64_t v101 = v81;
  uint64_t v102 = v136;
  v95(v136, v96, v97);
  uint64_t v103 = sub_100063814(&qword_1010CE3B0);
  sub_10006CAB8(v99, (uint64_t)&v102[*(int *)(v103 + 48)], &qword_1010CE2E8);
  sub_10006CAB8(v100, (uint64_t)&v102[*(int *)(v103 + 64)], &qword_1010CE2C8);
  sub_1000637B8(v101, &qword_1010CE2C8);
  sub_1000637B8(v98, &qword_1010CE2E8);
  uint64_t v104 = *(void (**)(void, uint64_t))(v94 + 8);
  v104(v139, v97);
  sub_1000637B8(v100, &qword_1010CE2C8);
  sub_1000637B8(v99, &qword_1010CE2E8);
  return ((uint64_t (*)(void, uint64_t))v104)(v96, v97);
}

uint64_t sub_100BA577C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100063814(&qword_1010CE308);
  __chkstk_darwin();
  uint64_t v77 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  uint64_t v72 = v5;
  uint64_t v73 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_1010CE3F8);
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v76 = v6;
  __chkstk_darwin();
  uint64_t v74 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v81 = (char *)&v65 - v8;
  uint64_t v9 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v68 = *(void *)(v9 - 8);
  uint64_t v69 = v9;
  __chkstk_darwin();
  unint64_t v67 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CE608);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100063814(&qword_1010CE610);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100063814(&qword_1010CE618);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100063814(&qword_1010CE620);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100063814(&qword_1010CE628);
  uint64_t v79 = *(void *)(v70 - 8);
  __chkstk_darwin();
  uint64_t v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v78 = (char *)&v65 - v24;
  uint64_t v80 = a1;
  if (sub_100B9E594())
  {
    uint64_t v25 = sub_100063814(&qword_1010CE390);
    uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
    return v26(a2, 1, 1, v25);
  }
  else
  {
    uint64_t v66 = a2;
    *(void *)uint64_t v12 = static VerticalAlignment.center.getter();
    *((void *)v12 + 1) = 0x4028000000000000;
    v12[16] = 0;
    uint64_t v28 = sub_100063814(&qword_1010CE630);
    sub_100BA60E4(v80, (uint64_t)&v12[*(int *)(v28 + 44)]);
    char v29 = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    sub_10006CAB8((uint64_t)v12, (uint64_t)v15, &qword_1010CE608);
    uint64_t v38 = &v15[*(int *)(v13 + 36)];
    *uint64_t v38 = v29;
    *((void *)v38 + 1) = v31;
    *((void *)v38 + 2) = v33;
    *((void *)v38 + 3) = v35;
    *((void *)v38 + 4) = v37;
    v38[40] = 0;
    sub_1000637B8((uint64_t)v12, &qword_1010CE608);
    if (qword_1010C8408 != -1) {
      swift_once();
    }
    long long v65 = static EdgeInsets.zero;
    uint64_t v39 = qword_10112C0E8;
    uint64_t v40 = unk_10112C0F0;
    sub_10006CAB8((uint64_t)v15, (uint64_t)v18, &qword_1010CE610);
    uint64_t v41 = &v18[*(int *)(v16 + 36)];
    *(_OWORD *)uint64_t v41 = v65;
    *((void *)v41 + 2) = v39;
    *((void *)v41 + 3) = v40;
    v41[32] = 0;
    sub_1000637B8((uint64_t)v15, &qword_1010CE610);
    uint64_t v42 = static HorizontalAlignment.listRowSeparatorLeading.getter();
    sub_10006CAB8((uint64_t)v18, (uint64_t)v21, &qword_1010CE618);
    uint64_t v43 = (uint64_t *)&v21[*(int *)(v19 + 36)];
    *uint64_t v43 = v42;
    v43[1] = (uint64_t)sub_1006C1B28;
    _OWORD v43[2] = 0;
    sub_1000637B8((uint64_t)v18, &qword_1010CE618);
    uint64_t v44 = v67;
    static AccessibilityChildBehavior.combine.getter();
    sub_100BC2870(&qword_1010CE638, &qword_1010CE620, (void (*)(void))sub_100BC4054, (void (*)(void))sub_100BC4194);
    uint64_t v45 = v23;
    View.accessibilityElement(children:)();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v44, v69);
    sub_1000637B8((uint64_t)v21, &qword_1010CE620);
    uint64_t v46 = v78;
    uint64_t v47 = v79;
    uint64_t v48 = v70;
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v23, v70);
    uint64_t v49 = v80;
    size_t v82 = sub_100B9ECE8();
    uint64_t v50 = v73;
    sub_100BC10B4(v49, v73, type metadata accessor for Collaboration.Management.View);
    unint64_t v51 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
    uint64_t v52 = swift_allocObject();
    sub_100BBBBF4(v50, v52 + v51, type metadata accessor for Collaboration.Management.View);
    sub_100063814(&qword_1010CD490);
    _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
    sub_100063858(&qword_1010CE458, &qword_1010CD490);
    sub_100BBBBAC(&qword_1010CE3E8, (void (*)(uint64_t))_s10ManagementO4ViewV19CollaboratorRowViewVMa);
    sub_100BBBBAC(&qword_1010CE460, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
    char v53 = v81;
    ForEach<>.init(_:content:)();
    uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
    v54(v45, v46, v48);
    uint64_t v55 = v74;
    uint64_t v56 = v75;
    uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
    uint64_t v58 = v53;
    uint64_t v59 = v76;
    v57(v74, v58, v76);
    uint64_t v60 = (uint64_t)v77;
    v54(v77, v45, v48);
    uint64_t v61 = sub_100063814(&qword_1010CE660);
    v57((char *)(v60 + *(int *)(v61 + 48)), v55, v59);
    uint64_t v62 = *(void (**)(char *, uint64_t))(v56 + 8);
    v62(v81, v59);
    uint64_t v63 = *(void (**)(char *, uint64_t))(v79 + 8);
    v63(v78, v48);
    v62(v55, v59);
    v63(v45, v48);
    uint64_t v64 = sub_100063814(&qword_1010CE390);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v60, 0, 1, v64);
    return sub_10003CABC(v60, v66, &qword_1010CE308);
  }
}

uint64_t sub_100BA60E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v200 = a2;
  uint64_t v189 = sub_100063814(&qword_1010CE038);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v147 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Capsule();
  __chkstk_darwin();
  v186 = (char *)&v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Collaboration.Management.View(0);
  uint64_t v159 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v160 = v7;
  uint64_t v161 = (uint64_t)&v147 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_100063814((uint64_t *)&unk_1010CD5A0);
  uint64_t v166 = *(void *)(v168 - 8);
  __chkstk_darwin();
  unint64_t v163 = (char *)&v147 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_100063814(&qword_1010CE668);
  __chkstk_darwin();
  unint64_t v164 = (char *)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_100063814(&qword_1010CE670);
  uint64_t v169 = *(void *)(v170 - 8);
  __chkstk_darwin();
  uint64_t v167 = (char *)&v147 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = sub_100063814(&qword_1010CE678);
  __chkstk_darwin();
  unint64_t v173 = (char *)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_100063814(&qword_1010CE680);
  __chkstk_darwin();
  uint64_t v174 = (uint64_t)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = sub_100063814(&qword_1010CE688);
  __chkstk_darwin();
  v198 = (char *)&v147 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_100063814(&qword_1010CE690);
  __chkstk_darwin();
  uint64_t v176 = (uint64_t)&v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100063814(&qword_1010CE698);
  __chkstk_darwin();
  CGRect v177 = (char *)&v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_100063814(&qword_1010CE6A0);
  uint64_t v181 = *(void *)(v182 - 8);
  __chkstk_darwin();
  uint64_t v179 = (char *)&v147 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_100063814(&qword_1010CE6A8);
  uint64_t v184 = *(void *)(v185 - 8);
  __chkstk_darwin();
  v183 = (char *)&v147 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  CGRect v180 = (char *)&v147 - v19;
  type metadata accessor for Locale();
  __chkstk_darwin();
  unint64_t v156 = (char *)&v147 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = type metadata accessor for String.LocalizationValue();
  uint64_t v190 = *(void *)(v158 - 8);
  __chkstk_darwin();
  unint64_t v155 = (char *)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v157 = (char *)&v147 - v22;
  uint64_t v154 = type metadata accessor for Playlist();
  uint64_t v153 = *(void *)(v154 - 8);
  __chkstk_darwin();
  uint64_t v152 = (char *)&v147 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CE6B0);
  __chkstk_darwin();
  v199 = (uint64_t *)((char *)&v147 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v202 = (uint64_t)&v147 - v25;
  uint64_t v192 = sub_100063814(&qword_1010CE6B8);
  __chkstk_darwin();
  uint64_t v194 = (uint64_t *)((char *)&v147 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100063814(&qword_1010CE6C0);
  __chkstk_darwin();
  uint64_t v193 = (char *)&v147 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = sub_100063814(&qword_1010CE6C8);
  __chkstk_darwin();
  char v29 = (char *)&v147 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = sub_100063814(&qword_1010CE6D0);
  uint64_t v196 = *(void *)(v197 - 8);
  __chkstk_darwin();
  uint64_t v195 = (uint64_t)&v147 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DynamicTypeSize();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin();
  uint64_t v34 = (char *)&v147 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v36 = (char *)&v147 - v35;
  sub_100063814(&qword_1010CE6D8);
  __chkstk_darwin();
  uint64_t v201 = (uint64_t)&v147 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v203 = (uint64_t)&v147 - v38;
  uint64_t v187 = v6;
  sub_100B6E744((uint64_t)v36);
  if (qword_1010C86F8 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_100050A90(v31, (uint64_t)qword_1010CD440);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v34, v39, v31);
  sub_100BBBBAC((unint64_t *)&qword_1010CDF60, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  char v40 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v32 + 8);
  v41(v34, v31);
  v41(v36, v31);
  v188 = v4;
  uint64_t v178 = v15;
  if (v40)
  {
    uint64_t v42 = 1;
    uint64_t v43 = v203;
    uint64_t v44 = v197;
  }
  else
  {
    uint64_t v150 = Image.init(systemName:)();
    if (qword_1010C8698 != -1) {
      swift_once();
    }
    uint64_t v151 = a1;
    uint64_t v45 = qword_1010CD3E0;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v47 = qword_1010C86E8;
    swift_retain();
    if (v47 != -1) {
      swift_once();
    }
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v149 = v215;
    int v148 = v216;
    uint64_t v147 = v217;
    char v48 = v218;
    uint64_t v50 = v219;
    uint64_t v49 = v220;
    uint64_t v51 = (uint64_t)v193;
    static SymbolRenderingMode.hierarchical.getter();
    uint64_t v52 = type metadata accessor for SymbolRenderingMode();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 0, 1, v52);
    uint64_t v53 = swift_getKeyPath();
    uint64_t v54 = v194;
    sub_10006CAB8(v51, (uint64_t)v194 + *(int *)(v192 + 28), &qword_1010CE6C0);
    *uint64_t v54 = v53;
    sub_10006CAB8((uint64_t)v54, (uint64_t)&v29[*(int *)(v191 + 36)], &qword_1010CE6B8);
    *(void *)char v29 = v150;
    *((void *)v29 + 1) = KeyPath;
    uint64_t v55 = v149;
    *((void *)v29 + 2) = v45;
    *((void *)v29 + 3) = v55;
    v29[32] = v148;
    *((void *)v29 + 5) = v147;
    v29[48] = v48;
    *((void *)v29 + 7) = v50;
    *((void *)v29 + 8) = v49;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1000637B8((uint64_t)v54, &qword_1010CE6B8);
    sub_1000637B8(v51, &qword_1010CE6C0);
    swift_release();
    swift_release();
    swift_release();
    if (qword_1010C86F0 != -1) {
      swift_once();
    }
    uint64_t v56 = qword_1010CD438;
    uint64_t v57 = swift_getKeyPath();
    uint64_t v58 = v195;
    sub_10006CAB8((uint64_t)v29, v195, &qword_1010CE6C8);
    uint64_t v44 = v197;
    uint64_t v59 = (uint64_t *)(v58 + *(int *)(v197 + 36));
    uint64_t *v59 = v57;
    v59[1] = v56;
    swift_retain();
    sub_1000637B8((uint64_t)v29, &qword_1010CE6C8);
    uint64_t v43 = v203;
    sub_10003CABC(v58, v203, &qword_1010CE6D0);
    uint64_t v42 = 0;
    a1 = v151;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v196 + 56))(v43, v42, 1, v44);
  uint64_t v60 = static HorizontalAlignment.leading.getter();
  sub_100BA7BF0(a1, (uint64_t)&v210);
  uint64_t v192 = *((void *)&v210 + 1);
  uint64_t v193 = (char *)v210;
  LODWORD(v191) = v211;
  uint64_t v61 = v212;
  uint64_t v194 = (uint64_t *)*((void *)&v211 + 1);
  uint64_t v197 = *((void *)&v212 + 1);
  uint64_t v196 = v213;
  uint64_t v195 = v214;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v62 = (uint64_t)v198;
  if (v210 == 1)
  {
    uint64_t v63 = v61;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v64 = v152;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    Playlist.isOwner.getter();
    (*(void (**)(char *, uint64_t))(v153 + 8))(v64, v154);
    long long v65 = (void (**)(char *, char *, uint64_t))(v190 + 16);
    uint64_t v151 = v63;
    uint64_t v150 = v60;
    uint64_t v66 = v157;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v70 = v158;
    (*v65)(v155, v66, v158);
    uint64_t v71 = (uint64_t)v173;
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    id v72 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v73 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v75 = v74;
    (*(void (**)(char *, uint64_t))(v190 + 8))(v66, v70);
    unint64_t v173 = (char *)v73;
    *(void *)&long long v210 = v73;
    *((void *)&v210 + 1) = v75;
    uint64_t v76 = v161;
    sub_100BC10B4(a1, v161, type metadata accessor for Collaboration.Management.View);
    unint64_t v77 = (*(unsigned __int8 *)(v159 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
    uint64_t v78 = swift_allocObject();
    sub_100BBBBF4(v76, v78 + v77, type metadata accessor for Collaboration.Management.View);
    sub_10005D27C();
    uint64_t v190 = v75;
    swift_bridgeObjectRetain();
    uint64_t v79 = v163;
    Button<>.init<A>(_:action:)();
    uint64_t v80 = static Font.subheadline.getter();
    uint64_t v81 = swift_getKeyPath();
    uint64_t v82 = v166;
    uint64_t v83 = (uint64_t)v164;
    uint64_t v84 = v168;
    (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v164, v79, v168);
    id v85 = (uint64_t *)(v83 + *(int *)(v165 + 36));
    *id v85 = v81;
    v85[1] = v80;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v79, v84);
    static Font.Weight.semibold.getter();
    sub_100BC4334();
    uint64_t v86 = v167;
    View.fontWeight(_:)();
    sub_1000637B8(v83, &qword_1010CE668);
    uint64_t v87 = static Color.white.getter();
    uint64_t v88 = swift_getKeyPath();
    uint64_t v89 = v169;
    uint64_t v90 = v170;
    (*(void (**)(uint64_t, char *, uint64_t))(v169 + 16))(v71, v86, v170);
    uint64_t v91 = (uint64_t *)(v71 + *(int *)(v162 + 36));
    *uint64_t v91 = v88;
    v91[1] = v87;
    (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v90);
    if (qword_1010C86D8 != -1) {
      swift_once();
    }
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v92 = v174;
    sub_10006CAB8(v71, v174, &qword_1010CE678);
    uint64_t v93 = (_OWORD *)(v92 + *(int *)(v171 + 36));
    long long v94 = v211;
    *uint64_t v93 = v210;
    v93[1] = v94;
    v93[2] = v212;
    sub_1000637B8(v71, &qword_1010CE678);
    char v95 = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v97 = v96;
    uint64_t v99 = v98;
    uint64_t v101 = v100;
    uint64_t v103 = v102;
    sub_10006CAB8(v92, v62, &qword_1010CE680);
    uint64_t v104 = v62 + *(int *)(v172 + 36);
    *(unsigned char *)uint64_t v104 = v95;
    *(void *)(v104 + 8) = v97;
    *(void *)(v104 + 16) = v99;
    *(void *)(v104 + 24) = v101;
    *(void *)(v104 + 32) = v103;
    *(unsigned char *)(v104 + 40) = 0;
    sub_1000637B8(v92, &qword_1010CE680);
    uint64_t v105 = (uint64_t)v177;
    uint64_t v106 = (uint64_t)v188;
    uint64_t v107 = v178;
    if (qword_1010C8418 != -1) {
      swift_once();
    }
    id v108 = (id)static UIColor.MusicTint.normal;
    uint64_t v109 = Color.init(_:)();
    char v110 = static Edge.Set.all.getter();
    uint64_t v111 = v176;
    sub_10006CAB8(v62, v176, &qword_1010CE688);
    uint64_t v112 = v111 + *(int *)(v175 + 36);
    *(void *)uint64_t v112 = v109;
    *(unsigned char *)(v112 + 8) = v110;
    sub_1000637B8(v62, &qword_1010CE688);
    uint64_t v113 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v114 = type metadata accessor for RoundedCornerStyle();
    uint64_t v115 = (uint64_t)v186;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v114 - 8) + 104))(v186, v113, v114);
    uint64_t v116 = v105 + *(int *)(v107 + 36);
    sub_100BC10B4(v115, v116, (uint64_t (*)(void))&type metadata accessor for Capsule);
    *(_WORD *)(v116 + *(int *)(sub_100063814(&qword_1010CE6F8) + 36)) = 256;
    sub_10006CAB8(v111, v105, &qword_1010CE690);
    sub_100BC1A00(v115, (uint64_t (*)(void))&type metadata accessor for Capsule);
    sub_1000637B8(v111, &qword_1010CE690);
    if (qword_1010C8700 != -1) {
      swift_once();
    }
    uint64_t v117 = v189;
    uint64_t v118 = sub_100050A90(v189, (uint64_t)qword_1010CD458);
    sub_10006CAB8(v118, v106, &qword_1010CE038);
    unint64_t v119 = sub_100BC43F8();
    uint64_t v120 = sub_100063858(&qword_1010CE070, &qword_1010CE038);
    uint64_t v121 = v179;
    View.dynamicTypeSize<A>(_:)();
    sub_1000637B8(v106, &qword_1010CE038);
    sub_1000637B8(v105, &qword_1010CE698);
    uint64_t v122 = a1 + *(int *)(v187 + 44);
    char v123 = *(unsigned char *)v122;
    uint64_t v124 = *(void *)(v122 + 8);
    char v208 = v123;
    uint64_t v209 = v124;
    sub_100063814(&qword_1010CC190);
    State.projectedValue.getter();
    v198 = (char *)&v147;
    __chkstk_darwin();
    uint64_t v125 = v173;
    *(&v147 - 4) = a1;
    *(&v147 - 3) = (uint64_t)v125;
    *(&v147 - 2) = v190;
    uint64_t v204 = v107;
    uint64_t v205 = v117;
    unint64_t v206 = v119;
    uint64_t v207 = v120;
    swift_getOpaqueTypeConformance2();
    uint64_t v126 = v183;
    uint64_t v127 = v182;
    View.alert(isPresented:content:)();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v181 + 8))(v121, v127);
    uint64_t v128 = v184;
    uint64_t v129 = v180;
    uint64_t v130 = v185;
    (*(void (**)(char *, char *, uint64_t))(v184 + 32))(v180, v126, v185);
    uint64_t v131 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
    v131(v126, v129, v130);
    uint64_t v69 = (uint64_t)v199;
    void *v199 = 0;
    *(unsigned char *)(v69 + 8) = 1;
    uint64_t v132 = sub_100063814(&qword_1010CE740);
    v131((char *)(v69 + *(int *)(v132 + 48)), v126, v130);
    uint64_t v133 = *(void (**)(char *, uint64_t))(v128 + 8);
    v133(v129, v130);
    v133(v126, v130);
    uint64_t v134 = sub_100063814(&qword_1010CE6E0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56))(v69, 0, 1, v134);
    uint64_t v68 = v202;
    sub_10003CABC(v69, v202, &qword_1010CE6B0);
    uint64_t v43 = v203;
    uint64_t v61 = v151;
    uint64_t v60 = v150;
  }
  else
  {
    uint64_t v67 = sub_100063814(&qword_1010CE6E0);
    uint64_t v68 = v202;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v202, 1, 1, v67);
    uint64_t v69 = (uint64_t)v199;
  }
  uint64_t v135 = v201;
  sub_10006CAB8(v43, v201, &qword_1010CE6D8);
  sub_10006CAB8(v68, v69, &qword_1010CE6B0);
  uint64_t v136 = v135;
  uint64_t v137 = v200;
  sub_10006CAB8(v136, v200, &qword_1010CE6D8);
  uint64_t v138 = sub_100063814(&qword_1010CE6E8);
  uint64_t v139 = v137 + *(int *)(v138 + 48);
  *(void *)uint64_t v139 = v60;
  *(void *)(v139 + 8) = 0;
  *(unsigned char *)(v139 + 16) = 1;
  uint64_t v140 = (uint64_t)v193;
  uint64_t v141 = v192;
  *(void *)(v139 + 24) = v193;
  *(void *)(v139 + 32) = v141;
  char v142 = v191;
  *(unsigned char *)(v139 + 40) = v191;
  *(void *)(v139 + 48) = v194;
  *(void *)(v139 + 56) = v61;
  uint64_t v143 = v197;
  uint64_t v144 = v196;
  *(void *)(v139 + 64) = v197;
  *(void *)(v139 + 72) = v144;
  uint64_t v145 = v195;
  *(void *)(v139 + 80) = v195;
  sub_10006CAB8(v69, v137 + *(int *)(v138 + 64), &qword_1010CE6B0);
  sub_1001CC8D0(v140, v141, v142);
  swift_bridgeObjectRetain();
  sub_1001CC8E0(v61, v143, v144, v145);
  sub_1000637B8(v202, &qword_1010CE6B0);
  sub_1000637B8(v203, &qword_1010CE6D8);
  sub_1000637B8(v69, &qword_1010CE6B0);
  sub_1000D1500(v140, v141, v142);
  swift_bridgeObjectRelease();
  sub_1001CC924(v61, v143, v144, v145);
  return sub_1000637B8(v201, &qword_1010CE6D8);
}

uint64_t sub_100BA7BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a1;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = &v51[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v8 = &v51[-v7];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v6, v8, v3);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v9 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v10 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v12 = v11;
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v8, v3);
  uint64_t v56 = v10;
  uint64_t v57 = v12;
  sub_10005D27C();
  uint64_t v24 = Text.init<A>(_:)();
  uint64_t v14 = v13;
  LOBYTE(v12) = v15 & 1;
  LODWORD(v56) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v16 = Text.foregroundStyle<A>(_:)();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  sub_1000D1500(v24, v14, v12);
  swift_bridgeObjectRelease();
  static Font.callout.getter();
  uint64_t v21 = Text.font(_:)();
  uint64_t v54 = v22;
  LODWORD(v24) = v23;
  uint64_t v26 = v25;
  swift_release();
  sub_1000D1500(v16, v18, v20);
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_100B9EE4C();
  if (v28)
  {
    uint64_t v56 = v27;
    uint64_t v57 = v28;
    uint64_t v29 = Text.init<A>(_:)();
    uint64_t v31 = v30;
    char v33 = v32 & 1;
    LODWORD(v56) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v34 = Text.foregroundStyle<A>(_:)();
    int v52 = v24;
    uint64_t v24 = v35;
    uint64_t v55 = v26;
    uint64_t v53 = v21;
    char v37 = v36 & 1;
    sub_1000D1500(v29, v31, v33);
    swift_bridgeObjectRelease();
    static Font.caption.getter();
    uint64_t v38 = Text.font(_:)();
    uint64_t v40 = v39;
    char v42 = v41;
    uint64_t v44 = v43;
    swift_release();
    uint64_t v45 = v42 & 1;
    uint64_t v46 = v24;
    LOBYTE(v24) = v52;
    char v47 = v37;
    uint64_t v21 = v53;
    sub_1000D1500(v34, v46, v47);
    uint64_t v26 = v55;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v40 = 0;
    uint64_t v45 = 0;
    uint64_t v44 = 0;
  }
  char v48 = v24 & 1;
  uint64_t v49 = v54;
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v49;
  *(unsigned char *)(a2 + 16) = v48;
  *(void *)(a2 + 24) = v26;
  *(void *)(a2 + 32) = v38;
  *(void *)(a2 + 40) = v40;
  *(void *)(a2 + 48) = v45;
  *(void *)(a2 + 56) = v44;
  sub_1001CC8D0(v21, v49, v48);
  swift_bridgeObjectRetain();
  sub_1001CC8E0(v38, v40, v45, v44);
  sub_1001CC924(v38, v40, v45, v44);
  sub_1000D1500(v21, v49, v48);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100BA803C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 44));
  char v7 = *v6;
  uint64_t v8 = *((void *)v6 + 1);
  v14[16] = v7;
  uint64_t v15 = v8;
  v14[15] = 1;
  sub_100063814(&qword_1010CC190);
  State.wrappedValue.setter();
  uint64_t v9 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[Management] Stop/Leave button tapped", v12, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100BA81DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v53 = a4;
  uint64_t v47 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  uint64_t v48 = v5;
  uint64_t v50 = (uint64_t)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button();
  __chkstk_darwin();
  int v52 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v51 = (char *)v41 - v7;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v54 = type metadata accessor for String.LocalizationValue();
  uint64_t v8 = *(void *)(v54 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)v41 - v11;
  uint64_t v13 = type metadata accessor for Playlist();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  LOBYTE(a1) = Playlist.isOwner.getter();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v17 = (void (**)(char *, char *, uint64_t))(v8 + 16);
  if ((a1 & 1) == 0)
  {
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v18 = *v17;
    (*v17)(v10, v12, v54);
    if (qword_1010C8350 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v18 = *v17;
  (*v17)(v10, v12, v54);
  if (qword_1010C8350 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  id v19 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v20 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v22 = v21;
  int v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v24 = v54;
  v23(v12, v54);
  String.LocalizationValue.init(stringLiteral:)();
  v18(v10, v12, v24);
  id v25 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v26 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v28 = v27;
  v23(v12, v24);
  uint64_t v55 = v20;
  uint64_t v56 = v22;
  sub_10005D27C();
  uint64_t v54 = Text.init<A>(_:)();
  uint64_t v43 = v30;
  uint64_t v44 = v29;
  int v42 = v31;
  uint64_t v55 = v26;
  uint64_t v56 = v28;
  Text.init<A>(_:)();
  v41[1] = v32;
  uint64_t v55 = v45;
  uint64_t v56 = v46;
  swift_bridgeObjectRetain();
  uint64_t v33 = Text.init<A>(_:)();
  uint64_t v35 = v34;
  LOBYTE(v20) = v36 & 1;
  uint64_t v37 = v50;
  sub_100BC10B4(v49, v50, type metadata accessor for Collaboration.Management.View);
  unint64_t v38 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v39 = swift_allocObject();
  sub_100BBBBF4(v37, v39 + v38, type metadata accessor for Collaboration.Management.View);
  static Alert.Button.destructive(_:action:)();
  sub_1000D1500(v33, v35, v20);
  swift_release();
  swift_bridgeObjectRelease();
  static Alert.Button.cancel(_:)();
  return Alert.init(title:message:primaryButton:secondaryButton:)();
}

uint64_t sub_100BA88AC(uint64_t a1)
{
  uint64_t v2 = (int *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 64);
  __chkstk_darwin();
  sub_100063814((uint64_t *)&unk_1010CE330);
  __chkstk_darwin();
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100063814(&qword_1010CE310);
  __chkstk_darwin();
  uint64_t v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0x4028000000000000;
  unsigned char v6[16] = 0;
  uint64_t v10 = sub_100063814((uint64_t *)&unk_1010CE480);
  sub_100BA8BB4(a1, (uint64_t)&v6[*(int *)(v10 + 44)]);
  sub_10006CAB8((uint64_t)v6, (uint64_t)v9, (uint64_t *)&unk_1010CE330);
  uint64_t v11 = &v9[*(int *)(v7 + 36)];
  v11[32] = 0;
  *(_OWORD *)uint64_t v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  sub_1000637B8((uint64_t)v6, (uint64_t *)&unk_1010CE330);
  uint64_t v12 = a1 + v2[12];
  char v13 = *(unsigned char *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  v18[8] = v13;
  uint64_t v19 = v14;
  sub_100063814(&qword_1010CC190);
  State.projectedValue.getter();
  sub_100BC10B4(a1, (uint64_t)&v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for Collaboration.Management.View);
  unint64_t v15 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v16 = swift_allocObject();
  sub_100BBBBF4((uint64_t)&v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v16 + v15, type metadata accessor for Collaboration.Management.View);
  sub_100063814(&qword_1010CE318);
  sub_100BC30C8();
  sub_100BC318C(&qword_1010CE348, &qword_1010CE318, (void (*)(void))sub_100BC3204);
  View.fullScreenCover<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  return sub_1000637B8((uint64_t)v9, &qword_1010CE310);
}

uint64_t sub_100BA8BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v187 = a2;
  sub_100063814(&qword_1010CF2C0);
  __chkstk_darwin();
  uint64_t v162 = (uint64_t)&v152 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CE4A0);
  __chkstk_darwin();
  uint64_t v164 = (uint64_t)&v152 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_100063814(&qword_1010CE4A8);
  __chkstk_darwin();
  uint64_t v161 = (uint64_t)&v152 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_100063814(&qword_1010CE4B0);
  __chkstk_darwin();
  uint64_t v160 = (uint64_t)&v152 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_100063814(&qword_1010CE4B8);
  __chkstk_darwin();
  uint64_t v165 = (uint64_t)&v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_100063814(&qword_1010CE4C0);
  __chkstk_darwin();
  uint64_t v167 = (uint64_t)&v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_100063814(&qword_1010CE4C8);
  __chkstk_darwin();
  uint64_t v170 = (uint64_t)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_100063814(&qword_1010CE4D0);
  __chkstk_darwin();
  uint64_t v172 = (uint64_t)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v171 = (uint64_t)&v152 - v11;
  sub_100063814(&qword_1010CE4D8);
  __chkstk_darwin();
  uint64_t v153 = (uint64_t *)((char *)&v152 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v152 = sub_100063814(&qword_1010CE4E0);
  __chkstk_darwin();
  uint64_t v155 = (uint64_t)&v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_100063814(&qword_1010CE4E8);
  __chkstk_darwin();
  uint64_t v168 = (uint64_t)&v152 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v166 = (uint64_t)&v152 - v15;
  sub_100063814((uint64_t *)&unk_1010CE4F0);
  __chkstk_darwin();
  v186 = (char *)&v152 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v185 = (char *)&v152 - v17;
  uint64_t v183 = type metadata accessor for Playlist();
  uint64_t v182 = *(void *)(v183 - 8);
  __chkstk_darwin();
  uint64_t v181 = (char *)&v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v19 = *(void *)(v174 - 8);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v152 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  int v23 = (char *)&v152 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814((uint64_t *)&unk_1010C8960);
  __chkstk_darwin();
  id v25 = (char *)&v152 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_100063814(&qword_1010CC0C8);
  uint64_t v176 = *(void *)(v177 - 8);
  __chkstk_darwin();
  uint64_t v27 = (char *)&v152 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = sub_100063814((uint64_t *)&unk_1010CF220);
  __chkstk_darwin();
  uint64_t v29 = (char *)&v152 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_100063814(&qword_1010CE500);
  __chkstk_darwin();
  int v31 = (char *)&v152 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = sub_100063814(&qword_1010CE508);
  __chkstk_darwin();
  uint64_t v180 = (uint64_t)&v152 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_100063814(&qword_1010CE510);
  __chkstk_darwin();
  uint64_t v189 = (uint64_t)&v152 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v188 = (uint64_t)&v152 - v34;
  uint64_t v184 = a1;
  sub_100BA0430(v25);
  uint64_t v35 = enum case for Playlist.Variant.regular(_:);
  uint64_t v36 = type metadata accessor for Playlist.Variant();
  uint64_t v37 = *(void *)(v36 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 104))(v23, v35, v36);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v23, 0, 1, v36);
  uint64_t v38 = sub_100063814(&qword_1010CF250);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v23, 0, 10, v38);
  uint64_t v195 = 0;
  char v196 = 1;
  uint64_t v197 = 0;
  char v198 = 1;
  uint64_t v199 = 0;
  __int16 v200 = 513;
  uint64_t v39 = v174;
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v21, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v174);
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v25, (uint64_t)v23, (uint64_t)&v195, (uint64_t)v21, (uint64_t)v27);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v39);
  sub_100BC1A00((uint64_t)v23, type metadata accessor for ArtworkImage.Placeholder);
  sub_1000637B8((uint64_t)v25, (uint64_t *)&unk_1010C8960);
  if (qword_1010C86E0 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v40 = v176;
  uint64_t v41 = v177;
  (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v29, v27, v177);
  int v42 = &v29[*(int *)(v173 + 36)];
  long long v43 = v193;
  *(_OWORD *)int v42 = v192;
  *((_OWORD *)v42 + 1) = v43;
  *((_OWORD *)v42 + 2) = v194;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v41);
  if (qword_1010C8588 != -1) {
    swift_once();
  }
  uint64_t v44 = static Corner.small;
  uint64_t v45 = unk_10112CC30;
  char v46 = byte_10112CC38;
  sub_10006CAB8((uint64_t)v29, (uint64_t)v31, (uint64_t *)&unk_1010CF220);
  uint64_t v47 = &v31[*(int *)(v175 + 36)];
  *(void *)uint64_t v47 = v44;
  *((void *)v47 + 1) = v45;
  v47[16] = v46;
  sub_1000637B8((uint64_t)v29, (uint64_t *)&unk_1010CF220);
  if (qword_1010C85A8 != -1) {
    swift_once();
  }
  uint64_t v48 = static Border.artwork;
  uint64_t v49 = qword_10112CC90;
  char v50 = byte_10112CC98;
  uint64_t v51 = static Corner.small;
  uint64_t v52 = unk_10112CC30;
  char v53 = byte_10112CC38;
  uint64_t v54 = v180;
  sub_10006CAB8((uint64_t)v31, v180, &qword_1010CE500);
  uint64_t v55 = v54 + *(int *)(v178 + 36);
  *(void *)uint64_t v55 = v48;
  *(void *)(v55 + 8) = v49;
  *(unsigned char *)(v55 + 16) = v50;
  *(void *)(v55 + 24) = v51;
  *(void *)(v55 + 32) = v52;
  *(unsigned char *)(v55 + 40) = v53;
  swift_retain();
  sub_1000637B8((uint64_t)v31, &qword_1010CE500);
  static Color.black.getter();
  uint64_t v56 = Color.opacity(_:)();
  swift_release();
  uint64_t v57 = v189;
  sub_10006CAB8(v54, v189, &qword_1010CE508);
  uint64_t v58 = v57 + *(int *)(v179 + 36);
  *(void *)uint64_t v58 = v56;
  *(_OWORD *)(v58 + 8) = xmmword_100E52680;
  *(void *)(v58 + 24) = 0x4000000000000000;
  sub_1000637B8(v54, &qword_1010CE508);
  sub_10003CABC(v57, v188, &qword_1010CE510);
  uint64_t v59 = v184;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v60 = v181;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v61 = Playlist.name.getter();
  uint64_t v63 = v62;
  (*(void (**)(char *, uint64_t))(v182 + 8))(v60, v183);
  uint64_t v190 = v61;
  uint64_t v191 = v63;
  sub_10005D27C();
  uint64_t v64 = Text.init<A>(_:)();
  uint64_t v66 = v65;
  char v68 = v67 & 1;
  LODWORD(v190) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v69 = Text.foregroundStyle<A>(_:)();
  uint64_t v71 = v70;
  char v73 = v72;
  sub_1000D1500(v64, v66, v68);
  swift_bridgeObjectRelease();
  if (qword_1010C8690 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v74 = Text.font(_:)();
  uint64_t v76 = v75;
  char v78 = v77;
  swift_release();
  sub_1000D1500(v69, v71, v73 & 1);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  uint64_t v182 = Text.fontWeight(_:)();
  uint64_t v181 = v79;
  int v81 = v80;
  uint64_t v183 = v82;
  sub_1000D1500(v74, v76, v78 & 1);
  swift_bridgeObjectRelease();
  if (sub_100B9EB5C())
  {
    uint64_t v83 = v59;
    LODWORD(v180) = v81;
    uint64_t v84 = static VerticalAlignment.bottom.getter();
    uint64_t v85 = (uint64_t)v153;
    *uint64_t v153 = v84;
    *(void *)(v85 + 8) = 0x4020000000000000;
    *(unsigned char *)(v85 + 16) = 0;
    uint64_t v86 = sub_100063814(&qword_1010CE528);
    sub_100BAA10C(v59, (char *)(v85 + *(int *)(v86 + 44)));
    uint64_t v87 = v155;
    sub_10006CAB8(v85, v155, &qword_1010CE4D8);
    *(_WORD *)(v87 + *(int *)(v152 + 36)) = 256;
    sub_1000637B8(v85, &qword_1010CE4D8);
    char v88 = static Edge.Set.top.getter();
    uint64_t v89 = (uint64_t)v186;
    uint64_t v90 = (uint64_t)v185;
    if (qword_1010C86C8 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v92 = v91;
    uint64_t v94 = v93;
    uint64_t v96 = v95;
    uint64_t v98 = v97;
    uint64_t v99 = v168;
    sub_10006CAB8(v87, v168, &qword_1010CE4E0);
    uint64_t v100 = v99 + *(int *)(v154 + 36);
    *(unsigned char *)uint64_t v100 = v88;
    *(void *)(v100 + 8) = v92;
    *(void *)(v100 + 16) = v94;
    *(void *)(v100 + 24) = v96;
    *(void *)(v100 + 32) = v98;
    *(unsigned char *)(v100 + 40) = 0;
    sub_1000637B8(v87, &qword_1010CE4E0);
    uint64_t v101 = v166;
    sub_10003CABC(v99, v166, &qword_1010CE4E8);
    uint64_t v102 = v162;
    sub_100BAB278(v83, v162);
    uint64_t v103 = static Alignment.leading.getter();
    uint64_t v104 = v164;
    sub_100BD97D0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v164, 0.0, 1, 0.0, 1, v103, v105);
    sub_1000637B8(v102, &qword_1010CF2C0);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v107 = v161;
    sub_10006CAB8(v104, v161, &qword_1010CE4A0);
    uint64_t v108 = v107 + *(int *)(v158 + 36);
    *(void *)uint64_t v108 = KeyPath;
    *(void *)(v108 + 8) = 0;
    *(unsigned char *)(v108 + 16) = 1;
    sub_1000637B8(v104, &qword_1010CE4A0);
    uint64_t v109 = v160;
    sub_10006CAB8(v107, v160, &qword_1010CE4A8);
    *(_WORD *)(v109 + *(int *)(v157 + 36)) = 256;
    sub_1000637B8(v107, &qword_1010CE4A8);
    LODWORD(KeyPath) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v110 = v165;
    sub_10006CAB8(v109, v165, &qword_1010CE4B0);
    *(_DWORD *)(v110 + *(int *)(v156 + 36)) = KeyPath;
    sub_1000637B8(v109, &qword_1010CE4B0);
    uint64_t v111 = static Font.footnote.getter();
    uint64_t v112 = swift_getKeyPath();
    uint64_t v113 = v167;
    sub_10006CAB8(v110, v167, &qword_1010CE4B8);
    uint64_t v114 = (uint64_t *)(v113 + *(int *)(v159 + 36));
    *uint64_t v114 = v112;
    v114[1] = v111;
    sub_1000637B8(v110, &qword_1010CE4B8);
    LOBYTE(v111) = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v116 = v115;
    uint64_t v118 = v117;
    uint64_t v120 = v119;
    uint64_t v122 = v121;
    uint64_t v123 = v170;
    sub_10006CAB8(v113, v170, &qword_1010CE4C0);
    uint64_t v124 = v123 + *(int *)(v163 + 36);
    *(unsigned char *)uint64_t v124 = v111;
    *(void *)(v124 + 8) = v116;
    *(void *)(v124 + 16) = v118;
    *(void *)(v124 + 24) = v120;
    *(void *)(v124 + 32) = v122;
    *(unsigned char *)(v124 + 40) = 0;
    sub_1000637B8(v113, &qword_1010CE4C0);
    char v125 = static Edge.Set.top.getter();
    if (qword_1010C86D0 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v127 = v126;
    uint64_t v129 = v128;
    uint64_t v131 = v130;
    uint64_t v133 = v132;
    uint64_t v134 = v172;
    sub_10006CAB8(v123, v172, &qword_1010CE4C8);
    uint64_t v135 = v134 + *(int *)(v169 + 36);
    *(unsigned char *)uint64_t v135 = v125;
    *(void *)(v135 + 8) = v127;
    *(void *)(v135 + 16) = v129;
    *(void *)(v135 + 24) = v131;
    *(void *)(v135 + 32) = v133;
    *(unsigned char *)(v135 + 40) = 0;
    sub_1000637B8(v123, &qword_1010CE4C8);
    uint64_t v136 = v171;
    sub_10003CABC(v134, v171, &qword_1010CE4D0);
    sub_10006CAB8(v101, v99, &qword_1010CE4E8);
    sub_10006CAB8(v136, v134, &qword_1010CE4D0);
    sub_10006CAB8(v99, v89, &qword_1010CE4E8);
    uint64_t v137 = sub_100063814(&qword_1010CE530);
    sub_10006CAB8(v134, v89 + *(int *)(v137 + 48), &qword_1010CE4D0);
    uint64_t v138 = v89 + *(int *)(v137 + 64);
    *(void *)uint64_t v138 = 0x3FF0000000000000;
    *(unsigned char *)(v138 + 8) = 0;
    sub_1000637B8(v136, &qword_1010CE4D0);
    sub_1000637B8(v101, &qword_1010CE4E8);
    sub_1000637B8(v134, &qword_1010CE4D0);
    sub_1000637B8(v99, &qword_1010CE4E8);
    uint64_t v139 = sub_100063814(&qword_1010CE518);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v139 - 8) + 56))(v89, 0, 1, v139);
    sub_10003CABC(v89, v90, (uint64_t *)&unk_1010CE4F0);
    LOBYTE(v81) = v180;
  }
  else
  {
    uint64_t v140 = sub_100063814(&qword_1010CE518);
    uint64_t v90 = (uint64_t)v185;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v140 - 8) + 56))(v185, 1, 1, v140);
    uint64_t v89 = (uint64_t)v186;
  }
  char v141 = v81 & 1;
  v186 = (char *)static VerticalAlignment.center.getter();
  uint64_t v142 = v188;
  uint64_t v143 = v189;
  sub_10006CAB8(v188, v189, &qword_1010CE510);
  sub_10006CAB8(v90, v89, (uint64_t *)&unk_1010CE4F0);
  uint64_t v144 = v187;
  sub_10006CAB8(v143, v187, &qword_1010CE510);
  uint64_t v145 = v90;
  uint64_t v146 = (int *)sub_100063814(&qword_1010CE520);
  uint64_t v147 = v144 + v146[12];
  uint64_t v148 = v182;
  uint64_t v149 = (uint64_t)v181;
  *(void *)uint64_t v147 = v182;
  *(void *)(v147 + 8) = v149;
  *(unsigned char *)(v147 + 16) = v141;
  *(void *)(v147 + 24) = v183;
  sub_10006CAB8(v89, v144 + v146[16], (uint64_t *)&unk_1010CE4F0);
  uint64_t v150 = v144 + v146[20];
  *(void *)uint64_t v150 = v186;
  *(void *)(v150 + 8) = 0;
  *(unsigned char *)(v150 + 16) = 1;
  *(void *)(v150 + 24) = 0;
  *(unsigned char *)(v150 + 32) = 1;
  sub_1001CC8D0(v148, v149, v141);
  swift_bridgeObjectRetain();
  sub_1000637B8(v145, (uint64_t *)&unk_1010CE4F0);
  sub_1000637B8(v142, &qword_1010CE510);
  sub_1000637B8(v89, (uint64_t *)&unk_1010CE4F0);
  sub_1000D1500(v148, v149, v141);
  swift_bridgeObjectRelease();
  return sub_1000637B8(v143, &qword_1010CE510);
}

uint64_t sub_100BAA10C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v105 = a2;
  uint64_t v108 = sub_100063814(&qword_1010CE5B0);
  uint64_t v103 = *(void *)(v108 - 8);
  __chkstk_darwin();
  uint64_t v91 = (uint64_t)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v90 = (uint64_t)&v79 - v4;
  sub_100063814(&qword_1010CE5B8);
  __chkstk_darwin();
  uint64_t v104 = (uint64_t)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v101 = (char *)&v79 - v6;
  sub_100063814(&qword_1010C8CC0);
  __chkstk_darwin();
  uint64_t v89 = (uint64_t)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v79 - v8;
  sub_100063814(&qword_1010CDDB0);
  __chkstk_darwin();
  uint64_t v11 = (uint64_t *)((char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for Collaboration.Management.View(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v99 = v12 - 8;
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 + 64);
  __chkstk_darwin();
  uint64_t v16 = _s10ManagementO4ViewV5ShareO6ButtonVMa(0);
  __chkstk_darwin();
  char v88 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v79 - v18;
  uint64_t v95 = sub_100063814(&qword_1010CE5C0);
  __chkstk_darwin();
  uint64_t v87 = (uint64_t)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v79 - v21;
  uint64_t v98 = sub_100063814(&qword_1010CE5C8);
  uint64_t v100 = *(void *)(v98 - 8);
  __chkstk_darwin();
  uint64_t v102 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v97 = (char *)&v79 - v24;
  __chkstk_darwin();
  uint64_t v96 = (char *)&v79 - v25;
  uint64_t v94 = type metadata accessor for Collaboration.Management.View;
  uint64_t v92 = (uint64_t)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100BC10B4(a1, v92, type metadata accessor for Collaboration.Management.View);
  uint64_t v26 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v27 = (v26 + 16) & ~v26;
  uint64_t v107 = v26 | 7;
  uint64_t v28 = swift_allocObject();
  uint64_t v93 = type metadata accessor for Collaboration.Management.View;
  sub_100BBBBF4((uint64_t)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27, type metadata accessor for Collaboration.Management.View);
  *uint64_t v11 = swift_getKeyPath();
  uint64_t v84 = sub_100063814(&qword_1010C89E0);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  *uint64_t v19 = 0;
  *((void *)v19 + 1) = sub_100BC3E7C;
  *((void *)v19 + 2) = v28;
  uint64_t v30 = (uint64_t)&v19[*(int *)(v16 + 24)];
  uint64_t v86 = v11;
  sub_10003CABC((uint64_t)v11, v30, &qword_1010CDDB0);
  uint64_t v85 = v16;
  int v31 = &v19[*(int *)(v16 + 28)];
  *(void *)int v31 = KeyPath;
  v31[8] = 0;
  uint64_t v32 = a1;
  sub_100BA0184((uint64_t)v9);
  uint64_t v33 = type metadata accessor for URL();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  unsigned int v106 = 1;
  uint64_t v83 = v33;
  uint64_t v82 = v35;
  uint64_t v81 = v34 + 48;
  LOBYTE(KeyPath) = ((unsigned int (*)(char *, uint64_t))v35)(v9, 1) == 1;
  sub_1000637B8((uint64_t)v9, &qword_1010C8CC0);
  uint64_t v36 = swift_getKeyPath();
  uint64_t v37 = swift_allocObject();
  *(unsigned char *)(v37 + 16) = KeyPath;
  sub_100BC10B4((uint64_t)v19, (uint64_t)v22, _s10ManagementO4ViewV5ShareO6ButtonVMa);
  uint64_t v38 = v95;
  uint64_t v39 = (uint64_t *)&v22[*(int *)(v95 + 36)];
  uint64_t *v39 = v36;
  v39[1] = (uint64_t)sub_100478498;
  v39[2] = v37;
  sub_100BC1A00((uint64_t)v19, _s10ManagementO4ViewV5ShareO6ButtonVMa);
  uint64_t v40 = v32;
  uint64_t v41 = v92;
  uint64_t v42 = v40 + *(int *)(v99 + 44);
  char v43 = *(unsigned char *)v42;
  uint64_t v44 = *(void *)(v42 + 8);
  char v109 = v43;
  uint64_t v110 = v44;
  sub_100063814(&qword_1010CC190);
  State.projectedValue.getter();
  uint64_t v99 = v40;
  sub_100BC10B4(v40, v41, v94);
  uint64_t v94 = (uint64_t (*)(uint64_t))(v27 + v15);
  uint64_t v45 = swift_allocObject();
  uint64_t v80 = v27;
  sub_100BBBBF4(v41, v45 + v27, v93);
  sub_100063814(&qword_1010CE5D0);
  sub_100BC3F44();
  uint64_t v46 = v98;
  sub_100BC318C(&qword_1010CE5F8, &qword_1010CE5D0, (void (*)(void))sub_100BC0DFC);
  uint64_t v47 = v96;
  uint64_t v48 = v38;
  uint64_t v49 = v97;
  View.sheet<A>(isPresented:onDismiss:content:)();
  uint64_t v50 = (uint64_t)v101;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v51 = (uint64_t)v22;
  uint64_t v52 = v100;
  sub_1000637B8(v51, &qword_1010CE5C0);
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v47, v49, v46);
  id v53 = [self currentTraitCollection];
  id v54 = [v53 userInterfaceIdiom];

  if (v54 != (id)6)
  {
    sub_100BC10B4(v99, v41, type metadata accessor for Collaboration.Management.View);
    uint64_t v55 = swift_allocObject();
    sub_100BBBBF4(v41, v55 + v80, type metadata accessor for Collaboration.Management.View);
    uint64_t v56 = swift_getKeyPath();
    uint64_t v57 = (uint64_t)v86;
    *uint64_t v86 = v56;
    swift_storeEnumTagMultiPayload();
    uint64_t v58 = swift_getKeyPath();
    uint64_t v59 = (uint64_t)v88;
    *char v88 = 1;
    *(void *)(v59 + 8) = sub_100BC4018;
    *(void *)(v59 + 16) = v55;
    uint64_t v60 = v85;
    sub_10003CABC(v57, v59 + *(int *)(v85 + 24), &qword_1010CDDB0);
    uint64_t v61 = v59 + *(int *)(v60 + 28);
    *(void *)uint64_t v61 = v58;
    *(unsigned char *)(v61 + 8) = 0;
    uint64_t v62 = v89;
    sub_100BA0184(v89);
    BOOL v63 = v82(v62, 1, v83) == 1;
    sub_1000637B8(v62, &qword_1010C8CC0);
    uint64_t v64 = swift_getKeyPath();
    uint64_t v65 = swift_allocObject();
    *(unsigned char *)(v65 + 16) = v63;
    uint64_t v66 = v87;
    sub_100BC10B4(v59, v87, _s10ManagementO4ViewV5ShareO6ButtonVMa);
    char v67 = (uint64_t *)(v66 + *(int *)(v48 + 36));
    *char v67 = v64;
    v67[1] = (uint64_t)sub_1004795D8;
    v67[2] = v65;
    sub_100BC1A00(v59, _s10ManagementO4ViewV5ShareO6ButtonVMa);
    uint64_t v68 = v91;
    sub_10006CAB8(v66, v91, &qword_1010CE5C0);
    uint64_t v69 = (uint64_t (**)())(v68 + *(int *)(v108 + 36));
    *uint64_t v69 = sub_100BAB250;
    v69[1] = 0;
    sub_1000637B8(v66, &qword_1010CE5C0);
    uint64_t v70 = v68;
    uint64_t v71 = v90;
    sub_10003CABC(v70, v90, &qword_1010CE5B0);
    sub_10003CABC(v71, v50, &qword_1010CE5B0);
    unsigned int v106 = 0;
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v103 + 56))(v50, v106, 1, v108);
  char v72 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  char v73 = v102;
  v72(v102, v47, v46);
  uint64_t v74 = v104;
  sub_10006CAB8(v50, v104, &qword_1010CE5B8);
  uint64_t v75 = v105;
  v72(v105, v73, v46);
  uint64_t v76 = sub_100063814(&qword_1010CE600);
  sub_10006CAB8(v74, (uint64_t)&v75[*(int *)(v76 + 48)], &qword_1010CE5B8);
  sub_1000637B8(v50, &qword_1010CE5B8);
  char v77 = *(void (**)(char *, uint64_t))(v52 + 8);
  v77(v47, v46);
  sub_1000637B8(v74, &qword_1010CE5B8);
  return ((uint64_t (*)(char *, uint64_t))v77)(v73, v46);
}