uint64_t sub_100BAAC74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned char *v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  unsigned char v14[24];
  uint64_t v15;

  v2 = type metadata accessor for Logger();
  v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 36));
  v7 = *v6;
  v8 = *((void *)v6 + 1);
  v14[16] = v7;
  v15 = v8;
  v14[15] = 1;
  sub_100063814(&qword_1010CC190);
  State.wrappedValue.setter();
  v9 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  v10 = Logger.logObject.getter();
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[Management] Share Sheet button tapped", v12, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100BAAE14@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Playlist();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010C8CC0);
  __chkstk_darwin();
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100BA0184((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    uint64_t result = sub_1000637B8((uint64_t)v7, &qword_1010C8CC0);
    uint64_t v13 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    swift_getKeyPath();
    uint64_t v15 = v2;
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v13 = Collaboration.Manager.activityViewController(for:url:)((uint64_t)v5, (uint64_t)v11);
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v15);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  *a1 = v13;
  return result;
}

uint64_t sub_100BAB0B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 40));
  char v7 = *v6;
  uint64_t v8 = *((void *)v6 + 1);
  v14[16] = v7;
  uint64_t v15 = v8;
  v14[15] = 1;
  sub_100063814(&qword_1010CC190);
  State.wrappedValue.setter();
  uint64_t v9 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[Management] QRCode button tapped", v12, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100BAB250()
{
  return Transaction.disablesAnimations.setter();
}

uint64_t sub_100BAB278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v57 = sub_100063814(&qword_1010CE538);
  __chkstk_darwin();
  v60 = (uint64_t *)&v43[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v52 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  uint64_t v53 = v4;
  v54 = &v43[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for OpenURLAction();
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  __chkstk_darwin();
  v56 = &v43[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100063814(&qword_1010CE540);
  __chkstk_darwin();
  uint64_t v9 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  v61 = &v43[-v10];
  uint64_t v11 = sub_100063814(&qword_1010CE548);
  __chkstk_darwin();
  uint64_t v13 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100063814(&qword_1010CE550);
  __chkstk_darwin();
  uint64_t v15 = &v43[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_100063814(&qword_1010CE558);
  __chkstk_darwin();
  v18 = &v43[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v55 = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if (v63 == 1)
  {
    *(void *)v18 = static VerticalAlignment.center.getter();
    *((void *)v18 + 1) = 0x4020000000000000;
    v18[16] = 0;
    uint64_t v19 = sub_100063814(&qword_1010CE590);
    sub_100BAB9E0(&v18[*(int *)(v19 + 44)]);
    sub_10006CAB8((uint64_t)v18, (uint64_t)v13, &qword_1010CE558);
    swift_storeEnumTagMultiPayload();
    sub_100063858(&qword_1010CE568, &qword_1010CE558);
    sub_100BC3C7C();
    _ConditionalContent<>.init(storage:)();
    sub_1000637B8((uint64_t)v18, &qword_1010CE558);
    uint64_t v20 = sub_100063814(&qword_1010CE560);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v15, 0, 1, v20);
    uint64_t v21 = (uint64_t)v15;
    return sub_10003CABC(v21, v62, &qword_1010CE550);
  }
  uint64_t v48 = v11;
  v49 = v13;
  v47 = v15;
  uint64_t v50 = v16;
  uint64_t v51 = v7;
  sub_100B9F644();
  if (v22)
  {
    LocalizedStringKey.init(_:)();
    uint64_t v23 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v25 = v24;
    uint64_t v46 = v26;
    int v28 = v27 & 1;
    uint64_t v29 = static Color.accentColor.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v45 = swift_getKeyPath();
    v31 = v54;
    sub_100BC10B4(v55, (uint64_t)v54, type metadata accessor for Collaboration.Management.View);
    unint64_t v32 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    uint64_t v33 = swift_allocObject();
    sub_100BBBBF4((uint64_t)v31, v33 + v32, type metadata accessor for Collaboration.Management.View);
    v34 = v56;
    OpenURLAction.init(handler:)();
    uint64_t v35 = v58;
    uint64_t v37 = v59;
    v36 = v60;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v58 + 16))((unsigned char *)v60 + *(int *)(v57 + 28), v34, v59);
    uint64_t *v36 = v45;
    sub_10006CAB8((uint64_t)v36, (uint64_t)&v9[*(int *)(v51 + 36)], &qword_1010CE538);
    *(void *)uint64_t v9 = v23;
    *((void *)v9 + 1) = v25;
    int v44 = v28;
    v9[16] = v28;
    *((void *)v9 + 3) = v46;
    *((void *)v9 + 4) = KeyPath;
    *((void *)v9 + 5) = v29;
    sub_1001CC8D0(v23, v25, v28);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1000637B8((uint64_t)v36, &qword_1010CE538);
    (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v34, v37);
    sub_1000D1500(v23, v25, v44);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v38 = v61;
    sub_10003CABC((uint64_t)v9, (uint64_t)v61, &qword_1010CE540);
    sub_10006CAB8((uint64_t)v38, (uint64_t)v49, &qword_1010CE540);
    swift_storeEnumTagMultiPayload();
    sub_100063858(&qword_1010CE568, &qword_1010CE558);
    sub_100BC3C7C();
    uint64_t v39 = (uint64_t)v47;
    _ConditionalContent<>.init(storage:)();
    sub_1000637B8((uint64_t)v38, &qword_1010CE540);
    uint64_t v40 = sub_100063814(&qword_1010CE560);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 0, 1, v40);
    uint64_t v21 = v39;
    return sub_10003CABC(v21, v62, &qword_1010CE550);
  }
  uint64_t v42 = sub_100063814(&qword_1010CE560);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v62, 1, 1, v42);
}

uint64_t sub_100BAB9E0@<X0>(char *a1@<X8>)
{
  v31 = a1;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v29 - v5;
  uint64_t v7 = sub_100063814(&qword_1010CDF18);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v29 - v11;
  ProgressView<>.init<>()();
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v6, v1);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v13 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v14 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v1);
  uint64_t v32 = v14;
  uint64_t v33 = v16;
  sub_10005D27C();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  LOBYTE(v16) = v22 & 1;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v23(v10, v12, v7);
  v30 = v12;
  uint64_t v24 = v10;
  uint64_t v25 = v31;
  v23(v31, v24, v7);
  uint64_t v26 = &v25[*(int *)(sub_100063814(&qword_1010CE598) + 48)];
  *(void *)uint64_t v26 = v17;
  *((void *)v26 + 1) = v19;
  v26[16] = v16;
  *((void *)v26 + 3) = v21;
  sub_1001CC8D0(v17, v19, v16);
  char v27 = *(void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  v27(v30, v7);
  sub_1000D1500(v17, v19, v16);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v27)(v24, v7);
}

uint64_t sub_100BABD5C()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_100BABD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100BBA90C(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues.openURL.setter);
}

uint64_t sub_100BABDAC(uint64_t a1, uint64_t a2)
{
  sub_100063814(&qword_1010CAA90);
  __chkstk_darwin();
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *(void *)(a2 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  v9[15] = 1;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v5;
  swift_retain();
  sub_100066A94((uint64_t)v4, (uint64_t)&unk_1010CE5A8, (uint64_t)v7);
  swift_release();
  return static OpenURLAction.Result.handled.getter();
}

uint64_t sub_100BABF0C@<X0>(uint64_t a1@<X8>)
{
  sub_100063814(&qword_1010C8CC0);
  __chkstk_darwin();
  uint64_t v3 = &v26[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_100BA0184((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    uint64_t result = sub_1000637B8((uint64_t)v3, &qword_1010C8CC0);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
LABEL_6:
    uint64_t v16 = 0;
    uint64_t v18 = 0;
    uint64_t v24 = 0;
    uint64_t v20 = 0;
    uint64_t v22 = 0;
    long long v23 = 0uLL;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  uint64_t v11 = URL.dataRepresentation.getter();
  QRCode.init(data:errorCorrectionLevel:)(v11, v12, 76, (uint64_t)v26);
  uint64_t v13 = v27;
  unint64_t v14 = v28;
  uint64_t v15 = v29;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t result = sub_10003CABC((uint64_t)v26, (uint64_t)&v30, (uint64_t *)&unk_1010CE490);
  uint64_t v10 = v32;
  if (!v32)
  {
    uint64_t v9 = 0;
    goto LABEL_6;
  }
  long long v25 = v30;
  uint64_t v9 = v31;
  uint64_t v16 = v33;
  sub_10007AA40(v13, v14);
  id v17 = v15;
  uint64_t v18 = static SafeAreaRegions.all.getter();
  unsigned __int8 v19 = static Edge.Set.all.getter();
  uint64_t v20 = static Alignment.center.getter();
  uint64_t v22 = v21;
  uint64_t result = sub_1006F4F60((uint64_t)v26);
  long long v23 = v25;
  uint64_t v24 = v19;
LABEL_7:
  *(_OWORD *)a1 = v23;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v16;
  *(void *)(a1 + 40) = v18;
  *(void *)(a1 + 48) = v24;
  *(void *)(a1 + 56) = v20;
  *(void *)(a1 + 64) = v22;
  return result;
}

uint64_t sub_100BAC158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_100063814(&qword_1010CAC40);
  __chkstk_darwin();
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v9 = &v23[-v8];
  sub_100063814(&qword_1010CD9C0);
  __chkstk_darwin();
  uint64_t v11 = (uint64_t *)&v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for Playlist.Collaborator();
  uint64_t v13 = *(void *)(v12 - 8);
  __n128 v14 = __chkstk_darwin();
  uint64_t v16 = &v23[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v13 + 16))(v16, a1, v12, v14);
  uint64_t v17 = *(void *)(a2 + 8);
  uint64_t *v11 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_1010C8970);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v13 + 32))(a3, v16, v12);
  uint64_t v18 = (int *)_s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  *(void *)(a3 + v18[5]) = v17;
  uint64_t v19 = a3 + v18[6];
  v23[15] = 0;
  swift_retain();
  State.init(wrappedValue:)();
  uint64_t v20 = v24;
  *(unsigned char *)uint64_t v19 = v23[16];
  *(void *)(v19 + 8) = v20;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v9, 1, 1, v12);
  sub_10006CAB8((uint64_t)v9, (uint64_t)v7, &qword_1010CAC40);
  State.init(wrappedValue:)();
  sub_1000637B8((uint64_t)v9, &qword_1010CAC40);
  uint64_t v21 = (uint64_t *)(a3 + v18[8]);
  *uint64_t v21 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_1010CD530);
  swift_storeEnumTagMultiPayload();
  return sub_10003CABC((uint64_t)v11, a3 + v18[9], &qword_1010CD9C0);
}

uint64_t sub_100BAC43C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v35 = a2;
  uint64_t v3 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  uint64_t v32 = v4;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  uint64_t v8 = *(void *)v7;
  uint64_t v9 = *(void *)(*(void *)v7 + 64);
  __chkstk_darwin();
  uint64_t v10 = sub_100063814(&qword_1010CE420);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100063814(&qword_1010CE418);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v33 = v14;
  uint64_t v34 = v15;
  __chkstk_darwin();
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100BC10B4(a1, (uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View);
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = swift_allocObject();
  sub_100BBBBF4((uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for Collaboration.Management.View);
  sub_100063814(&qword_1010CE438);
  sub_100BC361C();
  Button.init(action:label:)();
  BorderlessButtonStyle.init()();
  uint64_t v20 = sub_100063858(&qword_1010CE428, &qword_1010CE420);
  uint64_t v21 = sub_100BBBBAC(&qword_1010CE430, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  uint64_t v22 = v31;
  View.buttonStyle<A>(_:)();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v22);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v24 = v30;
  uint64_t v25 = v30 + v7[14];
  char v26 = *(unsigned char *)v25;
  uint64_t v27 = *(void *)(v25 + 8);
  char v41 = v26;
  uint64_t v42 = v27;
  sub_100063814(&qword_1010CC190);
  State.projectedValue.getter();
  uint64_t v36 = v24;
  uint64_t v37 = v10;
  uint64_t v38 = v23;
  uint64_t v39 = v20;
  uint64_t v40 = v21;
  swift_getOpaqueTypeConformance2();
  uint64_t v28 = v33;
  View.alert(isPresented:content:)();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v28);
}

uint64_t sub_100BAC8B4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (char *)(a1 + *(int *)(type metadata accessor for Collaboration.Management.View(0) + 48));
  char v7 = *v6;
  uint64_t v8 = *((void *)v6 + 1);
  v14[16] = v7;
  uint64_t v15 = v8;
  v14[15] = 1;
  sub_100063814(&qword_1010CC190);
  State.wrappedValue.setter();
  uint64_t v9 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "[Management] Remove Join Request button tapped", v12, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

__n128 sub_100BACA54@<Q0>(uint64_t a1@<X8>)
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v26[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  char v7 = &v26[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v5, v7, v2);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v11 = v10;
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v7, v2);
  *(void *)&long long v28 = v9;
  *((void *)&v28 + 1) = v11;
  sub_10005D27C();
  uint64_t v12 = Text.init<A>(_:)();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  LOBYTE(v11) = v17 & 1;
  uint64_t v18 = static Alignment.center.getter();
  sub_100623A58(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v27, 0.0, 1, 0.0, 1, v18, v19, v12, v14, v11, v16);
  sub_1000D1500(v12, v14, v11);
  swift_bridgeObjectRelease();
  long long v34 = v27[6];
  long long v35 = v27[7];
  long long v36 = v27[8];
  long long v30 = v27[2];
  long long v31 = v27[3];
  long long v32 = v27[4];
  long long v33 = v27[5];
  long long v28 = v27[0];
  __n128 v29 = (__n128)v27[1];
  uint64_t v20 = static Color.red.getter();
  uint64_t KeyPath = swift_getKeyPath();
  long long v22 = v35;
  *(_OWORD *)(a1 + 96) = v34;
  *(_OWORD *)(a1 + 112) = v22;
  *(_OWORD *)(a1 + 128) = v36;
  long long v23 = v31;
  *(_OWORD *)(a1 + 32) = v30;
  *(_OWORD *)(a1 + 48) = v23;
  long long v24 = v33;
  *(_OWORD *)(a1 + 64) = v32;
  *(_OWORD *)(a1 + 80) = v24;
  __n128 result = v29;
  *(_OWORD *)a1 = v28;
  *(__n128 *)(a1 + 16) = result;
  *(void *)(a1 + 144) = KeyPath;
  *(void *)(a1 + 152) = v20;
  return result;
}

uint64_t sub_100BACD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v53 = a2;
  uint64_t v47 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  __chkstk_darwin();
  uint64_t v48 = v2;
  uint64_t v50 = (uint64_t)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button();
  __chkstk_darwin();
  uint64_t v52 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v51 = (char *)v41 - v4;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  id v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)v41 - v9;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v42(v8, v10, v5);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v11 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v12 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v10, v5);
  uint64_t v54 = v12;
  uint64_t v55 = v14;
  v41[1] = sub_10005D27C();
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v45 = v17;
  uint64_t v46 = v16;
  int v43 = v18;
  uint64_t v44 = v19;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v20 = v42;
  v42(v8, v10, v5);
  id v21 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v22 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v24 = v23;
  v15(v10, v5);
  uint64_t v54 = v22;
  uint64_t v55 = v24;
  uint64_t v25 = Text.init<A>(_:)();
  v41[4] = v26;
  v41[5] = v25;
  v41[2] = v27 & 1;
  v41[3] = v28;
  String.LocalizationValue.init(stringLiteral:)();
  v20(v8, v10, v5);
  id v29 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v30 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v32 = v31;
  v15(v10, v5);
  uint64_t v54 = v30;
  uint64_t v55 = v32;
  uint64_t v33 = Text.init<A>(_:)();
  uint64_t v35 = v34;
  LOBYTE(v20) = v36 & 1;
  uint64_t v37 = v50;
  sub_100BC10B4(v49, v50, type metadata accessor for Collaboration.Management.View);
  unint64_t v38 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v39 = swift_allocObject();
  sub_100BBBBF4(v37, v39 + v38, type metadata accessor for Collaboration.Management.View);
  static Alert.Button.destructive(_:action:)();
  sub_1000D1500(v33, v35, (char)v20);
  swift_release();
  swift_bridgeObjectRelease();
  static Alert.Button.cancel(_:)();
  return Alert.init(title:message:primaryButton:secondaryButton:)();
}

uint64_t sub_100BAD2D8()
{
  uint64_t v0 = type metadata accessor for DismissAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100BA0DF0();
  type metadata accessor for Collaboration.Management.View(0);
  sub_100B6E244((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100BAD3C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  sub_100BC10B4(a1, (uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for Collaboration.Management.View);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  sub_100BBBBF4((uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5 + v4, type metadata accessor for Collaboration.Management.View);
  sub_100063814(&qword_1010CD490);
  _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  sub_100063858(&qword_1010CE458, &qword_1010CD490);
  sub_100BBBBAC(&qword_1010CE3E8, (void (*)(uint64_t))_s10ManagementO4ViewV19CollaboratorRowViewVMa);
  sub_100BBBBAC(&qword_1010CE460, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
  return ForEach<>.init(_:content:)();
}

uint64_t sub_100BAD624@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v19 - v6;
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v8 = *(void *)(v20 + 16);
  swift_bridgeObjectRelease();
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v9);
  uint64_t v20 = v8;
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  v10._object = (void *)0x8000000100DD57F0;
  v10._countAndFlagsBits = 0xD000000000000010;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v10);
  String.LocalizationValue.init(stringInterpolation:)();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v7, v2);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v11 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v12 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  uint64_t v20 = v12;
  uint64_t v21 = v14;
  sub_10005D27C();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v16;
  *(unsigned char *)(a1 + 16) = v17 & 1;
  *(void *)(a1 + 24) = v18;
  return result;
}

uint64_t sub_100BAD924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a2 = static VerticalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v13 = a2 + *(int *)(sub_100063814(&qword_1010CE468) + 44);
  sub_100BC10B4(a1, (uint64_t)v6, type metadata accessor for Collaboration.Management.View);
  type metadata accessor for MainActor();
  uint64_t v7 = static MainActor.shared.getter();
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = &protocol witness table for MainActor;
  sub_100BBBBF4((uint64_t)v6, v9 + v8, type metadata accessor for Collaboration.Management.View);
  sub_100BC10B4(a1, (uint64_t)v6, type metadata accessor for Collaboration.Management.View);
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = &protocol witness table for MainActor;
  sub_100BBBBF4((uint64_t)v6, v11 + v8, type metadata accessor for Collaboration.Management.View);
  Binding.init(get:set:)();
  return Toggle.init(isOn:label:)();
}

uint64_t sub_100BADB58@<X0>(BOOL *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = (v3 & 1) == 0;
  return result;
}

uint64_t sub_100BADBE0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100063814(&qword_1010CAA90);
  __chkstk_darwin();
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v8 = *a1;
  uint64_t v9 = *(void *)(a4 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  BOOL v10 = (v8 & 1) == 0;
  v14[15] = v10;
  swift_retain();
  static Published.subscript.setter();
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 1, 1, v11);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = v9;
  *(unsigned char *)(v12 + 40) = v10;
  swift_retain();
  sub_100B29904((uint64_t)v7, (uint64_t)&unk_1010CE478, v12);
  return swift_release();
}

uint64_t sub_100BADD44@<X0>(uint64_t a1@<X8>)
{
  return sub_100BB1FDC(a1);
}

uint64_t sub_100BADD60@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v7 = &v39[-v6];
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((v43 & 1) == 0)
  {
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v5, v7, v2);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    id v21 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v22 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v24 = v23;
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v7, v2);
    *(void *)&long long v43 = v22;
    *((void *)&v43 + 1) = v24;
    sub_10005D27C();
    uint64_t v14 = Text.init<A>(_:)();
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    *(void *)&long long v40 = v14;
    *((void *)&v40 + 1) = v15;
    char v19 = v25 & 1;
    *(void *)&long long v41 = v25 & 1;
    *((void *)&v41 + 1) = v26;
    LOBYTE(v42) = 0;
    goto LABEL_9;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v8 = *(void *)(v43 + 16);
  swift_bridgeObjectRelease();
  uint64_t v9 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16);
  if (v8)
  {
    String.LocalizationValue.init(stringLiteral:)();
    (*v9)(v5, v7, v2);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    id v10 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v11 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v13 = v12;
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v7, v2);
    *(void *)&long long v43 = v11;
    *((void *)&v43 + 1) = v13;
    sub_10005D27C();
    uint64_t v14 = Text.init<A>(_:)();
    uint64_t v16 = v14;
    uint64_t v17 = v15;
    char v19 = v18 & 1;
    *(void *)&long long v40 = v14;
    *((void *)&v40 + 1) = v15;
    *(void *)&long long v41 = v18 & 1;
    *((void *)&v41 + 1) = v20;
    LOBYTE(v42) = 1;
LABEL_9:
    sub_1001CC8D0(v14, v15, v19);
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)();
    long long v40 = v43;
    long long v41 = v44;
    __int16 v42 = v45;
    sub_100063814(&qword_1010CE3E0);
    sub_100BC36E4((unint64_t *)&qword_1010CE3D8, &qword_1010CE3E0);
    _ConditionalContent<>.init(storage:)();
    sub_1000D1500(v16, v17, v19);
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  String.LocalizationValue.init(stringLiteral:)();
  (*v9)(v5, v7, v2);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v32 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v33 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v35 = v34;
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v7, v2);
  *(void *)&long long v43 = v33;
  *((void *)&v43 + 1) = v35;
  sub_10005D27C();
  *(void *)&long long v40 = Text.init<A>(_:)();
  *((void *)&v40 + 1) = v36;
  *(void *)&long long v41 = v37 & 1;
  *((void *)&v41 + 1) = v38;
  __int16 v42 = 256;
  sub_100063814(&qword_1010CE3E0);
  sub_100BC36E4((unint64_t *)&qword_1010CE3D8, &qword_1010CE3E0);
  uint64_t result = _ConditionalContent<>.init(storage:)();
LABEL_10:
  uint64_t v28 = *((void *)&v43 + 1);
  long long v29 = v44;
  unsigned __int8 v30 = v45;
  char v31 = v46;
  *(void *)a1 = v43;
  *(void *)(a1 + 8) = v28;
  *(_OWORD *)(a1 + 16) = v29;
  *(unsigned char *)(a1 + 32) = v30;
  *(unsigned char *)(a1 + 33) = v31;
  return result;
}

uint64_t sub_100BAE370()
{
  uint64_t v0 = type metadata accessor for DismissAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Collaboration.Management.View(0);
  sub_100B6E244((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_100BAE454(uint64_t a1, unsigned char *a2)
{
  uint64_t v3 = type metadata accessor for DismissAction();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a2 == 1)
  {
    type metadata accessor for Collaboration.Management.View(0);
    sub_100B6E244((uint64_t)v6);
    DismissAction.callAsFunction()();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_100BAE548()
{
  id v0 = [self currentTraitCollection];
  id v1 = [v0 userInterfaceIdiom];

  byte_1010CD3D0 = v1 == (id)6;
}

uint64_t sub_100BAE5AC(uint64_t a1)
{
  return sub_100BAE770(a1, (uint64_t (*)(void))&static Font.largeTitle.getter, (uint64_t (*)(void))&static Font.title.getter, &qword_1010CD3D8);
}

uint64_t sub_100BAE5E0()
{
  if (qword_1010C8688 != -1) {
    swift_once();
  }
  if (byte_1010CD3D0 == 1)
  {
    uint64_t result = static Font.largeTitle.getter();
    uint64_t v1 = result;
  }
  else
  {
    static Font.title2.getter();
    uint64_t v1 = Font.bold()();
    uint64_t result = swift_release();
  }
  qword_1010CD3E0 = v1;
  return result;
}

uint64_t sub_100BAE668()
{
  if (qword_1010C8688 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 56.0;
  if (byte_1010CD3D0) {
    double v0 = 68.0;
  }
  qword_1010CD3E8 = *(void *)&v0;
  return result;
}

uint64_t sub_100BAE6D4(uint64_t a1)
{
  return sub_100BAE770(a1, (uint64_t (*)(void))&static Font.body.getter, (uint64_t (*)(void))&static Font.callout.getter, &qword_1010CD3F0);
}

uint64_t sub_100BAE708(uint64_t a1)
{
  return sub_100BAE770(a1, (uint64_t (*)(void))&static Font.footnote.getter, (uint64_t (*)(void))&static Font.caption.getter, &qword_1010CD3F8);
}

uint64_t sub_100BAE73C(uint64_t a1)
{
  return sub_100BAE770(a1, (uint64_t (*)(void))&static Font.body.getter, (uint64_t (*)(void))&static Font.caption2.getter, &qword_1010CD400);
}

uint64_t sub_100BAE770(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t *a4)
{
  if (qword_1010C8688 != -1) {
    swift_once();
  }
  if (byte_1010CD3D0 == 1) {
    uint64_t result = a2();
  }
  else {
    uint64_t result = a3();
  }
  *a4 = result;
  return result;
}

uint64_t sub_100BAE7F8()
{
  if (qword_1010C8688 != -1) {
    swift_once();
  }
  if (byte_1010CD3D0 == 1) {
    uint64_t result = static Font.Weight.semibold.getter();
  }
  else {
    uint64_t result = static Font.Weight.regular.getter();
  }
  qword_1010CD408 = v1;
  return result;
}

uint64_t sub_100BAE860()
{
  if (qword_1010C8688 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 12.0;
  if (byte_1010CD3D0) {
    double v0 = 0.0;
  }
  qword_1010CD410 = *(void *)&v0;
  return result;
}

uint64_t sub_100BAE8C4()
{
  if (qword_1010C8688 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = -4.0;
  if (byte_1010CD3D0) {
    double v0 = 0.0;
  }
  qword_1010CD418 = *(void *)&v0;
  return result;
}

uint64_t sub_100BAE928()
{
  if (qword_1010C8688 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 32.0;
  if (byte_1010CD3D0) {
    double v0 = 44.0;
  }
  qword_1010CD420 = *(void *)&v0;
  return result;
}

uint64_t sub_100BAE994()
{
  if (qword_1010C8688 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 84.0;
  if (byte_1010CD3D0) {
    double v0 = 169.0;
  }
  qword_1010CD428 = *(void *)&v0;
  return result;
}

uint64_t sub_100BAEA04()
{
  if (qword_1010C8688 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 38.0;
  if (byte_1010CD3D0) {
    double v0 = 48.0;
  }
  qword_1010CD430 = *(void *)&v0;
  return result;
}

uint64_t sub_100BAEA70()
{
  if (qword_1010C8688 != -1) {
    swift_once();
  }
  if (byte_1010CD3D0 == 1)
  {
    uint64_t result = static Color.accentColor.getter();
  }
  else
  {
    if (qword_1010C8418 != -1) {
      swift_once();
    }
    id v1 = (id)static UIColor.MusicTint.normal;
    uint64_t result = Color.init(_:)();
  }
  qword_1010CD438 = result;
  return result;
}

uint64_t sub_100BAEB18()
{
  uint64_t v0 = type metadata accessor for DynamicTypeSize();
  sub_100014CA4(v0, qword_1010CD440);
  uint64_t v1 = sub_100050A90(v0, (uint64_t)qword_1010CD440);
  uint64_t v2 = enum case for DynamicTypeSize.accessibility2(_:);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_100BAEBA0()
{
  uint64_t v0 = type metadata accessor for DynamicTypeSize();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100063814(&qword_1010CE038);
  sub_100014CA4(v4, qword_1010CD458);
  uint64_t v5 = sub_100050A90(v4, (uint64_t)qword_1010CD458);
  if (qword_1010C86F8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100050A90(v0, (uint64_t)qword_1010CD440);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v6, v0);
  sub_100BBBBAC((unint64_t *)&unk_1010CE080, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v3, v0);
  }
  __break(1u);
  return result;
}

uint64_t sub_100BAED44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100BBA90C(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_100BAED70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v43 = a1;
  uint64_t v44 = type metadata accessor for AccessibilityTraits();
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin();
  long long v41 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  __chkstk_darwin();
  uint64_t v38 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CDE78);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010CDE80);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100063814(&qword_1010CDE88);
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100063814(&qword_1010CDE90);
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100063814(&qword_1010CDE98);
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin();
  char v31 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0x4028000000000000;
  v6[16] = 0;
  uint64_t v15 = sub_100063814(&qword_1010CDEA0);
  sub_100BAF3C0(v1, (uint64_t)&v6[*(int *)(v15 + 44)]);
  sub_10006CAB8((uint64_t)v6, (uint64_t)v9, &qword_1010CDE78);
  v9[*(int *)(v7 + 36)] = 0;
  sub_1000637B8((uint64_t)v6, &qword_1010CDE78);
  uint64_t v46 = v1;
  uint64_t v16 = sub_100063814(&qword_1010CDEA8);
  unint64_t v17 = sub_100BC0F24();
  uint64_t v18 = sub_100BC318C(&qword_1010CDED0, &qword_1010CDEA8, (void (*)(void))sub_100BC0FE8);
  View.swipeActions<A>(edge:allowsFullSwipe:content:)();
  sub_1000637B8((uint64_t)v9, &qword_1010CDE80);
  uint64_t v19 = v1 + *(int *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) + 24);
  char v20 = *(unsigned char *)v19;
  uint64_t v21 = *(void *)(v19 + 8);
  char v51 = v20;
  uint64_t v52 = v21;
  sub_100063814(&qword_1010CC190);
  State.projectedValue.getter();
  uint64_t v45 = v1;
  uint64_t v47 = v7;
  uint64_t v48 = v16;
  unint64_t v49 = v17;
  uint64_t v50 = v18;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v23 = v32;
  View.alert(isPresented:content:)();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v23);
  uint64_t v24 = v38;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v47 = v23;
  uint64_t v48 = OpaqueTypeConformance2;
  uint64_t v25 = swift_getOpaqueTypeConformance2();
  uint64_t v26 = v31;
  uint64_t v27 = v34;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v40);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v27);
  uint64_t v28 = v41;
  static AccessibilityTraits.isButton.getter();
  uint64_t v47 = v27;
  uint64_t v48 = v25;
  swift_getOpaqueTypeConformance2();
  uint64_t v29 = v36;
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v44);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v26, v29);
}

uint64_t sub_100BAF3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v119 = a2;
  uint64_t v3 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  uint64_t v90 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v91 = v4;
  uint64_t v96 = (uint64_t)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_100063814(&qword_1010CDF10);
  __chkstk_darwin();
  v100 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100063814(&qword_1010CDF18);
  uint64_t v93 = *(void *)(v94 - 8);
  __chkstk_darwin();
  v92 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100063814(&qword_1010CDF20);
  __chkstk_darwin();
  v89 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v95 = (uint64_t)&v89 - v8;
  uint64_t v118 = sub_100063814(&qword_1010CDF28);
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin();
  v98 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = type metadata accessor for Playlist();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin();
  v113 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814((uint64_t *)&unk_1010CDF30);
  __chkstk_darwin();
  uint64_t v123 = (uint64_t)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v124 = (uint64_t)&v89 - v12;
  uint64_t v111 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin();
  v109 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v106 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814((uint64_t *)&unk_1010C8960);
  __chkstk_darwin();
  v103 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_100063814(&qword_1010CC0C8);
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin();
  uint64_t v102 = (uint64_t)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100063814(&qword_1010CDF40);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_100063814(&qword_1010CDF48);
  __chkstk_darwin();
  char v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100063814(&qword_1010CDF50);
  uint64_t v112 = *(void *)(v21 - 8);
  __chkstk_darwin();
  uint64_t v107 = (uint64_t)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DynamicTypeSize();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin();
  uint64_t v26 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v28 = (char *)&v89 - v27;
  sub_100063814(&qword_1010CDF58);
  __chkstk_darwin();
  uint64_t v122 = (uint64_t)&v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  char v31 = (char *)&v89 - v30;
  uint64_t v116 = v3;
  uint64_t v121 = a1;
  sub_100B6E744((uint64_t)v28);
  if (qword_1010C86F8 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_100050A90(v23, (uint64_t)qword_1010CD440);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v26, v32, v23);
  sub_100BBBBAC((unint64_t *)&qword_1010CDF60, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  char v33 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v24 + 8);
  v34(v26, v23);
  v34(v28, v23);
  uint64_t v35 = 1;
  uint64_t v36 = (uint64_t)v31;
  uint64_t v37 = v21;
  uint64_t v120 = v36;
  if ((v33 & 1) == 0)
  {
    uint64_t v38 = v103;
    sub_100BB05FC(v103);
    uint64_t v39 = sub_100063814(&qword_1010CF250);
    uint64_t v40 = (uint64_t)v106;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v106, 7, 10, v39);
    uint64_t v134 = 0;
    char v135 = 1;
    uint64_t v136 = 0;
    char v137 = 1;
    uint64_t v138 = 0;
    __int16 v139 = 513;
    uint64_t v41 = v110;
    uint64_t v42 = (uint64_t)v109;
    uint64_t v43 = v111;
    (*(void (**)(char *, void, uint64_t))(v110 + 104))(v109, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v111);
    uint64_t v44 = v102;
    static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v38, v40, (uint64_t)&v134, v42, v102);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
    sub_100BC1A00(v40, type metadata accessor for ArtworkImage.Placeholder);
    sub_1000637B8((uint64_t)v38, (uint64_t *)&unk_1010C8960);
    uint64_t v45 = v104;
    uint64_t v46 = v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v18, v44, v105);
    uint64_t v47 = &v18[*(int *)(v101 + 36)];
    *(void *)uint64_t v47 = 0;
    *((void *)v47 + 1) = 0;
    v47[16] = 1;
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v46);
    if (qword_1010C86E8 != -1) {
      swift_once();
    }
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    sub_10006CAB8((uint64_t)v18, (uint64_t)v20, &qword_1010CDF40);
    uint64_t v48 = &v20[*(int *)(v108 + 36)];
    long long v49 = v132;
    *(_OWORD *)uint64_t v48 = v131;
    *((_OWORD *)v48 + 1) = v49;
    *((_OWORD *)v48 + 2) = v133;
    sub_1000637B8((uint64_t)v18, &qword_1010CDF40);
    uint64_t v50 = v107;
    sub_10006CAB8((uint64_t)v20, v107, &qword_1010CDF48);
    uint64_t v51 = v50 + *(int *)(v37 + 36);
    *(void *)uint64_t v51 = 0;
    *(_WORD *)(v51 + 8) = 257;
    sub_1000637B8((uint64_t)v20, &qword_1010CDF48);
    uint64_t v36 = v120;
    sub_10003CABC(v50, v120, &qword_1010CDF50);
    uint64_t v35 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v112 + 56))(v36, v35, 1, v37);
  v106 = (char *)static HorizontalAlignment.leading.getter();
  uint64_t v52 = v121;
  sub_100BB0B1C((uint64_t)&v125);
  v109 = (char *)*((void *)&v125 + 1);
  uint64_t v110 = v125;
  uint64_t v107 = *((void *)&v126 + 1);
  uint64_t v108 = v126;
  uint64_t v105 = v127;
  uint64_t v53 = v128;
  uint64_t v104 = *((void *)&v127 + 1);
  uint64_t v112 = v129;
  LODWORD(v111) = v130;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v54 = v113;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v55 = Playlist.isOwner.getter();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v54, v115);
  uint64_t v56 = 1;
  if (v55)
  {
    if (Playlist.Collaborator.isPending.getter())
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      char v57 = sub_100B05CEC(v52, v125);
      swift_bridgeObjectRelease();
      if (v57)
      {
        uint64_t v58 = v92;
        ProgressView<>.init<>()();
        if (qword_1010C86D8 != -1) {
          swift_once();
        }
        static Alignment.center.getter();
        _FrameLayout.init(width:height:alignment:)();
        uint64_t v59 = v93;
        v60 = v89;
        uint64_t v61 = v94;
        (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v89, v58, v94);
        uint64_t v62 = &v60[*(int *)(v99 + 36)];
        long long v63 = v126;
        *(_OWORD *)uint64_t v62 = v125;
        *((_OWORD *)v62 + 1) = v63;
        *((_OWORD *)v62 + 2) = v127;
        (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v61);
        uint64_t v64 = (uint64_t)v60;
        uint64_t v65 = v95;
        sub_10003CABC(v64, v95, &qword_1010CDF20);
        sub_10006CAB8(v65, (uint64_t)v100, &qword_1010CDF20);
        swift_storeEnumTagMultiPayload();
        sub_100063814(&qword_1010CDF78);
        sub_100BC150C();
        sub_100063858((unint64_t *)&unk_1010CDF90, &qword_1010CDF78);
        uint64_t v66 = (uint64_t)v98;
        _ConditionalContent<>.init(storage:)();
        sub_1000637B8(v65, &qword_1010CDF20);
      }
      else
      {
        uint64_t v67 = v96;
        sub_100BC10B4(v52, v96, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        unint64_t v68 = (*(unsigned __int8 *)(v90 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
        uint64_t v69 = swift_allocObject();
        sub_100BBBBF4(v67, v69 + v68, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        sub_100BC10B4(v52, v67, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        uint64_t v70 = swift_allocObject();
        sub_100BBBBF4(v67, v70 + v68, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
        swift_retain();
        v71 = v100;
        unsigned char *v100 = 1;
        *((void *)v71 + 1) = sub_100BC1474;
        *((void *)v71 + 2) = v69;
        v71[24] = 0;
        *((void *)v71 + 4) = sub_100BC1488;
        *((void *)v71 + 5) = v70;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        sub_100063814(&qword_1010CDF78);
        sub_100BC150C();
        sub_100063858((unint64_t *)&unk_1010CDF90, &qword_1010CDF78);
        uint64_t v66 = (uint64_t)v98;
        _ConditionalContent<>.init(storage:)();
        swift_release();
        swift_release();
      }
      sub_10003CABC(v66, v124, &qword_1010CDF28);
      uint64_t v56 = 0;
    }
    else
    {
      uint64_t v56 = 1;
    }
  }
  uint64_t v72 = v124;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56))(v124, v56, 1, v118);
  uint64_t v73 = v122;
  sub_10006CAB8(v36, v122, &qword_1010CDF58);
  sub_10006CAB8(v72, v123, (uint64_t *)&unk_1010CDF30);
  uint64_t v74 = v119;
  sub_10006CAB8(v73, v119, &qword_1010CDF58);
  v75 = (int *)sub_100063814(&qword_1010CDF70);
  uint64_t v76 = v74 + v75[12];
  *(void *)uint64_t v76 = v106;
  *(void *)(v76 + 8) = 0;
  *(unsigned char *)(v76 + 16) = 1;
  uint64_t v77 = v110;
  uint64_t v78 = (uint64_t)v109;
  *(void *)(v76 + 24) = v110;
  *(void *)(v76 + 32) = v78;
  char v79 = v108;
  uint64_t v80 = v107;
  *(void *)(v76 + 40) = v108;
  *(void *)(v76 + 48) = v80;
  uint64_t v81 = v105;
  uint64_t v82 = v104;
  *(void *)(v76 + 56) = v105;
  *(void *)(v76 + 64) = v82;
  uint64_t v83 = v112;
  *(void *)(v76 + 72) = v53;
  *(void *)(v76 + 80) = v83;
  unsigned __int8 v84 = v111;
  *(unsigned char *)(v76 + 88) = v111;
  uint64_t v85 = v74 + v75[16];
  *(void *)uint64_t v85 = 0;
  *(unsigned char *)(v85 + 8) = 1;
  uint64_t v86 = v74 + v75[20];
  uint64_t v87 = v123;
  sub_10006CAB8(v123, v86, (uint64_t *)&unk_1010CDF30);
  sub_1001CC8E0(v77, v78, v79, v80);
  sub_100BC13F0(v81, v82, v53, v83, v84);
  sub_1000637B8(v124, (uint64_t *)&unk_1010CDF30);
  sub_1000637B8(v120, &qword_1010CDF58);
  sub_1000637B8(v87, (uint64_t *)&unk_1010CDF30);
  sub_1001CC924(v77, v78, v79, v80);
  sub_100BC1408(v81, v82, v53, v83, v84);
  return sub_1000637B8(v122, &qword_1010CDF58);
}

uint64_t sub_100BB05FC@<X0>(char *a1@<X8>)
{
  uint64_t v41 = a1;
  sub_100063814(&qword_1010C94F8);
  __chkstk_darwin();
  uint64_t v38 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for Artwork();
  uint64_t v3 = *(void **)(v2 - 8);
  __chkstk_darwin();
  uint64_t v37 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v36 = (char *)&v34 - v5;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v34 - v6;
  sub_100063814((uint64_t *)&unk_1010CEE80);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v34 - v9;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v34 - v11;
  __n128 v13 = __chkstk_darwin();
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = (void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v3[7];
  v16((char *)&v34 - v14, 1, 1, v2, v13);
  Playlist.Collaborator.artwork.getter();
  uint64_t v40 = (unsigned int (*)(char *, uint64_t, uint64_t))v3[6];
  unsigned int v17 = v40(v12, 1, v2);
  uint64_t v35 = v3;
  if (v17 == 1)
  {
    sub_1000637B8((uint64_t)v12, (uint64_t *)&unk_1010CEE80);
    sub_100057778(0, (unint64_t *)&qword_1010CDFA0);
    uint64_t v18 = Playlist.Collaborator.name.getter();
    id v20 = static MPArtworkCatalog.monogram(for:layoutDirection:)(v18, v19, 0, 1);
    swift_bridgeObjectRelease();
    uint64_t v22 = (uint64_t)v39;
    uint64_t v21 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v40;
    if (v20)
    {
      Artwork.init(_:)();
      sub_1000637B8((uint64_t)v15, (uint64_t *)&unk_1010CEE80);
      ((void (*)(char *, void, uint64_t, uint64_t))v16)(v10, 0, 1, v2);
      sub_10003CABC((uint64_t)v10, (uint64_t)v15, (uint64_t *)&unk_1010CEE80);
    }
  }
  else
  {
    sub_1000637B8((uint64_t)v15, (uint64_t *)&unk_1010CEE80);
    uint64_t v23 = (void (*)(char *, char *, uint64_t))v3[4];
    v23(v7, v12, v2);
    v23(v15, v7, v2);
    ((void (*)(char *, void, uint64_t, uint64_t))v16)(v15, 0, 1, v2);
    uint64_t v22 = (uint64_t)v39;
    uint64_t v21 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v40;
  }
  sub_10006CAB8((uint64_t)v15, v22, (uint64_t *)&unk_1010CEE80);
  if (v21(v22, 1, v2) == 1)
  {
    sub_1000637B8((uint64_t)v15, (uint64_t *)&unk_1010CEE80);
    sub_1000637B8(v22, (uint64_t *)&unk_1010CEE80);
    uint64_t v24 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v41, 1, 1, v24);
  }
  else
  {
    uint64_t v27 = v35;
    uint64_t v26 = v36;
    uint64_t v28 = (void (*)(char *, uint64_t, uint64_t))v35[4];
    v28(v36, v22, v2);
    uint64_t v29 = v37;
    ((void (*)(char *, char *, uint64_t))v27[2])(v37, v26, v2);
    uint64_t v30 = (uint64_t)v38;
    static Artwork.CropStyle.boundedBox.getter();
    ((void (*)(char *, uint64_t))v27[1])(v26, v2);
    sub_1000637B8((uint64_t)v15, (uint64_t *)&unk_1010CEE80);
    uint64_t v31 = type metadata accessor for Artwork.CropStyle();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
    uint64_t v32 = v41;
    v28(v41, (uint64_t)v29, v2);
    uint64_t v33 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_10003CABC(v30, (uint64_t)&v32[*(int *)(v33 + 20)], &qword_1010C94F8);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
  }
}

uint64_t sub_100BB0B1C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin();
  uint64_t v93 = (char *)&v92 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v97 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for String.LocalizationValue();
  uint64_t v98 = *(void *)(v4 - 8);
  uint64_t v99 = v4;
  __chkstk_darwin();
  uint64_t v95 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v96 = (char *)&v92 - v6;
  uint64_t v7 = type metadata accessor for Playlist();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = *(int *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) + 20);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v11 = Playlist.isOwner.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v12 = sub_100BB1424(v11 & 1);
  if (v13)
  {
    uint64_t v106 = v12;
    uint64_t v107 = v13;
    sub_10005D27C();
    uint64_t v14 = Text.init<A>(_:)();
    uint64_t v16 = v15;
    char v18 = v17 & 1;
    LODWORD(v106) = static HierarchicalShapeStyle.primary.getter();
    uint64_t v19 = Text.foregroundStyle<A>(_:)();
    uint64_t v21 = v20;
    char v23 = v22;
    sub_1000D1500(v14, v16, v18);
    swift_bridgeObjectRelease();
    if (qword_1010C86A8 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v24 = Text.font(_:)();
    uint64_t v26 = v25;
    char v28 = v27;
    uint64_t v100 = v29;
    swift_release();
    uint64_t v30 = v28 & 1;
    sub_1000D1500(v19, v21, v23 & 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v26 = 0;
    uint64_t v30 = 0;
    uint64_t v100 = 0;
  }
  if ((Playlist.Collaborator.isPending.getter() & 1) != 0 && (sub_100B9E594() & 1) == 0)
  {
    uint64_t v92 = v30;
    uint64_t v94 = v24;
    uint64_t v66 = v96;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v68 = v98;
    uint64_t v67 = v99;
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v95, v66, v99);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    uint64_t v93 = (char *)v26;
    id v69 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v70 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v72 = v71;
    (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v67);
    uint64_t v106 = v70;
    uint64_t v107 = v72;
    sub_10005D27C();
    uint64_t v73 = Text.init<A>(_:)();
    uint64_t v75 = v74;
    char v77 = v76 & 1;
    LODWORD(v106) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v78 = Text.foregroundStyle<A>(_:)();
    uint64_t v80 = v79;
    char v82 = v81;
    sub_1000D1500(v73, v75, v77);
    swift_bridgeObjectRelease();
    if (qword_1010C86B0 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v83 = Text.font(_:)();
    uint64_t v85 = v84;
    char v87 = v86;
    uint64_t v89 = v88;
    swift_release();
    sub_1000D1500(v78, v80, v82 & 1);
    swift_bridgeObjectRelease();
    uint64_t v101 = v83;
    uint64_t v102 = v85;
    uint64_t v103 = v87 & 1;
    uint64_t v104 = v89;
    char v105 = 0;
    goto LABEL_20;
  }
  uint64_t v31 = Playlist.Collaborator.handle.getter();
  uint64_t v33 = v32;
  if (v32)
  {
    uint64_t v34 = v31;
    uint64_t v92 = v30;
    uint64_t v94 = v24;
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v35._countAndFlagsBits = 64;
    v35._object = (void *)0xE100000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v35);
    v36._countAndFlagsBits = v34;
    v36._object = v33;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v36);
    swift_bridgeObjectRelease();
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v37);
    uint64_t v38 = v96;
    String.LocalizationValue.init(stringInterpolation:)();
    uint64_t v40 = v98;
    uint64_t v39 = v99;
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v95, v38, v99);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    uint64_t v93 = (char *)v26;
    id v41 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v44 = v43;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
    uint64_t v106 = v42;
    uint64_t v107 = v44;
    sub_10005D27C();
    uint64_t v45 = Text.init<A>(_:)();
    uint64_t v47 = v46;
    char v49 = v48 & 1;
    LODWORD(v106) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v50 = Text.foregroundStyle<A>(_:)();
    uint64_t v52 = v51;
    char v54 = v53;
    sub_1000D1500(v45, v47, v49);
    swift_bridgeObjectRelease();
    if (qword_1010C86B0 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v55 = Text.font(_:)();
    uint64_t v57 = v56;
    char v59 = v58;
    uint64_t v61 = v60;
    swift_release();
    sub_1000D1500(v50, v52, v54 & 1);
    swift_bridgeObjectRelease();
    uint64_t v101 = v55;
    uint64_t v102 = v57;
    uint64_t v103 = v59 & 1;
    uint64_t v104 = v61;
    char v105 = 1;
LABEL_20:
    _ConditionalContent<>.init(storage:)();
    uint64_t v62 = v106;
    uint64_t v63 = v107;
    uint64_t v33 = v108;
    uint64_t v64 = v109;
    unsigned __int8 v65 = v110;
    uint64_t v24 = v94;
    uint64_t v26 = (uint64_t)v93;
    uint64_t v30 = v92;
    goto LABEL_21;
  }
  uint64_t v62 = 0;
  uint64_t v63 = 0;
  uint64_t v64 = 0;
  unsigned __int8 v65 = -1;
LABEL_21:
  *(void *)a1 = v24;
  *(void *)(a1 + 8) = v26;
  uint64_t v90 = v100;
  *(void *)(a1 + 16) = v30;
  *(void *)(a1 + 24) = v90;
  *(void *)(a1 + 32) = v62;
  *(void *)(a1 + 40) = v63;
  *(void *)(a1 + 48) = v33;
  *(void *)(a1 + 56) = v64;
  *(unsigned char *)(a1 + 64) = v65;
  sub_1001CC8E0(v24, v26, v30, v90);
  sub_100BC13F0(v62, v63, (char)v33, v64, v65);
  sub_100BC1408(v62, v63, (char)v33, v64, v65);
  return sub_1001CC924(v24, v26, v30, v90);
}

uint64_t sub_100BB1424(char a1)
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  type metadata accessor for String.LocalizationValue();
  __chkstk_darwin();
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin();
  uint64_t v2 = Playlist.Collaborator.name.getter();
  uint64_t v4 = v3;
  if (v3 && (Playlist.Collaborator.isHost.getter() & 1) != 0)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v5);
    v6._countAndFlagsBits = v2;
    v6._object = v4;
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v6);
    swift_bridgeObjectRelease();
    v7._countAndFlagsBits = 0x2972656E774F2820;
    v7._object = (void *)0xE800000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v7);
    String.LocalizationValue.init(stringInterpolation:)();
    if (a1)
    {
      if (qword_1010C8350 != -1) {
        swift_once();
      }
    }
    else if (qword_1010C8350 != -1)
    {
      swift_once();
    }
    id v8 = (id)qword_10112BE80;
    static Locale.current.getter();
    return String.init(localized:defaultValue:table:bundle:locale:comment:)();
  }
  return v2;
}

uint64_t sub_100BB16A4(uint64_t a1, const char *a2, char a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  char v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a2, v13, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  return sub_100BA2430(a1, a3);
}

uint64_t sub_100BB1828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v32 = *(void *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) - 8);
  uint64_t v3 = *(void *)(v32 + 64);
  __chkstk_darwin();
  uint64_t v34 = (uint64_t)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814((uint64_t *)&unk_1010CF1A0);
  __chkstk_darwin();
  uint64_t v33 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100063814((uint64_t *)&unk_1010CD5A0);
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  __chkstk_darwin();
  Swift::String v35 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814((uint64_t *)&unk_1010CDEE0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v31 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Playlist();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  char v14 = Playlist.isOwner.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0 && (Playlist.Collaborator.isHost.getter() & 1) == 0)
  {
    char v18 = Playlist.Collaborator.isPending.getter();
    uint64_t v15 = 1;
    uint64_t v16 = v38;
    if (v18 != 2 && (v18 & 1) == 0)
    {
      uint64_t v19 = v33;
      static ButtonRole.cancel.getter();
      uint64_t v20 = type metadata accessor for ButtonRole();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
      uint64_t v21 = v34;
      sub_100BC10B4(a1, v34, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
      unint64_t v22 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v23 = swift_allocObject();
      sub_100BBBBF4(v21, v23 + v22, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
      uint64_t v24 = v35;
      Button.init(role:action:label:)();
      uint64_t v25 = static Color.red.getter();
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v28 = v36;
      uint64_t v27 = v37;
      uint64_t v29 = (uint64_t)v31;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v31, v24, v37);
      uint64_t v30 = (uint64_t *)(v29 + *(int *)(v7 + 36));
      uint64_t *v30 = KeyPath;
      v30[1] = v25;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v24, v27);
      sub_10003CABC(v29, v16, (uint64_t *)&unk_1010CDEE0);
      uint64_t v15 = 0;
    }
  }
  else
  {
    uint64_t v15 = 1;
    uint64_t v16 = v38;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v16, v15, 1, v7);
}

uint64_t sub_100BB1CF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100063814(&qword_1010CAC40);
  __chkstk_darwin();
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v9 = &v21[-v8];
  uint64_t v10 = type metadata accessor for Playlist.Collaborator();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  uint64_t v12 = _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  sub_10006CAB8((uint64_t)v9, (uint64_t)v7, &qword_1010CAC40);
  sub_100063814(&qword_1010CDCF8);
  State.wrappedValue.setter();
  sub_1000637B8((uint64_t)v9, &qword_1010CAC40);
  uint64_t v13 = (char *)(a1 + *(int *)(v12 + 24));
  char v14 = *v13;
  uint64_t v15 = *((void *)v13 + 1);
  v21[16] = v14;
  uint64_t v22 = v15;
  v21[15] = 1;
  sub_100063814(&qword_1010CC190);
  State.wrappedValue.setter();
  uint64_t v16 = Logger.collaboration.unsafeMutableAddressor();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v16, v2);
  char v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[Management] Remove swipe action triggered", v19, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100BB1FC8@<X0>(uint64_t a1@<X8>)
{
  return sub_100BB1FDC(a1);
}

uint64_t sub_100BB1FDC@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)v16 - v6;
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v7, v2);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  v16[1] = v9;
  v16[2] = v11;
  sub_10005D27C();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v13;
  *(unsigned char *)(a1 + 16) = v14 & 1;
  *(void *)(a1 + 24) = v15;
  return result;
}

uint64_t sub_100BB21E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v53 = a2;
  uint64_t v47 = *(void *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) - 8);
  __chkstk_darwin();
  uint64_t v48 = v2;
  uint64_t v50 = (uint64_t)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button();
  __chkstk_darwin();
  uint64_t v52 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v51 = (char *)v41 - v4;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  id v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)v41 - v9;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v42(v8, v10, v5);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v11 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v12 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v10, v5);
  uint64_t v54 = v12;
  uint64_t v55 = v14;
  v41[1] = sub_10005D27C();
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v45 = v17;
  uint64_t v46 = v16;
  int v43 = v18;
  uint64_t v44 = v19;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v20 = v42;
  v42(v8, v10, v5);
  id v21 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v22 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v24 = v23;
  v15(v10, v5);
  uint64_t v54 = v22;
  uint64_t v55 = v24;
  uint64_t v25 = Text.init<A>(_:)();
  v41[4] = v26;
  v41[5] = v25;
  v41[2] = v27 & 1;
  v41[3] = v28;
  String.LocalizationValue.init(stringLiteral:)();
  v20(v8, v10, v5);
  id v29 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v30 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v32 = v31;
  v15(v10, v5);
  uint64_t v54 = v30;
  uint64_t v55 = v32;
  uint64_t v33 = Text.init<A>(_:)();
  uint64_t v35 = v34;
  LOBYTE(v20) = v36 & 1;
  uint64_t v37 = v50;
  sub_100BC10B4(v49, v50, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
  unint64_t v38 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v39 = swift_allocObject();
  sub_100BBBBF4(v37, v39 + v38, _s10ManagementO4ViewV19CollaboratorRowViewVMa);
  static Alert.Button.destructive(_:action:)();
  sub_1000D1500(v33, v35, (char)v20);
  swift_release();
  swift_bridgeObjectRelease();
  static Alert.Button.cancel(_:)();
  return Alert.init(title:message:primaryButton:secondaryButton:)();
}

uint64_t sub_100BB2760()
{
  sub_100063814(&qword_1010CAC40);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v3 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  sub_100063814(&qword_1010CDCF8);
  State.wrappedValue.getter();
  sub_100BA1BB0((uint64_t)v1);
  return sub_1000637B8((uint64_t)v1, &qword_1010CAC40);
}

uint64_t sub_100BB2828()
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v0 = type metadata accessor for String.LocalizationValue();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v5 = &v9[-v4];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v3, v5, v0);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v6 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v7 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v5, v0);
  return v7;
}

uint64_t sub_100BB2A34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v59 = a1;
  uint64_t v57 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin();
  char v58 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for ColorScheme();
  uint64_t v4 = *(void *)(v56 - 8);
  __chkstk_darwin();
  uint64_t v55 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v54 = (uint64_t)&v50 - v6;
  uint64_t v7 = _s10ManagementO4ViewV5ShareO6ButtonVMa(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin();
  uint64_t v50 = sub_100063814(&qword_1010CDFC0);
  uint64_t v10 = *(void *)(v50 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CDFC8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100063814(&qword_1010CDFD0);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100063814(&qword_1010CDFD8);
  __chkstk_darwin();
  uint64_t v53 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100BC10B4(v2, (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), _s10ManagementO4ViewV5ShareO6ButtonVMa);
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = swift_allocObject();
  sub_100BBBBF4((uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, _s10ManagementO4ViewV5ShareO6ButtonVMa);
  uint64_t v60 = v2;
  sub_100063814(&qword_1010CDFE0);
  sub_100BC1888(&qword_1010CDFE8, &qword_1010CDFE0, (void (*)(void))sub_100BC1904);
  Button.init(action:label:)();
  static Alignment.center.getter();
  __n128 v20 = sub_100BD982C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v14, 0.0, 1, 0.0, 1);
  (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v50, v20);
  uint64_t v21 = v2 + *(int *)(v7 + 28);
  uint64_t v22 = *(void *)v21;
  LOBYTE(v12) = *(unsigned char *)(v21 + 8);
  sub_100237EDC(*(void *)v21, (char)v12);
  char v23 = sub_100B6E784(v22, (char)v12);
  sub_100237F44(v22, (char)v12);
  if (v23)
  {
    if (qword_1010C86F0 != -1) {
      swift_once();
    }
    uint64_t v24 = qword_1010CD438;
    swift_retain();
  }
  else
  {
    id v25 = [self tertiaryLabelColor];
    uint64_t v24 = Color.init(_:)();
  }
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006CAB8((uint64_t)v14, (uint64_t)v16, &qword_1010CDFC8);
  char v27 = (uint64_t *)&v16[*(int *)(v51 + 36)];
  *char v27 = KeyPath;
  v27[1] = v24;
  sub_1000637B8((uint64_t)v14, &qword_1010CDFC8);
  uint64_t v28 = v54;
  sub_100B6E95C(v54);
  uint64_t v30 = v55;
  uint64_t v29 = v56;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v55, enum case for ColorScheme.light(_:), v56);
  char v31 = static ColorScheme.== infix(_:_:)();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v4 + 8);
  v32(v30, v29);
  v32((char *)v28, v29);
  uint64_t v33 = self;
  uint64_t v34 = &selRef_systemBackgroundColor;
  if ((v31 & 1) == 0) {
    uint64_t v34 = &selRef_secondarySystemBackgroundColor;
  }
  id v35 = [v33 *v34 v50];
  uint64_t v36 = Color.init(_:)();
  uint64_t v37 = v58;
  unint64_t v38 = &v58[*(int *)(v57 + 20)];
  uint64_t v39 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v40 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v38, v39, v40);
  __asm { FMOV            V0.2D, #10.0 }
  *uint64_t v37 = _Q0;
  uint64_t v46 = (uint64_t)v53;
  uint64_t v47 = (uint64_t *)&v53[*(int *)(v52 + 36)];
  uint64_t v48 = sub_100063814(&qword_1010CE030);
  sub_100BC10B4((uint64_t)v37, (uint64_t)v47 + *(int *)(v48 + 52), (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t *v47 = v36;
  *(_WORD *)((char *)v47 + *(int *)(v48 + 56)) = 256;
  sub_10006CAB8((uint64_t)v16, v46, &qword_1010CDFD0);
  sub_100BC1A00((uint64_t)v37, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000637B8((uint64_t)v16, &qword_1010CDFD0);
  return sub_10003CABC(v46, v59, &qword_1010CDFD8);
}

uint64_t sub_100BB3140@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100063814(&qword_1010CE008) - 8;
  __chkstk_darwin();
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814((uint64_t *)&unk_1010CF180) - 8;
  __chkstk_darwin();
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CDFE0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0x4008000000000000;
  v6[16] = 0;
  sub_100BB3348(a1, &v6[*(int *)(v4 + 52)]);
  if (*a1) {
    double v12 = 2.5;
  }
  else {
    double v12 = 0.0;
  }
  sub_10006CAB8((uint64_t)v6, (uint64_t)v9, &qword_1010CE008);
  uint64_t v13 = &v9[*(int *)(v7 + 44)];
  *(void *)uint64_t v13 = 0;
  *((double *)v13 + 1) = v12;
  sub_1000637B8((uint64_t)v6, &qword_1010CE008);
  uint64_t v14 = static Alignment.center.getter();
  sub_100BD9A18(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v11, 0.0, 1, 0.0, 1, v14, v15);
  sub_1000637B8((uint64_t)v9, (uint64_t *)&unk_1010CF180);
  return sub_10003CABC((uint64_t)v11, a2, &qword_1010CDFE0);
}

uint64_t sub_100BB3348@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v57 = (char *)sub_100063814(&qword_1010CE038);
  __chkstk_darwin();
  uint64_t v4 = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100063814(&qword_1010CE040);
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  __chkstk_darwin();
  uint64_t v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100063814(&qword_1010CE048);
  uint64_t v58 = *(void *)(v56 - 8);
  __chkstk_darwin();
  uint64_t v54 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v51 = (char *)v50 - v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)v50 - v10;
  v50[1] = *a1;
  uint64_t v12 = Image.init(systemName:)();
  uint64_t v13 = static Font.body.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v59 = v12;
  unint64_t v60 = KeyPath;
  uint64_t v61 = v13;
  static Font.Weight.semibold.getter();
  uint64_t v15 = sub_100063814((uint64_t *)&unk_1010CE050);
  unint64_t v16 = sub_100B93868();
  View.fontWeight(_:)();
  swift_release();
  swift_release();
  swift_release();
  if (qword_1010C8700 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100050A90((uint64_t)v57, (uint64_t)qword_1010CD458);
  sub_10006CAB8(v17, (uint64_t)v4, &qword_1010CE038);
  uint64_t v59 = v15;
  unint64_t v60 = v16;
  swift_getOpaqueTypeConformance2();
  sub_100063858(&qword_1010CE070, &qword_1010CE038);
  unint64_t v18 = v51;
  uint64_t v19 = v53;
  View.dynamicTypeSize<A>(_:)();
  sub_1000637B8((uint64_t)v4, &qword_1010CE038);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v7, v19);
  __n128 v20 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
  uint64_t v57 = v11;
  v20(v11, v18, v56);
  uint64_t v59 = sub_100BB2828();
  unint64_t v60 = v21;
  sub_10005D27C();
  uint64_t v22 = Text.init<A>(_:)();
  uint64_t v24 = v23;
  char v26 = v25;
  if (qword_1010C86B8 != -1) {
    swift_once();
  }
  swift_retain();
  char v27 = v26 & 1;
  uint64_t v28 = Text.font(_:)();
  uint64_t v30 = v29;
  char v32 = v31;
  swift_release();
  sub_1000D1500(v22, v24, v27);
  swift_bridgeObjectRelease();
  if (qword_1010C86C0 != -1) {
    swift_once();
  }
  char v33 = v32 & 1;
  uint64_t v34 = Text.fontWeight(_:)();
  uint64_t v36 = v35;
  uint64_t v53 = v37;
  char v39 = v38 & 1;
  sub_1000D1500(v28, v30, v33);
  swift_bridgeObjectRelease();
  uint64_t v40 = v58;
  id v41 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  uint64_t v42 = v54;
  uint64_t v43 = v56;
  v41(v54, v57, v56);
  uint64_t v44 = v55;
  *uint64_t v55 = 0;
  *((unsigned char *)v44 + 8) = 1;
  uint64_t v45 = (int *)sub_100063814(&qword_1010CE078);
  v41((char *)v44 + v45[12], v42, v43);
  uint64_t v46 = (char *)v44 + v45[16];
  *(void *)uint64_t v46 = v34;
  *((void *)v46 + 1) = v36;
  v46[16] = v39;
  *((void *)v46 + 3) = v53;
  uint64_t v47 = (char *)v44 + v45[20];
  *(void *)uint64_t v47 = 0x4020000000000000;
  v47[8] = 0;
  sub_1001CC8D0(v34, v36, v39);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v40 + 8);
  swift_bridgeObjectRetain();
  v48(v57, v43);
  sub_1000D1500(v34, v36, v39);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v48)(v42, v43);
}

uint64_t sub_100BB3918@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v44 = a4;
  char v6 = a1 & 1;
  uint64_t v45 = type metadata accessor for ButtonBorderShape();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin();
  uint64_t v42 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  uint64_t v40 = v9;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100063814(&qword_1010CE848);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  uint64_t v38 = v13;
  __chkstk_darwin();
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100063814(&qword_1010CE850);
  uint64_t v16 = *(void *)(v41 - 8);
  __chkstk_darwin();
  unint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = v6;
  *(void *)(v19 + 24) = a2;
  *(void *)(v19 + 32) = a3;
  char v46 = v6;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  swift_retain();
  sub_100063814(&qword_1010CE858);
  uint64_t v20 = sub_10006389C(&qword_1010CE860);
  uint64_t v21 = sub_10006389C(&qword_1010CE038);
  unint64_t v22 = sub_100BC4FC4();
  uint64_t v23 = sub_100063858(&qword_1010CE070, &qword_1010CE038);
  uint64_t v49 = v20;
  uint64_t v50 = v21;
  unint64_t v51 = v22;
  uint64_t v52 = v23;
  swift_getOpaqueTypeConformance2();
  Button.init(action:label:)();
  BorderlessButtonStyle.init()();
  sub_100063858(&qword_1010CE8B0, &qword_1010CE848);
  sub_100BBBBAC(&qword_1010CE430, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  uint64_t v24 = v37;
  uint64_t v25 = v39;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v25);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v24);
  char v26 = v42;
  static ButtonBorderShape.circle.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v28 = sub_100063814(&qword_1010CE8B8);
  uint64_t v29 = v44;
  uint64_t v30 = (uint64_t *)(v44 + *(int *)(v28 + 36));
  uint64_t v31 = sub_100063814(&qword_1010CE8C0);
  uint64_t v32 = v43;
  uint64_t v33 = v45;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))((char *)v30 + *(int *)(v31 + 28), v26, v45);
  uint64_t *v30 = KeyPath;
  uint64_t v34 = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 16))(v29, v18, v41);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v34);
}

uint64_t sub_100BB3DD4()
{
  return swift_release();
}

uint64_t sub_100BB3E5C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v23 = sub_100063814(&qword_1010CE038);
  __chkstk_darwin();
  uint64_t v4 = (char *)&KeyPath - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100063814(&qword_1010CE858);
  uint64_t v25 = *(void *)(v26 - 8);
  __chkstk_darwin();
  uint64_t v24 = (char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = Image.init(systemName:)();
  static Font.subheadline.getter();
  uint64_t v21 = Font.bold()();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = static Color.white.getter();
  uint64_t v7 = swift_getKeyPath();
  if (qword_1010C86D8 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v8 = v42;
  char v9 = v43;
  uint64_t v10 = v44;
  char v11 = v45;
  uint64_t v12 = v46;
  uint64_t v13 = v47;
  if (a1) {
    uint64_t v14 = static Color.red.getter();
  }
  else {
    uint64_t v14 = static Color.green.getter();
  }
  uint64_t v15 = v14;
  char v16 = static Edge.Set.all.getter();
  uint64_t v28 = v22;
  uint64_t v29 = KeyPath;
  uint64_t v30 = v21;
  uint64_t v31 = v7;
  uint64_t v32 = v6;
  uint64_t v33 = v8;
  char v34 = v9;
  uint64_t v35 = v10;
  char v36 = v11;
  uint64_t v37 = v12;
  uint64_t v38 = v13;
  uint64_t v39 = v15;
  char v40 = v16;
  __int16 v41 = 256;
  if (qword_1010C8700 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100050A90(v23, (uint64_t)qword_1010CD458);
  sub_10006CAB8(v17, (uint64_t)v4, &qword_1010CE038);
  sub_100063814(&qword_1010CE860);
  sub_100BC4FC4();
  sub_100063858(&qword_1010CE070, &qword_1010CE038);
  unint64_t v18 = v24;
  View.dynamicTypeSize<A>(_:)();
  sub_1000637B8((uint64_t)v4, &qword_1010CE038);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(v27, v18, v26);
}

uint64_t sub_100BB4200@<X0>(uint64_t a1@<X8>)
{
  return sub_100BB3918(*(unsigned char *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), a1);
}

uint64_t Collaboration.Management.ViewController.__allocating_init(model:)()
{
  type metadata accessor for Collaboration.Management.View(0);
  __chkstk_darwin();
  uint64_t v2 = (uint64_t *)((char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v3 = objc_allocWithZone(v0);
  swift_retain();
  Collaboration.Management.View.init(model:)(v2);
  uint64_t v4 = UIHostingController.init(rootView:)();
  swift_release();
  return v4;
}

uint64_t Collaboration.Management.ViewController.init(model:)()
{
  uint64_t v0 = type metadata accessor for Collaboration.Management.View(0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (uint64_t *)((char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  Collaboration.Management.View.init(model:)(v2);
  uint64_t v3 = UIHostingController.init(rootView:)();
  swift_release();
  return v3;
}

void sub_100BB434C()
{
}

Swift::Void __swiftcall Collaboration.Management.ViewController.viewWillLayoutSubviews()()
{
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for Collaboration.Management.ViewController(0);
  [super viewWillLayoutSubviews];
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 window];

    if (v3 && (id v4 = [v3 windowScene], v3, v4))
    {
      id v5 = [v4 coordinateSpace];

      [v5 bounds];
      uint64_t v7 = v6;
      uint64_t v9 = v8;
      swift_unknownObjectRelease();
      char v10 = 0;
      uint64_t v11 = v7;
      uint64_t v12 = v9;
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      char v10 = 1;
    }
    sub_100BB4618(v11, v12, v10);
  }
  else
  {
    __break(1u);
  }
}

void sub_100BB44C0(void *a1)
{
  id v1 = a1;
  Collaboration.Management.ViewController.viewWillLayoutSubviews()();
}

id Collaboration.Management.ViewController.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  sub_100BB4618(*(uint64_t *)&a2, *(uint64_t *)&a3, 0);
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for Collaboration.Management.ViewController(0);
  return [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2];
}

void sub_100BB4578(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  swift_unknownObjectRetain();
  id v11 = a1;
  sub_100BB4618(*(uint64_t *)&a2, *(uint64_t *)&a3, 0);
  v12.receiver = v11;
  v12.super_class = (Class)type metadata accessor for Collaboration.Management.ViewController(0);
  [super viewWillTransitionToSize:a5 withTransitionCoordinator:a2, a3];
  swift_unknownObjectRelease();
}

void sub_100BB4618(uint64_t a1, uint64_t a2, char a3)
{
  int v6 = a3 & 1;
  uint64_t v7 = self;
  id v8 = [v7 currentTraitCollection];
  id v9 = [v8 userInterfaceIdiom];

  if (v9 == (id)6) {
    double v10 = 512.0;
  }
  else {
    double v10 = 540.0;
  }
  if (v9 == (id)6) {
    double v11 = 620.0;
  }
  else {
    double v11 = 700.0;
  }
  id v12 = [v7 currentTraitCollection];
  id v13 = [v12 userInterfaceIdiom];

  if (v13 == (id)6 && v6 == 0)
  {
    if (qword_1010C8500 != -1) {
      swift_once();
    }
    double v15 = *(double *)&qword_10112C278 + *(double *)&qword_10112C278;
    if (v11 + *(double *)&qword_10112C278 + *(double *)&qword_10112C278 > *(double *)&a2) {
      double v11 = *(double *)&a2 - (*(double *)&qword_10112C278 + *(double *)&qword_10112C278);
    }
    if (v10 + v15 > *(double *)&a1) {
      double v10 = *(double *)&a1 - v15;
    }
  }
  [v3 preferredContentSize];
  if (v10 != v17 || v11 != v16)
  {
    [v3 setPreferredContentSize:v10, v11];
    id v19 = [v3 navigationController];
    if (v19)
    {
      id v20 = v19;
      [v19 setPreferredContentSize:v10, v11];
    }
  }
}

void Collaboration.Management.ViewController.init(coder:rootView:)()
{
}

id Collaboration.Management.ViewController.__deallocating_deinit()
{
  return sub_100BB7DEC(type metadata accessor for Collaboration.Management.ViewController);
}

uint64_t sub_100BB4858()
{
  return UIViewControllerRepresentable.sizeThatFits(_:uiViewController:context:)();
}

uint64_t sub_100BB4894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100BC1688();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100BB48F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100BC1688();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100BB495C()
{
}

char *sub_100BB4984()
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  id v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v6 = (char *)v14 - v5;
  long long v7 = *(_OWORD *)(v0 + 16);
  v15[0] = *(_OWORD *)v0;
  v15[1] = v7;
  uint64_t v16 = *(void *)(v0 + 32);
  sub_100BC1600((void *)v0);
  String.LocalizationValue.init(stringLiteral:)();
  id v8 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v8(v4, v6, v1);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v9 = (id)qword_10112BE80;
  static Locale.current.getter();
  v14[0] = String.init(localized:table:bundle:locale:comment:)();
  double v10 = *(void (**)(char *, uint64_t))(v2 + 8);
  v10(v6, v1);
  String.LocalizationValue.init(stringLiteral:)();
  v8(v4, v6, v1);
  id v11 = (id)qword_10112BE80;
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  v10(v6, v1);
  id v12 = objc_allocWithZone((Class)type metadata accessor for QRCodeOverlayViewController());
  return QRCodeOverlayViewController.init(qrCode:title:subtitle:)(v15);
}

char *sub_100BB4C40()
{
  return sub_100BB4984();
}

uint64_t sub_100BB4C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100BC1634();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100BB4CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100BC1634();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100BB4D44()
{
}

uint64_t PlaylistCurators.Curator.init(name:artwork:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v6 = type metadata accessor for PlaylistCurators.Curator(0);
  return sub_10003CABC(a3, (uint64_t)a4 + *(int *)(v6 + 20), (uint64_t *)&unk_1010CEE80);
}

uint64_t sub_100BB4DB4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v42 = a1;
  sub_100063814(&qword_1010C94F8);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Artwork();
  uint64_t v5 = *(void **)(v4 - 8);
  __chkstk_darwin();
  uint64_t v38 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v37 = (char *)&v35 - v7;
  __chkstk_darwin();
  id v9 = (char *)&v35 - v8;
  sub_100063814((uint64_t *)&unk_1010CEE80);
  __chkstk_darwin();
  char v40 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v12 = (char *)&v35 - v11;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v35 - v13;
  __n128 v15 = __chkstk_darwin();
  double v17 = (char *)&v35 - v16;
  unint64_t v18 = (void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v5[7];
  v18((char *)&v35 - v16, 1, 1, v4, v15);
  uint64_t v19 = type metadata accessor for PlaylistCurators.Curator(0);
  sub_10006CAB8((uint64_t)v2 + *(int *)(v19 + 20), (uint64_t)v14, (uint64_t *)&unk_1010CEE80);
  __int16 v41 = (unsigned int (*)(char *, uint64_t, uint64_t))v5[6];
  unsigned int v20 = v41(v14, 1, v4);
  char v36 = v5;
  if (v20 == 1)
  {
    sub_1000637B8((uint64_t)v14, (uint64_t *)&unk_1010CEE80);
    sub_100057778(0, (unint64_t *)&qword_1010CDFA0);
    id v21 = static MPArtworkCatalog.monogram(for:layoutDirection:)(*v2, v2[1], 0, 1);
    uint64_t v23 = (uint64_t)v40;
    uint64_t v22 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v41;
    if (v21)
    {
      Artwork.init(_:)();
      sub_1000637B8((uint64_t)v17, (uint64_t *)&unk_1010CEE80);
      ((void (*)(char *, void, uint64_t, uint64_t))v18)(v12, 0, 1, v4);
      sub_10003CABC((uint64_t)v12, (uint64_t)v17, (uint64_t *)&unk_1010CEE80);
    }
  }
  else
  {
    sub_1000637B8((uint64_t)v17, (uint64_t *)&unk_1010CEE80);
    uint64_t v24 = (void (*)(char *, char *, uint64_t))v5[4];
    v24(v9, v14, v4);
    v24(v17, v9, v4);
    ((void (*)(char *, void, uint64_t, uint64_t))v18)(v17, 0, 1, v4);
    uint64_t v23 = (uint64_t)v40;
    uint64_t v22 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v41;
  }
  sub_10006CAB8((uint64_t)v17, v23, (uint64_t *)&unk_1010CEE80);
  if (v22(v23, 1, v4) == 1)
  {
    sub_1000637B8((uint64_t)v17, (uint64_t *)&unk_1010CEE80);
    sub_1000637B8(v23, (uint64_t *)&unk_1010CEE80);
    uint64_t v25 = type metadata accessor for ArtworkImage.ViewModel(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v42, 1, 1, v25);
  }
  else
  {
    uint64_t v28 = v36;
    uint64_t v27 = v37;
    uint64_t v29 = (void (*)(char *, uint64_t, uint64_t))v36[4];
    v29(v37, v23, v4);
    uint64_t v30 = v38;
    ((void (*)(char *, char *, uint64_t))v28[2])(v38, v27, v4);
    uint64_t v31 = (uint64_t)v39;
    static Artwork.CropStyle.boundedBox.getter();
    ((void (*)(char *, uint64_t))v28[1])(v27, v4);
    sub_1000637B8((uint64_t)v17, (uint64_t *)&unk_1010CEE80);
    uint64_t v32 = type metadata accessor for Artwork.CropStyle();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 0, 1, v32);
    uint64_t v33 = v42;
    v29(v42, (uint64_t)v30, v4);
    uint64_t v34 = type metadata accessor for ArtworkImage.ViewModel(0);
    sub_10003CABC(v31, (uint64_t)&v33[*(int *)(v34 + 20)], &qword_1010C94F8);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
  }
}

uint64_t sub_100BB52E8(uint64_t *a1, uint64_t *a2)
{
  return _s11MusicCoreUI16PlaylistCuratorsO4ViewV13ConfigurationV23__derived_struct_equalsySbAG_AGtFZ_0(*a1, *a2);
}

uint64_t PlaylistCurators.View.init(configuration:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (void *)((char *)a2 + *(int *)(type metadata accessor for PlaylistCurators.View(0) + 20));
  *uint64_t v4 = swift_getKeyPath();
  sub_100063814(&qword_1010CD5C0);
  uint64_t result = swift_storeEnumTagMultiPayload();
  *a2 = a1;
  return result;
}

uint64_t PlaylistCurators.View.body.getter()
{
  sub_100063814(&qword_1010CD5C8);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v2 = static VerticalAlignment.center.getter();
  *((void *)v2 + 1) = 0;
  v2[16] = 0;
  uint64_t v3 = sub_100063814(&qword_1010CD5D0);
  sub_100BB5478(v0, (uint64_t)&v2[*(int *)(v3 + 44)]);
  sub_100063858(&qword_1010CD5D8, &qword_1010CD5C8);
  View.artworkCaching(id:limit:)();
  return sub_1000637B8((uint64_t)v2, &qword_1010CD5C8);
}

uint64_t sub_100BB5478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  __chkstk_darwin();
  char v40 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v43 = (char *)sub_100063814((uint64_t *)&unk_1010CD5E0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010C8CB8);
  __chkstk_darwin();
  uint64_t v41 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v9 = (char *)&v39 - v8;
  __chkstk_darwin();
  uint64_t v42 = (uint64_t)&v39 - v10;
  sub_100063814(&qword_1010CE148);
  __chkstk_darwin();
  id v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100063814(&qword_1010CE150);
  __chkstk_darwin();
  uint64_t v46 = (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v39 - v15;
  __chkstk_darwin();
  uint64_t v48 = (uint64_t)&v39 - v17;
  *(void *)id v12 = static VerticalAlignment.center.getter();
  *((void *)v12 + 1) = 0x4018000000000000;
  v12[16] = 0;
  uint64_t v18 = sub_100063814(&qword_1010CE158);
  sub_100BB5AD4(a1, (uint64_t)&v12[*(int *)(v18 + 44)]);
  if (qword_1010C8590 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void *)algn_10112CC48;
  char v20 = byte_10112CC50;
  if (byte_10112CC50) {
    double v21 = *(double *)&static Corner.medium;
  }
  else {
    double v21 = *(double *)&static Corner.medium + -3.0;
  }
  sub_10006CAB8((uint64_t)v12, (uint64_t)v16, &qword_1010CE148);
  uint64_t v22 = &v16[*(int *)(v13 + 36)];
  *(double *)uint64_t v22 = v21;
  *((void *)v22 + 1) = v19;
  v22[16] = v20;
  *((void *)v22 + 3) = 0x4008000000000000;
  *((void *)v22 + 4) = 0;
  *((_WORD *)v22 + 20) = 257;
  sub_1000637B8((uint64_t)v12, &qword_1010CE148);
  sub_10003CABC((uint64_t)v16, v48, &qword_1010CE150);
  type metadata accessor for PlaylistCurators.View(0);
  uint64_t v23 = v42;
  sub_100B6E998(v42);
  uint64_t v24 = v44;
  uint64_t v25 = v45;
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v9, enum case for UserInterfaceSizeClass.regular(_:), v45);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v9, 0, 1, v25);
  uint64_t v26 = (uint64_t)&v6[*((int *)v43 + 12)];
  sub_10006CAB8(v23, (uint64_t)v6, &qword_1010C8CB8);
  sub_10006CAB8((uint64_t)v9, v26, &qword_1010C8CB8);
  uint64_t v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  if (v27((uint64_t)v6, 1, v25) != 1)
  {
    char v43 = v9;
    uint64_t v28 = v41;
    sub_10006CAB8((uint64_t)v6, v41, &qword_1010C8CB8);
    if (v27(v26, 1, v25) != 1)
    {
      uint64_t v29 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v40, v26, v25);
      sub_100BBBBAC(&qword_1010CD5F0, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v30 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v31 = *(void (**)(char *, uint64_t))(v24 + 8);
      v31(v29, v25);
      sub_1000637B8((uint64_t)v43, &qword_1010C8CB8);
      sub_1000637B8(v23, &qword_1010C8CB8);
      v31((char *)v28, v25);
      sub_1000637B8((uint64_t)v6, &qword_1010C8CB8);
      if (v30) {
        goto LABEL_13;
      }
LABEL_14:
      char v33 = 0;
      char v32 = 1;
      goto LABEL_15;
    }
    sub_1000637B8((uint64_t)v43, &qword_1010C8CB8);
    sub_1000637B8(v23, &qword_1010C8CB8);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v28, v25);
LABEL_11:
    sub_1000637B8((uint64_t)v6, (uint64_t *)&unk_1010CD5E0);
    goto LABEL_14;
  }
  sub_1000637B8((uint64_t)v9, &qword_1010C8CB8);
  sub_1000637B8(v23, &qword_1010C8CB8);
  if (v27(v26, 1, v25) != 1) {
    goto LABEL_11;
  }
  sub_1000637B8((uint64_t)v6, &qword_1010C8CB8);
LABEL_13:
  char v32 = 0;
  char v33 = 1;
LABEL_15:
  uint64_t v34 = v48;
  uint64_t v35 = v46;
  sub_10006CAB8(v48, v46, &qword_1010CE150);
  uint64_t v36 = v47;
  sub_10006CAB8(v35, v47, &qword_1010CE150);
  uint64_t v37 = v36 + *(int *)(sub_100063814((uint64_t *)&unk_1010CE160) + 48);
  *(void *)uint64_t v37 = 0;
  *(unsigned char *)(v37 + 8) = v33;
  *(unsigned char *)(v37 + 9) = v32;
  sub_1000637B8(v34, &qword_1010CE150);
  return sub_1000637B8(v35, &qword_1010CE150);
}

uint64_t sub_100BB5AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v83 = a2;
  sub_100063814(&qword_1010CC290);
  __chkstk_darwin();
  uint64_t v80 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Font.TextStyle();
  uint64_t v81 = *(void *)(v4 - 8);
  uint64_t v82 = v4;
  __chkstk_darwin();
  uint64_t v79 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for Image.Scale();
  uint64_t v76 = *(void *)(v78 - 8);
  __chkstk_darwin();
  uint64_t v74 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for Text.Suffix();
  uint64_t v67 = *(void *)(v70 - 8);
  __chkstk_darwin();
  uint64_t v61 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100063814(&qword_1010CE170);
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin();
  uint64_t v62 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100063814(&qword_1010CE178) - 8;
  __chkstk_darwin();
  uint64_t v63 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100063814(&qword_1010CE180) - 8;
  __chkstk_darwin();
  uint64_t v66 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100063814(&qword_1010CE188) - 8;
  __chkstk_darwin();
  uint64_t v73 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v75 = (uint64_t)&v60 - v12;
  sub_100063814(&qword_1010C8CB8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CE190);
  __chkstk_darwin();
  uint64_t v72 = (uint64_t)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v17 = (double *)((char *)&v60 - v16);
  type metadata accessor for PlaylistCurators.View(0);
  sub_100B6E998((uint64_t)v14);
  double v18 = sub_100BC2198((uint64_t)v14);
  sub_1000637B8((uint64_t)v14, &qword_1010C8CB8);
  *(void *)uint64_t v17 = static VerticalAlignment.center.getter();
  v17[1] = v18;
  *((unsigned char *)v17 + 16) = 0;
  uint64_t v64 = v17;
  sub_100063814(&qword_1010CE198);
  uint64_t v60 = a1;
  sub_100BB6428(a1);
  uint64_t v84 = sub_100BB6E90();
  uint64_t v85 = v19;
  sub_10005D27C();
  uint64_t v84 = Text.init<A>(_:)();
  uint64_t v85 = v20;
  char v86 = v21 & 1;
  uint64_t v87 = v22;
  String.nonBreakingSpace.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  Image.init(systemName:)();
  swift_retain();
  uint64_t v23 = Text.init(_:)();
  uint64_t v25 = v24;
  char v27 = v26 & 1;
  uint64_t v28 = static Text.+ infix(_:_:)();
  uint64_t v30 = v29;
  char v32 = v31 & 1;
  sub_1000D1500(v23, v25, v27);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  char v33 = v61;
  static Text.Suffix.alwaysVisible(_:)();
  sub_1000D1500(v28, v30, v32);
  swift_bridgeObjectRelease();
  uint64_t v34 = v62;
  View.textSuffix(_:)();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v33, v70);
  sub_1000D1500(v84, v85, v86);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v36 = v69;
  uint64_t v37 = (uint64_t)v63;
  uint64_t v38 = v71;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v63, v34, v71);
  uint64_t v39 = v37 + *(int *)(v65 + 44);
  *(void *)uint64_t v39 = KeyPath;
  *(void *)(v39 + 8) = 1;
  *(unsigned char *)(v39 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v38);
  uint64_t v40 = v76;
  uint64_t v41 = v74;
  uint64_t v42 = v78;
  (*(void (**)(char *, void, uint64_t))(v76 + 104))(v74, enum case for Image.Scale.small(_:), v78);
  uint64_t v43 = swift_getKeyPath();
  uint64_t v44 = (uint64_t)v66;
  uint64_t v45 = (uint64_t *)&v66[*(int *)(v68 + 44)];
  uint64_t v46 = sub_100063814(&qword_1010CE1A0);
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))((char *)v45 + *(int *)(v46 + 28), v41, v42);
  *uint64_t v45 = v43;
  sub_10006CAB8(v37, v44, &qword_1010CE178);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
  sub_1000637B8(v37, &qword_1010CE178);
  uint64_t v47 = v79;
  PlaylistCurators.View.fontTextStyle.getter(v79);
  uint64_t v48 = type metadata accessor for Font.Design();
  uint64_t v49 = (uint64_t)v80;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v80, 1, 1, v48);
  uint64_t v50 = static Font.system(_:design:weight:)();
  sub_1000637B8(v49, &qword_1010CC290);
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v47, v82);
  uint64_t v51 = swift_getKeyPath();
  uint64_t v52 = v73;
  sub_10006CAB8(v44, v73, &qword_1010CE180);
  uint64_t v53 = (uint64_t *)(v52 + *(int *)(v77 + 44));
  *uint64_t v53 = v51;
  v53[1] = v50;
  sub_1000637B8(v44, &qword_1010CE180);
  uint64_t v54 = v75;
  sub_10003CABC(v52, v75, &qword_1010CE188);
  uint64_t v55 = (uint64_t)v64;
  uint64_t v56 = v72;
  sub_10006CAB8((uint64_t)v64, v72, &qword_1010CE190);
  sub_10006CAB8(v54, v52, &qword_1010CE188);
  uint64_t v57 = v83;
  sub_10006CAB8(v56, v83, &qword_1010CE190);
  uint64_t v58 = sub_100063814(&qword_1010CE1A8);
  sub_10006CAB8(v52, v57 + *(int *)(v58 + 48), &qword_1010CE188);
  sub_1000637B8(v54, &qword_1010CE188);
  sub_1000637B8(v55, &qword_1010CE190);
  sub_1000637B8(v52, &qword_1010CE188);
  return sub_1000637B8(v56, &qword_1010CE190);
}

uint64_t sub_100BB6428(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for PlaylistCurators.View(0) - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin();
  uint64_t v4 = *(void *)a1;
  if (*(void *)(*(void *)a1 + 16) >= 3uLL) {
    uint64_t v5 = 3;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)a1 + 16);
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v6 = (void *)swift_dynamicCastClass();
  if (!v6)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  uint64_t v7 = v6[2];
  swift_release();
  if (v7 == v5)
  {
    uint64_t v8 = (void *)swift_dynamicCastClass();
    if (!v8)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = *(void *)(type metadata accessor for PlaylistCurators.Curator(0) - 8);
    sub_100AE4788(v4, v4 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), 0, (2 * v5) | 1);
    uint64_t v8 = v16;
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_bridgeObjectRetain();
  size_t v10 = sub_100C4BBBC(v9);
  swift_release();
  v17[1] = v10;
  swift_getKeyPath();
  sub_100BC10B4(a1, (uint64_t)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PlaylistCurators.View);
  unint64_t v11 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v8;
  sub_100BBBBF4((uint64_t)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, type metadata accessor for PlaylistCurators.View);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100BC26AC;
  *(void *)(v13 + 24) = v12;
  sub_100063814(&qword_1010CE1B0);
  sub_100063814(&qword_1010CE1B8);
  sub_100063858(&qword_1010CE1C0, &qword_1010CE1B0);
  sub_100BC2798();
  return ForEach<>.init(_:id:content:)();
}

void sub_100BB6724(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_100063814(&qword_1010CE1D8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + 16);
  BOOL v9 = __OFSUB__(v8, a1);
  uint64_t v10 = v8 - a1;
  if (v9)
  {
    __break(1u);
  }
  else
  {
    double v11 = (double)v10;
    sub_100BB6810((uint64_t)v7);
    sub_10006CAB8((uint64_t)v7, a3, &qword_1010CE1D8);
    *(double *)(a3 + *(int *)(sub_100063814(&qword_1010CE1B8) + 36)) = v11;
    sub_1000637B8((uint64_t)v7, &qword_1010CE1D8);
  }
}

uint64_t sub_100BB6810@<X0>(uint64_t a1@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v46 = type metadata accessor for PlaceholderStyleModifier(0) - 8;
  __chkstk_darwin();
  uint64_t v45 = (uint64_t (**)(uint64_t))((char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814((uint64_t *)&unk_1010C8960);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814(&qword_1010CC0C8);
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  __chkstk_darwin();
  uint64_t v37 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100063814(&qword_1010CE208) - 8;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100063814(&qword_1010CE1F8) - 8;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100063814(&qword_1010CE1E8) - 8;
  __chkstk_darwin();
  uint64_t v38 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010C8CB8);
  __chkstk_darwin();
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PlaylistCurators.View(0);
  sub_100B6E998((uint64_t)v17);
  double v18 = sub_100BC2A44((uint64_t)v17);
  sub_1000637B8((uint64_t)v17, &qword_1010C8CB8);
  sub_100BB4DB4(v7);
  uint64_t v19 = sub_100063814(&qword_1010CF250);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 7, 10, v19);
  double v51 = v18;
  char v52 = 0;
  double v53 = v18;
  char v54 = 0;
  uint64_t v55 = 0;
  __int16 v56 = 257;
  uint64_t v20 = v2;
  uint64_t v21 = (uint64_t)v39;
  uint64_t v22 = v42;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v39, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v42);
  uint64_t v23 = v37;
  static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v7, (uint64_t)v5, (uint64_t)&v51, v21, v37);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
  sub_100BC1A00((uint64_t)v5, type metadata accessor for ArtworkImage.Placeholder);
  sub_1000637B8((uint64_t)v7, (uint64_t *)&unk_1010C8960);
  uint64_t v24 = v45;
  uint64_t v25 = (uint64_t *)((char *)v45 + *(int *)(v46 + 28));
  *uint64_t v25 = swift_getKeyPath();
  sub_100063814(&qword_1010C8940);
  swift_storeEnumTagMultiPayload();
  *uint64_t v24 = sub_100BB76B8;
  v24[1] = 0;
  sub_100BBBBF4((uint64_t)v24, (uint64_t)&v12[*(int *)(v10 + 44)], type metadata accessor for PlaceholderStyleModifier);
  uint64_t v26 = v23;
  uint64_t v27 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v12, v26, v44);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10006CAB8((uint64_t)v12, (uint64_t)v14, &qword_1010CE208);
  uint64_t v28 = &v14[*(int *)(v41 + 44)];
  long long v29 = v49;
  *(_OWORD *)uint64_t v28 = v48;
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v50;
  sub_1000637B8((uint64_t)v12, &qword_1010CE208);
  sub_10006CAB8((uint64_t)v14, v27, &qword_1010CE1F8);
  uint64_t v30 = v27 + *(int *)(v40 + 44);
  *(void *)uint64_t v30 = 0;
  *(void *)(v30 + 8) = 0;
  *(unsigned char *)(v30 + 16) = 1;
  sub_1000637B8((uint64_t)v14, &qword_1010CE1F8);
  if (qword_1010C8710 != -1) {
    swift_once();
  }
  uint64_t v31 = qword_1010CD478;
  uint64_t v32 = qword_1010CD480;
  char v33 = byte_1010CD488;
  uint64_t v34 = v47;
  sub_10006CAB8(v27, v47, &qword_1010CE1E8);
  uint64_t v35 = v34 + *(int *)(sub_100063814(&qword_1010CE1D8) + 36);
  *(void *)uint64_t v35 = v31;
  *(void *)(v35 + 8) = v32;
  *(unsigned char *)(v35 + 16) = v33;
  *(void *)(v35 + 24) = 0;
  *(void *)(v35 + 32) = 0;
  *(unsigned char *)(v35 + 40) = 1;
  swift_retain();
  return sub_1000637B8(v27, &qword_1010CE1E8);
}

uint64_t sub_100BB6E90()
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v6 = (char *)v21 - v5;
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin();
  type metadata accessor for PlaylistCurators.Curator(0);
  __chkstk_darwin();
  uint64_t v9 = (void *)((char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void *)(*(void *)v0 + 16);
  if (v10)
  {
    sub_100BC10B4(*(void *)v0 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), (uint64_t)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PlaylistCurators.Curator);
    uint64_t v11 = v10 - 1;
    if (v10 == 1)
    {
      uint64_t v12 = *v9;
      swift_bridgeObjectRetain();
    }
    else
    {
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v13._countAndFlagsBits = 0;
      v13._object = (void *)0xE000000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v13);
      uint64_t v14 = *v9;
      uint64_t v15 = (void *)v9[1];
      swift_bridgeObjectRetain();
      v16._countAndFlagsBits = v14;
      v16._object = v15;
      String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v16);
      swift_bridgeObjectRelease();
      v17._countAndFlagsBits = 2106912;
      v17._object = (void *)0xE300000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v17);
      v21[1] = v11;
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v18._countAndFlagsBits = 0x7328726568744F20;
      v18._object = (void *)0xE900000000000029;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v18);
      String.LocalizationValue.init(stringInterpolation:)();
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v6, v1);
      if (qword_1010C8350 != -1) {
        swift_once();
      }
      id v19 = (id)qword_10112BE80;
      static Locale.current.getter();
      uint64_t v12 = String.init(localized:table:bundle:locale:comment:)();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v6, v1);
    }
    sub_100BC1A00((uint64_t)v9, type metadata accessor for PlaylistCurators.Curator);
    return v12;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t PlaylistCurators.View.fontTextStyle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100063814((uint64_t *)&unk_1010CD5E0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814(&qword_1010C8CB8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - v13;
  __chkstk_darwin(v15);
  Swift::String v17 = (char *)&v26 - v16;
  type metadata accessor for PlaylistCurators.View(0);
  sub_100B6E998((uint64_t)v17);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v14, enum case for UserInterfaceSizeClass.compact(_:), v1);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v14, 0, 1, v1);
  uint64_t v18 = (uint64_t)&v8[*(int *)(v6 + 56)];
  sub_10006CAB8((uint64_t)v17, (uint64_t)v8, &qword_1010C8CB8);
  sub_10006CAB8((uint64_t)v14, v18, &qword_1010C8CB8);
  id v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v19((uint64_t)v8, 1, v1) != 1)
  {
    sub_10006CAB8((uint64_t)v8, (uint64_t)v11, &qword_1010C8CB8);
    if (v19(v18, 1, v1) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v18, v1);
      sub_100BBBBAC(&qword_1010CD5F0, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v2 + 8);
      v21(v4, v1);
      sub_1000637B8((uint64_t)v14, &qword_1010C8CB8);
      sub_1000637B8((uint64_t)v17, &qword_1010C8CB8);
      v21(v11, v1);
      sub_1000637B8((uint64_t)v8, &qword_1010C8CB8);
      if (v20) {
        goto LABEL_8;
      }
LABEL_9:
      uint64_t v22 = (unsigned int *)&enum case for Font.TextStyle.title(_:);
      goto LABEL_10;
    }
    sub_1000637B8((uint64_t)v14, &qword_1010C8CB8);
    sub_1000637B8((uint64_t)v17, &qword_1010C8CB8);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v1);
LABEL_6:
    sub_1000637B8((uint64_t)v8, (uint64_t *)&unk_1010CD5E0);
    goto LABEL_9;
  }
  sub_1000637B8((uint64_t)v14, &qword_1010C8CB8);
  sub_1000637B8((uint64_t)v17, &qword_1010C8CB8);
  if (v19(v18, 1, v1) != 1) {
    goto LABEL_6;
  }
  sub_1000637B8((uint64_t)v8, &qword_1010C8CB8);
LABEL_8:
  uint64_t v22 = (unsigned int *)&enum case for Font.TextStyle.title3(_:);
LABEL_10:
  uint64_t v23 = *v22;
  uint64_t v24 = type metadata accessor for Font.TextStyle();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v27, v23, v24);
}

uint64_t sub_100BB76B8(uint64_t a1)
{
  id v2 = [self secondarySystemBackgroundColor];
  v4[3] = &type metadata for Color;
  v4[4] = &protocol witness table for Color;
  v4[0] = Color.init(_:)();
  return sub_10002D09C((uint64_t)v4, a1 + 40, (uint64_t *)&unk_1010CE2A0);
}

uint64_t sub_100BB7730()
{
  id v0 = objc_allocWithZone((Class)UIColor);
  v4[4] = sub_100BB77F8;
  void v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_10004DA48;
  v4[3] = &unk_101010658;
  uint64_t v1 = _Block_copy(v4);
  id v2 = [v0 initWithDynamicProvider:v1];
  _Block_release(v1);
  uint64_t result = swift_release();
  qword_1010CD470 = (uint64_t)v2;
  return result;
}

id sub_100BB77F8(void *a1)
{
  if ([a1 userInterfaceIdiom] == (id)6)
  {
    id v2 = self;
    uint64_t v3 = &selRef_whiteColor;
  }
  else
  {
    id v4 = [a1 userInterfaceStyle];
    id v2 = self;
    uint64_t v3 = &selRef_whiteColor;
    if (v4 == (id)2) {
      uint64_t v3 = &selRef_blackColor;
    }
  }
  id v5 = [v2 *v3];

  return v5;
}

uint64_t sub_100BB7898()
{
  if (qword_1010C8708 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1010CD470;
  uint64_t result = Color.init(uiColor:)();
  qword_1010CD478 = result;
  qword_1010CD480 = 0x3FF0000000000000;
  byte_1010CD488 = 1;
  return result;
}

uint64_t PlaylistCurators.ViewController.configuration.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PlaylistCurators.ViewController.configuration.setter(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + direct field offset for PlaylistCurators.ViewController.configuration);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_bridgeObjectRelease();
  uint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  id v5 = (uint64_t (*)(unsigned char *, void))dispatch thunk of UIHostingController.rootView.modify();
  *uint64_t v6 = v4;
  swift_bridgeObjectRelease();
  return v5(v8, 0);
}

void (*PlaylistCurators.ViewController.configuration.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = direct field offset for PlaylistCurators.ViewController.configuration;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  return sub_100BB7A58;
}

void sub_100BB7A58(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = *(void *)(v3[4] + v3[5]);
    swift_bridgeObjectRetain();
    id v5 = (void (*)(void *, void))dispatch thunk of UIHostingController.rootView.modify();
    *uint64_t v6 = v4;
    swift_bridgeObjectRelease();
    v5(v3, 0);
  }

  free(v3);
}

uint64_t PlaylistCurators.ViewController.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PlaylistCurators.View(0) - 8;
  __chkstk_darwin();
  id v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = (char *)objc_allocWithZone(v1);
  *(void *)&v8[direct field offset for PlaylistCurators.ViewController.configuration] = a1;
  uint64_t v9 = (void *)((char *)v5 + *(int *)(v3 + 28));
  *uint64_t v9 = swift_getKeyPath();
  sub_100063814(&qword_1010CD5C0);
  swift_storeEnumTagMultiPayload();
  void *v5 = a1;
  sub_100BBBBF4((uint64_t)v5, (uint64_t)v7, type metadata accessor for PlaylistCurators.View);
  swift_bridgeObjectRetain();
  return UIHostingController.init(rootView:)();
}

uint64_t PlaylistCurators.ViewController.init(configuration:)(uint64_t a1)
{
  type metadata accessor for PlaylistCurators.View(0);
  __chkstk_darwin();
  uint64_t v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v6 = (char *)&v10 - v5;
  *(void *)(v1 + direct field offset for PlaylistCurators.ViewController.configuration) = a1;
  uint64_t v8 = (void *)((char *)v4 + *(int *)(v7 + 28));
  *uint64_t v8 = swift_getKeyPath();
  sub_100063814(&qword_1010CD5C0);
  swift_storeEnumTagMultiPayload();
  *uint64_t v4 = a1;
  sub_100BBBBF4((uint64_t)v4, (uint64_t)v6, type metadata accessor for PlaylistCurators.View);
  swift_bridgeObjectRetain();
  return UIHostingController.init(rootView:)();
}

void sub_100BB7D08()
{
}

void PlaylistCurators.ViewController.init(rootView:)()
{
}

void PlaylistCurators.ViewController.__allocating_init(coder:rootView:)()
{
}

uint64_t sub_100BB7DC4()
{
  return swift_bridgeObjectRelease();
}

id PlaylistCurators.ViewController.__deallocating_deinit()
{
  return sub_100BB7DEC(type metadata accessor for PlaylistCurators.ViewController);
}

id sub_100BB7DEC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  [super dealloc];
}

uint64_t sub_100BB7E2C()
{
  return swift_bridgeObjectRelease();
}

id sub_100BB80C8()
{
  return sub_100BB7DEC((uint64_t (*)(void))type metadata accessor for ClearBackground.Controller);
}

id sub_100BB80E0()
{
  type metadata accessor for ClearBackground.Controller();
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return [v0 init];
}

uint64_t sub_100BB811C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100BC15AC();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100BB8180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100BC15AC();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100BB81E4()
{
}

uint64_t sub_100BB820C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100BB8288(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_100057778(0, (unint64_t *)&qword_1010C9658);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v29;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_100BB8ADC(v7, result + 1);
    uint64_t v30 = (void *)v22;
    unint64_t v23 = *(void *)(v22 + 16);
    if (*(void *)(v22 + 24) <= v23)
    {
      uint64_t v27 = v23 + 1;
      id v28 = v8;
      sub_1005EEEE4(v27, (uint64_t *)&unk_1010CE7F0);
      uint64_t v24 = v30;
    }
    else
    {
      uint64_t v24 = (void *)v22;
      id v25 = v8;
    }
    sub_1005EF310((uint64_t)v8, v24);
    *uint64_t v3 = (uint64_t)v24;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = NSObject._rawHashValue(seed:)(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_100057778(0, (unint64_t *)&qword_1010C9658);
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = static NSObject.== infix(_:_:)();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        char v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_100BB92EC((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v31;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_100BB8530(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for SyncedLyricsLineView();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v29;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_100BB8CE8(v7, result + 1);
    uint64_t v30 = (void *)v22;
    unint64_t v23 = *(void *)(v22 + 16);
    if (*(void *)(v22 + 24) <= v23)
    {
      uint64_t v27 = v23 + 1;
      id v28 = v8;
      sub_1005EEEE4(v27, &qword_1010CE110);
      uint64_t v24 = v30;
    }
    else
    {
      uint64_t v24 = (void *)v22;
      id v25 = v8;
    }
    sub_1005EF310((uint64_t)v8, v24);
    *uint64_t v3 = (uint64_t)v24;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = NSObject._rawHashValue(seed:)(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      type metadata accessor for SyncedLyricsLineView();
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = static NSObject.== infix(_:_:)();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        char v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_100BB9494((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v31;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_100BB87B8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Playlist.Collaborator();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100BBBBAC(&qword_1010C9C80, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
  swift_bridgeObjectRetain();
  char v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    id v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    char v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    unint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      char v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100BBBBAC(&qword_1010C9C88, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      Swift::Int v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      unint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_100BB962C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

Swift::Int sub_100BB8ADC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100063814((uint64_t *)&unk_1010CE7F0);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v15 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_100057778(0, (unint64_t *)&qword_1010C9658);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1005EEEE4(v9 + 1, (uint64_t *)&unk_1010CE7F0);
          uint64_t v2 = v15;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

Swift::Int sub_100BB8CE8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100063814(&qword_1010CE110);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v15 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      type metadata accessor for SyncedLyricsLineView();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1005EEEE4(v9 + 1, &qword_1010CE110);
          uint64_t v2 = v15;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_100BB8EE4(uint64_t a1)
{
  return sub_1005EEEE4(a1, (uint64_t *)&unk_1010CE7F0);
}

uint64_t sub_100BB8EF0()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for Playlist.Collaborator();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin();
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100063814(&qword_1010CE0B0);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100BBBBAC(&qword_1010C9C80, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

void sub_100BB92EC(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1005EEEE4(v8, (uint64_t *)&unk_1010CE7F0);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1005F29E0((uint64_t *)&unk_1010CE7F0);
      goto LABEL_14;
    }
    sub_100026398(v8, (uint64_t *)&unk_1010CE7F0);
  }
  uint64_t v9 = *v3;
  Swift::Int v10 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100057778(0, (unint64_t *)&qword_1010C9658);
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = static NSObject.== infix(_:_:)();

    if (v13)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = static NSObject.== infix(_:_:)();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

void sub_100BB9494(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1005EEEE4(v8, &qword_1010CE110);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1005F29E0(&qword_1010CE110);
      goto LABEL_14;
    }
    sub_100026398(v8, &qword_1010CE110);
  }
  uint64_t v9 = *v3;
  Swift::Int v10 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for SyncedLyricsLineView();
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = static NSObject.== infix(_:_:)();

    if (v13)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = static NSObject.== infix(_:_:)();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_100BB962C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = type metadata accessor for Playlist.Collaborator();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin();
  Swift::Int v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  unint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_100BB8EF0();
  }
  else
  {
    if (v12 > v11)
    {
      sub_100BB98CC();
      goto LABEL_12;
    }
    sub_100BB9B70();
  }
  uint64_t v13 = *v3;
  sub_100BBBBAC(&qword_1010C9C80, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
  uint64_t v14 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_100BBBBAC(&qword_1010C9C88, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_100BB98CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Playlist.Collaborator();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CE0B0);
  uint64_t v6 = *v0;
  uint64_t v7 = static _SetStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v8;
    return result;
  }
  char v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100BB9B70()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Playlist.Collaborator();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100063814(&qword_1010CE0B0);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100BBBBAC(&qword_1010C9C80, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100BB9F20(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = __CocoaSet.contains(_:)();

    if (v6)
    {
      uint64_t v7 = sub_100BBA3D0();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = NSObject._rawHashValue(seed:)(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  type metadata accessor for SyncedLyricsLineView();
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = static NSObject.== infix(_:_:)();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1005F29E0(&qword_1010CE110);
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_1001C17A4(v11);
  *uint64_t v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100BBA0F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Playlist.Collaborator();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  Swift::Int v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100BBBBAC(&qword_1010C9C80, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    char v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_100BBBBAC(&qword_1010C9C88, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *unint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100BB98CC();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_100BBA55C(v12);
    *unint64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_100BBA3D0()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = __CocoaSet.count.getter();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_100BB8CE8(v3, v2);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = NSObject._rawHashValue(seed:)(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    type metadata accessor for SyncedLyricsLineView();
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_1001C17A4(v8);
      if (static NSObject.== infix(_:_:)())
      {
        *uint64_t v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100BBA55C(int64_t a1)
{
  uint64_t v3 = type metadata accessor for Playlist.Collaborator();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  Swift::Int v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = _HashTable.previousHole(before:)();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      Swift::Int v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_100BBBBAC(&qword_1010C9C80, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
        uint64_t v21 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

uint64_t sub_100BBA878(uint64_t a1)
{
  sub_100063814(&qword_1010CE6C0);
  __chkstk_darwin();
  sub_10006CAB8(a1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010CE6C0);
  return EnvironmentValues.symbolRenderingMode.setter();
}

uint64_t sub_100BBA90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(char *))
{
  uint64_t v8 = a5(0);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_100BBA9DC(uint64_t result, uint64_t a2, unint64_t a3, void (*a4)(void), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = result;
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (v13)
  {
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16 <= a2)
      {
        if (v15 >= 1)
        {
          uint64_t v17 = sub_100063858(a5, a6);
          swift_bridgeObjectRetain();
          for (uint64_t i = 0; i != v15; ++i)
          {
            uint64_t v19 = sub_100063814(a6);
            int64_t v20 = (void (*)(unsigned char *, void))a7(v23, i, a3, v19, v17);
            uint64_t v22 = *v21;
            swift_retain();
            v20(v23, 0);
            *(void *)(v13 + 8 * i) = v22;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        a4(0);
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL _s11MusicCoreUI16PlaylistCuratorsO7CuratorV23__derived_struct_equalsySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Artwork();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814(&qword_1010C9A20);
  __chkstk_darwin();
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814((uint64_t *)&unk_1010CEE80);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v14 = (char *)&v25 - v13;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v25 - v15;
  if (*a1 == *a2 && a1[1] == a2[1]
    || (v17 = _stringCompareWithSmolCheck(_:_:expecting:)(), BOOL result = 0, (v17 & 1) != 0))
  {
    uint64_t v26 = v7;
    uint64_t v19 = type metadata accessor for PlaylistCurators.Curator(0);
    sub_10006CAB8((uint64_t)a1 + *(int *)(v19 + 20), (uint64_t)v16, (uint64_t *)&unk_1010CEE80);
    sub_10006CAB8((uint64_t)a2 + *(int *)(v19 + 20), (uint64_t)v14, (uint64_t *)&unk_1010CEE80);
    uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_10006CAB8((uint64_t)v16, (uint64_t)v10, (uint64_t *)&unk_1010CEE80);
    sub_10006CAB8((uint64_t)v14, v20, (uint64_t *)&unk_1010CEE80);
    uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v21((uint64_t)v10, 1, v4) == 1)
    {
      sub_1000637B8((uint64_t)v14, (uint64_t *)&unk_1010CEE80);
      sub_1000637B8((uint64_t)v16, (uint64_t *)&unk_1010CEE80);
      if (v21(v20, 1, v4) == 1)
      {
        sub_1000637B8((uint64_t)v10, (uint64_t *)&unk_1010CEE80);
        return 1;
      }
    }
    else
    {
      sub_10006CAB8((uint64_t)v10, (uint64_t)v12, (uint64_t *)&unk_1010CEE80);
      if (v21(v20, 1, v4) != 1)
      {
        uint64_t v22 = v26;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v26, v20, v4);
        sub_100BBBBAC(&qword_1010CE2B0, (void (*)(uint64_t))&type metadata accessor for Artwork);
        char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v24 = *(void (**)(char *, uint64_t))(v5 + 8);
        v24(v22, v4);
        sub_1000637B8((uint64_t)v14, (uint64_t *)&unk_1010CEE80);
        sub_1000637B8((uint64_t)v16, (uint64_t *)&unk_1010CEE80);
        v24(v12, v4);
        sub_1000637B8((uint64_t)v10, (uint64_t *)&unk_1010CEE80);
        return (v23 & 1) != 0;
      }
      sub_1000637B8((uint64_t)v14, (uint64_t *)&unk_1010CEE80);
      sub_1000637B8((uint64_t)v16, (uint64_t *)&unk_1010CEE80);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    }
    sub_1000637B8((uint64_t)v10, &qword_1010C9A20);
    return 0;
  }
  return result;
}

uint64_t sub_100BBAFB4(void (*a1)(char *, uint64_t), char *a2)
{
  uint64_t v3 = v2;
  uint64_t v62 = a2;
  uint64_t v63 = a1;
  uint64_t v4 = sub_100063814(&qword_1010CAA90);
  __chkstk_darwin(v4 - 8);
  uint64_t v65 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_1010CE0E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v57 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Playlist();
  uint64_t v66 = *(void *)(v8 - 8);
  uint64_t v67 = v8;
  __chkstk_darwin(v8);
  uint64_t v61 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = v9;
  __chkstk_darwin(v10);
  uint64_t v60 = (char *)&v56 - v11;
  uint64_t v59 = (void *)sub_100063814(&qword_1010CD4E0);
  uint64_t v58 = *(v59 - 1);
  __chkstk_darwin(v59);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_100063814(&qword_1010CD4C0);
  uint64_t v14 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100063814(&qword_1010CD4A8);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__pendingCollaborators;
  v70[0] = _swiftEmptyArrayStorage;
  sub_100063814(&qword_1010CD490);
  Published.init(initialValue:)();
  uint64_t v22 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 32);
  v22(v21, v20, v17);
  uint64_t v23 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__activeCollaborators;
  v70[0] = _swiftEmptyArrayStorage;
  Published.init(initialValue:)();
  v22(v23, v20, v17);
  uint64_t v24 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__transientCollaborators;
  v70[0] = &_swiftEmptySetSingleton;
  sub_100063814(&qword_1010CD498);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v24, v16, v56);
  uint64_t v25 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__isResetingURL;
  LOBYTE(v70[0]) = 0;
  Published.init(initialValue:)();
  uint64_t v26 = *(void (**)(uint64_t, char *, void *))(v58 + 32);
  uint64_t v27 = v59;
  v26(v25, v13, v59);
  uint64_t v28 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__shouldDismiss;
  LOBYTE(v70[0]) = 0;
  Published.init(initialValue:)();
  v26(v28, v13, v27);
  uint64_t v29 = v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model__hasNetworkConnectivity;
  static ApplicationCapabilities.shared.getter((uint64_t)v70);
  sub_10005E8DC((uint64_t)v70);
  char v69 = BYTE1(v70[0]);
  Published.init(initialValue:)();
  v26(v29, v13, v27);
  uint64_t v30 = v62;
  uint64_t v31 = v3
      + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model____lazy_storage___artworkViewModel;
  uint64_t v32 = sub_100063814((uint64_t *)&unk_1010C8960);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
  *(void *)(v3 + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponse) = 0;
  *(void *)(v3
            + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_autoupdatingResponseSubscription) = 0;
  uint64_t v58 = OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_networkConnectivityNotificationObserver;
  *(void *)(v3
            + OBJC_IVAR____TtCOE11MusicCoreUIO9MusicCore13Collaboration10Management5Model_networkConnectivityNotificationObserver) = 0;
  *(void *)(v3 + 16) = v63;
  uint64_t v34 = v66;
  uint64_t v33 = v67;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 16);
  int64_t v36 = v60;
  v35(v60, (uint64_t)v30, v67);
  swift_beginAccess();
  uint64_t v59 = v35;
  v35(v61, (uint64_t)v36, v33);
  swift_retain();
  uint64_t v37 = v33;
  Published.init(initialValue:)();
  uint64_t v38 = v36;
  uint64_t v63 = *(void (**)(char *, uint64_t))(v34 + 8);
  v63(v36, v37);
  swift_endAccess();
  uint64_t v39 = (uint64_t)v57;
  int64_t v40 = v30;
  Playlist.collaboration.getter();
  uint64_t v41 = type metadata accessor for Playlist.Collaboration();
  uint64_t v42 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v39, 1, v41) == 1)
  {
    sub_1000637B8(v39, &qword_1010CE0E0);
    char v43 = 0;
  }
  else
  {
    char v43 = Playlist.Collaboration.isOpenInvitation.getter();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v39, v41);
  }
  swift_beginAccess();
  char v68 = v43 & 1;
  Published.init(initialValue:)();
  swift_endAccess();
  id v44 = (id)*ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.unsafeMutableAddressor();
  uint64_t v45 = *ApplicationCapabilities.Controller.shared.unsafeMutableAddressor();
  uint64_t v46 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for NotificationObserver();
  swift_allocObject();
  swift_retain();
  uint64_t v47 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v44, v45, 1, 1, (uint64_t)sub_100BC4704, v46);
  *(void *)(v3 + v58) = v47;
  swift_release();
  uint64_t v48 = type metadata accessor for TaskPriority();
  uint64_t v49 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v65, 1, 1, v48);
  uint64_t v50 = v67;
  ((void (*)(char *, char *, uint64_t))v59)(v38, v40, v67);
  uint64_t v51 = v66;
  unint64_t v52 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  unint64_t v53 = (v64 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = 0;
  *(void *)(v54 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v54 + v52, v38, v50);
  *(void *)(v54 + v53) = v3;
  swift_retain();
  sub_100066A94(v49, (uint64_t)&unk_1010CE750, v54);
  swift_release();
  v63(v40, v50);
  return v3;
}

uint64_t type metadata accessor for Collaboration.Management.View(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CDA20);
}

uint64_t sub_100BBB8BC()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_100BBB8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100BBA90C(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(char *))&EnvironmentValues.dynamicTypeSize.setter);
}

uint64_t sub_100BBB920()
{
  return EnvironmentValues.openURL.getter();
}

uint64_t sub_100BBB944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100BBA90C(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for OpenURLAction, (uint64_t (*)(char *))&EnvironmentValues.openURL.setter);
}

uint64_t type metadata accessor for Collaboration.Management.Model(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CD630);
}

uint64_t sub_100BBB9A4@<X0>(uint64_t a1@<X8>)
{
  return sub_100BA38A4(*(void *)(v1 + 16), a1);
}

unint64_t sub_100BBB9AC()
{
  unint64_t result = qword_1010CD578;
  if (!qword_1010CD578)
  {
    sub_10006389C(&qword_1010CD570);
    sub_100063858(&qword_1010CD580, &qword_1010CD588);
    sub_100063858(&qword_1010CD590, &qword_1010CD598);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CD578);
  }
  return result;
}

uint64_t sub_100BBBA70@<X0>(unsigned char *a1@<X8>)
{
  return sub_1009E6940(a1);
}

uint64_t sub_100BBBA98()
{
  return sub_10047752C();
}

void sub_100BBBAC4(uint64_t a1, unsigned char *a2)
{
  type metadata accessor for Collaboration.Management.View(0);

  sub_100BAE454(a1, a2);
}

uint64_t type metadata accessor for Collaboration.Management.ViewController(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CDA90);
}

uint64_t type metadata accessor for PlaylistCurators.Curator(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CDB98);
}

uint64_t type metadata accessor for PlaylistCurators.View(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CDC38);
}

uint64_t sub_100BBBBAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BBBBF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PlaylistCurators.ViewController(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CDC78);
}

uint64_t sub_100BBBC7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BBBC98()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BBBCB4(uint64_t a1)
{
  uint64_t result = sub_100BBBBAC(&qword_1010CD600, (void (*)(uint64_t))type metadata accessor for PlaylistCurators.View);
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for Collaboration.Management()
{
  return &type metadata for Collaboration.Management;
}

uint64_t sub_100BBBD1C()
{
  return type metadata accessor for Collaboration.Management.Model(0);
}

void sub_100BBBD24()
{
  sub_100BC0364(319, &qword_1010CD640, &qword_1010CD490, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
  if (v0 <= 0x3F)
  {
    sub_100BC0364(319, &qword_1010CD648, &qword_1010CD498, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v1 <= 0x3F)
    {
      sub_100BC0D20(319, &qword_1010CD650, (uint64_t (*)(uint64_t))&type metadata accessor for Playlist, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
      if (v2 <= 0x3F)
      {
        sub_10000E274();
        if (v3 <= 0x3F)
        {
          sub_100BC0364(319, qword_1010CD660, (uint64_t *)&unk_1010C8960, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t *_s10ManagementO4ViewVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    unint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *unint64_t v4 = *a2;
    v4[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (uint64_t *)((char *)v4 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    sub_100063814(&qword_1010C8950);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (uint64_t *)((char *)v4 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_100063814((uint64_t *)&unk_1010CD530);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    uint64_t v18 = (uint64_t *)((char *)v4 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    sub_100063814((uint64_t *)&unk_1010C8970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      void *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    uint64_t v23 = (uint64_t *)((char *)v4 + v21);
    uint64_t v24 = (char *)a2 + v21;
    uint64_t v25 = *(void **)v24;
    uint64_t v26 = *((void *)v24 + 1);
    *uint64_t v23 = *(void *)v24;
    v23[1] = v26;
    uint64_t v27 = (char *)v4 + v22;
    uint64_t v28 = (char *)a2 + v22;
    *uint64_t v27 = *v28;
    *((void *)v27 + 1) = *((void *)v28 + 1);
    uint64_t v29 = a3[10];
    uint64_t v30 = a3[11];
    uint64_t v31 = (char *)v4 + v29;
    uint64_t v32 = (char *)a2 + v29;
    char *v31 = *v32;
    *((void *)v31 + 1) = *((void *)v32 + 1);
    uint64_t v33 = (char *)v4 + v30;
    uint64_t v34 = (char *)a2 + v30;
    *uint64_t v33 = *v34;
    *((void *)v33 + 1) = *((void *)v34 + 1);
    uint64_t v35 = a3[12];
    int64_t v36 = (char *)v4 + v35;
    uint64_t v37 = (char *)a2 + v35;
    char *v36 = *v37;
    *((void *)v36 + 1) = *((void *)v37 + 1);
    id v38 = v25;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t _s10ManagementO4ViewVwxx(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[7];
  sub_100063814((uint64_t *)&unk_1010C8970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *_s10ManagementO4ViewVwcp(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  swift_retain();
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    void *v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  sub_100063814((uint64_t *)&unk_1010C8970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *uint64_t v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (char *)a2 + v19;
  uint64_t v23 = *(void **)v22;
  uint64_t v24 = *((void *)v22 + 1);
  *uint64_t v21 = *(void *)v22;
  v21[1] = v24;
  uint64_t v25 = (char *)a1 + v20;
  uint64_t v26 = (char *)a2 + v20;
  *uint64_t v25 = *v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  uint64_t v27 = a3[10];
  uint64_t v28 = a3[11];
  uint64_t v29 = (char *)a1 + v27;
  uint64_t v30 = (char *)a2 + v27;
  *uint64_t v29 = *v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  uint64_t v31 = (char *)a1 + v28;
  uint64_t v32 = (char *)a2 + v28;
  char *v31 = *v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  uint64_t v33 = a3[12];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  char *v34 = *v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  id v36 = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *_s10ManagementO4ViewVwca(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1000637B8((uint64_t)a1 + v6, &qword_1010C8950);
    sub_100063814(&qword_1010C8950);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_1000637B8((uint64_t)a1 + v10, (uint64_t *)&unk_1010CD530);
    sub_100063814((uint64_t *)&unk_1010CD530);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      void *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    sub_1000637B8((uint64_t)a1 + v14, (uint64_t *)&unk_1010C8970);
    sub_100063814((uint64_t *)&unk_1010C8970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void **)((char *)a1 + v18);
  uint64_t v22 = *(void **)((char *)a2 + v18);
  *uint64_t v19 = v22;
  id v23 = v22;

  v19[1] = *((void *)v20 + 1);
  swift_retain();
  swift_release();
  uint64_t v24 = a3[9];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  *uint64_t v25 = *v26;
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_retain();
  swift_release();
  uint64_t v27 = a3[10];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  *uint64_t v28 = *v29;
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_retain();
  swift_release();
  uint64_t v30 = a3[11];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  char *v31 = *v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  swift_retain();
  swift_release();
  uint64_t v33 = a3[12];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  char *v34 = *v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *_s10ManagementO4ViewVwtk(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_100063814((uint64_t *)&unk_1010C8970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for OpenURLAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  uint64_t v21 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  uint64_t v22 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)((char *)a2 + v22);
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  return a1;
}

void *_s10ManagementO4ViewVwta(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1000637B8((uint64_t)a1 + v7, &qword_1010C8950);
    uint64_t v10 = sub_100063814(&qword_1010C8950);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1000637B8((uint64_t)a1 + v12, (uint64_t *)&unk_1010CD530);
    uint64_t v15 = sub_100063814((uint64_t *)&unk_1010CD530);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    sub_1000637B8((uint64_t)a1 + v17, (uint64_t *)&unk_1010C8970);
    uint64_t v20 = sub_100063814((uint64_t *)&unk_1010C8970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for OpenURLAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  uint64_t v22 = a3[8];
  id v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v25 = *(void **)((char *)a1 + v22);
  *id v23 = *v24;

  v23[1] = v24[1];
  swift_release();
  uint64_t v26 = a3[9];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  *uint64_t v27 = *v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_release();
  uint64_t v29 = a3[10];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  char *v30 = *v31;
  *((void *)v30 + 1) = *((void *)v31 + 1);
  swift_release();
  uint64_t v32 = a3[11];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  *uint64_t v33 = *v34;
  *((void *)v33 + 1) = *((void *)v34 + 1);
  swift_release();
  uint64_t v35 = a3[12];
  id v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  char *v36 = *v37;
  *((void *)v36 + 1) = *((void *)v37 + 1);
  swift_release();
  return a1;
}

uint64_t _s10ManagementO4ViewVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BBCF8C);
}

uint64_t sub_100BBCF8C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_100063814(&qword_1010CD9B0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_100063814(&qword_1010CD9B8);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_9;
  }
  uint64_t v14 = sub_100063814(&qword_1010CD9C0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[7];

  return v15(v17, a2, v16);
}

uint64_t _s10ManagementO4ViewVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BBD124);
}

uint64_t sub_100BBD124(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_100063814(&qword_1010CD9B0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_100063814(&qword_1010CD9B8);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = sub_100063814(&qword_1010CD9C0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[7];

  return v15(v17, a2, a2, v16);
}

void sub_100BBD2A8()
{
  sub_100BC0D20(319, (unint64_t *)&qword_1010CDA30, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    sub_100BC0D20(319, &qword_1010CDA38, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v1 <= 0x3F)
    {
      sub_100BC0D20(319, (unint64_t *)&unk_1010CDA40, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100BBD458()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100BBD498()
{
  return type metadata accessor for Collaboration.Management.ViewController(0);
}

ValueMetadata *type metadata accessor for PlaylistCurators()
{
  return &type metadata for PlaylistCurators;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistCurators.Curator(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Artwork();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = sub_100063814((uint64_t *)&unk_1010CEE80);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for PlaylistCurators.Curator(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Artwork();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for PlaylistCurators.Curator(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for Artwork();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = sub_100063814((uint64_t *)&unk_1010CEE80);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for PlaylistCurators.Curator(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Artwork();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100063814((uint64_t *)&unk_1010CEE80);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for PlaylistCurators.Curator(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Artwork();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_100063814((uint64_t *)&unk_1010CEE80);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for PlaylistCurators.Curator(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Artwork();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100063814((uint64_t *)&unk_1010CEE80);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCurators.Curator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BBDC60);
}

uint64_t sub_100BBDC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814((uint64_t *)&unk_1010CEE80);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PlaylistCurators.Curator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BBDD28);
}

uint64_t sub_100BBDD28(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814((uint64_t *)&unk_1010CEE80);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100BBDDD4()
{
  sub_100BC0D20(319, (unint64_t *)&unk_1010CDBA8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaylistCurators.View(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_bridgeObjectRetain();
    sub_100063814(&qword_1010CD5C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_100063814(&qword_1010C8CB8);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PlaylistCurators.View(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_100063814(&qword_1010CD5C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v5 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
    if (!result)
    {
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
      return v7(v4, v5);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for PlaylistCurators.View(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  swift_bridgeObjectRetain();
  sub_100063814(&qword_1010CD5C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    {
      uint64_t v9 = sub_100063814(&qword_1010C8CB8);
      memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v5, v6, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    }
  }
  else
  {
    void *v5 = *v6;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PlaylistCurators.View(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1000637B8((uint64_t)a1 + v6, &qword_1010CD5C0);
    sub_100063814(&qword_1010CD5C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_100063814(&qword_1010C8CB8);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for PlaylistCurators.View(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_100063814(&qword_1010CD5C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      uint64_t v10 = sub_100063814(&qword_1010C8CB8);
      memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v5, v6, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for PlaylistCurators.View(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1000637B8((uint64_t)a1 + v6, &qword_1010CD5C0);
    uint64_t v9 = sub_100063814(&qword_1010CD5C0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        uint64_t v12 = sub_100063814(&qword_1010C8CB8);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v7, v8, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistCurators.View(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BBE7E8);
}

uint64_t sub_100BBE7E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010CDBD8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PlaylistCurators.View(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BBE8B0);
}

void *sub_100BBE8B0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010CDBD8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100BBE95C()
{
  sub_100BC0364(319, (unint64_t *)&unk_1010CDC48, &qword_1010C8CB8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for PlaylistCurators.View.Configuration()
{
  return &type metadata for PlaylistCurators.View.Configuration;
}

uint64_t sub_100BBEA2C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100BBEA7C()
{
  return type metadata accessor for PlaylistCurators.ViewController(0);
}

uint64_t type metadata accessor for ClearBackground.Controller()
{
  return self;
}

uint64_t sub_100BBEAA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BBEB3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_100BBEBBC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Playlist.Collaborator();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v28 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v28(a1, a2, v7);
    uint64_t v9 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *uint64_t v10 = *v11;
    *((void *)v10 + 1) = *((void *)v11 + 1);
    uint64_t v12 = a3[7];
    int v13 = (char *)a1 + v12;
    int v14 = (char *)a2 + v12;
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    swift_retain();
    swift_retain();
    if (v15(v14, 1, v7))
    {
      uint64_t v16 = sub_100063814(&qword_1010CAC40);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v28((uint64_t *)v13, (uint64_t *)v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v18 = sub_100063814(&qword_1010CDCF8);
    *(void *)&v13[*(int *)(v18 + 28)] = *(void *)&v14[*(int *)(v18 + 28)];
    uint64_t v19 = a3[8];
    uint64_t v20 = (uint64_t *)((char *)a1 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    swift_retain();
    sub_100063814((uint64_t *)&unk_1010CD530);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[9];
    uint64_t v24 = (uint64_t *)((char *)a1 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    sub_100063814((uint64_t *)&unk_1010C8970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100BBEEE0(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Playlist.Collaborator();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  swift_release();
  swift_release();
  uint64_t v7 = a1 + a2[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }
  sub_100063814(&qword_1010CDCF8);
  swift_release();
  uint64_t v8 = a1 + a2[8];
  sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  uint64_t v10 = a1 + a2[9];
  sub_100063814((uint64_t *)&unk_1010C8970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for OpenURLAction();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
    return v12(v10, v11);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100BBF0F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Collaborator();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v26(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  uint64_t v27 = a3;
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)(a1 + v11);
  int v13 = (char *)(a2 + v11);
  int v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  swift_retain();
  swift_retain();
  if (v14(v13, 1, v6))
  {
    uint64_t v15 = sub_100063814(&qword_1010CAC40);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v26((uint64_t)v12, (uint64_t)v13, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
  }
  uint64_t v16 = sub_100063814(&qword_1010CDCF8);
  *(void *)&v12[*(int *)(v16 + 28)] = *(void *)&v13[*(int *)(v16 + 28)];
  uint64_t v17 = v27[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  swift_retain();
  sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    void *v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = v27[9];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  sub_100063814((uint64_t *)&unk_1010C8970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  else
  {
    *uint64_t v22 = *v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100BBF3D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Collaborator();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(unsigned char *)uint64_t v10 = *(unsigned char *)v11;
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  swift_retain();
  swift_release();
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v12 = a3[7];
  int v13 = (char *)(a1 + v12);
  int v14 = (char *)(a2 + v12);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  LODWORD(a2) = v15(a1 + v12, 1, v6);
  int v16 = v15((uint64_t)v14, 1, v6);
  if (a2)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_6:
    uint64_t v17 = sub_100063814(&qword_1010CAC40);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v13, (uint64_t)v14, v6);
LABEL_7:
  uint64_t v18 = sub_100063814(&qword_1010CDCF8);
  *(void *)&v13[*(int *)(v18 + 28)] = *(void *)&v14[*(int *)(v18 + 28)];
  swift_retain();
  swift_release();
  if (a1 != v28)
  {
    uint64_t v19 = v29[8];
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (void *)(v28 + v19);
    sub_1000637B8(a1 + v19, (uint64_t *)&unk_1010CD530);
    sub_100063814((uint64_t *)&unk_1010CD530);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = v29[9];
    uint64_t v24 = (void *)(a1 + v23);
    uint64_t v25 = (void *)(v28 + v23);
    sub_1000637B8(a1 + v23, (uint64_t *)&unk_1010C8970);
    sub_100063814((uint64_t *)&unk_1010C8970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100BBF754(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Collaborator();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v10, 1, v6))
  {
    uint64_t v13 = sub_100063814(&qword_1010CAC40);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v11, (uint64_t)v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = sub_100063814(&qword_1010CDCF8);
  *(void *)&v11[*(int *)(v14 + 28)] = *(void *)&v12[*(int *)(v14 + 28)];
  uint64_t v15 = a3[8];
  int v16 = (void *)(a1 + v15);
  uint64_t v17 = (const void *)(a2 + v15);
  uint64_t v18 = sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_100063814((uint64_t *)&unk_1010C8970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = type metadata accessor for OpenURLAction();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100BBFA10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Collaborator();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(unsigned char *)uint64_t v10 = *(unsigned char *)v11;
  *(void *)(v10 + 8) = *(void *)(v11 + 8);
  swift_release();
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v16 = v15(a1 + v12, 1, v6);
  int v17 = v15((uint64_t)v14, 1, v6);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_6:
    uint64_t v18 = sub_100063814(&qword_1010CAC40);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v13, (uint64_t)v14, v6);
LABEL_7:
  uint64_t v19 = sub_100063814(&qword_1010CDCF8);
  *(void *)&v13[*(int *)(v19 + 28)] = *(void *)&v14[*(int *)(v19 + 28)];
  swift_release();
  if (a1 != v31)
  {
    uint64_t v20 = v32[8];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (const void *)(v31 + v20);
    sub_1000637B8(a1 + v20, (uint64_t *)&unk_1010CD530);
    uint64_t v23 = sub_100063814((uint64_t *)&unk_1010CD530);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    uint64_t v25 = v32[9];
    uint64_t v26 = (void *)(a1 + v25);
    uint64_t v27 = (const void *)(v31 + v25);
    sub_1000637B8(a1 + v25, (uint64_t *)&unk_1010C8970);
    uint64_t v28 = sub_100063814((uint64_t *)&unk_1010C8970);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = type metadata accessor for OpenURLAction();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32))(v26, v27, v29);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100BBFD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BBFDA4);
}

uint64_t sub_100BBFDA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Playlist.Collaborator();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_12:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5]);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = sub_100063814(&qword_1010CDCF8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[7];
LABEL_11:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_12;
  }
  uint64_t v16 = sub_100063814(&qword_1010CD9B8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[8];
    goto LABEL_11;
  }
  uint64_t v17 = sub_100063814(&qword_1010CD9C0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[9];

  return v18(v20, a2, v19);
}

uint64_t sub_100BBFF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BBFF90);
}

uint64_t sub_100BBFF90(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = type metadata accessor for Playlist.Collaborator();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5]) = (a2 - 1);
    return result;
  }
  uint64_t v13 = sub_100063814(&qword_1010CDCF8);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[7];
LABEL_9:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_100063814(&qword_1010CD9B8);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_9;
  }
  uint64_t v17 = sub_100063814(&qword_1010CD9C0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a4[9];

  return v18(v20, a2, a2, v19);
}

uint64_t _s10ManagementO4ViewV19CollaboratorRowViewVMa(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CDD58);
}

void sub_100BC0188()
{
  type metadata accessor for Playlist.Collaborator();
  if (v0 <= 0x3F)
  {
    sub_100BC0364(319, (unint64_t *)&unk_1010CDD68, &qword_1010CAC40, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
    if (v1 <= 0x3F)
    {
      sub_100BC0D20(319, &qword_1010CDA38, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
      if (v2 <= 0x3F)
      {
        sub_100BC0D20(319, (unint64_t *)&unk_1010CDA40, (uint64_t (*)(uint64_t))&type metadata accessor for OpenURLAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100BC0364(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = sub_10006389C(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

ValueMetadata *type metadata accessor for ClearBackground()
{
  return &type metadata for ClearBackground;
}

ValueMetadata *_s10ManagementO10QRCodeViewVMa()
{
  return &_s10ManagementO10QRCodeViewVN;
}

ValueMetadata *_s10ManagementO22ActivityViewControllerVMa()
{
  return &_s10ManagementO22ActivityViewControllerVN;
}

ValueMetadata *_s10ManagementO4ViewV5ShareOMa()
{
  return &_s10ManagementO4ViewV5ShareON;
}

uint64_t *sub_100BC0408(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    v4[1] = a2[1];
    v4[2] = v7;
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (uint64_t *)((char *)v4 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    sub_100063814(&qword_1010C89E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(void *)v15;
    char v17 = v15[8];
    sub_100237EDC(*(void *)v15, v17);
    *(void *)uint64_t v14 = v16;
    v14[8] = v17;
  }
  return v4;
}

uint64_t sub_100BC0560(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_100063814(&qword_1010C89E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return sub_100237F44(v7, v8);
}

uint64_t sub_100BC0620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  char v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  swift_retain();
  sub_100063814(&qword_1010C89E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *char v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_100237EDC(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = v15;
  return a1;
}

uint64_t sub_100BC0728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    char v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_1000637B8(a1 + v7, &qword_1010C89E0);
    sub_100063814(&qword_1010C89E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *char v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_100237EDC(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = v15;
  sub_100237F44(v16, v17);
  return a1;
}

uint64_t sub_100BC0860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  char v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100063814(&qword_1010C89E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  return a1;
}

uint64_t sub_100BC0968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    char v8 = (const void *)(a2 + v6);
    sub_1000637B8(a1 + v6, &qword_1010C89E0);
    uint64_t v9 = sub_100063814(&qword_1010C89E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = *v13;
  LOBYTE(v13) = *((unsigned char *)v13 + 8);
  uint64_t v15 = *(void *)v12;
  char v16 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = (_BYTE)v13;
  sub_100237F44(v15, v16);
  return a1;
}

uint64_t sub_100BC0A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BC0AB0);
}

uint64_t sub_100BC0AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010CDDB0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100BC0B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BC0B78);
}

uint64_t sub_100BC0B78(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010CDDB0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10ManagementO4ViewV5ShareO6ButtonVMa(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CDE10);
}

void sub_100BC0C44()
{
  sub_100BC0D20(319, (unint64_t *)&unk_1010CDE20, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100BC0D20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100BC0D84()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100BC0DA4()
{
  unint64_t result = qword_1010CDE58;
  if (!qword_1010CDE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CDE58);
  }
  return result;
}

unint64_t sub_100BC0DFC()
{
  unint64_t result = qword_1010CDE60;
  if (!qword_1010CDE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CDE60);
  }
  return result;
}

unint64_t sub_100BC0E54()
{
  unint64_t result = qword_1010CDE68;
  if (!qword_1010CDE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CDE68);
  }
  return result;
}

unint64_t sub_100BC0EAC()
{
  unint64_t result = qword_1010CDE70;
  if (!qword_1010CDE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CDE70);
  }
  return result;
}

uint64_t sub_100BC0F00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BC0F1C@<X0>(uint64_t a1@<X8>)
{
  return sub_100BB1828(*(void *)(v1 + 16), a1);
}

unint64_t sub_100BC0F24()
{
  unint64_t result = qword_1010CDEB0;
  if (!qword_1010CDEB0)
  {
    sub_10006389C(&qword_1010CDE80);
    sub_100063858(&qword_1010CDEB8, &qword_1010CDE78);
    sub_100063858(&qword_1010CDEC0, &qword_1010CDEC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CDEB0);
  }
  return result;
}

unint64_t sub_100BC0FE8()
{
  unint64_t result = qword_1010CDED8;
  if (!qword_1010CDED8)
  {
    sub_10006389C((uint64_t *)&unk_1010CDEE0);
    sub_100063858(&qword_1010CF2B0, (uint64_t *)&unk_1010CD5A0);
    sub_100063858(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CDED8);
  }
  return result;
}

uint64_t sub_100BC10AC@<X0>(uint64_t a1@<X8>)
{
  return sub_100BB21E4(*(void *)(v1 + 16), a1);
}

uint64_t sub_100BC10B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100BC1120()
{
  return sub_100BC42B8(_s10ManagementO4ViewV19CollaboratorRowViewVMa, (uint64_t (*)(uint64_t))sub_100BB2760);
}

uint64_t sub_100BC1158()
{
  uint64_t v1 = (int *)_s10ManagementO4ViewV19CollaboratorRowViewVMa(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  uint64_t v3 = type metadata accessor for Playlist.Collaborator();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  swift_release();
  swift_release();
  uint64_t v6 = v2 + v1[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v3)) {
    v5(v6, v3);
  }
  sub_100063814(&qword_1010CDCF8);
  swift_release();
  uint64_t v7 = v2 + v1[8];
  sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v2 + v1[9];
  sub_100063814((uint64_t *)&unk_1010C8970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100BC13BC()
{
  return sub_100BC42B8(_s10ManagementO4ViewV19CollaboratorRowViewVMa, sub_100BB1CF4);
}

uint64_t sub_100BC13F0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255) {
    return sub_100632DD0(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_100BC1408(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255) {
    return sub_100632E0C(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_100BC1420@<X0>(void *a1@<X8>)
{
  return sub_100BB820C(a1);
}

uint64_t sub_100BC1448()
{
  return sub_100476BBC();
}

uint64_t sub_100BC1474()
{
  return sub_100BC1498("[Management] Decline button tapped", 1);
}

uint64_t sub_100BC1488()
{
  return sub_100BC1498("[Management] Approve button tapped", 0);
}

uint64_t sub_100BC1498(const char *a1, char a2)
{
  uint64_t v5 = *(void *)(_s10ManagementO4ViewV19CollaboratorRowViewVMa(0) - 8);
  return sub_100BB16A4(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1, a2);
}

unint64_t sub_100BC150C()
{
  unint64_t result = qword_1010CDF80;
  if (!qword_1010CDF80)
  {
    sub_10006389C(&qword_1010CDF20);
    sub_100063858(&qword_1010CDF88, &qword_1010CDF18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CDF80);
  }
  return result;
}

unint64_t sub_100BC15AC()
{
  unint64_t result = qword_1010CDFA8;
  if (!qword_1010CDFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CDFA8);
  }
  return result;
}

void *sub_100BC1600(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  sub_10007AA40(a1[1], a1[2]);
  id v3 = v2;
  return a1;
}

unint64_t sub_100BC1634()
{
  unint64_t result = qword_1010CDFB0;
  if (!qword_1010CDFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CDFB0);
  }
  return result;
}

unint64_t sub_100BC1688()
{
  unint64_t result = qword_1010CDFB8;
  if (!qword_1010CDFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CDFB8);
  }
  return result;
}

uint64_t sub_100BC16DC()
{
  uint64_t v1 = _s10ManagementO4ViewV5ShareO6ButtonVMa(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 24);
  sub_100063814(&qword_1010C89E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  sub_100237F44(*(void *)(v2 + *(int *)(v1 + 28)), *(unsigned char *)(v2 + *(int *)(v1 + 28) + 8));

  return swift_deallocObject();
}

uint64_t sub_100BC181C()
{
  uint64_t v1 = *(void *)(_s10ManagementO4ViewV5ShareO6ButtonVMa(0) - 8);
  return (*(uint64_t (**)(void))(v0
                              + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                              + 8))();
}

uint64_t sub_100BC1880@<X0>(uint64_t a1@<X8>)
{
  return sub_100BB3140(*(unsigned __int8 **)(v1 + 16), a1);
}

uint64_t sub_100BC1888(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BC1904()
{
  return sub_100BC1888((unint64_t *)&unk_1010CDFF0, (uint64_t *)&unk_1010CF180, (void (*)(void))sub_100BC1934);
}

unint64_t sub_100BC1934()
{
  unint64_t result = qword_1010CE000;
  if (!qword_1010CE000)
  {
    sub_10006389C(&qword_1010CE008);
    sub_100063858(&qword_1010CE010, &qword_1010CE018);
    sub_100063858(&qword_1010CE020, &qword_1010CE028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE000);
  }
  return result;
}

uint64_t sub_100BC1A00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100BC1A68()
{
  uint64_t v1 = type metadata accessor for Playlist.Collaborator();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100BC1B3C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Playlist.Collaborator() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  char v8 = *(unsigned char *)(v1 + 40);
  uint64_t v9 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100081D08;
  return sub_100BA26F8(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_100BC1C44(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Playlist.Collaborator() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100081D08;
  return sub_100BA2DE8(a1, v5, v6, v7, v8);
}

uint64_t sub_100BC1D44()
{
  uint64_t v1 = type metadata accessor for Playlist.Collaborator();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100BC1E18(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Playlist.Collaborator() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100081D08;
  return sub_100BA1EC8(a1, v5, v6, v7, v8);
}

uint64_t sub_100BC1F14()
{
  return sub_10000D370();
}

uint64_t sub_100BC1F1C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100081D08;
  return sub_100BA1034(a1, v4, v5, v6);
}

uint64_t sub_100BC1FD0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100BC2008@<X0>(void *a1@<X8>)
{
  return sub_100BB820C(a1);
}

uint64_t sub_100BC2030()
{
  return sub_100476BBC();
}

uint64_t sub_100BC2058@<X0>(void *a1@<X8>)
{
  return sub_100BB820C(a1);
}

uint64_t sub_100BC2080()
{
  return sub_100476BBC();
}

uint64_t sub_100BC20A8@<X0>(unsigned char *a1@<X8>)
{
  return sub_1009E6940(a1);
}

uint64_t sub_100BC20D0()
{
  return sub_10047752C();
}

uint64_t sub_100BC20F8@<X0>(unsigned char *a1@<X8>)
{
  return sub_1009E6940(a1);
}

uint64_t sub_100BC2120()
{
  return sub_10047752C();
}

uint64_t sub_100BC2148@<X0>(unsigned char *a1@<X8>)
{
  return sub_1009E6940(a1);
}

uint64_t sub_100BC2170()
{
  return sub_10047752C();
}

double sub_100BC2198(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814((uint64_t *)&unk_1010CD5E0) - 8;
  __chkstk_darwin();
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010C8CB8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = __chkstk_darwin();
  uint64_t v13 = (char *)&v19 - v12;
  (*(void (**)(char *, void, uint64_t, __n128))(v3 + 104))((char *)&v19 - v12, enum case for UserInterfaceSizeClass.compact(_:), v2, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v13, 0, 1, v2);
  uint64_t v14 = (uint64_t)&v8[*(int *)(v6 + 56)];
  sub_10006CAB8(a1, (uint64_t)v8, &qword_1010C8CB8);
  sub_10006CAB8((uint64_t)v13, v14, &qword_1010C8CB8);
  uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v15((uint64_t)v8, 1, v2) == 1)
  {
    sub_1000637B8((uint64_t)v13, &qword_1010C8CB8);
    if (v15(v14, 1, v2) == 1)
    {
      sub_1000637B8((uint64_t)v8, &qword_1010C8CB8);
      return -9.0;
    }
  }
  else
  {
    sub_10006CAB8((uint64_t)v8, (uint64_t)v10, &qword_1010C8CB8);
    if (v15(v14, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v14, v2);
      sub_100BBBBAC(&qword_1010CD5F0, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
      v18(v5, v2);
      sub_1000637B8((uint64_t)v13, &qword_1010C8CB8);
      v18(v10, v2);
      sub_1000637B8((uint64_t)v8, &qword_1010C8CB8);
      double result = -9.0;
      if (v17) {
        return result;
      }
      return -12.0;
    }
    sub_1000637B8((uint64_t)v13, &qword_1010C8CB8);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  sub_1000637B8((uint64_t)v8, (uint64_t *)&unk_1010CD5E0);
  return -12.0;
}

uint64_t sub_100BC2534()
{
  uint64_t v1 = (int *)(type metadata accessor for PlaylistCurators.View(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + v1[7];
  sub_100063814(&qword_1010CD5C0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_100BC26AC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for PlaylistCurators.View(0);
  uint64_t v5 = *(void *)(v2 + 16);

  sub_100BB6724(a1, v5, a2);
}

uint64_t sub_100BC2738(char *a1)
{
  unint64_t v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = sub_100063814((uint64_t *)&unk_1010CE290);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

unint64_t sub_100BC2798()
{
  unint64_t result = qword_1010CE1C8;
  if (!qword_1010CE1C8)
  {
    sub_10006389C(&qword_1010CE1B8);
    sub_100BC2870(&qword_1010CE1D0, &qword_1010CE1D8, (void (*)(void))sub_100BC28F8, (void (*)(void))sub_100B3E6F4);
    sub_100063858(&qword_1010CE280, &qword_1010CE288);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE1C8);
  }
  return result;
}

uint64_t sub_100BC2870(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BC28F8()
{
  return sub_100BC2870(&qword_1010CE1E0, &qword_1010CE1E8, (void (*)(void))sub_100BC2934, (void (*)(void))sub_100B3E680);
}

uint64_t sub_100BC2934()
{
  return sub_100BC1888(&qword_1010CE1F0, &qword_1010CE1F8, (void (*)(void))sub_100BC2964);
}

unint64_t sub_100BC2964()
{
  unint64_t result = qword_1010CE200;
  if (!qword_1010CE200)
  {
    sub_10006389C(&qword_1010CE208);
    sub_10006389C((uint64_t *)&unk_1010CE210);
    sub_100B778F0();
    swift_getOpaqueTypeConformance2();
    sub_100BBBBAC(&qword_1010CCAC0, (void (*)(uint64_t))type metadata accessor for PlaceholderStyleModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE200);
  }
  return result;
}

double sub_100BC2A44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814((uint64_t *)&unk_1010CD5E0) - 8;
  __chkstk_darwin();
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010C8CB8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = __chkstk_darwin();
  uint64_t v13 = (char *)&v19 - v12;
  (*(void (**)(char *, void, uint64_t, __n128))(v3 + 104))((char *)&v19 - v12, enum case for UserInterfaceSizeClass.compact(_:), v2, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v13, 0, 1, v2);
  uint64_t v14 = (uint64_t)&v8[*(int *)(v6 + 56)];
  sub_10006CAB8(a1, (uint64_t)v8, &qword_1010C8CB8);
  sub_10006CAB8((uint64_t)v13, v14, &qword_1010C8CB8);
  uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v15((uint64_t)v8, 1, v2) == 1)
  {
    sub_1000637B8((uint64_t)v13, &qword_1010C8CB8);
    if (v15(v14, 1, v2) == 1)
    {
      sub_1000637B8((uint64_t)v8, &qword_1010C8CB8);
      return 25.0;
    }
  }
  else
  {
    sub_10006CAB8((uint64_t)v8, (uint64_t)v10, &qword_1010C8CB8);
    if (v15(v14, 1, v2) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v14, v2);
      sub_100BBBBAC(&qword_1010CD5F0, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
      v18(v5, v2);
      sub_1000637B8((uint64_t)v13, &qword_1010C8CB8);
      v18(v10, v2);
      sub_1000637B8((uint64_t)v8, &qword_1010C8CB8);
      double result = 25.0;
      if (v17) {
        return result;
      }
      return 29.0;
    }
    sub_1000637B8((uint64_t)v13, &qword_1010C8CB8);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v10, v2);
  }
  sub_1000637B8((uint64_t)v8, (uint64_t *)&unk_1010CD5E0);
  return 29.0;
}

uint64_t sub_100BC2DD8@<X0>(char *a1@<X8>)
{
  return sub_100BA4160(*(void *)(v1 + 16), a1);
}

uint64_t sub_100BC2DE0@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.defaultMinListRowHeight.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100BC2E0C()
{
  return EnvironmentValues.defaultMinListRowHeight.setter();
}

uint64_t sub_100BC2E38()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Management.View(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  uint64_t v4 = v3 + v1[5];
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v3 + v1[6];
  sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v3 + v1[7];
  sub_100063814((uint64_t *)&unk_1010C8970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100BC3094()
{
  return sub_100BC42B8(type metadata accessor for Collaboration.Management.View, (uint64_t (*)(uint64_t))sub_100BAE370);
}

uint64_t sub_100BC30C0@<X0>(uint64_t a1@<X8>)
{
  return sub_100BA577C(*(void *)(v1 + 16), a1);
}

unint64_t sub_100BC30C8()
{
  unint64_t result = qword_1010CE320;
  if (!qword_1010CE320)
  {
    sub_10006389C(&qword_1010CE310);
    sub_100063858(&qword_1010CE328, (uint64_t *)&unk_1010CE330);
    sub_100063858(&qword_1010CC0B0, &qword_1010CE340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE320);
  }
  return result;
}

uint64_t sub_100BC318C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100BC3204()
{
  unint64_t result = qword_1010CE350;
  if (!qword_1010CE350)
  {
    sub_10006389C(&qword_1010CE358);
    sub_100BC1888(&qword_1010CE360, &qword_1010CE368, (void (*)(void))sub_100BC0E54);
    sub_100063858(&qword_1010CE370, &qword_1010CE378);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE350);
  }
  return result;
}

unint64_t sub_100BC32D0()
{
  unint64_t result = qword_1010CE380;
  if (!qword_1010CE380)
  {
    sub_10006389C(&qword_1010CE308);
    sub_100063858(&qword_1010CE388, &qword_1010CE390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE380);
  }
  return result;
}

unint64_t sub_100BC3368()
{
  unint64_t result = qword_1010CE398;
  if (!qword_1010CE398)
  {
    sub_10006389C(&qword_1010CE2F8);
    sub_10006389C(&qword_1010CE310);
    sub_10006389C(&qword_1010CE318);
    sub_100BC30C8();
    sub_100BC318C(&qword_1010CE348, &qword_1010CE318, (void (*)(void))sub_100BC3204);
    swift_getOpaqueTypeConformance2();
    sub_100BC32D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE398);
  }
  return result;
}

uint64_t sub_100BC3474@<X0>(uint64_t a1@<X8>)
{
  return sub_100BAD924(*(void *)(v1 + 16), a1);
}

unint64_t sub_100BC347C()
{
  unint64_t result = qword_1010CE3D0;
  if (!qword_1010CE3D0)
  {
    sub_10006389C(&qword_1010CE3C0);
    sub_100BC36E4((unint64_t *)&qword_1010CE3D8, &qword_1010CE3E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE3D0);
  }
  return result;
}

uint64_t sub_100BC351C@<X0>(uint64_t a1@<X8>)
{
  return sub_100BAC158(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100BC3538()
{
  return sub_100BAD3C4(*(void *)(v0 + 16));
}

unint64_t sub_100BC3540()
{
  unint64_t result = qword_1010CE400;
  if (!qword_1010CE400)
  {
    sub_10006389C(&qword_1010CE3F8);
    sub_100BBBBAC(&qword_1010CE3E8, (void (*)(uint64_t))_s10ManagementO4ViewV19CollaboratorRowViewVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE400);
  }
  return result;
}

uint64_t sub_100BC35E4@<X0>(uint64_t a1@<X8>)
{
  return sub_100BAC43C(*(void *)(v1 + 16), a1);
}

uint64_t sub_100BC35F0()
{
  return sub_100BC42B8(type metadata accessor for Collaboration.Management.View, sub_100BAC8B4);
}

unint64_t sub_100BC361C()
{
  unint64_t result = qword_1010CE440;
  if (!qword_1010CE440)
  {
    sub_10006389C(&qword_1010CE438);
    sub_100BC36E4(&qword_1010CE448, &qword_1010CE450);
    sub_100063858(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE440);
  }
  return result;
}

uint64_t sub_100BC36E4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BC374C@<X0>(uint64_t a1@<X8>)
{
  return sub_100BACD4C(*(void *)(v1 + 16), a1);
}

uint64_t sub_100BC3768@<X0>(BOOL *a1@<X8>)
{
  type metadata accessor for Collaboration.Management.View(0);

  return sub_100BADB58(a1);
}

uint64_t sub_100BC37E0()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Management.View(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + ((v2 + 32) & ~v2);
  swift_release();
  uint64_t v4 = v3 + v1[5];
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = v3 + v1[6];
  sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v3 + v1[7];
  sub_100063814((uint64_t *)&unk_1010C8970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for OpenURLAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100BC3A44(char *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100BADBE0(a1, v4, v5, v6);
}

uint64_t sub_100BC3AB8()
{
  return sub_10000D370();
}

uint64_t sub_100BC3AC0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000154F4;
  return sub_100BA09F4(a1, v4, v5, v6, v7);
}

uint64_t sub_100BC3B88@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Collaboration.Management.View(0);

  return sub_100BABF0C(a1);
}

uint64_t sub_100BC3BFC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100BABDAC(a1, v4);
}

unint64_t sub_100BC3C7C()
{
  unint64_t result = qword_1010CE570;
  if (!qword_1010CE570)
  {
    sub_10006389C(&qword_1010CE540);
    sub_100BC3D1C();
    sub_100063858(&qword_1010CE588, &qword_1010CE538);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE570);
  }
  return result;
}

unint64_t sub_100BC3D1C()
{
  unint64_t result = qword_1010CE578;
  if (!qword_1010CE578)
  {
    sub_10006389C(&qword_1010CE580);
    sub_100063858(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE578);
  }
  return result;
}

uint64_t sub_100BC3DBC()
{
  return sub_10000D370();
}

uint64_t sub_100BC3DC4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100081D08;
  return sub_100BA1598(a1, v4, v5, v6);
}

uint64_t sub_100BC3E7C()
{
  return sub_100BC42B8(type metadata accessor for Collaboration.Management.View, sub_100BAAC74);
}

uint64_t sub_100BC3EC0()
{
  return swift_deallocObject();
}

uint64_t sub_100BC3ED4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Collaboration.Management.View(0);

  return sub_100BAAE14(a1);
}

unint64_t sub_100BC3F44()
{
  unint64_t result = qword_1010CE5D8;
  if (!qword_1010CE5D8)
  {
    sub_10006389C(&qword_1010CE5C0);
    sub_100BBBBAC(&qword_1010CE5E0, (void (*)(uint64_t))_s10ManagementO4ViewV5ShareO6ButtonVMa);
    sub_100063858(&qword_1010CE5E8, &qword_1010CE5F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE5D8);
  }
  return result;
}

uint64_t sub_100BC4018()
{
  return sub_100BC42B8(type metadata accessor for Collaboration.Management.View, sub_100BAB0B0);
}

uint64_t sub_100BC4044()
{
  return swift_deallocObject();
}

unint64_t sub_100BC4054()
{
  unint64_t result = qword_1010CE640;
  if (!qword_1010CE640)
  {
    sub_10006389C(&qword_1010CE618);
    sub_100BC40F4();
    sub_100063858(&qword_1010CC0B0, &qword_1010CE340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE640);
  }
  return result;
}

unint64_t sub_100BC40F4()
{
  unint64_t result = qword_1010CE648;
  if (!qword_1010CE648)
  {
    sub_10006389C(&qword_1010CE610);
    sub_100063858(&qword_1010CE650, &qword_1010CE608);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE648);
  }
  return result;
}

unint64_t sub_100BC4194()
{
  unint64_t result = qword_1010CE658;
  if (!qword_1010CE658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE658);
  }
  return result;
}

uint64_t sub_100BC41EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for Collaboration.Management.View(0) - 8);
  return sub_100BAC158(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_100BC4260()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_100BC428C()
{
  return sub_100BC42B8(type metadata accessor for Collaboration.Management.View, sub_100BA803C);
}

uint64_t sub_100BC42B8(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4);
}

unint64_t sub_100BC4334()
{
  unint64_t result = qword_1010CE6F0;
  if (!qword_1010CE6F0)
  {
    sub_10006389C(&qword_1010CE668);
    sub_100063858(&qword_1010CF2B0, (uint64_t *)&unk_1010CD5A0);
    sub_100063858((unint64_t *)&unk_1010CE060, &qword_1010CB4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE6F0);
  }
  return result;
}

unint64_t sub_100BC43F8()
{
  unint64_t result = qword_1010CE700;
  if (!qword_1010CE700)
  {
    sub_10006389C(&qword_1010CE698);
    sub_100BC4498();
    sub_100063858(&qword_1010CE738, &qword_1010CE6F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE700);
  }
  return result;
}

unint64_t sub_100BC4498()
{
  unint64_t result = qword_1010CE708;
  if (!qword_1010CE708)
  {
    sub_10006389C(&qword_1010CE690);
    sub_100BC1888(&qword_1010CE710, &qword_1010CE688, (void (*)(void))sub_100BC4564);
    sub_100063858((unint64_t *)&unk_1010CEF60, &qword_1010CE730);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE708);
  }
  return result;
}

uint64_t sub_100BC4564()
{
  return sub_100BC1888(&qword_1010CE718, &qword_1010CE680, (void (*)(void))sub_100BC4594);
}

unint64_t sub_100BC4594()
{
  unint64_t result = qword_1010CE720;
  if (!qword_1010CE720)
  {
    sub_10006389C(&qword_1010CE678);
    sub_10006389C(&qword_1010CE668);
    sub_100BC4334();
    swift_getOpaqueTypeConformance2();
    sub_100063858(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE720);
  }
  return result;
}

uint64_t sub_100BC4668@<X0>(uint64_t a1@<X8>)
{
  return sub_100BA81DC(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_100BC4678()
{
  return sub_100BAD2D8();
}

uint64_t sub_100BC46CC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100BC4704()
{
  return sub_100B9B6A0();
}

uint64_t sub_100BC470C()
{
  uint64_t v1 = type metadata accessor for Playlist();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100BC47F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Playlist() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100081D08;
  return sub_100B9B73C(a1, v6, v7, v8, v9);
}

uint64_t sub_100BC4918@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_100068990(a1, a1[3]);
  uint64_t result = dispatch thunk of LibraryPlaylistFilter.id.getter();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100BC4960(void (*a1)(char *, uint64_t, uint64_t))
{
  return sub_100B9BE0C(a1, v1);
}

uint64_t sub_100BC4968()
{
  return Playlist.collaboration.getter();
}

unsigned char *_s10ManagementO4ViewV5ShareOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BC4A58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10ManagementO4ViewV10ModerationOMa()
{
  return &_s10ManagementO4ViewV10ModerationON;
}

uint64_t _s10ManagementO4ViewV10ModerationO6ButtonVwxx()
{
  return swift_release();
}

uint64_t _s10ManagementO4ViewV10ModerationO6ButtonVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  return a1;
}

uint64_t _s10ManagementO4ViewV10ModerationO6ButtonVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for SymbolButton.Badge(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s10ManagementO4ViewV10ModerationO6ButtonVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *_s10ManagementO4ViewV10ModerationO6ButtonVMa()
{
  return &_s10ManagementO4ViewV10ModerationO6ButtonVN;
}

unint64_t sub_100BC4B7C()
{
  unint64_t result = qword_1010CE800;
  if (!qword_1010CE800)
  {
    sub_10006389C(&qword_1010CE808);
    sub_10006389C(&qword_1010CDE90);
    sub_10006389C(&qword_1010CDE88);
    sub_10006389C(&qword_1010CDE80);
    sub_10006389C(&qword_1010CDEA8);
    sub_100BC0F24();
    sub_100BC318C(&qword_1010CDED0, &qword_1010CDEA8, (void (*)(void))sub_100BC0FE8);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100BBBBAC(&qword_1010CE810, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE800);
  }
  return result;
}

unint64_t sub_100BC4D20()
{
  unint64_t result = qword_1010CE818;
  if (!qword_1010CE818)
  {
    sub_10006389C(&qword_1010CDFD8);
    sub_100BC4DC0();
    sub_100063858(&qword_1010CE838, &qword_1010CE030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE818);
  }
  return result;
}

unint64_t sub_100BC4DC0()
{
  unint64_t result = qword_1010CE820;
  if (!qword_1010CE820)
  {
    sub_10006389C(&qword_1010CDFD0);
    sub_100BC4E60();
    sub_100063858(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE820);
  }
  return result;
}

unint64_t sub_100BC4E60()
{
  unint64_t result = qword_1010CE828;
  if (!qword_1010CE828)
  {
    sub_10006389C(&qword_1010CDFC8);
    sub_100063858(&qword_1010CE830, &qword_1010CDFC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE828);
  }
  return result;
}

uint64_t sub_100BC4F00()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100BC4F20()
{
  unint64_t result = qword_1010CE840;
  if (!qword_1010CE840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE840);
  }
  return result;
}

uint64_t sub_100BC4F74()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100BC4FAC()
{
  return sub_100BB3DD4();
}

uint64_t sub_100BC4FB8@<X0>(uint64_t a1@<X8>)
{
  return sub_100BB3E5C(*(unsigned char *)(v1 + 16), a1);
}

unint64_t sub_100BC4FC4()
{
  unint64_t result = qword_1010CE868;
  if (!qword_1010CE868)
  {
    sub_10006389C(&qword_1010CE860);
    sub_100BC5064();
    sub_100063858((unint64_t *)&unk_1010CE8A0, &qword_1010CF290);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE868);
  }
  return result;
}

unint64_t sub_100BC5064()
{
  unint64_t result = qword_1010CE870;
  if (!qword_1010CE870)
  {
    sub_10006389C(&qword_1010CE878);
    sub_100BC1888(&qword_1010CE880, &qword_1010CE888, (void (*)(void))sub_100BC5130);
    sub_100063858((unint64_t *)&unk_1010CEF60, &qword_1010CE730);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE870);
  }
  return result;
}

unint64_t sub_100BC5130()
{
  unint64_t result = qword_1010CE890;
  if (!qword_1010CE890)
  {
    sub_10006389C(&qword_1010CE898);
    sub_100B93868();
    sub_100063858(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE890);
  }
  return result;
}

uint64_t sub_100BC51D0()
{
  return EnvironmentValues._buttonBorderShape.getter();
}

uint64_t sub_100BC51F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100BBA90C(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ButtonBorderShape, (uint64_t (*)(char *))&EnvironmentValues._buttonBorderShape.setter);
}

uint64_t sub_100BC5234()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

unint64_t sub_100BC5268()
{
  unint64_t result = qword_1010CE8C8;
  if (!qword_1010CE8C8)
  {
    sub_10006389C(&qword_1010CE8B8);
    sub_10006389C(&qword_1010CE848);
    type metadata accessor for BorderlessButtonStyle();
    sub_100063858(&qword_1010CE8B0, &qword_1010CE848);
    sub_100BBBBAC(&qword_1010CE430, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100063858((unint64_t *)&unk_1010CE8D0, &qword_1010CE8C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE8C8);
  }
  return result;
}

void Collaboration.Management.ViewController.init(rootView:)()
{
}

uint64_t Collaboration.Flow.Collaborator.init(name:handle:artwork:canCollaborate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, void *a7@<X8>)
{
  uint64_t v14 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  uint64_t v15 = (uint64_t)a7 + *(int *)(v14 + 24);
  uint64_t v16 = type metadata accessor for Artwork();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = *(int *)(v14 + 28);
  *((unsigned char *)a7 + v17) = 0;
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  uint64_t result = sub_100BC54B4(a5, v15);
  *((unsigned char *)a7 + v17) = a6;
  return result;
}

uint64_t type metadata accessor for Collaboration.Flow.Collaborator(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010CEA50);
}

uint64_t sub_100BC54B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814((uint64_t *)&unk_1010CEE80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t Collaboration.Flow.Collaborator.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  return sub_10006CAB8(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_1010CEE80);
}

uint64_t Collaboration.Flow.Collaborator.artwork.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Collaboration.Flow.Collaborator(0) + 24);

  return sub_100BC54B4(a1, v3);
}

double (*Collaboration.Flow.Collaborator.artwork.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t Collaboration.Flow.Collaborator.canCollaborate.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Collaboration.Flow.Collaborator(0) + 28));
}

uint64_t Collaboration.Flow.Collaborator.canCollaborate.setter(char a1)
{
  uint64_t result = type metadata accessor for Collaboration.Flow.Collaborator(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

double (*Collaboration.Flow.Collaborator.canCollaborate.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t Collaboration.Flow.title.getter()
{
  uint64_t v1 = v0;
  v30[0] = type metadata accessor for Playlist.Collaborator();
  uint64_t v2 = *(void *)(v30[0] - 8);
  __chkstk_darwin();
  uint64_t v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)v30 - v9;
  type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100BD6D08(v1, (uint64_t)v12, type metadata accessor for Collaboration.Flow);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = v2;
      uint64_t v15 = *(void (**)(char *, char *, void))(v2 + 32);
      uint64_t v16 = v30[0];
      v15(v4, v12, v30[0]);
      String.LocalizationValue.init(stringLiteral:)();
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v10, v5);
      if (qword_1010C8350 != -1) {
        swift_once();
      }
      id v17 = (id)qword_10112BE80;
      static Locale.current.getter();
      String.init(localized:table:bundle:locale:comment:)();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
      sub_100063814(&qword_1010CE918);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_100E251D0;
      uint64_t v19 = Playlist.Collaborator.name.getter();
      unint64_t v21 = v20;
      *(void *)(v18 + 56) = &type metadata for String;
      *(void *)(v18 + 64) = sub_10001ECDC();
      if (v21) {
        uint64_t v22 = v19;
      }
      else {
        uint64_t v22 = 0;
      }
      unint64_t v23 = 0xE000000000000000;
      if (v21) {
        unint64_t v23 = v21;
      }
      *(void *)(v18 + 32) = v22;
      *(void *)(v18 + 40) = v23;
      uint64_t v24 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v16);
    }
    else
    {
      String.LocalizationValue.init(stringLiteral:)();
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v10, v5);
      if (qword_1010C8350 != -1) {
        swift_once();
      }
      id v26 = (id)qword_10112BE80;
      static Locale.current.getter();
      uint64_t v24 = String.init(localized:table:bundle:locale:comment:)();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    }
  }
  else
  {
    uint64_t v25 = &v12[*(int *)(sub_100063814(&qword_1010CE928) + 48)];
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v10, v5);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    id v27 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v24 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    uint64_t v28 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v25, v28);
    sub_1000637B8((uint64_t)v12, &qword_1010CE930);
  }
  return v24;
}

Swift::String __swiftcall Collaboration.Flow.subtitle(hasProfileEdit:)(Swift::Bool hasProfileEdit)
{
  BOOL v67 = hasProfileEdit;
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin();
  uint64_t v1 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  uint64_t v65 = *(void *)(v1 - 8);
  uint64_t v66 = v1;
  __chkstk_darwin();
  uint64_t v3 = (Swift::String *)((char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v5 = (Swift::String *)((char *)&v64 - v4);
  uint64_t v6 = sub_100063814(&qword_1010CE938);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CE930);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale();
  __chkstk_darwin();
  char v68 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  uint64_t v69 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v71 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v64 - v14;
  type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  id v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100BD6D08((uint64_t)v70, (uint64_t)v17, type metadata accessor for Collaboration.Flow);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v64 = v5;
    uint64_t v24 = sub_100063814(&qword_1010CE928);
    uint64_t v70 = &v17[*(int *)(v24 + 48)];
    int v25 = v17[*(int *)(v24 + 64)];
    sub_10003CABC((uint64_t)v17, (uint64_t)v10, &qword_1010CE930);
    uint64_t v26 = *(int *)(v6 + 48);
    sub_10006CAB8((uint64_t)v10, (uint64_t)v8, &qword_1010CE930);
    v8[v26] = v25;
    uint64_t v27 = (uint64_t)v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v8, 1, v66) == 1)
    {
      uint64_t v28 = v69;
      uint64_t v29 = (void (**)(char *, char *, uint64_t))(v69 + 16);
      String.LocalizationValue.init(stringLiteral:)();
      (*v29)(v71, v15, v12);
      if (qword_1010C8350 != -1) {
        swift_once();
      }
      id v36 = (id)qword_10112BE80;
      static Locale.current.getter();
      uint64_t v21 = String.init(localized:table:bundle:locale:comment:)();
      unint64_t v23 = v37;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v12);
      sub_1000637B8(v27, &qword_1010CE930);
      goto LABEL_28;
    }
    if (v25)
    {
      uint64_t v33 = v64;
      sub_100BD1148((uint64_t)v8, (uint64_t)v64, type metadata accessor for Collaboration.Flow.Collaborator);
      if (v67)
      {
LABEL_19:
        String.LocalizationValue.init(stringLiteral:)();
        uint64_t v38 = v69;
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v71, v15, v12);
        if (qword_1010C8350 == -1) {
          goto LABEL_26;
        }
        goto LABEL_34;
      }
      uint64_t countAndFlagsBits = v33[1]._countAndFlagsBits;
      object = v33[1]._object;
      uint64_t v41 = v71;
      if (object)
      {
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v42._uint64_t countAndFlagsBits = 0x100000000000002ELL;
        v42._object = (void *)0x8000000100DD5D50;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v42);
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*v33);
        v43._uint64_t countAndFlagsBits = 4204576;
        v43._object = (void *)0xE300000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v43);
        v44._uint64_t countAndFlagsBits = countAndFlagsBits;
        v44._object = object;
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v44);
        v45._uint64_t countAndFlagsBits = 0xD000000000000031;
        v45._object = (void *)0x8000000100DD5D80;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v45);
        goto LABEL_25;
      }
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v57 = v69;
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v41, v15, v12);
      if (qword_1010C8350 == -1) {
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t v33 = v3;
      sub_100BD1148((uint64_t)v8, (uint64_t)v3, type metadata accessor for Collaboration.Flow.Collaborator);
      if (v67) {
        goto LABEL_19;
      }
      uint64_t v47 = v3[1]._countAndFlagsBits;
      uint64_t v46 = v3[1]._object;
      uint64_t v41 = v71;
      if (v46)
      {
        String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
        v48._uint64_t countAndFlagsBits = 0x100000000000002ALL;
        v48._object = (void *)0x8000000100DD5C60;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v48);
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(*v3);
        v49._uint64_t countAndFlagsBits = 4204576;
        v49._object = (void *)0xE300000000000000;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v49);
        v50._uint64_t countAndFlagsBits = v47;
        v50._object = v46;
        String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v50);
        v51._uint64_t countAndFlagsBits = 0xD000000000000048;
        v51._object = (void *)0x8000000100DD5C90;
        String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v51);
LABEL_25:
        String.LocalizationValue.init(stringInterpolation:)();
        uint64_t v38 = v69;
        (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v41, v15, v12);
        if (qword_1010C8350 == -1)
        {
LABEL_26:
          id v52 = (id)qword_10112BE80;
          static Locale.current.getter();
          uint64_t v21 = String.init(localized:table:bundle:locale:comment:)();
          unint64_t v23 = v53;
          (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v12);
LABEL_27:
          sub_1000637B8(v27, &qword_1010CE930);
          sub_100BD10C4((uint64_t)v33, type metadata accessor for Collaboration.Flow.Collaborator);
LABEL_28:
          uint64_t v54 = type metadata accessor for URL();
          (*(void (**)(char *, uint64_t))(*(void *)(v54 - 8) + 8))(v70, v54);
          goto LABEL_29;
        }
LABEL_34:
        swift_once();
        goto LABEL_26;
      }
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v57 = v69;
      (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v41, v15, v12);
      if (qword_1010C8350 == -1)
      {
LABEL_33:
        id v58 = (id)qword_10112BE80;
        static Locale.current.getter();
        String.init(localized:table:bundle:locale:comment:)();
        (*(void (**)(char *, uint64_t))(v57 + 8))(v15, v12);
        sub_100063814(&qword_1010CE918);
        uint64_t v59 = swift_allocObject();
        *(_OWORD *)(v59 + 16) = xmmword_100E251D0;
        uint64_t v61 = v33->_countAndFlagsBits;
        uint64_t v60 = v33->_object;
        *(void *)(v59 + 56) = &type metadata for String;
        *(void *)(v59 + 64) = sub_10001ECDC();
        *(void *)(v59 + 32) = v61;
        *(void *)(v59 + 40) = v60;
        swift_bridgeObjectRetain();
        uint64_t v21 = static String.localizedStringWithFormat(_:_:)();
        unint64_t v23 = v62;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
    swift_once();
    goto LABEL_33;
  }
  if (EnumCaseMultiPayload == 1)
  {
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v19 = v69;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v71, v15, v12);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    id v20 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v21 = String.init(localized:table:bundle:locale:comment:)();
    unint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, v12);
    sub_100BD10C4((uint64_t)v17, type metadata accessor for Collaboration.Flow);
  }
  else
  {
    uint64_t v30 = v69;
    uint64_t v31 = (void (**)(char *, char *, uint64_t))(v69 + 16);
    uint64_t v32 = v71;
    String.LocalizationValue.init(stringLiteral:)();
    (*v31)(v32, v15, v12);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    id v34 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v21 = String.init(localized:table:bundle:locale:comment:)();
    unint64_t v23 = v35;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v12);
  }
LABEL_29:
  uint64_t v55 = v21;
  uint64_t v56 = v23;
  result._object = v56;
  result._uint64_t countAndFlagsBits = v55;
  return result;
}

uint64_t Collaboration.Flow.buttonActionTitle.getter()
{
  uint64_t v1 = v0;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v7 = &v17[-v6];
  type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100BD6D08(v1, (uint64_t)v9, type metadata accessor for Collaboration.Flow);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_100BD10C4((uint64_t)v9, type metadata accessor for Collaboration.Flow);
      return 0;
    }
    else
    {
      String.LocalizationValue.init(stringLiteral:)();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v5, v7, v2);
      if (qword_1010C8350 != -1) {
        swift_once();
      }
      id v13 = (id)qword_10112BE80;
      static Locale.current.getter();
      uint64_t v11 = String.init(localized:table:bundle:locale:comment:)();
      (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v7, v2);
    }
  }
  else
  {
    uint64_t v12 = &v9[*(int *)(sub_100063814(&qword_1010CE928) + 48)];
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v5, v7, v2);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    id v14 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v11 = String.init(localized:table:bundle:locale:comment:)();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v7, v2);
    uint64_t v15 = type metadata accessor for URL();
    (*(void (**)(unsigned char *, uint64_t))(*(void *)(v15 - 8) + 8))(v12, v15);
    sub_1000637B8((uint64_t)v9, &qword_1010CE930);
  }
  return v11;
}

uint64_t Collaboration.Flow.View.init(_:playlist:manager:showProfileCreation:profileUpdateHandler:completion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  *a9 = swift_getKeyPath();
  sub_100063814(&qword_1010C8950);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  id v17 = (char *)a9 + v16[5];
  _s9MusicCore13CollaborationO0aB2UIE4FlowO4ViewV13_isRestricted33_4FA82EB282576B4095E3FA5F35E498B805SwiftD05StateVySbGvpfi_0();
  State.init(wrappedValue:)();
  *id v17 = v27;
  *((void *)v17 + 1) = v28;
  uint64_t v18 = (char *)a9 + v16[6];
  State.init(wrappedValue:)();
  char *v18 = v27;
  *((void *)v18 + 1) = v28;
  uint64_t v19 = (uint64_t *)((char *)a9 + v16[11]);
  id v20 = (char *)a9 + v16[13];
  *(void *)id v20 = sub_100BCDD7C;
  *((void *)v20 + 1) = 0;
  v20[16] = 0;
  sub_100BD1148(a1, (uint64_t)a9 + v16[7], type metadata accessor for Collaboration.Flow);
  uint64_t v21 = (char *)a9 + v16[8];
  uint64_t v22 = type metadata accessor for Playlist();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v21, a2, v22);
  *(uint64_t *)((char *)a9 + v16[9]) = a3;
  *((unsigned char *)a9 + v16[10]) = a4;
  *uint64_t v19 = a5;
  v19[1] = a6;
  uint64_t v24 = (uint64_t *)((char *)a9 + v16[12]);
  *uint64_t v24 = a7;
  v24[1] = a8;
  return result;
}

uint64_t (*variable initialization expression of Collaboration.Flow.View._profileContext())()
{
  return sub_100BCDD7C;
}

uint64_t Collaboration.Flow.View.body.getter@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_100063814(&qword_1010CE940);
  return sub_100BC6E50(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_100BC6E50@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v471 = a1;
  uint64_t v443 = a2;
  uint64_t v437 = sub_100063814(&qword_1010CECC0);
  __chkstk_darwin();
  uint64_t v414 = (uint64_t)&v365 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v398 = *(void *)(v3 - 8);
  uint64_t v399 = v3;
  __chkstk_darwin();
  v394 = (char *)&v365 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  v391 = (char *)&v365 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814((uint64_t *)&unk_1010C8960);
  __chkstk_darwin();
  v388 = (char *)&v365 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010CC0C8);
  uint64_t v396 = *(void *)(v7 - 8);
  uint64_t v397 = v7;
  __chkstk_darwin();
  uint64_t v393 = (uint64_t)&v365 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v387 = sub_100063814((uint64_t *)&unk_1010CF220);
  __chkstk_darwin();
  v392 = (char *)&v365 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v389 = sub_100063814(&qword_1010CECC8);
  __chkstk_darwin();
  uint64_t v395 = (uint64_t)&v365 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v390 = sub_100063814(&qword_1010CF230);
  __chkstk_darwin();
  uint64_t v450 = (uint64_t)&v365 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v13 = (char *)&v365 - v12;
  uint64_t v445 = type metadata accessor for Playlist.Collaborator();
  uint64_t v427 = *(void *)(v445 - 8);
  __chkstk_darwin();
  v410 = (char *)&v365 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v400 = v14;
  __chkstk_darwin();
  v444 = (char *)&v365 - v15;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v408 = *(void *)(v16 - 8);
  uint64_t v409 = v16;
  __chkstk_darwin();
  uint64_t v385 = v17;
  v386 = (char *)&v365 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v407 = (char *)&v365 - v18;
  uint64_t v434 = sub_100063814(&qword_1010CECD0);
  __chkstk_darwin();
  uint64_t v436 = (uint64_t)&v365 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v416 = sub_100063814(&qword_1010CECD8);
  __chkstk_darwin();
  v418 = (void (*)(char *, char *, uint64_t))((char *)&v365 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v417 = sub_100063814(&qword_1010CECE0);
  __chkstk_darwin();
  uint64_t v402 = (uint64_t)&v365 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v435 = sub_100063814(&qword_1010CECE8);
  __chkstk_darwin();
  v419 = (uint64_t (*)(uint64_t))((char *)&v365 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = type metadata accessor for Collaboration.Flow.View(0);
  uint64_t v430 = *(void *)(v23 - 8);
  __chkstk_darwin();
  uint64_t v431 = v24;
  uint64_t v433 = (uint64_t)&v365 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v432 = (void (*)(char *, char *, uint64_t))sub_100063814(&qword_1010CECF0);
  uint64_t v446 = *((void *)v432 - 1);
  __chkstk_darwin();
  v401 = (char *)&v365 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v415 = (char *)&v365 - v26;
  type metadata accessor for Locale();
  __chkstk_darwin();
  v411 = (char *)&v365 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v426 = type metadata accessor for String.LocalizationValue();
  uint64_t v412 = *(void *)(v426 - 8);
  __chkstk_darwin();
  v424 = (char *)&v365 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v425 = (char *)&v365 - v29;
  uint64_t v383 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin();
  v384 = (char *)&v365 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for Material();
  uint64_t v378 = *(void *)(v31 - 8);
  uint64_t v379 = v31;
  __chkstk_darwin();
  v376 = (char *)&v365 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100063814(&qword_1010CECF8);
  uint64_t v372 = *(void *)(v33 - 8);
  uint64_t v373 = v33;
  __chkstk_darwin();
  v371 = (char *)&v365 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v369 = sub_100063814(&qword_1010CED00);
  __chkstk_darwin();
  v375 = (char *)&v365 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v370 = sub_100063814(&qword_1010CED08);
  __chkstk_darwin();
  v377 = (char *)&v365 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v374 = sub_100063814(&qword_1010CED10);
  __chkstk_darwin();
  v382 = (char *)&v365 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v380 = sub_100063814(&qword_1010CED18);
  __chkstk_darwin();
  v413 = (uint64_t (*)(uint64_t))((char *)&v365 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v381 = (uint64_t)&v365 - v39;
  __chkstk_darwin();
  v429 = (void (*)(char *, uint64_t))((char *)&v365 - v40);
  sub_100063814(&qword_1010CED20);
  __chkstk_darwin();
  uint64_t v468 = (uint64_t)&v365 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v464 = (uint64_t)&v365 - v42;
  uint64_t v366 = _s4FlowO18ProfileEditingViewVMa(0);
  __chkstk_darwin();
  v368 = (uint64_t *)((char *)&v365 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v439 = sub_100063814(&qword_1010CED28);
  uint64_t v438 = *(void *)(v439 - 8);
  __chkstk_darwin();
  uint64_t v367 = (uint64_t)&v365 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CED30);
  __chkstk_darwin();
  uint64_t v467 = (uint64_t)&v365 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v469 = (uint64_t)&v365 - v46;
  uint64_t v458 = sub_100063814(&qword_1010CED38);
  uint64_t v457 = *(void *)(v458 - 8);
  __chkstk_darwin();
  v456 = (char *)&v365 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v455 = sub_100063814(&qword_1010CED40);
  __chkstk_darwin();
  v461 = (char *)&v365 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v460 = sub_100063814(&qword_1010CED48);
  __chkstk_darwin();
  uint64_t v463 = (uint64_t)&v365 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v459 = (uint64_t)&v365 - v50;
  __chkstk_darwin();
  uint64_t v466 = (uint64_t)&v365 - v51;
  uint64_t v452 = sub_100063814(&qword_1010CED50);
  unint64_t v447 = *(void *)(v452 - 8);
  __chkstk_darwin();
  unint64_t v53 = (char *)&v365 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v453 = sub_100063814(&qword_1010CED58);
  uint64_t v54 = *(void *)(v453 - 8);
  __chkstk_darwin();
  uint64_t v56 = (char *)&v365 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  uint64_t v448 = (uint64_t)&v365 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v454 = (uint64_t)&v365 - v59;
  __chkstk_darwin();
  uint64_t v61 = (char *)&v365 - v60;
  sub_100063814(&qword_1010CED60);
  __chkstk_darwin();
  uint64_t v462 = (uint64_t)&v365 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v64 = (char *)&v365 - v63;
  uint64_t object = v23;
  v470 = (void *)(v471 + *(int *)(v23 + 28));
  sub_100BD6D08((uint64_t)v470, (uint64_t)v61, type metadata accessor for Collaboration.Flow);
  uint64_t v451 = v57;
  LODWORD(v23) = swift_getEnumCaseMultiPayload();
  sub_100BD10C4((uint64_t)v61, type metadata accessor for Collaboration.Flow);
  v465 = v64;
  v428 = v13;
  if (v23 == 1)
  {
    uint64_t v65 = 1;
  }
  else
  {
    if (qword_1010C8740 != -1) {
      swift_once();
    }
    uint64_t v66 = qword_1010CE908;
    v499._uint64_t countAndFlagsBits = swift_getKeyPath();
    v499._uint64_t object = (void *)v66;
    swift_retain();
    uint64_t v67 = sub_100063814(&qword_1010CED68);
    unint64_t v68 = sub_100BD6FCC();
    View.bold(_:)();
    swift_release();
    swift_release();
    v499._uint64_t countAndFlagsBits = v67;
    v499._uint64_t object = (void *)v68;
    swift_getOpaqueTypeConformance2();
    uint64_t v69 = v452;
    View.accessibilityHidden(_:)();
    (*(void (**)(char *, uint64_t))(v447 + 8))(v53, v69);
    uint64_t v64 = v465;
    sub_10003CABC((uint64_t)v56, (uint64_t)v465, &qword_1010CED58);
    uint64_t v65 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v64, v65, 1, v453);
  v499._uint64_t countAndFlagsBits = Collaboration.Flow.title.getter();
  v499._uint64_t object = v70;
  unint64_t v447 = sub_10005D27C();
  uint64_t v71 = Text.init<A>(_:)();
  uint64_t v73 = v72;
  char v75 = v74;
  uint64_t v77 = v76;
  if (qword_1010C8738 != -1) {
    swift_once();
  }
  uint64_t v78 = qword_1010CE900;
  uint64_t KeyPath = swift_getKeyPath();
  v499._uint64_t countAndFlagsBits = v71;
  v499._uint64_t object = (void *)v73;
  LOBYTE(v500._countAndFlagsBits) = v75 & 1;
  v500._uint64_t object = v77;
  LOWORD(v501._countAndFlagsBits) = 256;
  v501._uint64_t object = (void *)KeyPath;
  *(void *)&long long v502 = v78;
  swift_retain();
  sub_100063814(&qword_1010CED80);
  sub_100BD70C0();
  uint64_t v80 = v456;
  View.bold(_:)();
  sub_1000D1500(v71, v73, v75 & 1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v81 = swift_getKeyPath();
  uint64_t v82 = v457;
  uint64_t v83 = (uint64_t)v461;
  uint64_t v84 = v458;
  (*(void (**)(char *, char *, uint64_t))(v457 + 16))(v461, v80, v458);
  uint64_t v85 = v83 + *(int *)(v455 + 36);
  *(void *)uint64_t v85 = v81;
  *(unsigned char *)(v85 + 8) = 1;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v80, v84);
  LOBYTE(v81) = static Edge.Set.top.getter();
  uint64_t v86 = v454;
  sub_100BD6D08((uint64_t)v470, v454, type metadata accessor for Collaboration.Flow);
  swift_getEnumCaseMultiPayload();
  sub_100BD10C4(v86, type metadata accessor for Collaboration.Flow);
  EdgeInsets.init(_all:)();
  uint64_t v88 = v87;
  uint64_t v90 = v89;
  uint64_t v92 = v91;
  uint64_t v94 = v93;
  uint64_t v95 = v459;
  sub_10006CAB8(v83, v459, &qword_1010CED40);
  uint64_t v96 = v95 + *(int *)(v460 + 36);
  *(unsigned char *)uint64_t v96 = v81;
  *(void *)(v96 + 8) = v88;
  *(void *)(v96 + 16) = v90;
  *(void *)(v96 + 24) = v92;
  *(void *)(v96 + 32) = v94;
  *(unsigned char *)(v96 + 40) = 0;
  sub_1000637B8(v83, &qword_1010CED40);
  sub_10003CABC(v95, v466, &qword_1010CED48);
  uint64_t v97 = object;
  uint64_t v98 = *(int *)(object + 40);
  Swift::String v499 = Collaboration.Flow.subtitle(hasProfileEdit:)(*(unsigned char *)(v471 + v98));
  uint64_t v459 = Text.init<A>(_:)();
  uint64_t v458 = v99;
  LODWORD(v83) = v100;
  v442 = v101;
  uint64_t v102 = qword_1010CE900;
  uint64_t v460 = swift_getKeyPath();
  uint64_t v441 = swift_getKeyPath();
  v461 = (char *)v102;
  swift_retain();
  uint64_t v457 = static Color.secondary.getter();
  v456 = (char *)swift_getKeyPath();
  LODWORD(v455) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v104 = v103;
  uint64_t v106 = v105;
  uint64_t v108 = v107;
  uint64_t v110 = v109;
  int v440 = v83;
  unsigned __int8 v544 = v83 & 1;
  unsigned __int8 v543 = 0;
  LODWORD(v454) = static Edge.Set.bottom.getter();
  if (qword_1010C8730 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v112 = v111;
  uint64_t v114 = v113;
  uint64_t v116 = v115;
  uint64_t v118 = v117;
  LODWORD(v452) = v544;
  LODWORD(v453) = v543;
  unsigned __int8 v545 = 0;
  int v119 = *(unsigned __int8 *)(v471 + v98);
  uint64_t v120 = v450;
  uint64_t v422 = v108;
  uint64_t v423 = v106;
  uint64_t v420 = v117;
  uint64_t v421 = v110;
  if (v119 == 1 && *(void *)(v471 + *(int *)(v97 + 44)))
  {
    type metadata accessor for InlineProfileEditingView.Context();
    sub_100BD9470(&qword_1010CEED0, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
    uint64_t v121 = StateObject.wrappedValue.getter();
    uint64_t v122 = v368;
    sub_100BD6D08((uint64_t)v470, (uint64_t)v368 + *(int *)(v366 + 20), type metadata accessor for Collaboration.Flow);
    *uint64_t v122 = v121;
    LOBYTE(v121) = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    uint64_t v123 = v104;
    uint64_t v124 = v112;
    uint64_t v126 = v125;
    uint64_t v127 = v114;
    uint64_t v129 = v128;
    uint64_t v130 = v116;
    uint64_t v132 = v131;
    uint64_t v134 = v133;
    uint64_t v135 = v367;
    sub_100BD6D08((uint64_t)v122, v367, _s4FlowO18ProfileEditingViewVMa);
    uint64_t v136 = v439;
    uint64_t v137 = v135 + *(int *)(v439 + 36);
    *(unsigned char *)uint64_t v137 = v121;
    *(void *)(v137 + 8) = v126;
    *(void *)(v137 + 16) = v129;
    uint64_t v112 = v124;
    uint64_t v104 = v123;
    uint64_t v114 = v127;
    uint64_t v106 = v423;
    *(void *)(v137 + 24) = v132;
    *(void *)(v137 + 32) = v134;
    uint64_t v116 = v130;
    uint64_t v110 = v421;
    uint64_t v108 = v422;
    uint64_t v118 = v420;
    *(unsigned char *)(v137 + 40) = 0;
    sub_100BD10C4((uint64_t)v122, _s4FlowO18ProfileEditingViewVMa);
    sub_10003CABC(v135, v469, &qword_1010CED28);
    uint64_t v138 = 0;
  }
  else
  {
    uint64_t v138 = 1;
    uint64_t v136 = v439;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v438 + 56))(v469, v138, 1, v136);
  type metadata accessor for InlineProfileEditingView.Context();
  sub_100BD9470(&qword_1010CEED0, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
  StateObject.wrappedValue.getter();
  BOOL v139 = InlineProfileEditingView.Context.canValidate.getter();
  swift_release();
  int v140 = !v139;
  uint64_t v141 = v448;
  sub_100BD6D08((uint64_t)v470, v448, type metadata accessor for Collaboration.Flow);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    LODWORD(v451) = v140;
    uint64_t v405 = v112;
    uint64_t v406 = v104;
    uint64_t v403 = v116;
    uint64_t v404 = v114;
    if (EnumCaseMultiPayload == 1)
    {
      v143 = *(void (**)(char *, uint64_t, uint64_t))(v427 + 32);
      v470 = (void *)(v427 + 32);
      uint64_t v451 = (uint64_t)v143;
      v143(v444, v141, v445);
      v144 = v388;
      sub_100BB05FC(v388);
      uint64_t v145 = sub_100063814(&qword_1010CF250);
      uint64_t v146 = (uint64_t)v391;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v145 - 8) + 56))(v391, 7, 10, v145);
      if (qword_1010C8728 != -1) {
        swift_once();
      }
      v474._uint64_t countAndFlagsBits = qword_1010CE8F0;
      LOBYTE(v474._object) = 0;
      v475._uint64_t countAndFlagsBits = qword_1010CE8F0;
      LOBYTE(v475._object) = 0;
      v476._uint64_t countAndFlagsBits = 0;
      LOWORD(v476._object) = 257;
      uint64_t v148 = v398;
      uint64_t v147 = v399;
      uint64_t v149 = (uint64_t)v394;
      (*(void (**)(char *, void, uint64_t))(v398 + 104))(v394, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v399);
      uint64_t v150 = v393;
      static ArtworkImage.with(_:placeholder:size:reusePolicy:)((uint64_t)v144, v146, (uint64_t)&v474, v149, v393);
      (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v149, v147);
      sub_100BD10C4(v146, type metadata accessor for ArtworkImage.Placeholder);
      sub_1000637B8((uint64_t)v144, (uint64_t *)&unk_1010C8960);
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v152 = v396;
      uint64_t v151 = v397;
      uint64_t v153 = (uint64_t)v392;
      (*(void (**)(char *, uint64_t, uint64_t))(v396 + 16))(v392, v150, v397);
      v154 = (Swift::String *)(v153 + *(int *)(v387 + 36));
      Swift::String v155 = v487;
      Swift::String *v154 = v486;
      v154[1] = v155;
      v154[2] = v488;
      (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v150, v151);
      uint64_t v156 = v395;
      sub_10006CAB8(v153, v395, (uint64_t *)&unk_1010CF220);
      *(_WORD *)(v156 + *(int *)(v389 + 36)) = 256;
      sub_1000637B8(v153, (uint64_t *)&unk_1010CF220);
      LOBYTE(v151) = static Edge.Set.top.getter();
      EdgeInsets.init(_all:)();
      uint64_t v158 = v157;
      uint64_t v160 = v159;
      uint64_t v162 = v161;
      uint64_t v164 = v163;
      sub_10006CAB8(v156, v120, &qword_1010CECC8);
      uint64_t v165 = v120 + *(int *)(v390 + 36);
      *(unsigned char *)uint64_t v165 = v151;
      *(void *)(v165 + 8) = v158;
      *(void *)(v165 + 16) = v160;
      *(void *)(v165 + 24) = v162;
      *(void *)(v165 + 32) = v164;
      *(unsigned char *)(v165 + 40) = 0;
      sub_1000637B8(v156, &qword_1010CECC8);
      sub_10003CABC(v120, (uint64_t)v428, &qword_1010CF230);
      v166 = v425;
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v167 = v412;
      v168 = *(void **)(v412 + 16);
      uint64_t v169 = v426;
      uint64_t v439 = v412 + 16;
      v432 = (void (*)(char *, char *, uint64_t))v168;
      ((void (*)(char *, char *, uint64_t))v168)(v424, v166, v426);
      if (qword_1010C8350 != -1) {
        swift_once();
      }
      id v170 = (id)qword_10112BE80;
      static Locale.current.getter();
      uint64_t v448 = String.init(localized:table:bundle:locale:comment:)();
      unint64_t v447 = v171;
      v429 = *(void (**)(char *, uint64_t))(v167 + 8);
      v429(v166, v169);
      v419 = type metadata accessor for Collaboration.Flow.View;
      uint64_t v172 = v433;
      sub_100BD6D08(v471, v433, type metadata accessor for Collaboration.Flow.View);
      uint64_t v173 = v427;
      v418 = *(void (**)(char *, char *, uint64_t))(v427 + 16);
      v174 = v410;
      uint64_t v175 = v445;
      v418(v410, v444, v445);
      uint64_t v176 = *(unsigned __int8 *)(v430 + 80);
      uint64_t v177 = (v176 + 16) & ~v176;
      uint64_t v178 = *(unsigned __int8 *)(v173 + 80);
      v179 = (char *)((v431 + v178 + v177) & ~v178);
      v415 = v179;
      uint64_t v416 = v176 | v178 | 7;
      uint64_t v417 = (uint64_t)&v179[v400];
      uint64_t v180 = swift_allocObject();
      uint64_t v446 = v180;
      v413 = type metadata accessor for Collaboration.Flow.View;
      sub_100BD1148(v172, v180 + v177, type metadata accessor for Collaboration.Flow.View);
      ((void (*)(char *, char *, uint64_t))v451)(&v179[v180], v174, v175);
      LOBYTE(v498[0]) = 0;
      State.init(wrappedValue:)();
      LODWORD(v438) = LOBYTE(v499._countAndFlagsBits);
      uint64_t v181 = v426;
      uint64_t object = (uint64_t)v499._object;
      uint64_t v431 = swift_getKeyPath();
      LODWORD(v430) = static Edge.Set.top.getter();
      EdgeInsets.init(_all:)();
      uint64_t v183 = v182;
      uint64_t v185 = v184;
      uint64_t v187 = v186;
      uint64_t v189 = v188;
      v190 = v425;
      String.LocalizationValue.init(stringLiteral:)();
      v432(v424, v190, v181);
      id v191 = (id)qword_10112BE80;
      static Locale.current.getter();
      uint64_t v439 = String.init(localized:table:bundle:locale:comment:)();
      v193 = v192;
      v429(v190, v181);
      sub_100BD6D08(v471, v172, v419);
      v194 = v410;
      uint64_t v195 = v445;
      v418(v410, v444, v445);
      uint64_t v196 = swift_allocObject();
      sub_100BD1148(v172, v196 + v177, v413);
      ((void (*)(char *, char *, uint64_t))v451)(&v415[v196], v194, v195);
      LOBYTE(v498[0]) = 0;
      State.init(wrappedValue:)();
      LODWORD(v451) = LOBYTE(v499._countAndFlagsBits);
      uint64_t v197 = (uint64_t)v499._object;
      unint64_t v198 = swift_getKeyPath();
      LOBYTE(v174) = static Edge.Set.top.getter();
      EdgeInsets.init(_all:)();
      uint64_t v200 = v199;
      uint64_t v202 = v201;
      uint64_t v204 = v203;
      uint64_t v206 = v205;
      uint64_t v207 = v450;
      sub_10006CAB8((uint64_t)v428, v450, &qword_1010CF230);
      LOBYTE(v499._countAndFlagsBits) = 0;
      uint64_t v208 = v207;
      uint64_t v209 = v414;
      sub_10006CAB8(v208, v414, &qword_1010CF230);
      uint64_t v210 = sub_100063814(&qword_1010CEDA0);
      uint64_t v211 = v209;
      uint64_t v212 = v209 + *(int *)(v210 + 48);
      unint64_t v213 = v447;
      *(void *)uint64_t v212 = v448;
      *(void *)(v212 + 8) = v213;
      *(unsigned char *)(v212 + 16) = 0;
      uint64_t v214 = v446;
      *(void *)(v212 + 24) = sub_100BD71E8;
      *(void *)(v212 + 32) = v214;
      *(unsigned char *)(v212 + 40) = v438;
      uint64_t v215 = v431;
      *(void *)(v212 + 48) = object;
      *(void *)(v212 + 56) = v215;
      *(unsigned char *)(v212 + 64) = 0;
      *(unsigned char *)(v212 + 72) = v430;
      *(void *)(v212 + 80) = v183;
      *(void *)(v212 + 88) = v185;
      *(void *)(v212 + 96) = v187;
      *(void *)(v212 + 104) = v189;
      *(unsigned char *)(v212 + 112) = 0;
      uint64_t v216 = v211 + *(int *)(v210 + 64);
      *(void *)uint64_t v216 = v439;
      *(void *)(v216 + 8) = v193;
      *(unsigned char *)(v216 + 16) = 1;
      *(void *)(v216 + 24) = sub_100BD75FC;
      *(void *)(v216 + 32) = v196;
      *(unsigned char *)(v216 + 40) = v451;
      *(void *)(v216 + 48) = v197;
      *(void *)(v216 + 56) = v198;
      *(unsigned char *)(v216 + 64) = 0;
      *(unsigned char *)(v216 + 72) = (_BYTE)v174;
      *(void *)(v216 + 80) = v200;
      *(void *)(v216 + 88) = v202;
      *(void *)(v216 + 96) = v204;
      *(void *)(v216 + 104) = v206;
      *(unsigned char *)(v216 + 112) = 0;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_100237EDC(v215, 0);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_100237EDC(v198, 0);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_100237EDC(v215, 0);
      v432 = (void (*)(char *, char *, uint64_t))v193;
      swift_bridgeObjectRetain();
      v429 = (void (*)(char *, uint64_t))v196;
      swift_retain();
      v470 = (void *)v197;
      swift_retain();
      unint64_t v471 = v198;
      sub_100237EDC(v198, 0);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_100237F44(v198, 0);
      LOBYTE(v214) = v499._countAndFlagsBits;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_100237F44(v215, v214);
      sub_1000637B8(v450, &qword_1010CF230);
      uint64_t v217 = v414;
      sub_10006CAB8(v414, v436, &qword_1010CECC0);
      swift_storeEnumTagMultiPayload();
      sub_100BD773C();
      sub_100063858(&qword_1010CEDD0, &qword_1010CECC0);
      uint64_t v218 = v464;
      _ConditionalContent<>.init(storage:)();
      sub_1000637B8(v217, &qword_1010CECC0);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_100237F44(v471, 0);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      sub_100237F44(v215, 0);
      sub_1000637B8((uint64_t)v428, &qword_1010CF230);
      (*(void (**)(char *, uint64_t))(v427 + 8))(v444, v445);
    }
    else
    {
      unint64_t v240 = v471 + *(int *)(v97 + 20);
      uint64_t v241 = *(void *)(v240 + 8);
      LOBYTE(v498[0]) = *(unsigned char *)v240;
      *((void *)&v498[0] + 1) = v241;
      uint64_t v450 = sub_100063814(&qword_1010CC190);
      State.projectedValue.getter();
      v242 = v371;
      Toggle.init(isOn:label:)();
      char v243 = static Edge.Set.all.getter();
      EdgeInsets.init(_all:)();
      uint64_t v245 = v244;
      uint64_t v247 = v246;
      uint64_t v249 = v248;
      uint64_t v251 = v250;
      uint64_t v253 = v372;
      uint64_t v252 = v373;
      uint64_t v254 = (uint64_t)v375;
      (*(void (**)(char *, char *, uint64_t))(v372 + 16))(v375, v242, v373);
      uint64_t v255 = v254 + *(int *)(v369 + 36);
      *(unsigned char *)uint64_t v255 = v243;
      *(void *)(v255 + 8) = v245;
      *(void *)(v255 + 16) = v247;
      *(void *)(v255 + 24) = v249;
      *(void *)(v255 + 32) = v251;
      *(unsigned char *)(v255 + 40) = 0;
      (*(void (**)(char *, uint64_t))(v253 + 8))(v242, v252);
      v256 = v376;
      static Material.thick.getter();
      char v257 = static Edge.Set.all.getter();
      uint64_t v258 = (uint64_t)v377;
      uint64_t v259 = v378;
      v260 = &v377[*(int *)(v370 + 36)];
      uint64_t v261 = v379;
      (*(void (**)(char *, char *, uint64_t))(v378 + 16))(v260, v256, v379);
      v260[*(int *)(sub_100063814(&qword_1010CCFF8) + 36)] = v257;
      sub_10006CAB8(v254, v258, &qword_1010CED00);
      (*(void (**)(char *, uint64_t))(v259 + 8))(v256, v261);
      sub_1000637B8(v254, &qword_1010CED00);
      v262 = v384;
      v263 = &v384[*(int *)(v383 + 20)];
      uint64_t v264 = enum case for RoundedCornerStyle.continuous(_:);
      uint64_t v265 = type metadata accessor for RoundedCornerStyle();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v265 - 8) + 104))(v263, v264, v265);
      __asm { FMOV            V0.2D, #16.0 }
      _OWORD *v262 = _Q0;
      uint64_t v271 = (uint64_t)v382;
      uint64_t v272 = (uint64_t)&v382[*(int *)(v374 + 36)];
      sub_100BD6D08((uint64_t)v262, v272, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
      *(_WORD *)(v272 + *(int *)(sub_100063814((uint64_t *)&unk_1010CEF20) + 36)) = 256;
      sub_10006CAB8(v258, v271, &qword_1010CED08);
      sub_100BD10C4((uint64_t)v262, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
      sub_1000637B8(v258, &qword_1010CED08);
      static Alignment.center.getter();
      _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
      uint64_t v273 = v381;
      sub_10006CAB8(v271, v381, &qword_1010CED10);
      v274 = (_OWORD *)(v273 + *(int *)(v380 + 36));
      long long v275 = v556;
      v274[4] = v555;
      v274[5] = v275;
      v274[6] = v557;
      long long v276 = v552;
      _OWORD *v274 = v551;
      v274[1] = v276;
      long long v277 = v554;
      v274[2] = v553;
      v274[3] = v277;
      sub_1000637B8(v271, &qword_1010CED10);
      sub_10003CABC(v273, (uint64_t)v429, &qword_1010CED18);
      v278 = *(void **)(v240 + 8);
      LOBYTE(v499._countAndFlagsBits) = *(unsigned char *)v240;
      v499._uint64_t object = v278;
      State.wrappedValue.getter();
      uint64_t v279 = v412;
      v280 = (void (**)(char *, char *, uint64_t))(v412 + 16);
      v281 = v425;
      String.LocalizationValue.init(stringLiteral:)();
      uint64_t v282 = v426;
      (*v280)(v424, v281, v426);
      if (qword_1010C8350 != -1) {
        swift_once();
      }
      id v283 = (id)qword_10112BE80;
      static Locale.current.getter();
      uint64_t v284 = String.init(localized:table:bundle:locale:comment:)();
      v286 = v285;
      (*(void (**)(char *, uint64_t))(v279 + 8))(v281, v282);
      v499._uint64_t countAndFlagsBits = v284;
      v499._uint64_t object = v286;
      uint64_t v287 = Text.init<A>(_:)();
      uint64_t v289 = v288;
      char v291 = v290 & 1;
      uint64_t v558 = v287;
      uint64_t v559 = v288;
      char v560 = v290 & 1;
      uint64_t v561 = v292;
      __int16 v562 = 256;
      static Alignment.leading.getter();
      sub_100BD9A74(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v534, 0.0, 1, 0.0, 1);
      sub_1000D1500(v287, v289, v291);
      swift_bridgeObjectRelease();
      uint64_t v293 = swift_getKeyPath();
      LODWORD(v287) = static HierarchicalShapeStyle.secondary.getter();
      uint64_t v294 = static Font.footnote.getter();
      uint64_t v295 = swift_getKeyPath();
      long long v481 = v534[7];
      long long v482 = v534[8];
      Swift::String v476 = (Swift::String)v534[2];
      long long v477 = v534[3];
      long long v478 = v534[4];
      long long v479 = v534[5];
      long long v480 = v534[6];
      Swift::String v474 = (Swift::String)v534[0];
      Swift::String v475 = (Swift::String)v534[1];
      *(void *)&long long v483 = v535;
      *((void *)&v483 + 1) = v293;
      LOBYTE(v484) = 0;
      *(_WORD *)((char *)&v484 + 1) = v539[0];
      BYTE3(v484) = BYTE2(v539[0]);
      DWORD1(v484) = v287;
      *((void *)&v484 + 1) = v295;
      uint64_t v485 = v294;
      LODWORD(v426) = static Edge.Set.horizontal.getter();
      EdgeInsets.init(_all:)();
      v424 = v297;
      v425 = v296;
      uint64_t v414 = v298;
      uint64_t v412 = v299;
      long long v494 = v482;
      long long v495 = v483;
      long long v496 = v484;
      uint64_t v497 = v485;
      long long v490 = v478;
      long long v491 = v479;
      long long v492 = v480;
      long long v493 = v481;
      Swift::String v486 = v474;
      Swift::String v487 = v475;
      Swift::String v488 = v476;
      long long v489 = v477;
      v536[0] = 0;
      LODWORD(v448) = static Edge.Set.top.getter();
      if (qword_1010C8748 != -1) {
        swift_once();
      }
      EdgeInsets.init(_all:)();
      uint64_t v301 = v300;
      uint64_t v303 = v302;
      uint64_t v305 = v304;
      uint64_t v307 = v306;
      LODWORD(v428) = v536[0];
      v537[0] = 0;
      LODWORD(v447) = static Edge.Set.bottom.getter();
      EdgeInsets.init(_all:)();
      uint64_t v445 = v308;
      v444 = v309;
      uint64_t v439 = v310;
      uint64_t v438 = v311;
      LODWORD(v427) = v537[0];
      LOBYTE(v538[0]) = 0;
      uint64_t v312 = Collaboration.Flow.buttonActionTitle.getter();
      v470 = (void *)v313;
      unint64_t v314 = v471;
      uint64_t v315 = v433;
      sub_100BD6D08(v471, v433, type metadata accessor for Collaboration.Flow.View);
      unint64_t v316 = (*(unsigned __int8 *)(v430 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v430 + 80);
      uint64_t v317 = swift_allocObject();
      sub_100BD1148(v315, v317 + v316, type metadata accessor for Collaboration.Flow.View);
      LOBYTE(v498[0]) = 0;
      State.init(wrappedValue:)();
      LOBYTE(v316) = v499._countAndFlagsBits;
      v318 = v499._object;
      uint64_t v319 = swift_getKeyPath();
      uint64_t v320 = swift_getKeyPath();
      uint64_t v321 = swift_allocObject();
      *(unsigned char *)(v321 + 16) = v451 & 1;
      v499._uint64_t countAndFlagsBits = v312;
      v499._uint64_t object = v470;
      LOBYTE(v500._countAndFlagsBits) = 0;
      v500._uint64_t object = sub_100BD7E08;
      v501._uint64_t countAndFlagsBits = v317;
      LOBYTE(v501._object) = v316;
      *(void *)&long long v502 = v318;
      *((void *)&v502 + 1) = v319;
      LOBYTE(v503) = 0;
      *((void *)&v503 + 1) = v320;
      *(void *)&long long v504 = sub_100BD9770;
      *((void *)&v504 + 1) = v321;
      unint64_t v322 = v314 + *(int *)(object + 24);
      char v323 = *(unsigned char *)v322;
      uint64_t v324 = *(void *)(v322 + 8);
      LOBYTE(v472[0]) = v323;
      uint64_t v473 = v324;
      State.projectedValue.getter();
      uint64_t v451 = (uint64_t)&v365;
      __chkstk_darwin();
      v470 = (void *)sub_100063814(&qword_1010CEDC0);
      unint64_t v471 = sub_100BD77DC();
      v325 = v415;
      View.alert(isPresented:content:)();
      swift_release();
      swift_release();
      uint64_t v326 = *((void *)&v502 + 1);
      LOBYTE(v319) = v503;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_100237F44(v326, v319);
      swift_release();
      swift_release();
      v327 = v413;
      sub_10006CAB8((uint64_t)v429, (uint64_t)v413, &qword_1010CED18);
      LOBYTE(v319) = v538[0];
      uint64_t v451 = *(void *)(v446 + 16);
      v328 = v401;
      ((void (*)(char *, char *, void))v451)(v401, v325, v432);
      uint64_t v329 = (uint64_t)v327;
      uint64_t v330 = v402;
      sub_10006CAB8(v329, v402, &qword_1010CED18);
      uint64_t v331 = sub_100063814(&qword_1010CEDE0);
      v332 = (void *)(v330 + *(int *)(v331 + 48));
      v498[8] = v494;
      v498[9] = v495;
      v498[10] = v496;
      *(void *)&v498[11] = v497;
      v498[4] = v490;
      v498[5] = v491;
      v498[6] = v492;
      v498[7] = v493;
      v498[0] = v486;
      v498[1] = v487;
      v498[2] = v488;
      v498[3] = v489;
      LOBYTE(v316) = v426;
      BYTE8(v498[11]) = v426;
      *(_DWORD *)((char *)&v498[11] + 9) = v542[0];
      HIDWORD(v498[11]) = *(_DWORD *)((char *)v542 + 3);
      v334 = v424;
      v333 = v425;
      *(void *)&v498[12] = v425;
      *((void *)&v498[12] + 1) = v424;
      uint64_t v335 = v414;
      uint64_t v336 = v412;
      *(void *)&v498[13] = v414;
      *((void *)&v498[13] + 1) = v412;
      LOBYTE(v498[14]) = (_BYTE)v428;
      *(_DWORD *)((char *)&v498[14] + 1) = *(_DWORD *)v547;
      DWORD1(v498[14]) = *(_DWORD *)&v547[3];
      BYTE8(v498[14]) = v448;
      HIDWORD(v498[14]) = *(_DWORD *)&v546[3];
      *(_DWORD *)((char *)&v498[14] + 9) = *(_DWORD *)v546;
      *(void *)&v498[15] = v301;
      *((void *)&v498[15] + 1) = v303;
      *(void *)&v498[16] = v305;
      *((void *)&v498[16] + 1) = v307;
      LOBYTE(v498[17]) = v427;
      *(_DWORD *)((char *)&v498[17] + 1) = v472[0];
      DWORD1(v498[17]) = *(_DWORD *)((char *)v472 + 3);
      BYTE8(v498[17]) = v447;
      *(_DWORD *)((char *)&v498[17] + 9) = *(_DWORD *)v548;
      HIDWORD(v498[17]) = *(_DWORD *)&v548[3];
      *(void *)&v498[18] = v445;
      *((void *)&v498[18] + 1) = v444;
      *(void *)&v498[19] = v439;
      *((void *)&v498[19] + 1) = v438;
      LOBYTE(v498[20]) = v319;
      memcpy(v332, v498, 0x141uLL);
      uint64_t v337 = v330 + *(int *)(v331 + 64);
      v338 = v432;
      ((void (*)(uint64_t, char *, void))v451)(v337, v328, v432);
      sub_100BD7E90((uint64_t)v498);
      sub_100BD7E90((uint64_t)&v474);
      v339 = *(void (**)(char *, void *))(v446 + 8);
      v446 += 8;
      uint64_t v451 = (uint64_t)v339;
      v339(v328, (void (*)(char *, char *, uint64_t))v338);
      long long v507 = v494;
      long long v508 = v495;
      long long v509 = v496;
      uint64_t v510 = v497;
      long long v503 = v490;
      long long v504 = v491;
      long long v505 = v492;
      long long v506 = v493;
      Swift::String v499 = v486;
      Swift::String v500 = v487;
      Swift::String v501 = v488;
      long long v502 = v489;
      char v511 = v316;
      *(_DWORD *)v512 = v542[0];
      *(_DWORD *)&v512[3] = *(_DWORD *)((char *)v542 + 3);
      v513 = v333;
      v514 = v334;
      uint64_t v515 = v335;
      uint64_t v516 = v336;
      char v517 = (char)v428;
      *(_DWORD *)v518 = *(_DWORD *)v547;
      *(_DWORD *)&v518[3] = *(_DWORD *)&v547[3];
      char v519 = v448;
      *(_DWORD *)&v520[3] = *(_DWORD *)&v546[3];
      *(_DWORD *)v520 = *(_DWORD *)v546;
      uint64_t v521 = v301;
      uint64_t v522 = v303;
      uint64_t v523 = v305;
      uint64_t v524 = v307;
      char v525 = v427;
      *(_DWORD *)v526 = v472[0];
      *(_DWORD *)&v526[3] = *(_DWORD *)((char *)v472 + 3);
      char v527 = v447;
      *(_DWORD *)v528 = *(_DWORD *)v548;
      *(_DWORD *)&v528[3] = *(_DWORD *)&v548[3];
      uint64_t v529 = v445;
      v530 = v444;
      uint64_t v531 = v439;
      uint64_t v532 = v438;
      char v533 = v319;
      sub_100BD7F00((uint64_t)&v499);
      sub_1000637B8((uint64_t)v413, &qword_1010CED18);
      sub_10006CAB8(v330, (uint64_t)v418, &qword_1010CECE0);
      swift_storeEnumTagMultiPayload();
      sub_100063858(&qword_1010CEDB0, &qword_1010CECE0);
      v340 = v419;
      _ConditionalContent<>.init(storage:)();
      sub_1000637B8(v330, &qword_1010CECE0);
      sub_10006CAB8((uint64_t)v340, v436, &qword_1010CECE8);
      swift_storeEnumTagMultiPayload();
      sub_100BD773C();
      sub_100063858(&qword_1010CEDD0, &qword_1010CECC0);
      uint64_t v218 = v464;
      _ConditionalContent<>.init(storage:)();
      sub_1000637B8((uint64_t)v340, &qword_1010CECE8);
      ((void (*)(char *, void (*)(char *, char *, uint64_t)))v451)(v415, v432);
      sub_100BD7F00((uint64_t)&v474);
      sub_1000637B8((uint64_t)v429, &qword_1010CED18);
    }
    uint64_t v112 = v405;
    uint64_t v104 = v406;
    uint64_t v108 = v422;
    uint64_t v106 = v423;
    uint64_t v118 = v420;
    uint64_t v110 = v421;
    uint64_t v116 = v403;
    uint64_t v114 = v404;
  }
  else
  {
    uint64_t v219 = sub_100063814(&qword_1010CE928);
    v220 = v407;
    uint64_t v221 = v408;
    v222 = *(void (**)(char *, uint64_t, uint64_t))(v408 + 32);
    uint64_t v223 = v409;
    v222(v407, v141 + *(int *)(v219 + 48), v409);
    uint64_t v450 = Collaboration.Flow.buttonActionTitle.getter();
    uint64_t v225 = v224;
    uint64_t v226 = v433;
    sub_100BD6D08(v471, v433, type metadata accessor for Collaboration.Flow.View);
    v227 = v386;
    (*(void (**)(char *, char *, uint64_t))(v221 + 16))(v386, v220, v223);
    unint64_t v228 = (*(unsigned __int8 *)(v430 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v430 + 80);
    unint64_t v229 = (v431 + *(unsigned __int8 *)(v221 + 80) + v228) & ~(unint64_t)*(unsigned __int8 *)(v221 + 80);
    uint64_t v230 = swift_allocObject();
    uint64_t v231 = v230 + v228;
    uint64_t v232 = v230;
    sub_100BD1148(v226, v231, type metadata accessor for Collaboration.Flow.View);
    v222((char *)(v232 + v229), (uint64_t)v227, v223);
    LOBYTE(v498[0]) = 0;
    State.init(wrappedValue:)();
    LOBYTE(v223) = v499._countAndFlagsBits;
    v233 = v499._object;
    uint64_t v234 = swift_getKeyPath();
    uint64_t v235 = swift_getKeyPath();
    uint64_t v236 = swift_allocObject();
    *(unsigned char *)(v236 + 16) = v140 & 1;
    v237 = v418;
    *(void *)v418 = v450;
    v237[1] = v225;
    v470 = (void *)v225;
    *((unsigned char *)v237 + 16) = 0;
    v237[3] = sub_100BD7DAC;
    v237[4] = v232;
    *((unsigned char *)v237 + 40) = v223;
    v237[6] = v233;
    v237[7] = v234;
    uint64_t v451 = v234;
    *((unsigned char *)v237 + 64) = 0;
    unint64_t v471 = v235;
    v237[9] = v235;
    v237[10] = sub_100BD9770;
    v237[11] = v236;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100237EDC(v234, 0);
    swift_retain();
    swift_retain();
    sub_100063814(&qword_1010CEDC0);
    sub_100063858(&qword_1010CEDB0, &qword_1010CECE0);
    sub_100BD77DC();
    v238 = v419;
    _ConditionalContent<>.init(storage:)();
    sub_10006CAB8((uint64_t)v238, v436, &qword_1010CECE8);
    swift_storeEnumTagMultiPayload();
    sub_100BD773C();
    sub_100063858(&qword_1010CEDD0, &qword_1010CECC0);
    uint64_t v239 = v464;
    _ConditionalContent<>.init(storage:)();
    uint64_t v218 = v239;
    sub_1000637B8((uint64_t)v238, &qword_1010CECE8);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100237F44(v451, 0);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v408 + 8))(v407, v409);
    sub_1000637B8(v448, &qword_1010CE930);
  }
  uint64_t v341 = v462;
  sub_10006CAB8((uint64_t)v465, v462, &qword_1010CED60);
  uint64_t v342 = v463;
  sub_10006CAB8(v466, v463, &qword_1010CED48);
  v542[0] = v534[0];
  *(_DWORD *)((char *)v542 + 3) = *(_DWORD *)((char *)v534 + 3);
  int v540 = v549;
  __int16 v541 = v550;
  v539[0] = v472[0];
  *(_DWORD *)((char *)v539 + 3) = *(_DWORD *)((char *)v472 + 3);
  *(_DWORD *)((char *)v538 + 3) = *(_DWORD *)&v548[3];
  v538[0] = *(_DWORD *)v548;
  *(_DWORD *)&v537[3] = *(_DWORD *)&v547[3];
  *(_DWORD *)v537 = *(_DWORD *)v547;
  *(_DWORD *)&v536[3] = *(_DWORD *)&v546[3];
  *(_DWORD *)v536 = *(_DWORD *)v546;
  LODWORD(v471) = v545;
  sub_10006CAB8(v469, v467, &qword_1010CED30);
  sub_10006CAB8(v218, v468, &qword_1010CED20);
  uint64_t v343 = v443;
  sub_10006CAB8(v341, v443, &qword_1010CED60);
  v344 = (int *)sub_100063814(&qword_1010CEDD8);
  sub_10006CAB8(v342, v343 + v344[12], &qword_1010CED48);
  uint64_t v345 = v343 + v344[16];
  uint64_t v346 = v459;
  uint64_t v347 = v458;
  *(void *)&v498[0] = v459;
  *((void *)&v498[0] + 1) = v458;
  LOBYTE(v498[1]) = v452;
  *(_DWORD *)((char *)&v498[1] + 1) = v534[0];
  DWORD1(v498[1]) = *(_DWORD *)((char *)v534 + 3);
  v348 = v442;
  *((void *)&v498[1] + 1) = v442;
  LOWORD(v498[2]) = 256;
  *(_DWORD *)((char *)&v498[2] + 2) = v549;
  WORD3(v498[2]) = v550;
  *((void *)&v498[2] + 1) = v460;
  *(void *)&v498[3] = v461;
  *((void *)&v498[3] + 1) = v441;
  uint64_t v349 = v441;
  LOBYTE(v498[4]) = 1;
  *(_DWORD *)((char *)&v498[4] + 1) = v472[0];
  DWORD1(v498[4]) = *(_DWORD *)((char *)v472 + 3);
  *((void *)&v498[4] + 1) = v456;
  *(void *)&v498[5] = v457;
  BYTE8(v498[5]) = v455;
  *(_DWORD *)((char *)&v498[5] + 9) = *(_DWORD *)v548;
  HIDWORD(v498[5]) = *(_DWORD *)&v548[3];
  *(void *)&v498[6] = v104;
  *((void *)&v498[6] + 1) = v106;
  *(void *)&v498[7] = v108;
  *((void *)&v498[7] + 1) = v110;
  LOBYTE(v498[8]) = v453;
  DWORD1(v498[8]) = *(_DWORD *)&v547[3];
  *(_DWORD *)((char *)&v498[8] + 1) = *(_DWORD *)v547;
  BYTE8(v498[8]) = v454;
  HIDWORD(v498[8]) = *(_DWORD *)&v546[3];
  *(_DWORD *)((char *)&v498[8] + 9) = *(_DWORD *)v546;
  *(void *)&v498[9] = v112;
  *((void *)&v498[9] + 1) = v114;
  *(void *)&v498[10] = v116;
  *((void *)&v498[10] + 1) = v118;
  LOBYTE(v498[11]) = v471;
  long long v351 = v498[8];
  long long v350 = v498[9];
  long long v352 = v498[10];
  *(unsigned char *)(v345 + 176) = v471;
  *(_OWORD *)(v345 + 144) = v350;
  *(_OWORD *)(v345 + 160) = v352;
  long long v353 = v498[0];
  long long v354 = v498[1];
  long long v355 = v498[3];
  *(_OWORD *)(v345 + 32) = v498[2];
  *(_OWORD *)(v345 + 48) = v355;
  *(_OWORD *)uint64_t v345 = v353;
  *(_OWORD *)(v345 + 16) = v354;
  long long v356 = v498[4];
  long long v357 = v498[5];
  long long v358 = v498[6];
  *(_OWORD *)(v345 + 112) = v498[7];
  *(_OWORD *)(v345 + 128) = v351;
  *(_OWORD *)(v345 + 80) = v357;
  *(_OWORD *)(v345 + 96) = v358;
  *(_OWORD *)(v345 + 64) = v356;
  sub_10006CAB8(v467, v343 + v344[20], &qword_1010CED30);
  sub_10006CAB8(v468, v343 + v344[24], &qword_1010CED20);
  sub_100BD78D0((uint64_t)v498);
  LOBYTE(v344) = v440 & 1;
  sub_1001CC8D0(v346, v347, v440 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  v359 = v461;
  swift_retain();
  uint64_t v360 = v349;
  swift_retain();
  v361 = v456;
  swift_retain();
  uint64_t v362 = v457;
  swift_retain();
  sub_1000637B8(v464, &qword_1010CED20);
  sub_1000637B8(v469, &qword_1010CED30);
  sub_1000D1500(v346, v347, (char)v344);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v363 = v460;
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000637B8(v466, &qword_1010CED48);
  sub_1000637B8((uint64_t)v465, &qword_1010CED60);
  sub_1000637B8(v468, &qword_1010CED20);
  sub_1000637B8(v467, &qword_1010CED30);
  v499._uint64_t countAndFlagsBits = v459;
  v499._uint64_t object = (void *)v458;
  LOBYTE(v500._countAndFlagsBits) = v452;
  *(_DWORD *)((char *)&v500._countAndFlagsBits + 1) = v542[0];
  HIDWORD(v500._countAndFlagsBits) = *(_DWORD *)((char *)v542 + 3);
  v500._uint64_t object = v348;
  LOWORD(v501._countAndFlagsBits) = 256;
  *(_DWORD *)((char *)&v501._countAndFlagsBits + 2) = v540;
  HIWORD(v501._countAndFlagsBits) = v541;
  v501._uint64_t object = (void *)v363;
  *(void *)&long long v502 = v359;
  *((void *)&v502 + 1) = v360;
  LOBYTE(v503) = 1;
  DWORD1(v503) = *(_DWORD *)((char *)v539 + 3);
  *(_DWORD *)((char *)&v503 + 1) = v539[0];
  *((void *)&v503 + 1) = v361;
  *(void *)&long long v504 = v362;
  BYTE8(v504) = v455;
  HIDWORD(v504) = *(_DWORD *)((char *)v538 + 3);
  *(_DWORD *)((char *)&v504 + 9) = v538[0];
  *(void *)&long long v505 = v104;
  *((void *)&v505 + 1) = v106;
  *(void *)&long long v506 = v108;
  *((void *)&v506 + 1) = v110;
  LOBYTE(v507) = v453;
  DWORD1(v507) = *(_DWORD *)&v537[3];
  *(_DWORD *)((char *)&v507 + 1) = *(_DWORD *)v537;
  BYTE8(v507) = v454;
  HIDWORD(v507) = *(_DWORD *)&v536[3];
  *(_DWORD *)((char *)&v507 + 9) = *(_DWORD *)v536;
  *(void *)&long long v508 = v112;
  *((void *)&v508 + 1) = v114;
  *(void *)&long long v509 = v116;
  *((void *)&v509 + 1) = v118;
  LOBYTE(v510) = v471;
  sub_100BD795C((uint64_t)&v499);
  sub_1000637B8(v463, &qword_1010CED48);
  return sub_1000637B8(v462, &qword_1010CED60);
}

uint64_t sub_100BCA3B8@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)v16 - v6;
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v7, v2);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  v16[1] = v9;
  v16[2] = v11;
  sub_10005D27C();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v13;
  *(unsigned char *)(a1 + 16) = v14 & 1;
  *(void *)(a1 + 24) = v15;
  return result;
}

uint64_t sub_100BCA5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CAA90);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_100BD6D08(a2, (uint64_t)v5, type metadata accessor for Collaboration.Flow.View);
  type metadata accessor for MainActor();
  uint64_t v9 = static MainActor.shared.getter();
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = &protocol witness table for MainActor;
  sub_100BD1148((uint64_t)v5, v11 + v10, type metadata accessor for Collaboration.Flow.View);
  sub_100066A94((uint64_t)v7, (uint64_t)&unk_1010CEE18, v11);
  return swift_release();
}

uint64_t sub_100BCA79C()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  unint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_100258C38;
  return sub_100BCA84C(0);
}

uint64_t sub_100BCA84C(char a1)
{
  v2[10] = v1;
  uint64_t v4 = type metadata accessor for DismissAction();
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = sub_100063814(&qword_1010CEDE8);
  v2[15] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Playlist();
  v2[16] = v5;
  v2[17] = *(void *)(v5 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = type metadata accessor for MainActor();
  v2[20] = static MainActor.shared.getter();
  type metadata accessor for Collaboration.Flow.View(0);
  if (a1)
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v2[21] = v6;
    *uint64_t v6 = v2;
    v6[1] = sub_100BCAA74;
    return Playlist.duplicate()();
  }
  else
  {
    uint64_t v8 = (void *)swift_task_alloc();
    v2[23] = v8;
    *uint64_t v8 = v2;
    v8[1] = sub_100BCAE20;
    return Playlist.hasUnsupportedContent.getter();
  }
}

uint64_t sub_100BCAA74()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100BCB8E0;
  }
  else {
    uint64_t v4 = sub_100BCABCC;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100BCABCC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  *(void *)(v0 + 192) = v2;
  if (*(unsigned char *)(v1 + v2[10]) == 1 && (uint64_t v3 = *(int **)(v1 + v2[11])) != 0)
  {
    type metadata accessor for InlineProfileEditingView.Context();
    sub_100BD9470(&qword_1010CEED0, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
    uint64_t v4 = StateObject.wrappedValue.getter();
    *(void *)(v0 + 200) = v4;
    char v14 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v5;
    void *v5 = v0;
    v5[1] = sub_100BCB3BC;
    return v14(v4);
  }
  else
  {
    uint64_t v7 = v1 + v2[8];
    uint64_t v8 = (char *)(v1 + v2[5]);
    char v9 = *v8;
    uint64_t v10 = *((void *)v8 + 1);
    *(unsigned char *)(v0 + 40) = v9;
    *(void *)(v0 + 48) = v10;
    sub_100063814(&qword_1010CC190);
    State.wrappedValue.getter();
    char v11 = *(unsigned char *)(v0 + 33);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v12;
    void *v12 = v0;
    v12[1] = sub_100BCB608;
    uint64_t v13 = *(void *)(v0 + 144);
    return Collaboration.Manager.start(_:isOpen:)(v13, v7, (v11 & 1) == 0);
  }
}

uint64_t sub_100BCAE20(char a1)
{
  *(unsigned char *)(*(void *)v1 + 35) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100BCAF64, v3, v2);
}

uint64_t sub_100BCAF64()
{
  if (*(unsigned char *)(v0 + 35) == 1)
  {
    swift_release();
    sub_100BD8338();
    uint64_t v1 = swift_allocError();
    *(_OWORD *)uint64_t v2 = xmmword_100E52690;
    *(unsigned char *)(v2 + 16) = 3;
    swift_willThrow();
    *(void *)(v0 + 72) = v1;
    swift_errorRetain();
    sub_100063814(&qword_1010C94D8);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *(void *)(v0 + 16);
      uint64_t v4 = *(void *)(v0 + 24);
      int v5 = *(unsigned __int8 *)(v0 + 32);
      if (v5 == 3 && v3 == 8 && !v4)
      {
        uint64_t v6 = *(void *)(v0 + 80);
        swift_errorRelease();
        uint64_t v7 = (char *)(v6 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
        char v8 = *v7;
        uint64_t v9 = *((void *)v7 + 1);
        *(unsigned char *)(v0 + 56) = v8;
        *(void *)(v0 + 64) = v9;
        *(unsigned char *)(v0 + 34) = 1;
        sub_100063814(&qword_1010CC190);
        State.wrappedValue.setter();
        swift_errorRelease();
LABEL_17:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
        return v29();
      }
      sub_1003D46C0(v3, v4, v5);
    }
    uint64_t v23 = *(uint64_t **)(v0 + 120);
    uint64_t v25 = *(void *)(v0 + 96);
    uint64_t v24 = *(void *)(v0 + 104);
    uint64_t v27 = *(void *)(v0 + 80);
    uint64_t v26 = *(void *)(v0 + 88);
    swift_errorRelease();
    *uint64_t v23 = v1;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    sub_100B6E244(v24);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
    uint64_t v28 = type metadata accessor for Collaboration.Flow.View(0);
    (*(void (**)(uint64_t *))(v27 + *(int *)(v28 + 48)))(v23);
    swift_errorRelease();
    sub_1000637B8((uint64_t)v23, &qword_1010CEDE8);
    goto LABEL_17;
  }
  uint64_t v10 = *(void *)(v0 + 80);
  char v11 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  *(void *)(v0 + 192) = v11;
  if (*(unsigned char *)(v10 + v11[10]) == 1 && (uint64_t v12 = *(int **)(v10 + v11[11])) != 0)
  {
    type metadata accessor for InlineProfileEditingView.Context();
    sub_100BD9470(&qword_1010CEED0, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
    uint64_t v13 = StateObject.wrappedValue.getter();
    *(void *)(v0 + 200) = v13;
    uint64_t v30 = (uint64_t (*)(uint64_t))((char *)v12 + *v12);
    char v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v14;
    *char v14 = v0;
    v14[1] = sub_100BCB3BC;
    return v30(v13);
  }
  else
  {
    uint64_t v16 = v10 + v11[8];
    uint64_t v17 = (char *)(v10 + v11[5]);
    char v18 = *v17;
    uint64_t v19 = *((void *)v17 + 1);
    *(unsigned char *)(v0 + 40) = v18;
    *(void *)(v0 + 48) = v19;
    sub_100063814(&qword_1010CC190);
    State.wrappedValue.getter();
    char v20 = *(unsigned char *)(v0 + 33);
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_100BCB608;
    uint64_t v22 = *(void *)(v0 + 144);
    return Collaboration.Manager.start(_:isOpen:)(v22, v16, (v20 & 1) == 0);
  }
}

uint64_t sub_100BCB3BC()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v3;
    int v5 = sub_100BCBACC;
  }
  else
  {
    swift_release();
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v6;
    int v5 = sub_100BCB50C;
  }
  return _swift_task_switch(v5, v2, v4);
}

uint64_t sub_100BCB50C()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = v2 + *(int *)(v1 + 32);
  uint64_t v4 = v2 + *(int *)(v1 + 20);
  LOBYTE(v2) = *(unsigned char *)v4;
  uint64_t v5 = *(void *)(v4 + 8);
  *(unsigned char *)(v0 + 40) = v2;
  *(void *)(v0 + 48) = v5;
  sub_100063814(&qword_1010CC190);
  State.wrappedValue.getter();
  char v6 = *(unsigned char *)(v0 + 33);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v7;
  void *v7 = v0;
  v7[1] = sub_100BCB608;
  uint64_t v8 = *(void *)(v0 + 144);
  return Collaboration.Manager.start(_:isOpen:)(v8, v3, (v6 & 1) == 0);
}

uint64_t sub_100BCB608()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100BCBCC8;
  }
  else {
    uint64_t v4 = sub_100BCB760;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100BCB760()
{
  uint64_t v11 = v0[24];
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[12];
  uint64_t v8 = v0[10];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, v1, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  swift_storeEnumTagMultiPayload();
  sub_100B6E244(v5);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t))(v8 + *(int *)(v11 + 48)))(v4);
  sub_1000637B8(v4, &qword_1010CEDE8);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100BCB8E0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 176);
  *(void *)(v0 + 72) = v1;
  swift_errorRetain();
  sub_100063814(&qword_1010C94D8);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  int v4 = *(unsigned __int8 *)(v0 + 32);
  if (v4 != 3 || v2 != 8 || v3 != 0)
  {
    sub_1003D46C0(v2, v3, v4);
LABEL_10:
    uint64_t v7 = *(void **)(v0 + 120);
    uint64_t v9 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v11 = *(void *)(v0 + 80);
    uint64_t v10 = *(void *)(v0 + 88);
    swift_errorRelease();
    void *v7 = v1;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    sub_100B6E244(v8);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    uint64_t v12 = type metadata accessor for Collaboration.Flow.View(0);
    (*(void (**)(void *))(v11 + *(int *)(v12 + 48)))(v7);
    swift_errorRelease();
    sub_1000637B8((uint64_t)v7, &qword_1010CEDE8);
    goto LABEL_11;
  }
  uint64_t v15 = *(void *)(v0 + 80);
  swift_errorRelease();
  uint64_t v16 = (char *)(v15 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
  char v17 = *v16;
  uint64_t v18 = *((void *)v16 + 1);
  *(unsigned char *)(v0 + 56) = v17;
  *(void *)(v0 + 64) = v18;
  *(unsigned char *)(v0 + 34) = 1;
  sub_100063814(&qword_1010CC190);
  State.wrappedValue.setter();
  swift_errorRelease();
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100BCBACC()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 216);
  *(void *)(v0 + 72) = v1;
  swift_errorRetain();
  sub_100063814(&qword_1010C94D8);
  if (swift_dynamicCast())
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v3 = *(void *)(v0 + 24);
    int v4 = *(unsigned __int8 *)(v0 + 32);
    if (v4 == 3 && v2 == 8 && !v3)
    {
      uint64_t v5 = *(void *)(v0 + 80);
      swift_errorRelease();
      uint64_t v6 = (char *)(v5 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
      char v7 = *v6;
      uint64_t v8 = *((void *)v6 + 1);
      *(unsigned char *)(v0 + 56) = v7;
      *(void *)(v0 + 64) = v8;
      *(unsigned char *)(v0 + 34) = 1;
      sub_100063814(&qword_1010CC190);
      State.wrappedValue.setter();
      swift_errorRelease();
      goto LABEL_8;
    }
    sub_1003D46C0(v2, v3, v4);
  }
  uint64_t v9 = *(void **)(v0 + 120);
  uint64_t v11 = *(void *)(v0 + 96);
  uint64_t v10 = *(void *)(v0 + 104);
  uint64_t v13 = *(void *)(v0 + 80);
  uint64_t v12 = *(void *)(v0 + 88);
  swift_errorRelease();
  *uint64_t v9 = v1;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  sub_100B6E244(v10);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  uint64_t v14 = type metadata accessor for Collaboration.Flow.View(0);
  (*(void (**)(void *))(v13 + *(int *)(v14 + 48)))(v9);
  swift_errorRelease();
  sub_1000637B8((uint64_t)v9, &qword_1010CEDE8);
LABEL_8:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_100BCBCC8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 232);
  *(void *)(v0 + 72) = v1;
  swift_errorRetain();
  sub_100063814(&qword_1010C94D8);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  int v4 = *(unsigned __int8 *)(v0 + 32);
  if (v4 != 3 || v2 != 8 || v3 != 0)
  {
    sub_1003D46C0(v2, v3, v4);
LABEL_10:
    char v7 = *(void **)(v0 + 120);
    uint64_t v9 = *(void *)(v0 + 96);
    uint64_t v8 = *(void *)(v0 + 104);
    uint64_t v11 = *(void *)(v0 + 80);
    uint64_t v10 = *(void *)(v0 + 88);
    swift_errorRelease();
    void *v7 = v1;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    sub_100B6E244(v8);
    DismissAction.callAsFunction()();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    uint64_t v12 = type metadata accessor for Collaboration.Flow.View(0);
    (*(void (**)(void *))(v11 + *(int *)(v12 + 48)))(v7);
    swift_errorRelease();
    sub_1000637B8((uint64_t)v7, &qword_1010CEDE8);
    goto LABEL_11;
  }
  uint64_t v15 = *(void *)(v0 + 80);
  swift_errorRelease();
  uint64_t v16 = (char *)(v15 + *(int *)(type metadata accessor for Collaboration.Flow.View(0) + 24));
  char v17 = *v16;
  uint64_t v18 = *((void *)v16 + 1);
  *(unsigned char *)(v0 + 56) = v17;
  *(void *)(v0 + 64) = v18;
  *(unsigned char *)(v0 + 34) = 1;
  sub_100063814(&qword_1010CC190);
  State.wrappedValue.setter();
  swift_errorRelease();
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_100BCBEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v56 = a2;
  uint64_t v52 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  __chkstk_darwin();
  uint64_t v53 = v2;
  uint64_t v54 = (uint64_t)v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Alert.Button();
  __chkstk_darwin();
  uint64_t v55 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v57 = (char *)v42 - v4;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)v42 - v9;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v11(v8, v10, v5);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v12 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v13 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v15 = v14;
  uint64_t v43 = *(uint64_t (**)(uint64_t))(v6 + 8);
  ((void (*)(char *, uint64_t))v43)(v10, v5);
  uint64_t v59 = v13;
  uint64_t v60 = v15;
  v42[1] = sub_10005D27C();
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v50 = v17;
  uint64_t v51 = v16;
  int v48 = v18;
  uint64_t v49 = v19;
  String.LocalizationValue.init(stringLiteral:)();
  v11(v8, v10, v5);
  id v20 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v21 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v23 = v22;
  uint64_t v24 = v43;
  ((void (*)(char *, uint64_t))v43)(v10, v5);
  uint64_t v59 = v21;
  uint64_t v60 = v23;
  uint64_t v25 = Text.init<A>(_:)();
  uint64_t v46 = v26;
  uint64_t v47 = v25;
  uint64_t v44 = v27 & 1;
  uint64_t v45 = v28;
  String.LocalizationValue.init(stringLiteral:)();
  v11(v8, v10, v5);
  id v29 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v30 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v32 = v31;
  ((void (*)(char *, uint64_t))v24)(v10, v5);
  uint64_t v59 = v30;
  uint64_t v60 = v32;
  uint64_t v33 = Text.init<A>(_:)();
  uint64_t v35 = v34;
  LOBYTE(v30) = v36 & 1;
  uint64_t v43 = type metadata accessor for Collaboration.Flow.View;
  uint64_t v37 = v54;
  sub_100BD6D08(v58, v54, type metadata accessor for Collaboration.Flow.View);
  unint64_t v38 = (*(unsigned __int8 *)(v52 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  uint64_t v39 = swift_allocObject();
  sub_100BD1148(v37, v39 + v38, type metadata accessor for Collaboration.Flow.View);
  static Alert.Button.default(_:action:)();
  sub_1000D1500(v33, v35, v30);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100BD6D08(v58, v37, v43);
  uint64_t v40 = swift_allocObject();
  sub_100BD1148(v37, v40 + v38, type metadata accessor for Collaboration.Flow.View);
  static Alert.Button.cancel(_:)();
  swift_release();
  return Alert.init(title:message:primaryButton:secondaryButton:)();
}

uint64_t sub_100BCC494(uint64_t a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CAA90);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_100BD6D08(a1, (uint64_t)v4, type metadata accessor for Collaboration.Flow.View);
  type metadata accessor for MainActor();
  uint64_t v8 = static MainActor.shared.getter();
  unint64_t v9 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v8;
  *(void *)(v10 + 24) = &protocol witness table for MainActor;
  sub_100BD1148((uint64_t)v4, v10 + v9, type metadata accessor for Collaboration.Flow.View);
  sub_100066A94((uint64_t)v6, (uint64_t)&unk_1010CEE00, v10);
  return swift_release();
}

uint64_t sub_100BCC668()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10000EFA8;
  return sub_100BCA84C(1);
}

uint64_t sub_100BCC718(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DismissAction();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CEDE8);
  __chkstk_darwin();
  uint64_t v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100BD8338();
  uint64_t v8 = swift_allocError();
  *(_OWORD *)uint64_t v9 = xmmword_100E52690;
  *(unsigned char *)(v9 + 16) = 3;
  uint64_t *v7 = v8;
  swift_storeEnumTagMultiPayload();
  sub_100B6E244((uint64_t)v5);
  DismissAction.callAsFunction()();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v10 = type metadata accessor for Collaboration.Flow.View(0);
  (*(void (**)(uint64_t *))(a1 + *(int *)(v10 + 48)))(v7);
  return sub_1000637B8((uint64_t)v7, &qword_1010CEDE8);
}

uint64_t sub_100BCC8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = type metadata accessor for DismissAction();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  v5[7] = sub_100063814(&qword_1010CEDE8);
  v5[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[10] = v8;
  v5[11] = v7;
  return _swift_task_switch(sub_100BCC9E4, v8, v7);
}

uint64_t sub_100BCC9E4()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  v0[12] = v2;
  if (*(unsigned char *)(v1 + v2[10]) == 1 && (uint64_t v3 = *(int **)(v1 + v2[11])) != 0)
  {
    type metadata accessor for InlineProfileEditingView.Context();
    sub_100BD9470(&qword_1010CEED0, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
    uint64_t v4 = StateObject.wrappedValue.getter();
    v0[13] = v4;
    uint64_t v10 = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[14] = v5;
    void *v5 = v0;
    v5[1] = sub_100BCCBF0;
    return v10(v4);
  }
  else
  {
    uint64_t v7 = v1 + v2[8];
    uint64_t v8 = (void *)swift_task_alloc();
    v0[16] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100BCCDB8;
    uint64_t v9 = v0[3];
    return Collaboration.Manager.join(_:url:)(v7, v9);
  }
}

uint64_t sub_100BCCBF0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_100BCD034;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    uint64_t v5 = sub_100BCCD0C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100BCCD0C()
{
  uint64_t v1 = v0[2] + *(int *)(v0[12] + 32);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[16] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100BCCDB8;
  uint64_t v3 = v0[3];
  return Collaboration.Manager.join(_:url:)(v1, v3);
}

uint64_t sub_100BCCDB8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v5 = sub_100BCD154;
  }
  else {
    uint64_t v5 = sub_100BCCEF4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100BCCEF4()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[2];
  swift_release();
  uint64_t v7 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  swift_storeEnumTagMultiPayload();
  sub_100B6E244(v3);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t))(v6 + *(int *)(v1 + 48)))(v2);
  sub_1000637B8(v2, &qword_1010CEDE8);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100BCD034()
{
  swift_release();
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = (void *)v0[8];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[2];
  swift_release();
  *uint64_t v3 = v1;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  sub_100B6E244(v4);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(void *))(v7 + *(int *)(v2 + 48)))(v3);
  swift_errorRelease();
  sub_1000637B8((uint64_t)v3, &qword_1010CEDE8);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100BCD154()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[12];
  uint64_t v3 = (void *)v0[8];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[2];
  swift_release();
  *uint64_t v3 = v1;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  sub_100B6E244(v4);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(void *))(v7 + *(int *)(v2 + 48)))(v3);
  swift_errorRelease();
  sub_1000637B8((uint64_t)v3, &qword_1010CEDE8);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100BCD26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = type metadata accessor for DismissAction();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  v5[7] = sub_100063814(&qword_1010CEDE8);
  v5[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[10] = v8;
  v5[11] = v7;
  return _swift_task_switch(sub_100BCD394, v8, v7);
}

uint64_t sub_100BCD394()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = type metadata accessor for Collaboration.Flow.View(0);
  v0[12] = v2;
  uint64_t v3 = v1 + *(int *)(v2 + 32);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100BCD44C;
  uint64_t v5 = v0[3];
  return Collaboration.Manager.moderate(_:collaborator:in:)(0, v5, v3);
}

uint64_t sub_100BCD44C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v5 = sub_100BCD588;
  }
  else {
    uint64_t v5 = sub_100BCCEF4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100BCD588()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v3 = (void *)v0[8];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[2];
  swift_release();
  *uint64_t v3 = v1;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  sub_100B6E244(v4);
  DismissAction.callAsFunction()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(void *))(v7 + *(int *)(v2 + 48)))(v3);
  swift_errorRelease();
  sub_1000637B8((uint64_t)v3, &qword_1010CEDE8);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100BCD6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  uint64_t v8 = a4(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v23 - v10;
  uint64_t v12 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CAA90);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_100BD6D08(a2, (uint64_t)v14, type metadata accessor for Collaboration.Flow.View);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  type metadata accessor for MainActor();
  uint64_t v18 = static MainActor.shared.getter();
  unint64_t v19 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v20 = (v13 + *(unsigned __int8 *)(v9 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v18;
  *(void *)(v21 + 24) = &protocol witness table for MainActor;
  sub_100BD1148((uint64_t)v14, v21 + v19, type metadata accessor for Collaboration.Flow.View);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v21 + v20, v11, v8);
  sub_100066A94((uint64_t)v16, v24, v21);
  return swift_release();
}

uint64_t sub_100BCD948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = type metadata accessor for DismissAction();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  v5[7] = sub_100063814(&qword_1010CEDE8);
  v5[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[10] = v8;
  v5[11] = v7;
  return _swift_task_switch(sub_100BCDA70, v8, v7);
}

uint64_t sub_100BCDA70()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = type metadata accessor for Collaboration.Flow.View(0);
  v0[12] = v2;
  uint64_t v3 = v1 + *(int *)(v2 + 32);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100BCDB28;
  uint64_t v5 = v0[3];
  return Collaboration.Manager.moderate(_:collaborator:in:)(1, v5, v3);
}

uint64_t sub_100BCDB28()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v5 = sub_100BD9760;
  }
  else {
    uint64_t v5 = sub_100BD975C;
  }
  return _swift_task_switch(v5, v4, v3);
}

id _s9MusicCore13CollaborationO0aB2UIE4FlowO4ViewV13_isRestricted33_4FA82EB282576B4095E3FA5F35E498B8LL05SwiftD05StateVySbGvpfi_0()
{
  id v0 = [self defaultIdentityStore];
  sub_100BD9430();
  id v1 = static ICUserIdentity.active.getter();
  id v7 = 0;
  id v2 = [v0 getPropertiesForUserIdentity:v1 error:&v7];

  if (v2)
  {
    id v3 = v7;
    id v4 = [v2 isU18MinorAccount];
  }
  else
  {
    id v5 = v7;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    return 0;
  }
  return v4;
}

uint64_t sub_100BCDD7C()
{
  return InlineProfileEditingView.Context.init()();
}

uint64_t sub_100BCDDB4@<X0>(uint64_t a1@<X8>)
{
  return sub_100BCED94(0, &qword_1010CE940, (uint64_t (*)(uint64_t))sub_100BC6E50, a1);
}

uint64_t sub_100BCDDD8@<X0>(uint64_t *a1@<X8>)
{
  sub_100063814(&qword_1010CE6C0);
  __chkstk_darwin();
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  Image.init(systemName:)();
  static SymbolRenderingMode.hierarchical.getter();
  uint64_t v4 = type metadata accessor for SymbolRenderingMode();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 0, 1, v4);
  uint64_t v5 = Image.symbolRenderingMode(_:)();
  swift_release();
  sub_1000637B8((uint64_t)v3, &qword_1010CE6C0);
  uint64_t v6 = static Color.accentColor.getter();
  uint64_t result = swift_getKeyPath();
  *a1 = v5;
  a1[1] = result;
  a1[2] = v6;
  return result;
}

uint64_t sub_100BCDF08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v135 = a2;
  uint64_t v136 = type metadata accessor for Font.Leading();
  uint64_t v127 = *(void *)(v136 - 8);
  __chkstk_darwin();
  uint64_t v126 = (char *)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_100063814(&qword_1010CB458);
  __chkstk_darwin();
  uint64_t v121 = (uint64_t *)((char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100063814(&qword_1010CB460);
  __chkstk_darwin();
  uint64_t v120 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v134 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for String.LocalizationValue();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v110 - v11;
  uint64_t v111 = sub_100063814(&qword_1010CB468);
  __chkstk_darwin();
  uint64_t v114 = (char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_100063814(&qword_1010CB470);
  __chkstk_darwin();
  uint64_t v115 = (uint64_t)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100063814((uint64_t *)&unk_1010CF170);
  __chkstk_darwin();
  uint64_t v117 = (uint64_t)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CEC78);
  __chkstk_darwin();
  uint64_t v119 = (uint64_t)&v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100063814(&qword_1010CEC80);
  uint64_t v130 = *(void *)(v17 - 8);
  uint64_t v131 = v17;
  __chkstk_darwin();
  uint64_t v116 = (uint64_t)&v110 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v110 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v23 = (char *)&v110 - v22;
  sub_100063814(&qword_1010CEC88);
  __chkstk_darwin();
  uint64_t v138 = (uint64_t)&v110 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v26 = (char *)&v110 - v25;
  uint64_t v27 = *(int *)(_s4FlowO18ProfileEditingViewVMa(0) + 20);
  uint64_t v133 = a1;
  uint64_t v128 = a1 + v27;
  sub_100BD6D08(a1 + v27, (uint64_t)v23, type metadata accessor for Collaboration.Flow);
  unint64_t v132 = v19;
  swift_storeEnumTagMultiPayload();
  LOBYTE(a1) = _s9MusicCore13CollaborationO0aB2UIE4FlowO21__derived_enum_equalsySbAF_AFtFZ_0((uint64_t)v23, (uint64_t)v21);
  uint64_t v129 = v21;
  sub_100BD10C4((uint64_t)v21, type metadata accessor for Collaboration.Flow);
  sub_100BD10C4((uint64_t)v23, type metadata accessor for Collaboration.Flow);
  uint64_t v137 = v26;
  uint64_t v124 = v8;
  uint64_t v125 = v7;
  uint64_t v122 = v10;
  uint64_t v123 = v12;
  if (a1)
  {
    uint64_t v28 = 1;
    uint64_t v29 = v136;
    uint64_t v30 = v131;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v12, v7);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    id v31 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v32 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v34 = v33;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    uint64_t v166 = v32;
    uint64_t v167 = v34;
    sub_10005D27C();
    uint64_t v35 = Text.init<A>(_:)();
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    LOBYTE(v32) = v40 & 1;
    uint64_t v41 = enum case for Text.Case.uppercase(_:);
    uint64_t v42 = type metadata accessor for Text.Case();
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v44 = (uint64_t)v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 104))(v120, v41, v42);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v44, 0, 1, v42);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v46 = v121;
    sub_10006CAB8(v44, (uint64_t)v121 + *(int *)(v118 + 28), &qword_1010CB460);
    *uint64_t v46 = KeyPath;
    uint64_t v47 = (uint64_t)v114;
    sub_10006CAB8((uint64_t)v46, (uint64_t)&v114[*(int *)(v111 + 36)], &qword_1010CB458);
    *(void *)uint64_t v47 = v35;
    *(void *)(v47 + 8) = v37;
    *(unsigned char *)(v47 + 16) = v32;
    *(void *)(v47 + 24) = v39;
    sub_1001CC8D0(v35, v37, v32);
    swift_bridgeObjectRetain();
    sub_1000637B8((uint64_t)v46, &qword_1010CB458);
    sub_1000637B8(v44, &qword_1010CB460);
    sub_1000D1500(v35, v37, v32);
    swift_bridgeObjectRelease();
    uint64_t v48 = static Font.footnote.getter();
    uint64_t v49 = swift_getKeyPath();
    uint64_t v50 = v115;
    sub_10006CAB8(v47, v115, &qword_1010CB468);
    uint64_t v51 = (uint64_t *)(v50 + *(int *)(v112 + 36));
    *uint64_t v51 = v49;
    v51[1] = v48;
    sub_1000637B8(v47, &qword_1010CB468);
    uint64_t v52 = static Color.secondary.getter();
    uint64_t v53 = swift_getKeyPath();
    uint64_t v54 = v117;
    sub_10006CAB8(v50, v117, &qword_1010CB470);
    uint64_t v55 = (uint64_t *)(v54 + *(int *)(v113 + 36));
    *uint64_t v55 = v53;
    v55[1] = v52;
    sub_1000637B8(v50, &qword_1010CB470);
    uint64_t v56 = static Alignment.leading.getter();
    uint64_t v57 = v119;
    sub_100BD9C44(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v119, 0.0, 1, 0.0, 1, v56, v58);
    sub_1000637B8(v54, (uint64_t *)&unk_1010CF170);
    LOBYTE(v52) = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v60 = v59;
    uint64_t v62 = v61;
    uint64_t v64 = v63;
    uint64_t v66 = v65;
    uint64_t v67 = v116;
    sub_10006CAB8(v57, v116, &qword_1010CEC78);
    uint64_t v30 = v131;
    uint64_t v68 = v67 + *(int *)(v131 + 36);
    *(unsigned char *)uint64_t v68 = v52;
    *(void *)(v68 + 8) = v60;
    *(void *)(v68 + 16) = v62;
    *(void *)(v68 + 24) = v64;
    *(void *)(v68 + 32) = v66;
    *(unsigned char *)(v68 + 40) = 0;
    sub_1000637B8(v57, &qword_1010CEC78);
    uint64_t v26 = v137;
    sub_10003CABC(v67, (uint64_t)v137, &qword_1010CEC80);
    uint64_t v28 = 0;
    uint64_t v29 = v136;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v130 + 56))(v26, v28, 1, v30);
  swift_retain();
  sub_100BDF6AC(&v168);
  sub_100BD6D08(v128, (uint64_t)v23, type metadata accessor for Collaboration.Flow);
  uint64_t v69 = (uint64_t)v129;
  swift_storeEnumTagMultiPayload();
  char v70 = _s9MusicCore13CollaborationO0aB2UIE4FlowO21__derived_enum_equalsySbAF_AFtFZ_0((uint64_t)v23, v69);
  sub_100BD10C4(v69, type metadata accessor for Collaboration.Flow);
  sub_100BD10C4((uint64_t)v23, type metadata accessor for Collaboration.Flow);
  if (v70)
  {
    sub_100BD6FB0((uint64_t)v145);
    sub_10003CABC((uint64_t)v145, (uint64_t)&v166, &qword_1010CEC90);
  }
  else
  {
    uint64_t v71 = v123;
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v73 = v124;
    uint64_t v72 = v125;
    (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v122, v71, v125);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    id v74 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v75 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v77 = v76;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v72);
    uint64_t v166 = v75;
    uint64_t v167 = v77;
    sub_10005D27C();
    uint64_t v78 = Text.init<A>(_:)();
    uint64_t v80 = v79;
    char v82 = v81;
    uint64_t v136 = v83;
    uint64_t v134 = (char *)swift_getKeyPath();
    static Font.footnote.getter();
    uint64_t v85 = v126;
    uint64_t v84 = v127;
    (*(void (**)(char *, void, uint64_t))(v127 + 104))(v126, enum case for Font.Leading.tight(_:), v29);
    uint64_t v86 = Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v29);
    uint64_t v87 = swift_getKeyPath();
    uint64_t v88 = static Color.secondary.getter();
    uint64_t v89 = swift_getKeyPath();
    LOBYTE(v84) = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    char v144 = v82 & 1;
    char v141 = 0;
    v145[0] = v78;
    v145[1] = v80;
    char v146 = v82 & 1;
    *(_DWORD *)uint64_t v147 = *(_DWORD *)v140;
    *(_DWORD *)&v147[3] = *(_DWORD *)&v140[3];
    uint64_t v148 = v136;
    __int16 v149 = 256;
    int v150 = *(_DWORD *)&v142[7];
    __int16 v151 = v143;
    uint64_t v152 = v134;
    char v153 = 1;
    *(_DWORD *)&v154[3] = *(_DWORD *)&v139[3];
    *(_DWORD *)v154 = *(_DWORD *)v139;
    uint64_t v155 = v87;
    uint64_t v156 = v86;
    uint64_t v157 = v89;
    uint64_t v158 = v88;
    char v159 = v84;
    *(_DWORD *)&v160[3] = *(_DWORD *)&v142[3];
    *(_DWORD *)uint64_t v160 = *(_DWORD *)v142;
    double v161 = v90;
    uint64_t v162 = v91;
    uint64_t v163 = v92;
    uint64_t v164 = v93;
    char v165 = 0;
    UIScreen.Dimensions.size.getter(v90);
    sub_10003CABC((uint64_t)v145, (uint64_t)&v166, &qword_1010CEC90);
    uint64_t v26 = v137;
  }
  uint64_t v94 = v138;
  sub_10006CAB8((uint64_t)v26, v138, &qword_1010CEC88);
  unint64_t v95 = v168.n128_u64[1];
  char v96 = v169;
  uint64_t v97 = v170;
  char v98 = v171;
  uint64_t v99 = v172;
  char v100 = v173;
  uint64_t v136 = v174;
  uint64_t v101 = v176;
  unint64_t v132 = v175;
  uint64_t v133 = v177;
  uint64_t v134 = (char *)v168.n128_u64[0];
  sub_10003CABC((uint64_t)&v166, (uint64_t)v139, &qword_1010CEC90);
  uint64_t v102 = v135;
  sub_10006CAB8(v94, v135, &qword_1010CEC88);
  uint64_t v103 = sub_100063814(&qword_1010CEC98);
  uint64_t v104 = v102 + *(int *)(v103 + 48);
  char v105 = v100 & 1;
  uint64_t v106 = v133;
  *(void *)uint64_t v104 = v134;
  *(void *)(v104 + 8) = v95;
  *(unsigned char *)(v104 + 16) = v96 & 1;
  *(void *)(v104 + 24) = v97;
  *(unsigned char *)(v104 + 32) = v98 & 1;
  *(void *)(v104 + 40) = v99;
  *(unsigned char *)(v104 + 48) = v105;
  unint64_t v107 = v132;
  *(void *)(v104 + 56) = v136;
  *(void *)(v104 + 64) = v107;
  *(void *)(v104 + 72) = v101;
  *(void *)(v104 + 80) = v106;
  uint64_t v108 = v102 + *(int *)(v103 + 64);
  sub_10003CABC((uint64_t)v139, (uint64_t)v140, &qword_1010CEC90);
  sub_10003CABC((uint64_t)v140, v108, &qword_1010CEC90);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100478D74(v107, v101);
  swift_retain();
  sub_100BD6EB8((uint64_t)v140, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100BD6E2C);
  sub_1000637B8((uint64_t)v137, &qword_1010CEC88);
  sub_10003CABC((uint64_t)v139, (uint64_t)v145, &qword_1010CEC90);
  sub_100BD6EB8((uint64_t)v145, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100BD6F24);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_100478FB0(v107, v101);
  swift_release();
  return sub_1000637B8(v138, &qword_1010CEC88);
}

uint64_t sub_100BCED70@<X0>(uint64_t a1@<X8>)
{
  return sub_100BCED94(0x4018000000000000, &qword_1010CEC70, (uint64_t (*)(uint64_t))sub_100BCDF08, a1);
}

uint64_t sub_100BCED94@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t a4@<X8>)
{
  *(void *)a4 = static HorizontalAlignment.center.getter();
  *(void *)(a4 + 8) = a1;
  *(unsigned char *)(a4 + 16) = 0;
  sub_100063814(a2);
  return a3(v4);
}

uint64_t sub_100BCEDF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v74 = a1;
  uint64_t v66 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin();
  uint64_t v72 = (double *)((char *)v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v71 = sub_100063814(&qword_1010CEBE0);
  __chkstk_darwin();
  uint64_t v73 = (uint64_t)v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100063814(&qword_1010CEBE8);
  uint64_t v5 = *(void *)(v61 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814((uint64_t *)&unk_1010CF160) - 8;
  __chkstk_darwin();
  uint64_t v10 = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CEBF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100063814(&qword_1010CEBF8);
  __chkstk_darwin();
  uint64_t v14 = (char *)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_100063814(&qword_1010CEC00);
  __chkstk_darwin();
  uint64_t v63 = (uint64_t)v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100063814(&qword_1010CEC08);
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin();
  uint64_t v68 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100063814(&qword_1010CEC10);
  __chkstk_darwin();
  uint64_t v67 = (char *)v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_allocObject();
  long long v19 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v18 + 64) = v19;
  *(unsigned char *)(v18 + 80) = *(unsigned char *)(v1 + 64);
  long long v20 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v18 + 32) = v20;
  uint64_t v75 = v1;
  sub_100BD68D0(v1);
  sub_100063814(&qword_1010CEC18);
  sub_100BD6938();
  Button.init(action:label:)();
  long long v85 = *(_OWORD *)(v1 + 40);
  long long v78 = *(_OWORD *)(v1 + 40);
  v60[1] = sub_100063814(&qword_1010CC190);
  State.wrappedValue.getter();
  char v21 = v76;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = swift_allocObject();
  *(unsigned char *)(v23 + 16) = v21;
  uint64_t v24 = v61;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, v7, v61);
  uint64_t v25 = (uint64_t *)&v10[*(int *)(v8 + 44)];
  *uint64_t v25 = KeyPath;
  v25[1] = (uint64_t)sub_100632744;
  v25[2] = v23;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
  uint64_t v26 = static Alignment.center.getter();
  sub_100BD9CA0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v12, 0.0, 1, 0.0, 1, v26, v27);
  sub_1000637B8((uint64_t)v10, (uint64_t *)&unk_1010CF160);
  char v28 = *(unsigned char *)(v2 + 16);
  if (v28) {
    uint64_t v29 = static Color.accentColor.getter();
  }
  else {
    uint64_t v29 = static Color.white.getter();
  }
  uint64_t v30 = v29;
  uint64_t v31 = swift_getKeyPath();
  sub_10006CAB8((uint64_t)v12, (uint64_t)v14, &qword_1010CEBF0);
  uint64_t v32 = (uint64_t *)&v14[*(int *)(v62 + 36)];
  *uint64_t v32 = v31;
  v32[1] = v30;
  sub_1000637B8((uint64_t)v12, &qword_1010CEBF0);
  uint64_t v33 = v68;
  if (qword_1010C8718 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v34 = v63;
  sub_10006CAB8((uint64_t)v14, v63, &qword_1010CEBF8);
  uint64_t v35 = (_OWORD *)(v34 + *(int *)(v64 + 36));
  long long v36 = v83;
  v35[4] = v82;
  v35[5] = v36;
  v35[6] = v84;
  long long v37 = v79;
  *uint64_t v35 = v78;
  v35[1] = v37;
  long long v38 = v81;
  v35[2] = v80;
  v35[3] = v38;
  sub_1000637B8((uint64_t)v14, &qword_1010CEBF8);
  sub_100BD6BC4(&qword_1010CEC38, &qword_1010CEC00, (void (*)(void))sub_100BD6B00);
  View.bold(_:)();
  sub_1000637B8(v34, &qword_1010CEC00);
  double v39 = *(double *)&qword_1010CE8E0 * 0.5;
  char v40 = v72;
  uint64_t v41 = (char *)v72 + *(int *)(v66 + 20);
  uint64_t v42 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v43 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 104))(v41, v42, v43);
  *char v40 = v39;
  v40[1] = v39;
  uint64_t v44 = *(void *)(v2 + 56);
  LOBYTE(v42) = *(unsigned char *)(v2 + 64);
  sub_100237EDC(v44, v42);
  char v45 = sub_100B6E784(v44, v42);
  sub_100237F44(v44, v42);
  if ((v45 & 1) != 0 || (long long v76 = v85, State.wrappedValue.getter(), v77 == 1))
  {
    if (v28) {
      uint64_t v46 = static Color.clear.getter();
    }
    else {
      uint64_t v46 = static Color.accentColor.getter();
    }
  }
  else
  {
    id v47 = [self systemFillColor];
    uint64_t v46 = Color.init(_:)();
  }
  uint64_t v48 = v46;
  uint64_t v49 = v73;
  sub_100BD6D08((uint64_t)v40, v73, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v50 = v71;
  *(void *)(v49 + *(int *)(v71 + 52)) = v48;
  *(_WORD *)(v49 + *(int *)(v50 + 56)) = 256;
  sub_100BD10C4((uint64_t)v40, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v51 = static Alignment.center.getter();
  uint64_t v53 = v52;
  uint64_t v54 = (uint64_t)v67;
  uint64_t v55 = (uint64_t)&v67[*(int *)(v65 + 36)];
  sub_10006CAB8(v49, v55, &qword_1010CEBE0);
  uint64_t v56 = (uint64_t *)(v55 + *(int *)(sub_100063814(&qword_1010CEC60) + 36));
  uint64_t *v56 = v51;
  v56[1] = v53;
  uint64_t v57 = v69;
  uint64_t v58 = v70;
  (*(void (**)(uint64_t, char *, uint64_t))(v69 + 16))(v54, v33, v70);
  sub_1000637B8(v49, &qword_1010CEBE0);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v58);
  return sub_10003CABC(v54, v74, &qword_1010CEC10);
}

uint64_t sub_100BCF780(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 24))(a1);
}

uint64_t sub_100BCF7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v35[1] = a2;
  v35[0] = sub_100063814(&qword_1010CEC68);
  __chkstk_darwin();
  uint64_t v4 = (_OWORD *)((char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100063814(&qword_1010CDF18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100063814(&qword_1010CEC30);
  __chkstk_darwin();
  uint64_t v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v12 = (char *)v35 - v11;
  long long v46 = *(_OWORD *)(a1 + 40);
  sub_100063814(&qword_1010CC190);
  State.wrappedValue.getter();
  if (v37 == 1)
  {
    ProgressView<>.init<>()();
    uint64_t v13 = static Color.white.getter();
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v5);
    uint64_t v15 = (uint64_t *)&v10[*(int *)(v36 + 36)];
    *uint64_t v15 = KeyPath;
    v15[1] = v13;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_10003CABC((uint64_t)v10, (uint64_t)v12, &qword_1010CEC30);
    sub_10006CAB8((uint64_t)v12, (uint64_t)v4, &qword_1010CEC30);
    swift_storeEnumTagMultiPayload();
    sub_100063814(&qword_1010CE450);
    sub_100BD69CC();
    sub_100BD7178(&qword_1010CE448, &qword_1010CE450);
    _ConditionalContent<>.init(storage:)();
    return sub_1000637B8((uint64_t)v12, &qword_1010CEC30);
  }
  else
  {
    uint64_t v17 = *(void *)(a1 + 8);
    *(void *)&long long v46 = *(void *)a1;
    *((void *)&v46 + 1) = v17;
    sub_10005D27C();
    swift_bridgeObjectRetain();
    uint64_t v18 = Text.init<A>(_:)();
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    char v24 = v23 & 1;
    uint64_t v25 = static Alignment.center.getter();
    sub_100623A58(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v37, 0.0, 1, 0.0, 1, v25, v26, v18, v20, v24, v22);
    sub_1000D1500(v18, v20, v24);
    swift_bridgeObjectRelease();
    long long v27 = v44;
    long long v52 = v43;
    long long v53 = v44;
    long long v28 = v45;
    long long v54 = v45;
    long long v29 = v39;
    long long v30 = v40;
    long long v48 = v39;
    long long v49 = v40;
    long long v32 = v41;
    long long v31 = v42;
    long long v50 = v41;
    long long v51 = v42;
    long long v34 = v37;
    long long v33 = v38;
    long long v46 = v37;
    long long v47 = v38;
    void v4[6] = v43;
    v4[7] = v27;
    v4[8] = v28;
    v4[2] = v29;
    v4[3] = v30;
    v4[4] = v32;
    void v4[5] = v31;
    *uint64_t v4 = v34;
    v4[1] = v33;
    swift_storeEnumTagMultiPayload();
    sub_100063814(&qword_1010CE450);
    sub_100BD69CC();
    sub_100BD7178(&qword_1010CE448, &qword_1010CE450);
    return _ConditionalContent<>.init(storage:)();
  }
}

void sub_100BCFBE0()
{
  id v0 = [self currentTraitCollection];
  id v1 = [v0 userInterfaceIdiom];

  double v2 = 50.0;
  if (v1 == (id)6) {
    double v2 = 44.0;
  }
  qword_1010CE8E0 = *(void *)&v2;
}

uint64_t sub_100BCFC54@<X0>(uint64_t a1@<X8>)
{
  return sub_100BCEDF8(a1);
}

void sub_100BCFC98()
{
  id v0 = [self currentTraitCollection];
  id v1 = [v0 userInterfaceIdiom];

  byte_1010CE8E8 = v1 == (id)6;
}

uint64_t sub_100BCFCFC()
{
  if (qword_1010C8720 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 180.0;
  if (byte_1010CE8E8) {
    double v0 = 140.0;
  }
  qword_1010CE8F0 = *(void *)&v0;
  return result;
}

uint64_t sub_100BCFD70()
{
  if (qword_1010C8720 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 24.0;
  if (byte_1010CE8E8) {
    double v0 = 16.0;
  }
  qword_1010CE8F8 = *(void *)&v0;
  return result;
}

uint64_t sub_100BCFDD4()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010C8720 != -1) {
    swift_once();
  }
  if (byte_1010CE8E8 == 1)
  {
    uint64_t result = static Font.subheadline.getter();
    uint64_t v5 = result;
  }
  else
  {
    static Font.body.getter();
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.Leading.tight(_:), v0);
    uint64_t v5 = Font.leading(_:)();
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  qword_1010CE900 = v5;
  return result;
}

uint64_t sub_100BCFF30()
{
  sub_100063814(&qword_1010CC290);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v5 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010C8720 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Font.Design();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = static Font.system(size:weight:design:)();
  uint64_t result = sub_1000637B8((uint64_t)v1, &qword_1010CC290);
  qword_1010CE908 = v3;
  return result;
}

uint64_t sub_100BD0060()
{
  if (qword_1010C8720 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = 6.0;
  if (byte_1010CE8E8) {
    double v0 = 9.0;
  }
  qword_1010CE910 = *(void *)&v0;
  return result;
}

uint64_t ICMusicUserProfile.collaborator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v3 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100063814((uint64_t *)&unk_1010CEE80);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = type metadata accessor for Artwork();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 56);
  uint64_t v37 = v12;
  uint64_t v35 = v13 + 56;
  v36(v11, 1, 1);
  id v14 = [v2 artworkInfo];
  if (v14)
  {
    uint64_t v15 = v14;
    id v16 = [v14 responseDictionary];

    if (v16)
    {
      uint64_t v17 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v18 = sub_100048B48(v17);
      swift_bridgeObjectRelease();
      if (v18)
      {
        Artwork.init(_:)();
        sub_1000637B8((uint64_t)v11, (uint64_t *)&unk_1010CEE80);
        sub_10003CABC((uint64_t)v8, (uint64_t)v11, (uint64_t *)&unk_1010CEE80);
      }
    }
  }
  id v19 = [v2 name];
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  id v22 = [v2 handle];
  if (v22)
  {
    char v23 = v22;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v26 = 0;
  }
  sub_10006CAB8((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_1010CEE80);
  unsigned __int8 v27 = [v2 collaborationAllowed];
  uint64_t v28 = (uint64_t)v8;
  uint64_t v29 = v3;
  uint64_t v30 = (uint64_t)v5 + *(int *)(v3 + 24);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v36)(v30, 1, 1, v37);
  uint64_t v31 = *(int *)(v29 + 28);
  *((unsigned char *)v5 + v31) = 0;
  uint64_t *v5 = v34;
  v5[1] = v21;
  v5[2] = v24;
  v5[3] = v26;
  sub_100BC54B4(v28, v30);
  *((unsigned char *)v5 + v31) = v27;
  sub_100BD1148((uint64_t)v5, v38, type metadata accessor for Collaboration.Flow.Collaborator);
  return sub_1000637B8((uint64_t)v11, (uint64_t *)&unk_1010CEE80);
}

uint64_t sub_100BD03D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100BD0404()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t _s9MusicCore13CollaborationO0aB2UIE4FlowO21__derived_enum_equalsySbAF_AFtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v69 = (unsigned char *)a1;
  uint64_t v70 = (unsigned char *)a2;
  uint64_t v2 = type metadata accessor for Playlist.Collaborator();
  uint64_t v65 = *(unsigned char **)(v2 - 8);
  uint64_t v66 = (void *)v2;
  __chkstk_darwin();
  uint64_t v64 = &v57[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for Collaboration.Flow.Collaborator(0);
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v62 = v4;
  __chkstk_darwin();
  uint64_t v59 = &v57[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v60 = sub_100063814(&qword_1010CECB0);
  __chkstk_darwin();
  uint64_t v63 = &v57[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  uint64_t v68 = v8;
  __chkstk_darwin();
  uint64_t v10 = &v57[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v12 = &v57[-v11];
  sub_100063814(&qword_1010CE930);
  __chkstk_darwin();
  id v14 = &v57[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  id v16 = &v57[-v15];
  type metadata accessor for Collaboration.Flow(0);
  __chkstk_darwin();
  unint64_t v18 = &v57[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v20 = &v57[-v19];
  sub_100063814(&qword_1010CECB8);
  __chkstk_darwin();
  id v22 = &v57[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = (uint64_t)&v22[*(int *)(v23 + 56)];
  sub_100BD6D08((uint64_t)v69, (uint64_t)v22, type metadata accessor for Collaboration.Flow);
  sub_100BD6D08((uint64_t)v70, v24, type metadata accessor for Collaboration.Flow);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v66 = v14;
    uint64_t v69 = v16;
    uint64_t v70 = v12;
    uint64_t v31 = v67;
    sub_100BD6D08((uint64_t)v22, (uint64_t)v20, type metadata accessor for Collaboration.Flow);
    uint64_t v32 = sub_100063814(&qword_1010CE928);
    uint64_t v33 = *(int *)(v32 + 48);
    uint64_t v34 = &v20[v33];
    uint64_t v35 = *(int *)(v32 + 64);
    int v36 = v20[v35];
    if (swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(unsigned char *, uint64_t))(v68 + 8))(&v20[v33], v31);
      sub_1000637B8((uint64_t)v20, &qword_1010CE930);
LABEL_10:
      sub_1000637B8((uint64_t)v22, &qword_1010CECB8);
LABEL_11:
      char v29 = 0;
      return v29 & 1;
    }
    LODWORD(v64) = v36;
    uint64_t v38 = (unsigned char *)(v24 + v33);
    int v58 = *(unsigned __int8 *)(v24 + v35);
    uint64_t v39 = v24;
    uint64_t v40 = (uint64_t)v69;
    sub_10003CABC(v39, (uint64_t)v69, &qword_1010CE930);
    long long v41 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v68 + 32);
    v41(v70, v34, v31);
    uint64_t v65 = v10;
    v41(v10, v38, v31);
    long long v42 = v63;
    uint64_t v43 = (uint64_t)&v63[*(int *)(v60 + 48)];
    sub_10003CABC((uint64_t)v20, (uint64_t)v63, &qword_1010CE930);
    sub_10006CAB8(v40, v43, &qword_1010CE930);
    uint64_t v44 = v62;
    long long v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
    if (v45((uint64_t)v42, 1, v62) == 1)
    {
      if (v45(v43, 1, v44) == 1)
      {
        sub_1000637B8((uint64_t)v42, &qword_1010CE930);
        uint64_t v47 = v68;
        uint64_t v46 = (uint64_t)v69;
        uint64_t v48 = (uint64_t)v70;
        goto LABEL_21;
      }
    }
    else
    {
      long long v49 = v66;
      sub_10006CAB8((uint64_t)v42, (uint64_t)v66, &qword_1010CE930);
      if (v45(v43, 1, v44) != 1)
      {
        long long v51 = v59;
        sub_100BD1148(v43, (uint64_t)v59, type metadata accessor for Collaboration.Flow.Collaborator);
        char v52 = _s9MusicCore13CollaborationO0aB2UIE4FlowO12CollaboratorV23__derived_struct_equalsySbAH_AHtFZ_0(v49, v51);
        sub_100BD10C4((uint64_t)v51, type metadata accessor for Collaboration.Flow.Collaborator);
        sub_100BD10C4((uint64_t)v49, type metadata accessor for Collaboration.Flow.Collaborator);
        sub_1000637B8((uint64_t)v42, &qword_1010CE930);
        uint64_t v47 = v68;
        uint64_t v46 = (uint64_t)v69;
        uint64_t v48 = (uint64_t)v70;
        if (v52)
        {
LABEL_21:
          long long v53 = v65;
          char v54 = static URL.== infix(_:_:)();
          uint64_t v55 = *(void (**)(unsigned char *, uint64_t))(v47 + 8);
          v55(v53, v31);
          v55((unsigned char *)v48, v31);
          sub_1000637B8(v46, &qword_1010CE930);
          if (v54)
          {
            char v56 = v64 ^ v58;
            sub_100BD10C4((uint64_t)v22, type metadata accessor for Collaboration.Flow);
            char v29 = v56 ^ 1;
            return v29 & 1;
          }
          goto LABEL_23;
        }
LABEL_19:
        long long v50 = *(void (**)(unsigned char *, uint64_t))(v47 + 8);
        v50(v65, v31);
        v50((unsigned char *)v48, v31);
        sub_1000637B8(v46, &qword_1010CE930);
LABEL_23:
        sub_100BD10C4((uint64_t)v22, type metadata accessor for Collaboration.Flow);
        goto LABEL_11;
      }
      sub_100BD10C4((uint64_t)v49, type metadata accessor for Collaboration.Flow.Collaborator);
    }
    sub_1000637B8((uint64_t)v42, &qword_1010CECB0);
    uint64_t v47 = v68;
    uint64_t v46 = (uint64_t)v69;
    uint64_t v48 = (uint64_t)v70;
    goto LABEL_19;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_100BD10C4((uint64_t)v22, type metadata accessor for Collaboration.Flow);
      char v29 = 1;
      return v29 & 1;
    }
    goto LABEL_10;
  }
  sub_100BD6D08((uint64_t)v22, (uint64_t)v18, type metadata accessor for Collaboration.Flow);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*((void (**)(unsigned char *, void *))v65 + 1))(v18, v66);
    goto LABEL_10;
  }
  unsigned __int8 v27 = v64;
  uint64_t v26 = v65;
  uint64_t v28 = (uint64_t)v66;
  (*((void (**)(unsigned char *, uint64_t, void *))v65 + 4))(v64, v24, v66);
  char v29 = static Playlist.Collaborator.== infix(_:_:)();
  uint64_t v30 = (void (*)(unsigned char *, uint64_t))*((void *)v26 + 1);
  v30(v27, v28);
  v30(v18, v28);
  sub_100BD10C4((uint64_t)v22, type metadata accessor for Collaboration.Flow);
  return v29 & 1;
}

uint64_t _s9MusicCore13CollaborationO0aB2UIE4FlowO12CollaboratorV23__derived_struct_equalsySbAH_AHtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Artwork();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100063814(&qword_1010C9A20);
  __chkstk_darwin();
  uint64_t v10 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100063814((uint64_t *)&unk_1010CEE80);
  __chkstk_darwin();
  uint64_t v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  id v14 = &v31[-v13];
  __chkstk_darwin();
  id v16 = &v31[-v15];
  if (*a1 == *a2 && a1[1] == a2[1] || (char v17 = _stringCompareWithSmolCheck(_:_:expecting:)(), v18 = 0, (v17 & 1) != 0))
  {
    uint64_t v19 = a1[3];
    uint64_t v20 = a2[3];
    if (v19)
    {
      if (!v20) {
        goto LABEL_19;
      }
      if (a1[2] != a2[2] || v19 != v20)
      {
        char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v18 = 0;
        if ((v21 & 1) == 0) {
          return v18 & 1;
        }
      }
    }
    else if (v20)
    {
      goto LABEL_19;
    }
    int v36 = v12;
    uint64_t v33 = v7;
    uint64_t v22 = v5;
    uint64_t v23 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    sub_10006CAB8((uint64_t)a1 + *(int *)(v23 + 24), (uint64_t)v16, (uint64_t *)&unk_1010CEE80);
    uint64_t v34 = v23;
    sub_10006CAB8((uint64_t)a2 + *(int *)(v23 + 24), (uint64_t)v14, (uint64_t *)&unk_1010CEE80);
    uint64_t v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_10006CAB8((uint64_t)v16, (uint64_t)v10, (uint64_t *)&unk_1010CEE80);
    sub_10006CAB8((uint64_t)v14, v24, (uint64_t *)&unk_1010CEE80);
    uint64_t v35 = v22;
    uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
    if (v25((uint64_t)v10, 1, v4) == 1)
    {
      sub_1000637B8((uint64_t)v14, (uint64_t *)&unk_1010CEE80);
      sub_1000637B8((uint64_t)v16, (uint64_t *)&unk_1010CEE80);
      if (v25(v24, 1, v4) == 1)
      {
        sub_1000637B8((uint64_t)v10, (uint64_t *)&unk_1010CEE80);
LABEL_18:
        char v18 = *((unsigned char *)a1 + *(int *)(v34 + 28)) ^ *((unsigned char *)a2 + *(int *)(v34 + 28)) ^ 1;
        return v18 & 1;
      }
      goto LABEL_16;
    }
    uint64_t v26 = (uint64_t)v36;
    sub_10006CAB8((uint64_t)v10, (uint64_t)v36, (uint64_t *)&unk_1010CEE80);
    if (v25(v24, 1, v4) == 1)
    {
      sub_1000637B8((uint64_t)v14, (uint64_t *)&unk_1010CEE80);
      sub_1000637B8((uint64_t)v16, (uint64_t *)&unk_1010CEE80);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v26, v4);
LABEL_16:
      sub_1000637B8((uint64_t)v10, &qword_1010C9A20);
      goto LABEL_19;
    }
    uint64_t v27 = v35;
    uint64_t v28 = v33;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v35 + 32))(v33, v24, v4);
    sub_100BD9470(&qword_1010CE2B0, (void (*)(uint64_t))&type metadata accessor for Artwork);
    int v32 = dispatch thunk of static Equatable.== infix(_:_:)();
    char v29 = *(void (**)(unsigned char *, uint64_t))(v27 + 8);
    v29(v28, v4);
    sub_1000637B8((uint64_t)v14, (uint64_t *)&unk_1010CEE80);
    sub_1000637B8((uint64_t)v16, (uint64_t *)&unk_1010CEE80);
    v29((unsigned char *)v26, v4);
    sub_1000637B8((uint64_t)v10, (uint64_t *)&unk_1010CEE80);
    if (v32) {
      goto LABEL_18;
    }
LABEL_19:
    char v18 = 0;
  }
  return v18 & 1;
}

uint64_t type metadata accessor for Collaboration.Flow(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CE9B8);
}

uint64_t sub_100BD10C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for Collaboration.Flow.View(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010CEAE8);
}

uint64_t sub_100BD1148(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100BD11B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *_s4FlowOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = sub_100063814(&qword_1010CE930);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        uint64_t v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        uint64_t v14 = a2[3];
        a1[2] = a2[2];
        a1[3] = v14;
        uint64_t v15 = *(int *)(v8 + 24);
        __dst = (char *)a1 + v15;
        uint64_t v26 = (char *)a2 + v15;
        uint64_t v16 = type metadata accessor for Artwork();
        uint64_t v17 = *(void *)(v16 - 8);
        char v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v18(v26, 1, v16))
        {
          uint64_t v19 = sub_100063814((uint64_t *)&unk_1010CEE80);
          memcpy(__dst, v26, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v26, v16);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
        }
        *((unsigned char *)a1 + *(int *)(v8 + 28)) = *((unsigned char *)a2 + *(int *)(v8 + 28));
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v20 = sub_100063814(&qword_1010CE928);
      uint64_t v21 = *(int *)(v20 + 48);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      *((unsigned char *)a1 + *(int *)(v20 + 64)) = *((unsigned char *)a2 + *(int *)(v20 + 64));
      goto LABEL_14;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t _s4FlowOwxx(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v7 = type metadata accessor for Playlist.Collaborator();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 1, v3))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = a1 + *(int *)(v3 + 24);
      uint64_t v5 = type metadata accessor for Artwork();
      uint64_t v6 = *(void *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      }
    }
    a1 += *(int *)(sub_100063814(&qword_1010CE928) + 48);
    uint64_t v7 = type metadata accessor for URL();
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(a1, v7);
}

void *_s4FlowOwcp(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100063814(&qword_1010CE930);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      uint64_t v13 = *(int *)(v7 + 24);
      __dst = (char *)a1 + v13;
      uint64_t v25 = (char *)a2 + v13;
      uint64_t v14 = type metadata accessor for Artwork();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16(v25, 1, v14))
      {
        uint64_t v17 = sub_100063814((uint64_t *)&unk_1010CEE80);
        memcpy(__dst, v25, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v25, v14);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
      }
      *((unsigned char *)a1 + *(int *)(v7 + 28)) = *((unsigned char *)a2 + *(int *)(v7 + 28));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v18 = sub_100063814(&qword_1010CE928);
    uint64_t v19 = *(int *)(v18 + 48);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    *((unsigned char *)a1 + *(int *)(v18 + 64)) = *((unsigned char *)a2 + *(int *)(v18 + 64));
    goto LABEL_12;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *_s4FlowOwca(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100BD10C4((uint64_t)a1, type metadata accessor for Collaboration.Flow);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_100063814(&qword_1010CE930);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        uint64_t v11 = *(int *)(v7 + 24);
        __dst = (char *)a1 + v11;
        uint64_t v22 = (char *)a2 + v11;
        uint64_t v12 = type metadata accessor for Artwork();
        uint64_t v13 = *(void *)(v12 - 8);
        uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v14(v22, 1, v12))
        {
          uint64_t v15 = sub_100063814((uint64_t *)&unk_1010CEE80);
          memcpy(__dst, v22, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v22, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
        }
        *((unsigned char *)a1 + *(int *)(v7 + 28)) = *((unsigned char *)a2 + *(int *)(v7 + 28));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v16 = sub_100063814(&qword_1010CE928);
      uint64_t v17 = *(int *)(v16 + 48);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      *((unsigned char *)a1 + *(int *)(v16 + 64)) = *((unsigned char *)a2 + *(int *)(v16 + 64));
      goto LABEL_13;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *_s4FlowOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100063814(&qword_1010CE930);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      long long v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = *(int *)(v7 + 24);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for Artwork();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_100063814((uint64_t *)&unk_1010CEE80);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      *((unsigned char *)a1 + *(int *)(v7 + 28)) = *((unsigned char *)a2 + *(int *)(v7 + 28));
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v18 = sub_100063814(&qword_1010CE928);
    uint64_t v19 = *(int *)(v18 + 48);
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    *((unsigned char *)a1 + *(int *)(v18 + 64)) = *((unsigned char *)a2 + *(int *)(v18 + 64));
    goto LABEL_12;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *_s4FlowOwta(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100BD10C4((uint64_t)a1, type metadata accessor for Collaboration.Flow);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = sub_100063814(&qword_1010CE930);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        long long v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        uint64_t v12 = *(int *)(v7 + 24);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = type metadata accessor for Artwork();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        {
          uint64_t v17 = sub_100063814((uint64_t *)&unk_1010CEE80);
          memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        }
        *((unsigned char *)a1 + *(int *)(v7 + 28)) = *((unsigned char *)a2 + *(int *)(v7 + 28));
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v18 = sub_100063814(&qword_1010CE928);
      uint64_t v19 = *(int *)(v18 + 48);
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      *((unsigned char *)a1 + *(int *)(v18 + 64)) = *((unsigned char *)a2 + *(int *)(v18 + 64));
      goto LABEL_13;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_100BD2344()
{
  sub_100BD2F74(319, (unint64_t *)&unk_1010CE9C8, type metadata accessor for Collaboration.Flow.Collaborator, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F)
  {
    type metadata accessor for URL();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      v4[4] = v4;
      uint64_t v2 = type metadata accessor for Playlist.Collaborator();
      if (v3 <= 0x3F)
      {
        void v4[5] = *(void *)(v2 - 8) + 64;
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

void *_s4FlowO12CollaboratorVwCP(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = type metadata accessor for Artwork();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100063814((uint64_t *)&unk_1010CEE80);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    *((unsigned char *)v4 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t _s4FlowO12CollaboratorVwxx(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Artwork();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *_s4FlowO12CollaboratorVwcp(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Artwork();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100063814((uint64_t *)&unk_1010CEE80);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *_s4FlowO12CollaboratorVwca(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Artwork();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100063814((uint64_t *)&unk_1010CEE80);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_OWORD *_s4FlowO12CollaboratorVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Artwork();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100063814((uint64_t *)&unk_1010CEE80);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *_s4FlowO12CollaboratorVwta(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Artwork();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_100063814((uint64_t *)&unk_1010CEE80);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t _s4FlowO12CollaboratorVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BD2D28);
}

uint64_t sub_100BD2D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814((uint64_t *)&unk_1010CEE80);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t _s4FlowO12CollaboratorVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BD2DF0);
}

uint64_t sub_100BD2DF0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814((uint64_t *)&unk_1010CEE80);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100BD2E9C()
{
  sub_100BD2F74(319, (unint64_t *)&unk_1010CDBA8, (uint64_t (*)(uint64_t))&type metadata accessor for Artwork, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100BD2F74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *_s4FlowO4ViewVwCP(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v9;
  uint64_t v12 = (char *)a2 + v9;
  char *v11 = *v12;
  *((void *)v11 + 1) = *((void *)v12 + 1);
  int v13 = (char *)a1 + v10;
  int v14 = (char *)a2 + v10;
  *int v13 = *v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = type metadata accessor for Collaboration.Flow(0);
  swift_retain();
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v23 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v16, v17, v23);
LABEL_17:
    swift_storeEnumTagMultiPayload();
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v20 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20))
    {
      uint64_t v22 = sub_100063814(&qword_1010CE930);
      memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      uint64_t v24 = v17[1];
      *uint64_t v16 = *v17;
      v16[1] = v24;
      uint64_t v25 = v17[3];
      v16[2] = v17[2];
      v16[3] = v25;
      uint64_t v26 = *(int *)(v20 + 24);
      __dst = (char *)v16 + v26;
      uint64_t v59 = v21;
      uint64_t v57 = (char *)v17 + v26;
      uint64_t v27 = type metadata accessor for Artwork();
      uint64_t v55 = *(void *)(v27 - 8);
      char v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v56(v57, 1, v27))
      {
        uint64_t v28 = sub_100063814((uint64_t *)&unk_1010CEE80);
        memcpy(__dst, v57, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(__dst, v57, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(__dst, 0, 1, v27);
      }
      *((unsigned char *)v16 + *(int *)(v20 + 28)) = *((unsigned char *)v17 + *(int *)(v20 + 28));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(v16, 0, 1, v20);
    }
    uint64_t v29 = sub_100063814(&qword_1010CE928);
    uint64_t v30 = *(int *)(v29 + 48);
    uint64_t v31 = (char *)v16 + v30;
    int v32 = (char *)v17 + v30;
    uint64_t v33 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    *((unsigned char *)v16 + *(int *)(v29 + 64)) = *((unsigned char *)v17 + *(int *)(v29 + 64));
    goto LABEL_17;
  }
  memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
LABEL_18:
  uint64_t v34 = a3[8];
  uint64_t v35 = (char *)a1 + v34;
  int v36 = (char *)a2 + v34;
  uint64_t v37 = type metadata accessor for Playlist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  uint64_t v38 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *((unsigned char *)a1 + v38) = *((unsigned char *)a2 + v38);
  uint64_t v39 = a3[11];
  uint64_t v40 = (void *)((char *)a1 + v39);
  long long v41 = (char *)a2 + v39;
  uint64_t v42 = *(void *)((char *)a2 + v39);
  swift_retain();
  if (v42)
  {
    uint64_t v43 = *((void *)v41 + 1);
    *uint64_t v40 = v42;
    v40[1] = v43;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  }
  uint64_t v44 = a3[12];
  uint64_t v45 = a3[13];
  uint64_t v46 = (void *)((char *)a1 + v44);
  uint64_t v47 = (void *)((char *)a2 + v44);
  uint64_t v48 = v47[1];
  *uint64_t v46 = *v47;
  v46[1] = v48;
  long long v49 = (char *)a1 + v45;
  long long v50 = (char *)a2 + v45;
  uint64_t v51 = *(void *)((char *)a2 + v45);
  uint64_t v52 = *((void *)v50 + 1);
  char v53 = v50[16];
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter();
  *(void *)long long v49 = v51;
  *((void *)v49 + 1) = v52;
  v49[16] = v53;
  return a1;
}

uint64_t _s4FlowO4ViewVwxx(uint64_t a1, int *a2)
{
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v5 = a1 + a2[7];
  type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = type metadata accessor for Playlist.Collaborator();
  }
  else
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_12;
    }
    uint64_t v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v5 + *(int *)(v7 + 24);
      uint64_t v9 = type metadata accessor for Artwork();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
    }
    v5 += *(int *)(sub_100063814(&qword_1010CE928) + 48);
    uint64_t v11 = type metadata accessor for URL();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v5, v11);
LABEL_12:
  uint64_t v12 = a1 + a2[8];
  uint64_t v13 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  if (*(void *)(a1 + a2[11])) {
    swift_release();
  }
  swift_release();

  return sub_10020EEF0();
}

void *_s4FlowO4ViewVwcp(void *a1, void *a2, int *a3)
{
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v7;
  uint64_t v10 = (char *)a2 + v7;
  *uint64_t v9 = *v10;
  *((void *)v9 + 1) = *((void *)v10 + 1);
  uint64_t v11 = (char *)a1 + v8;
  uint64_t v12 = (char *)a2 + v8;
  char *v11 = *v12;
  *((void *)v11 + 1) = *((void *)v12 + 1);
  uint64_t v13 = a3[7];
  int v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = type metadata accessor for Collaboration.Flow(0);
  swift_retain();
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v21 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v14, v15, v21);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      goto LABEL_16;
    }
    uint64_t v18 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
    {
      uint64_t v20 = sub_100063814(&qword_1010CE930);
      memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v22 = v15[1];
      *int v14 = *v15;
      v14[1] = v22;
      uint64_t v23 = v15[3];
      void v14[2] = v15[2];
      v14[3] = v23;
      uint64_t v24 = *(int *)(v18 + 24);
      __dst = (char *)v14 + v24;
      uint64_t v55 = v19;
      uint64_t v57 = (char *)v15 + v24;
      uint64_t v25 = type metadata accessor for Artwork();
      uint64_t v53 = *(void *)(v25 - 8);
      char v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v56(v57, 1, v25))
      {
        uint64_t v26 = sub_100063814((uint64_t *)&unk_1010CEE80);
        memcpy(__dst, v57, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(__dst, v57, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(__dst, 0, 1, v25);
      }
      *((unsigned char *)v14 + *(int *)(v18 + 28)) = *((unsigned char *)v15 + *(int *)(v18 + 28));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v14, 0, 1, v18);
    }
    uint64_t v27 = sub_100063814(&qword_1010CE928);
    uint64_t v28 = *(int *)(v27 + 48);
    uint64_t v29 = (char *)v14 + v28;
    uint64_t v30 = (char *)v15 + v28;
    uint64_t v31 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    *((unsigned char *)v14 + *(int *)(v27 + 64)) = *((unsigned char *)v15 + *(int *)(v27 + 64));
  }
  swift_storeEnumTagMultiPayload();
LABEL_16:
  uint64_t v32 = a3[8];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = type metadata accessor for Playlist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  uint64_t v36 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *((unsigned char *)a1 + v36) = *((unsigned char *)a2 + v36);
  uint64_t v37 = a3[11];
  uint64_t v38 = (void *)((char *)a1 + v37);
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = *(void *)((char *)a2 + v37);
  swift_retain();
  if (v40)
  {
    uint64_t v41 = *((void *)v39 + 1);
    void *v38 = v40;
    v38[1] = v41;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  }
  uint64_t v42 = a3[12];
  uint64_t v43 = a3[13];
  uint64_t v44 = (void *)((char *)a1 + v42);
  uint64_t v45 = (void *)((char *)a2 + v42);
  uint64_t v46 = v45[1];
  *uint64_t v44 = *v45;
  v44[1] = v46;
  uint64_t v47 = (char *)a1 + v43;
  uint64_t v48 = (char *)a2 + v43;
  uint64_t v49 = *(void *)((char *)a2 + v43);
  uint64_t v50 = *((void *)v48 + 1);
  char v51 = v48[16];
  swift_retain();
  KeyValueObservationTrigger.keyPath.getter();
  *(void *)uint64_t v47 = v49;
  *((void *)v47 + 1) = v50;
  v47[16] = v51;
  return a1;
}

void *_s4FlowO4ViewVwca(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000637B8((uint64_t)a1, &qword_1010C8950);
    sub_100063814(&qword_1010C8950);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *uint64_t v8 = *v9;
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_retain();
  swift_release();
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char *v11 = *v12;
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v13 = a3[7];
    int v14 = (void *)((char *)a1 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    sub_100BD10C4((uint64_t)a1 + v13, type metadata accessor for Collaboration.Flow);
    uint64_t v16 = type metadata accessor for Collaboration.Flow(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v21 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v14, v15, v21);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        goto LABEL_19;
      }
      uint64_t v18 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
      {
        uint64_t v20 = sub_100063814(&qword_1010CE930);
        memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        *int v14 = *v15;
        v14[1] = v15[1];
        void v14[2] = v15[2];
        v14[3] = v15[3];
        uint64_t v22 = *(int *)(v18 + 24);
        __dst = (char *)v14 + v22;
        uint64_t v56 = v19;
        char v54 = (char *)v15 + v22;
        uint64_t v23 = type metadata accessor for Artwork();
        uint64_t v52 = *(void *)(v23 - 8);
        uint64_t v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v53(v54, 1, v23))
        {
          uint64_t v24 = sub_100063814((uint64_t *)&unk_1010CEE80);
          memcpy(__dst, v54, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 16))(__dst, v54, v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(__dst, 0, 1, v23);
        }
        *((unsigned char *)v14 + *(int *)(v18 + 28)) = *((unsigned char *)v15 + *(int *)(v18 + 28));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v14, 0, 1, v18);
      }
      uint64_t v25 = sub_100063814(&qword_1010CE928);
      uint64_t v26 = *(int *)(v25 + 48);
      uint64_t v27 = (char *)v14 + v26;
      uint64_t v28 = (char *)v15 + v26;
      uint64_t v29 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      *((unsigned char *)v14 + *(int *)(v25 + 64)) = *((unsigned char *)v15 + *(int *)(v25 + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_19:
  uint64_t v30 = a3[8];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = type metadata accessor for Playlist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_retain();
  swift_release();
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  uint64_t v34 = a3[11];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = *(void *)((char *)a1 + v34);
  uint64_t v38 = *(void *)((char *)a2 + v34);
  if (!v37)
  {
    if (v38)
    {
      uint64_t v40 = *((void *)v36 + 1);
      *uint64_t v35 = v38;
      v35[1] = v40;
      swift_retain();
      goto LABEL_26;
    }
LABEL_25:
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    goto LABEL_26;
  }
  if (!v38)
  {
    swift_release();
    goto LABEL_25;
  }
  uint64_t v39 = *((void *)v36 + 1);
  *uint64_t v35 = v38;
  v35[1] = v39;
  swift_retain();
  swift_release();
LABEL_26:
  uint64_t v41 = a3[12];
  uint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (void *)((char *)a2 + v41);
  uint64_t v44 = v43[1];
  *uint64_t v42 = *v43;
  v42[1] = v44;
  swift_retain();
  swift_release();
  uint64_t v45 = a3[13];
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = *(void *)v47;
  uint64_t v49 = *((void *)v47 + 1);
  char v50 = v47[16];
  KeyValueObservationTrigger.keyPath.getter();
  *(void *)uint64_t v46 = v48;
  *((void *)v46 + 1) = v49;
  v46[16] = v50;
  sub_10020EEF0();
  return a1;
}

char *_s4FlowO4ViewVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v17 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v10, v11, v17);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      goto LABEL_16;
    }
    uint64_t v14 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14))
    {
      uint64_t v16 = sub_100063814(&qword_1010CE930);
      memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v43 = v15;
      long long v18 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v18;
      uint64_t v19 = *(int *)(v14 + 24);
      uint64_t v44 = &v10[v19];
      uint64_t v20 = &v11[v19];
      uint64_t v21 = type metadata accessor for Artwork();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        uint64_t v23 = sub_100063814((uint64_t *)&unk_1010CEE80);
        memcpy(v44, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v44, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v44, 0, 1, v21);
      }
      v10[*(int *)(v14 + 28)] = v11[*(int *)(v14 + 28)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v10, 0, 1, v14);
    }
    uint64_t v24 = sub_100063814(&qword_1010CE928);
    uint64_t v25 = *(int *)(v24 + 48);
    uint64_t v26 = &v10[v25];
    uint64_t v27 = &v11[v25];
    uint64_t v28 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    v10[*(int *)(v24 + 64)] = v11[*(int *)(v24 + 64)];
  }
  swift_storeEnumTagMultiPayload();
LABEL_16:
  uint64_t v29 = a3[8];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  uint64_t v32 = type metadata accessor for Playlist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
  uint64_t v33 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[v33] = a2[v33];
  uint64_t v34 = a3[11];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v37 = *(void *)v36;
  if (*(void *)v36)
  {
    uint64_t v38 = *((void *)v36 + 1);
    *(void *)uint64_t v35 = v37;
    *((void *)v35 + 1) = v38;
  }
  else
  {
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  }
  uint64_t v39 = a3[13];
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  v40[16] = v41[16];
  return a1;
}

char *_s4FlowO4ViewVwta(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000637B8((uint64_t)a1, &qword_1010C8950);
    uint64_t v6 = sub_100063814(&qword_1010C8950);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *uint64_t v9 = *v10;
  *((void *)v9 + 1) = *((void *)v10 + 1);
  swift_release();
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  char *v12 = *v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v14 = a3[7];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    sub_100BD10C4((uint64_t)&a1[v14], type metadata accessor for Collaboration.Flow);
    uint64_t v17 = type metadata accessor for Collaboration.Flow(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v22 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v15, v16, v22);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
        goto LABEL_18;
      }
      uint64_t v19 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
      {
        uint64_t v21 = sub_100063814(&qword_1010CE930);
        memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        uint64_t v49 = v20;
        long long v23 = *((_OWORD *)v16 + 1);
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v23;
        uint64_t v24 = *(int *)(v19 + 24);
        char v50 = &v15[v24];
        uint64_t v25 = &v16[v24];
        uint64_t v26 = type metadata accessor for Artwork();
        uint64_t v27 = *(void *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          uint64_t v28 = sub_100063814((uint64_t *)&unk_1010CEE80);
          memcpy(v50, v25, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v50, v25, v26);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v50, 0, 1, v26);
        }
        v15[*(int *)(v19 + 28)] = v16[*(int *)(v19 + 28)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v15, 0, 1, v19);
      }
      uint64_t v29 = sub_100063814(&qword_1010CE928);
      uint64_t v30 = *(int *)(v29 + 48);
      uint64_t v31 = &v15[v30];
      uint64_t v32 = &v16[v30];
      uint64_t v33 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      v15[*(int *)(v29 + 64)] = v16[*(int *)(v29 + 64)];
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_18:
  uint64_t v34 = a3[8];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v37 = type metadata accessor for Playlist();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_release();
  uint64_t v38 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  uint64_t v41 = *(void *)&a2[v38];
  if (!*(void *)&a1[v38])
  {
    if (v41)
    {
      uint64_t v43 = *((void *)v40 + 1);
      *(void *)uint64_t v39 = v41;
      *((void *)v39 + 1) = v43;
      goto LABEL_25;
    }
LABEL_24:
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    goto LABEL_25;
  }
  if (!v41)
  {
    swift_release();
    goto LABEL_24;
  }
  uint64_t v42 = *((void *)v40 + 1);
  *(void *)uint64_t v39 = v41;
  *((void *)v39 + 1) = v42;
  swift_release();
LABEL_25:
  *(_OWORD *)&a1[a3[12]] = *(_OWORD *)&a2[a3[12]];
  swift_release();
  uint64_t v44 = a3[13];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  char v47 = v46[16];
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  v45[16] = v47;
  sub_10020EEF0();
  return a1;
}

uint64_t _s4FlowO4ViewVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BD4C00);
}

uint64_t sub_100BD4C00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100063814(&qword_1010CD9B0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for Collaboration.Flow(0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[7];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for Playlist();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[8];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[9]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t _s4FlowO4ViewVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BD4D78);
}

uint64_t sub_100BD4D78(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100063814(&qword_1010CD9B0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for Collaboration.Flow(0);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[7];
    }
    else
    {
      uint64_t result = type metadata accessor for Playlist();
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[9]) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[8];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100BD4ED8()
{
  sub_100BD2F74(319, (unint64_t *)&qword_1010CDA30, (uint64_t (*)(uint64_t))&type metadata accessor for DismissAction, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Collaboration.Flow(319);
    if (v1 <= 0x3F)
    {
      type metadata accessor for Playlist();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100BD5048()
{
  return sub_100063858(&qword_1010CEB40, &qword_1010CEB48);
}

uint64_t _s4FlowO12ActionButtonVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(a1 + 56);
  char v3 = *(unsigned char *)(a1 + 64);

  return sub_100237F44(v2, v3);
}

uint64_t _s4FlowO12ActionButtonVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  char v6 = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100237EDC(v5, v6);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = v6;
  return a1;
}

uint64_t _s4FlowO12ActionButtonVwca(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *((unsigned char *)v2 + 16);
  uint64_t v4 = v2[4];
  *(void *)(a1 + 24) = v2[3];
  *(void *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *((unsigned char *)v2 + 40);
  *(void *)(a1 + 48) = v2[6];
  swift_retain();
  swift_release();
  uint64_t v5 = v2[7];
  LOBYTE(v2) = *((unsigned char *)v2 + 64);
  sub_100237EDC(v5, (char)v2);
  uint64_t v6 = *(void *)(a1 + 56);
  char v7 = *(unsigned char *)(a1 + 64);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 64) = (_BYTE)v2;
  sub_100237F44(v6, v7);
  return a1;
}

__n128 initializeWithTake for SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s4FlowO12ActionButtonVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  char v5 = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a1 + 56);
  char v7 = *(unsigned char *)(a1 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = v5;
  sub_100237F44(v6, v7);
  return a1;
}

uint64_t _s4FlowO12ActionButtonVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s4FlowO12ActionButtonVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s4FlowO12ActionButtonVMa()
{
  return &_s4FlowO12ActionButtonVN;
}

uint64_t *sub_100BD5368(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    char v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    char v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    char v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    uint64_t v9 = type metadata accessor for Collaboration.Flow(0);
    swift_retain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return v5;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v11 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        uint64_t v13 = sub_100063814(&qword_1010CE930);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v15 = v8[1];
        void *v7 = *v8;
        v7[1] = v15;
        uint64_t v16 = v8[3];
        v7[2] = v8[2];
        v7[3] = v16;
        uint64_t v17 = *(int *)(v11 + 24);
        __dst = (char *)v7 + v17;
        uint64_t v30 = v12;
        uint64_t v28 = (char *)v8 + v17;
        uint64_t v18 = type metadata accessor for Artwork();
        uint64_t v19 = *(void *)(v18 - 8);
        uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v27(v28, 1, v18))
        {
          uint64_t v20 = sub_100063814((uint64_t *)&unk_1010CEE80);
          memcpy(__dst, v28, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v28, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
        }
        *((unsigned char *)v7 + *(int *)(v11 + 28)) = *((unsigned char *)v8 + *(int *)(v11 + 28));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v7, 0, 1, v11);
      }
      uint64_t v21 = sub_100063814(&qword_1010CE928);
      uint64_t v22 = *(int *)(v21 + 48);
      long long v23 = (char *)v7 + v22;
      uint64_t v24 = (char *)v8 + v22;
      uint64_t v25 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      *((unsigned char *)v7 + *(int *)(v21 + 64)) = *((unsigned char *)v8 + *(int *)(v21 + 64));
      goto LABEL_14;
    }
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return v5;
}

uint64_t sub_100BD5704(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for Collaboration.Flow(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v10 = type metadata accessor for Playlist.Collaborator();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v6 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = v4 + *(int *)(v6 + 24);
      uint64_t v8 = type metadata accessor for Artwork();
      uint64_t v9 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      }
    }
    v4 += *(int *)(sub_100063814(&qword_1010CE928) + 48);
    uint64_t v10 = type metadata accessor for URL();
  }
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v4, v10);
}

void *sub_100BD58A4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  char v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for Collaboration.Flow(0);
  swift_retain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v5, v6, v12);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v9 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
    {
      uint64_t v11 = sub_100063814(&qword_1010CE930);
      memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v13 = v6[1];
      void *v5 = *v6;
      v5[1] = v13;
      uint64_t v14 = v6[3];
      v5[2] = v6[2];
      v5[3] = v14;
      uint64_t v15 = *(int *)(v9 + 24);
      __dst = (char *)v5 + v15;
      uint64_t v27 = v10;
      uint64_t v28 = (char *)v6 + v15;
      uint64_t v16 = type metadata accessor for Artwork();
      uint64_t v25 = *(void *)(v16 - 8);
      uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17(v28, 1, v16))
      {
        uint64_t v18 = sub_100063814((uint64_t *)&unk_1010CEE80);
        memcpy(__dst, v28, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v28, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v16);
      }
      *((unsigned char *)v5 + *(int *)(v9 + 28)) = *((unsigned char *)v6 + *(int *)(v9 + 28));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v5, 0, 1, v9);
    }
    uint64_t v19 = sub_100063814(&qword_1010CE928);
    uint64_t v20 = *(int *)(v19 + 48);
    uint64_t v21 = (char *)v5 + v20;
    uint64_t v22 = (char *)v6 + v20;
    uint64_t v23 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    *((unsigned char *)v5 + *(int *)(v19 + 64)) = *((unsigned char *)v6 + *(int *)(v19 + 64));
    goto LABEL_12;
  }
  memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  return a1;
}

void *sub_100BD5BEC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_100BD10C4((uint64_t)a1 + v6, type metadata accessor for Collaboration.Flow);
    uint64_t v9 = type metadata accessor for Collaboration.Flow(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v11 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        uint64_t v13 = sub_100063814(&qword_1010CE930);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        void *v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v7[3] = v8[3];
        uint64_t v15 = *(int *)(v11 + 24);
        __dst = (char *)v7 + v15;
        uint64_t v28 = v12;
        uint64_t v26 = (char *)v8 + v15;
        uint64_t v16 = type metadata accessor for Artwork();
        uint64_t v17 = *(void *)(v16 - 8);
        uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v25(v26, 1, v16))
        {
          uint64_t v18 = sub_100063814((uint64_t *)&unk_1010CEE80);
          memcpy(__dst, v26, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v26, v16);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
        }
        *((unsigned char *)v7 + *(int *)(v11 + 28)) = *((unsigned char *)v8 + *(int *)(v11 + 28));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v7, 0, 1, v11);
      }
      uint64_t v19 = sub_100063814(&qword_1010CE928);
      uint64_t v20 = *(int *)(v19 + 48);
      uint64_t v21 = (char *)v7 + v20;
      uint64_t v22 = (char *)v8 + v20;
      uint64_t v23 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      *((unsigned char *)v7 + *(int *)(v19 + 64)) = *((unsigned char *)v8 + *(int *)(v19 + 64));
      goto LABEL_13;
    }
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

void *sub_100BD5F80(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  char v5 = (_OWORD *)((char *)a1 + v4);
  uint64_t v6 = (_OWORD *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32))(v5, v6, v12);
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v9 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
    {
      uint64_t v11 = sub_100063814(&qword_1010CE930);
      memcpy(v5, v6, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      long long v13 = v6[1];
      _OWORD *v5 = *v6;
      v5[1] = v13;
      uint64_t v14 = *(int *)(v9 + 24);
      uint64_t v15 = (char *)v5 + v14;
      uint64_t v16 = (char *)v6 + v14;
      uint64_t v17 = type metadata accessor for Artwork();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_100063814((uint64_t *)&unk_1010CEE80);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      *((unsigned char *)v5 + *(int *)(v9 + 28)) = *((unsigned char *)v6 + *(int *)(v9 + 28));
      (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    }
    uint64_t v20 = sub_100063814(&qword_1010CE928);
    uint64_t v21 = *(int *)(v20 + 48);
    uint64_t v22 = (char *)v5 + v21;
    uint64_t v23 = (char *)v6 + v21;
    uint64_t v24 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    *((unsigned char *)v5 + *(int *)(v20 + 64)) = *((unsigned char *)v6 + *(int *)(v20 + 64));
    goto LABEL_12;
  }
  memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  return a1;
}

void *sub_100BD628C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (_OWORD *)((char *)a1 + v6);
    uint64_t v8 = (_OWORD *)((char *)a2 + v6);
    sub_100BD10C4((uint64_t)a1 + v6, type metadata accessor for Collaboration.Flow);
    uint64_t v9 = type metadata accessor for Collaboration.Flow(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = type metadata accessor for Playlist.Collaborator();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v11 = type metadata accessor for Collaboration.Flow.Collaborator(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
        uint64_t v13 = sub_100063814(&qword_1010CE930);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        long long v15 = v8[1];
        _OWORD *v7 = *v8;
        v7[1] = v15;
        uint64_t v16 = *(int *)(v11 + 24);
        uint64_t v17 = (char *)v7 + v16;
        uint64_t v18 = (char *)v8 + v16;
        uint64_t v19 = type metadata accessor for Artwork();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          uint64_t v21 = sub_100063814((uint64_t *)&unk_1010CEE80);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        *((unsigned char *)v7 + *(int *)(v11 + 28)) = *((unsigned char *)v8 + *(int *)(v11 + 28));
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
      }
      uint64_t v22 = sub_100063814(&qword_1010CE928);
      uint64_t v23 = *(int *)(v22 + 48);
      uint64_t v24 = (char *)v7 + v23;
      uint64_t v25 = (char *)v8 + v23;
      uint64_t v26 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      *((unsigned char *)v7 + *(int *)(v22 + 64)) = *((unsigned char *)v8 + *(int *)(v22 + 64));
      goto LABEL_13;
    }
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100BD65CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BD65E0);
}

uint64_t sub_100BD65E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Collaboration.Flow(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100BD6690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BD66A4);
}

void *sub_100BD66A4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  char v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Collaboration.Flow(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s4FlowO18ProfileEditingViewVMa(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010CEBA8);
}

uint64_t sub_100BD676C()
{
  uint64_t result = type metadata accessor for Collaboration.Flow(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *_s4FlowO14GlyphImageViewVMa()
{
  return &_s4FlowO14GlyphImageViewVN;
}

uint64_t sub_100BD6818()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BD6834()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BD6850()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BD686C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_100237F44(*(void *)(v0 + 72), *(unsigned char *)(v0 + 80));

  return swift_deallocObject();
}

uint64_t sub_100BD68C0()
{
  return sub_100BCF780(v0 + 16);
}

uint64_t sub_100BD68C8@<X0>(uint64_t a1@<X8>)
{
  return sub_100BCF7E4(*(void *)(v1 + 16), a1);
}

uint64_t sub_100BD68D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  char v3 = *(unsigned char *)(a1 + 64);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100237EDC(v2, v3);
  return a1;
}

unint64_t sub_100BD6938()
{
  unint64_t result = qword_1010CEC20;
  if (!qword_1010CEC20)
  {
    sub_10006389C(&qword_1010CEC18);
    sub_100BD69CC();
    sub_100BD7178(&qword_1010CE448, &qword_1010CE450);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CEC20);
  }
  return result;
}

unint64_t sub_100BD69CC()
{
  unint64_t result = qword_1010CEC28;
  if (!qword_1010CEC28)
  {
    sub_10006389C(&qword_1010CEC30);
    sub_100063858(&qword_1010CDF88, &qword_1010CDF18);
    sub_100063858(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CEC28);
  }
  return result;
}

uint64_t sub_100BD6A90@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100BD6AC0()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_100BD6AE8()
{
  return swift_deallocObject();
}

unint64_t sub_100BD6B00()
{
  unint64_t result = qword_1010CEC40;
  if (!qword_1010CEC40)
  {
    sub_10006389C(&qword_1010CEBF8);
    sub_100BD6BC4(&qword_1010CEC48, &qword_1010CEBF0, (void (*)(void))sub_100BD6C44);
    sub_100063858(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CEC40);
  }
  return result;
}

uint64_t sub_100BD6BC4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100BD6C44()
{
  unint64_t result = qword_1010CEC50;
  if (!qword_1010CEC50)
  {
    sub_10006389C((uint64_t *)&unk_1010CF160);
    sub_100063858(&qword_1010CEC58, &qword_1010CEBE8);
    sub_100063858(&qword_1010CE5E8, &qword_1010CE5F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CEC50);
  }
  return result;
}

uint64_t sub_100BD6D08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100BD6D70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100BD6D9C()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t sub_100BD6DD8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100BD6E04()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_100BD6E2C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1001CC8D0(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100BD6EB8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 128);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), v4);
  return a1;
}

uint64_t sub_100BD6F24(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1000D1500(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

double sub_100BD6FB0(uint64_t a1)
{
  *(unsigned char *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

unint64_t sub_100BD6FCC()
{
  unint64_t result = qword_1010CED70;
  if (!qword_1010CED70)
  {
    sub_10006389C(&qword_1010CED68);
    sub_100BD706C();
    sub_100063858((unint64_t *)&unk_1010CE060, &qword_1010CB4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CED70);
  }
  return result;
}

unint64_t sub_100BD706C()
{
  unint64_t result = qword_1010CED78;
  if (!qword_1010CED78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CED78);
  }
  return result;
}

unint64_t sub_100BD70C0()
{
  unint64_t result = qword_1010CED88;
  if (!qword_1010CED88)
  {
    sub_10006389C(&qword_1010CED80);
    sub_100BD7178(&qword_1010CED90, &qword_1010CED98);
    sub_100063858((unint64_t *)&unk_1010CE060, &qword_1010CB4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CED88);
  }
  return result;
}

uint64_t sub_100BD7178(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BD71E8(uint64_t a1)
{
  return sub_100BD7644(a1, (uint64_t (*)(void))&type metadata accessor for Playlist.Collaborator, (uint64_t (*)(void))&type metadata accessor for Playlist.Collaborator, (uint64_t)&unk_101010DC8, (uint64_t)&unk_1010CEE48);
}

uint64_t sub_100BD7234()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = type metadata accessor for Playlist.Collaborator();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v0 + v3;
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v3, v9);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v10 = v8 + v1[7];
  type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v24 = v4;
    uint64_t v12 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v10 + *(int *)(v12 + 24);
      uint64_t v14 = type metadata accessor for Artwork();
      uint64_t v22 = *(void *)(v14 - 8);
      uint64_t v23 = v13;
      uint64_t v15 = v13;
      uint64_t v16 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v15, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v16);
      }
    }
    uint64_t v17 = v10 + *(int *)(sub_100063814(&qword_1010CE928) + 48);
    uint64_t v18 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    uint64_t v4 = v24;
  }
  uint64_t v19 = v8 + v1[8];
  uint64_t v20 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  swift_release();
  if (*(void *)(v8 + v1[11])) {
    swift_release();
  }
  swift_release();
  sub_10020EEF0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + ((v3 + v4 + v7) & ~v7), v5);

  return swift_deallocObject();
}

uint64_t sub_100BD75FC(uint64_t a1)
{
  return sub_100BD7644(a1, (uint64_t (*)(void))&type metadata accessor for Playlist.Collaborator, (uint64_t (*)(void))&type metadata accessor for Playlist.Collaborator, (uint64_t)&unk_101010DA0, (uint64_t)&unk_1010CEE38);
}

uint64_t sub_100BD7644(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v14 = *(void *)(a2(0) - 8);
  return sub_100BCD6A0(a1, v5 + v12, v5 + ((v12 + v13 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), a3, a4, a5);
}

unint64_t sub_100BD773C()
{
  unint64_t result = qword_1010CEDA8;
  if (!qword_1010CEDA8)
  {
    sub_10006389C(&qword_1010CECE8);
    sub_100063858(&qword_1010CEDB0, &qword_1010CECE0);
    sub_100BD77DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CEDA8);
  }
  return result;
}

unint64_t sub_100BD77DC()
{
  unint64_t result = qword_1010CEDB8;
  if (!qword_1010CEDB8)
  {
    sub_10006389C(&qword_1010CEDC0);
    sub_100BD787C();
    sub_100063858(&qword_1010CE5E8, &qword_1010CE5F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CEDB8);
  }
  return result;
}

unint64_t sub_100BD787C()
{
  unint64_t result = qword_1010CEDC8;
  if (!qword_1010CEDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CEDC8);
  }
  return result;
}

uint64_t sub_100BD78D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100BD795C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100BD79E8()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v0 + v3;
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v3, v9);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v10 = v8 + v1[7];
  type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v18 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v10, v18);
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v24 = v4;
    uint64_t v12 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v10 + *(int *)(v12 + 24);
      uint64_t v14 = type metadata accessor for Artwork();
      uint64_t v22 = *(void *)(v14 - 8);
      uint64_t v23 = v13;
      uint64_t v15 = v13;
      uint64_t v16 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v15, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v16);
      }
    }
    uint64_t v17 = sub_100063814(&qword_1010CE928);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10 + *(int *)(v17 + 48), v5);
    uint64_t v4 = v24;
  }
  uint64_t v19 = v8 + v1[8];
  uint64_t v20 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  swift_release();
  if (*(void *)(v8 + v1[11])) {
    swift_release();
  }
  swift_release();
  sub_10020EEF0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + ((v3 + v4 + v7) & ~v7), v5);

  return swift_deallocObject();
}

uint64_t sub_100BD7DAC(uint64_t a1)
{
  return sub_100BD7644(a1, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t)&unk_101010D78, (uint64_t)&unk_1010CEE28);
}

uint64_t sub_100BD7DF4()
{
  return swift_deallocObject();
}

uint64_t sub_100BD7E08(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100BCA5C8(a1, v4);
}

uint64_t sub_100BD7E78()
{
  return swift_deallocObject();
}

uint64_t sub_100BD7E88@<X0>(uint64_t a1@<X8>)
{
  return sub_100BCBEB4(*(void *)(v1 + 16), a1);
}

uint64_t sub_100BD7E90(uint64_t a1)
{
  return a1;
}

uint64_t sub_100BD7F00(uint64_t a1)
{
  return a1;
}

uint64_t sub_100BD7F74()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v5 = v3 + v1[7];
  type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = type metadata accessor for Playlist.Collaborator();
  }
  else
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_12;
    }
    uint64_t v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v5 + *(int *)(v7 + 24);
      uint64_t v9 = type metadata accessor for Artwork();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
    }
    v5 += *(int *)(sub_100063814(&qword_1010CE928) + 48);
    uint64_t v11 = type metadata accessor for URL();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v5, v11);
LABEL_12:
  uint64_t v12 = v3 + v1[8];
  uint64_t v13 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  if (*(void *)(v3 + v1[11])) {
    swift_release();
  }
  swift_release();
  sub_10020EEF0();

  return swift_deallocObject();
}

uint64_t sub_100BD8290()
{
  return sub_100BD82C4(sub_100BCC494);
}

uint64_t sub_100BD82AC()
{
  return sub_100BD82C4(sub_100BCC718);
}

uint64_t sub_100BD82C4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

unint64_t sub_100BD8338()
{
  unint64_t result = qword_1010CEDF0;
  if (!qword_1010CEDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1010CEDF0);
  }
  return result;
}

uint64_t sub_100BD8390()
{
  type metadata accessor for Collaboration.Flow.View(0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000154F4;
  return sub_100BCC668();
}

uint64_t sub_100BD8480()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = v0 + v2;
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v5 = v3 + v1[7];
  type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = type metadata accessor for Playlist.Collaborator();
  }
  else
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_12;
    }
    uint64_t v7 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v5 + *(int *)(v7 + 24);
      uint64_t v9 = type metadata accessor for Artwork();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
    }
    v5 += *(int *)(sub_100063814(&qword_1010CE928) + 48);
    uint64_t v11 = type metadata accessor for URL();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v5, v11);
LABEL_12:
  uint64_t v12 = v3 + v1[8];
  uint64_t v13 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  if (*(void *)(v3 + v1[11])) {
    swift_release();
  }
  swift_release();
  sub_10020EEF0();

  return swift_deallocObject();
}

uint64_t sub_100BD87A4()
{
  type metadata accessor for Collaboration.Flow.View(0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100081D08;
  return sub_100BCA79C();
}

uint64_t sub_100BD8890()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  uint64_t v8 = v0 + v3;
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v3, v9);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v10 = v8 + v1[7];
  type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v18 = type metadata accessor for Playlist.Collaborator();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v10, v18);
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v24 = v4;
    uint64_t v12 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v10 + *(int *)(v12 + 24);
      uint64_t v14 = type metadata accessor for Artwork();
      uint64_t v22 = *(void *)(v14 - 8);
      uint64_t v23 = v13;
      uint64_t v15 = v13;
      uint64_t v16 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v15, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v16);
      }
    }
    uint64_t v17 = sub_100063814(&qword_1010CE928);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10 + *(int *)(v17 + 48), v5);
    uint64_t v4 = v24;
  }
  uint64_t v19 = v8 + v1[8];
  uint64_t v20 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  swift_release();
  if (*(void *)(v8 + v1[11])) {
    swift_release();
  }
  swift_release();
  sub_10020EEF0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + ((v3 + v4 + v7) & ~v7), v5);

  return swift_deallocObject();
}

uint64_t sub_100BD8C5C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for URL() - 8) + 80);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = v1 + v5;
  uint64_t v12 = v1 + (v8 & ~v7);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100081D08;
  return sub_100BCC8BC(a1, v9, v10, v11, v12);
}

uint64_t sub_100BD8DB4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Playlist.Collaborator() - 8) + 80);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = v1 + v5;
  uint64_t v12 = v1 + (v8 & ~v7);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100081D08;
  return sub_100BCD948(a1, v9, v10, v11, v12);
}

uint64_t sub_100BD8F0C()
{
  uint64_t v1 = (int *)type metadata accessor for Collaboration.Flow.View(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = type metadata accessor for Playlist.Collaborator();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  uint64_t v8 = v0 + v3;
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v3, v9);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v10 = v8 + v1[7];
  type metadata accessor for Collaboration.Flow(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v24 = v4;
    uint64_t v12 = type metadata accessor for Collaboration.Flow.Collaborator(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v10 + *(int *)(v12 + 24);
      uint64_t v14 = type metadata accessor for Artwork();
      uint64_t v22 = *(void *)(v14 - 8);
      uint64_t v23 = v13;
      uint64_t v15 = v13;
      uint64_t v16 = v14;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v15, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v16);
      }
    }
    uint64_t v17 = v10 + *(int *)(sub_100063814(&qword_1010CE928) + 48);
    uint64_t v18 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    uint64_t v4 = v24;
  }
  uint64_t v19 = v8 + v1[8];
  uint64_t v20 = type metadata accessor for Playlist();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  swift_release();
  if (*(void *)(v8 + v1[11])) {
    swift_release();
  }
  swift_release();
  sub_10020EEF0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + ((v3 + v4 + v7) & ~v7), v5);

  return swift_deallocObject();
}

uint64_t sub_100BD92DC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Collaboration.Flow.View(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)(type metadata accessor for Playlist.Collaborator() - 8) + 80);
  unint64_t v8 = v5 + v6 + v7;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = v1 + v5;
  uint64_t v12 = v1 + (v8 & ~v7);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100081D08;
  return sub_100BCD26C(a1, v9, v10, v11, v12);
}

unint64_t sub_100BD9430()
{
  unint64_t result = qword_1010CEE50;
  if (!qword_1010CEE50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010CEE50);
  }
  return result;
}

uint64_t sub_100BD9470(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s4FlowO12ActionButtonV5StyleOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BD9584);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4FlowO12ActionButtonV5StyleOMa()
{
  return &_s4FlowO12ActionButtonV5StyleON;
}

unint64_t sub_100BD95C0()
{
  unint64_t result = qword_1010CEE58;
  if (!qword_1010CEE58)
  {
    sub_10006389C(&qword_1010CEC10);
    sub_10006389C(&qword_1010CEC00);
    sub_100BD6BC4(&qword_1010CEC38, &qword_1010CEC00, (void (*)(void))sub_100BD6B00);
    swift_getOpaqueTypeConformance2();
    sub_100063858(&qword_1010CEE60, &qword_1010CEC60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CEE58);
  }
  return result;
}

uint64_t sub_100BD96C0()
{
  return sub_100063858(&qword_1010CEE68, &qword_1010CEE70);
}

unint64_t sub_100BD9704()
{
  unint64_t result = qword_1010CEE78;
  if (!qword_1010CEE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CEE78);
  }
  return result;
}

double sub_100BD9774@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_1010CF190, &qword_1010CB1B0).n128_u64[0];
  return result;
}

double sub_100BD97D0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1010CF2C0, &qword_1010CE4A0).n128_u64[0];
  return result;
}

__n128 sub_100BD982C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v24 = sub_100063814(&qword_1010CDFC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  uint64_t v25 = (_OWORD *)(a9 + *(int *)(sub_100063814(&qword_1010CDFC8) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *uint64_t v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

double sub_100BD9A18@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_1010CF180, &qword_1010CDFE0).n128_u64[0];
  return result;
}

uint64_t sub_100BD9A74@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = v13[1];
  long long v34 = *v13;
  long long v35 = v24;
  sub_1006330A0((uint64_t)&v34, (uint64_t)v37);
  long long v25 = v13[1];
  *(_OWORD *)a9 = *v13;
  *(_OWORD *)(a9 + 16) = v25;
  *(_OWORD *)(a9 + 88) = v30;
  *(_OWORD *)(a9 + 104) = v31;
  *(_OWORD *)(a9 + 120) = v32;
  *(_OWORD *)(a9 + 136) = v33;
  *(_OWORD *)(a9 + 40) = v27;
  *(_OWORD *)(a9 + 56) = v28;
  uint64_t v36 = *((void *)&v35 + 1);
  *(_WORD *)(a9 + 32) = *((_WORD *)v13 + 16);
  *(_OWORD *)(a9 + 72) = v29;
  sub_1006330FC((uint64_t)v37);
  return sub_1000D2338((uint64_t)&v36);
}

double sub_100BD9C44@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_1010CF170, &qword_1010CEC78).n128_u64[0];
  return result;
}

double sub_100BD9CA0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_100623888(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t *)&unk_1010CF160, &qword_1010CEBF0).n128_u64[0];
  return result;
}

uint64_t InlineProfileEditingView.Context.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  InlineProfileEditingView.Context.init()();
  return v0;
}

double InlineProfileEditingView.init(context:)@<D0>(__n128 *a1@<X8>)
{
  sub_100BDF6AC(v5);
  __n128 v2 = v5[3];
  a1[2] = v5[2];
  a1[3] = v2;
  a1[4] = v5[4];
  a1[5].n128_u64[0] = v6;
  double result = v5[0].n128_f64[0];
  __n128 v4 = v5[1];
  *a1 = v5[0];
  a1[1] = v4;
  return result;
}

uint64_t property wrapper backing initializer of InlineProfileEditingView.Context.artwork(uint64_t a1)
{
  sub_100063814((uint64_t *)&unk_1010CEE80);
  __chkstk_darwin();
  sub_10006CAB8(a1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_1010CEE80);
  Published.init(initialValue:)();
  return sub_1000637B8(a1, (uint64_t *)&unk_1010CEE80);
}

uint64_t InlineProfileEditingView.Context.userArtwork.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100BD9EBC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t property wrapper backing initializer of Reactions.StackView.Model.userImage()
{
  return Published.init(initialValue:)();
}

uint64_t sub_100BD9F78()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t InlineProfileEditingView.Context.init()()
{
  uint64_t v1 = sub_100063814((uint64_t *)&unk_1010CEE90);
  uint64_t v81 = *(void *)(v1 - 8);
  uint64_t v82 = v1;
  __chkstk_darwin(v1);
  long long v80 = (char *)&v74 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_100063814(&qword_1010CB738);
  uint64_t v3 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v5 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_100063814(&qword_1010CEEA0);
  uint64_t v6 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  unint64_t v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814((uint64_t *)&unk_1010CEE80);
  __chkstk_darwin(v9);
  long long v76 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v77 = (char *)&v74 - v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v74 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v74 - v17;
  uint64_t v19 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__artwork;
  uint64_t v20 = type metadata accessor for Artwork();
  uint64_t v83 = *(void *)(v20 - 8);
  uint64_t v84 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 56))(v18, 1, 1);
  sub_10006CAB8((uint64_t)v18, (uint64_t)v15, (uint64_t *)&unk_1010CEE80);
  uint64_t v75 = v15;
  Published.init(initialValue:)();
  uint64_t v74 = v18;
  sub_1000637B8((uint64_t)v18, (uint64_t *)&unk_1010CEE80);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v19, v8, v78);
  uint64_t v21 = v0;
  uint64_t v22 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__name;
  id v86 = 0;
  unint64_t v87 = 0xE000000000000000;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v22, v5, v79);
  uint64_t v23 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__image;
  id v86 = 0;
  sub_100063814(&qword_1010C9270);
  long long v24 = v80;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v23, v24, v82);
  *(unsigned char *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage) = 0;
  id v25 = [self shared];
  id v26 = [v25 activeUserState];

  id v27 = [v26 music];
  id v28 = [v27 userProfile];

  if (v28)
  {
    id v29 = [v28 name];
    long long v30 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v32 = v31;

    swift_getKeyPath();
    swift_getKeyPath();
    id v86 = v30;
    unint64_t v87 = v32;
    swift_retain();
    static Published.subscript.setter();
    id v33 = [v28 artworkInfo];
    if (v33)
    {
      long long v34 = v33;
      id v35 = [v33 responseDictionary];

      if (v35)
      {
        uint64_t v36 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        unint64_t v37 = sub_100048B48(v36);
        swift_bridgeObjectRelease();
        if (v37)
        {
          uint64_t v38 = (uint64_t)v74;
          Artwork.init(_:)();
          swift_getKeyPath();
          swift_getKeyPath();
          sub_10006CAB8(v38, (uint64_t)v75, (uint64_t *)&unk_1010CEE80);
          swift_retain();
          static Published.subscript.setter();
          sub_1000637B8(v38, (uint64_t *)&unk_1010CEE80);
        }
      }
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v40 = (unint64_t)v86;
  unint64_t v39 = v87;
  swift_bridgeObjectRelease();
  uint64_t v41 = HIBYTE(v39) & 0xF;
  if ((v39 & 0x2000000000000000) == 0) {
    uint64_t v41 = v40 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v43 = v83;
  uint64_t v42 = v84;
  if (v41)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v44 = (uint64_t)v77;
    static Published.subscript.getter();
    swift_release();
    swift_release();
    int v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v44, 1, v42);
    sub_1000637B8(v44, (uint64_t *)&unk_1010CEE80);
    if (v45 != 1) {
      goto LABEL_24;
    }
  }
  sub_100063814(&qword_1010C9B10);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_100E251C0;
  *(void *)(v46 + 32) = CNContactThumbnailImageDataKey;
  id v86 = (id)v46;
  specialized Array._endMutation()();
  unint64_t v85 = (unint64_t)v86;
  char v47 = self;
  uint64_t v48 = CNContactThumbnailImageDataKey;
  id v49 = [v47 descriptorForRequiredKeysForStyle:0];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v50 = [objc_allocWithZone((Class)CNContactStore) init];
  sub_100063814(&qword_1010CEEC8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v86 = 0;
  id v52 = [v50 _ios_meContactWithKeysToFetch:isa error:&v86];

  id v53 = v86;
  if (!v52)
  {
    id v72 = v86;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    return v21;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v54 = v53;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  unint64_t v56 = (unint64_t)v86;
  unint64_t v55 = v87;
  swift_bridgeObjectRelease();
  uint64_t v57 = HIBYTE(v55) & 0xF;
  if ((v55 & 0x2000000000000000) == 0) {
    uint64_t v57 = v56 & 0xFFFFFFFFFFFFLL;
  }
  if (!v57)
  {
    id v58 = [v47 stringFromContact:v52 style:0];
    if (v58)
    {
      uint64_t v59 = v58;
      uint64_t v60 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v62 = v61;

      swift_getKeyPath();
      swift_getKeyPath();
      id v86 = v60;
      unint64_t v87 = v62;
      swift_retain();
      static Published.subscript.setter();
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v63 = (uint64_t)v76;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v63, 1, v42) != 1)
  {

    sub_1000637B8(v63, (uint64_t *)&unk_1010CEE80);
    return v21;
  }
  sub_1000637B8(v63, (uint64_t *)&unk_1010CEE80);
  id v64 = [v52 thumbnailImageData];
  if (!v64)
  {

LABEL_24:
    return v21;
  }
  uint64_t v65 = v64;
  uint64_t v66 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v68 = v67;

  id v69 = objc_allocWithZone((Class)UIImage);
  sub_10007AA40(v66, v68);
  Class v70 = Data._bridgeToObjectiveC()().super.isa;
  id v71 = [v69 initWithData:v70];
  sub_10007A5C4(v66, v68);

  sub_100BDF4AC(v71);
  sub_10007A5C4(v66, v68);
  return v21;
}

BOOL InlineProfileEditingView.Context.canValidate.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Swift::String v0 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = ((unint64_t)v0._object >> 56) & 0xF;
  if (((uint64_t)v0._object & 0x2000000000000000) == 0) {
    unint64_t v1 = v0._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  return v1 != 0;
}

uint64_t InlineProfileEditingView.Context.userName.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t countAndFlagsBits = String.trim()()._countAndFlagsBits;
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t InlineProfileEditingView.Context.hasRemovedImage.getter()
{
  unint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess();
  return *v1;
}

uint64_t InlineProfileEditingView.Context.hasRemovedImage.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*InlineProfileEditingView.Context.hasRemovedImage.modify())()
{
  return j__swift_endAccess;
}

uint64_t InlineProfileEditingView.Context.userImage.getter()
{
  sub_100063814((uint64_t *)&unk_1010CEE80);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (unsigned char *)(v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  swift_beginAccess();
  uint64_t result = 0;
  if ((*v3 & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v5 = type metadata accessor for Artwork();
    int v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v2, 1, v5);
    sub_1000637B8((uint64_t)v2, (uint64_t *)&unk_1010CEE80);
    uint64_t result = 0;
    if (v6 == 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      return v7;
    }
  }
  return result;
}

uint64_t InlineProfileEditingView.Context.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__artwork;
  uint64_t v2 = sub_100063814(&qword_1010CEEA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__name;
  uint64_t v4 = sub_100063814(&qword_1010CB738);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__image;
  uint64_t v6 = sub_100063814((uint64_t *)&unk_1010CEE90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t InlineProfileEditingView.Context.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__artwork;
  uint64_t v2 = sub_100063814(&qword_1010CEEA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__name;
  uint64_t v4 = sub_100063814(&qword_1010CB738);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context__image;
  uint64_t v6 = sub_100063814((uint64_t *)&unk_1010CEE90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocClassInstance();
}

uint64_t sub_100BDB034@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for InlineProfileEditingView.Context();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t property wrapper backing initializer of InlineProfileEditingView.imagePickerSourceType()
{
  State.init(wrappedValue:)();
  return v1;
}

uint64_t property wrapper backing initializer of InlineProfileEditingView.context()
{
  type metadata accessor for InlineProfileEditingView.Context();
  sub_100BE06E8(&qword_1010CEED0, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);

  return ObservedObject.init(wrappedValue:)();
}

uint64_t InlineProfileEditingView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v80 = a1;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v79 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for String.LocalizationValue();
  uint64_t v74 = *(void *)(v78 - 8);
  __chkstk_darwin();
  uint64_t v73 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  id v72 = (char *)&v63 - v5;
  uint64_t v68 = type metadata accessor for RoundedRectangle() - 8;
  __chkstk_darwin();
  uint64_t v65 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CEED8);
  __chkstk_darwin();
  unint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814(&qword_1010CEEE0) - 8;
  __chkstk_darwin();
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100063814(&qword_1010CEEE8) - 8;
  __chkstk_darwin();
  uint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CEEF0);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100063814(&qword_1010CEEF8);
  __chkstk_darwin();
  uint64_t v66 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100063814(&qword_1010CEF00);
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin();
  id v69 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_100063814(&qword_1010CEF08);
  __chkstk_darwin();
  unint64_t v67 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100063814(&qword_1010CEF10);
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin();
  uint64_t v75 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unint64_t v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v21 = sub_100063814(&qword_1010CEF18);
  sub_100BDBC3C(v2, (uint64_t)&v8[*(int *)(v21 + 44)]);
  id v22 = [self quaternarySystemFillColor];
  uint64_t v23 = Color.init(_:)();
  char v24 = static Edge.Set.all.getter();
  sub_10006CAB8((uint64_t)v8, (uint64_t)v11, &qword_1010CEED8);
  id v25 = &v11[*(int *)(v9 + 44)];
  *(void *)id v25 = v23;
  v25[8] = v24;
  sub_1000637B8((uint64_t)v8, &qword_1010CEED8);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_10006CAB8((uint64_t)v11, (uint64_t)v14, &qword_1010CEEE0);
  id v26 = &v14[*(int *)(v12 + 44)];
  long long v27 = v92;
  *((_OWORD *)v26 + 4) = v91;
  *((_OWORD *)v26 + 5) = v27;
  *((_OWORD *)v26 + 6) = v93;
  long long v28 = v88;
  *(_OWORD *)id v26 = v87;
  *((_OWORD *)v26 + 1) = v28;
  long long v29 = v90;
  *((_OWORD *)v26 + 2) = v89;
  *((_OWORD *)v26 + 3) = v29;
  sub_1000637B8((uint64_t)v11, &qword_1010CEEE0);
  uint64_t v30 = static Alignment.center.getter();
  sub_100623888(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, 0.0, 1, v30, v31, &qword_1010CEEE8, &qword_1010CEEF0);
  sub_1000637B8((uint64_t)v14, &qword_1010CEEE8);
  unint64_t v32 = v65;
  id v33 = &v65[*(int *)(v68 + 28)];
  uint64_t v34 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v35 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v33, v34, v35);
  __asm { FMOV            V0.2D, #16.0 }
  *unint64_t v32 = _Q0;
  uint64_t v41 = (uint64_t)v66;
  uint64_t v42 = (uint64_t)&v66[*(int *)(v81 + 36)];
  sub_100BE02D4((uint64_t)v32, v42, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v42 + *(int *)(sub_100063814((uint64_t *)&unk_1010CEF20) + 36)) = 256;
  sub_10006CAB8((uint64_t)v16, v41, &qword_1010CEEF0);
  sub_100BE03A8((uint64_t)v32, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000637B8((uint64_t)v16, &qword_1010CEEF0);
  uint64_t v85 = 0;
  unint64_t v86 = 0xE000000000000000;
  uint64_t v43 = v64;
  long long v84 = *(_OWORD *)(v64 + 16);
  uint64_t v65 = (char *)sub_100063814(&qword_1010CC190);
  State.projectedValue.getter();
  uint64_t v83 = v43;
  sub_100063814(&qword_1010CEF30);
  sub_100BDF8B0();
  unint64_t v44 = sub_10005D27C();
  uint64_t v45 = v74;
  sub_100063858(&qword_1010CEF80, &qword_1010CEF30);
  uint64_t v68 = v44;
  uint64_t v46 = v73;
  char v47 = v72;
  uint64_t v48 = v69;
  View.confirmationDialog<A, B>(_:isPresented:titleVisibility:actions:)();
  uint64_t v49 = v43;
  uint64_t v50 = (uint64_t)v67;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000637B8(v41, &qword_1010CEEF8);
  uint64_t v51 = static Alignment.center.getter();
  uint64_t v53 = v52;
  uint64_t v54 = v50 + *(int *)(v82 + 36);
  sub_100BDE370(v49, v54);
  unint64_t v55 = (uint64_t *)(v54 + *(int *)(sub_100063814(&qword_1010CEF88) + 36));
  uint64_t v56 = v78;
  *unint64_t v55 = v51;
  v55[1] = v53;
  (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(v50, v48, v71);
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v46, v47, v56);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v57 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v58 = String.init(localized:table:bundle:locale:comment:)();
  unint64_t v60 = v59;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v56);
  uint64_t v85 = v58;
  unint64_t v86 = v60;
  long long v84 = *(_OWORD *)(v49 + 48);
  State.projectedValue.getter();
  __chkstk_darwin();
  sub_100063814(&qword_1010CEF90);
  sub_100BDFA78();
  sub_100063858(&qword_1010CEFA8, &qword_1010CEF90);
  unint64_t v61 = v75;
  View.alert<A, B>(_:isPresented:actions:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1000637B8(v50, &qword_1010CEF08);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v76 + 32))(v80, v61, v77);
}

uint64_t sub_100BDBC3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v218 = a2;
  uint64_t v195 = sub_100063814(&qword_1010CF1E8);
  __chkstk_darwin();
  uint64_t v199 = (char *)&v173 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = sub_100063814(&qword_1010CF1F0);
  __chkstk_darwin();
  uint64_t v198 = (uint64_t)&v173 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = sub_100063814(&qword_1010CF1F8);
  uint64_t v214 = *(void *)(v215 - 8);
  __chkstk_darwin();
  uint64_t v196 = (uint64_t)&v173 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814((uint64_t *)&unk_1010CF200);
  __chkstk_darwin();
  uint64_t v217 = (uint64_t)&v173 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v216 = (char *)&v173 - v7;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v206 = (char *)&v173 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = type metadata accessor for String.LocalizationValue();
  uint64_t v207 = *(void *)(v208 - 8);
  __chkstk_darwin();
  uint64_t v221 = (char *)&v173 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  v220 = (char *)&v173 - v10;
  uint64_t v211 = sub_100063814((uint64_t *)&unk_1010CD5A0);
  uint64_t v210 = *(void *)(v211 - 8);
  __chkstk_darwin();
  uint64_t v209 = (char *)&v173 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = sub_100063814((uint64_t *)&unk_1010CDEE0);
  __chkstk_darwin();
  v193 = (char *)&v173 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v194 = (uint64_t)&v173 - v13;
  uint64_t v202 = sub_100063814(&qword_1010CF210);
  __chkstk_darwin();
  uint64_t v203 = (uint64_t *)((char *)&v173 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100063814(&qword_1010CF218);
  __chkstk_darwin();
  uint64_t v212 = (uint64_t)&v173 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v223 = (uint64_t)&v173 - v16;
  uint64_t v191 = type metadata accessor for ArtworkImage.ReusePolicy();
  uint64_t v190 = *(void *)(v191 - 8);
  __chkstk_darwin();
  uint64_t v189 = (char *)&v173 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ArtworkImage.Placeholder(0);
  __chkstk_darwin();
  uint64_t v188 = (char *)&v173 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = type metadata accessor for Artwork();
  uint64_t v176 = *(void *)(v177 - 8);
  __chkstk_darwin();
  uint64_t v178 = (char *)&v173 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814((uint64_t *)&unk_1010C8960);
  __chkstk_darwin();
  uint64_t v180 = (char *)&v173 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v187 = sub_100063814(&qword_1010CC0C8);
  uint64_t v186 = *(void *)(v187 - 8);
  __chkstk_darwin();
  uint64_t v184 = (uint64_t)&v173 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_100063814((uint64_t *)&unk_1010CF220);
  __chkstk_darwin();
  uint64_t v183 = (char *)&v173 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_100063814(&qword_1010CECC8);
  __chkstk_darwin();
  uint64_t v185 = (uint64_t)&v173 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = sub_100063814(&qword_1010CF230);
  __chkstk_darwin();
  uint64_t v182 = (uint64_t)&v173 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v192 = (uint64_t)&v173 - v25;
  uint64_t v200 = sub_100063814(&qword_1010CF238);
  __chkstk_darwin();
  long long v27 = (char *)&v173 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Image.ResizingMode();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin();
  uint64_t v31 = (char *)&v173 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814((uint64_t *)&unk_1010CEE80);
  __chkstk_darwin();
  id v33 = (char *)&v173 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v35 = (char *)&v173 - v34;
  __chkstk_darwin();
  unint64_t v37 = (char *)&v173 - v36;
  sub_100063814((uint64_t *)&unk_1010CF240);
  __chkstk_darwin();
  uint64_t v205 = (uint64_t)&v173 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v222 = (uint64_t)&v173 - v39;
  Int.seconds.getter(54);
  Int.seconds.getter(10);
  uint64_t v213 = a1;
  uint64_t v40 = *(void *)(a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v219 = v40;
  static Published.subscript.getter();
  swift_release();
  swift_release();
  if ((void)v225)
  {
    id v41 = (id)v225;
    Image.init(uiImage:)();
    (*(void (**)(char *, void, uint64_t))(v29 + 104))(v31, enum case for Image.ResizingMode.stretch(_:), v28);
    uint64_t v42 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v43 = v225;
    char v44 = BYTE8(v225);
    uint64_t v45 = v226;
    char v46 = BYTE8(v226);
    long long v47 = v227;
    char v48 = static Edge.Set.all.getter();
    EdgeInsets.init(_all:)();
    *(void *)long long v27 = v42;
    *((void *)v27 + 1) = v43;
    v27[16] = v44;
    *((void *)v27 + 3) = v45;
    v27[32] = v46;
    *(_OWORD *)(v27 + 40) = v47;
    *((_WORD *)v27 + 28) = 256;
    v27[64] = v48;
    *((void *)v27 + 9) = v49;
    *((void *)v27 + 10) = v50;
    *((void *)v27 + 11) = v51;
    *((void *)v27 + 12) = v52;
    v27[104] = 0;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_100063814(&qword_1010CF258);
    sub_100BE066C(&qword_1010CF260, &qword_1010CF258, (void (*)(void))sub_100BE0408);
    sub_100BE066C(&qword_1010CF298, &qword_1010CF230, (void (*)(void))sub_100BE051C);
    _ConditionalContent<>.init(storage:)();
    swift_release();

    uint64_t v53 = v220;
    uint64_t v54 = v221;
  }
  else
  {
    uint64_t v174 = v33;
    unint64_t v175 = v37;
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    uint64_t v55 = v176;
    uint64_t v56 = *(unsigned int (**)(void, void, void))(v176 + 48);
    uint64_t v57 = v177;
    if (v56(v35, 1, v177) == 1)
    {
      char v173 = v56;
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      Swift::String v58 = String.trim()();
      swift_bridgeObjectRelease();
      sub_100BE0368();
      uint64_t v59 = 1;
      id v60 = static MPArtworkCatalog.monogram(for:layoutDirection:)(v58._countAndFlagsBits, (uint64_t)v58._object, 0, 1);
      unint64_t v61 = v178;
      if (v60)
      {
        uint64_t v62 = (uint64_t)v175;
        Artwork.init(_:)();
        uint64_t v59 = 0;
        uint64_t v53 = v220;
      }
      else
      {
        uint64_t v53 = v220;
        uint64_t v62 = (uint64_t)v175;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v62, v59, 1, v57);
      swift_bridgeObjectRelease();
      sub_1000637B8((uint64_t)v35, (uint64_t *)&unk_1010CEE80);
      uint64_t v56 = v173;
    }
    else
    {
      uint64_t v62 = (uint64_t)v175;
      (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v175, v35, v57);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v62, 0, 1, v57);
      uint64_t v53 = v220;
      unint64_t v61 = v178;
    }
    uint64_t v63 = v62;
    uint64_t v64 = (uint64_t)v174;
    sub_10006CAB8(v63, (uint64_t)v174, (uint64_t *)&unk_1010CEE80);
    unsigned int v65 = v56(v64, 1, v57);
    uint64_t v66 = (uint64_t)v189;
    unint64_t v67 = v180;
    if (v65 == 1)
    {
      uint64_t v68 = type metadata accessor for ArtworkImage.ViewModel(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v67, 1, 1, v68);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v61, v64, v57);
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v67, v61, v57);
      uint64_t v69 = type metadata accessor for ArtworkImage.ViewModel(0);
      uint64_t v70 = v61;
      uint64_t v71 = &v67[*(int *)(v69 + 20)];
      uint64_t v72 = type metadata accessor for Artwork.CropStyle();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v71, 1, 1, v72);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v70, v57);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v67, 0, 1, v69);
    }
    uint64_t v73 = v191;
    uint64_t v74 = v190;
    uint64_t v75 = (uint64_t)v67;
    uint64_t v76 = sub_100063814(&qword_1010CF250);
    uint64_t v77 = (uint64_t)v188;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v188, 7, 10, v76);
    uint64_t v228 = 0;
    char v229 = 1;
    uint64_t v230 = 0;
    char v231 = 1;
    uint64_t v232 = 0;
    __int16 v233 = 513;
    (*(void (**)(uint64_t, void, uint64_t))(v74 + 104))(v66, enum case for ArtworkImage.ReusePolicy.reusableForDistinctItems(_:), v73);
    uint64_t v78 = v184;
    static ArtworkImage.with(_:placeholder:size:reusePolicy:)(v75, v77, (uint64_t)&v228, v66, v184);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v66, v73);
    sub_100BE03A8(v77, type metadata accessor for ArtworkImage.Placeholder);
    sub_1000637B8(v75, (uint64_t *)&unk_1010C8960);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v79 = v186;
    uint64_t v80 = (uint64_t)v183;
    uint64_t v81 = v187;
    (*(void (**)(char *, uint64_t, uint64_t))(v186 + 16))(v183, v78, v187);
    uint64_t v82 = (_OWORD *)(v80 + *(int *)(v179 + 36));
    long long v83 = v226;
    *uint64_t v82 = v225;
    v82[1] = v83;
    v82[2] = v227;
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v81);
    uint64_t v84 = v185;
    sub_10006CAB8(v80, v185, (uint64_t *)&unk_1010CF220);
    *(_WORD *)(v84 + *(int *)(v181 + 36)) = 256;
    sub_1000637B8(v80, (uint64_t *)&unk_1010CF220);
    LOBYTE(v81) = static Edge.Set.all.getter();
    EdgeInsets.init(_all:)();
    uint64_t v86 = v85;
    uint64_t v88 = v87;
    uint64_t v90 = v89;
    uint64_t v92 = v91;
    uint64_t v93 = v182;
    sub_10006CAB8(v84, v182, &qword_1010CECC8);
    uint64_t v94 = v93 + *(int *)(v201 + 36);
    *(unsigned char *)uint64_t v94 = v81;
    *(void *)(v94 + 8) = v86;
    *(void *)(v94 + 16) = v88;
    *(void *)(v94 + 24) = v90;
    *(void *)(v94 + 32) = v92;
    *(unsigned char *)(v94 + 40) = 0;
    sub_1000637B8(v84, &qword_1010CECC8);
    uint64_t v95 = v192;
    sub_10003CABC(v93, v192, &qword_1010CF230);
    sub_10006CAB8(v95, (uint64_t)v27, &qword_1010CF230);
    swift_storeEnumTagMultiPayload();
    sub_100063814(&qword_1010CF258);
    sub_100BE066C(&qword_1010CF260, &qword_1010CF258, (void (*)(void))sub_100BE0408);
    sub_100BE066C(&qword_1010CF298, &qword_1010CF230, (void (*)(void))sub_100BE051C);
    _ConditionalContent<>.init(storage:)();
    sub_1000637B8(v95, &qword_1010CF230);
    sub_1000637B8((uint64_t)v175, (uint64_t *)&unk_1010CEE80);
    uint64_t v54 = v221;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Swift::String v96 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v97 = ((unint64_t)v96._object >> 56) & 0xF;
  if (((uint64_t)v96._object & 0x2000000000000000) == 0) {
    unint64_t v97 = v96._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v97)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    Swift::String v98 = String.trim()();
    swift_bridgeObjectRelease();
    Swift::String v224 = v98;
    sub_10005D27C();
    uint64_t v99 = Text.init<A>(_:)();
    uint64_t v101 = v100;
    char v103 = v102 & 1;
    uint64_t v104 = Text.bold()();
    uint64_t v106 = v105;
    char v108 = v107;
    uint64_t v110 = v109;
    sub_1000D1500(v99, v101, v103);
    swift_bridgeObjectRelease();
    uint64_t v111 = v203;
    *uint64_t v203 = v104;
    v111[1] = v106;
    uint64_t v54 = v221;
    char v112 = v108 & 1;
    uint64_t v53 = v220;
    *((unsigned char *)v111 + 16) = v112;
    v111[3] = v110;
    swift_storeEnumTagMultiPayload();
    sub_100BC0FE8();
    _ConditionalContent<>.init(storage:)();
    uint64_t v113 = (uint64_t)v216;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v114 = v207;
    uint64_t v115 = v208;
    (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v54, v53, v208);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    id v116 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v117 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v119 = v118;
    (*(void (**)(char *, uint64_t))(v114 + 8))(v53, v115);
    v224._uint64_t countAndFlagsBits = v117;
    v224._uint64_t object = v119;
    uint64_t v120 = swift_allocObject();
    uint64_t v121 = v213;
    long long v122 = *(_OWORD *)(v213 + 48);
    *(_OWORD *)(v120 + 48) = *(_OWORD *)(v213 + 32);
    *(_OWORD *)(v120 + 64) = v122;
    *(_OWORD *)(v120 + 80) = *(_OWORD *)(v121 + 64);
    *(void *)(v120 + 96) = *(void *)(v121 + 80);
    long long v123 = *(_OWORD *)(v121 + 16);
    *(_OWORD *)(v120 + 16) = *(_OWORD *)v121;
    *(_OWORD *)(v120 + 32) = v123;
    sub_100BE01E8(v121);
    sub_10005D27C();
    uint64_t v124 = v209;
    Button<>.init<A>(_:action:)();
    uint64_t v125 = static Color.secondary.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v127 = v210;
    uint64_t v128 = (uint64_t)v193;
    uint64_t v129 = v211;
    (*(void (**)(char *, char *, uint64_t))(v210 + 16))(v193, v124, v211);
    uint64_t v130 = (uint64_t *)(v128 + *(int *)(v204 + 36));
    *uint64_t v130 = KeyPath;
    v130[1] = v125;
    (*(void (**)(char *, uint64_t))(v127 + 8))(v124, v129);
    uint64_t v131 = v194;
    sub_10003CABC(v128, v194, (uint64_t *)&unk_1010CDEE0);
    sub_10006CAB8(v131, (uint64_t)v203, (uint64_t *)&unk_1010CDEE0);
    swift_storeEnumTagMultiPayload();
    sub_100BC0FE8();
    _ConditionalContent<>.init(storage:)();
    sub_1000637B8(v131, (uint64_t *)&unk_1010CDEE0);
    uint64_t v113 = (uint64_t)v216;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Swift::String v132 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v133 = ((unint64_t)v132._object >> 56) & 0xF;
  if (((uint64_t)v132._object & 0x2000000000000000) == 0) {
    unint64_t v133 = v132._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v133)
  {
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v134 = v207;
    uint64_t v135 = v208;
    (*(void (**)(char *, char *, uint64_t))(v207 + 16))(v54, v53, v208);
    if (qword_1010C8350 != -1) {
      swift_once();
    }
    id v136 = (id)qword_10112BE80;
    static Locale.current.getter();
    uint64_t v137 = String.init(localized:table:bundle:locale:comment:)();
    BOOL v139 = v138;
    (*(void (**)(char *, uint64_t))(v134 + 8))(v53, v135);
    v224._uint64_t countAndFlagsBits = v137;
    v224._uint64_t object = v139;
    uint64_t v140 = swift_allocObject();
    uint64_t v141 = v213;
    long long v142 = *(_OWORD *)(v213 + 48);
    *(_OWORD *)(v140 + 48) = *(_OWORD *)(v213 + 32);
    *(_OWORD *)(v140 + 64) = v142;
    *(_OWORD *)(v140 + 80) = *(_OWORD *)(v141 + 64);
    *(void *)(v140 + 96) = *(void *)(v141 + 80);
    long long v143 = *(_OWORD *)(v141 + 16);
    *(_OWORD *)(v140 + 16) = *(_OWORD *)v141;
    *(_OWORD *)(v140 + 32) = v143;
    sub_100BE01E8(v141);
    sub_10005D27C();
    char v144 = v209;
    Button<>.init<A>(_:action:)();
    LOBYTE(v140) = static Edge.Set.trailing.getter();
    EdgeInsets.init(_all:)();
    uint64_t v146 = v145;
    uint64_t v148 = v147;
    uint64_t v150 = v149;
    uint64_t v152 = v151;
    uint64_t v153 = v210;
    uint64_t v154 = (uint64_t)v199;
    uint64_t v155 = v211;
    (*(void (**)(char *, char *, uint64_t))(v210 + 16))(v199, v144, v211);
    uint64_t v156 = v154 + *(int *)(v195 + 36);
    *(unsigned char *)uint64_t v156 = v140;
    *(void *)(v156 + 8) = v146;
    *(void *)(v156 + 16) = v148;
    *(void *)(v156 + 24) = v150;
    *(void *)(v156 + 32) = v152;
    *(unsigned char *)(v156 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v153 + 8))(v144, v155);
    uint64_t v157 = swift_getKeyPath();
    uint64_t v158 = v198;
    sub_10006CAB8(v154, v198, &qword_1010CF1E8);
    uint64_t v159 = v158 + *(int *)(v197 + 36);
    *(void *)uint64_t v159 = v157;
    *(void *)(v159 + 8) = 1;
    *(unsigned char *)(v159 + 16) = 0;
    sub_1000637B8(v154, &qword_1010CF1E8);
    uint64_t v160 = v196;
    sub_10006CAB8(v158, v196, &qword_1010CF1F0);
    uint64_t v161 = v215;
    *(void *)(v160 + *(int *)(v215 + 36)) = 0x3FF0000000000000;
    sub_1000637B8(v158, &qword_1010CF1F0);
    sub_10003CABC(v160, v113, &qword_1010CF1F8);
    uint64_t v162 = 0;
  }
  else
  {
    uint64_t v162 = 1;
    uint64_t v161 = v215;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v214 + 56))(v113, v162, 1, v161);
  uint64_t v163 = v222;
  uint64_t v164 = v113;
  uint64_t v165 = v205;
  sub_10006CAB8(v222, v205, (uint64_t *)&unk_1010CF240);
  uint64_t v166 = v223;
  uint64_t v167 = v212;
  sub_10006CAB8(v223, v212, &qword_1010CF218);
  uint64_t v168 = v217;
  sub_10006CAB8(v164, v217, (uint64_t *)&unk_1010CF200);
  uint64_t v169 = v218;
  sub_10006CAB8(v165, v218, (uint64_t *)&unk_1010CF240);
  uint64_t v170 = (int *)sub_100063814(&qword_1010CF2B8);
  sub_10006CAB8(v167, v169 + v170[12], &qword_1010CF218);
  uint64_t v171 = v169 + v170[16];
  *(void *)uint64_t v171 = 0;
  *(unsigned char *)(v171 + 8) = 1;
  sub_10006CAB8(v168, v169 + v170[20], (uint64_t *)&unk_1010CF200);
  sub_1000637B8(v164, (uint64_t *)&unk_1010CF200);
  sub_1000637B8(v166, &qword_1010CF218);
  sub_1000637B8(v163, (uint64_t *)&unk_1010CF240);
  sub_1000637B8(v168, (uint64_t *)&unk_1010CF200);
  sub_1000637B8(v167, &qword_1010CF218);
  return sub_1000637B8(v165, (uint64_t *)&unk_1010CF240);
}

uint64_t sub_100BDD81C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v77 = a2;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v4 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v67 - v9;
  uint64_t v68 = sub_100063814((uint64_t *)&unk_1010CD5A0);
  uint64_t v76 = *(void *)(v68 - 8);
  __chkstk_darwin();
  uint64_t v75 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v74 = (char *)&v67 - v12;
  __chkstk_darwin();
  uint64_t v73 = (char *)&v67 - v13;
  __chkstk_darwin();
  uint64_t v78 = (char *)&v67 - v14;
  __chkstk_darwin();
  uint64_t v72 = (char *)&v67 - v15;
  __chkstk_darwin();
  long long v83 = (char *)&v67 - v16;
  __chkstk_darwin();
  uint64_t v82 = (char *)&v67 - v17;
  __chkstk_darwin();
  uint64_t v81 = (char *)&v67 - v18;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v19 = v6;
  uint64_t v20 = v6 + 16;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v22 = v5;
  uint64_t v79 = v21;
  uint64_t v80 = v20;
  v21(v8, v10, v5);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v23 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v24 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v25 = v4;
  uint64_t v27 = v26;
  uint64_t v70 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v71 = v19 + 8;
  v70(v10, v22);
  uint64_t v84 = v24;
  uint64_t v85 = v27;
  uint64_t v28 = swift_allocObject();
  long long v29 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v28 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v28 + 64) = v29;
  *(_OWORD *)(v28 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v28 + 96) = *(void *)(a1 + 80);
  long long v30 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v28 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v28 + 32) = v30;
  sub_100BE01E8(a1);
  uint64_t v31 = v8;
  unint64_t v32 = sub_10005D27C();
  Button<>.init<A>(_:action:)();
  String.LocalizationValue.init(stringLiteral:)();
  v79(v31, v10, v22);
  id v33 = (id)qword_10112BE80;
  unint64_t v67 = v25;
  static Locale.current.getter();
  uint64_t v34 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v36 = v35;
  unint64_t v37 = v70;
  v70(v10, v22);
  uint64_t v84 = v34;
  uint64_t v85 = v36;
  uint64_t v38 = swift_allocObject();
  long long v39 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v38 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v38 + 64) = v39;
  *(_OWORD *)(v38 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v38 + 96) = *(void *)(a1 + 80);
  long long v40 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v38 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v38 + 32) = v40;
  sub_100BE01E8(a1);
  unint64_t v69 = v32;
  Button<>.init<A>(_:action:)();
  String.LocalizationValue.init(stringLiteral:)();
  v79(v31, v10, v22);
  id v41 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v42 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v44 = v43;
  v37(v10, v22);
  uint64_t v84 = v42;
  uint64_t v85 = v44;
  uint64_t v45 = swift_allocObject();
  long long v46 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v45 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v45 + 64) = v46;
  *(_OWORD *)(v45 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v45 + 96) = *(void *)(a1 + 80);
  long long v47 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v45 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v45 + 32) = v47;
  sub_100BE01E8(a1);
  Button<>.init<A>(_:action:)();
  String.LocalizationValue.init(stringLiteral:)();
  v79(v31, v10, v22);
  id v48 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v49 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v51 = v50;
  v37(v10, v22);
  uint64_t v84 = v49;
  uint64_t v85 = v51;
  uint64_t v52 = swift_allocObject();
  long long v53 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v52 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v52 + 64) = v53;
  *(_OWORD *)(v52 + 80) = *(_OWORD *)(a1 + 64);
  *(void *)(v52 + 96) = *(void *)(a1 + 80);
  long long v54 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v52 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v52 + 32) = v54;
  sub_100BE01E8(a1);
  uint64_t v55 = v72;
  Button<>.init<A>(_:action:)();
  uint64_t v56 = v76;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v76 + 16);
  Swift::String v58 = v78;
  uint64_t v59 = v68;
  v57(v78, v81, v68);
  id v60 = v73;
  v57(v73, v82, v59);
  unint64_t v61 = v74;
  v57(v74, v83, v59);
  uint64_t v62 = v75;
  v57(v75, v55, v59);
  uint64_t v63 = v77;
  v57(v77, v58, v59);
  uint64_t v64 = (int *)sub_100063814(&qword_1010CF1E0);
  v57(&v63[v64[12]], v60, v59);
  v57(&v63[v64[16]], v61, v59);
  v57(&v63[v64[20]], v62, v59);
  unsigned int v65 = *(void (**)(char *, uint64_t))(v56 + 8);
  v65(v55, v59);
  v65(v83, v59);
  v65(v82, v59);
  v65(v81, v59);
  v65(v62, v59);
  v65(v61, v59);
  v65(v60, v59);
  return ((uint64_t (*)(char *, uint64_t))v65)(v78, v59);
}

uint64_t sub_100BDE0EC()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100BDE174()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100BDE1F8(uint64_t a1)
{
  sub_100063814((uint64_t *)&unk_1010CEE80);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = *(void *)(a1 + 8);
  sub_100BDF4AC(0);
  uint64_t v7 = type metadata accessor for Artwork();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10006CAB8((uint64_t)v5, (uint64_t)v3, (uint64_t *)&unk_1010CEE80);
  swift_retain();
  static Published.subscript.setter();
  sub_1000637B8((uint64_t)v5, (uint64_t *)&unk_1010CEE80);
  uint64_t v8 = (unsigned char *)(v6 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
  uint64_t result = swift_beginAccess();
  *uint64_t v8 = 1;
  return result;
}

uint64_t sub_100BDE370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = (int *)type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  uint64_t v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v7 = (char *)&v23 - v6;
  type metadata accessor for InlineProfileEditingView.Context();
  sub_100BE06E8(&qword_1010CEED0, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v26 = v32;
  uint64_t v27 = v31;
  uint64_t v25 = v33;
  long long v29 = *(_OWORD *)(a1 + 64);
  uint64_t v30 = *(void *)(a1 + 80);
  sub_100063814((uint64_t *)&unk_1010CF1C8);
  State.projectedValue.getter();
  uint64_t v24 = *((void *)&v34 + 1);
  uint64_t v8 = v34;
  long long v9 = v35;
  long long v29 = *(_OWORD *)(a1 + 32);
  sub_100063814(&qword_1010CC190);
  State.projectedValue.getter();
  long long v10 = v34;
  char v11 = v35;
  if (qword_1010C8750 != -1) {
    swift_once();
  }
  uint64_t v12 = static UIImagePickerController.profileImagePickerProperties;
  uint64_t *v5 = swift_getKeyPath();
  sub_100063814(&qword_1010C8950);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = (uint64_t *)((char *)v5 + v3[7]);
  uint64_t v14 = v3[9];
  uint64_t v15 = (uint64_t *)((char *)v5 + v3[5]);
  *uint64_t v15 = v27;
  v15[1] = v26;
  _OWORD v15[2] = v25;
  uint64_t v16 = (char *)v5 + v3[6];
  uint64_t v17 = v24;
  *(void *)uint64_t v16 = v8;
  *((void *)v16 + 1) = v17;
  *((_OWORD *)v16 + 1) = v9;
  uint64_t v18 = (char *)v5 + v3[8];
  *(_OWORD *)uint64_t v18 = v10;
  v18[16] = v11;
  *uint64_t v13 = 0;
  v13[1] = 0;
  *(uint64_t *)((char *)v5 + v14) = v12;
  sub_100BE0270((uint64_t)v5, (uint64_t)v7);
  swift_bridgeObjectRetain();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v19 = v28;
  sub_100BE02D4((uint64_t)v7, v28, type metadata accessor for ImagePicker);
  uint64_t v20 = (_OWORD *)(v19 + *(int *)(sub_100063814(&qword_1010CF1D8) + 36));
  long long v21 = v35;
  *uint64_t v20 = v34;
  v20[1] = v21;
  v20[2] = v36;
  return sub_100BE03A8((uint64_t)v7, type metadata accessor for ImagePicker);
}

uint64_t sub_100BDE680@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100BDE700@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v85 = a2;
  sub_100063814((uint64_t *)&unk_1010CF1A0);
  __chkstk_darwin();
  uint64_t v81 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100063814((uint64_t *)&unk_1010CD5A0);
  uint64_t v91 = *(void *)(v89 - 8);
  __chkstk_darwin();
  uint64_t v84 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v83 = (char *)&v69 - v5;
  __chkstk_darwin();
  uint64_t v78 = (char *)&v69 - v6;
  uint64_t v77 = sub_100063814(&qword_1010CF1B0);
  __chkstk_darwin();
  uint64_t v88 = (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v76 = (char *)&v69 - v8;
  __chkstk_darwin();
  uint64_t v87 = (uint64_t)&v69 - v9;
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v69 - v14;
  uint64_t v16 = sub_100063814(&qword_1010CF1B8);
  uint64_t v79 = *(void *)(v16 - 8);
  uint64_t v80 = v16;
  __chkstk_darwin();
  uint64_t v86 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v90 = (char *)&v69 - v18;
  uint64_t v19 = a1[1];
  uint64_t v71 = *a1;
  uint64_t v82 = a1;
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v75 = v94;
  uint64_t v74 = v95;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v73(v13, v15, v10);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v20 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v21 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v23 = v22;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v69 = v11 + 8;
  uint64_t v72 = v24;
  v24(v15, v10);
  type metadata accessor for InlineProfileEditingView.Context();
  sub_100BE06E8(&qword_1010CEED0, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
  uint64_t v70 = v10;
  ObservedObject.projectedValue.getter();
  swift_getKeyPath();
  uint64_t v71 = v19;
  ObservedObject.Wrapper.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v92 = v21;
  uint64_t v93 = v23;
  sub_10005D27C();
  TextField<>.init<A>(_:text:onEditingChanged:onCommit:)();
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v25 = v70;
  v73(v13, v15, v70);
  id v26 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v27 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v29 = v28;
  v72(v15, v25);
  uint64_t v94 = v27;
  uint64_t v95 = v29;
  uint64_t v30 = v78;
  Button<>.init<A>(_:action:)();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  Swift::String v31 = String.trim()();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v32 = ((unint64_t)v31._object >> 56) & 0xF;
  if (((uint64_t)v31._object & 0x2000000000000000) == 0) {
    unint64_t v32 = v31._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  BOOL v33 = v32 == 0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = swift_allocObject();
  *(unsigned char *)(v35 + 16) = v33;
  uint64_t v36 = v91;
  unint64_t v37 = (void (*)(char *, uint64_t))(v91 + 16);
  uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
  uint64_t v38 = (uint64_t)v76;
  uint64_t v39 = v89;
  v73(v76, v30, v89);
  uint64_t v72 = v37;
  long long v40 = (uint64_t *)(v38 + *(int *)(v77 + 36));
  *long long v40 = KeyPath;
  v40[1] = (uint64_t)sub_100478498;
  v40[2] = v35;
  id v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v91 = v36 + 8;
  uint64_t v77 = (uint64_t)v41;
  v41(v30, v39);
  uint64_t v42 = v87;
  sub_10003CABC(v38, v87, &qword_1010CF1B0);
  uint64_t v43 = String.cancelButtonTitle.unsafeMutableAddressor();
  uint64_t v45 = *v43;
  uint64_t v44 = v43[1];
  uint64_t v94 = v45;
  uint64_t v95 = v44;
  swift_bridgeObjectRetain();
  long long v46 = v81;
  static ButtonRole.cancel.getter();
  uint64_t v47 = type metadata accessor for ButtonRole();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 0, 1, v47);
  uint64_t v48 = swift_allocObject();
  uint64_t v49 = (uint64_t)v82;
  long long v50 = *((_OWORD *)v82 + 3);
  *(_OWORD *)(v48 + 48) = *((_OWORD *)v82 + 2);
  *(_OWORD *)(v48 + 64) = v50;
  *(_OWORD *)(v48 + 80) = *(_OWORD *)(v49 + 64);
  uint64_t v51 = *(void *)(v49 + 80);
  long long v52 = *(_OWORD *)(v49 + 16);
  *(_OWORD *)(v48 + 16) = *(_OWORD *)v49;
  *(_OWORD *)(v48 + 32) = v52;
  uint64_t v53 = v75;
  *(void *)(v48 + 96) = v51;
  *(void *)(v48 + 104) = v53;
  *(void *)(v48 + 112) = v74;
  sub_100BE01E8(v49);
  long long v54 = v83;
  Button<>.init<A>(_:role:action:)();
  uint64_t v55 = v79;
  uint64_t v56 = v80;
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
  Swift::String v58 = v86;
  v57(v86, v90, v80);
  sub_10006CAB8(v42, v88, &qword_1010CF1B0);
  uint64_t v59 = v84;
  uint64_t v60 = v89;
  unint64_t v61 = (void (*)(uint64_t, char *, uint64_t))v73;
  v73(v84, v54, v89);
  uint64_t v62 = v85;
  v57(v85, v58, v56);
  uint64_t v63 = sub_100063814(&qword_1010CF1C0);
  uint64_t v64 = v88;
  sub_10006CAB8(v88, (uint64_t)&v62[*(int *)(v63 + 48)], &qword_1010CF1B0);
  v61((uint64_t)&v62[*(int *)(v63 + 64)], v59, v60);
  unsigned int v65 = v54;
  uint64_t v66 = (void (*)(char *, uint64_t))v77;
  ((void (*)(char *, uint64_t))v77)(v65, v60);
  sub_1000637B8(v87, &qword_1010CF1B0);
  unint64_t v67 = *(void (**)(char *, uint64_t))(v55 + 8);
  v67(v90, v56);
  v66(v59, v60);
  sub_1000637B8(v64, &qword_1010CF1B0);
  return ((uint64_t (*)(char *, uint64_t))v67)(v86, v56);
}

uint64_t sub_100BDF140@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_100BDF1C0()
{
  return static Published.subscript.setter();
}

uint64_t sub_100BDF244(long long *a1)
{
  long long v2 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1006F8F64((uint64_t)&v2);
  return static Published.subscript.setter();
}

uint64_t sub_100BDF2D4@<X0>(uint64_t a1@<X8>)
{
  return InlineProfileEditingView.body.getter(a1);
}

uint64_t sub_100BDF320()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();

  return swift_release();
}

uint64_t sub_100BDF39C(uint64_t a1)
{
  sub_100063814((uint64_t *)&unk_1010CEE80);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v7 - v4;
  sub_10006CAB8(a1, (uint64_t)&v7 - v4, (uint64_t *)&unk_1010CEE80);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10006CAB8((uint64_t)v5, (uint64_t)v3, (uint64_t *)&unk_1010CEE80);
  swift_retain();
  static Published.subscript.setter();
  return sub_1000637B8((uint64_t)v5, (uint64_t *)&unk_1010CEE80);
}

void sub_100BDF4AC(void *a1)
{
  uint64_t v3 = sub_100063814((uint64_t *)&unk_1010CEE80);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v13 - v7;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v14 = a1;
  id v9 = a1;
  swift_retain();
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  uint64_t v10 = v14;
  if (v14)
  {
    uint64_t v11 = (unsigned char *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI24InlineProfileEditingView7Context_hasRemovedImage);
    swift_beginAccess();
    unsigned char *v11 = 0;
    uint64_t v12 = type metadata accessor for Artwork();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 1, 1, v12);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10006CAB8((uint64_t)v8, (uint64_t)v5, (uint64_t *)&unk_1010CEE80);
    swift_retain();
    static Published.subscript.setter();
    sub_1000637B8((uint64_t)v8, (uint64_t *)&unk_1010CEE80);
  }
}

__n128 sub_100BDF6AC@<Q0>(__n128 *a1@<X8>)
{
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  State.init(wrappedValue:)();
  type metadata accessor for InlineProfileEditingView.Context();
  sub_100BE06E8(&qword_1010CEED0, (void (*)(uint64_t))type metadata accessor for InlineProfileEditingView.Context);
  a1->n128_u64[0] = ObservedObject.init(wrappedValue:)();
  a1->n128_u64[1] = v2;
  a1[1].n128_u8[0] = v4.n128_u8[0];
  a1[1].n128_u64[1] = v4.n128_u64[1];
  a1[2].n128_u8[0] = v4.n128_u8[0];
  a1[2].n128_u64[1] = v4.n128_u64[1];
  a1[3].n128_u8[0] = v4.n128_u8[0];
  a1[3].n128_u64[1] = v4.n128_u64[1];
  __n128 result = v4;
  a1[4] = v4;
  a1[5].n128_u64[0] = v5;
  return result;
}

void sub_100BDF80C(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_100BDF4AC(v1);
}

uint64_t type metadata accessor for InlineProfileEditingView.Context()
{
  uint64_t result = qword_1010CEFE0;
  if (!qword_1010CEFE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100BDF8A8@<X0>(char *a1@<X8>)
{
  return sub_100BDD81C(*(void *)(v1 + 16), a1);
}

unint64_t sub_100BDF8B0()
{
  unint64_t result = qword_1010CEF38;
  if (!qword_1010CEF38)
  {
    sub_10006389C(&qword_1010CEEF8);
    sub_100BE066C(&qword_1010CEF40, &qword_1010CEEF0, (void (*)(void))sub_100BDF97C);
    sub_100063858((unint64_t *)&unk_1010CEF70, (uint64_t *)&unk_1010CEF20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CEF38);
  }
  return result;
}

uint64_t sub_100BDF97C()
{
  return sub_100BE066C(&qword_1010CEF48, &qword_1010CEEE8, (void (*)(void))sub_100BDF9AC);
}

unint64_t sub_100BDF9AC()
{
  unint64_t result = qword_1010CEF50;
  if (!qword_1010CEF50)
  {
    sub_10006389C(&qword_1010CEEE0);
    sub_100063858(&qword_1010CEF58, &qword_1010CEED8);
    sub_100063858((unint64_t *)&unk_1010CEF60, &qword_1010CE730);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CEF50);
  }
  return result;
}

uint64_t sub_100BDFA70@<X0>(char *a1@<X8>)
{
  return sub_100BDE700(*(void **)(v1 + 16), a1);
}

unint64_t sub_100BDFA78()
{
  unint64_t result = qword_1010CEF98;
  if (!qword_1010CEF98)
  {
    sub_10006389C(&qword_1010CEF08);
    sub_10006389C(&qword_1010CEEF8);
    sub_10006389C(&qword_1010CEF30);
    sub_100BDF8B0();
    sub_10005D27C();
    sub_100063858(&qword_1010CEF80, &qword_1010CEF30);
    swift_getOpaqueTypeConformance2();
    sub_100063858(&qword_1010CEFA0, &qword_1010CEF88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CEF98);
  }
  return result;
}

uint64_t sub_100BDFBB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for InlineProfileEditingView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(a1 + 64) >= 3uLL)
  {
    swift_bridgeObjectRelease();
  }

  return swift_release();
}

uint64_t initializeWithCopy for InlineProfileEditingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v6 = (_OWORD *)(a2 + 64);
  unint64_t v5 = *(void *)(a2 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v5 >= 3)
  {
    uint64_t v7 = *(void **)(a2 + 72);
    *(void *)(a1 + 64) = v5;
    *(void *)(a1 + 72) = v7;
    swift_bridgeObjectRetain();
    id v8 = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *v6;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InlineProfileEditingView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  unint64_t v4 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64) >= 3uLL)
  {
    if (v4 >= 3)
    {
      *(void *)(a1 + 64) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void **)(a1 + 72);
      id v8 = *(void **)(a2 + 72);
      *(void *)(a1 + 72) = v8;
      id v9 = v8;

      goto LABEL_8;
    }
    sub_1000637B8(a1 + 64, &qword_1010CEFB0);
    goto LABEL_6;
  }
  if (v4 < 3)
  {
LABEL_6:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_8;
  }
  *(void *)(a1 + 64) = v4;
  unint64_t v5 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRetain();
  id v6 = v5;
LABEL_8:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for InlineProfileEditingView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  unint64_t v5 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64) >= 3uLL)
  {
    if (v5 >= 3)
    {
      *(void *)(a1 + 64) = v5;
      swift_bridgeObjectRelease();
      id v6 = *(void **)(a1 + 72);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);

      goto LABEL_6;
    }
    sub_1000637B8(a1 + 64, &qword_1010CEFB0);
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_6:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for InlineProfileEditingView()
{
  return &type metadata for InlineProfileEditingView;
}

uint64_t sub_100BDFF58()
{
  return type metadata accessor for InlineProfileEditingView.Context();
}

void sub_100BDFF60()
{
  sub_100013CE0(319, (unint64_t *)&unk_1010CEFF0, (uint64_t *)&unk_1010CEE80);
  if (v0 <= 0x3F)
  {
    sub_100B4C8B4();
    if (v1 <= 0x3F)
    {
      sub_100013CE0(319, (unint64_t *)&unk_1010CF000, &qword_1010C9270);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_100BE008C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BE0154()
{
  return swift_deallocObject();
}

uint64_t sub_100BE0164()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 80) >= 3uLL)
  {
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100BE01DC()
{
  return sub_100BDF244((long long *)(v0 + 16));
}

uint64_t sub_100BE01E8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void **)(a1 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100478D74(v2, v3);
  swift_retain();
  return a1;
}

uint64_t sub_100BE0270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BE02D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100BE0348()
{
  return sub_100BDE0EC();
}

uint64_t sub_100BE0354()
{
  return sub_100BDE174();
}

uint64_t sub_100BE0360()
{
  return sub_100BDE1F8(v0 + 16);
}

unint64_t sub_100BE0368()
{
  unint64_t result = qword_1010CDFA0;
  if (!qword_1010CDFA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010CDFA0);
  }
  return result;
}

uint64_t sub_100BE03A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100BE0408()
{
  unint64_t result = qword_1010CF268;
  if (!qword_1010CF268)
  {
    sub_10006389C(&qword_1010CF270);
    sub_100BE04A8();
    sub_100063858((unint64_t *)&unk_1010CE8A0, &qword_1010CF290);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF268);
  }
  return result;
}

unint64_t sub_100BE04A8()
{
  unint64_t result = qword_1010CF278;
  if (!qword_1010CF278)
  {
    sub_10006389C((uint64_t *)&unk_1010CF280);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF278);
  }
  return result;
}

unint64_t sub_100BE051C()
{
  unint64_t result = qword_1010CF2A0;
  if (!qword_1010CF2A0)
  {
    sub_10006389C(&qword_1010CECC8);
    sub_100BE05BC();
    sub_100063858((unint64_t *)&unk_1010CE8A0, &qword_1010CF290);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF2A0);
  }
  return result;
}

unint64_t sub_100BE05BC()
{
  unint64_t result = qword_1010CF2A8;
  if (!qword_1010CF2A8)
  {
    sub_10006389C((uint64_t *)&unk_1010CF220);
    sub_10006389C((uint64_t *)&unk_1010CE210);
    sub_100B778F0();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF2A8);
  }
  return result;
}

uint64_t sub_100BE066C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BE06E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BE0734()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100BE0790()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 80) >= 3uLL)
  {
    swift_bridgeObjectRelease();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100BE0800()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100BE0858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v56 = a1;
  uint64_t v60 = a2;
  uint64_t v53 = sub_100063814(&qword_1010CF2C8);
  uint64_t v4 = *(void *)(v53 - 8);
  __chkstk_darwin();
  id v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100063814(&qword_1010CF2D0);
  __chkstk_darwin();
  long long v52 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100063814(&qword_1010CF2D8);
  __chkstk_darwin();
  uint64_t v54 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v55 = (uint64_t)&v47 - v9;
  uint64_t v58 = sub_100063814(&qword_1010CF2E0);
  __chkstk_darwin();
  uint64_t v57 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100063814(&qword_1010CF2E8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v2 + 40);
  char v16 = *(unsigned char *)(v3 + 48);
  sub_100237EDC(v15, v16);
  char v17 = sub_100B6E784(v15, v16);
  sub_100237F44(v15, v16);
  if (v17)
  {
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v18(v14, v56, v11);
    v18(v57, (uint64_t)v14, v11);
    swift_storeEnumTagMultiPayload();
    sub_100063858(&qword_1010CF2F0, &qword_1010CF2E8);
    sub_100BE192C();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    type metadata accessor for ScrollGeometry();
    long long v65 = *(_OWORD *)(v3 + 24);
    uint64_t v20 = swift_allocObject();
    long long v21 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)(v20 + 16) = *(_OWORD *)v3;
    *(_OWORD *)(v20 + 32) = v21;
    *(_OWORD *)(v20 + 48) = *(_OWORD *)(v3 + 32);
    *(unsigned char *)(v20 + 64) = *(unsigned char *)(v3 + 48);
    sub_100237EDC(v15, v16);
    sub_1006F8F64((uint64_t)&v65);
    uint64_t v50 = sub_100063858(&qword_1010CF2F0, &qword_1010CF2E8);
    sub_100BE186C();
    uint64_t v49 = v11;
    View.onScrollGeometryChange<A>(for:of:action:)();
    swift_release();
    uint64_t v56 = static Alignment.bottom.getter();
    uint64_t v48 = v22;
    uint64_t v47 = static VerticalAlignment.center.getter();
    sub_100BE0FB4(v3, (uint64_t)v61);
    *(_OWORD *)&v62[119] = v61[7];
    *(_OWORD *)&v62[135] = v61[8];
    *(_OWORD *)&v62[151] = v61[9];
    *(_OWORD *)&v62[167] = v61[10];
    *(_OWORD *)&v62[55] = v61[3];
    *(_OWORD *)&v62[71] = v61[4];
    *(_OWORD *)&v62[87] = v61[5];
    *(_OWORD *)&v62[103] = v61[6];
    *(_OWORD *)&v62[7] = v61[0];
    *(_OWORD *)&v62[23] = v61[1];
    char v63 = 0;
    *(_OWORD *)&v62[39] = v61[2];
    uint64_t v23 = static SafeAreaRegions.all.getter();
    char v24 = static Edge.Set.all.getter();
    uint64_t v26 = (uint64_t)v52;
    uint64_t v25 = v53;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v52, v6, v53);
    uint64_t v27 = v26 + *(int *)(v51 + 36);
    long long v28 = *(_OWORD *)&v62[144];
    *(_OWORD *)(v27 + 161) = *(_OWORD *)&v62[128];
    *(_OWORD *)(v27 + 177) = v28;
    *(_OWORD *)(v27 + 193) = *(_OWORD *)&v62[160];
    long long v29 = *(_OWORD *)&v62[80];
    *(_OWORD *)(v27 + 97) = *(_OWORD *)&v62[64];
    *(_OWORD *)(v27 + 113) = v29;
    long long v30 = *(_OWORD *)&v62[112];
    *(_OWORD *)(v27 + 129) = *(_OWORD *)&v62[96];
    *(_OWORD *)(v27 + 145) = v30;
    long long v31 = *(_OWORD *)&v62[16];
    *(_OWORD *)(v27 + 33) = *(_OWORD *)v62;
    *(_OWORD *)(v27 + 49) = v31;
    long long v32 = *(_OWORD *)&v62[48];
    *(_OWORD *)(v27 + 65) = *(_OWORD *)&v62[32];
    uint64_t v33 = v48;
    *(void *)uint64_t v27 = v56;
    *(void *)(v27 + 8) = v33;
    *(void *)(v27 + 16) = v47;
    *(void *)(v27 + 24) = 0;
    *(unsigned char *)(v27 + 32) = 0;
    uint64_t v34 = *(void *)&v62[175];
    *(_OWORD *)(v27 + 81) = v32;
    *(void *)(v27 + 208) = v34;
    *(void *)(v27 + 216) = v23;
    *(unsigned char *)(v27 + 224) = v24;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v25);
    uint64_t v35 = static Alignment.center.getter();
    uint64_t v37 = v36;
    sub_100BE1274(v3, (uint64_t)v64);
    uint64_t v38 = v54;
    sub_10006CAB8(v26, v54, &qword_1010CF2D0);
    uint64_t v39 = v38 + *(int *)(v59 + 36);
    long long v40 = v64[9];
    *(_OWORD *)(v39 + 128) = v64[8];
    *(_OWORD *)(v39 + 144) = v40;
    long long v41 = v64[11];
    *(_OWORD *)(v39 + 160) = v64[10];
    *(_OWORD *)(v39 + 176) = v41;
    long long v42 = v64[5];
    *(_OWORD *)(v39 + 64) = v64[4];
    *(_OWORD *)(v39 + 80) = v42;
    long long v43 = v64[7];
    *(_OWORD *)(v39 + 96) = v64[6];
    *(_OWORD *)(v39 + 112) = v43;
    long long v44 = v64[1];
    *(_OWORD *)uint64_t v39 = v64[0];
    *(_OWORD *)(v39 + 16) = v44;
    long long v45 = v64[3];
    *(_OWORD *)(v39 + 32) = v64[2];
    *(_OWORD *)(v39 + 48) = v45;
    *(void *)(v39 + 192) = v35;
    *(void *)(v39 + 200) = v37;
    sub_1000637B8(v26, &qword_1010CF2D0);
    uint64_t v46 = v55;
    sub_100BE18C4(v38, v55);
    sub_10006CAB8(v46, (uint64_t)v57, &qword_1010CF2D8);
    swift_storeEnumTagMultiPayload();
    sub_100BE192C();
    _ConditionalContent<>.init(storage:)();
    return sub_1000637B8(v46, &qword_1010CF2D8);
  }
}

uint64_t sub_100BE0EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ScrollGeometry();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t sub_100BE0F18()
{
  ScrollGeometry.contentSize.getter();
  ScrollGeometry.visibleRect.getter();
  CGRectGetMaxY(v1);
  ScrollGeometry.contentInsets.getter();
  sub_100063814(&qword_1010CF330);
  return State.wrappedValue.setter();
}

void sub_100BE0FB4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static HorizontalAlignment.center.getter();
  sub_100BE10EC(a1, (uint64_t)&v23);
  long long v5 = v23;
  long long v6 = v24;
  long long v7 = v25;
  uint64_t v8 = v26;
  char v9 = v27;
  uint64_t v10 = v28;
  char v11 = v29;
  long long v12 = v30;
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    long long v18 = 0uLL;
  }
  else
  {
    long long v21 = v24;
    long long v22 = v23;
    long long v19 = v30;
    long long v20 = v25;
    uint64_t v13 = static Color.black.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    long long v12 = v19;
    long long v7 = v20;
    long long v6 = v21;
    long long v5 = v22;
    uint64_t v14 = v23;
    uint64_t v15 = BYTE8(v23);
    uint64_t v16 = v24;
    uint64_t v17 = BYTE8(v24);
    long long v18 = v25;
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(_OWORD *)(a2 + 24) = v5;
  *(_OWORD *)(a2 + 40) = v6;
  *(_OWORD *)(a2 + 56) = v7;
  *(void *)(a2 + 72) = v8;
  *(unsigned char *)(a2 + 80) = v9;
  *(void *)(a2 + 88) = v10;
  *(unsigned char *)(a2 + 96) = v11;
  *(_OWORD *)(a2 + 104) = v12;
  *(void *)(a2 + 120) = v13;
  *(void *)(a2 + 128) = v14;
  *(void *)(a2 + 136) = v15;
  *(void *)(a2 + 144) = v16;
  *(void *)(a2 + 152) = v17;
  *(_OWORD *)(a2 + 160) = v18;
}

double sub_100BE10EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = static Color.black.getter();
  sub_100063814(&qword_1010CF338);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100E251B0;
  *(void *)(v5 + 32) = static Color.black.getter();
  static Color.black.getter();
  long long v12 = *(_OWORD *)(a1 + 24);
  sub_100063814(&qword_1010CF330);
  State.wrappedValue.getter();
  uint64_t v6 = Color.opacity(_:)();
  swift_release();
  *(void *)(v5 + 40) = v6;
  specialized Array._endMutation()();
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v8;
  *(_OWORD *)(a2 + 16) = v9;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v11;
  *(void *)(a2 + 48) = v5;
  *(unsigned char *)(a2 + 56) = BYTE8(v12);
  *(void *)(a2 + 64) = v13;
  *(unsigned char *)(a2 + 72) = v14;
  double result = *(double *)&v15;
  *(_OWORD *)(a2 + 80) = v15;
  return result;
}

uint64_t sub_100BE1274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v18 = static HorizontalAlignment.center.getter();
  uint64_t v4 = static Alignment.center.getter();
  uint64_t v19 = v5;
  uint64_t v20 = v4;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  char v6 = static Edge.Set.trailing.getter();
  char v7 = *(unsigned char *)(a1 + 16);
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  if ((v7 & 1) == 0)
  {
    EdgeInsets.init(_all:)();
    uint64_t v8 = v12;
    uint64_t v9 = v13;
    uint64_t v10 = v14;
    uint64_t v11 = v15;
  }
  sub_100063814(&qword_1010CF330);
  State.wrappedValue.getter();
  char v16 = static Edge.Set.bottom.getter();
  uint64_t result = static SafeAreaRegions.all.getter();
  *(void *)a2 = v18;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 1;
  *(void *)(a2 + 40) = v20;
  *(void *)(a2 + 48) = v19;
  *(void *)(a2 + 56) = 0x4018000000000000;
  *(unsigned char *)(a2 + 64) = 3;
  *(void *)(a2 + 72) = v22;
  *(unsigned char *)(a2 + 80) = v23;
  *(void *)(a2 + 88) = v24;
  *(unsigned char *)(a2 + 96) = v25;
  *(void *)(a2 + 104) = v26;
  *(void *)(a2 + 112) = v27;
  *(unsigned char *)(a2 + 120) = v6;
  *(void *)(a2 + 128) = v8;
  *(void *)(a2 + 136) = v9;
  *(void *)(a2 + 144) = v10;
  *(void *)(a2 + 152) = v11;
  *(unsigned char *)(a2 + 160) = v7;
  *(void *)(a2 + 168) = v21;
  *(void *)(a2 + 176) = result;
  *(unsigned char *)(a2 + 184) = v16;
  return result;
}

uint64_t sub_100BE1424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BE0858(a1, a2);
}

uint64_t sub_100BE1468()
{
  return swift_release();
}

uint64_t sub_100BE1540@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accessibilityReduceTransparency.getter();
  *a1 = result & 1;
  return result;
}

uint64_t destroy for BottomGradientBlurMask(uint64_t a1)
{
  swift_release();
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);

  return sub_100237F44(v2, v3);
}

uint64_t initializeWithCopy for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  char v6 = *(unsigned char *)(a2 + 48);
  swift_retain();
  sub_100237EDC(v5, v6);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = v6;
  return a1;
}

uint64_t assignWithCopy for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(v2 + 40);
  LOBYTE(v2) = *(unsigned char *)(v2 + 48);
  sub_100237EDC(v5, v2);
  uint64_t v6 = *(void *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = v2;
  sub_100237F44(v6, v7);
  return a1;
}

__n128 initializeWithTake for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BottomGradientBlurMask(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  char v4 = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v4;
  sub_100237F44(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for BottomGradientBlurMask(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BottomGradientBlurMask(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BottomGradientBlurMask()
{
  return &type metadata for BottomGradientBlurMask;
}

uint64_t sub_100BE1804()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BE1820()
{
  swift_release();
  sub_100237F44(*(void *)(v0 + 56), *(unsigned char *)(v0 + 64));

  return swift_deallocObject();
}

uint64_t sub_100BE1864()
{
  return sub_100BE0F18();
}

unint64_t sub_100BE186C()
{
  unint64_t result = qword_1010CF2F8;
  if (!qword_1010CF2F8)
  {
    type metadata accessor for ScrollGeometry();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF2F8);
  }
  return result;
}

uint64_t sub_100BE18C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010CF2D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100BE192C()
{
  unint64_t result = qword_1010CF300;
  if (!qword_1010CF300)
  {
    sub_10006389C(&qword_1010CF2D8);
    sub_100BE19CC();
    sub_100063858(&qword_1010CF320, &qword_1010CF328);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF300);
  }
  return result;
}

unint64_t sub_100BE19CC()
{
  unint64_t result = qword_1010CF308;
  if (!qword_1010CF308)
  {
    sub_10006389C(&qword_1010CF2D0);
    sub_10006389C(&qword_1010CF2E8);
    type metadata accessor for ScrollGeometry();
    sub_100063858(&qword_1010CF2F0, &qword_1010CF2E8);
    sub_100BE186C();
    swift_getOpaqueTypeConformance2();
    sub_100063858(&qword_1010CF310, &qword_1010CF318);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF308);
  }
  return result;
}

unint64_t sub_100BE1AE8()
{
  unint64_t result = qword_1010CF340;
  if (!qword_1010CF340)
  {
    sub_10006389C(&qword_1010CF348);
    sub_100063858(&qword_1010CF2F0, &qword_1010CF2E8);
    sub_100BE192C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF340);
  }
  return result;
}

uint64_t sub_100BE1B88()
{
  return ScrollView.init(_:showsIndicators:content:)();
}

uint64_t ExpandableTextView.init(title:buttonColor:_:sheetContent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, void (*a5)(uint64_t)@<X5>, uint64_t a6@<X8>)
{
  State.init(wrappedValue:)();
  *(unsigned char *)a6 = v15;
  *(void *)(a6 + 8) = v16;
  *(void *)(a6 + 16) = a1;
  *(void *)(a6 + 24) = a2;
  *(void *)(a6 + *(int *)(type metadata accessor for ExpandableTextView() + 64)) = a3;
  uint64_t v12 = swift_retain();
  uint64_t v13 = a4(v12);
  a5(v13);
  return swift_release();
}

uint64_t type metadata accessor for ExpandableTextView()
{
  return swift_getGenericMetadata();
}

uint64_t ExpandableTextView.init<>(title:buttonColor:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X8>)
{
  return ExpandableTextView.init(title:buttonColor:_:sheetContent:)(a1, a2, a3, a4, (void (*)(uint64_t))a4, a5);
}

uint64_t ExpandableTextView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v68 = *(a1 - 1);
  uint64_t v70 = *(void *)(v68 + 64);
  __chkstk_darwin();
  uint64_t v85 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = *(void *)(v4 + 16);
  uint64_t v5 = v64;
  uint64_t v6 = type metadata accessor for MoreLabel();
  uint64_t v78 = v6;
  uint64_t v84 = a1[4];
  uint64_t v7 = v84;
  uint64_t v73 = sub_100BE8088(&qword_1010CF350, (void (*)(uint64_t))type metadata accessor for MoreLabel);
  uint64_t v98 = v5;
  uint64_t v99 = (ValueMetadata *)v6;
  uint64_t v100 = v7;
  uint64_t v101 = (void *)v73;
  uint64_t v8 = type metadata accessor for HeightLimitedButtonTextView();
  uint64_t v79 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v69 = (uint64_t)&v54 - v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v98 = v8;
  uint64_t v99 = (ValueMetadata *)&type metadata for Bool;
  uint64_t v60 = v8;
  uint64_t v100 = WitnessTable;
  uint64_t v101 = &protocol witness table for Bool;
  uint64_t v61 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v72 = OpaqueTypeMetadata2;
  uint64_t v80 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  unint64_t v67 = (char *)&v54 - v12;
  uint64_t v55 = a1;
  uint64_t v82 = a1[3];
  uint64_t v83 = a1[5];
  uint64_t v13 = type metadata accessor for Sheet();
  uint64_t v14 = swift_getWitnessTable();
  unint64_t v15 = sub_100BE25A8();
  uint64_t v98 = v13;
  uint64_t v99 = &type metadata for DescriptionSheetSizing;
  uint64_t v100 = v14;
  uint64_t v101 = (void *)v15;
  uint64_t v16 = swift_getOpaqueTypeMetadata2();
  uint64_t v63 = v16;
  uint64_t v98 = v8;
  uint64_t v99 = (ValueMetadata *)&type metadata for Bool;
  uint64_t v100 = WitnessTable;
  uint64_t v101 = &protocol witness table for Bool;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v66 = OpaqueTypeConformance2;
  uint64_t v98 = v13;
  uint64_t v99 = &type metadata for DescriptionSheetSizing;
  uint64_t v100 = v14;
  uint64_t v101 = (void *)v15;
  uint64_t v65 = swift_getOpaqueTypeConformance2();
  uint64_t v98 = OpaqueTypeMetadata2;
  uint64_t v99 = (ValueMetadata *)v16;
  uint64_t v100 = OpaqueTypeConformance2;
  uint64_t v101 = (void *)v65;
  uint64_t v75 = &opaque type descriptor for <<opaque return type of View.sheet<A>(isPresented:onDismiss:content:)>>;
  uint64_t v76 = swift_getOpaqueTypeMetadata2();
  uint64_t v77 = *(void *)(v76 - 8);
  __chkstk_darwin();
  uint64_t v62 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v19 = __chkstk_darwin();
  uint64_t v71 = (char *)&v54 - v20;
  uint64_t v21 = v68;
  uint64_t v22 = *(void (**)(char *, char *, void *))(v68 + 16);
  uint64_t v58 = v68 + 16;
  uint64_t v59 = v22;
  char v23 = v85;
  uint64_t v24 = v74;
  char v25 = v55;
  ((void (*)(char *, char *, void *, __n128))v22)(v85, v74, v55, v19);
  uint64_t v26 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v27 = (v26 + 48) & ~v26;
  v70 += v27;
  uint64_t v57 = v27;
  uint64_t v56 = v26 | 7;
  uint64_t v28 = (void *)swift_allocObject();
  uint64_t v29 = v64;
  uint64_t v30 = v82;
  v28[2] = v64;
  v28[3] = v30;
  uint64_t v31 = v84;
  uint64_t v32 = v83;
  v28[4] = v84;
  v28[5] = v32;
  uint64_t v33 = (char *)v28 + v27;
  uint64_t v34 = *(void (**)(char *, char *, void *))(v21 + 32);
  v34(v33, v23, v25);
  uint64_t v91 = v29;
  uint64_t v92 = v30;
  uint64_t v93 = v31;
  uint64_t v94 = v32;
  uint64_t v95 = v24;
  uint64_t v86 = v29;
  uint64_t v87 = v30;
  uint64_t v88 = v31;
  uint64_t v89 = v32;
  uint64_t v90 = v24;
  uint64_t v35 = v69;
  HeightLimitedButtonTextView.init(action:body:trailingView:)((uint64_t)sub_100BE2600, (uint64_t)v28, (void (*)(void))sub_100BE2710, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100BE28C0, v69);
  uint64_t v36 = (ValueMetadata *)*((void *)v24 + 1);
  LOBYTE(v98) = *v24;
  uint64_t v99 = v36;
  sub_100063814(&qword_1010CC190);
  State.wrappedValue.getter();
  LOBYTE(v98) = v96;
  uint64_t v37 = v67;
  uint64_t v38 = v60;
  View.onChange<A>(of:initial:_:)();
  (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v35, v38);
  uint64_t v39 = *((void *)v24 + 1);
  char v96 = *v24;
  uint64_t v97 = v39;
  State.projectedValue.getter();
  long long v40 = v85;
  v59(v85, v24, v25);
  long long v41 = (char *)swift_allocObject();
  uint64_t v42 = v82;
  *((void *)v41 + 2) = v29;
  *((void *)v41 + 3) = v42;
  uint64_t v43 = v83;
  *((void *)v41 + 4) = v84;
  *((void *)v41 + 5) = v43;
  v34(&v41[v57], v40, v25);
  uint64_t v44 = swift_checkMetadataState();
  long long v45 = (void *)v65;
  uint64_t v46 = v66;
  uint64_t v47 = v62;
  uint64_t v48 = v72;
  View.sheet<A>(isPresented:onDismiss:content:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v37, v48);
  uint64_t v98 = v48;
  uint64_t v99 = (ValueMetadata *)v44;
  uint64_t v100 = v46;
  uint64_t v101 = v45;
  uint64_t v49 = swift_getOpaqueTypeConformance2();
  uint64_t v50 = v71;
  uint64_t v51 = v76;
  sub_1005CF83C(v47, v76, v49);
  long long v52 = *(void (**)(char *, uint64_t))(v77 + 8);
  v52(v47, v51);
  sub_1005CF83C(v50, v51, v49);
  return ((uint64_t (*)(char *, uint64_t))v52)(v50, v51);
}

uint64_t type metadata accessor for Sheet()
{
  return sub_10004CF5C();
}

unint64_t sub_100BE25A8()
{
  unint64_t result = qword_1010CF358[0];
  if (!qword_1010CF358[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1010CF358);
  }
  return result;
}

uint64_t sub_100BE2600()
{
  return sub_100BE775C();
}

uint64_t sub_100BE2608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a2 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = v10;
  v16[1] = v11;
  v16[2] = v12;
  v16[3] = v13;
  uint64_t v14 = type metadata accessor for ExpandableTextView();
  sub_1005CF83C(a1 + *(int *)(v14 + 56), a2, a4);
  sub_1005CF83C(v9, a2, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, a2);
}

uint64_t sub_100BE2710()
{
  return sub_100BE7814((uint64_t (*)(void, void, void, void, void))sub_100BE2608);
}

uint64_t sub_100BE2728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for MoreLabel();
  __chkstk_darwin();
  uint64_t v14 = (void *)((char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v16 = (char *)v24 - v15;
  __chkstk_darwin();
  uint64_t v18 = (char *)v24 - v17;
  v24[0] = a2;
  v24[1] = a3;
  v24[2] = a4;
  v24[3] = a5;
  uint64_t v19 = *(int *)(type metadata accessor for ExpandableTextView() + 64);
  if (*(void *)(a1 + v19)) {
    uint64_t v20 = *(void *)(a1 + v19);
  }
  else {
    uint64_t v20 = static Color.primary.getter();
  }
  uint64_t v21 = (uint64_t *)((char *)v14 + *(int *)(v12 + 20));
  *uint64_t v21 = swift_getKeyPath();
  sub_100063814(&qword_1010C8958);
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = (char *)v14 + *(int *)(v12 + 24);
  *(void *)uint64_t v22 = swift_getKeyPath();
  v22[8] = 0;
  *uint64_t v14 = v20;
  sub_100BE783C((uint64_t)v14, (uint64_t)v16);
  sub_100BE783C((uint64_t)v16, (uint64_t)v18);
  sub_100BE783C((uint64_t)v18, a6);
  return swift_retain();
}

uint64_t sub_100BE28C0()
{
  return sub_100BE7814((uint64_t (*)(void, void, void, void, void))sub_100BE2728);
}

uint64_t sub_100BE28D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, ValueMetadata *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v49 = a4;
  uint64_t v51 = a6;
  uint64_t v57 = a2;
  uint64_t v58 = a3;
  uint64_t v59 = a4;
  unint64_t v60 = a5;
  unint64_t v42 = a5;
  uint64_t v9 = type metadata accessor for ExpandableTextView();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t v13 = type metadata accessor for Sheet();
  uint64_t v50 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v46 = (uint64_t *)((char *)&v36 - v14);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v44 = WitnessTable;
  unint64_t v43 = sub_100BE25A8();
  uint64_t v57 = v13;
  uint64_t v58 = &type metadata for DescriptionSheetSizing;
  uint64_t v59 = WitnessTable;
  unint64_t v60 = v43;
  uint64_t v47 = &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v48 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  long long v40 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v17 = __chkstk_darwin();
  long long v41 = (char *)&v36 - v18;
  uint64_t v37 = a1;
  uint64_t v39 = *(void *)(a1 + 16);
  uint64_t v38 = *(void *)(a1 + 24);
  uint64_t v19 = v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a1, v9, v17);
  unint64_t v20 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v21 = (char *)swift_allocObject();
  uint64_t v22 = a2;
  *((void *)v21 + 2) = a2;
  *((void *)v21 + 3) = a3;
  char v23 = a3;
  uint64_t v24 = v49;
  unint64_t v25 = v42;
  *((void *)v21 + 4) = v49;
  *((void *)v21 + 5) = v25;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v21[v20], v12, v19);
  uint64_t v52 = v22;
  uint64_t v53 = v23;
  uint64_t v54 = v24;
  unint64_t v55 = v25;
  uint64_t v56 = v37;
  uint64_t v26 = v38;
  swift_bridgeObjectRetain();
  uint64_t v27 = v46;
  sub_100BE2F18(v39, v26, (uint64_t)sub_100BE7754, (uint64_t)v21, (uint64_t (*)(uint64_t))sub_100BE77FC, v46);
  uint64_t v28 = v40;
  unint64_t v30 = v43;
  uint64_t v29 = v44;
  View.presentationSizing<A>(_:)();
  (*(void (**)(void *, uint64_t))(v50 + 8))(v27, v13);
  uint64_t v57 = v13;
  uint64_t v58 = &type metadata for DescriptionSheetSizing;
  uint64_t v59 = v29;
  unint64_t v60 = v30;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v32 = v41;
  uint64_t v33 = OpaqueTypeMetadata2;
  sub_1005CF83C(v28, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v48 + 8);
  v34(v28, v33);
  sub_1005CF83C(v32, v33, OpaqueTypeConformance2);
  return ((uint64_t (*)(char *, uint64_t))v34)(v32, v33);
}

uint64_t sub_100BE2D20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = (ValueMetadata *)v1[3];
  uint64_t v5 = v1[4];
  unint64_t v6 = v1[5];
  uint64_t v7 = *(void *)(type metadata accessor for ExpandableTextView() - 8);
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_100BE28D8(v8, v3, v4, v5, v6, a1);
}

uint64_t sub_100BE2DCC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BE2E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a3 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = v11;
  v17[1] = v12;
  void v17[2] = v13;
  v17[3] = v14;
  uint64_t v15 = type metadata accessor for ExpandableTextView();
  sub_1005CF83C(a1 + *(int *)(v15 + 60), a3, a5);
  sub_1005CF83C(v10, a3, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, a3);
}

uint64_t sub_100BE2F18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(uint64_t)@<X4>, void *a6@<X8>)
{
  uint64_t v12 = type metadata accessor for Sheet();
  uint64_t v13 = (void *)((char *)a6 + *(int *)(v12 + 44));
  *uint64_t v13 = swift_getKeyPath();
  sub_100063814(&qword_1010C8950);
  uint64_t v14 = swift_storeEnumTagMultiPayload();
  *a6 = a1;
  a6[1] = a2;
  uint64_t result = a5(v14);
  uint64_t v16 = (void *)((char *)a6 + *(int *)(v12 + 40));
  *uint64_t v16 = a3;
  v16[1] = a4;
  return result;
}

uint64_t sub_100BE2FDC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100BE30C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(v4 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v7 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  if ((v9 | v6) > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80)) & 0x100000) != 0
    || ((v11 + ((v7 + v9 + ((v6 + 32) & ~v6)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + (((v9 | v6) & 0xF8 ^ 0x1F8) & ((v9 | v6) + 16)));
  }
  else
  {
    uint64_t v21 = *(void *)(a3 + 16);
    uint64_t v22 = ~v9;
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v15 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v16 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v15 = *v16;
    v15[1] = v16[1];
    uint64_t v17 = ((unint64_t)v15 + v6 + 16) & ~v6;
    uint64_t v18 = ((unint64_t)v16 + v6 + 16) & ~v6;
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    v19(v17, v18, v21);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))((v17 + v10) & v22, (v18 + v10) & v22, v4);
    *(void *)((v11 + ((v17 + v10) & v22)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v11 + ((v18 + v10) & v22)) & 0xFFFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v3;
}

uint64_t sub_100BE32D0(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((v6
                                                                                            + *(void *)(v5 + 56)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));

  return swift_release();
}

uint64_t sub_100BE33BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v5 = (void *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)((a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v5 = *v6;
  v5[1] = v6[1];
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(void *)(v7 - 8) + 16;
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v11 = ((unint64_t)v5 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v6 + v10 + 16) & ~v10;
  swift_retain();
  swift_bridgeObjectRetain();
  v8(v11, v12, v7);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 16;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = *(void *)(v9 + 48) + v15;
  uint64_t v17 = (v16 + v11) & ~v15;
  uint64_t v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v17, v18);
  *(void *)((*(void *)(v14 + 48) + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v14 + 48)
                                                                                       + 7
                                                                                       + v18) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t sub_100BE34FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  unint64_t v6 = (void *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)((a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = ((unint64_t)v6 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v7 + v10 + 16) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 24;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = *(void *)(v9 + 40) + v15;
  uint64_t v17 = (v16 + v11) & ~v15;
  uint64_t v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v17, v18);
  *(void *)((*(void *)(v14 + 40) + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v14 + 40)
                                                                                       + 7
                                                                                       + v18) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100BE3654(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 32);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 32;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v12 + v15;
  uint64_t v17 = (v16 + v10) & ~v15;
  uint64_t v18 = (v16 + v11) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v17, v18);
  *(void *)((*(void *)(v14 + 32) + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v14 + 32)
                                                                                       + 7
                                                                                       + v18) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100BE3768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  unint64_t v6 = (void *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)((a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = ((unint64_t)v6 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v7 + v10 + 16) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  uint64_t v13 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v14 = v13 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = *(void *)(v9 + 24) + v15;
  uint64_t v17 = (v16 + v11) & ~v15;
  uint64_t v18 = (v16 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v17, v18);
  *(void *)((*(void *)(v14 + 24) + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v14 + 24)
                                                                                       + 7
                                                                                       + v18) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_100BE38A8(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = *(void *)(v4 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  if (v5 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v4 + 84);
  }
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  if (v13 < a2)
  {
    unint64_t v14 = ((*(void *)(*(void *)(v6 - 8) + 64) + ((v10 + v11 + ((v9 + 32) & ~v9)) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    if ((v14 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = a2 - v13 + 1;
    }
    if (v15 >= 0x10000) {
      unsigned int v16 = 4;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v15 < 0x100) {
      unsigned int v16 = 1;
    }
    if (v15 >= 2) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 0;
    }
    switch(v17)
    {
      case 1:
        int v18 = *((unsigned __int8 *)a1 + v14);
        if (!*((unsigned char *)a1 + v14)) {
          break;
        }
        goto LABEL_25;
      case 2:
        int v18 = *(unsigned __int16 *)((char *)a1 + v14);
        if (*(_WORD *)((char *)a1 + v14)) {
          goto LABEL_25;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100BE3ABCLL);
      case 4:
        int v18 = *(int *)((char *)a1 + v14);
        if (!v18) {
          break;
        }
LABEL_25:
        int v20 = v18 - 1;
        if ((v14 & 0xFFFFFFF8) != 0)
        {
          int v20 = 0;
          int v21 = *a1;
        }
        else
        {
          int v21 = 0;
        }
        return v13 + (v21 | v20) + 1;
      default:
        break;
    }
  }
  if (v12 > 0x7FFFFFFE)
  {
    unint64_t v24 = ((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v9 + 16) & ~v9;
    if (v5 == v13) {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))(v24);
    }
    else {
      return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))((v24 + v10 + v11) & ~v11, v8, v6);
    }
  }
  else
  {
    unint64_t v22 = *((void *)a1 + 1);
    if (v22 >= 0xFFFFFFFF) {
      LODWORD(v22) = -1;
    }
    int v23 = v22 - 1;
    if (v23 < 0) {
      int v23 = -1;
    }
    return (v23 + 1);
  }
}

void sub_100BE3AD0(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (v7 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v13 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v6 + 84);
  }
  if (v13 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  else {
    unsigned int v14 = v13;
  }
  size_t v15 = ((*(void *)(*(void *)(v8 - 8) + 64) + ((v11 + v12 + ((v10 + 32) & ~v10)) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v14 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v14;
    if (a2 <= v14)
    {
LABEL_20:
      switch(v19)
      {
        case 1:
          a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 2:
          *(_WORD *)&a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_33;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)&a1[v15] = 0;
          goto LABEL_32;
        default:
LABEL_32:
          if (a2)
          {
LABEL_33:
            if (v13 > 0x7FFFFFFE)
            {
              unint64_t v23 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v10 + 16) & ~v10;
              if (v7 == v14)
              {
                unint64_t v24 = *(void (**)(unint64_t))(v6 + 56);
                v24(v23);
              }
              else
              {
                unint64_t v25 = (v23 + v11 + v12) & ~v12;
                uint64_t v26 = *(void (**)(unint64_t))(v9 + 56);
                v26(v25);
              }
            }
            else if (a2 > 0x7FFFFFFE)
            {
              *(void *)a1 = a2 - 0x7FFFFFFF;
              *((void *)a1 + 1) = 0;
            }
            else
            {
              *((void *)a1 + 1) = a2;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = a3 - v14;
    if (((*(_DWORD *)(*(void *)(v8 - 8) + 64)
         + ((v11 + v12 + ((v10 + 32) & ~v10)) & ~v12)
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v17 = v16 + 1;
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v14;
    if (a2 <= v14) {
      goto LABEL_20;
    }
  }
  if (((*(_DWORD *)(*(void *)(v8 - 8) + 64)
       + ((v11 + v12 + ((v10 + 32) & ~v10)) & ~v12)
       + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
    int v21 = v20;
  else {
    int v21 = 1;
  }
  if (((*(_DWORD *)(*(void *)(v8 - 8) + 64)
       + ((v11 + v12 + ((v10 + 32) & ~v10)) & ~v12)
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v22 = ~v14 + a2;
    bzero(a1, v15);
    *(_DWORD *)a1 = v22;
  }
  switch(v19)
  {
    case 1:
      a1[v15] = v21;
      break;
    case 2:
      *(_WORD *)&a1[v15] = v21;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x100BE3D94);
    case 4:
      *(_DWORD *)&a1[v15] = v21;
      break;
    default:
      return;
  }
}

uint64_t sub_100BE3DBC()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for DescriptionSheetSizing()
{
  return &type metadata for DescriptionSheetSizing;
}

void sub_100BE3FBC()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_100B4D200();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_100BE4094(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v6 + 64) + 7;
  uint64_t v10 = type metadata accessor for DismissAction();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v12 & 0xF8 | 7;
  if (*(void *)(v11 + 64) <= 8uLL) {
    uint64_t v14 = 8;
  }
  else {
    uint64_t v14 = *(void *)(v11 + 64);
  }
  int v15 = (v12 | v7) & 0x100000;
  if ((v13 | v7) != 7
    || v15 != 0
    || v14
     + ((v13
       + ((v9 + ((v7 + 16) & ~(unint64_t)v7)) & 0xFFFFFFFFFFFFFFF8)
       + 16) & ~v13)
     + 1 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v13 | v7) + 16) & ~(v13 | v7)));
LABEL_30:
    swift_retain();
    return a1;
  }
  uint64_t v36 = *(void *)(v10 - 8);
  uint64_t v19 = ~v13;
  uint64_t v20 = a2[1];
  *a1 = *a2;
  a1[1] = v20;
  int v21 = (char *)a2 + v8;
  uint64_t v22 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v23 = (unint64_t)(v21 + 16) & ~v8;
  unint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v24(v22, v23, v5);
  unint64_t v25 = (v9 + v22) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v9 + v23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v26 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
  }
  else
  {
    uint64_t v27 = *(void *)(v26 + 8);
    *(void *)unint64_t v25 = *(void *)v26;
    *(void *)(v25 + 8) = v27;
    swift_retain();
  }
  uint64_t v28 = (void *)((v25 + v13 + 16) & v19);
  uint64_t v29 = (unsigned __int8 *)((v26 + v13 + 16) & v19);
  unsigned int v30 = v29[v14];
  unsigned int v31 = v30 - 2;
  if (v30 >= 2)
  {
    if (v14 <= 3) {
      uint64_t v32 = v14;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *v29;
        goto LABEL_25;
      case 2:
        int v33 = *(unsigned __int16 *)v29;
        goto LABEL_25;
      case 3:
        int v33 = *(unsigned __int16 *)v29 | (*(unsigned __int8 *)(((v26 + v13 + 16) & v19) + 2) << 16);
        goto LABEL_25;
      case 4:
        int v33 = *(_DWORD *)v29;
LABEL_25:
        int v34 = (v33 | (v31 << (8 * v14))) + 2;
        unsigned int v30 = v33 + 2;
        if (v14 < 4) {
          unsigned int v30 = v34;
        }
        break;
      default:
        break;
    }
  }
  if (v30 != 1)
  {
    *uint64_t v28 = *(void *)v29;
    *((unsigned char *)v28 + v14) = 0;
    goto LABEL_30;
  }
  (*(void (**)(void *))(v36 + 16))(v28);
  *((unsigned char *)v28 + v14) = 1;
  return a1;
}

uint64_t sub_100BE4358(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  int v7 = (void *)((*(void *)(v5 + 56) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (*v7 >= 0xFFFFFFFFuLL) {
    swift_release();
  }
  uint64_t v8 = *(void *)(type metadata accessor for DismissAction() - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  uint64_t v10 = (unsigned __int8 *)(((unint64_t)v7 + v9 + 16) & ~v9);
  unint64_t v11 = *(void *)(v8 + 64);
  if (v11 <= 8) {
    unint64_t v11 = 8;
  }
  unsigned int v12 = v10[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *v10;
        goto LABEL_14;
      case 2:
        int v15 = *(unsigned __int16 *)v10;
        goto LABEL_14;
      case 3:
        int v15 = *(unsigned __int16 *)v10 | (v10[2] << 16);
        goto LABEL_14;
      case 4:
        int v15 = *(_DWORD *)v10;
LABEL_14:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    unsigned int v17 = *(uint64_t (**)(void))(v8 + 8);
    return v17();
  }
  else
  {
    return swift_release();
  }
}

void *sub_100BE453C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  uint64_t v7 = *(void *)(v5 - 8) + 16;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  swift_bridgeObjectRetain();
  v6(v9, v10, v5);
  uint64_t v11 = *(void *)(v7 + 48) + 7;
  unint64_t v12 = (v11 + v9) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v11 + v10) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v13 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
  }
  else
  {
    uint64_t v14 = *(void *)(v13 + 8);
    *(void *)unint64_t v12 = *(void *)v13;
    *(void *)(v12 + 8) = v14;
    swift_retain();
  }
  uint64_t v15 = *(void *)(type metadata accessor for DismissAction() - 8);
  uint64_t v16 = v15;
  uint64_t v17 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
  uint64_t v18 = (void *)((v12 + v17 + 16) & ~v17);
  uint64_t v19 = (unsigned __int8 *)((v13 + v17 + 16) & ~v17);
  if (*(void *)(v15 + 64) <= 8uLL) {
    uint64_t v20 = 8;
  }
  else {
    uint64_t v20 = *(void *)(v15 + 64);
  }
  unsigned int v21 = v19[v20];
  unsigned int v22 = v21 - 2;
  if (v21 >= 2)
  {
    if (v20 <= 3) {
      uint64_t v23 = v20;
    }
    else {
      uint64_t v23 = 4;
    }
    switch(v23)
    {
      case 1:
        int v24 = *v19;
        goto LABEL_16;
      case 2:
        int v24 = *(unsigned __int16 *)v19;
        goto LABEL_16;
      case 3:
        int v24 = *(unsigned __int16 *)v19 | (v19[2] << 16);
        goto LABEL_16;
      case 4:
        int v24 = *(_DWORD *)v19;
LABEL_16:
        int v25 = (v24 | (v22 << (8 * v20))) + 2;
        unsigned int v21 = v24 + 2;
        if (v20 < 4) {
          unsigned int v21 = v25;
        }
        break;
      default:
        break;
    }
  }
  if (v21 == 1)
  {
    (*(void (**)(void *))(v16 + 16))(v18);
    char v26 = 1;
  }
  else
  {
    void *v18 = *(void *)v19;
    swift_retain();
    char v26 = 0;
  }
  *((unsigned char *)v18 + v20) = v26;
  return a1;
}

void *sub_100BE4750(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 40) + 7;
  unint64_t v12 = (void *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (unint64_t *)((v11 + v10) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v14 = *v13;
  if (*v12 < 0xFFFFFFFFuLL)
  {
    if (v14 >= 0xFFFFFFFF)
    {
      unint64_t v16 = v13[1];
      void *v12 = v14;
      v12[1] = v16;
      swift_retain();
      goto LABEL_8;
    }
  }
  else
  {
    if (v14 >= 0xFFFFFFFF)
    {
      unint64_t v15 = v13[1];
      void *v12 = v14;
      v12[1] = v15;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  *(_OWORD *)unint64_t v12 = *(_OWORD *)v13;
LABEL_8:
  uint64_t v17 = type metadata accessor for DismissAction();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(_DWORD *)(v18 + 80) & 0xF8 | 7;
  uint64_t v20 = (char *)v13 + v19;
  unsigned int v21 = (unsigned __int8 *)(((unint64_t)v12 + v19 + 16) & ~v19);
  unsigned int v22 = (unsigned __int8 *)((unint64_t)(v20 + 16) & ~v19);
  if (v21 != v22)
  {
    uint64_t v23 = v17;
    uint64_t v24 = *(void *)(v17 - 8);
    if (*(void *)(v18 + 64) <= 8uLL) {
      uint64_t v25 = 8;
    }
    else {
      uint64_t v25 = *(void *)(v18 + 64);
    }
    unsigned int v26 = v21[v25];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v25 <= 3) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *v21;
          goto LABEL_21;
        case 2:
          int v29 = *(unsigned __int16 *)v21;
          goto LABEL_21;
        case 3:
          int v29 = *(unsigned __int16 *)v21 | (v21[2] << 16);
          goto LABEL_21;
        case 4:
          int v29 = *(_DWORD *)v21;
LABEL_21:
          int v30 = (v29 | (v27 << (8 * v25))) + 2;
          unsigned int v26 = v29 + 2;
          if (v25 < 4) {
            unsigned int v26 = v30;
          }
          break;
        default:
          break;
      }
    }
    if (v26 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v24 + 8))(v21, v17);
    }
    else {
      swift_release();
    }
    unsigned int v31 = v22[v25];
    unsigned int v32 = v31 - 2;
    if (v31 >= 2)
    {
      if (v25 <= 3) {
        uint64_t v33 = v25;
      }
      else {
        uint64_t v33 = 4;
      }
      switch(v33)
      {
        case 1:
          int v34 = *v22;
          goto LABEL_35;
        case 2:
          int v34 = *(unsigned __int16 *)v22;
          goto LABEL_35;
        case 3:
          int v34 = *(unsigned __int16 *)v22 | (v22[2] << 16);
          goto LABEL_35;
        case 4:
          int v34 = *(_DWORD *)v22;
LABEL_35:
          int v35 = (v34 | (v32 << (8 * v25))) + 2;
          unsigned int v31 = v34 + 2;
          if (v25 < 4) {
            unsigned int v31 = v35;
          }
          break;
        default:
          break;
      }
    }
    if (v31 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v24 + 16))(v21, v22, v23);
      v21[v25] = 1;
    }
    else
    {
      *(void *)unsigned int v21 = *(void *)v22;
      v21[v25] = 0;
      swift_retain();
    }
  }
  return a1;
}

_OWORD *sub_100BE4A74(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  unint64_t v10 = (v9 + v7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v9 + v8) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v11 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
  }
  else
  {
    uint64_t v12 = *(void *)(v11 + 8);
    *(void *)unint64_t v10 = *(void *)v11;
    *(void *)(v10 + 8) = v12;
  }
  uint64_t v13 = *(void *)(type metadata accessor for DismissAction() - 8);
  uint64_t v14 = v13;
  uint64_t v15 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  unint64_t v16 = (void *)((v10 + v15 + 16) & ~v15);
  uint64_t v17 = (unsigned __int8 *)((v11 + v15 + 16) & ~v15);
  if (*(void *)(v13 + 64) <= 8uLL) {
    uint64_t v18 = 8;
  }
  else {
    uint64_t v18 = *(void *)(v13 + 64);
  }
  unsigned int v19 = v17[v18];
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v18 <= 3) {
      uint64_t v21 = v18;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *v17;
        goto LABEL_16;
      case 2:
        int v22 = *(unsigned __int16 *)v17;
        goto LABEL_16;
      case 3:
        int v22 = *(unsigned __int16 *)v17 | (v17[2] << 16);
        goto LABEL_16;
      case 4:
        int v22 = *(_DWORD *)v17;
LABEL_16:
        int v23 = (v22 | (v20 << (8 * v18))) + 2;
        unsigned int v19 = v22 + 2;
        if (v18 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  if (v19 == 1)
  {
    (*(void (**)(void *))(v14 + 32))(v16);
    char v24 = 1;
  }
  else
  {
    char v24 = 0;
    *unint64_t v16 = *(void *)v17;
  }
  *((unsigned char *)v16 + v18) = v24;
  return a1;
}

void *sub_100BE4C70(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 24) + 7;
  uint64_t v13 = (void *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (unint64_t *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = *v14;
  if (*v13 < 0xFFFFFFFFuLL)
  {
    if (v15 >= 0xFFFFFFFF)
    {
      unint64_t v17 = v14[1];
      *uint64_t v13 = v15;
      v13[1] = v17;
      goto LABEL_8;
    }
  }
  else
  {
    if (v15 >= 0xFFFFFFFF)
    {
      unint64_t v16 = v14[1];
      *uint64_t v13 = v15;
      v13[1] = v16;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
LABEL_8:
  uint64_t v18 = type metadata accessor for DismissAction();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(_DWORD *)(v19 + 80) & 0xF8 | 7;
  uint64_t v21 = (unsigned __int8 *)(((unint64_t)v13 + v20 + 16) & ~v20);
  int v22 = (unsigned __int8 *)(((unint64_t)v14 + v20 + 16) & ~v20);
  if (v21 != v22)
  {
    uint64_t v23 = v18;
    uint64_t v24 = *(void *)(v18 - 8);
    if (*(void *)(v19 + 64) <= 8uLL) {
      uint64_t v25 = 8;
    }
    else {
      uint64_t v25 = *(void *)(v19 + 64);
    }
    unsigned int v26 = v21[v25];
    unsigned int v27 = v26 - 2;
    if (v26 >= 2)
    {
      if (v25 <= 3) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *v21;
          goto LABEL_21;
        case 2:
          int v29 = *(unsigned __int16 *)v21;
          goto LABEL_21;
        case 3:
          int v29 = *(unsigned __int16 *)v21 | (v21[2] << 16);
          goto LABEL_21;
        case 4:
          int v29 = *(_DWORD *)v21;
LABEL_21:
          int v30 = (v29 | (v27 << (8 * v25))) + 2;
          unsigned int v26 = v29 + 2;
          if (v25 < 4) {
            unsigned int v26 = v30;
          }
          break;
        default:
          break;
      }
    }
    if (v26 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v24 + 8))(v21, v18);
    }
    else {
      swift_release();
    }
    unsigned int v31 = v22[v25];
    unsigned int v32 = v31 - 2;
    if (v31 >= 2)
    {
      if (v25 <= 3) {
        uint64_t v33 = v25;
      }
      else {
        uint64_t v33 = 4;
      }
      switch(v33)
      {
        case 1:
          int v34 = *v22;
          goto LABEL_35;
        case 2:
          int v34 = *(unsigned __int16 *)v22;
          goto LABEL_35;
        case 3:
          int v34 = *(unsigned __int16 *)v22 | (v22[2] << 16);
          goto LABEL_35;
        case 4:
          int v34 = *(_DWORD *)v22;
LABEL_35:
          int v35 = (v34 | (v32 << (8 * v25))) + 2;
          unsigned int v31 = v34 + 2;
          if (v25 < 4) {
            unsigned int v31 = v35;
          }
          break;
        default:
          break;
      }
    }
    if (v31 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v24 + 32))(v21, v22, v23);
      char v36 = 1;
    }
    else
    {
      char v36 = 0;
      *(void *)uint64_t v21 = *(void *)v22;
    }
    v21[v25] = v36;
  }
  return a1;
}

uint64_t sub_100BE4F74(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(type metadata accessor for DismissAction() - 8);
  uint64_t v10 = 8;
  if (*(void *)(v9 + 64) > 8uLL) {
    uint64_t v10 = *(void *)(v9 + 64);
  }
  uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
  if (!a2) {
    return 0;
  }
  if (a2 <= v8) {
    goto LABEL_25;
  }
  uint64_t v12 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  unint64_t v13 = v10 + ((v12 + ((*(void *)(v6 + 64) + ((v11 + 16) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12) + 1;
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v17 = ((a2 - v8 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v17))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v17 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
    if (v17 < 2)
    {
LABEL_25:
      if (v7 > 0x7FFFFFFE)
      {
        uint64_t v20 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
        return v20(((unint64_t)a1 + v11 + 16) & ~v11, v7, v5);
      }
      else
      {
        unint64_t v19 = *((void *)a1 + 1);
        if (v19 >= 0xFFFFFFFF) {
          LODWORD(v19) = -1;
        }
        if ((v19 + 1) >= 2) {
          return v19;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_25;
  }
LABEL_17:
  int v18 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v18 = 0;
  }
  if (v13)
  {
    if (v13 > 3) {
      LODWORD(v13) = 4;
    }
    switch((int)v13)
    {
      case 2:
        LODWORD(v13) = *a1;
        break;
      case 3:
        LODWORD(v13) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v13) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v13) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v13 | v18) + 1;
}

void sub_100BE5210(_WORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v22 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v10 = 2147483646;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(void *)(type metadata accessor for DismissAction() - 8);
  uint64_t v12 = 8;
  if (*(void *)(v11 + 64) > 8uLL) {
    uint64_t v12 = *(void *)(v11 + 64);
  }
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  size_t v15 = v12 + ((v14 + ((*(void *)(v8 + 64) + ((v13 + 16) & ~v13) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v14) + 1;
  if (a3 <= v10)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 - v10 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v10 < a2)
  {
    unsigned int v17 = ~v10 + a2;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v15)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *a1 = v20;
          *((unsigned char *)a1 + 2) = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *a1 = v20;
        }
        else
        {
          *(unsigned char *)a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        *((unsigned char *)a1 + v15) = v18;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v15) = v18;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)((char *)a1 + v15) = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      *((unsigned char *)a1 + v15) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)((char *)a1 + v15) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x100BE552CLL);
    case 4:
      *(_DWORD *)((char *)a1 + v15) = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v9 > 0x7FFFFFFE)
        {
          uint64_t v21 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
          v21(((unint64_t)a1 + v13 + 16) & ~v13, a2, v9, v7);
        }
        else if (a2 > 0x7FFFFFFE)
        {
          *(void *)a1 = 0;
          *((void *)a1 + 1) = 0;
          *(_DWORD *)a1 = a2 - 0x7FFFFFFF;
        }
        else
        {
          *((void *)a1 + 1) = a2;
        }
      }
      return;
  }
}

uint64_t sub_100BE5554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v17[3] = a2;
  v17[1] = type metadata accessor for NavigationPath();
  v17[0] = *(void *)(a1 + 16);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  uint64_t v3 = *(void *)(a1 + 24);
  v17[17] = v3;
  v17[18] = &protocol witness table for _PaddingLayout;
  v17[15] = swift_getWitnessTable();
  unsigned char v17[16] = &protocol witness table for _PaddingLayout;
  swift_getWitnessTable();
  type metadata accessor for ScrollView();
  swift_getWitnessTable();
  swift_getOpaqueTypeMetadata2();
  swift_getOpaqueTypeConformance2();
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  type metadata accessor for Sheet.Toolbar();
  swift_getWitnessTable();
  uint64_t v5 = swift_getOpaqueTypeMetadata2();
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v7 = swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeMetadata2();
  type metadata accessor for ModifiedContent();
  v17[11] = OpaqueTypeMetadata2;
  v17[12] = v5;
  v17[13] = OpaqueTypeConformance2;
  v17[14] = v7;
  v17[9] = swift_getOpaqueTypeConformance2();
  v17[10] = sub_100BE7464();
  swift_getWitnessTable();
  uint64_t v8 = type metadata accessor for NavigationStack();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)v17 - v12;
  v17[6] = v17[0];
  v17[7] = v3;
  v17[8] = v17[2];
  NavigationStack.init<>(root:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1005CF83C(v11, v8, WitnessTable);
  size_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  sub_1005CF83C(v13, v8, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v15)(v13, v8);
}

uint64_t sub_100BE593C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v78 = a4;
  uint64_t v79 = a1;
  uint64_t v6 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v76 = v6;
  __chkstk_darwin();
  uint64_t v74 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for ScrollBounceBehavior();
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin();
  uint64_t v52 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ModifiedContent();
  uint64_t v9 = type metadata accessor for ModifiedContent();
  uint64_t v92 = a3;
  uint64_t v93 = &protocol witness table for _PaddingLayout;
  uint64_t v80 = a3;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v91 = &protocol witness table for _PaddingLayout;
  uint64_t v61 = v9;
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v10 = type metadata accessor for ScrollView();
  uint64_t v71 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v53 = (char *)&v51 - v11;
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v86 = v10;
  uint64_t v87 = v12;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v70 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  uint64_t v65 = (char *)&v51 - v14;
  uint64_t v86 = v10;
  uint64_t v87 = v12;
  uint64_t v66 = v12;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v86 = OpaqueTypeMetadata2;
  uint64_t v87 = OpaqueTypeConformance2;
  uint64_t v16 = swift_getOpaqueTypeMetadata2();
  uint64_t v68 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v63 = (char *)&v51 - v17;
  uint64_t v18 = type metadata accessor for Sheet.Toolbar();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v86 = v18;
  uint64_t v87 = v19;
  uint64_t v20 = swift_getOpaqueTypeMetadata2();
  uint64_t v69 = OpaqueTypeMetadata2;
  uint64_t v86 = OpaqueTypeMetadata2;
  uint64_t v87 = OpaqueTypeConformance2;
  uint64_t v62 = OpaqueTypeConformance2;
  uint64_t v21 = v52;
  uint64_t v22 = swift_getOpaqueTypeConformance2();
  uint64_t v86 = v18;
  uint64_t v87 = v19;
  uint64_t v23 = swift_getOpaqueTypeConformance2();
  uint64_t v67 = v16;
  uint64_t v86 = v16;
  uint64_t v87 = v20;
  uint64_t v54 = v20;
  uint64_t v57 = v22;
  uint64_t v88 = v22;
  uint64_t v89 = v23;
  uint64_t v55 = v23;
  uint64_t v58 = *(void *)(swift_getOpaqueTypeMetadata2() - 8);
  __chkstk_darwin();
  uint64_t v25 = (char *)&v51 - v24;
  uint64_t v60 = v26;
  uint64_t v27 = type metadata accessor for ModifiedContent();
  uint64_t v64 = *(void *)(v27 - 8);
  __chkstk_darwin();
  int v29 = (char *)&v51 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v56 = (char *)&v51 - v30;
  uint64_t v77 = a2;
  uint64_t v81 = a2;
  uint64_t v82 = v80;
  uint64_t v83 = v79;
  static Axis.Set.vertical.getter();
  unsigned int v31 = v53;
  ScrollView.init(_:showsIndicators:content:)();
  static ScrollBounceBehavior.basedOnSize.getter();
  unsigned __int8 v32 = static Axis.Set.vertical.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v32) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v33 = v65;
  View.scrollBounceBehavior(_:axes:)();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v21, v73);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v31, v10);
  uint64_t v35 = v75;
  uint64_t v34 = v76;
  char v36 = v74;
  (*(void (**)(char *, void, uint64_t))(v75 + 104))(v74, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v76);
  uint64_t v37 = v63;
  uint64_t v38 = v69;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v33, v38);
  __chkstk_darwin();
  uint64_t v39 = v80;
  *(&v51 - 4) = v77;
  *(&v51 - 3) = v39;
  *(&v51 - 2) = v79;
  uint64_t v40 = swift_checkMetadataState();
  uint64_t v41 = v67;
  uint64_t v42 = v57;
  uint64_t v43 = v55;
  View.toolbar<A>(content:)();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v37, v41);
  uint64_t v86 = v41;
  uint64_t v87 = v40;
  uint64_t v88 = v42;
  uint64_t v89 = v43;
  uint64_t v44 = swift_getOpaqueTypeConformance2();
  uint64_t v45 = v60;
  sub_100BE1468();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v25, v45);
  unint64_t v46 = sub_100BE7464();
  uint64_t v84 = v44;
  unint64_t v85 = v46;
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v48 = v56;
  sub_1005CF83C(v29, v27, v47);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v64 + 8);
  v49(v29, v27);
  sub_1005CF83C(v48, v27, v47);
  return ((uint64_t (*)(char *, uint64_t))v49)(v48, v27);
}

uint64_t sub_100BE629C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  v16[1] = a2;
  uint64_t v3 = type metadata accessor for ModifiedContent();
  v16[0] = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)v16 - v4;
  uint64_t v6 = type metadata accessor for ModifiedContent();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v11 = (char *)v16 - v10;
  type metadata accessor for Sheet();
  static Edge.Set.horizontal.getter();
  View.padding(_:_:)();
  static Edge.Set.vertical.getter();
  void v16[4] = a1;
  v16[5] = &protocol witness table for _PaddingLayout;
  uint64_t WitnessTable = swift_getWitnessTable();
  View.padding(_:_:)();
  (*(void (**)(char *, uint64_t))(v16[0] + 8))(v5, v3);
  v16[2] = WitnessTable;
  v16[3] = &protocol witness table for _PaddingLayout;
  uint64_t v13 = swift_getWitnessTable();
  sub_1005CF83C(v9, v6, v13);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  sub_1005CF83C(v11, v6, v13);
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, v6);
}

uint64_t sub_100BE6528@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v37 = a4;
  uint64_t v7 = type metadata accessor for DismissAction();
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  uint64_t v8 = *(void *)(v32 + 64);
  __chkstk_darwin();
  unsigned int v31 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v30 = (uint64_t)&v30 - v9;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v10 = type metadata accessor for Sheet();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = a1[1];
  uint64_t v34 = *a1;
  uint64_t v16 = (uint64_t *)((char *)a1 + *(int *)(v15 + 40));
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  if (*v16)
  {
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v18;
    *(void *)(v19 + 24) = v17;
    uint64_t v20 = sub_10001D0E0;
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v19 = 0;
  }
  (*(void (**)(char *, uint64_t *, uint64_t))(v11 + 16))(v13, a1, v10);
  swift_bridgeObjectRetain();
  if (v18)
  {
    sub_10007B674(v18);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    sub_10007B674(0);
    uint64_t v21 = v30;
    sub_100B6E244(v30);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v23 = v31;
    uint64_t v22 = v32;
    uint64_t v24 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v21, v33);
    unint64_t v25 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v26 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v26 + v25, v23, v24);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v24);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_100BE756C;
    *(void *)(v19 + 24) = v26;
    uint64_t v20 = sub_10007A644;
  }
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v20;
  *(void *)(v27 + 24) = v19;
  uint64_t v38 = v34;
  uint64_t v39 = v14;
  uint64_t v40 = sub_10090FCF8;
  uint64_t v41 = v27;
  uint64_t v28 = type metadata accessor for Sheet.Toolbar();
  swift_getWitnessTable();
  (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v28 - 8) + 16))(v42, &v38, v28);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v38 = v42[0];
  uint64_t v39 = v42[1];
  uint64_t v40 = (uint64_t (*)())v42[2];
  uint64_t v41 = v42[3];
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100BE6924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v38 = a7;
  uint64_t v30 = a5;
  uint64_t v36 = type metadata accessor for Sheet.Toolbar.CloseButton();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = type metadata accessor for ToolbarItem();
  uint64_t v37 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v32 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v33 = (char *)&v29 - v15;
  uint64_t v16 = type metadata accessor for ToolbarItemPlacement();
  uint64_t v39 = *(void *)(v16 - 8);
  uint64_t v40 = v16;
  __chkstk_darwin();
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v29 - v19;
  uint64_t v31 = sub_100063814(&qword_1010CF4E8);
  uint64_t v34 = *(void *)(v31 - 8);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.principal.getter();
  uint64_t v47 = a5;
  uint64_t v48 = a6;
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  uint64_t v51 = a3;
  uint64_t v52 = a4;
  sub_100063814(&qword_1010CF4F0);
  sub_100BE7D88();
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.automatic.getter();
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v18, v20, v40);
  uint64_t v41 = v30;
  uint64_t v42 = a6;
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v23 = v32;
  ToolbarItem<>.init(placement:content:)();
  swift_getWitnessTable();
  uint64_t v24 = v37;
  uint64_t v25 = (uint64_t)v33;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v33, v23, v13);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v24 + 8);
  v26(v23, v13);
  sub_100063858(qword_1010CF540, &qword_1010CF4E8);
  uint64_t v27 = v31;
  sub_100BE7104((uint64_t)v22, v25, v31, v13);
  v26((char *)v25, v13);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v22, v27);
}

uint64_t sub_100BE6D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AccessibilityTraits();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CF508);
  __n128 v12 = __chkstk_darwin();
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v36 = a1;
    uint64_t v37 = a2;
    uint64_t v34 = v11;
    uint64_t v35 = v10;
    sub_10005D27C();
    swift_bridgeObjectRetain();
    uint64_t v15 = Text.init<A>(_:)();
    uint64_t v17 = v16;
    char v19 = v18;
    uint64_t v21 = v20;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v23 = static Font.headline.getter();
    uint64_t v33 = a3;
    uint64_t v24 = v23;
    uint64_t v25 = swift_getKeyPath();
    uint64_t v32 = v6;
    uint64_t v26 = v25;
    uint64_t v27 = swift_getKeyPath();
    uint64_t v36 = v15;
    uint64_t v37 = v17;
    char v38 = v19 & 1;
    uint64_t v39 = v21;
    uint64_t v40 = KeyPath;
    uint64_t v41 = 1;
    char v42 = 0;
    uint64_t v43 = v26;
    uint64_t v44 = v24;
    uint64_t v45 = v27;
    char v46 = 1;
    static AccessibilityTraits.isHeader.getter();
    sub_100063814(&qword_1010CF518);
    sub_100BE7EA8();
    View.accessibilityAddTraits(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v32);
    sub_1000D1500(v36, v37, v38);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v28 = v33;
    sub_100BE80F8((uint64_t)v14, v33);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v28, 0, 1, v35);
  }
  else
  {
    uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
    return v30(a3, 1, 1, v12);
  }
}

uint64_t sub_100BE7064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a3;
  uint64_t v8 = a4;
  uint64_t v4 = type metadata accessor for Sheet.Toolbar.CloseButton();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1005CF83C(&v7, v4, WitnessTable);
  uint64_t v7 = v9;
  uint64_t v8 = v10;
  sub_1005CF83C(&v7, v4, WitnessTable);
  return swift_release();
}

uint64_t sub_100BE7104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_getTupleTypeMetadata2();
  __n128 v8 = __chkstk_darwin();
  uint64_t v11 = (char *)&v13 + *(int *)(v10 + 48) - v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a3 - 8) + 16))((char *)&v13 - v9, a1, a3, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v11, a2, a4);
  return TupleToolbarContent.init(_:)();
}

uint64_t sub_100BE7228()
{
  swift_retain();

  return Button.init(action:label:)();
}

uint64_t sub_100BE72A4@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = Text.bold()();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  sub_1000D1500(v2, v4, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_100BE7378()
{
  return sub_100BE7228();
}

uint64_t sub_100BE7388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BE6924(*v2, v2[1], v2[2], v2[3], *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100BE73A8()
{
  return PresentationSizing.proposedSize(for:context:)();
}

uint64_t sub_100BE73DC()
{
  return 0x4080E00000000000;
}

uint64_t sub_100BE7408()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for Sheet.Toolbar()
{
  return sub_10004CF5C();
}

unint64_t sub_100BE7464()
{
  unint64_t result = qword_1010CF460[0];
  if (!qword_1010CF460[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1010CF460);
  }
  return result;
}

uint64_t sub_100BE74B8@<X0>(uint64_t a1@<X8>)
{
  return sub_100BE593C(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_100BE74C4@<X0>(uint64_t a1@<X8>)
{
  return sub_100BE629C(*(void *)(v1 + 24), a1);
}

uint64_t sub_100BE74D0@<X0>(uint64_t a1@<X8>)
{
  return sub_100BE6528(*(uint64_t **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100BE74DC()
{
  uint64_t v1 = type metadata accessor for DismissAction();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

void sub_100BE756C()
{
}

uint64_t sub_100BE75C8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100BE7604()
{
  uint64_t v1 = *(void *)(v0 + 16);
  long long v5 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (int *)(type metadata accessor for ExpandableTextView() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[16], v1);
  (*(void (**)(uint64_t))(*(void *)(v5 - 8) + 8))(v3 + v2[17]);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_100BE7754()
{
  return sub_100BE775C();
}

uint64_t sub_100BE775C()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100BE77FC()
{
  return sub_100BE7814(sub_100BE2E10);
}

uint64_t sub_100BE7814(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_100BE783C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoreLabel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BE78A0()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_100BE78DC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *sub_100BE7928(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100BE7990(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t sub_100BE79E0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100BE7A28(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100BE7A68()
{
  return swift_getWitnessTable();
}

uint64_t sub_100BE7D1C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for Sheet.Toolbar.CloseButton()
{
  return sub_10004CF5C();
}

uint64_t sub_100BE7D78@<X0>(uint64_t a1@<X8>)
{
  return sub_100BE6D78(*(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

unint64_t sub_100BE7D88()
{
  unint64_t result = qword_1010CF4F8;
  if (!qword_1010CF4F8)
  {
    sub_10006389C(&qword_1010CF4F0);
    sub_100BE7DFC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF4F8);
  }
  return result;
}

unint64_t sub_100BE7DFC()
{
  unint64_t result = qword_1010CF500;
  if (!qword_1010CF500)
  {
    sub_10006389C(&qword_1010CF508);
    sub_100BE7EA8();
    sub_100BE8088(&qword_1010CE810, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF500);
  }
  return result;
}

unint64_t sub_100BE7EA8()
{
  unint64_t result = qword_1010CF510;
  if (!qword_1010CF510)
  {
    sub_10006389C(&qword_1010CF518);
    sub_100BE7F48();
    sub_100063858(&qword_1010CC438, &qword_1010CC440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF510);
  }
  return result;
}

unint64_t sub_100BE7F48()
{
  unint64_t result = qword_1010CF520;
  if (!qword_1010CF520)
  {
    sub_10006389C(&qword_1010CF528);
    sub_100BE7FE8();
    sub_100063858((unint64_t *)&unk_1010CE060, &qword_1010CB4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF520);
  }
  return result;
}

unint64_t sub_100BE7FE8()
{
  unint64_t result = qword_1010CF530;
  if (!qword_1010CF530)
  {
    sub_10006389C(&qword_1010CF538);
    sub_100063858((unint64_t *)&qword_1010CB440, &qword_1010CB448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF530);
  }
  return result;
}

uint64_t sub_100BE8088(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BE80D0()
{
  return sub_100BE7064(v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_100BE80F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010CF508);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BE8160()
{
  sub_10006389C(&qword_1010CF4E8);
  type metadata accessor for Sheet.Toolbar.CloseButton();
  swift_getWitnessTable();
  type metadata accessor for ToolbarItem();
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleToolbarContent();

  return swift_getWitnessTable();
}

uint64_t sub_100BE8230()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BE8274()
{
  return sub_100063858(&qword_1010CF2B0, (uint64_t *)&unk_1010CD5A0);
}

uint64_t sub_100BE82B8(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  long long v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t TupleTypeMetadata = *v5;
  }
  else
  {
    __chkstk_darwin();
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      char v10 = (long long *)(v5 + 2);
      char v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        _OWORD *v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        uint64_t v16 = &v8[8 * v9];
        uint64_t v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)uint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  __chkstk_darwin();
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(TupleTypeMetadata + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *a1++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return TupleView.init(_:)();
}

uint64_t HeightLimitedButtonTextView.init(action:body:trailingView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(void)@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t)@<X4>, uint64_t a5@<X8>)
{
  a3();
  uint64_t v9 = type metadata accessor for HeightLimitedButtonTextView();
  uint64_t result = a4(v9, v10, v11, v12);
  unint64_t v14 = (void *)(a5 + *(int *)(v9 + 56));
  *unint64_t v14 = a1;
  v14[1] = a2;
  return result;
}

uint64_t type metadata accessor for HeightLimitedButtonTextView()
{
  return swift_getGenericMetadata();
}

uint64_t HeightLimitedButtonTextView.body.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = a1[2];
  sub_10006389C(&qword_1010CB448);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  uint64_t v30 = a1[3];
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for ZStack();
  type metadata accessor for ModifiedContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v47 = &protocol witness table for _CompositingGroupEffect;
  uint64_t v29 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  swift_getWitnessTable();
  uint64_t v42 = type metadata accessor for Button();
  uint64_t v43 = type metadata accessor for PlainButtonStyle();
  uint64_t v44 = swift_getWitnessTable();
  unint64_t v45 = sub_100BE8ABC();
  swift_getOpaqueTypeMetadata2();
  swift_getTupleTypeMetadata2();
  v25[4] = type metadata accessor for TupleView();
  v25[3] = swift_getWitnessTable();
  v25[0] = type metadata accessor for ViewThatFits();
  uint64_t v28 = *(void *)(v25[0] - 8);
  __chkstk_darwin();
  long long v5 = (char *)v25 - v4;
  uint64_t v6 = type metadata accessor for ModifiedContent();
  uint64_t v27 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v25 - v7;
  v25[1] = swift_getWitnessTable();
  v25[2] = type metadata accessor for _OverlayModifier();
  uint64_t v9 = type metadata accessor for ModifiedContent();
  uint64_t v26 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v13 = (char *)v25 - v12;
  uint64_t v14 = a1[4];
  uint64_t v15 = v3;
  uint64_t v16 = v31;
  View.hidden()();
  static Axis.Set.vertical.getter();
  uint64_t v33 = v15;
  uint64_t v34 = v30;
  uint64_t v17 = a1[5];
  uint64_t v35 = v14;
  uint64_t v36 = v17;
  uint64_t v37 = v16;
  ViewThatFits.init(in:content:)();
  static Alignment.center.getter();
  unint64_t v18 = sub_100BE9874();
  uint64_t v40 = v14;
  unint64_t v41 = v18;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v20 = v25[0];
  View.overlay<A>(_:alignment:)();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v20);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v6);
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v38 = v19;
  uint64_t v39 = v21;
  uint64_t v22 = swift_getWitnessTable();
  sub_1005CF83C(v11, v9, v22);
  int v23 = *(void (**)(char *, uint64_t))(v26 + 8);
  v23(v11, v9);
  sub_1005CF83C(v13, v9, v22);
  return ((uint64_t (*)(char *, uint64_t))v23)(v13, v9);
}

unint64_t sub_100BE8ABC()
{
  unint64_t result = qword_1010CD020;
  if (!qword_1010CD020)
  {
    type metadata accessor for PlainButtonStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CD020);
  }
  return result;
}

uint64_t sub_100BE8B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v64 = a5;
  uint64_t v63 = a3;
  uint64_t v47 = a1;
  uint64_t v67 = a6;
  uint64_t v8 = type metadata accessor for PlainButtonStyle();
  uint64_t v54 = v8;
  uint64_t v66 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v65 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  type metadata accessor for ZStack();
  uint64_t v10 = type metadata accessor for ModifiedContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v83 = &protocol witness table for _CompositingGroupEffect;
  uint64_t v61 = v10;
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v11 = type metadata accessor for Button();
  uint64_t v55 = v11;
  uint64_t v62 = *(void *)(v11 - 8);
  __chkstk_darwin();
  uint64_t v56 = (char *)&v46 - v12;
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v53 = v13;
  unint64_t v52 = sub_100BE8ABC();
  uint64_t v78 = (char *)v11;
  uint64_t v79 = v8;
  uint64_t v80 = v13;
  unint64_t v81 = v52;
  uint64_t v57 = &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v59 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin();
  uint64_t v69 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v51 = (char *)&v46 - v15;
  sub_10006389C(&qword_1010CB448);
  uint64_t v46 = a2;
  uint64_t v16 = type metadata accessor for ModifiedContent();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v46 - v18;
  uint64_t v20 = type metadata accessor for ModifiedContent();
  uint64_t v68 = *(void *)(v20 - 8);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v24 = (char *)&v46 - v23;
  View.lineLimit(_:)();
  unint64_t v25 = sub_100BEA6E4();
  v77[4] = a4;
  v77[5] = v25;
  uint64_t v26 = a4;
  uint64_t v27 = swift_getWitnessTable();
  View.fixedSize(horizontal:vertical:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v77[2] = v27;
  v77[3] = &protocol witness table for _FixedSizeLayout;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v28 = v24;
  sub_1005CF83C(v22, v20, v48);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v68 + 8);
  uint64_t v50 = v68 + 8;
  v49(v22, v20);
  uint64_t v29 = v46;
  uint64_t v30 = v63;
  uint64_t v78 = (char *)v46;
  uint64_t v79 = v63;
  unint64_t v31 = v64;
  uint64_t v80 = v26;
  unint64_t v81 = v64;
  type metadata accessor for HeightLimitedButtonTextView();
  uint64_t v70 = v29;
  uint64_t v71 = v30;
  uint64_t v72 = v26;
  unint64_t v73 = v31;
  uint64_t v74 = v47;
  swift_retain();
  uint64_t v32 = v56;
  Button.init(action:label:)();
  uint64_t v33 = v65;
  PlainButtonStyle.init()();
  uint64_t v34 = v55;
  uint64_t v35 = v54;
  uint64_t v36 = v53;
  unint64_t v37 = v52;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v33, v35);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v32, v34);
  uint64_t v78 = (char *)v34;
  uint64_t v79 = v35;
  uint64_t v80 = v36;
  unint64_t v81 = v37;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v39 = v51;
  uint64_t v40 = v69;
  uint64_t v41 = OpaqueTypeMetadata2;
  sub_1005CF83C(v69, OpaqueTypeMetadata2, OpaqueTypeConformance2);
  uint64_t v42 = v59;
  uint64_t v43 = *(void (**)(char *, uint64_t))(v59 + 8);
  v43(v40, v41);
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v22, v28, v20);
  uint64_t v78 = v22;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v40, v39, v41);
  uint64_t v79 = (uint64_t)v40;
  v77[0] = v20;
  v77[1] = v41;
  uint64_t v75 = v48;
  uint64_t v76 = OpaqueTypeConformance2;
  sub_100BE82B8((uint64_t *)&v78, 2uLL, (uint64_t)v77);
  v43(v39, v41);
  uint64_t v44 = (uint64_t (*)(char *, uint64_t))v49;
  v49(v28, v20);
  v43(v40, v41);
  return v44(v22, v20);
}

uint64_t sub_100BE9308()
{
  return sub_100BEA770((uint64_t (*)(void, void, void, void, void))sub_100BE8B14);
}

uint64_t sub_100BE9320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a1;
  uint64_t v25 = a6;
  swift_getTupleTypeMetadata2();
  type metadata accessor for TupleView();
  swift_getWitnessTable();
  uint64_t v6 = type metadata accessor for ZStack();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = type metadata accessor for ModifiedContent();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v20 - v14;
  static HorizontalAlignment.trailing.getter();
  static VerticalAlignment.lastTextBaseline.getter();
  uint64_t v26 = v20;
  uint64_t v27 = v21;
  uint64_t v28 = v23;
  uint64_t v29 = v24;
  uint64_t v30 = v22;
  ZStack.init(alignment:content:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  View.compositingGroup()();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v31 = WitnessTable;
  uint64_t v32 = &protocol witness table for _CompositingGroupEffect;
  uint64_t v17 = swift_getWitnessTable();
  sub_1005CF83C(v13, v10, v17);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v13, v10);
  sub_1005CF83C(v15, v10, v17);
  return ((uint64_t (*)(char *, uint64_t))v18)(v15, v10);
}

uint64_t sub_100BE95FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v31 = a5;
  uint64_t v32 = a6;
  uint64_t v10 = *((void *)a3 - 1);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v29 - v13;
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v29 - v19;
  uint64_t v30 = v21;
  sub_1005CF83C(v22, v23, v21);
  uint64_t v36 = (char *)a2;
  unint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v24 = v31;
  uint64_t v39 = v31;
  uint64_t v25 = type metadata accessor for HeightLimitedButtonTextView();
  sub_1005CF83C(a1 + *(int *)(v25 + 52), a3, v24);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v20, a2);
  uint64_t v36 = v18;
  (*(void (**)(char *, char *, char *))(v10 + 16))(v12, v14, a3);
  unint64_t v37 = v12;
  v35[0] = a2;
  v35[1] = a3;
  uint64_t v33 = v30;
  uint64_t v34 = v24;
  sub_100BE82B8((uint64_t *)&v36, 2uLL, (uint64_t)v35);
  uint64_t v26 = *(void (**)(char *, char *))(v10 + 8);
  v26(v14, a3);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v16 + 8);
  v27(v20, a2);
  v26(v12, a3);
  return ((uint64_t (*)(char *, uint64_t))v27)(v18, a2);
}

unint64_t sub_100BE9874()
{
  unint64_t result = qword_1010CF5C8[0];
  if (!qword_1010CF5C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1010CF5C8);
  }
  return result;
}

uint64_t sub_100BE98C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BE9910()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100BE99EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unint64_t v12 = ((v11 + ((v6 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    uint64_t v19 = (void *)((v11 + v18) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = v19[1];
    uint64_t v21 = (void *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v21 = *v19;
    v21[1] = v20;
  }
  swift_retain();
  return v4;
}

uint64_t sub_100BE9B84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((*(void *)(v4 + 56)
                                                                                            + a1
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));

  return swift_release();
}

uint64_t sub_100BE9C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_retain();
  return a1;
}

uint64_t sub_100BE9D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  uint64_t v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100BE9DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  *(_OWORD *)((*(void *)(v9 + 32) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v9 + 32) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100BE9EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  *(_OWORD *)((*(void *)(v9 + 24) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v9 + 24) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_100BE9FA0(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(v4 - 8) + 64) + v9;
  uint64_t v12 = *(void *)(v7 + 64) + 7;
  if (v10 < a2)
  {
    unint64_t v13 = ((v12 + (v11 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v14 = a2 - v10;
    uint64_t v15 = v13 & 0xFFFFFFF8;
    if ((v13 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = v14 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v13);
        if (!v19) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v13);
        if (v19) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100BEA178);
      case 4:
        int v19 = *(int *)((char *)a1 + v13);
        if (!v19) {
          break;
        }
LABEL_24:
        int v21 = v19 - 1;
        if (v15)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v10 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v6 == v10) {
    return (*(uint64_t (**)(int *, uint64_t, uint64_t))(v5 + 48))(a1, v6, v4);
  }
  unint64_t v23 = ((unint64_t)a1 + v11) & ~v9;
  if (v8 == v10) {
    return (*(uint64_t (**)(unint64_t))(v7 + 48))(v23);
  }
  unint64_t v24 = *(void *)((v12 + v23) & 0xFFFFFFFFFFFFFFF8);
  if (v24 >= 0xFFFFFFFF) {
    LODWORD(v24) = -1;
  }
  return (v24 + 1);
}

void sub_100BEA18C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  uint64_t v14 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
  unint64_t v15 = ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v12 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v12;
    if (a2 <= v12)
    {
LABEL_19:
      switch(v19)
      {
        case 1:
          a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)&a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)&a1[v15] = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v7 == v12)
            {
              unint64_t v23 = *(void (**)(void))(v6 + 56);
              v23();
            }
            else
            {
              unint64_t v24 = (unint64_t)&a1[v13] & ~v11;
              if (v10 == v12)
              {
                uint64_t v25 = *(void (**)(unint64_t))(v9 + 56);
                v25(v24);
              }
              else
              {
                uint64_t v26 = (void *)((v14 + v24) & 0xFFFFFFFFFFFFFFF8);
                if ((a2 & 0x80000000) != 0)
                {
                  uint64_t v27 = a2 ^ 0x80000000;
                  v26[1] = 0;
                }
                else
                {
                  uint64_t v27 = a2 - 1;
                }
                *uint64_t v26 = v27;
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = a3 - v12;
    if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v17 = v16 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_19;
    }
  }
  if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v21 = v20;
  }
  else {
    int v21 = 1;
  }
  if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v22 = ~v12 + a2;
    bzero(a1, ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v22;
  }
  switch(v19)
  {
    case 1:
      a1[v15] = v21;
      break;
    case 2:
      *(_WORD *)&a1[v15] = v21;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x100BEA424);
    case 4:
      *(_DWORD *)&a1[v15] = v21;
      break;
    default:
      return;
  }
}

uint64_t sub_100BEA44C()
{
  return swift_getWitnessTable();
}

unint64_t sub_100BEA6E4()
{
  unint64_t result = qword_1010CB440;
  if (!qword_1010CB440)
  {
    sub_10006389C(&qword_1010CB448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CB440);
  }
  return result;
}

uint64_t sub_100BEA740()
{
  return sub_100BEA770((uint64_t (*)(void, void, void, void, void))sub_100BE9320);
}

uint64_t sub_100BEA758()
{
  return sub_100BEA770((uint64_t (*)(void, void, void, void, void))sub_100BE95FC);
}

uint64_t sub_100BEA770(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t MoreLabel.init(color:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for MoreLabel();
  uint64_t v5 = (void *)((char *)a2 + *(int *)(v4 + 20));
  uint64_t *v5 = swift_getKeyPath();
  sub_100063814(&qword_1010C8958);
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = (char *)a2 + *(int *)(v4 + 24);
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v6 = result;
  v6[8] = 0;
  *a2 = a1;
  return result;
}

uint64_t type metadata accessor for MoreLabel()
{
  uint64_t result = qword_1010CF708;
  if (!qword_1010CF708) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MoreLabel.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v113 = a1;
  type metadata accessor for _BlendModeEffect();
  __chkstk_darwin();
  char v112 = (char *)&v88 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for BlendMode();
  uint64_t v115 = *(void *)(v111 - 8);
  __chkstk_darwin();
  uint64_t v109 = (char *)&v88 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_100063814(&qword_1010CF650) - 8;
  __chkstk_darwin();
  char v108 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for Text.LineStyle.Pattern();
  *(void *)&long long v106 = *(void *)(v107 - 8);
  __chkstk_darwin();
  uint64_t v105 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100063814(&qword_1010CB458) - 8;
  __chkstk_darwin();
  uint64_t v6 = (uint64_t *)((char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100063814(&qword_1010CB460);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100063814(&qword_1010CB468);
  __chkstk_darwin();
  unsigned int v10 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_100063814(&qword_1010CF658);
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin();
  uint64_t v90 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100063814(&qword_1010CF660) - 8;
  __chkstk_darwin();
  uint64_t v91 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_100063814(&qword_1010CF668);
  __chkstk_darwin();
  uint64_t v93 = (uint64_t)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100063814(&qword_1010CF670);
  uint64_t v102 = *(void *)(v104 - 8);
  __chkstk_darwin();
  uint64_t v98 = (char *)&v88 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100063814(&qword_1010CF678) - 8;
  __chkstk_darwin();
  uint64_t v100 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_100063814(&qword_1010CF680) - 8;
  __chkstk_darwin();
  uint64_t v114 = (uint64_t)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Int.seconds.getter(44);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v17 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  uint64_t v24 = enum case for Text.Case.uppercase(_:);
  uint64_t v25 = type metadata accessor for Text.Case();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v8, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v8, 0, 1, v25);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006CAB8((uint64_t)v8, (uint64_t)v6 + *(int *)(v92 + 36), &qword_1010CB460);
  *uint64_t v6 = KeyPath;
  sub_10006CAB8((uint64_t)v6, (uint64_t)&v10[*(int *)(v89 + 36)], &qword_1010CB458);
  *(void *)unsigned int v10 = v17;
  *((void *)v10 + 1) = v19;
  v10[16] = v23;
  *((void *)v10 + 3) = v21;
  sub_1001CC8D0(v17, v19, v23);
  swift_bridgeObjectRetain();
  sub_1000637B8((uint64_t)v6, &qword_1010CB458);
  sub_1000637B8((uint64_t)v8, &qword_1010CB460);
  sub_1000D1500(v17, v19, v23);
  swift_bridgeObjectRelease();
  static Font.Weight.bold.getter();
  sub_100B4A390();
  uint64_t v28 = v90;
  View.fontWeight(_:)();
  sub_1000637B8((uint64_t)v10, &qword_1010CB468);
  uint64_t v29 = static Font.footnote.getter();
  uint64_t v30 = swift_getKeyPath();
  uint64_t v31 = v96;
  uint64_t v32 = (uint64_t)v91;
  uint64_t v33 = v97;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v91, v28, v97);
  uint64_t v34 = (uint64_t *)(v32 + *(int *)(v94 + 44));
  uint64_t *v34 = v30;
  v34[1] = v29;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v33);
  uint64_t v35 = v99;
  uint64_t v36 = *v99;
  uint64_t v37 = swift_getKeyPath();
  uint64_t v38 = v93;
  sub_10006CAB8(v32, v93, &qword_1010CF660);
  uint64_t v39 = (uint64_t *)(v38 + *(int *)(v95 + 36));
  *uint64_t v39 = v37;
  v39[1] = v36;
  swift_retain();
  sub_1000637B8(v32, &qword_1010CF660);
  uint64_t v40 = (char *)v35 + *(int *)(type metadata accessor for MoreLabel() + 24);
  uint64_t v41 = *(void *)v40;
  LOBYTE(v37) = v40[8];
  sub_100237EDC(*(void *)v40, v37);
  sub_100B6E784(v41, v37);
  sub_100237F44(v41, v37);
  uint64_t v42 = v105;
  static Text.LineStyle.Pattern.solid.getter();
  sub_100BEB888();
  uint64_t v43 = v98;
  View.underline(_:pattern:color:)();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v42, v107);
  sub_1000637B8(v38, &qword_1010CF668);
  LOBYTE(v42) = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v52 = v102;
  uint64_t v53 = (uint64_t)v100;
  uint64_t v54 = v104;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v100, v43, v104);
  uint64_t v55 = v53 + *(int *)(v101 + 44);
  *(unsigned char *)uint64_t v55 = (_BYTE)v42;
  *(void *)(v55 + 8) = v45;
  *(void *)(v55 + 16) = v47;
  *(void *)(v55 + 24) = v49;
  *(void *)(v55 + 32) = v51;
  *(unsigned char *)(v55 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v52 + 8))(v43, v54);
  LOBYTE(v42) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  uint64_t v64 = v114;
  sub_10006CAB8(v53, v114, &qword_1010CF678);
  uint64_t v65 = v64 + *(int *)(v103 + 44);
  *(unsigned char *)uint64_t v65 = (_BYTE)v42;
  *(void *)(v65 + 8) = v57;
  *(void *)(v65 + 16) = v59;
  *(void *)(v65 + 24) = v61;
  *(void *)(v65 + 32) = v63;
  *(unsigned char *)(v65 + 40) = 0;
  sub_1000637B8(v53, &qword_1010CF678);
  uint64_t v107 = static VerticalAlignment.center.getter();
  sub_100BEB444((uint64_t)&v116);
  long long v106 = v117;
  uint64_t v66 = v118;
  uint64_t v67 = v119;
  uint64_t v105 = v120;
  LODWORD(v104) = v121;
  uint64_t v68 = v122;
  LOBYTE(v21) = v123;
  uint64_t v69 = v124;
  uint64_t v70 = v125;
  uint64_t v71 = v126;
  uint64_t v73 = v115;
  uint64_t v72 = v116;
  uint64_t v74 = v109;
  uint64_t v75 = v111;
  (*(void (**)(char *, void, uint64_t))(v115 + 104))(v109, enum case for BlendMode.destinationOut(_:), v111);
  uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
  uint64_t v77 = (uint64_t)v112;
  v76(v112, v74, v75);
  uint64_t v78 = (uint64_t)v108;
  sub_100BEB9FC(v77, (uint64_t)&v108[*(int *)(v110 + 44)]);
  *(void *)uint64_t v78 = v107;
  *(void *)(v78 + 8) = 0;
  *(unsigned char *)(v78 + 16) = 0;
  *(void *)(v78 + 24) = v72;
  *(_OWORD *)(v78 + 32) = v106;
  *(void *)(v78 + 48) = v66;
  *(void *)(v78 + 56) = v67;
  *(void *)(v78 + 64) = v105;
  *(unsigned char *)(v78 + 72) = v104;
  *(void *)(v78 + 80) = v68;
  *(unsigned char *)(v78 + 88) = v21;
  *(void *)(v78 + 96) = v69;
  *(void *)(v78 + 104) = v70;
  *(void *)(v78 + 112) = v71;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100BEBA60(v77);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v74, v75);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v79 = static Alignment.center.getter();
  uint64_t v81 = v80;
  uint64_t v82 = sub_100063814(&qword_1010CF698);
  uint64_t v83 = v113;
  uint64_t v84 = v113 + *(int *)(v82 + 36);
  sub_10006CAB8(v78, v84, &qword_1010CF650);
  unint64_t v85 = (uint64_t *)(v84 + *(int *)(sub_100063814(&qword_1010CF6A0) + 36));
  *unint64_t v85 = v79;
  v85[1] = v81;
  uint64_t v86 = v114;
  sub_10006CAB8(v114, v83, &qword_1010CF680);
  sub_1000637B8(v78, &qword_1010CF650);
  return sub_1000637B8(v86, &qword_1010CF680);
}

double sub_100BEB444@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LayoutDirection();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v23 - v6;
  type metadata accessor for MoreLabel();
  sub_100B6E47C((uint64_t)v7);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for LayoutDirection.rightToLeft(_:), v2);
  char v8 = static LayoutDirection.== infix(_:_:)();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v9(v5, v2);
  v9(v7, v2);
  sub_100063814(&qword_1010CF338);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100E251B0;
  if (v8)
  {
    *(void *)(v10 + 32) = static Color.black.getter();
    uint64_t v11 = static Color.clear.getter();
  }
  else
  {
    *(void *)(v10 + 32) = static Color.clear.getter();
    uint64_t v11 = static Color.black.getter();
  }
  *(void *)(v10 + 40) = v11;
  uint64_t v28 = v10;
  specialized Array._endMutation()();
  Gradient.init(colors:)();
  static UnitPoint.leading.getter();
  static UnitPoint.trailing.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  uint64_t v12 = v24;
  long long v23 = v25;
  uint64_t v13 = v26;
  uint64_t v14 = v27;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v15 = v28;
  char v16 = v29;
  uint64_t v17 = v30;
  char v18 = v31;
  uint64_t v19 = v32;
  uint64_t v20 = v33;
  uint64_t v21 = static Color.black.getter();
  *(void *)a1 = v12;
  double result = *(double *)&v23;
  *(_OWORD *)(a1 + 8) = v23;
  *(void *)(a1 + 24) = v13;
  *(void *)(a1 + 32) = v14;
  *(void *)(a1 + 40) = v15;
  *(unsigned char *)(a1 + 48) = v16;
  *(void *)(a1 + 56) = v17;
  *(unsigned char *)(a1 + 64) = v18;
  *(void *)(a1 + 72) = v19;
  *(void *)(a1 + 80) = v20;
  *(void *)(a1 + 88) = v21;
  return result;
}

uint64_t sub_100BEB6B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100BEB6E8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accessibilityShowButtonShapes.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100BEB71C()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_100BEB740(uint64_t a1)
{
  sub_100063814(&qword_1010CB460);
  __chkstk_darwin();
  sub_10006CAB8(a1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1010CB460);
  return EnvironmentValues.textCase.setter();
}

uint64_t sub_100BEB7D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100BEB804()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_100BEB830@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100BEB85C()
{
  return EnvironmentValues.foregroundColor.setter();
}

unint64_t sub_100BEB888()
{
  unint64_t result = qword_1010CF688;
  if (!qword_1010CF688)
  {
    sub_10006389C(&qword_1010CF668);
    sub_100BEB928();
    sub_100063858(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF688);
  }
  return result;
}

unint64_t sub_100BEB928()
{
  unint64_t result = qword_1010CF690;
  if (!qword_1010CF690)
  {
    sub_10006389C(&qword_1010CF660);
    sub_10006389C(&qword_1010CB468);
    sub_100B4A390();
    swift_getOpaqueTypeConformance2();
    sub_100063858((unint64_t *)&unk_1010CE060, &qword_1010CB4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF690);
  }
  return result;
}

uint64_t sub_100BEB9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _BlendModeEffect();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BEBA60(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _BlendModeEffect();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BEBABC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for MoreLabel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    sub_100063814(&qword_1010C8958);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = *(void *)v14;
    char v16 = v14[8];
    sub_100237EDC(*(void *)v14, v16);
    *(void *)uint64_t v13 = v15;
    v13[8] = v16;
  }
  return a1;
}

uint64_t destroy for MoreLabel(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_100063814(&qword_1010C8958);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return sub_100237F44(v7, v8);
}

void *initializeWithCopy for MoreLabel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  char v8 = (void *)((char *)a2 + v6);
  swift_retain();
  sub_100063814(&qword_1010C8958);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    void *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = v12[8];
  sub_100237EDC(*(void *)v12, v14);
  *(void *)uint64_t v11 = v13;
  v11[8] = v14;
  return a1;
}

void *assignWithCopy for MoreLabel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    char v8 = (void *)((char *)a2 + v6);
    sub_1000637B8((uint64_t)a1 + v6, &qword_1010C8958);
    sub_100063814(&qword_1010C8958);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = v12[8];
  sub_100237EDC(*(void *)v12, v14);
  uint64_t v15 = *(void *)v11;
  char v16 = v11[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = v14;
  sub_100237F44(v15, v16);
  return a1;
}

void *initializeWithTake for MoreLabel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100063814(&qword_1010C8958);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  return a1;
}

void *assignWithTake for MoreLabel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    char v8 = (char *)a2 + v6;
    sub_1000637B8((uint64_t)a1 + v6, &qword_1010C8958);
    uint64_t v9 = sub_100063814(&qword_1010C8958);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v13) = v13[8];
  uint64_t v15 = *(void *)v12;
  char v16 = v12[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = (char)v13;
  sub_100237F44(v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoreLabel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BEC150);
}

uint64_t sub_100BEC150(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010CF6A8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MoreLabel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BEC218);
}

void *sub_100BEC218(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010CF6A8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100BEC2C4()
{
  sub_100B96C24();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100BEC36C()
{
  unint64_t result = qword_1010CF748;
  if (!qword_1010CF748)
  {
    sub_10006389C(&qword_1010CF698);
    sub_100BEC40C();
    sub_100063858(&qword_1010CF760, &qword_1010CF6A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF748);
  }
  return result;
}

unint64_t sub_100BEC40C()
{
  unint64_t result = qword_1010CF750;
  if (!qword_1010CF750)
  {
    sub_10006389C(&qword_1010CF680);
    sub_100BEC488();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF750);
  }
  return result;
}

unint64_t sub_100BEC488()
{
  unint64_t result = qword_1010CF758;
  if (!qword_1010CF758)
  {
    sub_10006389C(&qword_1010CF678);
    sub_10006389C(&qword_1010CF668);
    sub_100BEB888();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF758);
  }
  return result;
}

double Gradient.startPoint.getter()
{
  return *(double *)(v0 + 32);
}

void Gradient.startPoint.setter(double a1, double a2)
{
  *(double *)(v2 + 32) = a1;
  *(double *)(v2 + 40) = a2;
}

double Gradient.endPoint.getter()
{
  return *(double *)(v0 + 48);
}

void Gradient.endPoint.setter(double a1, double a2)
{
  *(double *)(v2 + 48) = a1;
  *(double *)(v2 + 56) = a2;
}

uint64_t Gradient.init(kind:colors:locations:interpolations:startPoint:endPoint:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  *(double *)(a5 + 32) = a6;
  *(double *)(a5 + 40) = a7;
  *(double *)(a5 + 48) = a8;
  *(double *)(a5 + 56) = a9;
  return result;
}

id Gradient.View.__allocating_init(configuration:)(void **a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (char *)objc_allocWithZone(v2);
  uint64_t v5 = &v4[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  long long v6 = *((_OWORD *)a1 + 3);
  long long v8 = *(_OWORD *)a1;
  long long v7 = *((_OWORD *)a1 + 1);
  *((_OWORD *)v5 + 2) = *((_OWORD *)a1 + 2);
  *((_OWORD *)v5 + 3) = v6;
  *(_OWORD *)uint64_t v5 = v8;
  *((_OWORD *)v5 + 1) = v7;
  sub_10003BD84(a1);
  v13.receiver = v4;
  v13.super_class = v2;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v10 = [v9 layer];
  self;
  uint64_t v11 = (void *)swift_dynamicCastObjCClassUnconditional();
  sub_10003BDD0(v11);
  sub_10003BD34(a1);

  return v9;
}

void Gradient.View.init(coder:)()
{
}

uint64_t static Gradient.View.layerClass.getter()
{
  return sub_100057778(0, (unint64_t *)&qword_1010CADA0);
}

uint64_t Gradient.View.typedConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess();
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  long long v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  id v9 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void (*Gradient.View.typedConfiguration.modify(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0xE0uLL);
  *a1 = v3;
  v3[27] = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess();
  uint64_t v6 = *(void **)v4;
  uint64_t v5 = *(void *)(v4 + 8);
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v7 = *(void *)(v4 + 24);
  v3[16] = *(void *)v4;
  v3[17] = v5;
  v3 += 16;
  v3[2] = v8;
  v3[3] = v7;
  long long v9 = *(_OWORD *)(v4 + 48);
  *((_OWORD *)v3 + 2) = *(_OWORD *)(v4 + 32);
  *((_OWORD *)v3 + 3) = v9;
  swift_bridgeObjectRetain();
  id v10 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_100BEC874;
}

void sub_100BEC874(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (_OWORD *)(*a1 + 128);
  long long v4 = *(_OWORD *)(*a1 + 144);
  if (a2)
  {
    *(_OWORD *)uint64_t v2 = *v3;
    *(_OWORD *)(v2 + 16) = v4;
    long long v5 = v3[3];
    *(_OWORD *)(v2 + 32) = v3[2];
    *(_OWORD *)(v2 + 48) = v5;
    sub_10003BD84((void **)v2);
    Gradient.View.typedConfiguration.setter(v2);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_OWORD *)(v2 + 64) = *v3;
    *(_OWORD *)(v2 + 80) = v4;
    long long v6 = v3[3];
    *(_OWORD *)(v2 + 96) = v3[2];
    *(_OWORD *)(v2 + 112) = v6;
    Gradient.View.typedConfiguration.setter(v2 + 64);
  }

  free((void *)v2);
}

id sub_100BEC9AC(_OWORD *a1)
{
  long long v3 = a1[1];
  v14[0] = *a1;
  v14[1] = v3;
  long long v4 = a1[3];
  void v14[2] = a1[2];
  v14[3] = v4;
  long long v5 = (char *)objc_allocWithZone(v1);
  long long v6 = &v5[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  long long v7 = a1[1];
  *(_OWORD *)long long v6 = *a1;
  *((_OWORD *)v6 + 1) = v7;
  long long v8 = a1[3];
  *((_OWORD *)v6 + 2) = a1[2];
  *((_OWORD *)v6 + 3) = v8;
  sub_10003BD84((void **)v14);
  v13.receiver = v5;
  v13.super_class = v1;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v10 = [v9 layer];
  self;
  uint64_t v11 = (void *)swift_dynamicCastObjCClassUnconditional();
  sub_10003BDD0(v11);
  sub_10003BD34((id *)v14);

  return v9;
}

uint64_t sub_100BECAA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess();
  long long v5 = *(void **)v3;
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v6;
  long long v8 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain();
  id v9 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

id *sub_100BECB28(_OWORD *a1)
{
  long long v1 = a1[1];
  v4[0] = *a1;
  v4[1] = v1;
  long long v2 = a1[3];
  v4[2] = a1[2];
  v4[3] = v2;
  return Gradient.View.typedConfiguration.setter((uint64_t)v4);
}

uint64_t sub_100BECB5C@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = (uint64_t)&type metadata for Gradient;
  a1[4] = sub_100BED28C();
  uint64_t v3 = swift_allocObject();
  *a1 = v3;
  uint64_t v4 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess();
  uint64_t v6 = *(void **)v4;
  uint64_t v5 = *(void *)(v4 + 8);
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v7 = *(void *)(v4 + 24);
  *(void *)(v3 + 16) = *(void *)v4;
  *(void *)(v3 + 24) = v5;
  *(void *)(v3 + 32) = v8;
  *(void *)(v3 + 40) = v7;
  long long v9 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v3 + 64) = v9;
  swift_bridgeObjectRetain();
  id v10 = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100BECC14(uint64_t a1)
{
  sub_1000688E4(a1, (uint64_t)v7);
  sub_100063814(&qword_1010C9220);
  swift_dynamicCast();
  v8[0] = v3;
  v8[1] = v4;
  v8[2] = v5;
  v8[3] = v6;
  Gradient.View.typedConfiguration.setter((uint64_t)v8);
  return sub_1000760E4(a1);
}

void (*sub_100BECCA0(void *a1))(_OWORD **a1, char a2)
{
  long long v3 = malloc(0x158uLL);
  *a1 = v3;
  v3[42] = v1;
  v3[32] = &type metadata for Gradient;
  v3[33] = sub_100BED28C();
  uint64_t v4 = swift_allocObject();
  v3[29] = v4;
  uint64_t v5 = v1 + OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration;
  swift_beginAccess();
  uint64_t v7 = *(void **)v5;
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v9 = *(void *)(v5 + 16);
  uint64_t v8 = *(void *)(v5 + 24);
  *(void *)(v4 + 16) = *(void *)v5;
  *(void *)(v4 + 24) = v6;
  *(void *)(v4 + 32) = v9;
  *(void *)(v4 + 40) = v8;
  long long v10 = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v4 + 64) = v10;
  swift_bridgeObjectRetain();
  id v11 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_100BECD8C;
}

void sub_100BECD8C(_OWORD **a1, char a2)
{
  long long v2 = *a1;
  long long v3 = *a1 + 8;
  uint64_t v4 = (uint64_t)(*a1 + 12);
  uint64_t v5 = (uint64_t)*a1 + 232;
  if (a2)
  {
    sub_1000688E4((uint64_t)*a1 + 232, (uint64_t)(v2 + 17));
    sub_1000688E4((uint64_t)(v2 + 17), v4);
    sub_100063814(&qword_1010C9220);
    swift_dynamicCast();
    long long v6 = v3[1];
    *long long v2 = *v3;
    v2[1] = v6;
    long long v7 = v3[3];
    v2[2] = v3[2];
    v2[3] = v7;
    Gradient.View.typedConfiguration.setter((uint64_t)v2);
    sub_1000760E4((uint64_t)(v2 + 17));
  }
  else
  {
    sub_1000688E4((uint64_t)*a1 + 232, v4);
    sub_100063814(&qword_1010C9220);
    swift_dynamicCast();
    long long v8 = v3[1];
    v2[4] = *v3;
    v2[5] = v8;
    long long v9 = v3[3];
    v2[6] = v3[2];
    v2[7] = v9;
    Gradient.View.typedConfiguration.setter((uint64_t)(v2 + 4));
  }
  sub_1000760E4(v5);

  free(v2);
}

id sub_100BECEAC()
{
  long long v1 = v0[1];
  long long v14 = *v0;
  long long v15 = v1;
  long long v2 = v0[3];
  long long v16 = v0[2];
  long long v17 = v2;
  long long v3 = (objc_class *)type metadata accessor for Gradient.View();
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  uint64_t v5 = &v4[OBJC_IVAR____TtCV11MusicCoreUI8Gradient4View_typedConfiguration];
  long long v6 = v17;
  long long v8 = v14;
  long long v7 = v15;
  *((_OWORD *)v5 + 2) = v16;
  *((_OWORD *)v5 + 3) = v6;
  *(_OWORD *)uint64_t v5 = v8;
  *((_OWORD *)v5 + 1) = v7;
  sub_10003BD84((void **)&v14);
  v13.receiver = v4;
  v13.super_class = v3;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v10 = [v9 layer];
  self;
  id v11 = (void *)swift_dynamicCastObjCClassUnconditional();
  sub_10003BDD0(v11);

  sub_100BED1C8(&qword_1010CF7B8);
  return v9;
}

uint64_t sub_100BECFBC@<X0>(uint64_t a1@<X8>)
{
  long long v3 = *(void **)v1;
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  long long v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRetain();
  id v7 = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

BOOL sub_100BED01C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return _s11MusicCoreUI8GradientV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v8);
}

uint64_t static Gradient.horizontal(colors:locations:interpolations:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, __n128 *a4@<X8>)
{
  return sub_10002F584(a1, a2, a3, a4, (__n128)xmmword_100E42CE0, (__n128)xmmword_100E526B0);
}

Swift::Void __swiftcall Gradient.flip()()
{
  long long v1 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 48) = v1;
}

__n128 Gradient.flipped()@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = v1;
  uint64_t v4 = *((void *)v1 + 3);
  uint64_t v5 = *((void *)v2 + 2);
  long long v9 = *v2;
  __n128 v10 = (__n128)v2[3];
  uint64_t v6 = *((void *)v2 + 4);
  uint64_t v7 = *((void *)v2 + 5);
  sub_10003BD84((void **)v2);
  *(_OWORD *)a1 = v9;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  __n128 result = v10;
  *(__n128 *)(a1 + 32) = v10;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  return result;
}

unint64_t sub_100BED0FC()
{
  unint64_t result = qword_1010CF770;
  if (!qword_1010CF770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF770);
  }
  return result;
}

uint64_t sub_100BED150(uint64_t a1)
{
  uint64_t result = sub_100BED1C8(&qword_1010CF7B8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100BED194()
{
  return sub_100BED1C8(&qword_1010CF7C0);
}

uint64_t sub_100BED1C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Gradient.View();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100BED208(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100BED238();
  unint64_t result = sub_100BED28C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100BED238()
{
  unint64_t result = qword_1010CF7F0;
  if (!qword_1010CF7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF7F0);
  }
  return result;
}

unint64_t sub_100BED28C()
{
  unint64_t result = qword_1010CF7F8;
  if (!qword_1010CF7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF7F8);
  }
  return result;
}

uint64_t destroy for Gradient(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Gradient(uint64_t a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  id v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Gradient(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for Gradient(uint64_t a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_bridgeObjectRelease();
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  return a1;
}

ValueMetadata *type metadata accessor for Gradient()
{
  return &type metadata for Gradient;
}

uint64_t sub_100BED4A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t *UIImagePickerController.profileImagePickerProperties.unsafeMutableAddressor()
{
  if (qword_1010C8750 != -1) {
    swift_once();
  }
  return &static UIImagePickerController.profileImagePickerProperties;
}

int *ImagePicker.init(pickedImage:sourceType:shouldPresent:didPickImage:editingControllerProperties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *a9 = swift_getKeyPath();
  sub_100063814(&qword_1010C8950);
  swift_storeEnumTagMultiPayload();
  unint64_t result = (int *)type metadata accessor for ImagePicker(0);
  char v22 = (uint64_t *)((char *)a9 + result[7]);
  uint64_t v23 = result[9];
  uint64_t v24 = (uint64_t *)((char *)a9 + result[5]);
  *uint64_t v24 = a1;
  v24[1] = a2;
  v24[2] = a3;
  long long v25 = (uint64_t *)((char *)a9 + result[6]);
  *long long v25 = a4;
  v25[1] = a5;
  v25[2] = a6;
  v25[3] = a7;
  uint64_t v26 = (char *)a9 + result[8];
  *(void *)uint64_t v26 = a8;
  *((void *)v26 + 1) = a10;
  unsigned char v26[16] = a11;
  *char v22 = a12;
  v22[1] = a13;
  *(uint64_t *)((char *)a9 + v23) = a14;
  return result;
}

id ImagePicker.makeUIViewController(context:)()
{
  id v0 = objc_allocWithZone((Class)UIViewController);

  return [v0 init];
}

void ImagePicker.updateUIViewController(_:context:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v64 = a2;
  uint64_t v5 = type metadata accessor for PHPickerConfiguration.AssetRepresentationMode();
  uint64_t v59 = *(void *)(v5 - 8);
  __chkstk_darwin();
  id v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CF838);
  __chkstk_darwin();
  long long v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PHPickerConfiguration();
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v61 = v10;
  __chkstk_darwin();
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v63 = (char *)&v57 - v13;
  uint64_t v14 = type metadata accessor for UTType();
  uint64_t v62 = *(void *)(v14 - 8);
  __chkstk_darwin();
  long long v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = (int *)type metadata accessor for ImagePicker(0);
  uint64_t v18 = v2 + v17[8];
  uint64_t v19 = *(void **)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  LOBYTE(v18) = *(unsigned char *)(v18 + 16);
  uint64_t v65 = v19;
  uint64_t v66 = v20;
  LOBYTE(v67) = v18;
  sub_100063814(&qword_1010CF840);
  Binding.wrappedValue.getter();
  if (v68 != 1) {
    return;
  }
  id v21 = [a1 presentedViewController];

  if (v21) {
    return;
  }
  id v58 = a1;
  uint64_t v22 = v3 + v17[6];
  uint64_t v23 = *(void *)(v22 + 8);
  uint64_t v65 = *(void **)v22;
  uint64_t v66 = v23;
  long long v67 = *(_OWORD *)(v22 + 16);
  sub_100063814(&qword_1010CF848);
  Binding.wrappedValue.getter();
  if (v68)
  {
    if (v68 != 1)
    {
      id v24 = v58;
      if (v68 != 2)
      {
        uint64_t v53 = v69;
        swift_bridgeObjectRelease();
        id v54 = [v24 view];
        if (v54)
        {
          uint64_t v55 = v54;
          id v56 = [self clearColor];
          [v55 setBackgroundColor:v56];

          return;
        }
        goto LABEL_20;
      }
      id v25 = [v58 view];
      if (v25)
      {
        uint64_t v26 = v25;
        id v27 = [self clearColor];
        [v26 setBackgroundColor:v27];

        sub_100063814(&qword_1010CF850);
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_100E251D0;
        static UTType.image.getter();
        id v28 = objc_allocWithZone((Class)UIDocumentPickerViewController);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v30 = [v28 initForOpeningContentTypes:isa asCopy:1];

        sub_100063814(&qword_1010CF858);
        UIViewControllerRepresentableContext.coordinator.getter();
        char v31 = v65;
        [v30 setDelegate:v65];

        [v30 _setAutomaticallyDismissesAfterCompletion:0];
        [v24 presentViewController:v30 animated:1 completion:0];

        return;
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      return;
    }
    id v40 = v58;
    id v41 = [v58 view];
    if (!v41) {
      goto LABEL_19;
    }
    uint64_t v42 = v41;
    id v43 = [self clearColor];
    [v42 setBackgroundColor:v43];

    id v44 = [self sharedPhotoLibrary];
    uint64_t v45 = v63;
    PHPickerConfiguration.init(photoLibrary:)();
    static PHPickerFilter.images.getter();
    uint64_t v46 = type metadata accessor for PHPickerFilter();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v9, 0, 1, v46);
    PHPickerConfiguration.filter.setter();
    (*(void (**)(char *, void, uint64_t))(v59 + 104))(v7, enum case for PHPickerConfiguration.AssetRepresentationMode.current(_:), v5);
    PHPickerConfiguration.preferredAssetRepresentationMode.setter();
    sub_100057778(0, &qword_1010CF860);
    uint64_t v48 = v60;
    uint64_t v47 = v61;
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v12, v45, v61);
    uint64_t v49 = (void *)PHPickerViewController.init(configuration:)();
    sub_100063814(&qword_1010CF858);
    UIViewControllerRepresentableContext.coordinator.getter();
    sub_100BF1194(&qword_1010CF868, (void (*)(uint64_t))type metadata accessor for ImagePicker.Coordinator);
    PHPickerViewController.delegate.setter();
    id v50 = [v49 presentationController];
    if (v50)
    {
      uint64_t v51 = v50;
      UIViewControllerRepresentableContext.coordinator.getter();
      uint64_t v52 = v65;
      [v51 setDelegate:v65];
    }
    [v40 presentViewController:v49 animated:1 completion:0];

    (*(void (**)(char *, uint64_t))(v48 + 8))(v63, v47);
  }
  else
  {
    id v32 = [objc_allocWithZone((Class)UIImagePickerController) init];
    [v32 setSourceType:1];
    sub_100063814(&qword_1010CF858);
    UIViewControllerRepresentableContext.coordinator.getter();
    uint64_t v33 = v65;
    [v32 setDelegate:v65];

    [v32 setAllowsEditing:1];
    sub_100063814(&qword_1010CF870);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_100E251D0;
    static UTType.image.getter();
    uint64_t v35 = UTType.identifier.getter();
    uint64_t v37 = v36;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v16, v14);
    *(void *)(v34 + 32) = v35;
    *(void *)(v34 + 40) = v37;
    Class v38 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v32 setMediaTypes:v38];

    v39._rawValue = *(void **)(v3 + v17[9]);
    if (v39._rawValue) {
      UIImagePickerController.setProperties(_:)(v39);
    }
    [v58 presentViewController:v32 animated:1 completion:0];
  }
}

Swift::Void __swiftcall UIImagePickerController.setProperties(_:)(Swift::OpaquePointer a1)
{
  id v3 = [v1 _properties];
  id v34 = v1;
  if (v3)
  {
    long long v4 = v3;
    uint64_t v5 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v6 = (char *)a1._rawValue + 64;
  uint64_t v7 = 1 << *((unsigned char *)a1._rawValue + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *((void *)a1._rawValue + 8);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    while (1)
    {
      uint64_t v13 = v5;
      if (!v9) {
        break;
      }
      unint64_t v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      uint64_t v5 = 0;
      if (v13) {
        goto LABEL_26;
      }
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_42;
    }
    if (v16 >= v10) {
      break;
    }
    unint64_t v17 = *(void *)&v6[8 * v16];
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v10) {
        break;
      }
      unint64_t v17 = *(void *)&v6[8 * v11];
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v10) {
          break;
        }
        unint64_t v17 = *(void *)&v6[8 * v11];
        if (!v17)
        {
          int64_t v18 = v16 + 3;
          if (v18 >= v10) {
            break;
          }
          unint64_t v17 = *(void *)&v6[8 * v18];
          if (!v17)
          {
            while (1)
            {
              int64_t v11 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_44;
              }
              if (v11 >= v10) {
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)&v6[8 * v11];
              ++v18;
              if (v17) {
                goto LABEL_25;
              }
            }
          }
          int64_t v11 = v18;
        }
      }
    }
LABEL_25:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
    uint64_t v5 = 0;
    if (v13)
    {
LABEL_26:
      char v19 = *(unsigned char *)(*((void *)a1._rawValue + 7) + v15);
      uint64_t v20 = *(void *)(*((void *)a1._rawValue + 6) + 16 * v15 + 8);
      *(void *)&long long v36 = *(void *)(*((void *)a1._rawValue + 6) + 16 * v15);
      *((void *)&v36 + 1) = v20;
      swift_bridgeObjectRetain();
      AnyHashable.init<A>(_:)();
      uint64_t v37 = &type metadata for Bool;
      LOBYTE(v36) = v19;
      sub_10007664C(&v36, v35);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v23 = sub_100076DAC((uint64_t)v38);
      uint64_t v24 = v13[2];
      BOOL v25 = (v22 & 1) == 0;
      uint64_t v26 = v24 + v25;
      if (__OFADD__(v24, v25))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return;
      }
      char v27 = v22;
      if (v13[3] >= v26)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v5 = v13;
          if (v22) {
            goto LABEL_7;
          }
        }
        else
        {
          sub_100AFE760();
          uint64_t v5 = v13;
          if (v27) {
            goto LABEL_7;
          }
        }
      }
      else
      {
        sub_100AFDA70(v26, isUniquelyReferenced_nonNull_native);
        unint64_t v28 = sub_100076DAC((uint64_t)v38);
        if ((v27 & 1) != (v29 & 1)) {
          goto LABEL_45;
        }
        unint64_t v23 = v28;
        uint64_t v5 = v13;
        if (v27)
        {
LABEL_7:
          uint64_t v12 = (_OWORD *)(v5[7] + 32 * v23);
          sub_1000760E4((uint64_t)v12);
          sub_10007664C(v35, v12);
          goto LABEL_8;
        }
      }
      v5[(v23 >> 6) + 8] |= 1 << v23;
      sub_100076F0C((uint64_t)v38, v5[6] + 40 * v23);
      sub_10007664C(v35, (_OWORD *)(v5[7] + 32 * v23));
      uint64_t v30 = v5[2];
      BOOL v31 = __OFADD__(v30, 1);
      uint64_t v32 = v30 + 1;
      if (v31) {
        goto LABEL_43;
      }
      v5[2] = v32;
LABEL_8:
      swift_bridgeObjectRelease();
      sub_100076EB8((uint64_t)v38);
    }
  }
LABEL_37:
  swift_release();
  if (v5)
  {
    swift_bridgeObjectRetain();
    v33.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v33.super.Class isa = 0;
  }
  [v34 _setProperties:v33.super.isa];
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall ImagePicker.Coordinator.imagePickerController(_:didFinishPickingMediaWithInfo:)(UIImagePickerController _, Swift::OpaquePointer didFinishPickingMediaWithInfo)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  uint64_t v8 = (char *)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  int64_t v10 = (char *)v64 - v9;
  if (*((void *)didFinishPickingMediaWithInfo._rawValue + 2))
  {
    int64_t v11 = UIImagePickerControllerEditedImage;
    uint64_t v12 = sub_100019FA8(v11);
    if (v13)
    {
      sub_100076134(*((void *)didFinishPickingMediaWithInfo._rawValue + 7) + 32 * v12, (uint64_t)&v65);

      if (*((void *)&v66 + 1))
      {
        sub_10007664C(&v65, &v67);
        goto LABEL_13;
      }
    }
    else
    {
      long long v65 = 0u;
      long long v66 = 0u;
    }
    if (*((void *)didFinishPickingMediaWithInfo._rawValue + 2))
    {
      unint64_t v14 = UIImagePickerControllerOriginalImage;
      uint64_t v15 = sub_100019FA8(v14);
      if (v16)
      {
        sub_100076134(*((void *)didFinishPickingMediaWithInfo._rawValue + 7) + 32 * v15, (uint64_t)&v67);
      }
      else
      {
        long long v67 = 0u;
        long long v68 = 0u;
      }

      goto LABEL_12;
    }
  }
  else
  {
    long long v65 = 0u;
    long long v66 = 0u;
  }
  long long v67 = 0u;
  long long v68 = 0u;
LABEL_12:
  sub_1000637B8((uint64_t)&v65, &qword_1010CAD00);
LABEL_13:
  if (!*((void *)&v68 + 1))
  {
    sub_1000637B8((uint64_t)&v67, &qword_1010CAD00);
LABEL_19:
    *(void *)&long long v67 = 0;
    *((void *)&v67 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(61);
    v22._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
    v22._uint64_t object = (void *)0x8000000100DD60D0;
    String.append(_:)(v22);
    type metadata accessor for InfoKey(0);
    sub_100BF1194(&qword_1010C8C50, type metadata accessor for InfoKey);
    v23._uint64_t countAndFlagsBits = Dictionary.description.getter();
    String.append(_:)(v23);
    swift_bridgeObjectRelease();
    v24._uint64_t object = (void *)0x8000000100DD6100;
    v24._uint64_t countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v24);
    uint64_t v25 = *((void *)&v67 + 1);
    uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v3
                                                  + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
    if (v26)
    {
      uint64_t v27 = v67;
      sub_100BF11DC();
      uint64_t v28 = swift_allocError();
      *char v29 = v27;
      v29[1] = v25;
      swift_retain();
      v26(v28, 1);
      sub_10006ADFC((uint64_t)v26);
      swift_errorRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return;
  }
  sub_100057778(0, &qword_1010CF880);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_19;
  }
  unint64_t v17 = (void *)v65;
  if (!*((void *)didFinishPickingMediaWithInfo._rawValue + 2))
  {
    long long v67 = 0u;
    long long v68 = 0u;
    id v30 = (id)v65;
    if (*((void *)&v68 + 1)) {
      goto LABEL_27;
    }
LABEL_24:
    sub_1000637B8((uint64_t)&v67, &qword_1010CAD00);
LABEL_29:
    char v40 = 1;
    uint64_t v33 = 0;
    uint64_t v35 = 0;
    uint64_t v37 = 0;
    uint64_t v39 = 0;
    goto LABEL_30;
  }
  id v18 = (id)v65;
  char v19 = UIImagePickerControllerCropRect;
  uint64_t v20 = sub_100019FA8(v19);
  if (v21)
  {
    sub_100076134(*((void *)didFinishPickingMediaWithInfo._rawValue + 7) + 32 * v20, (uint64_t)&v67);
  }
  else
  {
    long long v67 = 0u;
    long long v68 = 0u;
  }

  if (!*((void *)&v68 + 1)) {
    goto LABEL_24;
  }
LABEL_27:
  sub_100057778(0, (unint64_t *)&unk_1010CF888);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_29;
  }
  BOOL v31 = (void *)v65;
  [(id)v65 CGRectValue];
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;

  char v40 = 0;
LABEL_30:
  *(void *)&long long v67 = v33;
  *((void *)&v67 + 1) = v35;
  *(void *)&long long v68 = v37;
  *((void *)&v68 + 1) = v39;
  char v69 = v40;
  id v41 = UIImage.centerCropIfNeeded(imageRect:)((uint64_t)&v67);

  uint64_t v42 = *(void (**)(id, void))(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
  if (v42)
  {
    id v43 = v41;
    sub_10007B674((uint64_t)v42);
    v42(v41, 0);
    sub_10006ADFC((uint64_t)v42);
  }
  uint64_t v44 = v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
  sub_100BF1230(v44, (uint64_t)v10);
  uint64_t v45 = &v10[*(int *)(v6 + 24)];
  uint64_t v46 = *((void *)v45 + 1);
  *(void *)&long long v65 = *(void *)v45;
  *((void *)&v65 + 1) = v46;
  long long v66 = *((_OWORD *)v45 + 1);
  sub_100063814(&qword_1010CF848);
  Binding.wrappedValue.getter();
  unint64_t v48 = v64[0];
  uint64_t v47 = (void *)v64[1];
  sub_100BF1294((uint64_t)v10);
  if (v48 - 1 < 2)
  {
    id v49 = [(objc_class *)_.super.super.super.super.isa presentingViewController];
    if (!v49
      || (id v50 = v49,
          id v51 = [v49 presentingViewController],
          v50,
          !v51))
    {

      return;
    }
    sub_100BF1230(v44, (uint64_t)v8);
    uint64_t v52 = &v8[*(int *)(v6 + 32)];
    uint64_t v53 = *(void *)v52;
    uint64_t v54 = *((void *)v52 + 1);
    LOBYTE(v52) = v52[16];
    *(void *)&long long v65 = v53;
    *((void *)&v65 + 1) = v54;
    LOBYTE(v66) = (_BYTE)v52;
    LOBYTE(v64[0]) = 0;
    sub_100063814(&qword_1010CF840);
    Binding.wrappedValue.setter();
    [v51 dismissViewControllerAnimated:1 completion:0];

    goto LABEL_42;
  }
  if (!v48)
  {
    sub_100BF1230(v44, (uint64_t)v8);
    uint64_t v55 = &v8[*(int *)(v6 + 32)];
    uint64_t v56 = *(void *)v55;
    uint64_t v57 = *((void *)v55 + 1);
    LOBYTE(v55) = v55[16];
    *(void *)&long long v65 = v56;
    *((void *)&v65 + 1) = v57;
    LOBYTE(v66) = (_BYTE)v55;
    LOBYTE(v64[0]) = 0;
    sub_100063814(&qword_1010CF840);
    Binding.wrappedValue.setter();
    [(objc_class *)_.super.super.super.super.isa dismissViewControllerAnimated:1 completion:0];

LABEL_42:
    sub_100BF1294((uint64_t)v8);
    return;
  }
  id v58 = [(objc_class *)_.super.super.super.super.isa presentingViewController];
  if (v58)
  {
    uint64_t v59 = v58;
    id v60 = [v58 presentingViewController];

    if (v60)
    {
      sub_100BF1230(v44, (uint64_t)v8);
      uint64_t v61 = &v8[*(int *)(v6 + 32)];
      uint64_t v62 = *(void *)v61;
      uint64_t v63 = *((void *)v61 + 1);
      LOBYTE(v61) = v61[16];
      *(void *)&long long v65 = v62;
      *((void *)&v65 + 1) = v63;
      LOBYTE(v66) = (_BYTE)v61;
      LOBYTE(v64[0]) = 0;
      sub_100063814(&qword_1010CF840);
      Binding.wrappedValue.setter();
      [v60 dismissViewControllerAnimated:1 completion:0];

      sub_100478FB0(v48, v47);
      goto LABEL_42;
    }
  }

  sub_100478FB0(v48, v47);
}

id UIImage.centerCropIfNeeded(imageRect:)(uint64_t a1)
{
  sub_10002EDE0(a1, (uint64_t)v7);
  if (v10)
  {
    [v6 size];
    double v2 = v1;
    double v4 = v3;
  }
  else
  {
    double v2 = v8;
    double v4 = v9;
  }
  if ((static ApproximatelyEquatable.!=~ infix(_:_:)() & 1) == 0
    || vabdd_f64(1.0, v2 / v4) <= 0.05
    || (id result = (id)UIImage.byCroppingToUniformCenter()()) == 0)
  {
    return v6;
  }
  return result;
}

Swift::Void __swiftcall ImagePicker.Coordinator.imagePickerControllerDidCancel(_:)(UIImagePickerController a1)
{
  uint64_t v3 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v6 = __chkstk_darwin().n128_u64[0];
  double v8 = (char *)&v25 - v7;
  id v9 = [(objc_class *)a1.super.super.super.super.isa presentingViewController];
  if (v9)
  {
    char v10 = v9;
    self;
    uint64_t v11 = swift_dynamicCastObjCClass();
    if (v11)
    {
      uint64_t v12 = (uint64_t *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier);
      uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier + 8);
      if (v13)
      {
        unint64_t v14 = (void *)v11;
        uint64_t v26 = *v12;
        sub_100063814(&qword_1010CF870);
        uint64_t v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_100E251D0;
        *(void *)(v15 + 32) = v26;
        *(void *)(v15 + 40) = v13;
        swift_bridgeObjectRetain();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v14 deselectAssetsWithIdentifiers:isa];

        uint64_t *v12 = 0;
        v12[1] = 0;
        swift_bridgeObjectRelease();
        [v14 setModalInPresentation:0];
      }
    }
  }
  uint64_t v17 = v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
  sub_100BF1230(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v8);
  id v18 = &v8[*(int *)(v3 + 24)];
  uint64_t v19 = *((void *)v18 + 1);
  uint64_t v27 = *(void *)v18;
  uint64_t v28 = v19;
  long long v29 = *((_OWORD *)v18 + 1);
  sub_100063814(&qword_1010CF848);
  Binding.wrappedValue.getter();
  unint64_t v20 = v30;
  char v21 = v31;
  sub_100BF1294((uint64_t)v8);
  if (v20 - 1 >= 2)
  {
    if (!v20)
    {
      sub_100BF1230(v17, (uint64_t)v5);
      Swift::String v22 = &v5[*(int *)(v3 + 32)];
      uint64_t v23 = *(void *)v22;
      uint64_t v24 = *((void *)v22 + 1);
      LOBYTE(v22) = v22[16];
      uint64_t v27 = v23;
      uint64_t v28 = v24;
      LOBYTE(v29) = (_BYTE)v22;
      LOBYTE(v30) = 0;
      sub_100063814(&qword_1010CF840);
      Binding.wrappedValue.setter();
      [(objc_class *)a1.super.super.super.super.isa dismissViewControllerAnimated:1 completion:0];
      sub_100BF1294((uint64_t)v5);
      return;
    }
    sub_100478FB0(v20, v21);
  }
  [(objc_class *)a1.super.super.super.super.isa dismissViewControllerAnimated:1 completion:0];
}

Swift::Void __swiftcall ImagePicker.Coordinator.picker(_:didFinishPicking:)(PHPickerViewController _, Swift::OpaquePointer didFinishPicking)
{
  uint64_t v5 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PHPickerResult();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin();
  type metadata accessor for UTType();
  __chkstk_darwin();
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((void *)didFinishPicking._rawValue + 2))
  {
    uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v17 = v2;
    Class isa = _.super.super.super.isa;
    uint64_t v31 = v12;
    uint64_t v18 = (v16 + 32) & ~v16;
    uint64_t v19 = v13 + v18;
    uint64_t v32 = v11;
    unint64_t v20 = (void *)PHPickerResult.itemProvider.getter();
    static UTType.image.getter();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v8);
    uint64_t v21 = swift_allocObject();
    Class v22 = isa;
    *(void *)(v21 + 16) = v17;
    *(void *)(v21 + 24) = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v21 + v18, (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    id v23 = v17;
    uint64_t v24 = v22;
    uint64_t v25 = NSItemProvider.loadDataRepresentation(for:completionHandler:)();
    swift_release();

    (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
  }
  else
  {
    sub_100BF1230((uint64_t)v2 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v7);
    uint64_t v26 = &v7[*(int *)(v5 + 32)];
    uint64_t v27 = *(void *)v26;
    uint64_t v28 = *((void *)v26 + 1);
    LOBYTE(v26) = v26[16];
    uint64_t v34 = v27;
    uint64_t v35 = v28;
    char v36 = (char)v26;
    char v33 = 0;
    sub_100063814(&qword_1010CF840);
    Binding.wrappedValue.setter();
    [(objc_class *)_.super.super.super.isa dismissViewControllerAnimated:1 completion:0];
    sub_100BF1294((uint64_t)v7);
  }
}

uint64_t sub_100BEF0B8(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  id v31 = a5;
  unint64_t v29 = a2;
  uint64_t v11 = type metadata accessor for PHPickerResult();
  uint64_t v30 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CAA90);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a6, v11);
  type metadata accessor for MainActor();
  uint64_t v18 = a1;
  sub_100369804(a1, a2);
  uint64_t v19 = a3;
  swift_errorRetain();
  id v20 = a4;
  id v21 = v31;
  uint64_t v22 = static MainActor.shared.getter();
  unint64_t v23 = (*(unsigned __int8 *)(v12 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v24 = (char *)swift_allocObject();
  *((void *)v24 + 2) = v22;
  *((void *)v24 + 3) = &protocol witness table for MainActor;
  unint64_t v26 = v29;
  uint64_t v25 = v30;
  *((void *)v24 + 4) = v18;
  *((void *)v24 + 5) = v26;
  *((void *)v24 + 6) = v19;
  *((void *)v24 + 7) = v20;
  *((void *)v24 + 8) = v21;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v24[v23], v14, v25);
  sub_100066A94((uint64_t)v16, (uint64_t)&unk_1010CFB08, (uint64_t)v24);
  return swift_release();
}

uint64_t sub_100BEF300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a8;
  v8[8] = v13;
  v8[5] = a6;
  v8[6] = a7;
  v8[3] = a4;
  _OWORD v8[4] = a5;
  type metadata accessor for MainActor();
  v8[9] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100BEF3A8, v10, v9);
}

uint64_t sub_100BEF3A8()
{
  unint64_t v1 = *(void *)(v0 + 32);
  swift_release();
  if (v1 >> 60 != 15)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    unint64_t v3 = *(void *)(v0 + 32);
    id v4 = objc_allocWithZone((Class)UIImage);
    sub_10007AA40(v2, v3);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    uint64_t v6 = (UIImage *)[v4 initWithData:isa];

    if (v6)
    {
      uint64_t v7 = *(void *)(v0 + 48);
      uint64_t v8 = PHPickerResult.assetIdentifier.getter();
      uint64_t v9 = (uint64_t *)(v7 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier);
      *uint64_t v9 = v8;
      v9[1] = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = UIImagePNGRepresentation(v6);
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v15 = v14;

        double v16 = UIImage.centeredSquareCropRect.getter();
        id v20 = sub_100BF0084(v16, v17, v18, v19);
        if (v20)
        {
          id v21 = v20;
          uint64_t v23 = *(void *)(v0 + 24);
          unint64_t v22 = *(void *)(v0 + 32);
          [*(id *)(v0 + 56) presentViewController:v20 animated:1 completion:0];
          [v21 becomeFirstResponder];
          sub_10007A748(v23, v22);
        }
        else
        {
          sub_10007A748(*(void *)(v0 + 24), *(void *)(v0 + 32));
        }

        sub_10007A5C4(v13, v15);
      }
      else
      {
        sub_10007A748(*(void *)(v0 + 24), *(void *)(v0 + 32));
      }
      goto LABEL_15;
    }
    sub_10007A748(*(void *)(v0 + 24), *(void *)(v0 + 32));
  }
  uint64_t v24 = *(void *)(v0 + 40);
  uint64_t v25 = *(void *)(v0 + 48);
  _StringGuts.grow(_:)(49);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v24;
  swift_errorRetain();
  sub_100063814((uint64_t *)&unk_1010CFB10);
  v26._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v25
                                                + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
  if (v27)
  {
    sub_100BF11DC();
    uint64_t v28 = swift_allocError();
    *unint64_t v29 = 0xD00000000000002FLL;
    v29[1] = 0x8000000100DD6300;
    swift_retain();
    v27(v28, 1);
    sub_10006ADFC((uint64_t)v27);
    swift_errorRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v30 = *(void **)(v0 + 56);
  id v31 = sub_100BF0198();
  [v30 presentViewController:v31 animated:1 completion:0];

  uint64_t v32 = PHPickerResult.assetIdentifier.getter();
  if (v33)
  {
    uint64_t v34 = v32;
    uint64_t v35 = v33;
    char v36 = *(void **)(v0 + 56);
    sub_100063814(&qword_1010CF870);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_100E251D0;
    *(void *)(v37 + 32) = v34;
    *(void *)(v37 + 40) = v35;
    Class v38 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v36 deselectAssetsWithIdentifiers:v38];
  }
LABEL_15:
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

double UIImage.centeredSquareCropRect.getter()
{
  [v0 size];
  double v2 = v1;
  [v0 size];
  double v4 = v3;
  [v0 size];
  double v6 = v5;
  [v0 size];
  double v8 = v7;
  [v0 size];
  double v10 = v9;
  double v12 = v11;
  [v0 size];
  double v14 = (v10 - v13) * 0.5 + 0.0;
  double v16 = (v12 - v15) * 0.5 + 0.0;
  if (v6 < v8) {
    double v17 = v16;
  }
  else {
    double v17 = 0.0;
  }
  if (v6 < v8) {
    double v18 = 0.0;
  }
  else {
    double v18 = v14;
  }
  if (v4 >= v2) {
    double v19 = v2;
  }
  else {
    double v19 = v4;
  }
  double v20 = v19;
  CGRect v26 = CGRectIntegral(*(CGRect *)(&v17 - 1));
  double x = v26.origin.x;
  CGFloat y = v26.origin.y;
  CGFloat width = v26.size.width;
  CGFloat height = v26.size.height;
  CGRectGetWidth(v26);
  v27.origin.double x = x;
  v27.origin.CGFloat y = y;
  v27.size.CGFloat width = width;
  v27.size.CGFloat height = height;
  CGRectGetHeight(v27);
  return x;
}

Swift::Void __swiftcall ImagePicker.Coordinator.documentPicker(_:didPickDocumentsAt:)(UIDocumentPickerViewController _, Swift::OpaquePointer didPickDocumentsAt)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ImagePicker(0);
  __chkstk_darwin();
  double v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010C8CC0);
  __chkstk_darwin();
  double v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = __chkstk_darwin();
  double v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*((void *)didPickDocumentsAt._rawValue + 2))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56))(v10, 1, 1, v11, v13);
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t, __n128))(v12 + 16))(v10, (char *)didPickDocumentsAt._rawValue+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v11, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_9:
    sub_1000637B8((uint64_t)v10, &qword_1010C8CC0);
LABEL_10:
    uint64_t v47 = 0;
    unint64_t v48 = 0xE000000000000000;
    _StringGuts.grow(_:)(59);
    v33._uint64_t countAndFlagsBits = 0xD000000000000025;
    v33._uint64_t object = (void *)0x8000000100DD6120;
    String.append(_:)(v33);
    v34._uint64_t countAndFlagsBits = Array.description.getter();
    String.append(_:)(v34);
    swift_bridgeObjectRelease();
    v35._uint64_t object = (void *)0x8000000100DD6150;
    v35._uint64_t countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v35);
    unint64_t v36 = v48;
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v3
                                                  + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler);
    if (v37)
    {
      uint64_t v38 = v47;
      sub_100BF11DC();
      uint64_t v39 = swift_allocError();
      *char v40 = v38;
      v40[1] = v36;
      swift_retain();
      v37(v39, 1);
      sub_10006ADFC((uint64_t)v37);
      swift_errorRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_100BF1230(v3 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v8);
    uint64_t v41 = &v8[*(int *)(v6 + 32)];
    uint64_t v42 = *(void *)v41;
    unint64_t v43 = *((void *)v41 + 1);
    LOBYTE(v41) = v41[16];
    uint64_t v47 = v42;
    unint64_t v48 = v43;
    char v49 = (char)v41;
    char v46 = 0;
    sub_100063814(&qword_1010CF840);
    Binding.wrappedValue.setter();
    [(objc_class *)_.super.super.super.isa dismissViewControllerAnimated:1 completion:0];
    sub_100BF1294((uint64_t)v8);
    return;
  }
  uint64_t v45 = v3;
  Class isa = _.super.super.super.isa;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
  URL.path.getter();
  id v17 = objc_allocWithZone((Class)UIImage);
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  double v19 = (UIImage *)[v17 initWithContentsOfFile:v18];

  if (!v19)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    _.super.super.super.Class isa = isa;
    uint64_t v3 = v45;
    goto LABEL_10;
  }
  id v20 = [(objc_class *)isa view];
  if (v20)
  {
    id v21 = v20;
    [v20 endEditing:1];

    unint64_t v22 = UIImagePNGRepresentation(v19);
    if (!v22)
    {

      goto LABEL_17;
    }
    uint64_t v23 = v22;
    uint64_t v24 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v26 = v25;

    double v27 = UIImage.centeredSquareCropRect.getter();
    id v31 = sub_100BF0084(v27, v28, v29, v30);
    if (v31)
    {
      uint64_t v32 = v31;
      [(objc_class *)isa presentViewController:v31 animated:1 completion:0];

      sub_10007A5C4(v24, v26);
LABEL_17:
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      return;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    sub_10007A5C4(v24, v26);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall ImagePicker.Coordinator.documentPickerWasCancelled(_:)(UIDocumentPickerViewController a1)
{
  uint64_t v3 = type metadata accessor for ImagePicker(0) - 8;
  __chkstk_darwin();
  double v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100BF1230(v1 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker, (uint64_t)v5);
  uint64_t v6 = &v5[*(int *)(v3 + 40)];
  uint64_t v7 = *(void *)v6;
  uint64_t v8 = *((void *)v6 + 1);
  LOBYTE(v6) = v6[16];
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  char v12 = (char)v6;
  v9[7] = 0;
  sub_100063814(&qword_1010CF840);
  Binding.wrappedValue.setter();
  [(objc_class *)a1.super.super.super.isa dismissViewControllerAnimated:1 completion:0];
  sub_100BF1294((uint64_t)v5);
}

Swift::Void __swiftcall ImagePicker.Coordinator.presentationControllerDidDismiss(_:)(UIPresentationController a1)
{
}

id sub_100BF0084(double a1, double a2, double a3, double a4)
{
  type metadata accessor for ImageEditingViewController();
  id v9 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v11 = [v9 _initWithSourceImageData:isa a1 a2 a3 a4];

  if (v11)
  {
    id v12 = v11;
    [v12 setDelegate:v4];
    [v12 setModalInPresentation:1];
    uint64_t v13 = v4 + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker;
    if (*(void *)(v13 + *(int *)(type metadata accessor for ImagePicker(0) + 36)))
    {
      uint64_t v14 = swift_bridgeObjectRetain();
      UIImagePickerController.setProperties(_:)((Swift::OpaquePointer)v14);
      swift_bridgeObjectRelease();
    }
  }
  return v11;
}

id sub_100BF0198()
{
  uint64_t v1 = OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController);
  }
  else
  {
    id v4 = sub_100BF01F8();
    double v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100BF01F8()
{
  type metadata accessor for Locale();
  __chkstk_darwin();
  uint64_t v0 = type metadata accessor for String.LocalizationValue();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  id v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  double v5 = (char *)v16 - v4;
  String.LocalizationValue.init(stringLiteral:)();
  id v6 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v6(v3, v5, v0);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v7 = (id)qword_10112BE80;
  static Locale.current.getter();
  v16[0] = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v5, v0);
  String.LocalizationValue.init(stringLiteral:)();
  v6(v3, v5, v0);
  id v9 = (id)qword_10112BE80;
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  v8(v5, v0);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [self alertControllerWithTitle:v10 message:v11 preferredStyle:1];

  String.okButtonTitle.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [self actionWithTitle:v13 style:1 handler:0];

  [v12 addAction:v14];
  return v12;
}

void ImagePicker.Coordinator.init()()
{
}

id ImagePicker.Coordinator.__deallocating_deinit()
{
  return sub_100BF1094(0, (uint64_t (*)(void))type metadata accessor for ImagePicker.Coordinator);
}

char *ImagePicker.makeCoordinator()()
{
  uint64_t v1 = *(void *)(type metadata accessor for ImagePicker(0) - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  __chkstk_darwin();
  sub_100BF1230(v0, (uint64_t)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v3 = (objc_class *)type metadata accessor for ImagePicker.Coordinator(0);
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  double v5 = &v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler];
  *(void *)double v5 = 0;
  *((void *)v5 + 1) = 0;
  id v6 = &v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_selectedPhotoIdentifier];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0;
  *(void *)&v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator____lazy_storage___downloadFailureAlertController] = 0;
  sub_100BF1230((uint64_t)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)&v4[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_imagePicker]);
  v13.receiver = v4;
  v13.super_class = v3;
  id v7 = [(char *)[super init]];
  sub_100BF1294((uint64_t)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100BF1230(v0, (uint64_t)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v8 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v9 = swift_allocObject();
  sub_100BE0270((uint64_t)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  NSString v10 = (void (**)(void *, char))&v7[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler];
  uint64_t v11 = *(void *)&v7[OBJC_IVAR____TtCV11MusicCoreUI11ImagePicker11Coordinator_pickHandler];
  *NSString v10 = sub_100BF16E8;
  v10[1] = (void (*)(void *, char))v9;
  sub_10006ADFC(v11);
  return v7;
}

void sub_100BF07D0(void *a1, char a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    uint64_t v20 = Logger.playlistCovers.unsafeMutableAddressor();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v20, v6);
    swift_errorRetain();
    swift_errorRetain();
    id v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      *(void *)&long long v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136446210;
      unint64_t v28 = (unint64_t)a1;
      swift_errorRetain();
      sub_100063814(&qword_1010C94D8);
      uint64_t v24 = String.init<A>(describing:)();
      *(void *)(v23 + 4) = sub_100076010(v24, v25, (uint64_t *)&v26);
      swift_bridgeObjectRelease();
      sub_100A1FF64(a1, 1);
      sub_100A1FF64(a1, 1);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "ImagePicker failed with error: %{public}s", (uint8_t *)v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100A1FF64(a1, 1);
    }
    else
    {
      sub_100A1FF64(a1, 1);
      sub_100A1FF64(a1, 1);
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    NSString v10 = (int *)type metadata accessor for ImagePicker(0);
    uint64_t v11 = (long long *)(a3 + v10[5]);
    long long v12 = *v11;
    uint64_t v13 = *((void *)v11 + 2);
    long long v26 = v12;
    *(void *)&long long v27 = v13;
    unint64_t v28 = (unint64_t)a1;
    id v14 = a1;
    sub_100063814((uint64_t *)&unk_1010CFAF0);
    Binding.wrappedValue.setter();
    double v15 = *(void (**)(unint64_t, void *))(a3 + v10[7]);
    if (v15)
    {
      uint64_t v16 = a3 + v10[6];
      uint64_t v17 = *(void *)(v16 + 8);
      *(void *)&long long v26 = *(void *)v16;
      *((void *)&v26 + 1) = v17;
      long long v27 = *(_OWORD *)(v16 + 16);
      sub_100063814(&qword_1010CF848);
      Binding.wrappedValue.getter();
      unint64_t v18 = v28;
      double v19 = v29;
      v15(v28, v29);
      sub_100478FB0(v18, v19);
    }
  }
}

uint64_t sub_100BF0AD8(uint64_t a1, uint64_t a2)
{
  return _s11MusicCoreUI11ImagePickerV10SourceTypeO21__derived_enum_equalsySbAE_AEtFZ_0(*(void **)a1, *(void **)(a1 + 8), *(void **)a2, *(void **)(a2 + 8));
}

char *sub_100BF0AF0@<X0>(char **a1@<X8>)
{
  id result = ImagePicker.makeCoordinator()();
  *a1 = result;
  return result;
}

uint64_t sub_100BF0B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100BF1194((unint64_t *)&unk_1010CFAE0, (void (*)(uint64_t))type metadata accessor for ImagePicker);

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100BF0BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100BF1194((unint64_t *)&unk_1010CFAE0, (void (*)(uint64_t))type metadata accessor for ImagePicker);

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100BF0C40()
{
}

id ImageEditingViewController.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  if (a1)
  {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t ObjCClassFromMetadata = 0;
  if (a2) {
LABEL_3:
  }
    uint64_t v3 = swift_getObjCClassFromMetadata();
LABEL_4:
  id v5 = objc_allocWithZone(v2);

  return [v5 initWithNavigationBarClass:ObjCClassFromMetadata toolbarClass:v3];
}

id ImageEditingViewController.init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  if (!a1)
  {
    uint64_t ObjCClassFromMetadata = 0;
    if (!a2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (v3) {
LABEL_3:
  }
    uint64_t v3 = swift_getObjCClassFromMetadata();
LABEL_4:
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for ImageEditingViewController();
  return [super initWithNavigationBarClass:ObjCClassFromMetadata toolbarClass:v3];
}

id ImageEditingViewController.__allocating_init(rootViewController:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithRootViewController:a1];

  return v3;
}

id ImageEditingViewController.init(rootViewController:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ImageEditingViewController();
  id v3 = [super initWithRootViewController:a1];

  return v3;
}

id ImageEditingViewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for ImageEditingViewController();
  id v6 = [super initWithNibName:v5 bundle:a3];

  return v6;
}

id ImageEditingViewController.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ImageEditingViewController();
  id v3 = [super initWithCoder:a1];

  return v3;
}

id ImageEditingViewController.__deallocating_deinit(uint64_t a1)
{
  return sub_100BF1094(a1, type metadata accessor for ImageEditingViewController);
}

id sub_100BF1094(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

unint64_t sub_100BF10CC()
{
  unint64_t result = sub_1000072F8((uint64_t)&off_1010089A8);
  static UIImagePickerController.profileImagePickerProperties = result;
  return result;
}

uint64_t type metadata accessor for ImagePicker(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010CF910);
}

uint64_t type metadata accessor for ImagePicker.Coordinator(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CFAA8);
}

uint64_t static UIImagePickerController.profileImagePickerProperties.getter()
{
  if (qword_1010C8750 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_100BF1194(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100BF11DC()
{
  unint64_t result = qword_1010CF878;
  if (!qword_1010CF878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CF878);
  }
  return result;
}

uint64_t sub_100BF1230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BF1294(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ImagePicker(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s11MusicCoreUI11ImagePickerV10SourceTypeO21__derived_enum_equalsySbAE_AEtFZ_0(void *a1, void *a2, void *a3, void *a4)
{
  if (!a1) {
    return !a3;
  }
  if (a1 == (void *)1) {
    return a3 == (void *)1;
  }
  if (a1 == (void *)2) {
    return a3 == (void *)2;
  }
  if ((unint64_t)a3 < 3) {
    return 0;
  }
  if (sub_100054E98(a1, a3))
  {
    if (a2)
    {
      if (a4)
      {
        sub_100057778(0, &qword_1010CF880);
        id v7 = a2;
        id v8 = a4;
        char v9 = static NSObject.== infix(_:_:)();

        if (v9) {
          return 1;
        }
      }
    }
    else if (!a4)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_100BF13E0()
{
  uint64_t v1 = type metadata accessor for PHPickerResult();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100BF14B4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for PHPickerResult() - 8);
  id v8 = *(void **)(v3 + 16);
  char v9 = *(void **)(v3 + 24);
  uint64_t v10 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_100BEF0B8(a1, a2, a3, v8, v9, v10);
}

uint64_t sub_100BF1540()
{
  uint64_t v1 = (int *)type metadata accessor for ImagePicker(0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + v2;
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = v3 + v1[5];
  swift_release();
  swift_release();

  uint64_t v6 = v3 + v1[6];
  swift_release();
  swift_release();
  if (*(void *)(v6 + 16) >= 3uLL)
  {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v3 + v1[7])) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100BF16E8(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for ImagePicker(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_100BF07D0(a1, v4, v6);
}

uint64_t type metadata accessor for ImageEditingViewController()
{
  return self;
}

uint64_t sub_100BF178C()
{
  return sub_100BF1194(&qword_1010CF8B0, (void (*)(uint64_t))type metadata accessor for ImagePicker);
}

uint64_t *initializeBufferWithCopyOfBuffer for ImagePicker(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100063814(&qword_1010C8950);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    Swift::String v33 = a3;
    uint64_t v11 = (uint64_t *)((char *)a1 + v9);
    long long v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    void *v11 = *v12;
    v11[1] = v13;
    id v14 = (void *)v12[2];
    v11[2] = v14;
    double v15 = (uint64_t *)((char *)a1 + v10);
    uint64_t v16 = (char *)a2 + v10;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v10 + 8);
    *double v15 = *(uint64_t *)((char *)a2 + v10);
    v15[1] = v17;
    double v19 = (unint64_t *)((char *)a2 + v10 + 16);
    unint64_t v18 = *v19;
    swift_retain();
    swift_retain();
    id v20 = v14;
    swift_retain();
    swift_retain();
    if (v18 >= 3)
    {
      id v21 = (void *)*((void *)v16 + 3);
      _OWORD v15[2] = v18;
      v15[3] = v21;
      swift_bridgeObjectRetain();
      id v22 = v21;
    }
    else
    {
      *((_OWORD *)v15 + 1) = *(_OWORD *)v19;
    }
    uint64_t v23 = v33[7];
    uint64_t v24 = (uint64_t *)((char *)a1 + v23);
    unint64_t v25 = (uint64_t *)((char *)a2 + v23);
    if (*v25)
    {
      uint64_t v26 = v25[1];
      *uint64_t v24 = *v25;
      v24[1] = v26;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    }
    uint64_t v27 = v33[8];
    uint64_t v28 = v33[9];
    double v29 = (char *)a1 + v27;
    double v30 = (char *)a2 + v27;
    uint64_t v31 = *((void *)v30 + 1);
    *(void *)double v29 = *(void *)v30;
    *((void *)v29 + 1) = v31;
    v29[16] = v30[16];
    *(uint64_t *)((char *)a1 + v28) = *(uint64_t *)((char *)a2 + v28);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ImagePicker(uint64_t a1, int *a2)
{
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  swift_release();
  swift_release();

  uint64_t v6 = a1 + a2[6];
  swift_release();
  swift_release();
  if (*(void *)(v6 + 16) >= 3uLL)
  {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[7])) {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ImagePicker(void *a1, void *a2, int *a3)
{
  sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v31 = a3;
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (void *)((char *)a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  long long v12 = (void *)v10[2];
  v9[2] = v12;
  uint64_t v13 = (void *)((char *)a1 + v8);
  id v14 = (char *)a2 + v8;
  uint64_t v15 = *(void *)((char *)a2 + v8 + 8);
  *uint64_t v13 = *(void *)((char *)a2 + v8);
  v13[1] = v15;
  uint64_t v17 = (void *)((char *)a2 + v8 + 16);
  unint64_t v16 = *v17;
  swift_retain();
  swift_retain();
  id v18 = v12;
  swift_retain();
  swift_retain();
  if (v16 >= 3)
  {
    double v19 = (void *)*((void *)v14 + 3);
    v13[2] = v16;
    v13[3] = v19;
    swift_bridgeObjectRetain();
    id v20 = v19;
  }
  else
  {
    *((_OWORD *)v13 + 1) = *(_OWORD *)v17;
  }
  uint64_t v21 = v31[7];
  id v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  if (*v23)
  {
    uint64_t v24 = v23[1];
    *id v22 = *v23;
    v22[1] = v24;
    swift_retain();
  }
  else
  {
    *(_OWORD *)id v22 = *(_OWORD *)v23;
  }
  uint64_t v25 = v31[8];
  uint64_t v26 = v31[9];
  uint64_t v27 = (char *)a1 + v25;
  uint64_t v28 = (char *)a2 + v25;
  uint64_t v29 = *((void *)v28 + 1);
  *(void *)uint64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = v29;
  v27[16] = v28[16];
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ImagePicker(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000637B8((uint64_t)a1, &qword_1010C8950);
    sub_100063814(&qword_1010C8950);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_retain();
  swift_release();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_retain();
  swift_release();
  uint64_t v10 = (void *)*((void *)v8 + 2);
  uint64_t v11 = (void *)*((void *)v9 + 2);
  *((void *)v8 + 2) = v11;
  id v12 = v11;

  uint64_t v13 = a3[6];
  id v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  swift_retain();
  swift_release();
  v14[1] = v15[1];
  swift_retain();
  swift_release();
  unint64_t v16 = v15[2];
  if (v14[2] < 3uLL)
  {
    if (v16 >= 3)
    {
      void v14[2] = v16;
      uint64_t v17 = (void *)v15[3];
      v14[3] = v17;
      swift_bridgeObjectRetain();
      id v18 = v17;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v16 < 3)
  {
    sub_1000637B8((uint64_t)(v14 + 2), &qword_1010CEFB0);
LABEL_11:
    *((_OWORD *)v14 + 1) = *((_OWORD *)v15 + 1);
    goto LABEL_13;
  }
  void v14[2] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  double v19 = (void *)v14[3];
  id v20 = (void *)v15[3];
  v14[3] = v20;
  id v21 = v20;

LABEL_13:
  uint64_t v22 = a3[7];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)((char *)a1 + v22);
  uint64_t v26 = *(void *)((char *)a2 + v22);
  if (!v25)
  {
    if (v26)
    {
      uint64_t v28 = *((void *)v24 + 1);
      *uint64_t v23 = v26;
      v23[1] = v28;
      swift_retain();
      goto LABEL_20;
    }
LABEL_19:
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    goto LABEL_20;
  }
  if (!v26)
  {
    swift_release();
    goto LABEL_19;
  }
  uint64_t v27 = *((void *)v24 + 1);
  *uint64_t v23 = v26;
  v23[1] = v27;
  swift_retain();
  swift_release();
LABEL_20:
  uint64_t v29 = a3[8];
  double v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  *(void *)((char *)a1 + v29) = *(void *)((char *)a2 + v29);
  swift_retain();
  swift_release();
  *((void *)v30 + 1) = *((void *)v31 + 1);
  swift_retain();
  swift_release();
  v30[16] = v31[16];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for ImagePicker(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100063814(&qword_1010C8950);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((void *)v10 + 2) = *((void *)v11 + 2);
  id v12 = &a1[v9];
  uint64_t v13 = &a2[v9];
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)id v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  uint64_t v15 = a3[7];
  unint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *(void *)v17;
  if (*(void *)v17)
  {
    uint64_t v19 = *((void *)v17 + 1);
    *(void *)unint64_t v16 = v18;
    *((void *)v16 + 1) = v19;
  }
  else
  {
    *(_OWORD *)unint64_t v16 = *(_OWORD *)v17;
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = &a1[v20];
  uint64_t v23 = &a2[v20];
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  v22[16] = v23[16];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  return a1;
}

char *assignWithTake for ImagePicker(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1000637B8((uint64_t)a1, &qword_1010C8950);
    uint64_t v6 = sub_100063814(&qword_1010C8950);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  swift_release();
  *((void *)v9 + 1) = *((void *)v10 + 1);
  swift_release();
  uint64_t v11 = (void *)*((void *)v9 + 2);
  *((void *)v9 + 2) = *((void *)v10 + 2);

  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  long long v14 = &a2[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  swift_release();
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_release();
  unint64_t v15 = *((void *)v14 + 2);
  if (*((void *)v13 + 2) < 3uLL) {
    goto LABEL_8;
  }
  if (v15 < 3)
  {
    sub_1000637B8((uint64_t)(v13 + 16), &qword_1010CEFB0);
LABEL_8:
    *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
    goto LABEL_10;
  }
  *((void *)v13 + 2) = v15;
  swift_bridgeObjectRelease();
  unint64_t v16 = (void *)*((void *)v13 + 3);
  *((void *)v13 + 3) = *((void *)v14 + 3);

LABEL_10:
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *(void *)&a1[v17];
  uint64_t v21 = *(void *)&a2[v17];
  if (!v20)
  {
    if (v21)
    {
      uint64_t v23 = *((void *)v19 + 1);
      *(void *)uint64_t v18 = v21;
      *((void *)v18 + 1) = v23;
      goto LABEL_17;
    }
LABEL_16:
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    goto LABEL_17;
  }
  if (!v21)
  {
    swift_release();
    goto LABEL_16;
  }
  uint64_t v22 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v22;
  swift_release();
LABEL_17:
  uint64_t v24 = a3[8];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];
  swift_release();
  *((void *)v25 + 1) = *((void *)v26 + 1);
  swift_release();
  v25[16] = v26[16];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImagePicker(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BF232C);
}

uint64_t sub_100BF232C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100063814(&qword_1010CD9B0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ImagePicker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BF2408);
}

uint64_t sub_100BF2408(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100063814(&qword_1010CD9B0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void sub_100BF24CC()
{
  sub_100B4D200();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100BF2588()
{
  return type metadata accessor for ImagePicker.Coordinator(0);
}

uint64_t sub_100BF2590()
{
  uint64_t result = type metadata accessor for ImagePicker(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void destroy for ImagePicker.SourceType(void *a1)
{
  if (*a1 >= 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = (void *)a1[1];
  }
}

uint64_t _s11MusicCoreUI11ImagePickerV10SourceTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v3 = *(void **)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
    id v4 = v3;
  }
  return a1;
}

uint64_t assignWithCopy for ImagePicker.SourceType(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = *(void *)a1;
  unint64_t v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      uint64_t v9 = (void *)a2[1];
      *(void *)(a1 + 8) = v9;
      swift_bridgeObjectRetain();
      id v10 = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();

    goto LABEL_7;
  }
  *(void *)a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 8);
  uint64_t v7 = (void *)a2[1];
  *(void *)(a1 + 8) = v7;
  id v8 = v7;

  return a1;
}

uint64_t assignWithTake for ImagePicker.SourceType(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();

LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for ImagePicker.SourceType(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ImagePicker.SourceType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 2;
    }
  }
  return result;
}

void *sub_100BF28B4(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ImagePicker.SourceType()
{
  return &type metadata for ImagePicker.SourceType;
}

ValueMetadata *type metadata accessor for ImagePicker.Coordinator.ImagePickerError()
{
  return &type metadata for ImagePicker.Coordinator.ImagePickerError;
}

uint64_t sub_100BF28F4()
{
  uint64_t v1 = type metadata accessor for PHPickerResult();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  unint64_t v4 = *(void *)(v0 + 40);
  if (v4 >> 60 != 15) {
    sub_10007A5C4(*(void *)(v0 + 32), v4);
  }
  swift_errorRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 72) & ~v3), v1);

  return swift_deallocObject();
}

uint64_t sub_100BF29F8(uint64_t a1)
{
  type metadata accessor for PHPickerResult();
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1000154F4;
  return sub_100BEF300(a1, v4, v5, v6, v7, v8, v9, v10);
}

double InteractionFeedbackLoadingView.init(delay:)(double a1)
{
  return a1;
}

uint64_t InteractionFeedbackLoadingView.body.getter@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  sub_100063814(&qword_1010CFB20);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v9 = static VerticalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  unsigned char v9[16] = 1;
  uint64_t v10 = sub_100063814(&qword_1010CFB28);
  sub_100BF2CA8(a1, a2, &v9[*(int *)(v10 + 44)]);
  uint64_t v11 = swift_allocObject();
  *(double *)(v11 + 16) = a4;
  *(unsigned char *)(v11 + 24) = a1;
  *(void *)(v11 + 32) = a2;
  sub_10006CAB8((uint64_t)v9, a3, &qword_1010CFB20);
  uint64_t v12 = (uint64_t (**)())(a3 + *(int *)(sub_100063814(&qword_1010CFB30) + 36));
  char *v12 = sub_100BF3568;
  v12[1] = (uint64_t (*)())v11;
  v12[2] = 0;
  v12[3] = 0;
  swift_retain();
  return sub_1000637B8((uint64_t)v9, &qword_1010CFB20);
}

uint64_t sub_100BF2CA8@<X0>(char a1@<W0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  uint64_t v4 = type metadata accessor for OpacityTransition();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  __chkstk_darwin();
  uint64_t v52 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v53 = (char *)&v43 - v6;
  uint64_t v7 = type metadata accessor for ControlSize();
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  __chkstk_darwin();
  char v46 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CircularProgressViewStyle();
  uint64_t v45 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100063814(&qword_1010CDF18);
  uint64_t v44 = *(void *)(v12 - 8);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100063814(&qword_1010CFB58);
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin();
  unint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100063814(&qword_1010CFB60);
  __chkstk_darwin();
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100063814(&qword_1010CFB68);
  uint64_t v19 = *(void *)(v58 - 8);
  __chkstk_darwin();
  uint64_t v48 = (uint64_t)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CFB70);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v24 = (char *)&v43 - v23;
  char v59 = a1;
  uint64_t v60 = v56;
  sub_100063814(&qword_1010CC190);
  State.wrappedValue.getter();
  uint64_t v25 = 1;
  if (v61 == 1)
  {
    ProgressView<>.init<>()();
    CircularProgressViewStyle.init()();
    sub_100063858(&qword_1010CDF88, &qword_1010CDF18);
    sub_100BF3AB4(&qword_1010CFB80, (void (*)(uint64_t))&type metadata accessor for CircularProgressViewStyle);
    View.progressViewStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v12);
    uint64_t v27 = v50;
    uint64_t v26 = v51;
    uint64_t v28 = v46;
    (*(void (**)(char *, void, uint64_t))(v50 + 104))(v46, enum case for ControlSize.large(_:), v51);
    uint64_t KeyPath = swift_getKeyPath();
    double v30 = (uint64_t *)&v18[*(int *)(v43 + 36)];
    uint64_t v31 = sub_100063814(&qword_1010CFB88);
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))((char *)v30 + *(int *)(v31 + 28), v28, v26);
    uint64_t *v30 = KeyPath;
    uint64_t v32 = v47;
    uint64_t v33 = v49;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v18, v16, v49);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v33);
    Swift::String v34 = v53;
    OpacityTransition.init()();
    uint64_t v36 = v54;
    uint64_t v35 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v52, v34, v55);
    sub_100BF3AB4(&qword_1010CFB90, (void (*)(uint64_t))&type metadata accessor for OpacityTransition);
    uint64_t v37 = AnyTransition.init<A>(_:)();
    uint64_t v38 = v48;
    sub_10006CAB8((uint64_t)v18, v48, &qword_1010CFB60);
    *(void *)(v38 + *(int *)(v58 + 36)) = v37;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
    sub_1000637B8((uint64_t)v18, &qword_1010CFB60);
    sub_100BF3AFC(v38, (uint64_t)v24);
    uint64_t v25 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v24, v25, 1, v58);
  sub_10006CAB8((uint64_t)v24, (uint64_t)v22, &qword_1010CFB70);
  uint64_t v39 = v57;
  *uint64_t v57 = 0;
  *((unsigned char *)v39 + 8) = 1;
  uint64_t v40 = sub_100063814(&qword_1010CFB78);
  sub_10006CAB8((uint64_t)v22, (uint64_t)v39 + *(int *)(v40 + 48), &qword_1010CFB70);
  uint64_t v41 = (char *)v39 + *(int *)(v40 + 64);
  *(void *)uint64_t v41 = 0;
  v41[8] = 1;
  sub_1000637B8((uint64_t)v24, &qword_1010CFB70);
  return sub_1000637B8((uint64_t)v22, &qword_1010CFB70);
}

uint64_t sub_100BF33EC(char a1, uint64_t a2, double a3)
{
  sub_100063814(&qword_1010CAA90);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = swift_allocObject();
  *(double *)(v9 + 16) = a3;
  *(unsigned char *)(v9 + 24) = a1;
  *(void *)(v9 + 32) = a2;
  swift_retain();
  static Task<>.delayed(by:priority:task:)((uint64_t)v7, (uint64_t)&unk_1010CFB50, v9, (uint64_t)&type metadata for () + 8, a3);
  swift_release();
  swift_release();
  return sub_1000637B8((uint64_t)v7, &qword_1010CAA90);
}

uint64_t sub_100BF3530()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100BF3568()
{
  return sub_100BF33EC(*(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(double *)(v0 + 16));
}

uint64_t sub_100BF3578()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BF3594(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v3 + 32) = a3;
  *(unsigned char *)(v3 + 41) = a2;
  return _swift_task_switch(sub_100BF35B8, 0, 0);
}

uint64_t sub_100BF35B8()
{
  *(unsigned char *)(v0 + 16) = *(unsigned char *)(v0 + 41);
  *(void *)(v0 + 24) = *(void *)(v0 + 32);
  *(unsigned char *)(v0 + 40) = 1;
  sub_100063814(&qword_1010CC190);
  State.wrappedValue.setter();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100BF364C@<X0>(uint64_t a1@<X8>)
{
  sub_100063814(&qword_1010CFB20);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v1;
  char v6 = *((unsigned char *)v1 + 8);
  uint64_t v7 = v1[2];
  *(void *)uint64_t v4 = static VerticalAlignment.center.getter();
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v8 = sub_100063814(&qword_1010CFB28);
  sub_100BF2CA8(v6, v7, &v4[*(int *)(v8 + 44)]);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v5;
  *(unsigned char *)(v9 + 24) = v6;
  *(void *)(v9 + 32) = v7;
  sub_10006CAB8((uint64_t)v4, a1, &qword_1010CFB20);
  uint64_t v10 = (uint64_t (**)())(a1 + *(int *)(sub_100063814(&qword_1010CFB30) + 36));
  *uint64_t v10 = sub_100BF3B6C;
  v10[1] = (uint64_t (*)())v9;
  v10[2] = 0;
  v10[3] = 0;
  swift_retain();
  return sub_1000637B8((uint64_t)v4, &qword_1010CFB20);
}

uint64_t sub_100BF378C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InteractionFeedbackLoadingView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for InteractionFeedbackLoadingView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for InteractionFeedbackLoadingView()
{
  return &type metadata for InteractionFeedbackLoadingView;
}

unint64_t sub_100BF3870()
{
  unint64_t result = qword_1010CFB38;
  if (!qword_1010CFB38)
  {
    sub_10006389C(&qword_1010CFB30);
    sub_100063858(&qword_1010CFB40, &qword_1010CFB20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CFB38);
  }
  return result;
}

uint64_t sub_100BF3910()
{
  char v2 = *(unsigned char *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + 8) = sub_1000154F4;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 41) = v2;
  return _swift_task_switch(sub_100BF35B8, 0, 0);
}

uint64_t sub_100BF39C4()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_100BF39E8(uint64_t a1)
{
  type metadata accessor for ControlSize();
  __n128 v2 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, __n128))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  return EnvironmentValues.controlSize.setter();
}

uint64_t sub_100BF3AB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BF3AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010CFB68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BF3B70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v18[0] = a6;
  v18[1] = a7;
  uint64_t v13 = *(void *)(a3 - 8);
  __chkstk_darwin();
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _LayoutRoot();
  __n128 v16 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v15, v7, a3, v16);
  _LayoutRoot.init(_:)();
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a5;
  v18[7] = v18[0];
  v18[8] = a1;
  v18[9] = a2;
  swift_getWitnessTable();
  return _VariadicView.Tree.init(_:content:)();
}

int *LayoutProviderStack.init(layoutProvider:alignment:spacing:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9, a1, a8);
  uint64_t result = (int *)type metadata accessor for LayoutProviderStack();
  uint64_t v17 = (void *)(a9 + result[13]);
  *uint64_t v17 = a2;
  v17[1] = a3;
  uint64_t v18 = a9 + result[14];
  *(void *)uint64_t v18 = a4;
  *(unsigned char *)(v18 + 8) = a5 & 1;
  uint64_t v19 = (void *)(a9 + result[15]);
  *uint64_t v19 = a6;
  v19[1] = a7;
  return result;
}

uint64_t type metadata accessor for LayoutProviderStack()
{
  return swift_getGenericMetadata();
}

uint64_t LayoutProviderStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v23[1] = a2;
  sub_10006389C(&qword_1010CFB98);
  uint64_t v4 = *(void *)(a1 + 24);
  sub_100BF4164(&qword_1010CFBA0);
  uint64_t v5 = type metadata accessor for _VariadicView.Tree();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = __chkstk_darwin();
  uint64_t v11 = (char *)v23 - v10;
  (*(void (**)(void *__return_ptr, void, void, void, void, void, __n128))(*(void *)(a1 + 32)
                                                                                               + 8))(v24, *(void *)(v2 + *(int *)(a1 + 52)), *(void *)(v2 + *(int *)(a1 + 52) + 8), *(void *)(v2 + *(int *)(a1 + 56)), *(unsigned __int8 *)(v2 + *(int *)(a1 + 56) + 8), *(void *)(a1 + 16), v9);
  sub_100068990(v24, v24[3]);
  __n128 v12 = __chkstk_darwin();
  (*(void (**)(char *, __n128))(v14 + 16))((char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v23[4] = AnyLayout.init<A>(_:)();
  uint64_t v15 = (uint64_t *)(v2 + *(int *)(a1 + 60));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  unint64_t v18 = sub_100BF4110();
  uint64_t v19 = *(void *)(a1 + 40);
  sub_100BF3B70(v16, v17, (uint64_t)&type metadata for AnyLayout, v4, v18, v19, (uint64_t)v8);
  swift_release();
  sub_1000760E4((uint64_t)v24);
  v23[2] = sub_100BF4164(&qword_1010CFBB0);
  v23[3] = v19;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1005CF83C(v8, v5, WitnessTable);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v8, v5);
  sub_1005CF83C(v11, v5, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v21)(v11, v5);
}

unint64_t sub_100BF4110()
{
  unint64_t result = qword_1010CFBA8;
  if (!qword_1010CFBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CFBA8);
  }
  return result;
}

uint64_t sub_100BF4164(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(&qword_1010CFB98);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t AxisStack.init(axis:alignment:spacing:content:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(unsigned char *)a8 = result & 1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(unsigned char *)(a8 + 32) = a5 & 1;
  *(void *)(a8 + 40) = a6;
  *(void *)(a8 + 48) = a7;
  return result;
}

uint64_t AxisStack.body.getter(uint64_t a1)
{
  LOBYTE(v19) = *(unsigned char *)v1;
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  LayoutProviderStack.init(layoutProvider:alignment:spacing:content:)((uint64_t)&v19, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), (uint64_t)&type metadata for Axis, (uint64_t)v13);
  v7[0] = v13[0];
  long long v8 = v14;
  uint64_t v9 = v15;
  char v10 = v16;
  uint64_t v11 = v17;
  uint64_t v12 = v18;
  uint64_t v19 = &type metadata for Axis;
  *(void *)&long long v20 = v2;
  *((void *)&v20 + 1) = &protocol witness table for Axis;
  uint64_t v21 = v3;
  uint64_t v4 = type metadata accessor for LayoutProviderStack();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1005CF83C(v7, v4, WitnessTable);
  swift_retain();
  swift_release();
  v13[0] = (_BYTE)v19;
  long long v14 = v20;
  uint64_t v15 = v21;
  char v16 = v22;
  uint64_t v17 = v23;
  uint64_t v18 = v24;
  sub_1005CF83C(v13, v4, WitnessTable);
  return swift_release();
}

unint64_t Axis.layout(alignment:spacing:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>)
{
  if (a5)
  {
    *(void *)(a6 + 24) = &type metadata for VStackLayout;
    unint64_t result = sub_100BF43A8();
    *(void *)(a6 + 32) = result;
    *(void *)a6 = a1;
  }
  else
  {
    *(void *)(a6 + 24) = &type metadata for HStackLayout;
    unint64_t result = sub_100BF43FC();
    *(void *)(a6 + 32) = result;
    *(void *)a6 = a2;
  }
  *(void *)(a6 + 8) = a3;
  *(unsigned char *)(a6 + 16) = a4 & 1;
  return result;
}

unint64_t sub_100BF43A8()
{
  unint64_t result = qword_1010CFBB8;
  if (!qword_1010CFBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CFBB8);
  }
  return result;
}

unint64_t sub_100BF43FC()
{
  unint64_t result = qword_1010CFBC0[0];
  if (!qword_1010CFBC0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1010CFBC0);
  }
  return result;
}

uint64_t sub_100BF4450()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BF4494()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100BF44D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  if (*v5)
  {
    *(void *)(a5 + 24) = &type metadata for VStackLayout;
    unint64_t result = sub_100BF43A8();
    *(void *)(a5 + 32) = result;
    *(void *)a5 = a1;
  }
  else
  {
    *(void *)(a5 + 24) = &type metadata for HStackLayout;
    unint64_t result = sub_100BF43FC();
    *(void *)(a5 + 32) = result;
    *(void *)a5 = a2;
  }
  *(void *)(a5 + 8) = a3;
  *(unsigned char *)(a5 + 16) = a4 & 1;
  return result;
}

uint64_t sub_100BF4560()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100BF4610(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    char v10 = (_OWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *char v10 = *v11;
    unint64_t v12 = ((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v13 = ((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8;
    char v14 = *(unsigned char *)(v13 + 8);
    *(void *)unint64_t v12 = *(void *)v13;
    *(unsigned char *)(v12 + 8) = v14;
    uint64_t v15 = (void *)(((unint64_t)v10 + 39) & 0xFFFFFFFFFFFFFFF8);
    char v16 = (void *)(((unint64_t)v11 + 39) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
  }
  swift_retain();
  return v4;
}

uint64_t sub_100BF4748(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_release();
}

uint64_t sub_100BF47C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  long long v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = v11;
  unint64_t v12 = (void *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (void *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  return a1;
}

uint64_t sub_100BF4878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  long long v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  unint64_t v12 = (void *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v13 = (void *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100BF4944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  long long v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = v11;
  *(_OWORD *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100BF49F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  long long v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v11 = *(unsigned char *)(v10 + 8);
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = v11;
  *(_OWORD *)(((unint64_t)v7 + 39) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_100BF4ABC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100BF4C18);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_100BF4C2C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v19 = (void *)((((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v20 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                uint64_t v20 = a2 - 1;
              }
              *uint64_t v19 = v20;
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 39) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x100BF4E28);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_100BF4E50()
{
  return swift_release();
}

uint64_t sub_100BF4E58(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  swift_retain();
  return a1;
}

uint64_t sub_100BF4EA8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100BF4F0C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for AxisStack()
{
  return sub_10004CF5C();
}

uint64_t sub_100BF4F78()
{
  return swift_getWitnessTable();
}

uint64_t sub_100BF5038()
{
  return swift_getWitnessTable();
}

uint64_t sub_100BF5098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = __chkstk_darwin(a1);
  unsigned int v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v12 = (void (*)(void))__chkstk_darwin(v9);
  int v14 = (char *)&v17 - v13;
  v12();
  sub_1005CF83C(v11, a4, a6);
  int v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, a4);
  sub_1005CF83C(v14, a4, a6);
  return ((uint64_t (*)(char *, uint64_t))v15)(v14, a4);
}

uint64_t sub_100BF51CC()
{
  return sub_100BF5098(v0[6], v0[7], v0[2], v0[3], v0[4], v0[5]);
}

char *LoadingView.__allocating_init(title:style:usesSubtitleTextColor:)(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  id v9 = objc_allocWithZone(v4);
  return LoadingView.init(title:style:usesSubtitleTextColor:)(a1, a2, a3 & 0xFFFFFFFFFFLL | (((a3 >> 40) & 1) << 40), a4);
}

char *LoadingView.init(title:style:usesSubtitleTextColor:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unsigned int v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v5[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style];
  *(_DWORD *)uint64_t v10 = 0;
  *((_WORD *)v10 + 2) = 256;
  v5[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition] = 1;
  unsigned int v11 = &v5[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  void *v11 = 0;
  v11[1] = 0;
  uint64_t v12 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  id v13 = objc_allocWithZone((Class)UILabel);
  int v14 = v5;
  *(void *)&v5[v12] = [v13 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v15 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  *(void *)&v14[v15] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
  *(void *)&v14[OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar] = 0;
  swift_beginAccess();
  void *v11 = a1;
  v11[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v10[4] = BYTE4(a3);
  *(_DWORD *)uint64_t v10 = a3;
  v10[5] = BYTE5(a3) & 1;

  v33.receiver = v14;
  v33.super_class = ObjectType;
  int v16 = (char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  uint64_t v18 = *(void **)&v16[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator];
  uint64_t v19 = v16;
  [v18 setHidesWhenStopped:1];
  uint64_t v20 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  id v21 = *(id *)&v19[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
  if (a2)
  {
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v22 = 0;
  }
  [v21 setText:v22];

  [*(id *)&v19[v20] setAdjustsFontForContentSizeCategory:1];
  uint64_t v23 = qword_1010C8758;
  id v24 = *(id *)&v19[v20];
  if (v23 != -1) {
    swift_once();
  }
  [v24 setFont:qword_1010CFCC8];

  [*(id *)&v19[v20] setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  [*(id *)&v19[v20] setNumberOfLines:0];
  [*(id *)&v19[v20] setTextAlignment:1];
  if (a4)
  {
    uint64_t v25 = *(void **)&v19[v20];
    uint64_t v26 = self;
    id v27 = v25;
    id v28 = [v26 secondaryLabelColor];
    [v27 setTextColor:v28];
  }
  sub_100BF55B8();
  [v19 addSubview:*(void *)&v19[v20]];
  [v19 addSubview:*(void *)&v16[v17]];
  uint64_t v29 = v19;
  id v30 = sub_100BF572C();
  [v29 addSubview:v30];

  return v29;
}

void sub_100BF55B8()
{
  unint64_t v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style);
  swift_beginAccess();
  if (*((unsigned char *)v1 + 5))
  {
    [*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator) stopAnimating];
    id v2 = sub_100BF572C();
    [v2 setHidden:1];

    [*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label) setHidden:1];
  }
  else if (((*v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32)) & 0x100000000) != 0)
  {
    [*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator) startAnimating];
    id v7 = sub_100BF572C();
    [v7 setHidden:1];

    [*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label) setHidden:0];
  }
  else
  {
    int v3 = *v1;
    [*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator) stopAnimating];
    id v4 = sub_100BF572C();
    [v4 setHidden:0];

    [*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label) setHidden:0];
    id v5 = sub_100BF572C();
    LODWORD(v6) = v3;
    [v5 setProgress:v6];
  }
}

id sub_100BF572C()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIProgressView) initWithProgressViewStyle:1];
    id v5 = [self systemFillColor];
    [v4 setTrackTintColor:v5];

    double v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v7 = v2;
  return v3;
}

unint64_t LoadingView.style.getter()
{
  uint64_t v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style);
  swift_beginAccess();
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32) | ((unint64_t)*((unsigned __int8 *)v1 + 5) << 40);
}

float LoadingView.style.setter(uint64_t a1)
{
  id v3 = (unsigned int *)(v1 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style);
  swift_beginAccess();
  uint64_t v5 = *((unsigned __int8 *)v3 + 4);
  uint64_t v6 = *v3;
  char v7 = *((unsigned char *)v3 + 5);
  *id v3 = a1;
  *((unsigned char *)v3 + 4) = BYTE4(a1);
  *((unsigned char *)v3 + 5) = BYTE5(a1) & 1;
  if ((a1 & 0x10000000000) != 0)
  {
    if (v7) {
      return result;
    }
    goto LABEL_5;
  }
  if (v7) {
    goto LABEL_5;
  }
  uint64_t v8 = v6 | (v5 << 32);
  if ((a1 & 0x100000000) != 0)
  {
    if ((v8 & 0x100000000) != 0) {
      return result;
    }
    goto LABEL_5;
  }
  if ((v8 & 0x100000000) != 0 || (float result = *(float *)&a1, *(float *)&a1 != *(float *)&v8)) {
LABEL_5:
  }
    sub_100BF55B8();
  return result;
}

void (*LoadingView.style.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style;
  v3[3] = v1;
  v3[4] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  char v6 = *(unsigned char *)(v5 + 4);
  char v7 = *(unsigned char *)(v5 + 5);
  *((_DWORD *)v3 + 10) = *(_DWORD *)v5;
  v3 += 5;
  *((unsigned char *)v3 + 4) = v6;
  *((unsigned char *)v3 + 5) = v7;
  return sub_100BF59AC;
}

void sub_100BF59AC(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  uint64_t v3 = *(unsigned int *)(*(void *)a1 + 40);
  uint64_t v4 = (unsigned int *)(*(void *)(*(void *)a1 + 24) + *(void *)(*(void *)a1 + 32));
  uint64_t v5 = *(unsigned __int8 *)(*(void *)a1 + 44);
  uint64_t v6 = v3 | (v5 << 32);
  char v7 = *(unsigned char *)(*(void *)a1 + 45);
  unint64_t v8 = *v4 | ((unint64_t)*((unsigned __int8 *)v4 + 4) << 32);
  char v9 = *((unsigned char *)v4 + 5);
  *uint64_t v4 = v3;
  *((unsigned char *)v4 + 4) = v5;
  *((unsigned char *)v4 + 5) = v7;
  if (a2)
  {
    if ((v7 & 1) == 0)
    {
      if (v9) {
        goto LABEL_14;
      }
      if ((v6 & 0x100000000) != 0)
      {
LABEL_5:
        if ((v8 & 0x100000000) != 0) {
          goto LABEL_15;
        }
LABEL_14:
        sub_100BF55B8();
        goto LABEL_15;
      }
      goto LABEL_12;
    }
  }
  else if ((v7 & 1) == 0)
  {
    if (v9) {
      goto LABEL_14;
    }
    if ((v6 & 0x100000000) != 0) {
      goto LABEL_5;
    }
LABEL_12:
    if ((v8 & 0x100000000) != 0 || *(float *)&v3 != *(float *)&v8) {
      goto LABEL_14;
    }
    goto LABEL_15;
  }
  if ((v9 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_15:

  free(v2);
}

uint64_t LoadingView.titlePosition.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition);
  swift_beginAccess();
  return *v1;
}

id LoadingView.titlePosition.setter(unsigned __int8 a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition];
  id result = (id)swift_beginAccess();
  int v5 = *v3;
  *uint64_t v3 = a1;
  if (v5 != a1) {
    return [v1 setNeedsLayout];
  }
  return result;
}

void (*LoadingView.titlePosition.modify(void *a1))(id **a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition;
  v3[3] = v1;
  v3[4] = v4;
  int v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *v5;
  return sub_100BF5B98;
}

void sub_100BF5B98(id **a1)
{
  uint64_t v1 = *a1;
  int v2 = *((unsigned __int8 *)*a1 + 40);
  id v4 = (*a1)[3];
  uint64_t v3 = (*a1)[4];
  int v5 = v3[(void)v4];
  v3[(void)v4] = v2;
  if (v2 != v5) {
    [v1[3] setNeedsLayout];
  }

  free(v1);
}

id LoadingView.font.getter()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label) font];

  return v1;
}

void LoadingView.font.setter(void *a1)
{
  id v2 = *(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label);
  [v2 setFont:a1];
}

void (*LoadingView.font.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = [*(id *)(v1 + v2) font];
  return sub_100BF5D04;
}

void sub_100BF5D04(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)(a1 + 8) + *(void *)(a1 + 16));
  if (a2)
  {
    [v3 setFont:v2];
    id v4 = v2;
  }
  else
  {
    id v5 = v3;
    [v5 setFont:v2];

    id v4 = v5;
  }
}

uint64_t sub_100BF5D80(uint64_t a1, uint64_t a2)
{
  id v5 = &v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *((void *)v5 + 1);
  if (!v7)
  {
    if (!a2) {
      return result;
    }
    id v10 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    NSString v11 = 0;
    goto LABEL_11;
  }
  uint64_t v8 = *(void *)v5;
  if (!a2
    || (v8 == a1 ? (BOOL v9 = v7 == a2) : (BOOL v9 = 0),
        !v9 && (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0)))
  {
    id v10 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    swift_bridgeObjectRetain();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
LABEL_11:
    [v10 setText:v11];

    return (uint64_t)[v2 setNeedsLayout];
  }
  return result;
}

uint64_t LoadingView.title.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t LoadingView.title.setter(uint64_t a1, uint64_t a2)
{
  id v5 = &v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)v5;
  uint64_t v8 = *((void *)v5 + 1);
  *(void *)id v5 = a1;
  *((void *)v5 + 1) = a2;
  if (a2)
  {
    if (v8)
    {
      BOOL v9 = v7 == a1 && v8 == a2;
      if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return swift_bridgeObjectRelease();
      }
    }
    id v10 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    swift_bridgeObjectRetain();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!v8) {
      return result;
    }
    id v10 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label];
    NSString v11 = 0;
  }
  [v10 setText:v11];

  [v2 setNeedsLayout];
  return swift_bridgeObjectRelease();
}

void (*LoadingView.title.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title;
  v3[5] = v1;
  v3[6] = v4;
  id v5 = (void *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  v3[3] = *v5;
  v3[4] = v6;
  swift_bridgeObjectRetain();
  return sub_100BF608C;
}

void sub_100BF608C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v5 = *(void *)(*(void *)a1 + 40);
  uint64_t v4 = *(void *)(*(void *)a1 + 48);
  uint64_t v6 = *(void *)(*(void *)a1 + 32);
  uint64_t v7 = (uint64_t *)(v5 + v4);
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  uint64_t *v7 = v3;
  v7[1] = v6;
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_100BF5D80(v9, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100BF5D80(v9, v8);
  }
  swift_bridgeObjectRelease();

  free(v2);
}

Swift::Void __swiftcall LoadingView.layoutSubviews()()
{
  v54.receiver = v0;
  v54.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  [v0 effectiveUserInterfaceLayoutDirection];
  id v1 = [v0 traitCollection];
  [v1 displayScale];

  [v0 bounds];
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  [v0 layoutMargins];
  sub_10003B5C8(v3, v5, v7, v9, v10, v11);
  LoadingView.sizeThatFits(_:)(v12, v13);
  uint64_t v15 = v14;
  [v0 bounds];
  uint64_t v48 = v15;
  CGRect.centeringAlong(axes:bounds:scale:)();
  CGFloat x = v55.origin.x;
  CGFloat y = v55.origin.y;
  double width = v55.size.width;
  double height = v55.size.height;
  CGFloat v20 = CGRectGetWidth(v55);
  uint64_t v21 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  CGFloat rect = height;
  [*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label] sizeThatFits:width, height, v48];
  CGFloat v51 = v23;
  CGFloat v52 = v22;
  v56.origin.CGFloat x = 0.0;
  v56.origin.CGFloat y = 0.0;
  v56.size.double height = 0.0;
  v56.size.double width = v20;
  CGFloat v24 = CGRectGetWidth(v56);
  id v25 = sub_100BF572C();
  [v25 intrinsicContentSize];
  CGFloat v27 = v26;

  uint64_t v28 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  [*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator] intrinsicContentSize];
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  v57.origin.CGFloat x = 0.0;
  v57.origin.CGFloat y = 0.0;
  v57.size.double width = v24;
  v57.size.double height = v27;
  double v33 = CGRectGetHeight(v57);
  v58.origin.CGFloat x = 0.0;
  v58.origin.CGFloat y = 0.0;
  v58.size.double width = v30;
  v58.size.double height = v32;
  double v34 = CGRectGetHeight(v58);
  if (v33 > v34) {
    CGFloat v35 = v33;
  }
  else {
    CGFloat v35 = v34;
  }
  uint64_t v36 = &v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition];
  swift_beginAccess();
  if (*v36)
  {
    if (*v36 == 1)
    {
      v59.origin.CGFloat x = x;
      v59.origin.CGFloat y = y;
      v59.size.double width = width;
      v59.size.double height = rect;
      CGRectGetMinX(v59);
      v60.origin.CGFloat x = x;
      v60.origin.CGFloat y = y;
      v60.size.double width = v20;
      v60.size.double height = v35;
      CGRectGetMaxY(v60);
      [*(id *)&v0[v21] _firstBaselineOffsetFromTop];
    }
    else
    {
      [*(id *)&v0[v28] intrinsicContentSize];
      double v38 = v37;
      id v39 = sub_100BF572C();
      [v39 intrinsicContentSize];
      double v41 = v40;

      if (v38 > v41) {
        double v41 = v38;
      }
      v63.origin.CGFloat x = x;
      v63.origin.CGFloat y = y;
      v63.size.double width = v41;
      v63.size.double height = v35;
      CGRectGetMaxX(v63);
      v64.origin.CGFloat x = x;
      v64.origin.CGFloat y = y;
      v64.size.double width = width;
      v64.size.double height = rect;
      CGRectGetMinY(v64);
    }
  }
  else
  {
    v61.origin.CGFloat x = x;
    v61.origin.CGFloat y = y;
    v61.size.double width = width;
    v61.size.double height = rect;
    CGRectGetMinX(v61);
    v62.origin.CGFloat x = x;
    v62.origin.CGFloat y = y;
    v62.size.double height = v51;
    v62.size.double width = v52;
    CGRectGetMaxY(v62);
    [*(id *)&v0[v21] _baselineOffsetFromBottom];
  }
  int v42 = *v36;
  id v43 = sub_100BF572C();
  CGRect.centeringAlong(axes:bounds:scale:)();
  if (v42 == 2)
  {
    [v0 bounds:v35];
    CGRect.applyingLayoutDirection(_:inBounds:)();
    [v43 setFrame:];

    id v45 = *(id *)&v0[v28];
    CGRect.centeringAlong(axes:bounds:scale:)();
    [v0 bounds:v35];
  }
  else
  {
    uint64_t v49 = v44;
    CGRect.centeringAlong(axes:bounds:scale:)();
    [v0 bounds];
    CGRect.applyingLayoutDirection(_:inBounds:)();
    [v43 setFrame:];

    id v45 = *(id *)&v0[v28];
    CGRect.centeringAlong(axes:bounds:scale:)();
    uint64_t v50 = v47;
    CGRect.centeringAlong(axes:bounds:scale:)();
    [v0 bounds];
  }
  CGRect.applyingLayoutDirection(_:inBounds:)();
  [v45 setFrame:];

  id v46 = *(id *)&v0[v21];
  CGRect.centeringAlong(axes:bounds:scale:)();
  [v0 bounds:v51];
  CGRect.applyingLayoutDirection(_:inBounds:)();
  [v46 setFrame:];
}

double LoadingView.sizeThatFits(_:)(double a1, double a2)
{
  uint64_t v3 = v2;
  id v6 = sub_100BF572C();
  [v6 sizeThatFits:0.0, 0.0];
  double v8 = v7;
  double v10 = v9;

  [*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator) sizeThatFits:0.0, 0.0];
  double v13 = v12;
  if (v8 > v11) {
    double v14 = v8;
  }
  else {
    double v14 = v11;
  }
  uint64_t v15 = (unsigned char *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition);
  swift_beginAccess();
  if (v10 > v13) {
    double v16 = v10;
  }
  else {
    double v16 = v13;
  }
  if (*v15 == 2)
  {
    uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
    [*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label) intrinsicContentSize];
    [*(id *)(v3 + v17) intrinsicContentSize];
    return v14 + v18;
  }
  else
  {
    uint64_t v19 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
    [*(id *)(v3 + OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label) sizeThatFits:0.0, 0.0];
    double v21 = v20;
    _s3__C6CGSizeVMa_1(0);
    if (static ApproximatelyEquatable.!=~ infix(_:_:)())
    {
      [*(id *)(v3 + v19) sizeThatFits:a1, a2 - (v16 + 0.0 + 8.0)];
    }
    else if (v21 > v14)
    {
      return v21;
    }
    else
    {
      return v14;
    }
  }
  return a1;
}

double LoadingView.intrinsicContentSize.getter()
{
  return LoadingView.sizeThatFits(_:)(0.0, 0.0);
}

BOOL static LoadingView.Style.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  if (((a1 | a2) & (unint64_t)&_mh_execute_header) != 0) {
    return BYTE4(a1) & BYTE4(a2) & 1;
  }
  else {
    return *(float *)&a1 == *(float *)&a2;
  }
}

uint64_t sub_100BF6A4C(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 4);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 4);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(float *)a1 == *(float *)a2;
  }
  return result;
}

uint64_t sub_100BF6A7C()
{
  sub_100BF6EC8();
  uint64_t result = static UIFont.preferredFont(forTextStyle:weight:)();
  qword_1010CFCC8 = result;
  return result;
}

void LoadingView.init(frame:)()
{
}

unint64_t sub_100BF6B9C()
{
  unint64_t result = qword_1010CFD00;
  if (!qword_1010CFD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CFD00);
  }
  return result;
}

uint64_t type metadata accessor for LoadingView()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for LoadingView.TextPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BF6CE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadingView.TextPosition()
{
  return &type metadata for LoadingView.TextPosition;
}

uint64_t initializeBufferWithCopyOfBuffer for LoadingView.Style(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for LoadingView.Style(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LoadingView.Style(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 5) = v3;
  return result;
}

uint64_t sub_100BF6D78(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100BF6D94(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)unint64_t result = a2 - 1;
    *(unsigned char *)(result + 4) = 1;
  }
  else
  {
    *(unsigned char *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadingView.Style()
{
  return &type metadata for LoadingView.Style;
}

void sub_100BF6DC4()
{
  id v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_style];
  *((_WORD *)v1 + 2) = 256;
  *(_DWORD *)id v1 = 0;
  v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_titlePosition] = 1;
  int v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView_title];
  *int v2 = 0;
  v2[1] = 0;
  uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_label;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI11LoadingView_activityIndicator;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI11LoadingView____lazy_storage___progressBar] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

unint64_t sub_100BF6EC8()
{
  unint64_t result = qword_1010C8930;
  if (!qword_1010C8930)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010C8930);
  }
  return result;
}

uint64_t MarkupView.body.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AttributedString();
  __chkstk_darwin();
  sub_100063814(&qword_1010CFD30);
  swift_allocObject();
  swift_bridgeObjectRetain();
  MarkupRenderer.init(_:)();
  dispatch thunk of MarkupRenderer.attributedString.getter();
  swift_release();
  uint64_t result = Text.init(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100BF6FE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BF7000@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for AttributedString();
  __chkstk_darwin();
  sub_100063814(&qword_1010CFD30);
  swift_allocObject();
  swift_bridgeObjectRetain();
  MarkupRenderer.init(_:)();
  dispatch thunk of MarkupRenderer.attributedString.getter();
  swift_release();
  uint64_t result = Text.init(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

ValueMetadata *type metadata accessor for MarkupView()
{
  return &type metadata for MarkupView;
}

void *sub_100BF70E8()
{
  return &protocol witness table for Text;
}

uint64_t NoticeView.init(notice:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = (int *)type metadata accessor for NoticeView(0);
  uint64_t v5 = a2 + v4[5];
  *(void *)uint64_t v5 = swift_getKeyPath();
  *(void *)(v5 + 8) = 0;
  *(_WORD *)(v5 + 16) = 0;
  unsigned int v6 = (void *)(a2 + v4[6]);
  State.init(wrappedValue:)();
  *unsigned int v6 = v10;
  v6[1] = v11;
  uint64_t v7 = a2 + v4[7];
  GestureState.init(wrappedValue:)();
  *(unsigned char *)uint64_t v7 = v10;
  *(void *)(v7 + 8) = v11;
  *(_OWORD *)(v7 + 16) = v12;
  uint64_t v8 = a2 + v4[8];
  State.init(wrappedValue:)();
  *(unsigned char *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  return sub_100BF92FC(a1, a2, type metadata accessor for Notice);
}

uint64_t type metadata accessor for NoticeView(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010CFEB8);
}

uint64_t EnvironmentValues.noticeDismissal.getter()
{
  sub_100BF7440();
  EnvironmentValues.subscript.getter();
  return v1;
}

double sub_100BF7274@<D0>(uint64_t a1@<X8>)
{
  sub_100BF7440();
  EnvironmentValues.subscript.getter();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

double sub_100BF72CC@<D0>(uint64_t a1@<X8>)
{
  sub_100BF7440();
  EnvironmentValues.subscript.getter();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_100BF7324(uint64_t *a1)
{
  return EnvironmentValues.subscript.setter();
}

uint64_t EnvironmentValues.noticeDismissal.setter()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t property wrapper backing initializer of NoticeView.swapScale()
{
  State.init(wrappedValue:)();
  return v1;
}

uint64_t property wrapper backing initializer of NoticeView.isHighlighted()
{
  GestureState.init(wrappedValue:)();
  return v1;
}

unint64_t sub_100BF7440()
{
  unint64_t result = qword_1010CFD38;
  if (!qword_1010CFD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CFD38);
  }
  return result;
}

uint64_t NoticeView.notice.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100BF903C(v1, a1, type metadata accessor for Notice);
}

uint64_t NoticeView.notice.setter(uint64_t a1)
{
  return sub_100BF74D0(a1, v1);
}

uint64_t sub_100BF74D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Notice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t NoticeView.dismiss.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for NoticeView(0) + 20);
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v1 + 16);
  int v5 = *(unsigned __int8 *)(v1 + 17);
  sub_100BF75DC(*(void *)v1, v3, v4, *(unsigned char *)(v1 + 17));
  uint64_t v6 = sub_100B6EC1C(v2, v3, v4 | (v5 << 8));
  sub_100B82D6C(v2, v3, v4, v5);
  return v6;
}

uint64_t sub_100BF75DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return sub_100B82D78(a1, a2);
  }
  else {
    return swift_retain();
  }
}

uint64_t NoticeView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v146 = a1;
  uint64_t v187 = sub_100063814(&qword_1010CFD40);
  __chkstk_darwin();
  uint64_t v145 = (char *)&v138 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v143 = (char *)&v138 - v4;
  uint64_t v186 = type metadata accessor for DynamicTypeSize();
  uint64_t v185 = *(void **)(v186 - 8);
  __chkstk_darwin();
  uint64_t v184 = (char *)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v183 = (char *)&v138 - v6;
  uint64_t v144 = sub_100063814(&qword_1010CFD48);
  __chkstk_darwin();
  uint64_t v141 = (char *)&v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v142 = (uint64_t)&v138 - v8;
  uint64_t v182 = type metadata accessor for ContentTransition();
  uint64_t v181 = *(void *)(v182 - 8);
  __chkstk_darwin();
  uint64_t v180 = (char *)&v138 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = type metadata accessor for TapGesture();
  uint64_t v177 = *(void *)(v178 - 8);
  __chkstk_darwin();
  uint64_t v174 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_100063814(&qword_1010CFD50);
  uint64_t v175 = *(void *)(v176 - 8);
  __chkstk_darwin();
  char v173 = (char *)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = type metadata accessor for NoticeView(0);
  uint64_t v190 = *(uint64_t (**)(uint64_t))(v195 - 8);
  __chkstk_darwin();
  uint64_t v191 = v12;
  uint64_t v179 = (uint64_t)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = (uint64_t (*)(void))type metadata accessor for LocalCoordinateSpace();
  __chkstk_darwin();
  uint64_t v153 = (char *)&v138 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = type metadata accessor for DragGesture();
  uint64_t v163 = *(void *)(v165 - 8);
  __chkstk_darwin();
  uint64_t v160 = (char *)&v138 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_100063814(&qword_1010CFD58);
  __chkstk_darwin();
  uint64_t v168 = (char *)&v138 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = sub_100063814(&qword_1010CFD60);
  __chkstk_darwin();
  uint64_t v169 = (uint64_t)&v138 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for Material();
  *(void *)&long long v150 = *(void *)(v152 - 8);
  __chkstk_darwin();
  uint64_t v149 = (char *)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CD9B8);
  __chkstk_darwin();
  uint64_t v19 = (uint64_t *)((char *)&v138 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v170 = type metadata accessor for Notice(0);
  __chkstk_darwin();
  double v21 = (char *)&v138 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for NoticeView.Content(0) - 8;
  __chkstk_darwin();
  CGFloat v24 = (char *)&v138 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100063814(&qword_1010CFD68) - 8;
  __chkstk_darwin();
  CGFloat v27 = (char *)&v138 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100063814(&qword_1010CFD70) - 8;
  __chkstk_darwin();
  CGFloat v30 = (char *)&v138 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_100063814(&qword_1010CFD78);
  __chkstk_darwin();
  CGFloat v32 = (char *)&v138 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_100063814(&qword_1010CFD80);
  __chkstk_darwin();
  uint64_t v151 = (uint64_t)&v138 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = sub_100063814(&qword_1010CFD88);
  __chkstk_darwin();
  v193 = (uint64_t (*)(uint64_t))((char *)&v138 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v158 = sub_100063814(&qword_1010CFD90);
  uint64_t v157 = *(void *)(v158 - 8);
  __chkstk_darwin();
  uint64_t v155 = (char *)&v138 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_100063814(&qword_1010CFD98);
  uint64_t v162 = *(void *)(v164 - 8);
  __chkstk_darwin();
  uint64_t v159 = (char *)&v138 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_100063814(&qword_1010CFDA0);
  __chkstk_darwin();
  uint64_t v166 = (char *)&v138 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_100063814(&qword_1010CFDA8);
  __chkstk_darwin();
  uint64_t v167 = (uint64_t)&v138 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = sub_100063814(&qword_1010CFDB0);
  __chkstk_darwin();
  uint64_t v188 = (char *)&v138 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_100063814(&qword_1010CFDB8);
  uint64_t v139 = *(void *)(v140 - 8);
  __chkstk_darwin();
  uint64_t v138 = (char *)&v138 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = v2;
  sub_100BF903C(v2, (uint64_t)v21, type metadata accessor for Notice);
  *uint64_t v19 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_1010CD530);
  swift_storeEnumTagMultiPayload();
  *(void *)&v24[*(int *)(v22 + 40)] = swift_getKeyPath();
  sub_100063814(&qword_1010C8958);
  swift_storeEnumTagMultiPayload();
  uint64_t v171 = v21;
  sub_100BF92FC((uint64_t)v21, (uint64_t)v24, type metadata accessor for Notice);
  *(void *)&long long v203 = 0x4041000000000000;
  sub_100BF8FE8();
  ScaledMetric.init(wrappedValue:)();
  *(void *)&long long v203 = 0x4010000000000000;
  sub_100B45154();
  ScaledMetric.init(wrappedValue:)();
  sub_10003CABC((uint64_t)v19, (uint64_t)&v24[*(int *)(v22 + 36)], &qword_1010CD9B8);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_100BF903C((uint64_t)v24, (uint64_t)v27, type metadata accessor for NoticeView.Content);
  double v41 = &v27[*(int *)(v25 + 44)];
  long long v42 = v208;
  *((_OWORD *)v41 + 4) = v207;
  *((_OWORD *)v41 + 5) = v42;
  *((_OWORD *)v41 + 6) = v209;
  long long v43 = v204;
  *(_OWORD *)double v41 = v203;
  *((_OWORD *)v41 + 1) = v43;
  long long v44 = v206;
  *((_OWORD *)v41 + 2) = v205;
  *((_OWORD *)v41 + 3) = v44;
  sub_100BF9CDC((uint64_t)v24, type metadata accessor for NoticeView.Content);
  id v45 = v149;
  static Material.regular.getter();
  LOBYTE(v25) = static Edge.Set.all.getter();
  id v46 = &v30[*(int *)(v28 + 44)];
  uint64_t v47 = v150;
  uint64_t v48 = v152;
  (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v46, v45, v152);
  v46[*(int *)(sub_100063814(&qword_1010CCFF8) + 36)] = v25;
  sub_10006CAB8((uint64_t)v27, (uint64_t)v30, &qword_1010CFD68);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v48);
  sub_1000637B8((uint64_t)v27, &qword_1010CFD68);
  if (qword_1010C85A0 != -1) {
    swift_once();
  }
  uint64_t v49 = static Corner.extraLarge;
  uint64_t v50 = *(void *)algn_10112CC78;
  char v51 = byte_10112CC80;
  sub_10006CAB8((uint64_t)v30, (uint64_t)v32, &qword_1010CFD70);
  CGFloat v52 = &v32[*(int *)(v147 + 36)];
  *(void *)CGFloat v52 = v49;
  *((void *)v52 + 1) = v50;
  v52[16] = v51;
  sub_1000637B8((uint64_t)v30, &qword_1010CFD70);
  uint64_t v53 = v196 + *(int *)(v195 + 28);
  uint64_t v54 = v196;
  uint64_t v55 = *(void *)(v53 + 8);
  LOBYTE(v200) = *(unsigned char *)v53;
  uint64_t v201 = v55;
  long long v202 = *(_OWORD *)(v53 + 16);
  sub_100063814(&qword_1010CFDC8);
  GestureState.wrappedValue.getter();
  if ((_BYTE)v197) {
    double v56 = 0.4;
  }
  else {
    double v56 = 1.0;
  }
  uint64_t v57 = v151;
  sub_10006CAB8((uint64_t)v32, v151, &qword_1010CFD78);
  *(double *)(v57 + *(int *)(v148 + 36)) = v56;
  sub_1000637B8((uint64_t)v32, &qword_1010CFD78);
  uint64_t v58 = static Animation.easeIn(duration:)();
  uint64_t v59 = *(void *)(v53 + 8);
  LOBYTE(v200) = *(unsigned char *)v53;
  uint64_t v201 = v59;
  long long v202 = *(_OWORD *)(v53 + 16);
  GestureState.wrappedValue.getter();
  char v60 = v197;
  CGRect v61 = v193;
  sub_10006CAB8(v57, (uint64_t)v193, &qword_1010CFD80);
  CGRect v62 = (char *)v61 + *(int *)(v194 + 36);
  *(void *)CGRect v62 = v58;
  v62[8] = v60;
  sub_1000637B8(v57, &qword_1010CFD80);
  static CoordinateSpaceProtocol<>.local.getter();
  CGRect v63 = v160;
  DragGesture.init<A>(minimumDistance:coordinateSpace:)();
  uint64_t v64 = *(void *)(v53 + 8);
  LOBYTE(v197) = *(unsigned char *)v53;
  uint64_t v198 = v64;
  long long v199 = *(_OWORD *)(v53 + 16);
  GestureState.projectedValue.getter();
  char v65 = v200;
  uint64_t v151 = v201;
  long long v150 = v202;
  uint64_t v192 = type metadata accessor for NoticeView;
  uint64_t v66 = v179;
  sub_100BF903C(v54, v179, type metadata accessor for NoticeView);
  uint64_t v67 = *((unsigned __int8 *)v190 + 80);
  uint64_t v68 = (v67 + 16) & ~v67;
  uint64_t v69 = v68 + v191;
  uint64_t v191 = v67 | 7;
  uint64_t v152 = v69;
  uint64_t v70 = swift_allocObject();
  uint64_t v153 = (char *)v68;
  uint64_t v190 = type metadata accessor for NoticeView;
  sub_100BF92FC(v66, v70 + v68, type metadata accessor for NoticeView);
  uint64_t v71 = v163;
  uint64_t v72 = (uint64_t)v168;
  uint64_t v73 = v165;
  (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v168, v63, v165);
  uint64_t v74 = v156;
  uint64_t v75 = v72 + *(int *)(v156 + 44);
  *(unsigned char *)uint64_t v75 = v65;
  *(void *)(v75 + 8) = v151;
  *(_OWORD *)(v75 + 16) = v150;
  uint64_t v76 = (void *)(v72 + *(int *)(v74 + 48));
  *uint64_t v76 = sub_100BF9364;
  v76[1] = v70;
  (*(void (**)(char *, uint64_t))(v71 + 8))(v63, v73);
  uint64_t v77 = v174;
  TapGesture.init(count:)();
  sub_100BF903C(v54, v66, v192);
  uint64_t v78 = swift_allocObject();
  uint64_t v79 = v66;
  sub_100BF92FC(v66, v78 + v68, v190);
  uint64_t v80 = swift_allocObject();
  *(void *)(v80 + 16) = sub_100BF9774;
  *(void *)(v80 + 24) = v78;
  uint64_t v81 = v173;
  uint64_t v82 = v178;
  Gesture.onEnded(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v177 + 8))(v77, v82);
  uint64_t v83 = v169;
  sub_10006CAB8(v72, v169, &qword_1010CFD58);
  uint64_t v84 = v172;
  (*(void (**)(uint64_t, char *, uint64_t))(v175 + 32))(v83 + *(int *)(v172 + 52), v81, v176);
  sub_1000637B8(v72, &qword_1010CFD58);
  static GestureMask.all.getter();
  unint64_t v85 = sub_100BF97C4();
  uint64_t v86 = sub_100063858(&qword_1010CFE00, &qword_1010CFD60);
  uint64_t v87 = v155;
  uint64_t v88 = v194;
  uint64_t v89 = v193;
  View.gesture<A>(_:including:)();
  sub_1000637B8(v83, &qword_1010CFD60);
  sub_1000637B8((uint64_t)v89, &qword_1010CFD88);
  v193 = type metadata accessor for Notice;
  uint64_t v90 = v196;
  uint64_t v91 = (uint64_t)v171;
  sub_100BF903C(v196, (uint64_t)v171, type metadata accessor for Notice);
  sub_100BF903C(v90, v79, v192);
  uint64_t v92 = swift_allocObject();
  sub_100BF92FC(v79, (uint64_t)&v153[v92], v190);
  uint64_t v200 = v88;
  uint64_t v201 = v84;
  *(void *)&long long v202 = v85;
  *((void *)&v202 + 1) = v86;
  swift_getOpaqueTypeConformance2();
  sub_100BF9C94(&qword_1010CFE08, (void (*)(uint64_t))type metadata accessor for Notice);
  uint64_t v93 = v159;
  uint64_t v94 = v158;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_100BF9CDC(v91, type metadata accessor for Notice);
  (*(void (**)(char *, uint64_t))(v157 + 8))(v87, v94);
  uint64_t v95 = v180;
  static ContentTransition.opacity.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v97 = (uint64_t)v166;
  uint64_t v98 = (uint64_t *)&v166[*(int *)(v154 + 36)];
  uint64_t v99 = sub_100063814(&qword_1010CFE10);
  uint64_t v100 = v181;
  uint64_t v101 = v182;
  (*(void (**)(char *, char *, uint64_t))(v181 + 16))((char *)v98 + *(int *)(v99 + 28), v95, v182);
  uint64_t *v98 = KeyPath;
  uint64_t v102 = v162;
  uint64_t v103 = v164;
  (*(void (**)(uint64_t, char *, uint64_t))(v162 + 16))(v97, v93, v164);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v95, v101);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v93, v103);
  uint64_t v104 = (uint64_t *)(v90 + *(int *)(v195 + 24));
  uint64_t v105 = *v104;
  uint64_t v106 = v104[1];
  uint64_t v200 = v105;
  uint64_t v201 = v106;
  sub_100063814(&qword_1010CFE18);
  State.wrappedValue.getter();
  uint64_t v107 = v197;
  static UnitPoint.center.getter();
  uint64_t v109 = v108;
  uint64_t v111 = v110;
  uint64_t v112 = v167;
  sub_10006CAB8(v97, v167, &qword_1010CFDA0);
  uint64_t v113 = (void *)(v112 + *(int *)(v161 + 36));
  void *v113 = v107;
  v113[1] = v107;
  v113[2] = v109;
  v113[3] = v111;
  sub_1000637B8(v97, &qword_1010CFDA0);
  static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
  uint64_t v114 = Animation.delay(_:)();
  swift_release();
  uint64_t v115 = (uint64_t)v188;
  uint64_t v116 = (uint64_t *)&v188[*(int *)(v189 + 36)];
  uint64_t v117 = sub_100063814(&qword_1010CFE20);
  sub_100BF903C(v90, (uint64_t)v116 + *(int *)(v117 + 36), v193);
  *uint64_t v116 = v114;
  sub_10003CABC(v112, v115, &qword_1010CFDA8);
  uint64_t v118 = v185;
  uint64_t v119 = (void (*)(char *, void, uint64_t))v185[13];
  uint64_t v120 = v183;
  uint64_t v121 = v186;
  v119(v183, enum case for DynamicTypeSize.xSmall(_:), v186);
  uint64_t v122 = v184;
  v119(v184, enum case for DynamicTypeSize.accessibility2(_:), v121);
  sub_100BF9C94((unint64_t *)&qword_1010CDF60, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v124 = v120;
    uint64_t v125 = v187;
    uint64_t v126 = v143;
    uint64_t v127 = &v143[*(int *)(v187 + 48)];
    uint64_t v128 = (void (*)(char *, char *, uint64_t))v118[4];
    v128(v143, v124, v121);
    v128(v127, v122, v121);
    uint64_t v129 = v145;
    uint64_t v130 = &v145[*(int *)(v125 + 48)];
    uint64_t v131 = (void (*)(char *, char *, uint64_t))v118[2];
    v131(v145, v126, v121);
    v131(v130, v127, v121);
    uint64_t v132 = (uint64_t)v141;
    v128(v141, v129, v121);
    unint64_t v133 = (void (*)(char *, uint64_t))v118[1];
    v133(v130, v121);
    uint64_t v134 = &v129[*(int *)(v187 + 48)];
    v128(v129, v126, v121);
    v128(v134, v127, v121);
    v128((char *)(v132 + *(int *)(v144 + 36)), v134, v121);
    v133(v129, v121);
    uint64_t v135 = v142;
    sub_10003CABC(v132, v142, &qword_1010CFD48);
    sub_100BFCB14();
    sub_100063858(&qword_1010CFE50, &qword_1010CFD48);
    id v136 = v138;
    uint64_t v137 = (uint64_t)v188;
    View.dynamicTypeSize<A>(_:)();
    sub_1000637B8(v135, &qword_1010CFD48);
    sub_1000637B8(v137, &qword_1010CFDB0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v139 + 32))(v146, v136, v140);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for NoticeView.Content(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010CFF60);
}

unint64_t sub_100BF8FE8()
{
  unint64_t result = qword_1010CFDC0;
  if (!qword_1010CFDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CFDC0);
  }
  return result;
}

uint64_t sub_100BF903C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100BF90A4(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for NoticeView(0);
  __chkstk_darwin();
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin();
  uint64_t v10 = &v21[-v9];
  uint64_t v11 = type metadata accessor for Notice(0);
  int v12 = *(unsigned __int8 *)(a4 + *(int *)(v11 + 40));
  sub_100BF903C(a4, (uint64_t)v10, type metadata accessor for NoticeView);
  if (v12 == 1)
  {
    uint64_t result = sub_100BF9CDC((uint64_t)v10, type metadata accessor for NoticeView);
LABEL_5:
    *a2 = 1;
    return result;
  }
  uint64_t v14 = (uint64_t *)&v10[*(int *)(v11 + 32)];
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  if (*v14)
  {
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = v15;
    sub_10007B674(v16);
    sub_10006ADFC((uint64_t)sub_10013DD14);
    sub_100BF903C((uint64_t)v10, (uint64_t)v8, type metadata accessor for NoticeView);
    uint64_t v18 = &v8[*(int *)(v6 + 32)];
    char v19 = *v18;
    uint64_t v20 = *((void *)v18 + 1);
    v21[8] = v19;
    uint64_t v22 = v20;
    sub_100063814(&qword_1010CC190);
    State.wrappedValue.getter();
    sub_100BF9CDC((uint64_t)v8, type metadata accessor for NoticeView);
    uint64_t result = sub_100BF9CDC((uint64_t)v10, type metadata accessor for NoticeView);
    if (v23) {
      return result;
    }
    goto LABEL_5;
  }
  sub_10007B674(0);
  sub_10006ADFC(0);
  sub_100BF903C((uint64_t)v10, (uint64_t)v8, type metadata accessor for NoticeView);
  sub_100BF9CDC((uint64_t)v8, type metadata accessor for NoticeView);
  return sub_100BF9CDC((uint64_t)v10, type metadata accessor for NoticeView);
}

uint64_t sub_100BF92FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100BF9364(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for NoticeView(0) - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_100BF90A4(a1, a2, a3, v8);
}

uint64_t sub_100BF93EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NoticeView(0);
  sub_100063814(&qword_1010CC190);
  State.wrappedValue.getter();
  if ((v12 & 1) == 0)
  {
    State.wrappedValue.setter();
    uint64_t v3 = *(void (**)(void))(a1 + *(int *)(type metadata accessor for Notice(0) + 32));
    if (v3) {
      v3();
    }
  }
  uint64_t result = type metadata accessor for Notice(0);
  if (*(unsigned char *)(a1 + *(int *)(result + 40)) == 1)
  {
    uint64_t v5 = a1 + *(int *)(v2 + 20);
    uint64_t v6 = *(void *)v5;
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t v8 = *(unsigned __int8 *)(v5 + 16);
    int v9 = *(unsigned __int8 *)(v5 + 17);
    sub_100BF75DC(*(void *)v5, v7, v8, *(unsigned char *)(v5 + 17));
    sub_100B6EC1C(v6, v7, v8 | (v9 << 8));
    uint64_t v11 = v10;
    uint64_t result = sub_100B82D6C(v6, v7, v8, v9);
    if (v11)
    {
      sub_100063814(&qword_1010CF840);
      Binding.wrappedValue.setter();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100BF956C()
{
  uint64_t v1 = type metadata accessor for NoticeView(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for Notice(0);
  uint64_t v4 = v2 + *(int *)(v3 + 20);
  uint64_t v5 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v4, v8);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + *(int *)(v3 + 32))) {
    swift_release();
  }
  sub_100B82D6C(*(void *)(v2 + *(int *)(v1 + 20)), *(void *)(v2 + *(int *)(v1 + 20) + 8), *(unsigned __int8 *)(v2 + *(int *)(v1 + 20) + 16), *(unsigned char *)(v2 + *(int *)(v1 + 20) + 17));
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100BF9774()
{
  return sub_100C00E00(sub_100BF93EC);
}

uint64_t sub_100BF978C()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_100BF97C4()
{
  unint64_t result = qword_1010CFDD0;
  if (!qword_1010CFDD0)
  {
    sub_10006389C(&qword_1010CFD88);
    sub_100BF9864();
    sub_100063858(&qword_1010CD0D8, &qword_1010CD0E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CFDD0);
  }
  return result;
}

unint64_t sub_100BF9864()
{
  unint64_t result = qword_1010CFDD8;
  if (!qword_1010CFDD8)
  {
    sub_10006389C(&qword_1010CFD80);
    sub_100C00C8C(&qword_1010CFDE0, &qword_1010CFD78, (void (*)(void))sub_100BF9918, (void (*)(void))sub_100B3E680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CFDD8);
  }
  return result;
}

unint64_t sub_100BF9918()
{
  unint64_t result = qword_1010CFDE8;
  if (!qword_1010CFDE8)
  {
    sub_10006389C(&qword_1010CFD70);
    sub_100BF99B8();
    sub_100063858(&qword_1010CCFF0, &qword_1010CCFF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CFDE8);
  }
  return result;
}

unint64_t sub_100BF99B8()
{
  unint64_t result = qword_1010CFDF0;
  if (!qword_1010CFDF0)
  {
    sub_10006389C(&qword_1010CFD68);
    sub_100BF9C94(&qword_1010CFDF8, (void (*)(uint64_t))type metadata accessor for NoticeView.Content);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CFDF0);
  }
  return result;
}

void sub_100BF9A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(type metadata accessor for NoticeView(0) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin();
  static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
  uint64_t v10 = a3;
  withAnimation<A>(_:_:)();
  swift_release();
  sub_10007B2BC();
  uint64_t v6 = (void *)static OS_dispatch_queue.main.getter();
  sub_100BF903C(a3, (uint64_t)&v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for NoticeView);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  sub_100BF92FC((uint64_t)&v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v8 + v7, type metadata accessor for NoticeView);
  OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100C00DE8, v8);
  swift_release();
}

void sub_100BF9C14(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for NoticeView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_100BF9A64(a1, a2, v6);
}

uint64_t sub_100BF9C94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BF9CDC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100BF9D3C()
{
  return swift_release();
}

uint64_t sub_100BF9DC4()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100BF9E44@<X0>(uint64_t a1@<X8>)
{
  sub_100063814(&qword_1010CFFB0);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100063814(&qword_1010CFFB8);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DynamicTypeSize();
  __chkstk_darwin();
  int v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Notice(0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100BF903C(v1, (uint64_t)v11, type metadata accessor for Notice);
  type metadata accessor for NoticeView.Content(0);
  sub_100B6E744((uint64_t)v9);
  sub_100C00414((uint64_t)v11, (uint64_t)v9, (double *)&v21);
  if (sub_100BFA09C()) {
    uint64_t v12 = static VerticalAlignment.top.getter();
  }
  else {
    uint64_t v12 = static VerticalAlignment.center.getter();
  }
  uint64_t v13 = v24;
  *(void *)uint64_t v4 = v12;
  *((void *)v4 + 1) = v13;
  v4[16] = 0;
  uint64_t v14 = sub_100063814(&qword_1010CFFC0);
  sub_100BFA2AC(v1, (uint64_t)&v21, (uint64_t)&v4[*(int *)(v14 + 44)]);
  long long v20 = v21;
  uint64_t v15 = v22;
  uint64_t v16 = v23;
  char v17 = static Edge.Set.all.getter();
  sub_10006CAB8((uint64_t)v4, (uint64_t)v7, &qword_1010CFFB0);
  uint64_t v18 = &v7[*(int *)(v5 + 36)];
  char *v18 = v17;
  *(_OWORD *)(v18 + 8) = v20;
  *((void *)v18 + 3) = v15;
  *((void *)v18 + 4) = v16;
  v18[40] = 0;
  sub_1000637B8((uint64_t)v4, &qword_1010CFFB0);
  return sub_10003CABC((uint64_t)v7, a1, &qword_1010CFFB8);
}

BOOL sub_100BFA09C()
{
  uint64_t v1 = v0;
  sub_100063814(&qword_1010CFE58);
  __chkstk_darwin();
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DynamicTypeSize();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NoticeView.Content(0);
  sub_100B6E744((uint64_t)v7);
  char v8 = DynamicTypeSize.isAccessibilitySize.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for Notice(0);
    uint64_t v10 = (void *)(v1 + *(int *)(v9 + 28));
    unint64_t v11 = v10[1];
    if (v11)
    {
      uint64_t v12 = *v10 & 0xFFFFFFFFFFFFLL;
      if ((v11 & 0x2000000000000000) != 0 ? HIBYTE(v11) & 0xF : v12)
      {
        sub_10006CAB8(v1 + *(int *)(v9 + 20), (uint64_t)v3, &qword_1010CFE58);
        uint64_t v14 = type metadata accessor for Notice.Thumbnail(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v3, 1, v14) != 1)
        {
          BOOL v15 = swift_getEnumCaseMultiPayload() == 1;
          sub_100BF9CDC((uint64_t)v3, type metadata accessor for Notice.Thumbnail);
          return v15;
        }
        sub_1000637B8((uint64_t)v3, &qword_1010CFE58);
      }
    }
  }
  return 0;
}

uint64_t sub_100BFA2AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v41 = a1;
  sub_100063814(&qword_1010CFFC8);
  __chkstk_darwin();
  uint64_t v44 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v43 = (uint64_t *)((char *)&v38 - v5);
  sub_100063814(&qword_1010CFFD0);
  __chkstk_darwin();
  unint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100063814(&qword_1010CFFD8) - 8;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100063814(&qword_1010CFFE0) - 8;
  __chkstk_darwin();
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100063814(&qword_1010CFFE8) - 8;
  __chkstk_darwin();
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100063814(&qword_1010CFFF0) - 8;
  __chkstk_darwin();
  uint64_t v42 = (uint64_t)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v38 = (uint64_t)&v38 - v18;
  __chkstk_darwin();
  uint64_t v39 = (uint64_t)&v38 - v19;
  sub_100BFA7A0(a1, (uint64_t)v7);
  static Font.subheadline.getter();
  static Font.Weight.semibold.getter();
  uint64_t v20 = Font.weight(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006CAB8((uint64_t)v7, (uint64_t)v10, &qword_1010CFFD0);
  uint64_t v22 = (uint64_t *)&v10[*(int *)(v8 + 44)];
  *uint64_t v22 = KeyPath;
  v22[1] = v20;
  sub_1000637B8((uint64_t)v7, &qword_1010CFFD0);
  LODWORD(KeyPath) = static HierarchicalShapeStyle.primary.getter();
  sub_10006CAB8((uint64_t)v10, (uint64_t)v13, &qword_1010CFFD8);
  *(_DWORD *)&v13[*(int *)(v11 + 44)] = KeyPath;
  sub_1000637B8((uint64_t)v10, &qword_1010CFFD8);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_10006CAB8((uint64_t)v13, (uint64_t)v16, &qword_1010CFFE0);
  uint64_t v23 = &v16[*(int *)(v14 + 44)];
  long long v24 = v52;
  *((_OWORD *)v23 + 4) = v51;
  *((_OWORD *)v23 + 5) = v24;
  *((_OWORD *)v23 + 6) = v53;
  long long v25 = v48;
  *(_OWORD *)uint64_t v23 = v47;
  *((_OWORD *)v23 + 1) = v25;
  long long v26 = v50;
  *((_OWORD *)v23 + 2) = v49;
  *((_OWORD *)v23 + 3) = v26;
  sub_1000637B8((uint64_t)v13, &qword_1010CFFE0);
  uint64_t v27 = v38;
  sub_10006CAB8((uint64_t)v16, v38, &qword_1010CFFE8);
  uint64_t v28 = v27 + *(int *)(v40 + 44);
  *(void *)uint64_t v28 = 0x3FF0000000000000;
  *(_WORD *)(v28 + 8) = 0;
  sub_1000637B8((uint64_t)v16, &qword_1010CFFE8);
  uint64_t v29 = v39;
  sub_10003CABC(v27, v39, &qword_1010CFFF0);
  uint64_t v30 = static HorizontalAlignment.leading.getter();
  uint64_t v31 = (uint64_t)v43;
  *long long v43 = v30;
  *(void *)(v31 + 8) = 0;
  *(unsigned char *)(v31 + 16) = 1;
  uint64_t v32 = sub_100063814(&qword_1010CFFF8);
  sub_100BFB4CC(v41, v45, (uint64_t *)(v31 + *(int *)(v32 + 44)));
  uint64_t v33 = v42;
  sub_10006CAB8(v29, v42, &qword_1010CFFF0);
  uint64_t v34 = v44;
  sub_10006CAB8(v31, v44, &qword_1010CFFC8);
  uint64_t v35 = v46;
  sub_10006CAB8(v33, v46, &qword_1010CFFF0);
  uint64_t v36 = sub_100063814(&qword_1010D0000);
  sub_10006CAB8(v34, v35 + *(int *)(v36 + 48), &qword_1010CFFC8);
  sub_1000637B8(v31, &qword_1010CFFC8);
  sub_1000637B8(v29, &qword_1010CFFF0);
  sub_1000637B8(v34, &qword_1010CFFC8);
  return sub_1000637B8(v33, &qword_1010CFFF0);
}

uint64_t sub_100BFA7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v82 = (char *)sub_100063814(&qword_1010D0040);
  __chkstk_darwin();
  uint64_t v4 = (char *)v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100063814(&qword_1010D0048);
  __chkstk_darwin();
  uint64_t v6 = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for CircularProgressView.LineStyle();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin();
  char v65 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for CircularProgressView();
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin();
  uint64_t v69 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814(&qword_1010D0050);
  __chkstk_darwin();
  uint64_t v67 = (char *)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v73 = (uint64_t)v59 - v11;
  uint64_t v66 = type metadata accessor for ArtworkImage();
  uint64_t v64 = *(void *)(v66 - 8);
  __chkstk_darwin();
  CGRect v61 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100063814(&qword_1010D0058);
  __chkstk_darwin();
  uint64_t v70 = (char *)v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100063814(&qword_1010D0060);
  __chkstk_darwin();
  uint64_t v68 = (uint64_t)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v75 = (uint64_t)v59 - v15;
  uint64_t v76 = type metadata accessor for Artwork();
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin();
  uint64_t v17 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v79 = (char *)v59 - v18;
  uint64_t v19 = sub_100063814(&qword_1010D0068);
  __chkstk_darwin();
  long long v21 = (char *)v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100063814(&qword_1010D0070);
  __chkstk_darwin();
  uint64_t v78 = (void *)((char *)v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = sub_100063814(&qword_1010D0078);
  __chkstk_darwin();
  uint64_t v80 = (char *)v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CFE58);
  __chkstk_darwin();
  long long v26 = (void *)((char *)v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = type metadata accessor for Notice(0);
  sub_10006CAB8(a1 + *(int *)(v27 + 20), (uint64_t)v26, &qword_1010CFE58);
  uint64_t v28 = type metadata accessor for Notice.Thumbnail(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v26, 1, v28) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_100C00B2C();
    _ConditionalContent<>.init(storage:)();
    sub_10006CAB8((uint64_t)v6, (uint64_t)v21, &qword_1010D0048);
    swift_storeEnumTagMultiPayload();
    sub_100C00BD8();
    sub_100C0097C(&qword_1010D00B0, &qword_1010D0048, (void (*)(void))sub_100C00B2C);
    _ConditionalContent<>.init(storage:)();
    uint64_t v29 = (uint64_t)v6;
    uint64_t v30 = &qword_1010D0048;
    return sub_1000637B8(v29, v30);
  }
  v59[1] = v19;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    *uint64_t v78 = *v26;
    swift_storeEnumTagMultiPayload();
    sub_100C00C8C(&qword_1010D0098, &qword_1010D0060, (void (*)(void))sub_100C00D14, (void (*)(void))sub_100B3E6F4);
    swift_retain();
    uint64_t v51 = (uint64_t)v80;
    _ConditionalContent<>.init(storage:)();
    sub_10006CAB8(v51, (uint64_t)v21, &qword_1010D0078);
    swift_storeEnumTagMultiPayload();
    sub_100C00BD8();
    sub_100C0097C(&qword_1010D00B0, &qword_1010D0048, (void (*)(void))sub_100C00B2C);
    _ConditionalContent<>.init(storage:)();
    sub_1000637B8(v51, &qword_1010D0078);
    return swift_release();
  }
  uint64_t v32 = (uint64_t)v21;
  v59[0] = v23;
  if (EnumCaseMultiPayload != 1)
  {
    static Color.white.getter();
    (*(void (**)(char *, void, uint64_t))(v62 + 104))(v65, enum case for CircularProgressView.LineStyle.round(_:), v63);
    LOBYTE(v85) = 1;
    long long v52 = v69;
    CircularProgressView.init(value:trackColor:lineWidth:lineStyle:)();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v53 = v71;
    uint64_t v54 = (uint64_t)v67;
    uint64_t v55 = v72;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v67, v52, v72);
    double v56 = (_OWORD *)(v54 + *(int *)(v9 + 36));
    long long v57 = v86;
    _OWORD *v56 = v85;
    v56[1] = v57;
    v56[2] = v87;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v55);
    uint64_t v58 = v73;
    sub_10003CABC(v54, v73, &qword_1010D0050);
    sub_10006CAB8(v58, (uint64_t)v4, &qword_1010D0050);
    swift_storeEnumTagMultiPayload();
    sub_100C00B2C();
    _ConditionalContent<>.init(storage:)();
    sub_10006CAB8((uint64_t)v6, v32, &qword_1010D0048);
    swift_storeEnumTagMultiPayload();
    sub_100C00BD8();
    sub_100C0097C(&qword_1010D00B0, &qword_1010D0048, (void (*)(void))sub_100C00B2C);
    _ConditionalContent<>.init(storage:)();
    sub_1000637B8((uint64_t)v6, &qword_1010D0048);
    uint64_t v29 = v58;
    uint64_t v30 = &qword_1010D0050;
    return sub_1000637B8(v29, v30);
  }
  uint64_t v82 = v21;
  uint64_t v33 = v74;
  uint64_t v34 = v79;
  uint64_t v35 = v76;
  (*(void (**)(char *, void *, uint64_t))(v74 + 32))(v79, v26, v76);
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v17, v34, v35);
  type metadata accessor for NoticeView.Content(0);
  sub_100063814(&qword_1010CFF00);
  ScaledMetric.wrappedValue.getter();
  uint64_t v36 = v61;
  ArtworkImage.init(_:height:)();
  sub_100063814(&qword_1010CB240);
  ScaledMetric.wrappedValue.getter();
  uint64_t v37 = v85;
  uint64_t v38 = v64;
  uint64_t v39 = (uint64_t)v70;
  uint64_t v40 = v66;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v70, v36, v66);
  uint64_t v41 = v39 + *(int *)(v60 + 36);
  *(void *)uint64_t v41 = v37;
  *(void *)(v41 + 8) = -1;
  *(unsigned char *)(v41 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v40);
  if (qword_1010C85A8 != -1) {
    swift_once();
  }
  uint64_t v42 = static Border.artwork;
  uint64_t v43 = qword_10112CC90;
  char v44 = byte_10112CC98;
  ScaledMetric.wrappedValue.getter();
  uint64_t v45 = v85;
  uint64_t v46 = v68;
  sub_10006CAB8(v39, v68, &qword_1010D0058);
  uint64_t v47 = v46 + *(int *)(v81 + 36);
  *(void *)uint64_t v47 = v42;
  *(void *)(v47 + 8) = v43;
  *(unsigned char *)(v47 + 16) = v44;
  *(void *)(v47 + 24) = v45;
  *(void *)(v47 + 32) = -1;
  *(unsigned char *)(v47 + 40) = 0;
  swift_retain();
  sub_1000637B8(v39, &qword_1010D0058);
  uint64_t v48 = v75;
  sub_10003CABC(v46, v75, &qword_1010D0060);
  sub_10006CAB8(v48, (uint64_t)v78, &qword_1010D0060);
  swift_storeEnumTagMultiPayload();
  sub_100C00C8C(&qword_1010D0098, &qword_1010D0060, (void (*)(void))sub_100C00D14, (void (*)(void))sub_100B3E6F4);
  uint64_t v49 = (uint64_t)v80;
  _ConditionalContent<>.init(storage:)();
  sub_10006CAB8(v49, (uint64_t)v82, &qword_1010D0078);
  swift_storeEnumTagMultiPayload();
  sub_100C00BD8();
  sub_100C0097C(&qword_1010D00B0, &qword_1010D0048, (void (*)(void))sub_100C00B2C);
  _ConditionalContent<>.init(storage:)();
  sub_1000637B8(v49, &qword_1010D0078);
  sub_1000637B8(v48, &qword_1010D0060);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v79, v35);
}

uint64_t sub_100BFB4CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v52[1] = a2;
  uint64_t v64 = a3;
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v56 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v55 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_1010D0008);
  uint64_t v67 = *(void *)(v6 - 8);
  uint64_t v68 = v6;
  __chkstk_darwin();
  uint64_t v66 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100063814(&qword_1010D0010);
  __chkstk_darwin();
  uint64_t v70 = (uint64_t)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v63 = (char *)v52 - v9;
  __chkstk_darwin();
  uint64_t v69 = (uint64_t)v52 - v10;
  uint64_t v11 = *(int *)(type metadata accessor for Notice(0) + 28);
  uint64_t v71 = a1;
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = v12[1];
  if (v13)
  {
    *(void *)&long long v72 = *v12;
    *((void *)&v72 + 1) = v13;
    sub_10005D27C();
    swift_bridgeObjectRetain();
    uint64_t v14 = Text.init<A>(_:)();
    uint64_t v16 = v15;
    char v18 = v17 & 1;
    static Font.footnote.getter();
    uint64_t v19 = Text.font(_:)();
    uint64_t v21 = v20;
    char v23 = v22;
    uint64_t v54 = v4;
    swift_release();
    sub_1000D1500(v14, v16, v18);
    swift_bridgeObjectRelease();
    LODWORD(v72) = static HierarchicalShapeStyle.secondary.getter();
    uint64_t v62 = Text.foregroundStyle<A>(_:)();
    uint64_t v61 = v24;
    uint64_t v60 = v25;
    uint64_t v59 = v26 & 1;
    sub_1000D1500(v19, v21, v23 & 1);
    uint64_t v4 = v54;
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v57 = 2;
  }
  else
  {
    uint64_t v62 = 0;
    uint64_t v61 = 0;
    uint64_t v59 = 0;
    uint64_t v60 = 0;
    uint64_t KeyPath = 0;
    uint64_t v57 = 0;
  }
  sub_100BFBB44(v71, &v72);
  long long v27 = v72;
  uint64_t v28 = v73;
  uint64_t v54 = v74;
  int v29 = v75;
  int v53 = v76;
  static Font.subheadline.getter();
  uint64_t v30 = v56;
  uint64_t v31 = v55;
  (*(void (**)(char *, void, uint64_t))(v56 + 104))(v55, enum case for Font.Leading.tight(_:), v4);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v4);
  static Font.Weight.semibold.getter();
  uint64_t v32 = Font.weight(_:)();
  swift_release();
  uint64_t v33 = swift_getKeyPath();
  long long v72 = v27;
  uint64_t v56 = v28;
  uint64_t v73 = v28;
  uint64_t v34 = v54;
  uint64_t v74 = v54;
  LODWORD(v55) = v29;
  unsigned __int8 v75 = v29;
  char v35 = v53;
  unsigned __int8 v76 = v53;
  uint64_t v77 = v33;
  uint64_t v78 = v32;
  if (sub_100BFA09C())
  {
    type metadata accessor for NoticeView.Content(0);
    sub_100063814(&qword_1010CFF00);
    ScaledMetric.wrappedValue.getter();
  }
  sub_100063814(&qword_1010D0018);
  sub_100C0083C();
  uint64_t v36 = v66;
  View.bodyHeadOutdent(_:)();
  sub_100C00A64(v27, *((uint64_t *)&v27 + 1), v56, v34, v55, v35);
  swift_release();
  swift_release();
  uint64_t v37 = swift_getKeyPath();
  uint64_t v39 = v67;
  uint64_t v38 = v68;
  uint64_t v40 = (uint64_t)v63;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v63, v36, v68);
  uint64_t v41 = v40 + *(int *)(v65 + 36);
  *(void *)uint64_t v41 = v37;
  *(void *)(v41 + 8) = 4;
  *(unsigned char *)(v41 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v38);
  uint64_t v42 = v69;
  sub_10003CABC(v40, v69, &qword_1010D0010);
  uint64_t v43 = v70;
  sub_10006CAB8(v42, v70, &qword_1010D0010);
  uint64_t v44 = v62;
  uint64_t v45 = v64;
  uint64_t v46 = v61;
  *uint64_t v64 = v62;
  v45[1] = v46;
  char v47 = v59;
  uint64_t v48 = v60;
  v45[2] = v59;
  v45[3] = v48;
  uint64_t v49 = v57;
  v45[4] = KeyPath;
  v45[5] = v49;
  *((unsigned char *)v45 + 48) = 0;
  uint64_t v50 = sub_100063814(&qword_1010D0038);
  sub_10006CAB8(v43, (uint64_t)v45 + *(int *)(v50 + 48), &qword_1010D0010);
  sub_1004E5FA4(v44, v46, v47, v48);
  sub_1000637B8(v42, &qword_1010D0010);
  sub_1000637B8(v43, &qword_1010D0010);
  return sub_1004E5FF4(v44, v46, v47, v48);
}

double sub_100BFBB44@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v131 = a2;
  uint64_t v3 = type metadata accessor for Locale.Language();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v129 = (char *)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LayoutDirection();
  uint64_t v130 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v10 = (char *)&v125 - v9;
  sub_100063814(&qword_1010C9540);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Notice(0);
  if (*(void *)(a1 + *(int *)(v13 + 32)))
  {
    uint64_t v128 = v4;
    uint64_t v126 = v3;
    uint64_t v14 = type metadata accessor for NoticeView.Content(0);
    sub_100B6E744((uint64_t)v12);
    uint64_t v15 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 0, 1, v15);
    uint64_t v16 = (void *)UIContentSizeCategory.init(_:)();
    id v17 = [self traitCollectionWithPreferredContentSizeCategory:v16];

    id v18 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleSubheadline compatibleWithTraitCollection:v17];
    id v19 = [v18 fontDescriptorWithSymbolicTraits:32770];

    uint64_t v20 = self;
    uint64_t v127 = v14;
    if (v19)
    {
      id v21 = [v20 fontWithDescriptor:v19 size:0.0];
    }
    else
    {
      id v21 = [v20 preferredFontForTextStyle:UIFontTextStyleSubheadline compatibleWithTraitCollection:v17];
    }
    id v22 = [self configurationWithFont:v21 scale:1];
    NSString v23 = String._bridgeToObjectiveC()();
    id v24 = [self systemImageNamed:v23 withConfiguration:v22];

    if (v24)
    {
      id v25 = [v24 imageWithRenderingMode:2];

      uint64_t v26 = v128;
      if (v25)
      {
        sub_100B6E47C((uint64_t)v10);
        uint64_t v27 = v130;
        (*(void (**)(char *, void, uint64_t))(v130 + 104))(v8, enum case for LayoutDirection.rightToLeft(_:), v6);
        char v28 = static LayoutDirection.== infix(_:_:)();
        int v29 = *(void (**)(char *, uint64_t))(v27 + 8);
        v29(v8, v6);
        v29(v10, v6);
        id v125 = v25;
        if (v28)
        {
          uint64_t v30 = self;
          uint64_t v31 = (void *)(a1 + *(int *)(v13 + 24));
          NSString v32 = String._bridgeToObjectiveC()();
          uint64_t v33 = [v30 dominantLanguageForString:v32];

          if (v33)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v34 = v129;
            Locale.Language.init(identifier:)();
            uint64_t v35 = Locale.Language.characterDirection.getter();
            (*(void (**)(char *, uint64_t))(v26 + 8))(v34, v126);
            if (v35 == 1)
            {
              id v36 = v25;
              Image.init(uiImage:)();
              uint64_t v37 = Text.init(_:)();
              uint64_t v39 = v38;
              uint64_t v129 = v33;
              char v41 = v40 & 1;
              LODWORD(v135) = static HierarchicalShapeStyle.secondary.getter();
              uint64_t v42 = Text.foregroundStyle<A>(_:)();
              uint64_t v44 = v43;
              char v46 = v45 & 1;
              sub_1000D1500(v37, v39, v41);
              swift_bridgeObjectRelease();
              String.nonBreakingSpace.unsafeMutableAddressor();
              swift_bridgeObjectRetain();
              uint64_t v47 = static Text.+ infix(_:_:)();
              uint64_t v128 = v48;
              char v50 = v49;
              uint64_t v130 = v51;
              swift_bridgeObjectRelease();
              LOBYTE(v37) = v50 & 1;
              sub_1000D1500(v42, v44, v46);
              swift_bridgeObjectRelease();
              uint64_t v52 = v31[1];
              *(void *)&long long v135 = *v31;
              *((void *)&v135 + 1) = v52;
              sub_10005D27C();
              swift_bridgeObjectRetain();
              uint64_t v53 = Text.init<A>(_:)();
              uint64_t v55 = v54;
              LOBYTE(v44) = v56 & 1;
              LODWORD(v135) = static HierarchicalShapeStyle.primary.getter();
              uint64_t v57 = Text.foregroundStyle<A>(_:)();
              uint64_t v59 = v58;
              LODWORD(v127) = v60 & 1;
              sub_1000D1500(v53, v55, v44);
              swift_bridgeObjectRelease();
              uint64_t v61 = v47;
              uint64_t v62 = v128;
              uint64_t v63 = static Text.+ infix(_:_:)();
              uint64_t v65 = v64;
              uint64_t v67 = v66;
              uint64_t v69 = v68 & 1;
              sub_1000D1500(v57, v59, v127);
              swift_bridgeObjectRelease();
              sub_1000D1500(v61, v62, v37);
              swift_bridgeObjectRelease();
              *(void *)&long long v132 = v63;
              *((void *)&v132 + 1) = v65;
              *(void *)&long long v133 = v69;
              *((void *)&v133 + 1) = v67;
              LOBYTE(v134) = 0;
              sub_1001CC8D0(v63, v65, v69);
              swift_bridgeObjectRetain();
              sub_1001CC8D0(v63, v65, v69);
              swift_bridgeObjectRetain();
              _ConditionalContent<>.init(storage:)();

              sub_1000D1500(v63, v65, v69);
              swift_bridgeObjectRelease();
              sub_1000D1500(v63, v65, v69);
              swift_bridgeObjectRelease();
LABEL_15:
              long long v118 = v135;
              char v119 = v136;
              long long v132 = v135;
              long long v133 = v136;
              __int16 v134 = v137;
              sub_100632DD0(v135, *((uint64_t *)&v135 + 1), v136);
              sub_100063814(&qword_1010CE3E0);
              sub_100C009F8();
              _ConditionalContent<>.init(storage:)();

              sub_100632E0C(v118, *((uint64_t *)&v118 + 1), v119);
              goto LABEL_16;
            }
          }
        }
        uint64_t v84 = (void *)(a1 + *(int *)(v13 + 24));
        uint64_t v85 = v84[1];
        *(void *)&long long v135 = *v84;
        *((void *)&v135 + 1) = v85;
        sub_10005D27C();
        swift_bridgeObjectRetain();
        long long v86 = v25;
        uint64_t v87 = Text.init<A>(_:)();
        uint64_t v89 = v88;
        char v91 = v90 & 1;
        LODWORD(v135) = static HierarchicalShapeStyle.primary.getter();
        uint64_t v92 = Text.foregroundStyle<A>(_:)();
        uint64_t v94 = v93;
        char v96 = v95 & 1;
        sub_1000D1500(v87, v89, v91);
        swift_bridgeObjectRelease();
        String.nonBreakingSpace.unsafeMutableAddressor();
        swift_bridgeObjectRetain();
        uint64_t v97 = static Text.+ infix(_:_:)();
        uint64_t v129 = v98;
        LOBYTE(v85) = v99;
        uint64_t v130 = v100;
        swift_bridgeObjectRelease();
        char v101 = v85 & 1;
        sub_1000D1500(v92, v94, v96);
        swift_bridgeObjectRelease();
        id v102 = v86;
        Image.init(uiImage:)();
        uint64_t v103 = Text.init(_:)();
        uint64_t v105 = v104;
        char v107 = v106 & 1;
        LODWORD(v135) = static HierarchicalShapeStyle.secondary.getter();
        uint64_t v108 = Text.foregroundStyle<A>(_:)();
        uint64_t v110 = v109;
        LOBYTE(v89) = v111 & 1;
        sub_1000D1500(v103, v105, v107);
        swift_bridgeObjectRelease();
        uint64_t v112 = (uint64_t)v129;
        uint64_t v128 = static Text.+ infix(_:_:)();
        uint64_t v127 = v113;
        uint64_t v115 = v114;
        uint64_t v117 = v116 & 1;
        sub_1000D1500(v108, v110, v89);
        swift_bridgeObjectRelease();
        sub_1000D1500(v97, v112, v101);
        swift_bridgeObjectRelease();
        *(void *)&long long v132 = v128;
        *((void *)&v132 + 1) = v127;
        *(void *)&long long v133 = v117;
        *((void *)&v133 + 1) = v115;
        LOBYTE(v134) = 1;
        _ConditionalContent<>.init(storage:)();
        goto LABEL_15;
      }
    }
    else
    {
    }
  }
  uint64_t v70 = (void *)(a1 + *(int *)(v13 + 24));
  uint64_t v71 = v70[1];
  *(void *)&long long v135 = *v70;
  *((void *)&v135 + 1) = v71;
  sub_10005D27C();
  swift_bridgeObjectRetain();
  uint64_t v72 = Text.init<A>(_:)();
  uint64_t v74 = v73;
  char v76 = v75 & 1;
  LODWORD(v135) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v77 = Text.foregroundStyle<A>(_:)();
  uint64_t v79 = v78;
  uint64_t v81 = v80;
  uint64_t v83 = v82 & 1;
  sub_1000D1500(v72, v74, v76);
  swift_bridgeObjectRelease();
  *(void *)&long long v132 = v77;
  *((void *)&v132 + 1) = v79;
  *(void *)&long long v133 = v83;
  *((void *)&v133 + 1) = v81;
  __int16 v134 = 256;
  sub_100063814(&qword_1010CE3E0);
  sub_100C009F8();
  _ConditionalContent<>.init(storage:)();
LABEL_16:
  double result = *(double *)&v135;
  long long v121 = v136;
  unsigned __int8 v122 = v137;
  char v123 = v138;
  uint64_t v124 = v131;
  *uint64_t v131 = v135;
  v124[1] = v121;
  *((unsigned char *)v124 + 32) = v122;
  *((unsigned char *)v124 + 33) = v123;
  return result;
}

uint64_t NoticeDismissal.presented.getter()
{
  sub_100063814(&qword_1010CF840);
  Binding.wrappedValue.getter();
  return v1;
}

uint64_t NoticeDismissal.presented.setter()
{
  return Binding.wrappedValue.setter();
}

void (*NoticeDismissal.presented.modify(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t a1)
{
  uint64_t v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[19] = a4;
  *((void *)v8 + 3) = a2;
  *((void *)v8 + 4) = a3;
  *(void *)uint64_t v8 = a2;
  *((void *)v8 + 1) = a3;
  v8[16] = a4;
  swift_retain();
  swift_retain();
  *((void *)v8 + 5) = sub_100063814(&qword_1010CF840);
  Binding.wrappedValue.getter();
  return sub_100BFC82C;
}

void sub_100BFC82C(uint64_t a1)
{
  unsigned __int8 v1 = *(void **)a1;
  char v2 = *(unsigned char *)(*(void *)a1 + 17);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  char v4 = *(unsigned char *)(*(void *)a1 + 19);
  *unsigned __int8 v1 = *(void *)(*(void *)a1 + 24);
  v1[1] = v3;
  *((unsigned char *)v1 + 16) = v4;
  *((unsigned char *)v1 + 18) = v2;
  Binding.wrappedValue.setter();
  swift_release();
  swift_release();

  free(v1);
}

uint64_t NoticeDismissal.$presented.getter()
{
  sub_100063814(&qword_1010CF840);
  Binding.projectedValue.getter();
  return v1;
}

void sub_100BFC8E8(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
}

void (*EnvironmentValues.noticeDismissal.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = (char *)malloc(0x40uLL);
  *a1 = v3;
  *((void *)v3 + 6) = v1;
  *((void *)v3 + 7) = sub_100BF7440();
  EnvironmentValues.subscript.getter();
  char v4 = v3[40];
  *(_OWORD *)uint64_t v3 = *(_OWORD *)(v3 + 24);
  v3[16] = v4;
  return sub_100BFC980;
}

void sub_100BFC980(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = **a1;
  uint64_t v5 = v3[1];
  v3[3] = v4;
  char v6 = *((unsigned char *)v3 + 16);
  v3[4] = v5;
  *((unsigned char *)v3 + 40) = v6;
  if (a2)
  {
    sub_100B82D78(v4, v5);
    EnvironmentValues.subscript.setter();
    sub_100AB7500(*v3, v3[1]);
  }
  else
  {
    EnvironmentValues.subscript.setter();
  }

  free(v3);
}

uint64_t sub_100BFCA24()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_100BFCA48(uint64_t a1)
{
  type metadata accessor for ContentTransition();
  __n128 v2 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, __n128))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  return EnvironmentValues.contentTransition.setter();
}

unint64_t sub_100BFCB14()
{
  unint64_t result = qword_1010CFE28;
  if (!qword_1010CFE28)
  {
    sub_10006389C(&qword_1010CFDB0);
    sub_100BFCBB4();
    sub_100063858(&qword_1010CFE48, &qword_1010CFE20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CFE28);
  }
  return result;
}

unint64_t sub_100BFCBB4()
{
  unint64_t result = qword_1010CFE30;
  if (!qword_1010CFE30)
  {
    sub_10006389C(&qword_1010CFDA8);
    sub_100BFCC30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CFE30);
  }
  return result;
}

unint64_t sub_100BFCC30()
{
  unint64_t result = qword_1010CFE38;
  if (!qword_1010CFE38)
  {
    sub_10006389C(&qword_1010CFDA0);
    sub_10006389C(&qword_1010CFD90);
    type metadata accessor for Notice(255);
    sub_10006389C(&qword_1010CFD88);
    sub_10006389C(&qword_1010CFD60);
    sub_100BF97C4();
    sub_100063858(&qword_1010CFE00, &qword_1010CFD60);
    swift_getOpaqueTypeConformance2();
    sub_100BF9C94(&qword_1010CFE08, (void (*)(uint64_t))type metadata accessor for Notice);
    swift_getOpaqueTypeConformance2();
    sub_100063858(&qword_1010CFE40, &qword_1010CFE10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CFE38);
  }
  return result;
}

uint64_t sub_100BFCDD8()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for NoticeView(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (int *)type metadata accessor for Notice(0);
    uint64_t v9 = v8[5];
    __dst = (void *)((char *)v4 + v9);
    uint64_t v10 = (void *)((char *)a2 + v9);
    uint64_t v11 = type metadata accessor for Notice.Thumbnail(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100063814(&qword_1010CFE58);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v17 = type metadata accessor for Artwork();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v10, v17);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(__dst, v10, *(void *)(v12 + 64));
      }
      else
      {
        void *__dst = *v10;
        swift_retain();
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v18 = v8[6];
    id v19 = (void *)((char *)v4 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *id v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = v8[7];
    NSString v23 = (void *)((char *)v4 + v22);
    id v24 = (void *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    *NSString v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = v8[8];
    uint64_t v27 = (void *)((char *)v4 + v26);
    char v28 = (char *)a2 + v26;
    uint64_t v29 = *(void *)((char *)a2 + v26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29)
    {
      uint64_t v30 = *((void *)v28 + 1);
      *uint64_t v27 = v29;
      v27[1] = v30;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    }
    uint64_t v31 = v8[9];
    NSString v32 = (char *)v4 + v31;
    uint64_t v33 = (char *)a2 + v31;
    *(void *)NSString v32 = *(void *)v33;
    v32[8] = v33[8];
    *((unsigned char *)v4 + v8[10]) = *((unsigned char *)a2 + v8[10]);
    uint64_t v34 = a3[5];
    uint64_t v35 = (char *)v4 + v34;
    id v36 = (char *)a2 + v34;
    uint64_t v37 = *(void *)v36;
    uint64_t v38 = *((void *)v36 + 1);
    char v39 = v36[17];
    unsigned __int8 v40 = v36[16];
    sub_100BF75DC(*(void *)v36, v38, v40, v39);
    *(void *)uint64_t v35 = v37;
    *((void *)v35 + 1) = v38;
    v35[16] = v40;
    v35[17] = v39;
    uint64_t v41 = a3[6];
    uint64_t v42 = a3[7];
    uint64_t v43 = (void *)((char *)v4 + v41);
    uint64_t v44 = (void *)((char *)a2 + v41);
    uint64_t v45 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v45;
    char v46 = (char *)v4 + v42;
    uint64_t v47 = (char *)a2 + v42;
    *char v46 = *v47;
    uint64_t v48 = *((void *)v47 + 3);
    *(_OWORD *)(v46 + 8) = *(_OWORD *)(v47 + 8);
    *((void *)v46 + 3) = v48;
    uint64_t v49 = a3[8];
    char v50 = (char *)v4 + v49;
    uint64_t v51 = (char *)a2 + v49;
    *char v50 = *v51;
    *((void *)v50 + 1) = *((void *)v51 + 1);
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for NoticeView(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for Notice(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v5, v9);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(v4 + 32))) {
    swift_release();
  }
  sub_100B82D6C(*(void *)(a1 + *(int *)(a2 + 20)), *(void *)(a1 + *(int *)(a2 + 20) + 8), *(unsigned __int8 *)(a1 + *(int *)(a2 + 20) + 16), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 17));
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for NoticeView(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Notice(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100063814(&qword_1010CFE58);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for Artwork();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v9, v15);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(void *)(v11 + 64));
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v16 = v6[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = v6[7];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = v6[8];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)((char *)a2 + v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27)
  {
    uint64_t v28 = *((void *)v26 + 1);
    *uint64_t v25 = v27;
    v25[1] = v28;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  }
  uint64_t v29 = v6[9];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  uint64_t v32 = a3[5];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)v34;
  uint64_t v36 = *((void *)v34 + 1);
  char v37 = v34[17];
  unsigned __int8 v38 = v34[16];
  sub_100BF75DC(*(void *)v34, v36, v38, v37);
  *(void *)uint64_t v33 = v35;
  *((void *)v33 + 1) = v36;
  v33[16] = v38;
  v33[17] = v37;
  uint64_t v39 = a3[6];
  uint64_t v40 = a3[7];
  uint64_t v41 = (void *)((char *)a1 + v39);
  uint64_t v42 = (void *)((char *)a2 + v39);
  uint64_t v43 = v42[1];
  *uint64_t v41 = *v42;
  v41[1] = v43;
  uint64_t v44 = (char *)a1 + v40;
  uint64_t v45 = (char *)a2 + v40;
  *uint64_t v44 = *v45;
  uint64_t v46 = *((void *)v45 + 3);
  *(_OWORD *)(v44 + 8) = *(_OWORD *)(v45 + 8);
  *((void *)v44 + 3) = v46;
  uint64_t v47 = a3[8];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  *uint64_t v48 = *v49;
  *((void *)v48 + 1) = *((void *)v49 + 1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for NoticeView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for Notice(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v15 = a3;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v18 = type metadata accessor for Artwork();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v7, v8, v18);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v7, v8, *(void *)(v10 + 64));
      }
      else
      {
        void *v7 = *v8;
        swift_retain();
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_16;
    }
LABEL_8:
    uint64_t v16 = sub_100063814(&qword_1010CFE58);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    uint64_t v15 = a3;
    goto LABEL_16;
  }
  if (v13)
  {
    sub_100BF9CDC((uint64_t)v7, type metadata accessor for Notice.Thumbnail);
    goto LABEL_8;
  }
  uint64_t v15 = a3;
  if (a1 != a2)
  {
    sub_100BF9CDC((uint64_t)v7, type metadata accessor for Notice.Thumbnail);
    int v17 = swift_getEnumCaseMultiPayload();
    if (v17 == 1)
    {
      uint64_t v58 = type metadata accessor for Artwork();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v7, v8, v58);
      swift_storeEnumTagMultiPayload();
    }
    else if (v17)
    {
      memcpy(v7, v8, *(void *)(v10 + 64));
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_16:
  uint64_t v19 = v5[6];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v5[7];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = v5[8];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)((char *)a1 + v25);
  uint64_t v29 = *(void *)((char *)a2 + v25);
  if (!v28)
  {
    if (v29)
    {
      uint64_t v31 = *((void *)v27 + 1);
      *uint64_t v26 = v29;
      v26[1] = v31;
      swift_retain();
      goto LABEL_23;
    }
LABEL_22:
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    goto LABEL_23;
  }
  if (!v29)
  {
    swift_release();
    goto LABEL_22;
  }
  uint64_t v30 = *((void *)v27 + 1);
  *uint64_t v26 = v29;
  v26[1] = v30;
  swift_retain();
  swift_release();
LABEL_23:
  uint64_t v32 = v5[9];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)v34;
  v33[8] = v34[8];
  *(void *)uint64_t v33 = v35;
  *((unsigned char *)a1 + v5[10]) = *((unsigned char *)a2 + v5[10]);
  uint64_t v36 = v15[5];
  char v37 = (char *)a1 + v36;
  unsigned __int8 v38 = (char *)a2 + v36;
  uint64_t v39 = *(void *)v38;
  uint64_t v40 = *((void *)v38 + 1);
  char v41 = v38[17];
  unsigned __int8 v42 = v38[16];
  sub_100BF75DC(*(void *)v38, v40, v42, v41);
  uint64_t v43 = *(void *)v37;
  uint64_t v44 = *((void *)v37 + 1);
  char v45 = v37[17];
  *(void *)char v37 = v39;
  *((void *)v37 + 1) = v40;
  uint64_t v46 = v37[16];
  v37[16] = v42;
  v37[17] = v41;
  sub_100B82D6C(v43, v44, v46, v45);
  uint64_t v47 = v15[6];
  uint64_t v48 = (void *)((char *)a1 + v47);
  uint64_t v49 = (void *)((char *)a2 + v47);
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
  swift_retain();
  swift_release();
  uint64_t v50 = v15[7];
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  *uint64_t v51 = *((unsigned char *)a2 + v50);
  *((void *)v51 + 1) = *(void *)((char *)a2 + v50 + 8);
  swift_retain();
  swift_release();
  uint64_t v53 = *((void *)v52 + 3);
  *((void *)v51 + 2) = *((void *)v52 + 2);
  *((void *)v51 + 3) = v53;
  swift_retain();
  swift_release();
  uint64_t v54 = v15[8];
  uint64_t v55 = (char *)a1 + v54;
  char v56 = (char *)a2 + v54;
  *uint64_t v55 = *v56;
  *((void *)v55 + 1) = *((void *)v56 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for NoticeView(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for Notice(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100063814(&qword_1010CFE58);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for Artwork();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(v11 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  uint64_t v14 = v6[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (uint64_t *)((char *)a2 + v14);
  uint64_t v17 = *v16;
  if (*v16)
  {
    uint64_t v18 = v16[1];
    *uint64_t v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  uint64_t v19 = v6[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  uint64_t v22 = a3[5];
  uint64_t v23 = a3[6];
  uint64_t v24 = (char *)a1 + v22;
  uint64_t v25 = (char *)a2 + v22;
  *((_WORD *)v24 + 8) = *((_WORD *)v25 + 8);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)((char *)a1 + v23) = *(_OWORD *)((char *)a2 + v23);
  uint64_t v26 = a3[7];
  uint64_t v27 = a3[8];
  uint64_t v28 = (_OWORD *)((char *)a1 + v26);
  uint64_t v29 = (_OWORD *)((char *)a2 + v26);
  long long v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  *(_OWORD *)((char *)a1 + v27) = *(_OWORD *)((char *)a2 + v27);
  return a1;
}

void *assignWithTake for NoticeView(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for Notice(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_100BF9CDC((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v17 = type metadata accessor for Artwork();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v8, v9, v17);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v16 = *(void *)(v11 + 64);
LABEL_8:
      memcpy(v8, v9, v16);
      goto LABEL_14;
    }
    sub_100BF9CDC((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
LABEL_7:
    size_t v16 = *(void *)(*(void *)(sub_100063814(&qword_1010CFE58) - 8) + 64);
    goto LABEL_8;
  }
  if (v14) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for Artwork();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(v11 + 64));
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_14:
  uint64_t v18 = v6[6];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v6[7];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = v6[8];
  uint64_t v29 = (void *)((char *)a1 + v28);
  long long v30 = (char *)a2 + v28;
  uint64_t v31 = *(void *)((char *)a1 + v28);
  uint64_t v32 = *(void *)((char *)a2 + v28);
  if (!v31)
  {
    if (v32)
    {
      uint64_t v34 = *((void *)v30 + 1);
      *uint64_t v29 = v32;
      v29[1] = v34;
      goto LABEL_21;
    }
LABEL_20:
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    goto LABEL_21;
  }
  if (!v32)
  {
    swift_release();
    goto LABEL_20;
  }
  uint64_t v33 = *((void *)v30 + 1);
  *uint64_t v29 = v32;
  v29[1] = v33;
  swift_release();
LABEL_21:
  uint64_t v35 = v6[9];
  uint64_t v36 = (char *)a1 + v35;
  char v37 = (char *)a2 + v35;
  *(void *)uint64_t v36 = *(void *)v37;
  v36[8] = v37[8];
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  uint64_t v38 = a3[5];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  char v41 = v40[16];
  char v42 = v40[17];
  uint64_t v43 = *(void *)v39;
  uint64_t v44 = *((void *)v39 + 1);
  char v45 = v39[17];
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  uint64_t v46 = v39[16];
  unsigned char v39[16] = v41;
  v39[17] = v42;
  sub_100B82D6C(v43, v44, v46, v45);
  uint64_t v47 = a3[6];
  uint64_t v48 = (void *)((char *)a1 + v47);
  uint64_t v49 = (void *)((char *)a2 + v47);
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
  swift_release();
  uint64_t v50 = a3[7];
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  *uint64_t v51 = *((unsigned char *)a2 + v50);
  *((void *)v51 + 1) = *(void *)((char *)a2 + v50 + 8);
  swift_release();
  *((_OWORD *)v51 + 1) = *((_OWORD *)v52 + 1);
  swift_release();
  uint64_t v53 = a3[8];
  uint64_t v54 = (char *)a1 + v53;
  uint64_t v55 = (char *)a2 + v53;
  char *v54 = *v55;
  *((void *)v54 + 1) = *((void *)v55 + 1);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticeView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BFE068);
}

uint64_t sub_100BFE068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Notice(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28) + 16);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for NoticeView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BFE140);
}

uint64_t sub_100BFE140(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Notice(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 16) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100BFE200()
{
  uint64_t result = type metadata accessor for Notice(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoticeDismissal()
{
  return &type metadata for NoticeDismissal;
}

uint64_t sub_100BFE2BC()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_100BFE360(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = (int *)type metadata accessor for Notice(0);
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)v4 + v8;
    unint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for Notice.Thumbnail(0);
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100063814(&qword_1010CFE58);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      uint64_t v15 = a3;
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v19 = type metadata accessor for Artwork();
        uint64_t v18 = v9;
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v9, v10, v19);
        swift_storeEnumTagMultiPayload();
        uint64_t v15 = a3;
      }
      else
      {
        uint64_t v18 = v9;
        uint64_t v15 = a3;
        if (EnumCaseMultiPayload)
        {
          memcpy(v18, v10, *(void *)(v12 + 64));
        }
        else
        {
          *(void *)uint64_t v18 = *v10;
          swift_retain();
          swift_storeEnumTagMultiPayload();
        }
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
    }
    uint64_t v20 = v7[6];
    uint64_t v21 = (void *)((char *)v4 + v20);
    uint64_t v22 = (void *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = v7[7];
    uint64_t v25 = (void *)((char *)v4 + v24);
    uint64_t v26 = (void *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = v7[8];
    uint64_t v29 = (void *)((char *)v4 + v28);
    long long v30 = (char *)a2 + v28;
    uint64_t v31 = *(void *)((char *)a2 + v28);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31)
    {
      uint64_t v32 = *((void *)v30 + 1);
      *uint64_t v29 = v31;
      v29[1] = v32;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    }
    uint64_t v33 = v7[9];
    uint64_t v34 = (char *)v4 + v33;
    uint64_t v35 = (char *)a2 + v33;
    *(void *)uint64_t v34 = *(void *)v35;
    v34[8] = v35[8];
    *((unsigned char *)v4 + v7[10]) = *((unsigned char *)a2 + v7[10]);
    uint64_t v36 = v15[5];
    char v37 = (char *)v4 + v36;
    uint64_t v38 = (char *)a2 + v36;
    uint64_t v39 = sub_100063814(&qword_1010CFF00);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = v15[6];
    char v41 = (char *)v4 + v40;
    char v42 = (char *)a2 + v40;
    uint64_t v43 = sub_100063814(&qword_1010CB240);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = v15[7];
    char v45 = (void *)((char *)v4 + v44);
    uint64_t v46 = (void *)((char *)a2 + v44);
    sub_100063814((uint64_t *)&unk_1010CD530);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v47 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    }
    else
    {
      *char v45 = *v46;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v48 = v15[8];
    uint64_t v49 = (void *)((char *)v4 + v48);
    uint64_t v50 = (void *)((char *)a2 + v48);
    sub_100063814(&qword_1010C8958);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v51 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    }
    else
    {
      void *v49 = *v50;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_100BFE7CC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for Notice(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = type metadata accessor for Notice.Thumbnail(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = type metadata accessor for Artwork();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v5, v18);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + *(int *)(v4 + 32))) {
    swift_release();
  }
  uint64_t v7 = a1 + a2[5];
  uint64_t v8 = sub_100063814(&qword_1010CFF00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[6];
  uint64_t v10 = sub_100063814(&qword_1010CB240);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[7];
  sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = a1 + a2[8];
  sub_100063814(&qword_1010C8958);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for LayoutDirection();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
    return v15(v13, v14);
  }
  else
  {
    return swift_release();
  }
}

void *sub_100BFEA80(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Notice(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100063814(&qword_1010CFE58);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    uint64_t v14 = a3;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = type metadata accessor for Artwork();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v8, v9, v16);
      swift_storeEnumTagMultiPayload();
      uint64_t v14 = a3;
    }
    else
    {
      uint64_t v14 = a3;
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(void *)(v11 + 64));
      }
      else
      {
        *uint64_t v8 = *v9;
        swift_retain();
        swift_storeEnumTagMultiPayload();
      }
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v17 = v6[6];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v20 = v19[1];
  void *v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = v6[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = v6[8];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)((char *)a2 + v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28)
  {
    uint64_t v29 = *((void *)v27 + 1);
    *uint64_t v26 = v28;
    v26[1] = v29;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  }
  uint64_t v30 = v6[9];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  uint64_t v33 = v14[5];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = sub_100063814(&qword_1010CFF00);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  uint64_t v37 = v14[6];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = sub_100063814(&qword_1010CB240);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
  uint64_t v41 = v14[7];
  char v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (void *)((char *)a2 + v41);
  sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v44 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
  }
  else
  {
    *char v42 = *v43;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v45 = v14[8];
  uint64_t v46 = (void *)((char *)a1 + v45);
  uint64_t v47 = (void *)((char *)a2 + v45);
  sub_100063814(&qword_1010C8958);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v48 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  }
  else
  {
    *uint64_t v46 = *v47;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100BFEE8C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)type metadata accessor for Notice(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v15 = a3;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v18 = type metadata accessor for Artwork();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v7, v8, v18);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v7, v8, *(void *)(v10 + 64));
      }
      else
      {
        void *v7 = *v8;
        swift_retain();
        swift_storeEnumTagMultiPayload();
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_16;
    }
LABEL_8:
    uint64_t v16 = sub_100063814(&qword_1010CFE58);
    memcpy(v7, v8, *(void *)(*(void *)(v16 - 8) + 64));
    uint64_t v15 = a3;
    goto LABEL_16;
  }
  if (v13)
  {
    sub_100BF9CDC((uint64_t)v7, type metadata accessor for Notice.Thumbnail);
    goto LABEL_8;
  }
  uint64_t v15 = a3;
  if (a1 != a2)
  {
    sub_100BF9CDC((uint64_t)v7, type metadata accessor for Notice.Thumbnail);
    int v17 = swift_getEnumCaseMultiPayload();
    if (v17 == 1)
    {
      uint64_t v53 = type metadata accessor for Artwork();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v7, v8, v53);
      swift_storeEnumTagMultiPayload();
    }
    else if (v17)
    {
      memcpy(v7, v8, *(void *)(v10 + 64));
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_16:
  uint64_t v19 = v5[6];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v5[7];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = v5[8];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)((char *)a1 + v25);
  uint64_t v29 = *(void *)((char *)a2 + v25);
  if (v28)
  {
    if (v29)
    {
      uint64_t v30 = *((void *)v27 + 1);
      *uint64_t v26 = v29;
      v26[1] = v30;
      swift_retain();
      swift_release();
      goto LABEL_23;
    }
    swift_release();
  }
  else if (v29)
  {
    uint64_t v31 = *((void *)v27 + 1);
    *uint64_t v26 = v29;
    v26[1] = v31;
    swift_retain();
    goto LABEL_23;
  }
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
LABEL_23:
  uint64_t v32 = v5[9];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)v34;
  v33[8] = v34[8];
  *(void *)uint64_t v33 = v35;
  *((unsigned char *)a1 + v5[10]) = *((unsigned char *)a2 + v5[10]);
  uint64_t v36 = v15[5];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = sub_100063814(&qword_1010CFF00);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24))(v37, v38, v39);
  uint64_t v40 = v15[6];
  uint64_t v41 = (char *)a1 + v40;
  char v42 = (char *)a2 + v40;
  uint64_t v43 = sub_100063814(&qword_1010CB240);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
  if (a1 != a2)
  {
    uint64_t v44 = v15[7];
    uint64_t v45 = (void *)((char *)a1 + v44);
    uint64_t v46 = (void *)((char *)a2 + v44);
    sub_1000637B8((uint64_t)a1 + v44, (uint64_t *)&unk_1010CD530);
    sub_100063814((uint64_t *)&unk_1010CD530);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v47 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    }
    else
    {
      *uint64_t v45 = *v46;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v48 = v15[8];
    uint64_t v49 = (void *)((char *)a1 + v48);
    uint64_t v50 = (void *)((char *)a2 + v48);
    sub_1000637B8((uint64_t)a1 + v48, &qword_1010C8958);
    sub_100063814(&qword_1010C8958);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v51 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    }
    else
    {
      void *v49 = *v50;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_100BFF424(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for Notice(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100063814(&qword_1010CFE58);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for Artwork();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(v11 + 64));
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  *(_OWORD *)((char *)a1 + v6[7]) = *(_OWORD *)((char *)a2 + v6[7]);
  uint64_t v14 = v6[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (uint64_t *)((char *)a2 + v14);
  uint64_t v17 = *v16;
  if (*v16)
  {
    uint64_t v18 = v16[1];
    *uint64_t v15 = v17;
    v15[1] = v18;
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  uint64_t v19 = v6[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  uint64_t v22 = a3[5];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_100063814(&qword_1010CFF00);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  uint64_t v26 = a3[6];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = sub_100063814(&qword_1010CB240);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  uint64_t v30 = a3[7];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v34 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v32, v34);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  uint64_t v35 = a3[8];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = sub_100063814(&qword_1010C8958);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v39 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v36, v37, v39);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  return a1;
}

void *sub_100BFF7E8(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for Notice(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Notice.Thumbnail(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      uint64_t v15 = a3;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v16 = type metadata accessor for Artwork();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v8, v9, v16);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(void *)(v11 + 64));
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_13;
    }
LABEL_7:
    uint64_t v17 = sub_100063814(&qword_1010CFE58);
    memcpy(v8, v9, *(void *)(*(void *)(v17 - 8) + 64));
    uint64_t v15 = a3;
    goto LABEL_13;
  }
  if (v14)
  {
    sub_100BF9CDC((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
    goto LABEL_7;
  }
  uint64_t v15 = a3;
  if (a1 != a2)
  {
    sub_100BF9CDC((uint64_t)v8, type metadata accessor for Notice.Thumbnail);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for Artwork();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v8, v9, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(v11 + 64));
    }
  }
LABEL_13:
  uint64_t v19 = v6[6];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = v6[7];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = v6[8];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *(void *)((char *)a1 + v29);
  uint64_t v33 = *(void *)((char *)a2 + v29);
  if (v32)
  {
    if (v33)
    {
      uint64_t v34 = *((void *)v31 + 1);
      void *v30 = v33;
      v30[1] = v34;
      swift_release();
      goto LABEL_20;
    }
    swift_release();
  }
  else if (v33)
  {
    uint64_t v35 = *((void *)v31 + 1);
    void *v30 = v33;
    v30[1] = v35;
    goto LABEL_20;
  }
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
LABEL_20:
  uint64_t v36 = v6[9];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = v38[8];
  *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
  uint64_t v39 = v15[5];
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = sub_100063814(&qword_1010CFF00);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
  uint64_t v43 = v15[6];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = sub_100063814(&qword_1010CB240);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  if (a1 != a2)
  {
    uint64_t v47 = v15[7];
    uint64_t v48 = (char *)a1 + v47;
    uint64_t v49 = (char *)a2 + v47;
    sub_1000637B8((uint64_t)a1 + v47, (uint64_t *)&unk_1010CD530);
    uint64_t v50 = sub_100063814((uint64_t *)&unk_1010CD530);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v51 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v48, v49, v51);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    uint64_t v52 = v15[8];
    uint64_t v53 = (char *)a1 + v52;
    uint64_t v54 = (char *)a2 + v52;
    sub_1000637B8((uint64_t)a1 + v52, &qword_1010C8958);
    uint64_t v55 = sub_100063814(&qword_1010C8958);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v56 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v53, v54, v56);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100BFFD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BFFD30);
}

uint64_t sub_100BFFD30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Notice(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100063814(&qword_1010CFF00);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_100063814(&qword_1010CB240);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_9;
  }
  uint64_t v15 = sub_100063814(&qword_1010CD9B8);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_9;
  }
  uint64_t v17 = sub_100063814(&qword_1010CF6A8);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
  uint64_t v19 = v17;
  uint64_t v20 = a1 + a3[8];

  return v18(v20, a2, v19);
}

uint64_t sub_100BFFF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BFFF38);
}

uint64_t sub_100BFFF38(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for Notice(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_10:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_100063814(&qword_1010CFF00);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[5];
LABEL_9:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_10;
  }
  uint64_t v16 = sub_100063814(&qword_1010CB240);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[6];
    goto LABEL_9;
  }
  uint64_t v17 = sub_100063814(&qword_1010CD9B8);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_9;
  }
  uint64_t v19 = sub_100063814(&qword_1010CF6A8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[8];

  return v20(v22, a2, a2, v21);
}

void sub_100C00138()
{
  type metadata accessor for Notice(319);
  if (v0 <= 0x3F)
  {
    sub_100C00334(319, (unint64_t *)&unk_1010CFF70, (void (*)(void))sub_100BF8FE8);
    if (v1 <= 0x3F)
    {
      sub_100C00334(319, (unint64_t *)&qword_1010CB2D0, (void (*)(void))sub_100B45154);
      if (v2 <= 0x3F)
      {
        sub_100C00394(319, &qword_1010CDA38, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
        if (v3 <= 0x3F)
        {
          sub_100C00394(319, (unint64_t *)&qword_1010CD178, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_100C00334(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = type metadata accessor for ScaledMetric();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100C00394(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *_s25NoticeDismissalContextKeyVMa()
{
  return &_s25NoticeDismissalContextKeyVN;
}

uint64_t sub_100C003F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100C00414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010CFE58);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Notice(0);
  sub_10006CAB8(a1 + *(int *)(v12 + 20), (uint64_t)v11, &qword_1010CFE58);
  uint64_t v13 = type metadata accessor for Notice.Thumbnail(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v11, 1, v13) == 1)
  {
    sub_1000637B8((uint64_t)v11, &qword_1010CFE58);
    BOOL v14 = 0;
  }
  else
  {
    BOOL v14 = swift_getEnumCaseMultiPayload() == 1;
    sub_100BF9CDC((uint64_t)v11, type metadata accessor for Notice.Thumbnail);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v15 == enum case for DynamicTypeSize.xSmall(_:) || v15 == enum case for DynamicTypeSize.small(_:))
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
    uint64_t result = sub_100BF9CDC(a1, type metadata accessor for Notice);
    double v18 = 4.0;
    double v19 = 12.0;
    if (v14) {
      double v20 = 12.0;
    }
    else {
      double v20 = 4.0;
    }
    double v21 = 0.0;
    if (v14) {
      double v21 = 6.0;
    }
  }
  else
  {
    if (v15 == enum case for DynamicTypeSize.medium(_:)
      || v15 == enum case for DynamicTypeSize.large(_:)
      || v15 == enum case for DynamicTypeSize.xLarge(_:))
    {
      uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
LABEL_32:
      if (*(void *)(a1 + *(int *)(v12 + 32))) {
        double v19 = 19.0;
      }
      else {
        double v19 = 20.0;
      }
      v24(a2, v6);
      uint64_t result = sub_100BF9CDC(a1, type metadata accessor for Notice);
      double v21 = 10.0;
      if (v14) {
        double v20 = 10.0;
      }
      else {
        double v20 = 12.0;
      }
      double v18 = 4.0;
      if (!v14) {
        double v21 = 4.0;
      }
      goto LABEL_43;
    }
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    if (v15 != enum case for DynamicTypeSize.xxLarge(_:)
      && v15 != enum case for DynamicTypeSize.xxxLarge(_:)
      && v15 != enum case for DynamicTypeSize.accessibility1(_:)
      && v15 != enum case for DynamicTypeSize.accessibility2(_:)
      && v15 != enum case for DynamicTypeSize.accessibility3(_:)
      && v15 != enum case for DynamicTypeSize.accessibility4(_:)
      && v15 != enum case for DynamicTypeSize.accessibility5(_:))
    {
      v24((uint64_t)v9, v6);
      goto LABEL_32;
    }
    v24(a2, v6);
    uint64_t result = sub_100BF9CDC(a1, type metadata accessor for Notice);
    double v21 = 10.0;
    if (!v14) {
      double v21 = 6.0;
    }
    double v19 = 20.0;
    double v20 = 12.0;
    double v18 = 8.0;
  }
LABEL_43:
  *a3 = v18;
  a3[1] = v20;
  a3[2] = v18;
  a3[3] = v19;
  a3[4] = v21;
  return result;
}

unint64_t sub_100C0083C()
{
  unint64_t result = qword_1010D0020;
  if (!qword_1010D0020)
  {
    sub_10006389C(&qword_1010D0018);
    sub_100C008DC();
    sub_100063858((unint64_t *)&unk_1010CE060, &qword_1010CB4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0020);
  }
  return result;
}

unint64_t sub_100C008DC()
{
  unint64_t result = qword_1010D0028;
  if (!qword_1010D0028)
  {
    sub_10006389C(&qword_1010D0030);
    sub_100C0097C((unint64_t *)&qword_1010CE3D0, &qword_1010CE3C0, (void (*)(void))sub_100C009F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0028);
  }
  return result;
}

uint64_t sub_100C0097C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100C009F8()
{
  unint64_t result = qword_1010CE3D8;
  if (!qword_1010CE3D8)
  {
    sub_10006389C(&qword_1010CE3E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010CE3D8);
  }
  return result;
}

uint64_t sub_100C00A64(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6)
  {
    sub_1000D1500(a1, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return sub_100632E0C(a1, a2, a3);
  }
}

uint64_t sub_100C00AC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_100C00AFC()
{
  return EnvironmentValues.lineLimit.setter();
}

unint64_t sub_100C00B2C()
{
  unint64_t result = qword_1010D0080;
  if (!qword_1010D0080)
  {
    sub_10006389C(&qword_1010D0050);
    sub_100BF9C94(&qword_1010D0088, (void (*)(uint64_t))&type metadata accessor for CircularProgressView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0080);
  }
  return result;
}

unint64_t sub_100C00BD8()
{
  unint64_t result = qword_1010D0090;
  if (!qword_1010D0090)
  {
    sub_10006389C(&qword_1010D0078);
    sub_100C00C8C(&qword_1010D0098, &qword_1010D0060, (void (*)(void))sub_100C00D14, (void (*)(void))sub_100B3E6F4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0090);
  }
  return result;
}

uint64_t sub_100C00C8C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100C00D14()
{
  unint64_t result = qword_1010D00A0;
  if (!qword_1010D00A0)
  {
    sub_10006389C(&qword_1010D0058);
    sub_100BF9C94(&qword_1010D00A8, (void (*)(uint64_t))&type metadata accessor for ArtworkImage);
    sub_100B3E680();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D00A0);
  }
  return result;
}

uint64_t sub_100C00DC0()
{
  return sub_100BF9DC4();
}

uint64_t sub_100C00DE8()
{
  return sub_100C00E00((uint64_t (*)(uint64_t))sub_100BF9D3C);
}

uint64_t sub_100C00E00(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for NoticeView(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_100C00E74()
{
  return sub_100BF9DC4();
}

unint64_t sub_100C00E98()
{
  unint64_t result = qword_1010D00B8;
  if (!qword_1010D00B8)
  {
    sub_10006389C(&qword_1010CFFB8);
    sub_100063858(&qword_1010D00C0, &qword_1010CFFB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D00B8);
  }
  return result;
}

id PassthroughView.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  if (UIViewIgnoresTouchEvents()) {
    return 0;
  }
  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for PassthroughView();
  [super hitTest:a1 withEvent:a2];
  if (v7)
  {
    sub_100C0102C();
    id v8 = v3;
    id v9 = v7;
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {

      return 0;
    }
  }
  return v7;
}

uint64_t type metadata accessor for PassthroughView()
{
  return self;
}

unint64_t sub_100C0102C()
{
  unint64_t result = qword_1010CD3B0;
  if (!qword_1010CD3B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010CD3B0);
  }
  return result;
}

id PassthroughView.init(frame:)(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for PassthroughView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id PassthroughView.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PassthroughView();
  [super initWithCoder:a1];

  return v3;
}

id PassthroughView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PassthroughView();
  return [super dealloc];
}

char *SymbolButton.__allocating_init(intent:)(int a1)
{
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  id v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100C013EC(a1, 2, (uint64_t)v3);
  id v4 = objc_allocWithZone((Class)type metadata accessor for SymbolButton(0));
  objc_super v5 = SymbolButton.init(configuration:handler:)((uint64_t)v3, 0, 0);
  uint64_t v6 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  swift_beginAccess();
  uint64_t v7 = *v6;
  *uint64_t v6 = (uint64_t)sub_100C01720;
  v6[1] = 0;
  id v8 = v5;
  sub_10006ADFC(v7);
  if ((_BYTE)a1)
  {
    if (a1 == 1) {
      id v9 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    }
    else {
      id v9 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
    }
  }
  else
  {
    id v9 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v11, v10);

  return v8;
}

uint64_t sub_100C013EC@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v24 = a1;
  int v25 = a2;
  uint64_t v26 = type metadata accessor for UIViewConfigurationState();
  uint64_t v4 = *(void *)(v26 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  id v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = UIFontTextStyleSubheadline;
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 40) = 1;
  *(_OWORD *)(a3 + 48) = xmmword_100E33E40;
  *(void *)(a3 + 64) = 0;
  *(void *)(a3 + 72) = 0;
  *(unsigned char *)(a3 + 80) = -1;
  *(void *)(a3 + 88) = 0;
  *(void *)(a3 + 96) = 0;
  *(void *)(a3 + 104) = 0x3FF0000000000000;
  *(void *)(a3 + 112) = 0;
  *(void *)(a3 + 120) = 0;
  *(void *)(a3 + 128) = 0;
  *(void *)(a3 + 136) = UIFontTextStyleSubheadline;
  *(UIFontWeight *)(a3 + 144) = UIFontWeightSemibold;
  *(void *)(a3 + 152) = 0;
  *(void *)(a3 + 160) = 0;
  *(void *)(a3 + 168) = 0x3FF0000000000000;
  *(void *)(a3 + 176) = 0;
  *(unsigned char *)(a3 + 184) = 0;
  *(_OWORD *)(a3 + 192) = xmmword_100E26B10;
  *(void *)(a3 + 208) = 0;
  *(void *)(a3 + 216) = 0;
  *(void *)(a3 + 224) = 1;
  *(_OWORD *)(a3 + 232) = 0u;
  *(_OWORD *)(a3 + 248) = 0u;
  *(_OWORD *)(a3 + 264) = 0u;
  *(_OWORD *)(a3 + 280) = 0u;
  uint64_t v11 = a3 + *(int *)(v10 + 36);
  uint64_t v12 = type metadata accessor for UIView.Corner();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = a3 + v7[10];
  *(void *)(v13 + 48) = 0;
  *(_OWORD *)(v13 + 16) = 0u;
  *(_OWORD *)(v13 + 32) = 0u;
  *(_OWORD *)uint64_t v13 = 0u;
  BOOL v14 = (void *)(a3 + v7[11]);
  *BOOL v14 = 0;
  v14[1] = 0;
  void v14[2] = 1;
  *(void *)(a3 + v7[12]) = 0x4010000000000000;
  uint64_t v15 = v7[13];
  uint64_t v16 = qword_1010C8818;
  uint64_t v17 = UIFontTextStyleSubheadline;
  if (v16 != -1) {
    swift_once();
  }
  *(_OWORD *)(a3 + v15) = static SymbolButton.Configuration.platterMinimumSize;
  uint64_t v18 = a3 + v7[14];
  *(void *)uint64_t v18 = 0;
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = 1;
  double v19 = (_OWORD *)(a3 + v7[15]);
  long long v20 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *double v19 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  v19[1] = v20;
  uint64_t v21 = a3 + v7[16];
  *(unsigned char *)uint64_t v21 = 1;
  *(void *)(v21 + 8) = 0;
  *(void *)(v21 + 16) = 0;
  *(unsigned char *)(v21 + 24) = 0;
  *(void *)(a3 + v7[17]) = 0x3FF0000000000000;
  *(void *)(a3 + v7[18]) = 0;
  *(unsigned char *)(a3 + v7[19]) = 2;
  SymbolButton.Configuration.init()((uint64_t)v9);
  sub_100C024F0((uint64_t)v9, v24, v25);
  sub_100241704(a3);
  sub_100C06E84((uint64_t)v9, a3);
  id v22 = [self currentTraitCollection];
  UIViewConfigurationState.init(traitCollection:)();
  sub_100C01744((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v26);
}

void sub_100C01720(uint64_t a1)
{
}

void sub_100C01744(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UIViewConfigurationState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)UIViewConfigurationState.traitCollection.getter();
  id v9 = [v8 userInterfaceIdiom];

  if (v9 != (id)6)
  {
    if (*(void *)(v2 + 224) == 1 || (int v10 = *(unsigned __int8 *)(v2 + 248), v10 == 2))
    {
      char v11 = UIViewConfigurationState.isHighlighted.getter();
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
      if (v11)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      else
      {
        char v12 = UIViewConfigurationState.isSelected.getter();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if ((v12 & 1) == 0)
        {

          *(void *)(v2 + 112) = 0;
          *(void *)(v2 + 176) = 0;
          return;
        }
      }
      if (qword_1010C8428 != -1) {
        swift_once();
      }
      uint64_t v13 = static UIColor.MusicTint.pressed;
      BOOL v14 = *(void **)(v2 + 112);
      id v15 = (id)static UIColor.MusicTint.pressed;

      *(void *)(v2 + 112) = v13;
      uint64_t v16 = static UIColor.MusicTint.pressed;
      uint64_t v17 = *(void **)(v2 + 176);
      id v18 = (id)static UIColor.MusicTint.pressed;

      *(void *)(v2 + 176) = v16;
    }
    else
    {
      double v19 = self;
      long long v20 = v19;
      if (v10)
      {
        id v32 = [v19 blackColor];

        *(void *)(v2 + 112) = v32;
        id v33 = [v20 blackColor];

        *(void *)(v2 + 176) = v33;
        [objc_allocWithZone((Class)UIColor) initWithWhite:0.0 alpha:0.05];
        UIView.Border.init(thickness:color:)();
        uint64_t v35 = v34;
        uint64_t v37 = v36;
        uint64_t v39 = v38 & 1;

        *(void *)(v2 + 272) = v35;
        *(void *)(v2 + 280) = v39;
        *(void *)(v2 + 288) = v37;
        LOBYTE(v35) = UIViewConfigurationState.isHighlighted.getter();
        sub_10004DD0C();
        id v40 = UIColor.init(decimalRed:decimalGreen:decimalBlue:alpha:)(19, 19, 20, 1.0);
        if (v35) {
          uint64_t v41 = 0x3FD5C28F5C28F5C3;
        }
        else {
          uint64_t v41 = 0x3FD3333333333333;
        }
        sub_1001773EC(*(void *)(v2 + 192), *(void **)(v2 + 200));
        *(void *)(v2 + 192) = v41;
        *(void *)(v2 + 200) = v40;
      }
      else
      {
        id v21 = [v19 whiteColor];

        *(void *)(v2 + 112) = v21;
        id v22 = [v20 whiteColor];

        *(void *)(v2 + 176) = v22;
        [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.05];
        UIView.Border.init(thickness:color:)();
        uint64_t v24 = v23;
        uint64_t v26 = v25;
        uint64_t v28 = v27 & 1;

        *(void *)(v2 + 272) = v24;
        *(void *)(v2 + 280) = v28;
        *(void *)(v2 + 288) = v26;
        char v29 = UIViewConfigurationState.isHighlighted.getter();
        id v30 = [v20 whiteColor];
        if (v29) {
          uint64_t v31 = 0x3FD0A3D70A3D70A4;
        }
        else {
          uint64_t v31 = 0x3FCC28F5C28F5C29;
        }
        sub_1001773EC(*(void *)(v2 + 192), *(void **)(v2 + 200));
        *(void *)(v2 + 192) = v31;
        *(void *)(v2 + 200) = v30;
      }
      *(void *)(v2 + 208) = 0;
      *(void *)(v2 + 216) = 0;
    }
  }
}

uint64_t SymbolButton.Intent.accessibilityIdentifier.getter(char a1)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v1 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    }
    else {
      uint64_t v1 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
    }
  }
  else
  {
    uint64_t v1 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

void SymbolButton.update(to:)(int a1)
{
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v4 = SymbolButton.materialColor.getter();
  sub_100C013EC(a1, v4, (uint64_t)v3);
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_100241704((uint64_t)v3);
  if ((_BYTE)a1)
  {
    if (a1 == 1) {
      uint64_t v5 = AccessibilityIdentifier.shuffleIntentButton.unsafeMutableAddressor();
    }
    else {
      uint64_t v5 = AccessibilityIdentifier.startSingingIntentButton.unsafeMutableAddressor();
    }
  }
  else
  {
    uint64_t v5 = AccessibilityIdentifier.playIntentButton.unsafeMutableAddressor();
  }
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  type metadata accessor for SymbolButton(0);
  UIAccessibilityIdentification.musicAccessibilityIdentifier.setter(v7, v6);
}

uint64_t SymbolButton.materialColor.getter()
{
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  sub_1002415FC(v3, (uint64_t)v2);
  if (*((void *)v2 + 28) == 1)
  {
    sub_100241704((uint64_t)v2);
    return 2;
  }
  else
  {
    int v5 = v2[248];
    sub_100241704((uint64_t)v2);
    if (v5 == 2) {
      return 2;
    }
    else {
      return (v5 & 1) == 0;
    }
  }
}

void SymbolButton.materialColor.setter(char a1)
{
  sub_100063814(&qword_1010D00F0);
  __chkstk_darwin();
  int v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = __chkstk_darwin().n128_u64[0];
  id v9 = (void **)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v10 = [v1 traitCollection];
  id v11 = [v10 userInterfaceIdiom];

  if (v11 != (id)6)
  {
    if (a1 == 2)
    {
      id v18 = 0;
      double v19 = 0;
      char v12 = 0;
      uint64_t v13 = 0;
      BOOL v14 = 0;
      uint64_t v15 = 1;
    }
    else
    {
      uint64_t v20 = 0;
      id v21 = 0;
      id v22 = 0;
      unsigned __int8 v23 = 2;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      sub_100C023D4((uint64_t)&v20, a1 & 1);
      uint64_t v15 = v20;
      id v18 = v22;
      double v19 = v21;
      char v12 = (void *)v23;
      uint64_t v13 = v24;
      BOOL v14 = v25;
    }
    uint64_t v16 = (uint64_t)v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess();
    sub_1002415FC(v16, (uint64_t)v9);
    sub_1002618F0(v9[28], v9[29], v9[30]);
    uint64_t v17 = v19;
    v9[28] = (void *)v15;
    v9[29] = v17;
    v9[30] = v18;
    v9[31] = v12;
    v9[32] = v13;
    v9[33] = v14;
    SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v9, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
    sub_100241704((uint64_t)v9);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v4, 0, 0, 0, 1);
    sub_1000637B8((uint64_t)v4, &qword_1010D00F0);
  }
}

void (*SymbolButton.materialColor.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = SymbolButton.materialColor.getter();
  return sub_100C0201C;
}

void sub_100C0201C(uint64_t a1)
{
}

uint64_t SymbolButton.Intent.title.getter()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  int v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  double v7 = &v11[-v6];
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v4, v7, v1);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v9 = String.init(localized:table:bundle:locale:comment:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t SymbolButton.Intent.symbolName.getter(char a1)
{
  if (!a1) {
    return 0x6C69662E79616C70;
  }
  if (a1 == 1) {
    return 0x656C6666756873;
  }
  return 0x2E646E612E63696DLL;
}

uint64_t SymbolButton.Intent.symbolBundle.getter(char a1)
{
  if (a1 != 2) {
    return 0;
  }
  if (qword_1010C83F8 != -1) {
    swift_once();
  }
  uint64_t v1 = static NSBundle.musicCoreUIBundle;
  id v2 = (id)static NSBundle.musicCoreUIBundle;
  return v1;
}

unint64_t SymbolButton.Intent.id.getter(char a1)
{
  unint64_t result = 0xD000000000000015;
  if (a1 == 1) {
    return 0xD000000000000018;
  }
  return result;
}

unint64_t sub_100C023A8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SymbolButton.Intent.id.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100C023D4(uint64_t a1, char a2)
{
  *(unsigned char *)(a1 + 24) = !(a2 & 1);
  id v3 = [self effectWithBlurRadius:50.0];

  *(void *)a1 = v3;
  id v4 = [self colorEffectSaturate:1.6];

  *(void *)(a1 + 8) = v4;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = 0xD000000000000011;
  *(void *)(a1 + 40) = 0x8000000100DD6410;
  return result;
}

double sub_100C024F0(uint64_t a1, unsigned __int8 a2, int a3)
{
  HIDWORD(v38) = a3;
  sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin();
  uint64_t v39 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    unsigned __int8 v6 = a2;
    if (a2 == 1)
    {
      uint64_t v7 = 0;
      unint64_t v8 = 0xE700000000000000;
      uint64_t v9 = 0x656C6666756873;
      UIFontTextStyle v10 = UIFontTextStyleSubheadline;
    }
    else
    {
      uint64_t v11 = qword_1010C83F8;
      char v12 = UIFontTextStyleSubheadline;
      if (v11 != -1) {
        swift_once();
      }
      UIFontTextStyle v10 = (UIFontTextStyle)static NSBundle.musicCoreUIBundle;
      unint64_t v8 = 0xED00007372617473;
      uint64_t v9 = 0x2E646E612E63696DLL;
      uint64_t v7 = static NSBundle.musicCoreUIBundle;
    }
  }
  else
  {
    unsigned __int8 v6 = a2;
    uint64_t v7 = a2;
    unint64_t v8 = 0xE90000000000006CLL;
    uint64_t v9 = 0x6C69662E79616C70;
    UIFontTextStyle v10 = UIFontTextStyleSubheadline;
  }
  uint64_t v13 = v10;
  BOOL v14 = *(void **)(a1 + 16);
  uint64_t v15 = *(void **)(a1 + 112);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = UIFontTextStyleSubheadline;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(_OWORD *)(a1 + 48) = xmmword_100E33E40;
  *(_OWORD *)(a1 + 64) = xmmword_100E526C0;
  *(unsigned char *)(a1 + 80) = 1;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0x3FF0000000000000;
  *(void *)(a1 + 112) = 0;
  uint64_t v16 = UIFontTextStyleSubheadline;
  unsigned __int8 v17 = v6;
  uint64_t v18 = SymbolButton.Intent.title.getter();
  uint64_t v20 = v19;
  id v21 = UIFontTextStyleBody;

  id v22 = *(void **)(a1 + 176);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(void *)(a1 + 120) = v18;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(UIFontWeight *)(a1 + 144) = UIFontWeightSemibold;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0x3FF0000000000000;
  *(void *)(a1 + 176) = 0;
  *(unsigned char *)(a1 + 184) = 0;
  id v23 = [self currentTraitCollection];
  id v24 = [v23 userInterfaceIdiom];

  if (v24 != (id)6)
  {
    if (BYTE4(v38) == 2)
    {
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v29 = 0;
      uint64_t v30 = 1;
    }
    else
    {
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      unsigned __int8 v43 = 2;
      uint64_t v44 = 0;
      uint64_t v45 = 0;
      sub_100C023D4((uint64_t)&v40, BYTE4(v38) & 1);
      uint64_t v30 = v40;
      uint64_t v25 = v41;
      uint64_t v26 = v42;
      uint64_t v27 = v43;
      uint64_t v28 = v44;
      uint64_t v29 = v45;
    }
    sub_1002618F0(*(void **)(a1 + 224), *(void **)(a1 + 232), *(void **)(a1 + 240));
    *(void *)(a1 + 224) = v30;
    *(void *)(a1 + 232) = v25;
    *(void *)(a1 + 240) = v26;
    *(void *)(a1 + 248) = v27;
    *(void *)(a1 + 256) = v28;
    *(void *)(a1 + 264) = v29;
  }
  if (qword_1010C8858 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for UIView.Corner();
  uint64_t v32 = sub_100050A90(v31, (uint64_t)static UIView.Corner.roundedRect);
  uint64_t v33 = *(void *)(v31 - 8);
  uint64_t v34 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v39, v32, v31);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v31);
  uint64_t v35 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  sub_100AE596C(v34, a1 + v35[9]);
  *(void *)(a1 + v35[12]) = qword_100E5C6B0[(char)v17];
  *(int64x2_t *)(a1 + v35[13]) = vdupq_n_s64(0x4048000000000000uLL);
  uint64_t v36 = (_OWORD *)(a1 + v35[15]);
  double result = 0.0;
  _OWORD *v36 = xmmword_100E526D0;
  v36[1] = xmmword_100E526D0;
  return result;
}

Swift::Int static PlayIntentButtonStack.playShuffle(_:)(uint64_t a1, uint64_t a2)
{
  return sub_100C0293C(a1, a2, (uint64_t)&off_101008A28);
}

Swift::Int static PlayIntentButtonStack.sing(_:)(uint64_t a1, uint64_t a2)
{
  return sub_100C0293C(a1, a2, (uint64_t)&off_101008A50);
}

Swift::Int sub_100C0293C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Swift::Int v3 = sub_100AEDA90(a3);
  swift_retain();
  return v3;
}

Swift::Int PlayIntentButtonStack.init(_:handler:)(char a1)
{
  sub_100063814(&qword_1010C94B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100E251D0;
  *(unsigned char *)(inited + 32) = a1;
  Swift::Int v3 = sub_100AEDA90(inited);
  swift_setDeallocating();
  return v3;
}

uint64_t PlayIntentButtonStack.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_100063814(&qword_1010D00F8);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v10 = static Axis.Set.horizontal.getter();
  char v11 = Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v10) {
    char v11 = Axis.Set.init(rawValue:)();
  }
  *uint64_t v9 = v11;
  uint64_t v12 = sub_100063814(&qword_1010D0100);
  sub_100C02B08(a1, a2, a3, &v9[*(int *)(v12 + 44)]);
  return sub_10003CABC((uint64_t)v9, a4, &qword_1010D00F8);
}

uint64_t sub_100C02B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8 = sub_100063814(&qword_1010D0190);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin();
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v22 - v12;
  __chkstk_darwin();
  uint64_t v15 = (char *)&v22 - v14;
  __chkstk_darwin();
  unsigned __int8 v17 = (char *)&v22 - v16;
  sub_100C02D30(0, a1, a2, a3, (uint64_t)&v22 - v16);
  sub_100C02D30(1, a1, a2, a3, (uint64_t)v15);
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v18(v13, v17, v8);
  v18(v11, v15, v8);
  v18(a4, v13, v8);
  uint64_t v19 = sub_100063814(&qword_1010D0198);
  v18(&a4[*(int *)(v19 + 48)], v11, v8);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v15, v8);
  v20(v17, v8);
  v20(v11, v8);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v8);
}

uint64_t sub_100C02D30@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v56 = a5;
  uint64_t v62 = sub_100063814(&qword_1010CFD40);
  __chkstk_darwin();
  uint64_t v55 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v52 = (char *)&v51 - v10;
  uint64_t v57 = type metadata accessor for DynamicTypeSize();
  uint64_t v61 = *(void **)(v57 - 8);
  __chkstk_darwin();
  char v60 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v59 = (char *)&v51 - v12;
  uint64_t v54 = sub_100063814(&qword_1010CFD48);
  __chkstk_darwin();
  uint64_t v51 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v53 = (uint64_t)&v51 - v14;
  uint64_t v58 = sub_100063814(&qword_1010D01A0);
  uint64_t v15 = *(void *)(v58 - 8);
  __chkstk_darwin();
  unsigned __int8 v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v51 - v18;
  uint64_t v20 = sub_100063814(&qword_1010D01A8);
  __chkstk_darwin();
  uint64_t v22 = (char **)((char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v63 = sub_100063814(&qword_1010D01B0);
  __chkstk_darwin();
  uint64_t v64 = (uint64_t)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v22 = 0x4030000000000000;
  swift_bridgeObjectRetain_n();
  id v24 = (char *)sub_100AE4920(a2);
  swift_bridgeObjectRelease();
  uint64_t v65 = v24;
  sub_100C04604(&v65);
  swift_bridgeObjectRelease();
  uint64_t v25 = (char *)v22 + *(int *)(v20 + 44);
  uint64_t v26 = swift_allocObject();
  *(unsigned char *)(v26 + 16) = a1 & 1;
  *(void *)(v26 + 24) = a2;
  *(void *)(v26 + 32) = a3;
  *(void *)(v26 + 40) = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100063814(&qword_1010D01B8);
  sub_100063858(&qword_1010D01C0, &qword_1010D01B8);
  sub_100C06070();
  sub_100C06BC0();
  ForEach<>.init(_:content:)();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v28 = v58;
  v27(v19, v17, v58);
  v27(v25, v19, v28);
  LOBYTE(v27) = *(void *)(a2 + 16) < 2uLL;
  uint64_t v29 = v64;
  sub_100C06C14((uint64_t)v22, v64);
  uint64_t v30 = (unsigned char *)(v29 + *(int *)(v63 + 36));
  unsigned char *v30 = (_BYTE)v27;
  v30[1] = 1;
  sub_1000637B8((uint64_t)v22, &qword_1010D01A8);
  uint64_t v31 = v61;
  uint64_t v32 = (void (*)(char *, void, uint64_t))v61[13];
  uint64_t v33 = v59;
  uint64_t v34 = v57;
  v32(v59, enum case for DynamicTypeSize.xSmall(_:), v57);
  uint64_t v35 = v60;
  v32(v60, enum case for DynamicTypeSize.accessibility2(_:), v34);
  sub_100C06C7C((unint64_t *)&qword_1010CDF60, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t v36 = v34;
  if (dispatch thunk of static Comparable.<= infix(_:_:)())
  {
    uint64_t v37 = v62;
    uint64_t v38 = v52;
    uint64_t v39 = &v52[*(int *)(v62 + 48)];
    uint64_t v40 = (void (*)(char *, char *, uint64_t))v31[4];
    v40(v52, v33, v36);
    uint64_t v58 = (uint64_t)v39;
    v40(v39, v35, v36);
    uint64_t v41 = *(int *)(v37 + 48);
    uint64_t v42 = v55;
    unsigned __int8 v43 = &v55[v41];
    uint64_t v44 = (void (*)(char *, char *, uint64_t))v31[2];
    v44(v55, v38, v36);
    v44(v43, v39, v36);
    uint64_t v45 = (uint64_t)v51;
    v40(v51, v42, v36);
    uint64_t v46 = (void (*)(char *, uint64_t))v31[1];
    v46(v43, v36);
    uint64_t v47 = &v42[*(int *)(v62 + 48)];
    v40(v42, v38, v36);
    v40(v47, (char *)v58, v36);
    v40((char *)(v45 + *(int *)(v54 + 36)), v47, v36);
    v46(v42, v36);
    uint64_t v48 = v53;
    sub_10003CABC(v45, v53, &qword_1010CFD48);
    sub_100C06CC4();
    sub_100063858(&qword_1010CFE50, &qword_1010CFD48);
    uint64_t v49 = v64;
    View.dynamicTypeSize<A>(_:)();
    sub_1000637B8(v48, &qword_1010CFD48);
    return sub_1000637B8(v49, &qword_1010D01B0);
  }
  else
  {
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

uint64_t PlayIntentButtonWrapper.init(intent:iconOnly:handler:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = swift_getKeyPath();
  *(unsigned char *)a5 = a1;
  *(unsigned char *)(a5 + 1) = a2;
  *(void *)(a5 + 8) = a3;
  *(void *)(a5 + 16) = a4;
  *(void *)(a5 + 24) = result;
  *(unsigned char *)(a5 + 32) = 0;
  return result;
}

uint64_t sub_100C034BC(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, double *a6, double a7)
{
  uint64_t v45 = a6;
  int v43 = a4;
  uint64_t v42 = a3;
  int v41 = a2;
  uint64_t v40 = a1;
  uint64_t v9 = type metadata accessor for LayoutSubview();
  uint64_t v47 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v53 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010D0168);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LayoutSubviews();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100063814(&qword_1010D0170) - 8;
  __n128 v18 = __chkstk_darwin();
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v14;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v44 = a5;
  uint64_t v54 = v22;
  uint64_t v55 = v14 + 16;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v22)(v16, a5, v13, v18);
  sub_100C06C7C(&qword_1010D0180, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v23 = &v20[*(int *)(v17 + 44)];
  sub_100C06C7C(&qword_1010D0178, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  uint64_t v24 = *(void *)v23;
  uint64_t v46 = v20;
  dispatch thunk of Collection.endIndex.getter();
  if (v24 == v57[0])
  {
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56);
    double v26 = 0.0;
LABEL_10:
    uint64_t v36 = v45;
    v25(v12, 1, 1, v9);
    uint64_t v37 = (uint64_t)v46;
  }
  else
  {
    uint64_t v27 = (uint64_t)v46;
    uint64_t v50 = (void (**)(char *, uint64_t))(v21 + 8);
    uint64_t v51 = (void (**)(char *))(v47 + 16);
    uint64_t v52 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56);
    double v26 = 0.0;
    uint64_t v48 = (void (**)(char *, char *, uint64_t))(v47 + 32);
    uint64_t v49 = (unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
    double v28 = 0.0;
    v47 += 8;
    while (1)
    {
      uint64_t v29 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
      (*v51)(v12);
      v29(v57, 0);
      v54(v16, v27, v13);
      dispatch thunk of Collection.formIndex(after:)();
      (*v50)(v16, v13);
      uint64_t v25 = *v52;
      (*v52)(v12, 0, 1, v9);
      if ((*v49)(v12, 1, v9) == 1) {
        break;
      }
      uint64_t v30 = v53;
      (*v48)(v53, v12, v9);
      static ProposedViewSize.zero.getter();
      LOBYTE(v57[0]) = v31 & 1;
      char v56 = v32 & 1;
      LayoutSubview.sizeThatFits(_:)();
      if (v26 <= v33) {
        double v26 = v33;
      }
      if (v28 <= v34) {
        double v28 = v34;
      }
      (*(void (**)(char *, uint64_t))v47)(v30, v9);
      uint64_t v35 = *(void *)v23;
      dispatch thunk of Collection.endIndex.getter();
      if (v35 == v57[0]) {
        goto LABEL_10;
      }
    }
    uint64_t v36 = v45;
    uint64_t v37 = v27;
  }
  sub_1000637B8(v37, &qword_1010D0170);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v38 = dispatch thunk of Collection.distance(from:to:)();
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t result = dispatch thunk of Collection.distance(from:to:)();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    double *v36 = v26;
    v36[1] = v26 * (double)v38 + (double)(result - 1) * a7;
  }
  return result;
}

void sub_100C03A6C(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_100C03A7C(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double *a6)
{
  return sub_100C034BC(a1, a2 & 1, a3, a4 & 1, a5, a6, *v6);
}

uint64_t sub_100C03A98(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_100C04E28(a9, a10, a1, a2, a3, a4, *v10);
}

uint64_t sub_100C03AAC@<X0>(uint64_t a1@<X8>)
{
  sub_100063814(&qword_1010D00F8);
  __chkstk_darwin();
  id v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v1;
  uint64_t v6 = v1[1];
  uint64_t v7 = v1[2];
  unsigned __int8 v8 = static Axis.Set.horizontal.getter();
  char v9 = Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v8) {
    char v9 = Axis.Set.init(rawValue:)();
  }
  *id v4 = v9;
  uint64_t v10 = sub_100063814(&qword_1010D0100);
  sub_100C02B08(v5, v6, v7, &v4[*(int *)(v10 + 44)]);
  return sub_10003CABC((uint64_t)v4, a1, &qword_1010D00F8);
}

uint64_t EnvironmentValues.playIntentButtonMaterial.getter()
{
  sub_100C04D44();
  EnvironmentValues.subscript.getter();
  return v1;
}

uint64_t sub_100C03BE8@<X0>(unsigned char *a1@<X8>)
{
  sub_100C04D44();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100C03C38()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t EnvironmentValues.playIntentButtonMaterial.setter()
{
  return EnvironmentValues.subscript.setter();
}

char *PlayIntentButtonWrapper.makeUIView(context:)()
{
  unsigned __int8 v1 = v0;
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  char v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SymbolButton(0);
  int v4 = *v0;
  uint64_t v5 = SymbolButton.__allocating_init(intent:)(v4);
  SymbolButton.update(to:)(v4);
  uint64_t v6 = *((void *)v1 + 3);
  char v7 = v1[32];
  sub_100237EDC(v6, v7);
  char v8 = sub_100B6EE2C(v6, v7);
  sub_100237F44(v6, v7);
  SymbolButton.materialColor.setter(v8);
  unsigned __int8 v9 = v1[1];
  uint64_t v10 = (uint64_t)&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess();
  sub_1002415FC(v10, (uint64_t)v3);
  v3[184] = v9;
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_100241704((uint64_t)v3);
  uint64_t v11 = *((void *)v1 + 1);
  uint64_t v12 = swift_allocObject();
  long long v13 = *((_OWORD *)v1 + 1);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v12 + 32) = v13;
  *(unsigned char *)(v12 + 48) = v1[32];
  uint64_t v14 = (uint64_t *)&v5[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
  swift_beginAccess();
  uint64_t v15 = *v14;
  *uint64_t v14 = (uint64_t)sub_100C04D9C;
  v14[1] = v12;
  sub_100237EDC(v6, v7);
  sub_10007B674(v11);
  sub_10006ADFC(v15);
  return v5;
}

uint64_t PlayIntentButtonWrapper.updateUIView(_:context:)(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  SymbolButton.update(to:)(*v2);
  uint64_t v6 = *((void *)v2 + 3);
  char v7 = v2[32];
  sub_100237EDC(v6, v7);
  char v8 = sub_100B6EE2C(v6, v7);
  sub_100237F44(v6, v7);
  SymbolButton.materialColor.setter(v8);
  unsigned __int8 v9 = v2[1];
  uint64_t v10 = a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  sub_1002415FC(v10, (uint64_t)v5);
  v5[184] = v9;
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v5, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_100241704((uint64_t)v5);
  uint64_t v11 = *((void *)v2 + 1);
  uint64_t v12 = swift_allocObject();
  long long v13 = *((_OWORD *)v2 + 1);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v12 + 32) = v13;
  *(unsigned char *)(v12 + 48) = v2[32];
  uint64_t v14 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler);
  swift_beginAccess();
  uint64_t v15 = *v14;
  *uint64_t v14 = (uint64_t)sub_100C04D9C;
  v14[1] = v12;
  sub_100237EDC(v6, v7);
  sub_10007B674(v11);
  return sub_10006ADFC(v15);
}

double PlayIntentButtonWrapper.sizeThatFits(_:uiView:context:)(uint64_t a1, char a2, int a3, int a4, id a5)
{
  [a5 intrinsicContentSize];
  if ((a2 & 1) == 0)
  {
    if (result > *(double *)&a1) {
      double v8 = result;
    }
    else {
      double v8 = *(double *)&a1;
    }
    if (*(double *)&a1 != INFINITY) {
      return v8;
    }
  }
  return result;
}

uint64_t sub_100C040E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100C06ABC();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100C04144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100C06ABC();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100C041A8()
{
}

uint64_t View.playIntentButtonMaterial(_:)()
{
  return swift_release();
}

uint64_t sub_100C04244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100C06E18(&qword_1010D0158, &qword_1010D0160, (void (*)(void))sub_100C05FFC);

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t (*EnvironmentValues.playIntentButtonMaterial.modify(void *a1))(uint64_t a1)
{
  *a1 = v1;
  a1[1] = sub_100C04D44();
  EnvironmentValues.subscript.getter();
  return sub_100C0434C;
}

uint64_t sub_100C0434C(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return EnvironmentValues.subscript.setter();
}

uint64_t PlayIntentLayoutHelper.Configuration.distribution.getter(__int16 a1)
{
  return HIBYTE(a1);
}

uint64_t static PlayIntentLayoutHelper.Configuration.with(_:)(void (*a1)(unsigned __int16 *))
{
  unsigned __int16 v2 = 513;
  uint64_t v3 = 0x4030000000000000;
  a1(&v2);
  return v2;
}

BOOL static PlayIntentLayoutHelper.Configuration.__derived_struct_equals(_:_:)(__int16 a1, __int16 a2, double a3, double a4)
{
  return a3 == a4 && a1 == a2;
}

BOOL sub_100C043F4(double *a1, double *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2
      && *((unsigned __int8 *)a1 + 1) == *((unsigned __int8 *)a2 + 1)
      && a1[1] == a2[1];
}

uint64_t PlayIntentLayoutHelper.configuration.setter(uint64_t result, double a2)
{
  *(_WORD *)(v2 + 16) = result;
  *(double *)(v2 + 24) = a2;
  return result;
}

char *PlayIntentLayoutHelper.init()()
{
  type metadata accessor for SymbolButton(0);
  uint64_t v0 = SymbolButton.__allocating_init(intent:)(0);
  SymbolButton.__allocating_init(intent:)(1);
  return v0;
}

uint64_t PlayIntentLayoutHelper.layout(in:rect:)(void *a1, uint64_t a2, void *a3, void *a4, int a5, double a6)
{
  sub_100063814(&qword_1010C9B10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100E252E0;
  *(void *)(inited + 32) = a3;
  *(void *)(inited + 40) = a4;
  unint64_t v16 = inited;
  specialized Array._endMutation()();
  id v13 = a3;
  id v14 = a4;
  _s11MusicCoreUI22PlayIntentLayoutHelperV6layout_2in4rect13configurationySayAA12SymbolButtonCG_So6UIViewCSo6CGRectVSgAC13ConfigurationVtFZ_0(v16, a1, a2, a5, a6);
  return swift_bridgeObjectRelease();
}

uint64_t PlaybackIntentDescriptor.configure(for:)(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = (void *)PlaybackIntentDescriptor.intent.getter();
  [v3 setShuffleMode:v2 == 1];
  [v3 setRepeatMode:0];

  uint64_t result = type metadata accessor for PlaybackIntentDescriptor(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = v2 == 2;
  return result;
}

id MPCPlaybackIntent.configure(for:)(char a1)
{
  [v1 setShuffleMode:a1 == 1];

  return [v1 setRepeatMode:0];
}

uint64_t sub_100C04604(char **a1)
{
  int v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v2 = sub_100B18698((uint64_t)v2);
  }
  uint64_t v3 = *((void *)v2 + 2);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_100C04670(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_100C04670(void *a1)
{
  int v2 = a1;
  Swift::Int v3 = a1[1];
  uint64_t result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_138;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v76 = 0;
      uint64_t v77 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unsigned int v79 = *(unsigned __int8 *)(v77 + i);
        uint64_t v80 = v76;
        do
        {
          unsigned int v81 = *(unsigned __int8 *)(v77 + v80);
          if (v79 >= v81) {
            break;
          }
          if (!v77) {
            goto LABEL_142;
          }
          *(unsigned char *)(v77 + v80 + 1) = v81;
          *(unsigned char *)(v77 + v80--) = v79;
        }
        while (v80 != -1);
        ++v76;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_137;
    }
    uint64_t v92 = result;
    Swift::Int v93 = v3;
    if (v3 > 1)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t result = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(void *)(result + 16) = v6;
      Swift::Int v3 = v93;
      char v91 = (void *)result;
      char v95 = (unsigned __int8 *)(result + 32);
LABEL_13:
      Swift::Int v8 = 0;
      char v90 = v2;
      uint64_t v9 = *v2;
      uint64_t v10 = (char *)_swiftEmptyArrayStorage;
      uint64_t v94 = *v2;
      while (1)
      {
        Swift::Int v12 = v8++;
        if (v8 < v3)
        {
          unsigned int v13 = *(unsigned __int8 *)(v9 + v8);
          unsigned int v14 = *(unsigned __int8 *)(v9 + v12);
          Swift::Int v8 = v12 + 2;
          if (v12 + 2 < v3)
          {
            unsigned int v15 = v13;
            while (1)
            {
              unsigned int v16 = *(unsigned __int8 *)(v9 + v8);
              if (v13 < v14 == v16 >= v15) {
                break;
              }
              ++v8;
              unsigned int v15 = v16;
              if (v3 == v8)
              {
                Swift::Int v8 = v3;
                break;
              }
            }
          }
          if (v13 < v14)
          {
            if (v8 < v12) {
              goto LABEL_139;
            }
            if (v12 < v8)
            {
              Swift::Int v17 = v8 - 1;
              Swift::Int v18 = v12;
              do
              {
                if (v18 != v17)
                {
                  if (!v9) {
                    goto LABEL_145;
                  }
                  char v19 = *(unsigned char *)(v9 + v18);
                  *(unsigned char *)(v9 + v18) = *(unsigned char *)(v9 + v17);
                  *(unsigned char *)(v9 + v17) = v19;
                }
                BOOL v58 = ++v18 < v17--;
              }
              while (v58);
            }
          }
        }
        if (v8 < v3)
        {
          if (__OFSUB__(v8, v12)) {
            goto LABEL_136;
          }
          if (v8 - v12 < v92)
          {
            Swift::Int v20 = v12 + v92;
            if (__OFADD__(v12, v92)) {
              goto LABEL_140;
            }
            if (v20 >= v3) {
              Swift::Int v20 = v3;
            }
            if (v20 < v12)
            {
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
              return result;
            }
            if (v8 != v20)
            {
              uint64_t v21 = (unsigned char *)(v9 + v8);
              do
              {
                unsigned int v22 = *(unsigned __int8 *)(v9 + v8);
                Swift::Int v23 = v12;
                uint64_t v24 = v21;
                do
                {
                  unsigned int v25 = *(v24 - 1);
                  if (v22 >= v25) {
                    break;
                  }
                  if (!v9) {
                    goto LABEL_143;
                  }
                  *uint64_t v24 = v25;
                  *--uint64_t v24 = v22;
                  ++v23;
                }
                while (v8 != v23);
                ++v8;
                ++v21;
              }
              while (v8 != v20);
              Swift::Int v8 = v20;
            }
          }
        }
        if (v8 < v12) {
          goto LABEL_131;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_100B18510(0, *((void *)v10 + 2) + 1, 1, v10);
          uint64_t v10 = (char *)result;
        }
        unint64_t v27 = *((void *)v10 + 2);
        unint64_t v26 = *((void *)v10 + 3);
        unint64_t v11 = v27 + 1;
        uint64_t v9 = v94;
        if (v27 >= v26 >> 1)
        {
          uint64_t result = (uint64_t)sub_100B18510((char *)(v26 > 1), v27 + 1, 1, v10);
          uint64_t v9 = v94;
          uint64_t v10 = (char *)result;
        }
        *((void *)v10 + 2) = v11;
        double v28 = v10 + 32;
        uint64_t v29 = &v10[16 * v27 + 32];
        *(void *)uint64_t v29 = v12;
        *((void *)v29 + 1) = v8;
        if (v27)
        {
          while (1)
          {
            unint64_t v30 = v11 - 1;
            if (v11 >= 4)
            {
              uint64_t v35 = &v28[2 * v11];
              uint64_t v36 = *(v35 - 8);
              uint64_t v37 = *(v35 - 7);
              BOOL v41 = __OFSUB__(v37, v36);
              uint64_t v38 = v37 - v36;
              if (v41) {
                goto LABEL_120;
              }
              uint64_t v40 = *(v35 - 6);
              uint64_t v39 = *(v35 - 5);
              BOOL v41 = __OFSUB__(v39, v40);
              uint64_t v33 = v39 - v40;
              char v34 = v41;
              if (v41) {
                goto LABEL_121;
              }
              unint64_t v42 = v11 - 2;
              int v43 = &v28[2 * v11 - 4];
              uint64_t v45 = *v43;
              uint64_t v44 = v43[1];
              BOOL v41 = __OFSUB__(v44, v45);
              uint64_t v46 = v44 - v45;
              if (v41) {
                goto LABEL_122;
              }
              BOOL v41 = __OFADD__(v33, v46);
              uint64_t v47 = v33 + v46;
              if (v41) {
                goto LABEL_124;
              }
              if (v47 >= v38)
              {
                uint64_t v65 = &v28[2 * v30];
                uint64_t v67 = *v65;
                uint64_t v66 = v65[1];
                BOOL v41 = __OFSUB__(v66, v67);
                uint64_t v68 = v66 - v67;
                if (v41) {
                  goto LABEL_130;
                }
                BOOL v58 = v33 < v68;
                goto LABEL_84;
              }
            }
            else
            {
              if (v11 != 3)
              {
                uint64_t v59 = *((void *)v10 + 4);
                uint64_t v60 = *((void *)v10 + 5);
                BOOL v41 = __OFSUB__(v60, v59);
                uint64_t v52 = v60 - v59;
                char v53 = v41;
                goto LABEL_78;
              }
              uint64_t v32 = *((void *)v10 + 4);
              uint64_t v31 = *((void *)v10 + 5);
              BOOL v41 = __OFSUB__(v31, v32);
              uint64_t v33 = v31 - v32;
              char v34 = v41;
            }
            if (v34) {
              goto LABEL_123;
            }
            unint64_t v42 = v11 - 2;
            uint64_t v48 = &v28[2 * v11 - 4];
            uint64_t v50 = *v48;
            uint64_t v49 = v48[1];
            BOOL v51 = __OFSUB__(v49, v50);
            uint64_t v52 = v49 - v50;
            char v53 = v51;
            if (v51) {
              goto LABEL_125;
            }
            uint64_t v54 = &v28[2 * v30];
            uint64_t v56 = *v54;
            uint64_t v55 = v54[1];
            BOOL v41 = __OFSUB__(v55, v56);
            uint64_t v57 = v55 - v56;
            if (v41) {
              goto LABEL_127;
            }
            if (__OFADD__(v52, v57)) {
              goto LABEL_129;
            }
            if (v52 + v57 >= v33)
            {
              BOOL v58 = v33 < v57;
LABEL_84:
              if (v58) {
                unint64_t v30 = v42;
              }
              goto LABEL_86;
            }
LABEL_78:
            if (v53) {
              goto LABEL_126;
            }
            uint64_t v61 = &v28[2 * v30];
            uint64_t v63 = *v61;
            uint64_t v62 = v61[1];
            BOOL v41 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v41) {
              goto LABEL_128;
            }
            if (v64 < v52) {
              goto LABEL_15;
            }
LABEL_86:
            unint64_t v69 = v30 - 1;
            if (v30 - 1 >= v11)
            {
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
LABEL_125:
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              goto LABEL_141;
            }
            if (!v9) {
              goto LABEL_144;
            }
            uint64_t v70 = &v28[2 * v69];
            uint64_t v71 = *v70;
            uint64_t v72 = v28;
            uint64_t v73 = &v28[2 * v30];
            uint64_t v74 = v73[1];
            uint64_t result = sub_100A9D828((unsigned __int8 *)(v9 + *v70), (unsigned __int8 *)(v9 + *v73), v9 + v74, v95);
            if (v1) {
              goto LABEL_114;
            }
            if (v74 < v71) {
              goto LABEL_117;
            }
            if (v30 > *((void *)v10 + 2)) {
              goto LABEL_118;
            }
            *uint64_t v70 = v71;
            v72[2 * v69 + 1] = v74;
            unint64_t v75 = *((void *)v10 + 2);
            if (v30 >= v75) {
              goto LABEL_119;
            }
            unint64_t v11 = v75 - 1;
            uint64_t result = (uint64_t)memmove(v73, v73 + 2, 16 * (v75 - 1 - v30));
            double v28 = v72;
            *((void *)v10 + 2) = v75 - 1;
            uint64_t v9 = v94;
            if (v75 <= 2) {
              goto LABEL_15;
            }
          }
        }
        unint64_t v11 = 1;
LABEL_15:
        Swift::Int v3 = v93;
        if (v8 >= v93)
        {
          int v2 = v90;
          char v7 = v91;
          goto LABEL_103;
        }
      }
    }
    char v7 = _swiftEmptyArrayStorage;
    char v95 = (unsigned __int8 *)&_swiftEmptyArrayStorage[4];
    if (v3 == 1)
    {
      char v91 = _swiftEmptyArrayStorage;
      goto LABEL_13;
    }
    unint64_t v11 = _swiftEmptyArrayStorage[2];
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
    char v91 = v7;
    if (v11 >= 2)
    {
      uint64_t v82 = *v2;
      do
      {
        unint64_t v83 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_132;
        }
        if (!v82) {
          goto LABEL_146;
        }
        uint64_t v84 = (uint64_t)v10;
        uint64_t v85 = v10 + 32;
        uint64_t v86 = *(void *)&v10[16 * v83 + 32];
        uint64_t v87 = *(void *)&v10[16 * v11 + 24];
        uint64_t result = sub_100A9D828((unsigned __int8 *)(v82 + v86), (unsigned __int8 *)(v82 + v85[2 * v11 - 2]), v82 + v87, v95);
        if (v1) {
          break;
        }
        if (v87 < v86) {
          goto LABEL_133;
        }
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_100B1860C(v84);
          uint64_t v84 = result;
        }
        if (v83 >= *(void *)(v84 + 16)) {
          goto LABEL_134;
        }
        uint64_t v88 = (void *)(v84 + 32 + 16 * v83);
        *uint64_t v88 = v86;
        v88[1] = v87;
        unint64_t v89 = *(void *)(v84 + 16);
        if (v11 > v89) {
          goto LABEL_135;
        }
        uint64_t result = (uint64_t)memmove((void *)(v84 + 32 + 16 * (v11 - 1)), (const void *)(v84 + 32 + 16 * v11), 16 * (v89 - v11));
        uint64_t v10 = (char *)v84;
        *(void *)(v84 + 16) = v89 - 1;
        unint64_t v11 = v89 - 1;
      }
      while (v89 > 2);
    }
LABEL_114:
    swift_bridgeObjectRelease();
    v91[2] = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100C04CA8@<X0>(unsigned char *a1@<X8>)
{
  sub_100C04D44();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_100C04CF8()
{
  return EnvironmentValues.subscript.setter();
}

unint64_t sub_100C04D44()
{
  unint64_t result = qword_1010D0108;
  if (!qword_1010D0108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0108);
  }
  return result;
}

uint64_t sub_100C04DA4()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  sub_100237F44(*(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return swift_deallocObject();
}

uint64_t sub_100C04DF0()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 24);
  if (v1) {
    return v1(*(unsigned __int8 *)(v0 + 16));
  }
  return result;
}

uint64_t sub_100C04E28(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7)
{
  uint64_t v55 = type metadata accessor for ViewDimensions();
  uint64_t v47 = *(void (***)(char *, uint64_t))(v55 - 8);
  __chkstk_darwin();
  uint64_t v54 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LayoutSubview();
  uint64_t v46 = *(void *)(v15 - 8);
  __chkstk_darwin();
  char v53 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010D0168);
  __chkstk_darwin();
  Swift::Int v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for LayoutSubviews();
  Swift::Int v20 = *(void **)(v19 - 8);
  __chkstk_darwin();
  unsigned int v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100063814(&qword_1010D0170) - 8;
  __chkstk_darwin();
  unsigned int v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63.origin.CGFloat x = a3;
  v63.origin.CGFloat y = a4;
  v63.size.double width = a5;
  v63.size.double height = a6;
  CGRectGetWidth(v63);
  uint64_t v56 = a2;
  uint64_t v26 = sub_100C06C7C(&qword_1010D0178, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v52 = (void (**)(char *))dispatch thunk of Collection.distance(from:to:)();
  uint64_t v57 = v20;
  BOOL v58 = (void (*)(char *, uint64_t, uint64_t))v20[2];
  uint64_t v59 = v20 + 2;
  v58(v22, a1, v19);
  sub_100C06C7C(&qword_1010D0180, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  uint64_t v60 = v22;
  dispatch thunk of Sequence.makeIterator()();
  unint64_t v27 = &v25[*(int *)(v23 + 44)];
  uint64_t v28 = *(void *)v27;
  dispatch thunk of Collection.endIndex.getter();
  if (v28 == v61[0])
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v46 + 56))(v18, 1, 1, v15);
  }
  else
  {
    uint64_t v52 = (void (**)(char *))(v46 + 16);
    BOOL v51 = (void (**)(char *, uint64_t))(v57 + 1);
    uint64_t v57 = (void *)(v46 + 56);
    uint64_t v50 = (unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
    uint64_t v48 = (void (**)(char *, char *, uint64_t))(v46 + 32);
    ++v47;
    v46 += 8;
    double v29 = a3;
    uint64_t v49 = v25;
    while (1)
    {
      unint64_t v30 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
      (*v52)(v18);
      v30(v61, 0);
      uint64_t v31 = v60;
      v58(v60, (uint64_t)v25, v19);
      dispatch thunk of Collection.formIndex(after:)();
      (*v51)(v31, v19);
      uint64_t v32 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*v57;
      ((void (*)(char *, void, uint64_t, uint64_t))*v57)(v18, 0, 1, v15);
      if ((*v50)(v18, 1, v15) == 1) {
        break;
      }
      uint64_t v45 = v32;
      uint64_t v33 = v53;
      (*v48)(v53, v18, v15);
      v64.origin.CGFloat x = a3;
      v64.origin.CGFloat y = a4;
      v64.size.double width = a5;
      v64.size.double height = a6;
      CGRectGetHeight(v64);
      static UnitPoint.topLeading.getter();
      LOBYTE(v61[0]) = 0;
      char v62 = 0;
      LayoutSubview.place(at:anchor:proposal:)();
      LOBYTE(v61[0]) = 0;
      char v62 = 0;
      char v34 = v27;
      uint64_t v35 = v19;
      uint64_t v36 = v26;
      uint64_t v37 = v18;
      uint64_t v38 = v54;
      LayoutSubview.dimensions(in:)();
      ViewDimensions.width.getter();
      double v40 = v39;
      BOOL v41 = v38;
      Swift::Int v18 = v37;
      uint64_t v26 = v36;
      uint64_t v19 = v35;
      unint64_t v27 = v34;
      (*v47)(v41, v55);
      double v29 = v29 + v40 + a7;
      unint64_t v42 = v33;
      unsigned int v25 = v49;
      (*(void (**)(char *, uint64_t))v46)(v42, v15);
      uint64_t v43 = *(void *)v34;
      dispatch thunk of Collection.endIndex.getter();
      if (v43 == v61[0])
      {
        v45(v18, 1, 1, v15);
        return sub_1000637B8((uint64_t)v25, &qword_1010D0170);
      }
    }
  }
  return sub_1000637B8((uint64_t)v25, &qword_1010D0170);
}

void sub_100C054F0(id *a1, id a2, CGFloat *a3, uint64_t a4, unint64_t a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, uint64_t a13, BOOL *a14)
{
  id v20 = *a1;
  id v21 = [*a1 superview];
  if (!v21 || (id v22 = v21, v21, v22 != a2)) {
    [a2 addSubview:v20];
  }
  CGFloat v23 = *a3;
  CGFloat v24 = a3[1];
  CGFloat v25 = a3[3];
  if (*(unsigned char *)(a4 + 8))
  {
    [v20 intrinsicContentSize];
    double v27 = v26;
    if (a5 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    CGFloat.ceilingValue(scale:)();
    double v29 = v27 - v28;
  }
  else
  {
    double v29 = *(double *)a4;
  }
  CGRect.applyingLayoutDirection(_:inBounds:)();
  [v20 setFrame:];
  v33.origin.CGFloat x = v23;
  v33.origin.CGFloat y = v24;
  v33.size.double width = v29;
  v33.size.double height = v25;
  a3[2] = a3[2] - (CGRectGetWidth(v33) + a12);
  v34.origin.CGFloat x = v23;
  v34.origin.CGFloat y = v24;
  v34.size.double width = v29;
  v34.size.double height = v25;
  *a3 = *a3 + CGRectGetWidth(v34) + a12;
  if (*a14)
  {
    BOOL v30 = 1;
  }
  else
  {
    [v20 intrinsicContentSize];
    double v32 = v31;
    v35.origin.CGFloat x = v23;
    v35.origin.CGFloat y = v24;
    v35.size.double width = v29;
    v35.size.double height = v25;
    BOOL v30 = CGRectGetWidth(v35) < v32;
  }
  *a14 = v30;
}

void _s11MusicCoreUI22PlayIntentLayoutHelperV6layout_2in4rect13configurationySayAA12SymbolButtonCG_So6UIViewCSo6CGRectVSgAC13ConfigurationVtFZ_0(unint64_t a1, void *a2, uint64_t a3, int a4, double a5)
{
  int v83 = a4;
  uint64_t v6 = a3;
  sub_10003CABC(a3, (uint64_t)v93, (uint64_t *)&unk_1010CAC70);
  CGFloat x = *(double *)v93;
  CGFloat v85 = *(double *)&v93[1];
  *(void *)&size.CGFloat height = v93[2];
  *(void *)&size.CGFloat width = v93[3];
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v10 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  double v87 = a5;
  if (v11)
  {
    if (v11 < 1)
    {
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    uint64_t v81 = v6;
    for (uint64_t i = 0; i != v11; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v14 = v13;
      if ([v13 isHidden])
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    int64_t v15 = (int64_t)v94;
    uint64_t v6 = v81;
  }
  else
  {
    swift_bridgeObjectRelease();
    int64_t v15 = (int64_t)_swiftEmptyArrayStorage;
  }
  [a2 bounds];
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  id v24 = [a2 traitCollection];
  [v24 displayScale];
  double v26 = v25;

  id v27 = [a2 effectiveUserInterfaceLayoutDirection];
  [a2 layoutMargins];
  double v29 = v28;
  double v31 = v30;
  v79[1] = v32;
  BOOL v33 = v15 < 0 || (v15 & 0x4000000000000000) != 0;
  if (!v33)
  {
    uint64_t v34 = *(void *)(v15 + 16);
    *(void *)&double v35 = v34 - 1;
    if (!__OFSUB__(v34, 1)) {
      goto LABEL_20;
    }
    goto LABEL_70;
  }
  swift_bridgeObjectRetain();
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  *(void *)&double v35 = v34 - 1;
  if (__OFSUB__(v34, 1))
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
LABEL_20:
  sub_10003CABC(v6, (uint64_t)&v94, (uint64_t *)&unk_1010CAC70);
  double v36 = x;
  CGFloat v37 = v85;
  CGFloat height = size.height;
  CGFloat width = size.width;
  if (v95) {
    double v36 = sub_10003B5C8(v17, v19, v21, v23, v29, v31);
  }
  CGFloat x = v35;
  v92.origin.CGFloat x = v36;
  v92.origin.CGFloat y = v37;
  v92.size.CGFloat width = height;
  v92.size.CGFloat height = width;
  if (v33)
  {
    swift_retain();
    uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v40 = *(void *)(v15 + 16);
    swift_retain();
  }
  uint64_t v82 = a2;
  uint64_t v80 = (uint64_t)v27;
  uint64_t v81 = v34;
  if (v40)
  {
    if (v40 >= 1)
    {
      uint64_t v41 = 0;
      double v42 = 0.0;
      do
      {
        if ((v15 & 0xC000000000000001) != 0) {
          id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v43 = *(id *)(v15 + 8 * v41 + 32);
        }
        uint64_t v44 = v43;
        uint64_t v45 = (uint64_t)v43 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
        swift_beginAccess();
        sub_1002415FC(v45, (uint64_t)v10);
        v10[184] = 0;
        SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v10, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
        sub_100241704((uint64_t)v10);
        [v44 intrinsicContentSize];
        CGFloat.ceilingValue(scale:)();
        double v42 = v42 + v46;
        ++v41;
        CGFloat.ceilingValue(scale:)();
        double v48 = v47;
      }
      while (v40 != v41);
      goto LABEL_33;
    }
LABEL_72:
    __break(1u);
    __break(1u);
    return;
  }
  double v42 = 0.0;
  double v48 = 0.0;
LABEL_33:
  char v49 = v83;
  int v50 = BYTE1(v83);
  double v51 = (double)(*(void *)&x & ~(*(uint64_t *)&x >> 63)) * v87;
  swift_release();
  if (v50)
  {
    uint64_t v52 = v82;
    uint64_t v53 = v81;
    if (v50 == 1)
    {
      double v90 = v48;
      char v91 = 0;
      double v54 = v51 + v48 * (double)v81;
    }
    else
    {
      CGFloat x = v92.origin.x;
      CGFloat y = v92.origin.y;
      CGFloat v85 = v92.size.width;
      size.CGFloat height = v92.size.height;
      CGRectGetWidth(v92);
      CGFloat.ceilingValue(scale:)();
      double v48 = v57;
      double v90 = v57;
      char v91 = 0;
      v96.origin.CGFloat x = x;
      v96.origin.CGFloat y = y;
      v96.size.CGFloat width = v85;
      v96.size.CGFloat height = size.height;
      double v54 = CGRectGetWidth(v96);
    }
    int v55 = 1;
  }
  else
  {
    int v55 = 0;
    double v90 = 0.0;
    char v91 = 1;
    double v54 = v51 + v42;
    double v48 = 0.0;
    uint64_t v52 = v82;
    uint64_t v53 = v81;
  }
  CGFloat v58 = v92.origin.y;
  CGFloat v85 = v92.origin.x;
  CGSize size = v92.size;
  CGFloat v59 = CGRectGetWidth(v92);
  CGFloat x = v54;
  double v60 = v54 - v59;
  if (v60 < 0.0) {
    double v61 = 0.0;
  }
  else {
    double v61 = v60;
  }
  if (v55 && v61 > 0.0)
  {
    CGFloat.ceilingValue(scale:)();
    double v90 = v48 - v62;
    char v91 = 0;
    v97.origin.CGFloat x = v85;
    v97.origin.CGFloat y = v58;
    v97.size.CGFloat width = size.width;
    v97.size.CGFloat height = size.height;
    CGFloat x = CGRectGetWidth(v97);
  }
  double v63 = v87;
  if (v50 != 2)
  {
    if (v49)
    {
      CGFloat v64 = v85;
      CGFloat v65 = v58;
      CGFloat v66 = size.width;
      CGFloat v67 = size.height;
      if (v49 == 1)
      {
        CGRectGetWidth(*(CGRect *)&v64);
        CGFloat.floorValue(scale:)();
        double v69 = v85 + v68;
      }
      else
      {
        double v69 = CGRectGetMaxX(*(CGRect *)&v64) - x;
      }
      v92.origin.CGFloat x = v69;
    }
    v92.size.CGFloat width = x;
  }
  BOOL v89 = 0;
  if (v40)
  {
    unint64_t v70 = v15 & 0xC000000000000001;
    swift_retain();
    uint64_t v71 = 0;
    uint64_t v72 = v80;
    do
    {
      if (v70) {
        id v73 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v73 = *(id *)(v15 + 8 * v71 + 32);
      }
      uint64_t v74 = v73;
      ++v71;
      id v88 = v73;
      sub_100C054F0(&v88, v52, &v92.origin.x, (uint64_t)&v90, v15, v61, v26, v17, v19, v21, v23, v63, v72, &v89);
    }
    while (v40 != v71);
    swift_release();
    if (v89 && v53 > 1)
    {
      swift_retain();
      uint64_t v75 = 0;
      do
      {
        if (v70) {
          id v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v76 = *(id *)(v15 + 8 * v75 + 32);
        }
        uint64_t v77 = v76;
        ++v75;
        uint64_t v78 = (uint64_t)v76 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
        swift_beginAccess();
        sub_1002415FC(v78, (uint64_t)v10);
        v10[184] = 1;
        SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v10, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
        sub_100241704((uint64_t)v10);
      }
      while (v40 != v75);
      swift_release();
    }
  }
  swift_release();
}

unint64_t sub_100C05FA4()
{
  unint64_t result = qword_1010D0110;
  if (!qword_1010D0110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0110);
  }
  return result;
}

unint64_t sub_100C05FFC()
{
  unint64_t result = qword_1010D0118;
  if (!qword_1010D0118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0118);
  }
  return result;
}

uint64_t sub_100C06050()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100C06070()
{
  unint64_t result = qword_1010D0120;
  if (!qword_1010D0120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0120);
  }
  return result;
}

unint64_t sub_100C060C8()
{
  unint64_t result = qword_1010D0128;
  if (!qword_1010D0128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0128);
  }
  return result;
}

unint64_t sub_100C06120()
{
  unint64_t result = qword_1010D0130;
  if (!qword_1010D0130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0130);
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Intent()
{
  return &type metadata for SymbolButton.Intent;
}

unsigned char *_s13MaterialColorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100C06254);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.MaterialColor()
{
  return &type metadata for SymbolButton.MaterialColor;
}

uint64_t destroy for PlayIntentButtonStack()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t _s11MusicCoreUI21PlayIntentButtonStackVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for PlayIntentButtonStack(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PlayIntentButtonStack(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for PlayIntentButtonStack()
{
  return &type metadata for PlayIntentButtonStack;
}

uint64_t destroy for PlayIntentButtonWrapper(uint64_t a1)
{
  if (*(void *)(a1 + 8)) {
    swift_release();
  }
  uint64_t v2 = *(void *)(a1 + 24);
  char v3 = *(unsigned char *)(a1 + 32);

  return sub_100237F44(v2, v3);
}

uint64_t initializeWithCopy for PlayIntentButtonWrapper(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_100237EDC(v6, v7);
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for PlayIntentButtonWrapper(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v6 = (_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *uint64_t v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_100237EDC(v9, v10);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  sub_100237F44(v11, v12);
  return a1;
}

uint64_t assignWithTake for PlayIntentButtonWrapper(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v6 = (_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *uint64_t v4 = *v6;
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v7;
  swift_release();
LABEL_8:
  char v9 = *(unsigned char *)(a2 + 32);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v9;
  sub_100237F44(v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlayIntentButtonWrapper(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayIntentButtonWrapper(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentButtonWrapper()
{
  return &type metadata for PlayIntentButtonWrapper;
}

uint64_t initializeWithCopy for PlayIntentLayoutHelper(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  int v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for PlayIntentLayoutHelper(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for PlayIntentLayoutHelper(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper()
{
  return &type metadata for PlayIntentLayoutHelper;
}

uint64_t getEnumTagSinglePayload for PlayIntentLayoutHelper.Configuration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[16]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayIntentLayoutHelper.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper.Configuration()
{
  return &type metadata for PlayIntentLayoutHelper.Configuration;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper.Alignment()
{
  return &type metadata for PlayIntentLayoutHelper.Alignment;
}

unsigned char *_s6IntentOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100C06934);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayIntentLayoutHelper.Distribution()
{
  return &type metadata for PlayIntentLayoutHelper.Distribution;
}

uint64_t sub_100C0696C()
{
  return sub_100063858(&qword_1010D0138, &qword_1010D00F8);
}

uint64_t sub_100C069A8()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for PlayIntentButtonMaterialKey()
{
  return &type metadata for PlayIntentButtonMaterialKey;
}

ValueMetadata *type metadata accessor for PlayIntentButtonStack.SmartHStack()
{
  return &type metadata for PlayIntentButtonStack.SmartHStack;
}

unint64_t sub_100C06A68()
{
  unint64_t result = qword_1010D0150;
  if (!qword_1010D0150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0150);
  }
  return result;
}

unint64_t sub_100C06ABC()
{
  unint64_t result = qword_1010D0188;
  if (!qword_1010D0188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0188);
  }
  return result;
}

uint64_t sub_100C06B10()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100C06B50@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = *(unsigned char *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 32);
  uint64_t v5 = *(void *)(v2 + 40);
  char v7 = *a1;
  uint64_t KeyPath = swift_getKeyPath();
  *(unsigned char *)a2 = v7;
  *(unsigned char *)(a2 + 1) = v4;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = KeyPath;
  *(unsigned char *)(a2 + 32) = 0;

  return swift_retain();
}

unint64_t sub_100C06BC0()
{
  unint64_t result = qword_1010D01C8;
  if (!qword_1010D01C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D01C8);
  }
  return result;
}

uint64_t sub_100C06C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010D01A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C06C7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100C06CC4()
{
  unint64_t result = qword_1010D01D0;
  if (!qword_1010D01D0)
  {
    sub_10006389C(&qword_1010D01B0);
    sub_100C06D40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D01D0);
  }
  return result;
}

unint64_t sub_100C06D40()
{
  unint64_t result = qword_1010D01D8;
  if (!qword_1010D01D8)
  {
    sub_10006389C(&qword_1010D01A8);
    sub_100063858(&qword_1010D01E0, &qword_1010D01E8);
    sub_100C06E18(&qword_1010D01F0, &qword_1010D01A0, (void (*)(void))sub_100C06070);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D01D8);
  }
  return result;
}

uint64_t sub_100C06E18(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100C06E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for PlayIntentButtonStack.SmartHStack.Cache()
{
  return &type metadata for PlayIntentButtonStack.SmartHStack.Cache;
}

uint64_t PlaylistCovers.CarouselItem.itemType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C06F04(v1, a1);
}

uint64_t sub_100C06F04(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t PlaylistCovers.CarouselItem.itemType.setter(uint64_t a1)
{
  return sub_100C06F44(a1, v1);
}

uint64_t sub_100C06F44(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t PlaylistCovers.CarouselItem.pageIndicator.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006CAB8(v1 + 80, a1, &qword_1010CD198);
}

uint64_t PlaylistCovers.CarouselItem.pageIndicator.setter(uint64_t a1)
{
  return sub_100C06FAC(a1, v1 + 80);
}

uint64_t sub_100C06FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010CD198);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

__n128 PlaylistCovers.CarouselItem.init(itemType:pageIndicator:)@<Q0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_100C0709C(a2, (uint64_t)v14);
  __n128 v11 = (__n128)v14[1];
  long long v12 = v14[0];
  uint64_t v5 = v15;
  sub_100C07104(a1, v13);
  long long v6 = v13[1];
  long long v7 = v13[2];
  long long v8 = v13[3];
  long long v9 = v13[4];
  *(_OWORD *)a3 = v13[0];
  *(_OWORD *)(a3 + 16) = v6;
  *(_OWORD *)(a3 + 32) = v7;
  *(_OWORD *)(a3 + 48) = v8;
  *(_OWORD *)(a3 + 64) = v9;
  *(_OWORD *)(a3 + 80) = v12;
  __n128 result = v11;
  *(__n128 *)(a3 + 96) = v11;
  *(void *)(a3 + 112) = v5;
  return result;
}

uint64_t sub_100C0709C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010CD198);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *sub_100C07104(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  long long v2 = a1[1];
  long long v3 = a1[2];
  long long v4 = a1[4];
  a2[3] = a1[3];
  a2[4] = v4;
  a2[1] = v2;
  a2[2] = v3;
  return a2;
}

uint64_t static PlaylistCovers.CarouselItem.CarouselItemType.__derived_enum_equals(_:_:)(_OWORD *a1, _OWORD *a2)
{
  sub_100C07104(a1, v8);
  if (*(void *)&v8[0])
  {
    v9[2] = v8[2];
    v9[3] = v8[3];
    v9[4] = v8[4];
    v9[0] = v8[0];
    v9[1] = v8[1];
    sub_100C07104(a2, v6);
    if (*(void *)&v6[0])
    {
      v7[2] = v6[2];
      v7[3] = v6[3];
      _OWORD v7[4] = v6[4];
      v7[0] = v6[0];
      v7[1] = v6[1];
      sub_100C07244(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100477388);
      sub_100C07244(a2, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100477388);
      char v4 = static PlaylistCovers.Cover.__derived_struct_equals(_:_:)(v9, v7);
      sub_100C07244(a2, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10019437C);
      sub_100C07244(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10019437C);
    }
    else
    {
      char v4 = 0;
    }
  }
  else
  {
    sub_100C07104(a2, v9);
    char v4 = *(void *)&v9[0] == 0;
  }
  return v4 & 1;
}

void *sub_100C07244(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100C07298(uint64_t a1, uint64_t a2)
{
  long long v2 = *(void **)a1;
  long long v3 = *(void **)a2;
  if (*(void *)a1)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = *(void **)(a1 + 16);
    long long v6 = *(void **)(a1 + 24);
    long long v7 = *(void **)(a1 + 32);
    long long v8 = *(void **)(a1 + 40);
    long long v9 = *(void **)(a1 + 48);
    uint64_t v10 = *(void **)(a1 + 56);
    uint64_t v11 = *(void *)(a1 + 64);
    uint64_t v12 = *(void *)(a1 + 72);
    uint64_t v13 = *(void *)(a2 + 8);
    uint64_t v14 = *(void **)(a2 + 16);
    uint64_t v15 = *(void **)(a2 + 24);
    double v16 = *(void **)(a2 + 32);
    double v17 = *(void **)(a2 + 40);
    double v18 = *(void **)(a2 + 48);
    double v19 = *(void **)(a2 + 56);
    uint64_t v20 = *(void *)(a2 + 64);
    uint64_t v21 = *(void *)(a2 + 72);
    v35[0] = *(void *)a1;
    v35[1] = v4;
    _OWORD v35[2] = v5;
    v35[3] = v6;
    v35[4] = v7;
    v35[5] = v8;
    v35[6] = v9;
    v35[7] = v10;
    v35[8] = v11;
    v35[9] = v12;
    if (v3)
    {
      v36[0] = v3;
      v36[1] = v13;
      v36[2] = v14;
      v36[3] = v15;
      v36[4] = v16;
      v36[5] = v17;
      v36[6] = v18;
      v36[7] = v19;
      v36[8] = v20;
      v36[9] = v21;
      BOOL v33 = v6;
      uint64_t v34 = v5;
      id v27 = v14;
      double v31 = v8;
      uint64_t v32 = v7;
      double v26 = v16;
      double v29 = v10;
      double v30 = v9;
      double v22 = v19;
      uint64_t v28 = v4;
      uint64_t v23 = v13;
      sub_100477388(v2, v4, v5, v6, v7, v8, v9, v10);
      sub_100477388(v3, v23, v14, v15, v26, v17, v18, v22);
      char v24 = static PlaylistCovers.Cover.__derived_struct_equals(_:_:)(v35, v36);
      sub_10019437C(v3, v23, v27, v15, v26, v17, v18, v22);
      sub_10019437C(v2, v28, v34, v33, v32, v31, v30, v29);
    }
    else
    {
      char v24 = 0;
    }
  }
  else
  {
    char v24 = v3 == 0;
  }
  return v24 & 1;
}

void PlaylistCovers.CarouselItem.hash(into:)()
{
  sub_100C07104(v0, v8);
  sub_100C07104(v8, &v16);
  if ((void)v16)
  {
    uint64_t v1 = v17;
    if (v17)
    {
      long long v3 = v21;
      long long v2 = v22;
      uint64_t v5 = v19;
      uint64_t v4 = v20;
      long long v6 = v18;
      uint64_t v7 = *((void *)&v16 + 1);
      char v9 = BYTE8(v16);
      uint64_t v10 = v17;
      uint64_t v11 = v18;
      uint64_t v12 = v19;
      uint64_t v13 = v20;
      uint64_t v14 = v21;
      uint64_t v15 = v22;
      Hasher._combine(_:)(1u);
      sub_100C07244(v8, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100477388);
      sub_1001942C0(v7, v1, v6, v5, v4, v3, v2);
      PlaylistCovers.Cover.Representation.hash(into:)();
      sub_100C07244(v8, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10019437C);
      sub_1001941E4(v7, v1, v6, v5, v4, v3, v2);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)();
  }
}

uint64_t static PlaylistCovers.CarouselItem.== infix(_:_:)(_OWORD *a1, _OWORD *a2)
{
  sub_100C07104(a1, v6);
  sub_100C07104(a2, v5);
  sub_100C07104(v6, v9);
  if (*(void *)&v9[0])
  {
    v7[2] = v9[2];
    v7[3] = v9[3];
    _OWORD v7[4] = v9[4];
    v7[0] = v9[0];
    v7[1] = v9[1];
    sub_100C07104(v5, v10);
    if (*(void *)&v10[0])
    {
      v8[2] = v10[2];
      v8[3] = v10[3];
      _OWORD v8[4] = v10[4];
      v8[0] = v10[0];
      v8[1] = v10[1];
      sub_100C07244(v6, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100477388);
      sub_100C07244(v5, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100477388);
      char v3 = static PlaylistCovers.Cover.__derived_struct_equals(_:_:)(v7, v8);
      sub_100C07244(v5, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10019437C);
      sub_100C07244(v6, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10019437C);
    }
    else
    {
      char v3 = 0;
    }
  }
  else
  {
    sub_100C07104(v5, v10);
    char v3 = *(void *)&v10[0] == 0;
  }
  return v3 & 1;
}

void *PlaylistCovers.CarouselItem.cover.getter@<X0>(void *a1@<X8>)
{
  sub_100C07104(v1, v14);
  sub_100C07104(v14, &v15);
  uint64_t v3 = v15;
  if ((void)v15)
  {
    uint64_t v4 = v16;
    uint64_t v13 = *((void *)&v15 + 1);
    uint64_t v5 = v17;
    uint64_t v6 = v18;
    uint64_t v7 = v19;
    uint64_t v8 = v20;
    uint64_t v9 = v21;
    uint64_t v10 = v22;
    uint64_t v11 = v23;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  __n128 result = sub_100C07244(v14, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100477388);
  *a1 = v3;
  a1[1] = v13;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  return result;
}

double static PlaylistCovers.CarouselItem.picker.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = Image.init(systemName:)();
  uint64_t v3 = static Font.caption2.getter();
  uint64_t v4 = static Animation.spring(response:dampingFraction:blendDuration:)();
  static Color.primary.getter();
  uint64_t v5 = Color.opacity(_:)();
  swift_release();
  static Color.primary.getter();
  uint64_t v6 = Color.opacity(_:)();
  swift_release();
  double result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 80) = v2;
  *(void *)(a1 + 88) = v3;
  *(void *)(a1 + 96) = v4;
  *(void *)(a1 + 104) = v5;
  *(void *)(a1 + 112) = v6;
  return result;
}

double static PlaylistCovers.CarouselItem.tracksTiled(image:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v23[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v23[-v10];
  id v12 = a1;
  String.LocalizationValue.init(stringLiteral:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v8, v11, v5);
  if (qword_1010C8350 != -1) {
    swift_once();
  }
  id v13 = (id)qword_10112BE80;
  static Locale.current.getter();
  uint64_t v14 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v16 = v15;
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
  PlaylistCovers.Cover.init(image:accessibilityLabel:)((uint64_t)v12, v14, v16, (uint64_t)&v24);
  uint64_t v17 = v29;
  long long v18 = v25;
  long long v19 = v26;
  long long v20 = v27;
  long long v21 = v28;
  *(void *)a2 = v24;
  *(_OWORD *)(a2 + 8) = v18;
  *(_OWORD *)(a2 + 24) = v19;
  *(_OWORD *)(a2 + 40) = v20;
  *(_OWORD *)(a2 + 56) = v21;
  *(void *)(a2 + 72) = v17;
  double result = 0.0;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(void *)(a2 + 112) = 0;
  return result;
}

Swift::Int PlaylistCovers.CarouselItem.hashValue.getter()
{
  Hasher.init(_seed:)();
  sub_100C07104(v0, v9);
  sub_100C07104(v9, &v17);
  if ((void)v17)
  {
    uint64_t v1 = v18;
    if (v18)
    {
      uint64_t v3 = v22;
      uint64_t v2 = v23;
      uint64_t v5 = v20;
      uint64_t v4 = v21;
      uint64_t v6 = v19;
      uint64_t v7 = *((void *)&v17 + 1);
      char v10 = BYTE8(v17);
      uint64_t v11 = v18;
      id v12 = v19;
      id v13 = v20;
      uint64_t v14 = v21;
      uint64_t v15 = v22;
      uint64_t v16 = v23;
      Hasher._combine(_:)(1u);
      sub_100C07244(v9, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100477388);
      sub_1001942C0(v7, v1, v6, v5, v4, v3, v2);
      PlaylistCovers.Cover.Representation.hash(into:)();
      sub_100C07244(v9, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_10019437C);
      sub_1001941E4(v7, v1, v6, v5, v4, v3, v2);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)();
  }
  return Hasher._finalize()();
}

Swift::Int sub_100C07BE0()
{
  return PlaylistCovers.CarouselItem.hashValue.getter();
}

void sub_100C07C34()
{
  uint64_t v1 = *(void **)v0;
  if (*(void *)v0)
  {
    uint64_t v2 = *(void **)(v0 + 16);
    if (v2)
    {
      uint64_t v3 = *(void **)(v0 + 24);
      uint64_t v4 = *(void **)(v0 + 32);
      uint64_t v5 = *(void **)(v0 + 40);
      uint64_t v6 = *(void **)(v0 + 48);
      uint64_t v7 = *(void **)(v0 + 56);
      uint64_t v8 = *(void *)(v0 + 8);
      Hasher._combine(_:)(1u);
      sub_100477388(v1, v8, v2, v3, v4, v5, v6, v7);
      sub_1001942C0(v8, v2, v3, v4, v5, v6, v7);
      PlaylistCovers.Cover.Representation.hash(into:)();
      sub_10019437C(v1, v8, v2, v3, v4, v5, v6, v7);
      sub_1001941E4(v8, v2, v3, v4, v5, v6, v7);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)();
  }
}

Swift::Int sub_100C07DEC()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + 24);
  uint64_t v5 = *(void **)(v0 + 32);
  uint64_t v6 = *(void **)(v0 + 40);
  uint64_t v7 = *(void **)(v0 + 48);
  uint64_t v8 = *(void **)(v0 + 56);
  Hasher.init(_seed:)();
  if (v1)
  {
    if (v3)
    {
      Hasher._combine(_:)(1u);
      sub_100477388(v1, v2, v3, v4, v5, v6, v7, v8);
      sub_1001942C0(v2, v3, v4, v5, v6, v7, v8);
      PlaylistCovers.Cover.Representation.hash(into:)();
      sub_10019437C(v1, v2, v3, v4, v5, v6, v7, v8);
      sub_1001941E4(v2, v3, v4, v5, v6, v7, v8);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    String.hash(into:)();
  }
  return Hasher._finalize()();
}

uint64_t static PlaylistCovers.carouselItems(from:playlistTitle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return _swift_task_switch(sub_100C07F78, 0, 0);
}

uint64_t sub_100C07F78()
{
  uint64_t v1 = *(void *)(v0 + 40);
  long long v7 = *(_OWORD *)(v0 + 24);
  uint64_t v2 = sub_100063814(&qword_1010D0200);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = v7;
  *(void *)(v3 + 32) = v1;
  uint64_t v4 = sub_100063814(&qword_1010D0218);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  void *v5 = v0;
  v5[1] = sub_100C080A0;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v2, v4, 0, 0, &unk_1010D0210, v3, v2);
}

uint64_t sub_100C080A0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_100A0C198, 0, 0);
}

uint64_t sub_100C081B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[45] = a4;
  v5[46] = a5;
  v5[43] = a2;
  v5[44] = a3;
  v5[42] = a1;
  uint64_t v6 = sub_100063814(&qword_1010D0228);
  v5[47] = v6;
  v5[48] = *(void *)(v6 - 8);
  v5[49] = swift_task_alloc();
  sub_100063814(&qword_1010CAA90);
  v5[50] = swift_task_alloc();
  v5[51] = swift_task_alloc();
  return _swift_task_switch(sub_100C082C4, 0, 0);
}

uint64_t sub_100C082C4()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (_OWORD *)(v0 + 216);
    uint64_t v4 = (long long *)(v1 + 32);
    uint64_t v32 = type metadata accessor for TaskPriority();
    uint64_t v5 = *(void *)(v32 - 8);
    double v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    double v30 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v29 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v7 = *(void *)(v0 + 408);
      uint64_t v9 = *(void *)(v0 + 360);
      uint64_t v8 = *(void *)(v0 + 368);
      long long v11 = v4[1];
      long long v10 = v4[2];
      long long v12 = *v4;
      *(void *)(v0 + 264) = *((void *)v4 + 6);
      *(_OWORD *)(v0 + 232) = v11;
      *(_OWORD *)(v0 + 248) = v10;
      *uint64_t v3 = v12;
      v31(v7, 1, 1, v32);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = 0;
      uint64_t v14 = (void *)(v13 + 16);
      *(void *)(v13 + 24) = 0;
      long long v15 = *(_OWORD *)(v0 + 232);
      *(_OWORD *)(v13 + 32) = *v3;
      *(_OWORD *)(v13 + 48) = v15;
      *(_OWORD *)(v13 + 64) = *(_OWORD *)(v0 + 248);
      *(void *)(v13 + 80) = *(void *)(v0 + 264);
      *(void *)(v13 + 88) = v9;
      *(void *)(v13 + 96) = v8;
      sub_100477F64(v0 + 216);
      sub_100477F64(v0 + 216);
      swift_bridgeObjectRetain();
      if (swift_taskGroup_addPending()) {
        break;
      }
LABEL_3:
      swift_release();
      uint64_t v6 = *(void *)(v0 + 408);
      sub_100477FBC(v0 + 216);
      sub_100066D60(v6);
      uint64_t v4 = (long long *)((char *)v4 + 56);
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    uint64_t v16 = *(void *)(v0 + 400);
    sub_10006CAB8(*(void *)(v0 + 408), v16, &qword_1010CAA90);
    int v17 = (*v30)(v16, 1, v32);
    uint64_t v18 = *(void *)(v0 + 400);
    if (v17 == 1)
    {
      sub_100066D60(*(void *)(v0 + 400));
      if (*v14)
      {
LABEL_7:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v19 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v21 = v20;
        swift_unknownObjectRelease();
LABEL_10:
        uint64_t v22 = **(void **)(v0 + 344);
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = &unk_1010D0238;
        *(void *)(v23 + 24) = v13;
        sub_100063814(&qword_1010D0200);
        uint64_t v24 = v21 | v19;
        if (v21 | v19)
        {
          uint64_t v24 = v0 + 272;
          *(void *)(v0 + 272) = 0;
          *(void *)(v0 + 280) = 0;
          *(void *)(v0 + 288) = v19;
          *(void *)(v0 + 296) = v21;
        }
        *(void *)(v0 + 304) = 1;
        *(void *)(v0 + 312) = v24;
        *(void *)(v0 + 320) = v22;
        swift_task_create();
        goto LABEL_3;
      }
    }
    else
    {
      TaskPriority.rawValue.getter();
      (*v29)(v18, v32);
      if (*v14) {
        goto LABEL_7;
      }
    }
    uint64_t v19 = 0;
    uint64_t v21 = 0;
    goto LABEL_10;
  }
LABEL_14:
  sub_100063814(&qword_1010D0200);
  TaskGroup.makeAsyncIterator()();
  *(void *)(v0 + 416) = _swiftEmptyDictionarySingleton;
  unint64_t v25 = sub_100C09FA8();
  long long v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v26;
  *long long v26 = v0;
  v26[1] = sub_100C08670;
  uint64_t v27 = *(void *)(v0 + 376);
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 96, v27, v25);
}

uint64_t sub_100C08670()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 432) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[48];
    uint64_t v3 = v2[49];
    uint64_t v5 = v2[47];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = (uint64_t (*)())UIScreen.Dimensions.size.getter;
  }
  else
  {
    uint64_t v6 = sub_100C087B4;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_100C087B4()
{
  uint64_t v1 = *(void **)(v0 + 104);
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 112);
    uint64_t v3 = *(void **)(v0 + 120);
    uint64_t v5 = *(void **)(v0 + 128);
    uint64_t v4 = *(void **)(v0 + 136);
    uint64_t v6 = *(void **)(v0 + 144);
    uint64_t v84 = *(void **)(v0 + 152);
    uint64_t v80 = *(void *)(v0 + 416);
    double v68 = *(void **)(v0 + 104);
    uint64_t v69 = *(void *)(v0 + 96);
    *(unsigned char *)(v0 + 160) = v69;
    *(void *)(v0 + 168) = v1;
    *(void *)(v0 + 176) = v2;
    *(void *)(v0 + 184) = v3;
    *(void *)(v0 + 192) = v5;
    *(void *)(v0 + 200) = v4;
    *(void *)(v0 + 208) = v6;
    id v7 = v1;
    CGFloat v67 = v2;
    id v8 = v2;
    CGFloat v66 = v3;
    id v9 = v3;
    CGFloat v65 = v5;
    id v10 = v5;
    CGFloat v64 = v4;
    id v11 = v4;
    double v63 = v6;
    id v12 = v6;
    id v13 = v7;
    id v14 = v8;
    id v15 = v9;
    id v16 = v10;
    id v17 = v11;
    id v18 = v12;
    id v19 = v84;
    id v78 = v13;
    id v60 = v14;
    id v61 = v15;
    id v62 = v16;
    id v83 = v17;
    id v82 = v18;
    PlaylistCovers.Cover.init(image:representation:)((uint64_t)v19, (unsigned __int8 *)(v0 + 160), v0 + 16);
    uint64_t v70 = *(void *)(v0 + 16);
    uint64_t v71 = *(void *)(v0 + 24);
    uint64_t v72 = *(void *)(v0 + 32);
    uint64_t v73 = *(void *)(v0 + 40);
    uint64_t v74 = *(void *)(v0 + 48);
    uint64_t v75 = *(void *)(v0 + 56);
    uint64_t v76 = *(void *)(v0 + 64);
    uint64_t v77 = *(void *)(v0 + 72);
    uint64_t v20 = *(void *)(v0 + 88);
    uint64_t v79 = *(void *)(v0 + 80);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v0 + 328) = v80;
    uint64_t v22 = (long long *)(v0 + 160);
    unint64_t v25 = sub_100AFD020(v0 + 160);
    uint64_t v26 = *(void *)(v80 + 16);
    BOOL v27 = (v23 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
    }
    else
    {
      char v29 = v23;
      uint64_t v81 = v20;
      if (*(void *)(*(void *)(v0 + 416) + 24) >= v28)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v28 = (uint64_t)sub_100AFE948();
        }
      }
      else
      {
        sub_100AFDD88(v28, isUniquelyReferenced_nonNull_native);
        uint64_t v28 = sub_100AFD020((uint64_t)v22);
        if ((v29 & 1) != (v23 & 1))
        {
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        }
        unint64_t v25 = v28;
      }
      CGFloat v59 = v19;
      double v36 = *(void **)(v0 + 328);
      if (v29)
      {
        uint64_t v37 = v36[7] + 120 * v25;
        uint64_t v38 = *(void *)(v37 + 80);
        sub_10019437C(*(void **)v37, *(void *)(v37 + 8), *(void **)(v37 + 16), *(void **)(v37 + 24), *(void **)(v37 + 32), *(void **)(v37 + 40), *(void **)(v37 + 48), *(void **)(v37 + 56));
        sub_100194254(v38);
        *(void *)uint64_t v37 = v70;
        *(void *)(v37 + 8) = v71;
        *(void *)(v37 + 16) = v72;
        *(void *)(v37 + 24) = v73;
        *(void *)(v37 + 32) = v74;
        *(void *)(v37 + 40) = v75;
        double v39 = v78;
        *(void *)(v37 + 48) = v76;
        *(void *)(v37 + 56) = v77;
        *(void *)(v37 + 64) = v79;
        *(void *)(v37 + 72) = v81;
        *(_OWORD *)(v37 + 80) = 0u;
        *(_OWORD *)(v37 + 96) = 0u;
        *(void *)(v37 + 112) = 0;
        uint64_t v41 = v61;
        uint64_t v40 = v62;
        double v42 = v60;
        goto LABEL_18;
      }
      v36[(v25 >> 6) + 8] |= 1 << v25;
      uint64_t v43 = v36[6] + 56 * v25;
      long long v44 = *v22;
      long long v45 = *(_OWORD *)(v0 + 176);
      long long v46 = *(_OWORD *)(v0 + 192);
      *(void *)(v43 + 48) = *(void *)(v0 + 208);
      *(_OWORD *)(v43 + 16) = v45;
      *(_OWORD *)(v43 + 32) = v46;
      *(_OWORD *)uint64_t v43 = v44;
      uint64_t v47 = v36[7] + 120 * v25;
      *(void *)uint64_t v47 = v70;
      *(void *)(v47 + 8) = v71;
      *(void *)(v47 + 16) = v72;
      *(void *)(v47 + 24) = v73;
      *(void *)(v47 + 32) = v74;
      *(void *)(v47 + 40) = v75;
      double v39 = v78;
      *(void *)(v47 + 48) = v76;
      *(void *)(v47 + 56) = v77;
      *(void *)(v47 + 64) = v79;
      *(void *)(v47 + 72) = v81;
      *(void *)(v47 + 112) = 0;
      *(_OWORD *)(v47 + 80) = 0u;
      *(_OWORD *)(v47 + 96) = 0u;
      uint64_t v48 = v36[2];
      BOOL v49 = __OFADD__(v48, 1);
      uint64_t v50 = v48 + 1;
      if (!v49)
      {
        v36[2] = v50;
        id v51 = v78;
        double v42 = v60;
        id v52 = v60;
        uint64_t v41 = v61;
        id v53 = v61;
        uint64_t v40 = v62;
        id v54 = v62;
        id v55 = v83;
        id v56 = v82;
LABEL_18:
        swift_bridgeObjectRelease();

        sub_100C0A004(v69, v68, v67, v66, v65, v64, v63, v84);
        *(void *)(v0 + 416) = v36;
        unint64_t v57 = sub_100C09FA8();
        CGFloat v58 = (void *)swift_task_alloc();
        *(void *)(v0 + 424) = v58;
        *CGFloat v58 = v0;
        v58[1] = sub_100C08670;
        uint64_t v23 = *(void *)(v0 + 376);
        uint64_t v28 = v0 + 96;
        unint64_t v24 = v57;
        return dispatch thunk of AsyncIteratorProtocol.next()(v28, v23, v24);
      }
    }
    __break(1u);
    return dispatch thunk of AsyncIteratorProtocol.next()(v28, v23, v24);
  }
  uint64_t v31 = *(void *)(v0 + 416);
  uint64_t v32 = *(void *)(v0 + 352);
  uint64_t v33 = *(char ***)(v0 + 336);
  (*(void (**)(void, void))(*(void *)(v0 + 384) + 8))(*(void *)(v0 + 392), *(void *)(v0 + 376));
  sub_100C0A004(*(void *)(v0 + 96), *(void **)(v0 + 104), *(void **)(v0 + 112), *(void **)(v0 + 120), *(void **)(v0 + 128), *(void **)(v0 + 136), *(void **)(v0 + 144), *(void **)(v0 + 152));
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_100C0A084(v32, v31);
  swift_bridgeObjectRelease_n();
  *uint64_t v33 = v34;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

uint64_t sub_100C08D38(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  id v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *id v9 = v3;
  v9[1] = sub_100081D08;
  return sub_100C081B8(a1, a2, v6, v7, v8);
}

unint64_t sub_100C08E00()
{
  unint64_t result = qword_1010D0220;
  if (!qword_1010D0220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0220);
  }
  return result;
}

uint64_t _s12CarouselItemVwxx(uint64_t a1)
{
  if (*(void *)a1)
  {

    uint64_t v2 = *(void **)(a1 + 16);
    if (v2)
    {
    }
    swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)(a1 + 80);
  if (result)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t _s12CarouselItemVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  if (*(void *)a2)
  {
    *(void *)a1 = v4;
    uint64_t v5 = (_OWORD *)(a1 + 8);
    uint64_t v6 = *(void **)(a2 + 16);
    id v7 = v4;
    if (v6)
    {
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v8 = *(void **)(a2 + 24);
      id v9 = *(void **)(a2 + 32);
      *(void *)(a1 + 16) = v6;
      *(void *)(a1 + 24) = v8;
      id v10 = *(void **)(a2 + 40);
      uint64_t v11 = *(void **)(a2 + 48);
      *(void *)(a1 + 32) = v9;
      *(void *)(a1 + 40) = v10;
      id v12 = *(void **)(a2 + 56);
      *(void *)(a1 + 48) = v11;
      *(void *)(a1 + 56) = v12;
      id v13 = v6;
      id v14 = v8;
      id v15 = v9;
      id v16 = v10;
      id v17 = v11;
      id v18 = v12;
    }
    else
    {
      long long v21 = *(_OWORD *)(a2 + 24);
      _OWORD *v5 = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v21;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
    }
    uint64_t v22 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v22;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v19;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    long long v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
  }
  uint64_t v23 = *(void *)(a2 + 80);
  if (v23)
  {
    uint64_t v24 = *(void *)(a2 + 88);
    uint64_t v25 = *(void *)(a2 + 96);
    *(void *)(a1 + 80) = v23;
    *(void *)(a1 + 88) = v24;
    uint64_t v27 = *(void *)(a2 + 104);
    uint64_t v26 = *(void *)(a2 + 112);
    *(void *)(a1 + 96) = v25;
    *(void *)(a1 + 104) = v27;
    *(void *)(a1 + 112) = v26;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v28 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v28;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
  }
  return a1;
}

uint64_t _s12CarouselItemVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1)
  {
    if (v5)
    {
      *(void *)a1 = v5;
      id v6 = v5;

      id v7 = (_OWORD *)(a1 + 8);
      uint64_t v8 = (long long *)(a2 + 8);
      id v9 = *(void **)(a1 + 16);
      uint64_t v10 = *(void *)(a2 + 16);
      if (v9)
      {
        if (v10)
        {
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          uint64_t v11 = *(void **)(a2 + 16);
          *(void *)(a1 + 16) = v11;
          id v12 = v11;

          id v13 = *(void **)(a2 + 24);
          id v14 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v13;
          id v15 = v13;

          id v16 = *(void **)(a2 + 32);
          id v17 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v16;
          id v18 = v16;

          long long v19 = *(void **)(a2 + 40);
          long long v20 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v19;
          id v21 = v19;

          uint64_t v22 = *(void **)(a2 + 48);
          uint64_t v23 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v22;
          id v24 = v22;

          uint64_t v25 = *(void **)(a2 + 56);
          uint64_t v26 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = v25;
          id v27 = v25;
        }
        else
        {
          sub_1004FBC5C(a1 + 8);
          long long v61 = *(_OWORD *)(a2 + 24);
          long long v60 = *(_OWORD *)(a2 + 40);
          long long v62 = *v8;
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(_OWORD *)(a1 + 24) = v61;
          *(_OWORD *)(a1 + 40) = v60;
          _OWORD *v7 = v62;
        }
      }
      else if (v10)
      {
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        long long v45 = *(void **)(a2 + 16);
        *(void *)(a1 + 16) = v45;
        long long v46 = *(void **)(a2 + 24);
        *(void *)(a1 + 24) = v46;
        uint64_t v47 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v47;
        uint64_t v48 = *(void **)(a2 + 40);
        *(void *)(a1 + 40) = v48;
        BOOL v49 = *(void **)(a2 + 48);
        *(void *)(a1 + 48) = v49;
        uint64_t v50 = *(void **)(a2 + 56);
        *(void *)(a1 + 56) = v50;
        id v51 = v45;
        id v52 = v46;
        id v53 = v47;
        id v54 = v48;
        id v55 = v49;
        id v56 = v50;
      }
      else
      {
        long long v66 = *v8;
        long long v67 = *(_OWORD *)(a2 + 24);
        long long v68 = *(_OWORD *)(a2 + 40);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(_OWORD *)(a1 + 24) = v67;
        *(_OWORD *)(a1 + 40) = v68;
        _OWORD *v7 = v66;
      }
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100C093C8(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      long long v42 = *(_OWORD *)(a2 + 64);
      long long v44 = *(_OWORD *)(a2 + 16);
      long long v43 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v42;
      *(_OWORD *)(a1 + 16) = v44;
      *(_OWORD *)(a1 + 32) = v43;
    }
  }
  else if (v5)
  {
    *(void *)a1 = v5;
    uint64_t v28 = *(void *)(a2 + 16);
    id v29 = v5;
    if (v28)
    {
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      double v30 = *(void **)(a2 + 16);
      *(void *)(a1 + 16) = v30;
      uint64_t v31 = *(void **)(a2 + 24);
      *(void *)(a1 + 24) = v31;
      uint64_t v32 = *(void **)(a2 + 32);
      *(void *)(a1 + 32) = v32;
      uint64_t v33 = *(void **)(a2 + 40);
      *(void *)(a1 + 40) = v33;
      uint64_t v34 = *(void **)(a2 + 48);
      *(void *)(a1 + 48) = v34;
      double v35 = *(void **)(a2 + 56);
      *(void *)(a1 + 56) = v35;
      id v36 = v30;
      id v37 = v31;
      id v38 = v32;
      id v39 = v33;
      id v40 = v34;
      id v41 = v35;
    }
    else
    {
      long long v63 = *(_OWORD *)(a2 + 8);
      long long v64 = *(_OWORD *)(a2 + 24);
      long long v65 = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(_OWORD *)(a1 + 24) = v64;
      *(_OWORD *)(a1 + 40) = v65;
      *(_OWORD *)(a1 + 8) = v63;
    }
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v57 = *(_OWORD *)(a2 + 16);
    long long v58 = *(_OWORD *)(a2 + 32);
    long long v59 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v59;
    *(_OWORD *)(a1 + 16) = v57;
    *(_OWORD *)(a1 + 32) = v58;
  }
  uint64_t v69 = (_OWORD *)(a1 + 80);
  uint64_t v71 = (_OWORD *)(a2 + 80);
  uint64_t v70 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80))
  {
    if (v70)
    {
      *(void *)(a1 + 80) = v70;
      swift_retain();
      swift_release();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_retain();
      swift_release();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_retain();
      swift_release();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_retain();
      swift_release();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_100C0941C(a1 + 80);
      uint64_t v72 = *(void *)(a2 + 112);
      long long v73 = *(_OWORD *)(a2 + 96);
      *uint64_t v69 = *v71;
      *(_OWORD *)(a1 + 96) = v73;
      *(void *)(a1 + 112) = v72;
    }
  }
  else if (v70)
  {
    *(void *)(a1 + 80) = v70;
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v74 = *v71;
    long long v75 = *(_OWORD *)(a2 + 96);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *uint64_t v69 = v74;
    *(_OWORD *)(a1 + 96) = v75;
  }
  return a1;
}

uint64_t sub_100C093C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100C0941C(uint64_t a1)
{
  return a1;
}

uint64_t _s12CarouselItemVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  if (!*(void *)a1) {
    goto LABEL_7;
  }
  if (!*(void *)a2)
  {
    sub_100C093C8(a1);
LABEL_7:
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    goto LABEL_11;
  }
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void **)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    long long v14 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v14;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    goto LABEL_10;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  if (!v6)
  {
    sub_1004FBC5C(a1 + 8);
    goto LABEL_9;
  }
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = v6;

  id v7 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  uint64_t v8 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  id v9 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  uint64_t v10 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  uint64_t v11 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

LABEL_10:
  uint64_t v15 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v15;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v16 = *(void *)(a2 + 80);
  if (!*(void *)(a1 + 80))
  {
LABEL_15:
    long long v17 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v17;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    return a1;
  }
  if (!v16)
  {
    sub_100C0941C(a1 + 80);
    goto LABEL_15;
  }
  *(void *)(a1 + 80) = v16;
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t _s12CarouselItemVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 120)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s12CarouselItemVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 120) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.CarouselItem()
{
  return &type metadata for PlaylistCovers.CarouselItem;
}

id *_s12CarouselItemV16CarouselItemTypeOwxx(id *result)
{
  if ((unint64_t)*result >= 0xFFFFFFFF)
  {
    uint64_t v1 = result;

    id v2 = v1[2];
    if (v2)
    {
    }
    return (id *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwcp(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    long long v19 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v19;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    long long v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
  }
  else
  {
    *(void *)a1 = v4;
    uint64_t v5 = (_OWORD *)(a1 + 8);
    uint64_t v6 = *(void **)(a2 + 16);
    id v7 = v4;
    if (v6)
    {
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v8 = *(void **)(a2 + 24);
      id v9 = *(void **)(a2 + 32);
      *(void *)(a1 + 16) = v6;
      *(void *)(a1 + 24) = v8;
      uint64_t v10 = *(void **)(a2 + 40);
      uint64_t v11 = *(void **)(a2 + 48);
      *(void *)(a1 + 32) = v9;
      *(void *)(a1 + 40) = v10;
      long long v12 = *(void **)(a2 + 56);
      *(void *)(a1 + 48) = v11;
      *(void *)(a1 + 56) = v12;
      id v13 = v6;
      id v14 = v8;
      id v15 = v9;
      id v16 = v10;
      id v17 = v11;
      id v18 = v12;
    }
    else
    {
      long long v21 = *(_OWORD *)(a2 + 24);
      _OWORD *v5 = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v21;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
    }
    uint64_t v22 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwca(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1 >= 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      id v6 = v5;

      id v7 = (_OWORD *)(a1 + 8);
      uint64_t v8 = (long long *)(a2 + 8);
      id v9 = *(void **)(a1 + 16);
      uint64_t v10 = *(void *)(a2 + 16);
      if (v9)
      {
        if (v10)
        {
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          uint64_t v11 = *(void **)(a2 + 16);
          *(void *)(a1 + 16) = v11;
          id v12 = v11;

          id v13 = *(void **)(a2 + 24);
          id v14 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v13;
          id v15 = v13;

          id v16 = *(void **)(a2 + 32);
          id v17 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v16;
          id v18 = v16;

          long long v19 = *(void **)(a2 + 40);
          long long v20 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = v19;
          id v21 = v19;

          uint64_t v22 = *(void **)(a2 + 48);
          uint64_t v23 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v22;
          id v24 = v22;

          uint64_t v25 = *(void **)(a2 + 56);
          uint64_t v26 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = v25;
          id v27 = v25;
        }
        else
        {
          sub_1004FBC5C(a1 + 8);
          long long v62 = *(_OWORD *)(a2 + 24);
          long long v61 = *(_OWORD *)(a2 + 40);
          long long v63 = *v8;
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(_OWORD *)(a1 + 24) = v62;
          *(_OWORD *)(a1 + 40) = v61;
          _OWORD *v7 = v63;
        }
      }
      else if (v10)
      {
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        long long v46 = *(void **)(a2 + 16);
        *(void *)(a1 + 16) = v46;
        uint64_t v47 = *(void **)(a2 + 24);
        *(void *)(a1 + 24) = v47;
        uint64_t v48 = *(void **)(a2 + 32);
        *(void *)(a1 + 32) = v48;
        BOOL v49 = *(void **)(a2 + 40);
        *(void *)(a1 + 40) = v49;
        uint64_t v50 = *(void **)(a2 + 48);
        *(void *)(a1 + 48) = v50;
        id v51 = *(void **)(a2 + 56);
        *(void *)(a1 + 56) = v51;
        id v52 = v46;
        id v53 = v47;
        id v54 = v48;
        id v55 = v49;
        id v56 = v50;
        id v57 = v51;
      }
      else
      {
        long long v64 = *v8;
        long long v65 = *(_OWORD *)(a2 + 24);
        long long v66 = *(_OWORD *)(a2 + 40);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(_OWORD *)(a1 + 24) = v65;
        *(_OWORD *)(a1 + 40) = v66;
        _OWORD *v7 = v64;
      }
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }

    long long v42 = *(void **)(a1 + 16);
    if (v42)
    {
    }
    swift_bridgeObjectRelease();
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v43 = *(_OWORD *)(a2 + 16);
    long long v44 = *(_OWORD *)(a2 + 32);
    long long v45 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v45;
    *(_OWORD *)(a1 + 16) = v43;
    *(_OWORD *)(a1 + 32) = v44;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF) {
    goto LABEL_12;
  }
  *(void *)a1 = v5;
  uint64_t v28 = *(void *)(a2 + 16);
  id v29 = v5;
  if (v28)
  {
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    double v30 = *(void **)(a2 + 16);
    *(void *)(a1 + 16) = v30;
    uint64_t v31 = *(void **)(a2 + 24);
    *(void *)(a1 + 24) = v31;
    uint64_t v32 = *(void **)(a2 + 32);
    *(void *)(a1 + 32) = v32;
    uint64_t v33 = *(void **)(a2 + 40);
    *(void *)(a1 + 40) = v33;
    uint64_t v34 = *(void **)(a2 + 48);
    *(void *)(a1 + 48) = v34;
    double v35 = *(void **)(a2 + 56);
    *(void *)(a1 + 56) = v35;
    id v36 = v30;
    id v37 = v31;
    id v38 = v32;
    id v39 = v33;
    id v40 = v34;
    id v41 = v35;
  }
  else
  {
    long long v58 = *(_OWORD *)(a2 + 8);
    long long v59 = *(_OWORD *)(a2 + 24);
    long long v60 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(a1 + 24) = v59;
    *(_OWORD *)(a1 + 40) = v60;
    *(_OWORD *)(a1 + 8) = v58;
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwta(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL)
  {
    if (*(void *)a2 >= 0xFFFFFFFFuLL)
    {
      *(void *)a1 = *(void *)a2;

      uint64_t v5 = *(void **)(a1 + 16);
      if (v5)
      {
        uint64_t v6 = *(void *)(a2 + 16);
        if (v6)
        {
          *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
          *(void *)(a1 + 16) = v6;

          id v7 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);

          uint64_t v8 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);

          id v9 = *(void **)(a1 + 40);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);

          uint64_t v10 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);

          uint64_t v11 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);

LABEL_12:
          uint64_t v16 = *(void *)(a2 + 72);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = v16;
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_1004FBC5C(a1 + 8);
      }
      long long v15 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = v15;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      goto LABEL_12;
    }

    id v12 = *(void **)(a1 + 16);
    if (v12)
    {
    }
    swift_bridgeObjectRelease();
  }
  long long v13 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  return a1;
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t _s12CarouselItemV16CarouselItemTypeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_100C09D18(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for PlaylistCovers.CarouselItem.CarouselItemType()
{
  return &type metadata for PlaylistCovers.CarouselItem.CarouselItemType;
}

uint64_t sub_100C09D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  _OWORD v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return _swift_task_switch(sub_100C09D80, 0, 0);
}

uint64_t sub_100C09D80()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  long long v5 = *(_OWORD *)v3;
  long long v6 = *(_OWORD *)(v3 + 16);
  long long v7 = *(_OWORD *)(v3 + 32);
  *(void *)(v4 + 48) = *(void *)(v3 + 48);
  *(_OWORD *)(v4 + 16) = v6;
  *(_OWORD *)(v4 + 32) = v7;
  *(_OWORD *)uint64_t v4 = v5;
  sub_100477F64(v3);
  uint64_t v8 = PlaylistCovers.Specs.coverSize.unsafeMutableAddressor();
  CGFloat v9 = *(double *)v8;
  CGFloat v10 = *((double *)v8 + 1);
  uint64_t v11 = *(void **)(v3 + 8);
  id v12 = *(char ***)(v3 + 48);
  sub_100C0A39C();
  id v13 = [(id)swift_getObjCClassFromMetadata() preferredFormat];
  uint64_t v14 = static PlaylistCovers.playlistCoverImage(size:backgroundImage:textColor:title:graphicsFormat:)(v11, v12, v1, v2, v13, v9, v10);

  *(void *)(v4 + 56) = v14;
  long long v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100C09E78()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100C09EE8(uint64_t a1)
{
  uint64_t v4 = v1 + 32;
  uint64_t v6 = *(void *)(v1 + 88);
  uint64_t v5 = *(void *)(v1 + 96);
  long long v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  _OWORD v7[4] = v6;
  _OWORD v7[5] = v5;
  v7[2] = a1;
  v7[3] = v4;
  v7[1] = sub_1000154F4;
  return _swift_task_switch(sub_100C09D80, 0, 0);
}

unint64_t sub_100C09FA8()
{
  unint64_t result = qword_1010D0240;
  if (!qword_1010D0240)
  {
    sub_10006389C(&qword_1010D0228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0240);
  }
  return result;
}

void sub_100C0A004(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, void *a8)
{
  if (a2)
  {
  }
}

char *sub_100C0A084(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v4 = a1;
  uint64_t v5 = (char *)_swiftEmptyArrayStorage;
  uint64_t v6 = 32;
  uint64_t v27 = swift_bridgeObjectRetain();
  do
  {
    long long v7 = *(_OWORD *)(v4 + v6 + 16);
    v39[0] = *(_OWORD *)(v4 + v6);
    v39[1] = v7;
    v39[2] = *(_OWORD *)(v4 + v6 + 32);
    uint64_t v40 = *(void *)(v4 + v6 + 48);
    if (*(void *)(a2 + 16))
    {
      sub_100477F64((uint64_t)v39);
      sub_100477F64((uint64_t)v39);
      unint64_t v8 = sub_100AFD020((uint64_t)v39);
      if (v9)
      {
        uint64_t v10 = *(void *)(a2 + 56) + 120 * v8;
        uint64_t v11 = *(void *)(v10 + 8);
        id v12 = *(void **)(v10 + 16);
        id v13 = *(void **)(v10 + 24);
        uint64_t v14 = *(void **)(v10 + 32);
        long long v15 = *(void **)(v10 + 40);
        uint64_t v16 = *(void **)(v10 + 48);
        uint64_t v17 = *(void **)(v10 + 56);
        uint64_t v18 = *(void *)(v10 + 80);
        uint64_t v19 = *(void *)(v10 + 88);
        uint64_t v20 = *(void *)(v10 + 96);
        uint64_t v21 = *(void *)(v10 + 104);
        uint64_t v22 = *(void *)(v10 + 112);
        uint64_t v33 = *(void *)(v10 + 72);
        uint64_t v34 = *(void *)(v10 + 64);
        id v41 = *(void **)v10;
        id v37 = v15;
        uint64_t v38 = v11;
        id v29 = v13;
        double v30 = v12;
        uint64_t v28 = v14;
        double v35 = v17;
        id v36 = v16;
        sub_100477388(v41, v11, v12, v13, v14, v15, v16, v17);
        uint64_t v31 = v19;
        uint64_t v32 = v18;
        sub_10047741C(v18);
        sub_100477FBC((uint64_t)v39);
        sub_100477FBC((uint64_t)v39);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_100AFBBCC(0, *((void *)v5 + 2) + 1, 1, v5);
        }
        unint64_t v24 = *((void *)v5 + 2);
        unint64_t v23 = *((void *)v5 + 3);
        if (v24 >= v23 >> 1) {
          uint64_t v5 = sub_100AFBBCC((char *)(v23 > 1), v24 + 1, 1, v5);
        }
        *((void *)v5 + 2) = v24 + 1;
        uint64_t v25 = &v5[120 * v24];
        *((void *)v25 + 4) = v41;
        *((void *)v25 + 5) = v38;
        *((void *)v25 + 6) = v30;
        *((void *)v25 + 7) = v29;
        uint64_t v4 = v27;
        *((void *)v25 + 8) = v28;
        *((void *)v25 + 9) = v37;
        *((void *)v25 + 10) = v36;
        *((void *)v25 + 11) = v35;
        *((void *)v25 + 12) = v34;
        *((void *)v25 + 13) = v33;
        *((void *)v25 + 14) = v32;
        *((void *)v25 + 15) = v31;
        *((void *)v25 + 16) = v20;
        *((void *)v25 + 17) = v21;
        *((void *)v25 + 18) = v22;
      }
      else
      {
        sub_100477FBC((uint64_t)v39);
        sub_100477FBC((uint64_t)v39);
      }
    }
    v6 += 56;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100C0A2AC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100C0A2E4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1000154F4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1010D0248 + dword_1010D0248);
  return v6(a1, v4);
}

unint64_t sub_100C0A39C()
{
  unint64_t result = qword_1010D0258;
  if (!qword_1010D0258)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010D0258);
  }
  return result;
}

id ProgressiveBlur.makeUIView(context:)(double a1, uint64_t a2, char a3)
{
  uint64_t v5 = (objc_class *)type metadata accessor for ProgressiveBlurView();
  uint64_t v6 = objc_allocWithZone(v5);
  *(double *)&v6[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a1;
  v6[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a3;
  long long v7 = (void *)sub_100C0AE40(a3, 0.0, 0.0, 1.0, 1.0, a1);
  v10.receiver = v6;
  v10.super_class = v5;
  id v8 = [super initWithEffect:v7];

  return v8;
}

id ProgressiveBlurView.__allocating_init(blurRadius:edge:)(char a1, double a2)
{
  uint64_t v5 = objc_allocWithZone(v2);
  *(double *)&v5[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a2;
  v5[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a1;
  uint64_t v6 = (void *)sub_100C0AE40(a1, 0.0, 0.0, 1.0, 1.0, a2);
  v9.receiver = v5;
  v9.super_class = v2;
  id v7 = [super initWithEffect:v6];

  return v7;
}

void ProgressiveBlur.updateUIView(_:context:)(unsigned char *a1, double a2, uint64_t a3, char a4)
{
  uint64_t v5 = OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius;
  *(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a2;
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge;
  a1[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a4;
  [a1 bounds];
  id v11 = (id)sub_100C0AE40(a1[v6], v7, v8, v9, v10, *(double *)&a1[v5]);
  [a1 setEffect:v11];
}

id sub_100C0A5B4()
{
  double v1 = *(double *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  uint64_t v3 = (objc_class *)type metadata accessor for ProgressiveBlurView();
  uint64_t v4 = objc_allocWithZone(v3);
  *(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = v1;
  v4[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = v2;
  uint64_t v5 = (void *)sub_100C0AE40(v2, 0.0, 0.0, 1.0, 1.0, v1);
  v8.receiver = v4;
  v8.super_class = v3;
  id v6 = [super initWithEffect:v5];

  return v6;
}

void sub_100C0A65C(uint64_t a1)
{
  char v2 = *(unsigned char *)(v1 + 8);
  *(void *)(a1 + OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius) = *(void *)v1;
  *(unsigned char *)(a1 + OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge) = v2;
  ProgressiveBlurView.updateEffect()();
}

uint64_t sub_100C0A6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100C0B2E0();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100C0A704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100C0B2E0();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100C0A768()
{
}

double sub_100C0A790(char a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  switch(a1)
  {
    case 1:
      uint64_t v5 = a3();
      break;
    case 2:
      uint64_t v5 = a4();
      break;
    case 3:
      uint64_t v5 = a5();
      break;
    default:
      uint64_t v5 = a2();
      break;
  }
  uint64_t v6 = v5;
  swift_beginAccess();
  return *(double *)v6;
}

id ProgressiveBlurView.init(blurRadius:edge:)(char a1, double a2)
{
  *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius] = a2;
  v2[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge] = a1;
  uint64_t v3 = (void *)sub_100C0AE40(a1, 0.0, 0.0, 1.0, 1.0, a2);
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for ProgressiveBlurView();
  [super initWithEffect:v3];

  return v4;
}

uint64_t type metadata accessor for ProgressiveBlurView()
{
  return self;
}

Swift::Void __swiftcall ProgressiveBlurView.layoutSubviews()()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ProgressiveBlurView();
  [super layoutSubviews];
  [v0 bounds];
  uint64_t v5 = (void *)sub_100C0AE40(v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge], v1, v2, v3, v4, *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius]);
  [v0 setEffect:v5];
}

Swift::Void __swiftcall ProgressiveBlurView.updateEffect()()
{
  [v0 bounds];
  id v5 = (id)sub_100C0AE40(v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_edge], v1, v2, v3, v4, *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI19ProgressiveBlurView_blurRadius]);
  [v0 setEffect:v5];
}

void sub_100C0AA6C(void *a1, char a2, double a3, double a4, double a5, double a6)
{
  id v12 = [objc_allocWithZone((Class)CAGradientLayer) init];
  [v12 setBounds:a3, a4, a5, a6];
  [v12 setStartPoint:sub_100C0A790(a2, (uint64_t (*)(void))CGPoint.topCenter.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.centerLeft.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.centerRight.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.bottomCenter.unsafeMutableAddressor)];
  [v12 setEndPoint:sub_100C0A790(a2, (uint64_t (*)(void))CGPoint.bottomCenter.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.centerRight.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.centerLeft.unsafeMutableAddressor, (uint64_t (*)(void))CGPoint.topCenter.unsafeMutableAddressor)];
  sub_100063814(&qword_1010C94C0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100E251B0;
  uint64_t v14 = self;
  id v15 = [v14 whiteColor];
  id v16 = [v15 colorWithAlphaComponent:0.3];

  id v17 = [v16 CGColor];
  _s3__C7CGColorCMa_1(0);
  uint64_t v19 = v18;
  *(void *)(v13 + 56) = v18;
  *(void *)(v13 + 32) = v17;
  id v20 = [v14 whiteColor];
  id v21 = [v20 colorWithAlphaComponent:0.0];

  id v22 = [v21 CGColor];
  *(void *)(v13 + 88) = v19;
  *(void *)(v13 + 64) = v22;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v12 setColors:isa];

  id v24 = [a1 CGContext];
  [v12 renderInContext:v24];
}

id ProgressiveBlurView.__allocating_init(effect:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithEffect:a1];

  return v3;
}

void ProgressiveBlurView.init(effect:)()
{
}

id ProgressiveBlurView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProgressiveBlurView();
  return [super dealloc];
}

uint64_t sub_100C0AE40(char a1, double a2, double a3, double a4, double a5, double a6)
{
  if (CGRectIsEmpty(*(CGRect *)&a2)) {
    return 0;
  }
  id v12 = [objc_allocWithZone((Class)UIGraphicsImageRendererFormat) init];
  [v12 setScale:1.0];
  [v12 setPreferredRange:2];
  id v13 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithBounds:v12 format:a2, a3, a4, a5];
  uint64_t v14 = swift_allocObject();
  *(double *)(v14 + 16) = a2;
  *(double *)(v14 + 24) = a3;
  *(double *)(v14 + 32) = a4;
  *(double *)(v14 + 40) = a5;
  *(unsigned char *)(v14 + 48) = a1;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_100C0B344;
  *(void *)(v15 + 24) = v14;
  v20[4] = sub_10001A2EC;
  v20[5] = v15;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_10001A278;
  v20[3] = &unk_101012390;
  id v16 = _Block_copy(v20);
  swift_retain();
  swift_release();
  id v17 = [v13 imageWithActions:v16];

  _Block_release(v16);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v12 & 1) == 0)
  {
    if (v17)
    {
      id v19 = [self _effectWithVariableBlurRadius:v17 imageMask:a6 scale:1.0];

      return (uint64_t)v19;
    }
    return 0;
  }
  __break(1u);
  return result;
}

unint64_t sub_100C0B098()
{
  unint64_t result = qword_1010D0270;
  if (!qword_1010D0270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0270);
  }
  return result;
}

unint64_t sub_100C0B0F0()
{
  unint64_t result = qword_1010D0278;
  if (!qword_1010D0278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0278);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ProgressiveBlur(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ProgressiveBlur(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProgressiveBlur()
{
  return &type metadata for ProgressiveBlur;
}

unsigned char *storeEnumTagSinglePayload for ProgressiveBlurView.Edge(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100C0B2A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ProgressiveBlurView.Edge()
{
  return &type metadata for ProgressiveBlurView.Edge;
}

unint64_t sub_100C0B2E0()
{
  unint64_t result = qword_1010D02A8;
  if (!qword_1010D02A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D02A8);
  }
  return result;
}

uint64_t sub_100C0B334()
{
  return swift_deallocObject();
}

void sub_100C0B344(void *a1)
{
  sub_100C0AA6C(a1, *(unsigned char *)(v1 + 48), *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40));
}

uint64_t sub_100C0B354()
{
  return swift_deallocObject();
}

char *QRCodeOverlayViewController.__allocating_init(qrCode:title:subtitle:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return QRCodeOverlayViewController.init(qrCode:title:subtitle:)(a1);
}

void sub_100C0B3C8()
{
  qword_10112CDC8 = Int.seconds.getter(10);
}

void sub_100C0B3EC()
{
  qword_10112CDD0 = Int.seconds.getter(20);
}

void sub_100C0B410()
{
  qword_10112CDD8 = Int.seconds.getter(22);
}

void sub_100C0B434()
{
  qword_10112CDE0 = Int.seconds.getter(350);
}

void sub_100C0B458()
{
  qword_10112CDE8 = Int.seconds.getter(90);
}

void sub_100C0B47C()
{
  qword_10112CDF0 = Int.seconds.getter(33);
}

void sub_100C0B4A0()
{
  qword_10112CDF8 = Int.seconds.getter(4);
}

void sub_100C0B4C4()
{
  qword_10112CE00 = Int.seconds.getter(10);
}

id sub_100C0B4E8()
{
  id result = [self effectWithStyle:18];
  qword_10112CE08 = (uint64_t)result;
  return result;
}

char *QRCodeOverlayViewController.init(qrCode:title:subtitle:)(void *a1)
{
  swift_getObjectType();
  uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView;
  id v4 = objc_allocWithZone((Class)UIVisualEffectView);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  type metadata accessor for QRCodeOverlayViewController.ContainerView();
  *(void *)&v5[v6] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v7 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [self _systemImageNamed:v9];

  id v11 = [objc_allocWithZone((Class)UIImageView) initWithImage:v10];
  *(void *)&v5[v8] = v11;
  uint64_t v12 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
  *(void *)&v5[v12] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v13 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
  if (qword_1010C87A0 != -1) {
    swift_once();
  }
  id v14 = [self effectForBlurEffect:qword_10112CE08];
  id v15 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v14];

  *(void *)&v5[v13] = v15;
  uint64_t v16 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
  *(void *)&v5[v16] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView] = 0;
  uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
  *(void *)&v5[v17] = [objc_allocWithZone((Class)UIScrollView) init];
  uint64_t v18 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
  *(void *)&v5[v18] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager] = 0;
  if (a1[4] == 76)
  {
    QRCode.with(errorCorrectionLevel:)(77, (uint64_t)v39);
    uint64_t v20 = v39[0];
    uint64_t v19 = v39[1];
    uint64_t v22 = v39[2];
    uint64_t v21 = v39[3];
    uint64_t v23 = v39[4];
    sub_100C0E764((uint64_t)v39, (uint64_t)v40);
    if (!v41)
    {
      uint64_t v22 = a1[2];
      uint64_t v21 = a1[3];
      uint64_t v20 = *a1;
      uint64_t v19 = a1[1];
      sub_100BC1600(a1);
      uint64_t v23 = 76;
    }
    id v24 = &v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    *(void *)id v24 = v20;
    *((void *)v24 + 1) = v19;
    *((void *)v24 + 2) = v22;
    *((void *)v24 + 3) = v21;
    *((void *)v24 + 4) = v23;
  }
  else
  {
    uint64_t v25 = &v5[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    uint64_t v26 = a1[4];
    long long v27 = *((_OWORD *)a1 + 1);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)a1;
    *((_OWORD *)v25 + 1) = v27;
    *((void *)v25 + 4) = v26;
    sub_100BC1600(a1);
  }

  v38.receiver = v5;
  v38.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  uint64_t v28 = (char *)[super initWithNibName:0 bundle:0];
  id v29 = *(void **)&v28[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel];
  double v30 = v28;
  id v31 = v29;
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v31 setText:v32];

  id v33 = *(id *)&v30[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel];
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v33 setText:v34];

  sub_100063814(&qword_1010CAAA0);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_100E251D0;
  *(void *)(v35 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v35 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  id v36 = v30;
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  sub_100C0E730(a1);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v36;
}

uint64_t type metadata accessor for QRCodeOverlayViewController.ContainerView()
{
  return self;
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  v41.receiver = v0;
  v41.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  [super viewDidLoad];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = v2;
  id v4 = self;
  id v5 = [v4 clearColor];
  [v3 setBackgroundColor:v5];

  id v6 = [v1 navigationItem];
  sub_100057778(0, &qword_1010D0310);
  sub_100057778(0, &qword_1010CAC68);
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v42.value.super.super.Class isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v42.is_nil = 0;
  Class isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v42, v43).super.super.isa;
  [v6 setLeftBarButtonItem:isa 0 0 0 sub_100C0E804 v7];

  id v9 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"dismissAnimated"];
  id v10 = [v1 view];
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v11 = v10;
  id v39 = v9;
  [v10 addGestureRecognizer:v9];

  uint64_t v12 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  uint64_t v13 = *(char **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
  uint64_t v40 = &v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
  id v14 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 24];
  uint64_t v15 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image;
  uint64_t v16 = *(void **)&v13[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image];
  *(void *)&v13[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = v14;
  id v17 = v14;
  uint64_t v18 = v13;

  [*(id *)&v18[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView] setImage:*(void *)&v13[v15]];
  uint64_t v38 = v12;
  [*(id *)&v1[v12] setAlpha:0.0];
  uint64_t v37 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
  [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView] setContentMode:1];
  uint64_t v19 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
  uint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel];
  sub_100057778(0, (unint64_t *)&qword_1010C8930);
  id v21 = v20;
  uint64_t v22 = (void *)static UIFont.preferredFont(forTextStyle:weight:)();
  [v21 setFont:v22];

  id v23 = *(id *)&v1[v19];
  id v24 = [v4 whiteColor];
  [v23 setTextColor:v24];

  [*(id *)&v1[v19] setTextAlignment:1];
  [*(id *)&v1[v19] setNumberOfLines:0];
  [*(id *)&v1[v19] setAlpha:0.0];
  [*(id *)&v1[v19] setAdjustsFontForContentSizeCategory:1];
  uint64_t v25 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
  uint64_t v26 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel];
  long long v27 = self;
  id v28 = v26;
  id v29 = [v27 preferredFontForTextStyle:UIFontTextStyleBody];
  [v28 setFont:v29];

  [*(id *)&v1[v25] setTextAlignment:1];
  [*(id *)&v1[v25] setNumberOfLines:0];
  [*(id *)&v1[v25] setAlpha:0.0];
  [*(id *)&v1[v25] setAdjustsFontForContentSizeCategory:1];
  uint64_t v30 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
  id v31 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer];
  id v32 = [v4 blackColor];
  id v33 = [v32 CGColor];

  [v31 setFillColor:v33];
  [*(id *)&v1[v30] setFillRule:kCAFillRuleNonZero];
  [*(id *)&v1[v30] setCompositingFilter:kCAFilterDestOut];
  if (*((void *)v40 + 4) != 76)
  {
    id v34 = [*(id *)&v1[v38] layer];
    [v34 addSublayer:*(void *)&v1[v30]];

    [*(id *)&v1[v38] addSubview:*(void *)&v1[v37]];
  }
  id v35 = [v1 view];
  if (v35)
  {
    id v36 = v35;
    [v35 addSubview:*(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView]];

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100C0BF60()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    QRCodeOverlayViewController.dismissAnimated()();
  }
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewIsAppearing(_:)(Swift::Bool a1)
{
  id v2 = v1;
  sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin();
  id v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (objc_class *)type metadata accessor for QRCodeOverlayViewController();
  v38.receiver = v2;
  v38.super_class = v6;
  [super viewIsAppearing:a1];
  id v7 = [v2 traitCollection];
  id v8 = [v7 userInterfaceIdiom];

  if (v8 != (id)3)
  {
    id v20 = [objc_allocWithZone((Class)UIView) init];
    id v21 = self;
    id v22 = [v21 whiteColor];
    [v20 setBackgroundColor:v22];

    static UIView.Corner.value(_:continuous:)();
    uint64_t v23 = type metadata accessor for UIView.Corner();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v5, 0, 1, v23);
    UIView.corner.setter();
    [v20 setClipsToBounds:1];
    [v20 setAlpha:0.0];
    uint64_t v24 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
    [v20 addSubview:*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView]];
    uint64_t v25 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView];
    *(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView] = v20;
    id v26 = v20;

    id v27 = [*(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView] contentView];
    uint64_t v28 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
    [v27 addSubview:*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView]];

    uint64_t v29 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
    [*(id *)&v2[v28] addSubview:*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView]];
    [*(id *)&v2[v29] addSubview:v26];
    [*(id *)&v2[v29] addSubview:*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel]];
    uint64_t v30 = *(void **)&v2[v29];
    uint64_t v31 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
    [v30 addSubview:*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView]];
    id v32 = [*(id *)&v2[v31] contentView];
    [v32 addSubview:*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel]];

    id v33 = (char *)*(id *)&v2[v24];
    id v34 = [v21 blackColor];
    id v35 = *(void **)&v33[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
    *(void *)&v33[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = v34;
    id v36 = v34;

    sub_100C0E040();
    id v37 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView];
    id v19 = [v21 blackColor];
    [v37 setTintColor:v19];

    goto LABEL_5;
  }
  uint64_t v9 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  id v10 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
  id v11 = self;
  uint64_t v12 = v10;
  id v13 = [v11 whiteColor];
  id v14 = *(void **)&v12[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
  *(void *)&v12[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = v13;
  id v15 = v13;

  sub_100C0E040();
  id v16 = *(id *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView];
  id v17 = [v11 whiteColor];
  [v16 setTintColor:v17];

  id v18 = [v2 view];
  if (v18)
  {
    id v19 = v18;
    [v18 addSubview:*(void *)&v2[v9]];
LABEL_5:

    return;
  }
  __break(1u);
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  id v2 = v1;
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  [super viewDidAppear:a1];
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager;
  if (*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager])
  {
LABEL_2:
    id v5 = self;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v2;
    _OWORD v14[4] = sub_100C0E80C;
    _OWORD v14[5] = v6;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    _OWORD v14[2] = sub_100020238;
    v14[3] = &unk_101012408;
    id v7 = _Block_copy(v14);
    id v8 = v2;
    swift_release();
    [v5 animateWithDuration:v7 animations:0.25];
    _Block_release(v7);
    return;
  }
  id v9 = [v2 view];
  if (v9)
  {
    id v10 = v9;
    id v11 = [v9 window];

    if (v11)
    {
      id v12 = [v11 windowScene];

      if (v12)
      {
        type metadata accessor for BrightnessManager();
        swift_allocObject();
        id v13 = v12;
        *(void *)&v2[v4] = BrightnessManager.init(windowScene:)(v13);

        swift_release();
      }
    }
    goto LABEL_2;
  }
  __break(1u);
}

void sub_100C0C654(uint64_t a1)
{
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView) setAlpha:1.0];
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView) setAlpha:1.0];
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel) setAlpha:1.0];
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel) setAlpha:1.0];
  uint64_t v2 = qword_1010C87A0;
  id v3 = *(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView);
  if (v2 != -1) {
    swift_once();
  }
  [v3 setEffect:qword_10112CE08];

  if (*(void *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager))
  {
    swift_retain();
    BrightnessManager.increaseBrightnessIfNeeded()();
    swift_release();
  }
}

Swift::Void __swiftcall QRCodeOverlayViewController.viewDidLayoutSubviews()()
{
  uint64_t v1 = v0;
  v175.receiver = v0;
  v175.super_class = (Class)type metadata accessor for QRCodeOverlayViewController();
  [super viewDidLayoutSubviews];
  id v2 = [v0 traitCollection];
  id v3 = [v2 userInterfaceIdiom];

  id v4 = [v1 view];
  id v5 = v4;
  if (v3 == (id)3)
  {
    if (!v4)
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    id v6 = [v4 safeAreaLayoutGuide];

    [v6 layoutFrame];
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;

    if (qword_1010C8760 != -1) {
      swift_once();
    }
    long long v15 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 16];
    long long v178 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    long long v179 = v15;
    uint64_t v180 = *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 32];
    sub_100BC1600(&v178);
    if (qword_1010C8778 != -1) {
      swift_once();
    }
    v193.origin.CGFloat x = v8;
    v193.origin.CGFloat y = v10;
    v193.size.CGFloat width = v12;
    v193.size.CGFloat height = v14;
    CGRectGetWidth(v193);
    v194.origin.CGFloat x = v8;
    v194.origin.CGFloat y = v10;
    v194.size.CGFloat width = v12;
    v194.size.CGFloat height = v14;
    CGRectGetHeight(v194);
    id v16 = [v1 traitCollection];
    [v16 displayScale];

    double v17 = QRCode.dotAdjustedWidth(with:scale:)();
    sub_100C0E730(&v178);
    id v18 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
    id v19 = [v1 traitCollection];
    [v19 displayScale];

    double v169 = v17;
    CGRect.centeringAlong(axes:bounds:scale:)();
  }
  else
  {
    if (!v4)
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    [v4 bounds];
    double v21 = v20;
    double v23 = v22;
    double v25 = v24;
    double v27 = v26;

    if (qword_1010C8768 != -1) {
      swift_once();
    }
    if (qword_1010C8770 != -1) {
      swift_once();
    }
    long long v28 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 16];
    long long v178 = *(_OWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
    long long v179 = v28;
    uint64_t v180 = *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 32];
    sub_100BC1600(&v178);
    if (qword_1010C8778 != -1) {
      swift_once();
    }
    v195.origin.CGFloat x = v21;
    v195.origin.CGFloat y = v23;
    v195.size.CGFloat width = v25;
    v195.size.CGFloat height = v27;
    CGRectGetWidth(v195);
    v196.origin.CGFloat x = v21;
    v196.origin.CGFloat y = v23;
    v196.size.CGFloat width = v25;
    v196.size.CGFloat height = v27;
    CGRectGetHeight(v196);
    id v29 = [v1 traitCollection];
    [v29 displayScale];

    double v30 = QRCode.dotAdjustedWidth(with:scale:)();
    sub_100C0E730(&v178);
    double v31 = *(double *)&qword_10112CDD8;
    v197.origin.CGFloat x = v21;
    v197.origin.CGFloat y = v23;
    v197.size.CGFloat width = v25;
    v197.size.CGFloat height = v27;
    double Width = CGRectGetWidth(v197);
    id v33 = [v1 view];
    if (!v33) {
      goto LABEL_40;
    }
    id v34 = v33;
    [v33 safeAreaInsets];
    double v36 = v35;

    id v37 = [v1 view];
    if (!v37)
    {
LABEL_41:
      __break(1u);
      return;
    }
    objc_super v38 = v37;
    double v172 = v30;
    double v39 = v30 + v31 + v31;
    [v37 safeAreaInsets];

    double v40 = sub_10003B5C8(v21, v23, v25, v27, v36, (Width - v39) * 0.5);
    double v42 = v41;
    double v44 = v43;
    double v46 = v45;
    uint64_t v47 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel] sizeThatFits:v43, v45];
    double v49 = v48;
    uint64_t v50 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel] sizeThatFits:v44, v46];
    double v52 = v51;
    if (qword_1010C8788 != -1) {
      swift_once();
    }
    double v171 = v49;
    double v53 = v49 + v39 + *(double *)&qword_10112CDF0;
    if (qword_1010C8790 != -1) {
      swift_once();
    }
    double v54 = v52 + v53 + *(double *)&qword_10112CDF8;
    if (qword_1010C8798 != -1) {
      swift_once();
    }
    double v55 = v54 + *(double *)&qword_10112CE00 + *(double *)&qword_10112CE00;
    v198.origin.CGFloat x = v40;
    v198.origin.CGFloat y = v42;
    v198.size.CGFloat width = v44;
    v198.size.CGFloat height = v46;
    double v56 = CGRectGetWidth(v198);
    uint64_t v57 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView] setFrame:v40, v42, v44, v46];
    [*(id *)&v1[v57] setContentSize:v56, v55];
    v199.origin.CGFloat x = v40;
    v199.origin.CGFloat y = v42;
    v199.size.CGFloat width = v44;
    v199.size.CGFloat height = v46;
    CGRectGetHeight(v199);
    long long v58 = *(void **)&v1[v57];
    id v59 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView];
    id v60 = v58;
    CGRect.centeringAlong(axes:in:)();
    double v62 = v61;
    double v64 = v63;
    double v66 = v65;
    double v68 = v67;

    [v59 setFrame:v62, v64, v66, v68];
    uint64_t v69 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView] bounds];
    CGFloat rect = v70;
    double v72 = v71;
    CGFloat v74 = v73;
    double v76 = v75;
    uint64_t v77 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView;
    id v78 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView];
    if (v78)
    {
      uint64_t v79 = *(void **)&v1[v69];
      id v80 = v78;
      id v81 = v79;
      CGRect.centeringAlong(axes:in:)();
      double v83 = v82;
      double v85 = v84;
      double v87 = v86;
      double v89 = v88;

      [v80 setFrame:v83, v85, v87, v89];
      double v90 = *(void **)&v1[v77];
    }
    else
    {
      double v90 = 0;
    }
    double v91 = v72 + v39 + *(double *)&qword_10112CDF0;
    CGRect v92 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView];
    double v170 = v76 - (v39 + *(double *)&qword_10112CDF0);
    id v93 = v92;
    if (v90) {
      [v90 bounds];
    }
    id v94 = [v1 traitCollection];
    [v94 displayScale];

    CGRect.centeringAlong(axes:bounds:scale:)();
    [v92 setFrame:*(void *)&v172];

    id v95 = *(id *)&v1[v47];
    v200.origin.CGFloat x = rect;
    v200.origin.CGFloat y = v91;
    v200.size.CGFloat width = v74;
    v200.size.CGFloat height = v170;
    CGRectGetMinY(v200);
    id v96 = *(id *)&v1[v69];
    CGRect.centeringAlong(axes:in:)();
    double v98 = v97;
    double v100 = v99;
    double v102 = v101;
    double v104 = v103;

    [v95 setFrame:v98, v100, v102, v104];
    CGFloat v105 = v170 - (v171 + *(double *)&qword_10112CDF8);
    CGFloat v106 = v91 + v171 + *(double *)&qword_10112CDF8;
    uint64_t v107 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
    id v108 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView];
    v201.origin.CGFloat x = rect;
    v201.origin.CGFloat y = v106;
    v201.size.CGFloat width = v74;
    v201.size.CGFloat height = v105;
    CGRectGetMinY(v201);
    id v109 = *(id *)&v1[v69];
    CGRect.centeringAlong(axes:in:)();
    double v111 = v110;
    double v113 = v112;
    double v115 = v114;
    double v117 = v116;

    [v108 setFrame:v111, v113, v115, v117];
    long long v118 = *(void **)&v1[v107];
    id v18 = *(id *)&v1[v50];
    [v118 bounds];
  }
  [v18 setFrame:*(void *)&v169];

  id v119 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView];
  id v120 = [v1 view];
  if (!v120)
  {
    __break(1u);
    goto LABEL_38;
  }
  long long v121 = v120;
  [v120 bounds];
  double v123 = v122;
  double v125 = v124;
  double v127 = v126;
  double v129 = v128;

  [v119 setFrame:v123, v125, v127, v129];
  uint64_t v130 = &v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode];
  if (*(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCode + 32] != 76)
  {
    uint64_t v131 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView] frame];
    double v132 = CGRectGetWidth(v202) * 0.3;
    if (qword_1010C8780 != -1) {
      swift_once();
    }
    if (*(double *)&qword_10112CDE8 < v132) {
      double v132 = *(double *)&qword_10112CDE8;
    }
    id v133 = *(id *)&v1[v131];
    CGRect.centeringAlong(axes:in:)();
    double v135 = v134;
    double v137 = v136;
    double v139 = v138;
    double v141 = v140;

    uint64_t v142 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView] setFrame:v135, v137, v139, v141];
    CGAffineTransformMakeScale(&v174, v132 / *(double *)&qword_10112CDE8, v132 / *(double *)&qword_10112CDE8);
    CGFloat a = v174.a;
    CGFloat b = v174.b;
    CGFloat c = v174.c;
    CGFloat d = v174.d;
    tCGFloat x = v174.tx;
    tCGFloat y = v174.ty;
    long long v149 = *((_OWORD *)v130 + 1);
    v176[0] = *(_OWORD *)v130;
    v176[1] = v149;
    uint64_t v177 = *((void *)v130 + 4);
    sub_100063814(&qword_1010D0330);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100E338C0;
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v181.CGFloat x = 12.0;
    v181.CGFloat y = 15.0;
    *(CGPoint *)(inited + 32) = CGPointApplyAffineTransform(v181, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v182.CGFloat x = 12.0;
    v182.CGFloat y = 6.0;
    *(CGPoint *)(inited + 48) = CGPointApplyAffineTransform(v182, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v183.CGFloat y = 6.0;
    v183.CGFloat x = 36.0;
    *(CGPoint *)(inited + 64) = CGPointApplyAffineTransform(v183, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v184.CGFloat y = 0.0;
    v184.CGFloat x = 36.0;
    *(CGPoint *)(inited + 80) = CGPointApplyAffineTransform(v184, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v185.CGFloat y = 0.0;
    v185.CGFloat x = 85.0;
    *(CGPoint *)(inited + 96) = CGPointApplyAffineTransform(v185, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v186.CGFloat x = 85.0;
    v186.CGFloat y = 90.0;
    *(CGPoint *)(inited + 112) = CGPointApplyAffineTransform(v186, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v187.CGFloat x = 36.0;
    v187.CGFloat y = 90.0;
    *(CGPoint *)(inited + 128) = CGPointApplyAffineTransform(v187, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v188.CGFloat x = 36.0;
    v188.CGFloat y = 95.0;
    *(CGPoint *)(inited + 144) = CGPointApplyAffineTransform(v188, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v189.CGFloat x = 0.0;
    v189.CGFloat y = 95.0;
    *(CGPoint *)(inited + 160) = CGPointApplyAffineTransform(v189, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v190.CGFloat x = 0.0;
    v190.CGFloat y = 57.0;
    *(CGPoint *)(inited + 176) = CGPointApplyAffineTransform(v190, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v191.CGFloat x = 12.0;
    v191.CGFloat y = 57.0;
    *(CGPoint *)(inited + 192) = CGPointApplyAffineTransform(v191, &v174);
    v174.CGFloat a = a;
    v174.CGFloat b = b;
    v174.CGFloat c = c;
    v174.CGFloat d = d;
    v174.tCGFloat x = tx;
    v174.tCGFloat y = ty;
    v192.CGFloat x = 12.0;
    v192.CGFloat y = 15.0;
    *(CGPoint *)(inited + 208) = CGPointApplyAffineTransform(v192, &v174);
    uint64_t v151 = *(void **)&v1[v142];
    sub_100BC1600(v176);
    [v151 frame];
    CGFloat v153 = v152;
    CGFloat v155 = v154;
    CGFloat v157 = v156;
    CGFloat v159 = v158;
    [*(id *)&v1[v131] bounds];
    CGMutablePathRef v164 = QRCode.dotAlignedPath(with:in:imageBounds:)(inited, v153, v155, v157, v159, v160, v161, v162, v163);
    swift_setDeallocating();
    sub_100C0E730(v176);
    uint64_t v165 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
    [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer] setPath:v164];
    uint64_t v166 = *(void **)&v1[v165];
    uint64_t v167 = *(void **)&v1[v131];
    id v168 = v166;
    [v167 bounds];
    [v168 setFrame:];
  }
}

Swift::Void __swiftcall QRCodeOverlayViewController.dismissAnimated()()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  CGFloat v12 = sub_100C0E814;
  uint64_t v13 = v2;
  CGFloat v8 = _NSConcreteStackBlock;
  uint64_t v9 = 1107296256;
  CGFloat v10 = sub_100020238;
  double v11 = &unk_101012458;
  id v3 = _Block_copy(&v8);
  id v4 = v0;
  swift_release();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  CGFloat v12 = sub_100C0E854;
  uint64_t v13 = v5;
  CGFloat v8 = _NSConcreteStackBlock;
  uint64_t v9 = 1107296256;
  CGFloat v10 = sub_1001695E8;
  double v11 = &unk_1010124A8;
  id v6 = _Block_copy(&v8);
  id v7 = v4;
  swift_release();
  [v1 animateWithDuration:v3 animations:v6 completion:0.25];
  _Block_release(v6);
  _Block_release(v3);
}

id sub_100C0D7CC(uint64_t a1)
{
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView) setAlpha:0.0];
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView) setAlpha:0.0];
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel) setAlpha:0.0];
  [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel) setAlpha:0.0];
  id result = [*(id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView) setEffect:0];
  if (*(void *)(a1 + OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager))
  {
    swift_retain();
    BrightnessManager.resetBrightnessToSystemDefault()();
    return (id)swift_release();
  }
  return result;
}

void QRCodeOverlayViewController.init(nibName:bundle:)()
{
}

id QRCodeOverlayViewController.__deallocating_deinit()
{
  return sub_100C0E260(type metadata accessor for QRCodeOverlayViewController);
}

char *sub_100C0DA64(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  *(void *)&v4[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = 0;
  *(void *)&v4[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = 0;
  uint64_t v10 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView;
  id v11 = objc_allocWithZone((Class)UIImageView);
  CGFloat v12 = v5;
  id v13 = [v11 init];
  id v14 = UIView.forAutolayout.getter();

  *(void *)&v5[v10] = v14;
  uint64_t v15 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer;
  *(void *)&v12[v15] = [objc_allocWithZone((Class)CALayer) init];

  id v16 = (objc_class *)type metadata accessor for QRCodeOverlayViewController.ContainerView();
  v40.receiver = v12;
  v40.super_class = v16;
  double v17 = (char *)objc_msgSendSuper2(&v40, "initWithFrame:", a1, a2, a3, a4);
  uint64_t v18 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView;
  uint64_t v19 = *(void *)&v17[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView];
  double v20 = v17;
  [v20 addSubview:v19];
  double v21 = self;
  sub_100063814(&qword_1010C9B10);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100E251E0;
  id v23 = [*(id *)&v17[v18] leadingAnchor];
  id v24 = [v20 leadingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v22 + 32) = v25;
  id v26 = [*(id *)&v17[v18] trailingAnchor];
  id v27 = [v20 trailingAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v22 + 40) = v28;
  id v29 = [*(id *)&v17[v18] topAnchor];
  id v30 = [v20 topAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v22 + 48) = v31;
  id v32 = [*(id *)&v17[v18] bottomAnchor];
  id v33 = [v20 bottomAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v22 + 56) = v34;
  specialized Array._endMutation()();
  sub_100057778(0, &qword_1010CA7D8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v21 activateConstraints:isa, v22];

  sub_100057778(0, &qword_1010C9478);
  double v36 = v20;
  static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  _OWORD v39[3] = v16;
  v39[0] = v36;
  id v37 = v36;
  UIView.registerForTraitChanges(_:target:action:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  sub_1000760E4((uint64_t)v39);
  return v37;
}

Swift::Void __swiftcall QRCodeOverlayViewController.ContainerView.layoutSubviews()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QRCodeOverlayViewController.ContainerView();
  [super layoutSubviews];
  sub_100057778(0, &qword_1010D0338);
  *(void *)(swift_allocObject() + 16) = v0;
  id v1 = v0;
  static CATransaction.performWithoutAnimation(_:)((void (*)(id))sub_100C0E86C);
  swift_release();
}

void sub_100C0DF0C(uint64_t a1)
{
  id v1 = *(void **)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView);
  id v2 = *(id *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer);
  [v1 bounds];
  [v2 setFrame:];
}

void sub_100C0E040()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
  if (v1)
  {
    uint64_t v2 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer;
    id v3 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer];
    uint64_t v4 = kCAFilterSourceIn;
    id v13 = v1;
    [v3 setCompositingFilter:v4];
    id v5 = *(id *)&v0[v2];
    id v6 = [v0 traitCollection];
    id v7 = [v13 resolvedColorWithTraitCollection:v6];

    id v8 = [v7 CGColor];
    [v5 setBackgroundColor:v8];

    id v9 = [*(id *)&v0[v2] superlayer];
    if (!v9)
    {
      id v10 = [*(id *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView] layer];
      id v11 = *(id *)&v0[v2];
      [v10 addSublayer:v11];
    }
  }
  else
  {
    CGFloat v12 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer];
    [v12 removeFromSuperlayer];
  }
}

id QRCodeOverlayViewController.ContainerView.__deallocating_deinit()
{
  return sub_100C0E260(type metadata accessor for QRCodeOverlayViewController.ContainerView);
}

id sub_100C0E260(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t QRCodeOverlayViewController.ImageViewRepresentable.init(image:)()
{
  return swift_getKeyPath();
}

char *QRCodeOverlayViewController.ImageViewRepresentable.makeUIView(context:)(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  type metadata accessor for QRCodeOverlayViewController.ContainerView();
  id v7 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v8 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image;
  id v9 = *(void **)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image];
  *(void *)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = a4;
  id v10 = a4;

  [*(id *)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView] setImage:*(void *)&v7[v8]];
  Border.color.getter(a2, a3 & 1);
  uint64_t v11 = sub_100B6F00C(a2, a3 & 1);
  j__swift_release_0();
  if (v11)
  {
    sub_100057778(0, (unint64_t *)&qword_1010D0F70);
    swift_retain();
    CGFloat v12 = (void *)UIColor.init(_:)();
    id v13 = *(void **)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor];
    *(void *)&v7[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = v12;
    id v14 = v12;

    sub_100C0E040();
    swift_release();
  }
  return v7;
}

void QRCodeOverlayViewController.ImageViewRepresentable.updateUIView(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v8 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image;
  id v9 = *(void **)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image);
  *(void *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image) = a5;
  id v10 = a5;

  [*(id *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView) setImage:*(void *)(a1 + v8)];
  uint64_t v11 = a4 & 1;
  Border.color.getter(a3, v11);
  uint64_t v12 = sub_100B6F00C(a3, v11);
  j__swift_release_0();
  if (v12)
  {
    sub_100057778(0, (unint64_t *)&qword_1010D0F70);
    swift_retain();
    id v13 = (void *)UIColor.init(_:)();
    id v14 = *(void **)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor);
    *(void *)(a1 + OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor) = v13;
    id v15 = v13;

    sub_100C0E040();
    swift_release();
  }
}

char *sub_100C0E590(uint64_t a1)
{
  return QRCodeOverlayViewController.ImageViewRepresentable.makeUIView(context:)(a1, *(void *)v1, *(unsigned char *)(v1 + 8), *(void **)(v1 + 16));
}

void sub_100C0E5A8(uint64_t a1, uint64_t a2)
{
  QRCodeOverlayViewController.ImageViewRepresentable.updateUIView(_:context:)(a1, a2, *(void *)v2, *(unsigned char *)(v2 + 8), *(void **)(v2 + 16));
}

uint64_t sub_100C0E5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100C0ED7C();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100C0E624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100C0ED7C();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100C0E688()
{
}

uint64_t type metadata accessor for QRCodeOverlayViewController()
{
  return self;
}

void sub_100C0E6D4(void *a1)
{
  id v1 = [a1 view];
  if (v1)
  {
    id v2 = v1;
    [v1 setNeedsLayout];
  }
  else
  {
    __break(1u);
  }
}

void *sub_100C0E730(void *a1)
{
  id v2 = (void *)a1[3];
  sub_10007A5C4(a1[1], a1[2]);

  return a1;
}

uint64_t sub_100C0E764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814((uint64_t *)&unk_1010CE490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C0E7CC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100C0E804()
{
}

void sub_100C0E80C()
{
  sub_100C0C654(*(void *)(v0 + 16));
}

id sub_100C0E814()
{
  return sub_100C0D7CC(*(void *)(v0 + 16));
}

uint64_t sub_100C0E81C()
{
  return swift_deallocObject();
}

id sub_100C0E854()
{
  return [*(id *)(v0 + 16) dismissViewControllerAnimated:0 completion:0];
}

void sub_100C0E86C()
{
  sub_100C0DF0C(*(void *)(v0 + 16));
}

unint64_t sub_100C0E87C()
{
  unint64_t result = qword_1010D0340;
  if (!qword_1010D0340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0340);
  }
  return result;
}

void destroy for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t a1)
{
  j__swift_release_0();
  id v2 = *(void **)(a1 + 16);
}

uint64_t _s11MusicCoreUI27QRCodeOverlayViewControllerC22ImageViewRepresentableVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unsigned __int8 v5 = *((unsigned char *)a2 + 8);
  Border.color.getter(*a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  unint64_t v6 = (void *)a2[2];
  *(void *)(a1 + 16) = v6;
  id v7 = v6;
  return a1;
}

uint64_t assignWithCopy for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unsigned __int8 v5 = *((unsigned char *)a2 + 8);
  Border.color.getter(*a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  j__swift_release_0();
  unint64_t v6 = (void *)a2[2];
  id v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v6;
  id v8 = v6;

  return a1;
}

uint64_t assignWithTake for QRCodeOverlayViewController.ImageViewRepresentable(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  j__swift_release_0();
  unsigned __int8 v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for QRCodeOverlayViewController.ImageViewRepresentable()
{
  return &type metadata for QRCodeOverlayViewController.ImageViewRepresentable;
}

void sub_100C0EA3C()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_backgroundView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIVisualEffectView) init];
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeView;
  type metadata accessor for QRCodeOverlayViewController.ContainerView();
  *(void *)&v0[v2] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_destOutLayer;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_logoView;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [self _systemImageNamed:v5];

  id v7 = [objc_allocWithZone((Class)UIImageView) initWithImage:v6];
  *(void *)&v0[v4] = v7;
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_titleLabel;
  *(void *)&v0[v8] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v9 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabelEffectView;
  if (qword_1010C87A0 != -1) {
    swift_once();
  }
  id v10 = [self effectForBlurEffect:qword_10112CE08];
  id v11 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v10];

  *(void *)&v0[v9] = v11;
  uint64_t v12 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_subtitleLabel;
  *(void *)&v0[v12] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_qrCodeBackgroundView] = 0;
  uint64_t v13 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollView;
  *(void *)&v0[v13] = [objc_allocWithZone((Class)UIScrollView) init];
  uint64_t v14 = OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_scrollContentView;
  *(void *)&v0[v14] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI27QRCodeOverlayViewController_brightnessManager] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100C0ECA0()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_image] = 0;
  *(void *)&v0[OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayColor] = 0;
  uint64_t v2 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_imageView;
  id v3 = [objc_allocWithZone((Class)UIImageView) init];
  id v4 = UIView.forAutolayout.getter();

  *(void *)&v1[v2] = v4;
  uint64_t v5 = OBJC_IVAR____TtCC11MusicCoreUI27QRCodeOverlayViewController13ContainerView_overlayLayer;
  *(void *)&v1[v5] = [objc_allocWithZone((Class)CALayer) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

unint64_t sub_100C0ED7C()
{
  unint64_t result = qword_1010D03A0;
  if (!qword_1010D03A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D03A0);
  }
  return result;
}

uint64_t Radiosity.ViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  uint64_t v6 = sub_100063814(&qword_1010D03A8) - 8;
  __chkstk_darwin();
  uint64_t v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32[0] = v2[8];
  sub_100063814(&qword_1010CC190);
  State.wrappedValue.getter();
  long long v9 = v2[5];
  long long v11 = v2[3];
  long long v35 = v2[4];
  long long v10 = v35;
  long long v36 = v9;
  long long v12 = v2[5];
  long long v13 = v2[7];
  long long v37 = v2[6];
  long long v14 = v37;
  long long v38 = v13;
  long long v15 = v2[1];
  long long v16 = v2[3];
  long long v33 = v2[2];
  long long v17 = v33;
  long long v34 = v16;
  long long v18 = *v2;
  long long v19 = v2[1];
  v8[*(int *)(v6 + 48)] = v31[15];
  long long v20 = *v2;
  v32[0] = v18;
  v32[1] = v19;
  double v21 = &v8[*(int *)(v6 + 44)];
  v21[4] = v10;
  v21[5] = v12;
  long long v22 = v2[7];
  v21[6] = v14;
  v21[7] = v22;
  *double v21 = v20;
  v21[1] = v15;
  void v21[2] = v17;
  v21[3] = v11;
  uint64_t v23 = sub_100063814(&qword_1010D03B0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v8, a1, v23);
  id v24 = (_OWORD *)swift_allocObject();
  long long v25 = v3[7];
  v24[7] = v3[6];
  v24[8] = v25;
  v24[9] = v3[8];
  long long v26 = v3[3];
  v24[3] = v3[2];
  void v24[4] = v26;
  long long v27 = v3[5];
  v24[5] = v3[4];
  v24[6] = v27;
  long long v28 = v3[1];
  v24[1] = *v3;
  v24[2] = v28;
  sub_100C0EFD4((uint64_t)v8, a2);
  id v29 = (void *)(a2 + *(int *)(sub_100063814(&qword_1010D03B8) + 36));
  *id v29 = sub_100C0EFD0;
  v29[1] = v24;
  sub_1004DD8BC((uint64_t)v32);
  sub_100C0F03C((uint64_t)v3);
  return sub_1000637B8((uint64_t)v8, &qword_1010D03A8);
}

uint64_t sub_100C0EFD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010D03A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C0F03C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  id v3 = *(id *)(a1 + 56);
  sub_10007B674(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100C0F0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100063814(&qword_1010D03A8) - 8;
  __chkstk_darwin();
  uint64_t v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v9 = v2[7];
  long long v8 = v2[8];
  long long v37 = v2[6];
  long long v38 = v9;
  long long v10 = v2[3];
  long long v33 = v2[2];
  long long v34 = v10;
  long long v11 = v2[5];
  long long v35 = v2[4];
  long long v36 = v11;
  long long v12 = v2[1];
  long long v31 = *v2;
  long long v32 = v12;
  long long v39 = v8;
  v40[0] = v8;
  sub_100063814(&qword_1010CC190);
  State.wrappedValue.getter();
  long long v13 = v35;
  long long v14 = v36;
  v40[4] = v35;
  v40[5] = v36;
  long long v15 = v37;
  long long v16 = v38;
  v40[6] = v37;
  v40[7] = v38;
  long long v17 = v33;
  long long v18 = v34;
  v40[2] = v33;
  v40[3] = v34;
  long long v19 = v31;
  long long v20 = v32;
  v40[0] = v31;
  v40[1] = v32;
  v7[*(int *)(v5 + 48)] = v30[15];
  double v21 = &v7[*(int *)(v5 + 44)];
  v21[4] = v13;
  v21[5] = v14;
  v21[6] = v15;
  v21[7] = v16;
  *double v21 = v19;
  v21[1] = v20;
  void v21[2] = v17;
  v21[3] = v18;
  uint64_t v22 = sub_100063814(&qword_1010D03B0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v7, a1, v22);
  uint64_t v23 = (_OWORD *)swift_allocObject();
  long long v24 = v38;
  v23[7] = v37;
  v23[8] = v24;
  v23[9] = v39;
  long long v25 = v34;
  v23[3] = v33;
  v23[4] = v25;
  long long v26 = v36;
  void v23[5] = v35;
  v23[6] = v26;
  long long v27 = v32;
  v23[1] = v31;
  v23[2] = v27;
  sub_100C0EFD4((uint64_t)v7, a2);
  long long v28 = (void *)(a2 + *(int *)(sub_100063814(&qword_1010D03B8) + 36));
  *long long v28 = sub_100C0EFD0;
  v28[1] = v23;
  sub_1004DD8BC((uint64_t)v40);
  sub_100C0F03C((uint64_t)&v31);
  return sub_1000637B8((uint64_t)v7, &qword_1010D03A8);
}

id Radiosity.UIView.__allocating_init(content:isRadiosityEnabled:specs:)(void *a1, char a2, _OWORD *a3)
{
  id v7 = objc_allocWithZone(v3);
  return Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(a1, a2, a3);
}

id sub_100C0F300(uint64_t a1, uint64_t a2)
{
  return sub_100C11818(a2);
}

id sub_100C0F308(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_100C11970(a1, a3);
}

double sub_100C0F310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_100C11AA4(a5);
}

uint64_t sub_100C0F330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_100C0F3AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, WitnessTable);
}

void sub_100C0F428()
{
}

id Radiosity.UIView.content.getter()
{
  return *(id *)(v0 + direct field offset for Radiosity.UIView.content);
}

id sub_100C0F478(char a1)
{
  int v2 = a1 & 1;
  id v3 = &v1[direct field offset for Radiosity.UIView.isRadiosityEnabled];
  id result = (id)swift_beginAccess();
  if (*v3 != v2)
  {
    if (*v3)
    {
      [v1 addSubview:*(void *)&v1[qword_1010D03D8]];
      return [v1 addSubview:*(void *)&v1[qword_1010D03E0]];
    }
    else
    {
      [*(id *)&v1[qword_1010D03D8] removeFromSuperview];
      return [*(id *)&v1[qword_1010D03E0] removeFromSuperview];
    }
  }
  return result;
}

uint64_t Radiosity.UIView.isRadiosityEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + direct field offset for Radiosity.UIView.isRadiosityEnabled);
  swift_beginAccess();
  return *v1;
}

id Radiosity.UIView.isRadiosityEnabled.setter(char a1)
{
  id v3 = (char *)(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled);
  swift_beginAccess();
  char v4 = *v3;
  *id v3 = a1;
  return sub_100C0F478(v4);
}

void (*Radiosity.UIView.isRadiosityEnabled.modify(void *a1))(uint64_t a1)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  char v4 = (unsigned char *)(v1 + direct field offset for Radiosity.UIView.isRadiosityEnabled);
  swift_beginAccess();
  *((unsigned char *)v3 + 32) = *v4;
  return sub_100C0F658;
}

void sub_100C0F658(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  Radiosity.UIView.isRadiosityEnabled.setter(*(unsigned char *)(*(void *)a1 + 32));

  free(v1);
}

void sub_100C0F698(uint64_t a1)
{
  long long v5 = *(_OWORD *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 80);
  sub_100C116F0((long long *)((char *)&v5 + 8), &v7);
  uint64_t v2 = v1 + direct field offset for Radiosity.UIView.specs;
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 72);
  sub_100C116F0(&v7, &v8);
  if ((void)v8) {
    char v4 = v3 == 0;
  }
  else {
    char v4 = v3 != 0;
  }
  sub_100C0FF30(v4);
  sub_100C10668();
}

double Radiosity.UIView.specs.getter@<D0>(_OWORD *a1@<X8>)
{
  sub_100C11688((uint64_t)v7);
  sub_1004DD8BC((uint64_t)v7);
  long long v2 = v11;
  a1[4] = v10;
  a1[5] = v2;
  long long v3 = v13;
  a1[6] = v12;
  a1[7] = v3;
  long long v4 = v7[1];
  *a1 = v7[0];
  a1[1] = v4;
  double result = *(double *)&v8;
  long long v6 = v9;
  a1[2] = v8;
  a1[3] = v6;
  return result;
}

uint64_t Radiosity.UIView.specs.setter(_OWORD *a1)
{
  long long v3 = (_OWORD *)(v1 + direct field offset for Radiosity.UIView.specs);
  swift_beginAccess();
  long long v4 = v3[5];
  long long v16 = v3[4];
  long long v17 = v4;
  long long v5 = v3[7];
  long long v18 = v3[6];
  long long v6 = v3[1];
  v13[0] = *v3;
  v13[1] = v6;
  long long v7 = v3[3];
  long long v14 = v3[2];
  long long v15 = v7;
  long long v19 = v5;
  v20[0] = v13[0];
  v20[1] = v6;
  v20[2] = v14;
  v20[3] = v7;
  v20[4] = v16;
  v20[5] = v4;
  void v20[6] = v18;
  v20[7] = v5;
  long long v8 = a1[3];
  v3[2] = a1[2];
  v3[3] = v8;
  long long v9 = a1[1];
  *long long v3 = *a1;
  v3[1] = v9;
  long long v10 = a1[7];
  v3[6] = a1[6];
  v3[7] = v10;
  long long v11 = a1[5];
  v3[4] = a1[4];
  v3[5] = v11;
  sub_1004DD8BC((uint64_t)v13);
  sub_1004DD8BC((uint64_t)a1);
  sub_1004DD920((uint64_t)v20);
  sub_100C0F698((uint64_t)v13);
  sub_1004DD920((uint64_t)a1);
  return sub_1004DD920((uint64_t)v13);
}

void (*Radiosity.UIView.specs.modify(void *a1))(uint64_t a1, char a2)
{
  long long v3 = malloc(0x2A0uLL);
  *a1 = v3;
  v3[83] = v1;
  long long v4 = (long long *)(v1 + direct field offset for Radiosity.UIView.specs);
  swift_beginAccess();
  long long v5 = v4[4];
  long long v6 = v4[5];
  *((_OWORD *)v3 + 4) = v5;
  *((_OWORD *)v3 + 5) = v6;
  long long v7 = v4[6];
  long long v8 = v4[7];
  *((_OWORD *)v3 + 6) = v7;
  *((_OWORD *)v3 + 7) = v8;
  long long v9 = *v4;
  long long v10 = v4[1];
  *(_OWORD *)long long v3 = *v4;
  *((_OWORD *)v3 + 1) = v10;
  long long v11 = v4[2];
  long long v12 = v4[3];
  *((_OWORD *)v3 + 2) = v11;
  *((_OWORD *)v3 + 3) = v12;
  *((_OWORD *)v3 + 24) = v9;
  *((_OWORD *)v3 + 25) = v10;
  *((_OWORD *)v3 + 26) = v11;
  *((_OWORD *)v3 + 27) = v12;
  *((_OWORD *)v3 + 28) = v5;
  *((_OWORD *)v3 + 29) = v6;
  *((_OWORD *)v3 + 30) = v7;
  *((_OWORD *)v3 + 31) = v8;
  sub_1004DD8BC((uint64_t)v3);
  return sub_100C0F910;
}

void sub_100C0F910(uint64_t a1, char a2)
{
  long long v2 = *(_OWORD **)a1;
  long long v3 = (_OWORD *)(*(void *)a1 + 384);
  long long v4 = *(_OWORD *)(*(void *)a1 + 464);
  if (a2)
  {
    v2[12] = *(_OWORD *)(*(void *)a1 + 448);
    v2[13] = v4;
    long long v5 = v3[7];
    v2[14] = v3[6];
    v2[15] = v5;
    long long v6 = v3[1];
    v2[8] = *v3;
    v2[9] = v6;
    long long v7 = v3[3];
    v2[10] = v3[2];
    v2[11] = v7;
    sub_1004DD8BC((uint64_t)(v2 + 8));
    Radiosity.UIView.specs.setter(v2 + 8);
    long long v8 = v3[5];
    v2[36] = v3[4];
    v2[37] = v8;
    long long v9 = v3[7];
    v2[38] = v3[6];
    v2[39] = v9;
    long long v10 = v3[1];
    v2[32] = *v3;
    v2[33] = v10;
    long long v11 = v3[3];
    v2[34] = v3[2];
    v2[35] = v11;
    sub_1004DD920((uint64_t)(v2 + 32));
  }
  else
  {
    v2[20] = *(_OWORD *)(*(void *)a1 + 448);
    v2[21] = v4;
    long long v12 = v3[7];
    v2[22] = v3[6];
    v2[23] = v12;
    long long v13 = v3[1];
    v2[16] = *v3;
    v2[17] = v13;
    long long v14 = v3[3];
    v2[18] = v3[2];
    v2[19] = v14;
    Radiosity.UIView.specs.setter(v2 + 16);
  }

  free(v2);
}

long long *Radiosity.Specs.containerDetailHeaderArtwork.unsafeMutableAddressor()
{
  if (qword_1010C87A8 != -1) {
    swift_once();
  }
  return &static Radiosity.Specs.containerDetailHeaderArtwork;
}

id Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(void *a1, char a2, _OWORD *a3)
{
  long long v4 = v3;
  uint64_t ObjectType = swift_getObjectType();
  *(void *)&v4[direct field offset for Radiosity.UIView.content] = a1;
  long long v9 = &v4[direct field offset for Radiosity.UIView.specs];
  objc_super v10 = (objc_super)a3[3];
  long long v12 = a3[4];
  long long v11 = a3[5];
  v9[4] = v12;
  _OWORD v9[5] = v11;
  long long v13 = a3[7];
  v9[6] = a3[6];
  v9[7] = v13;
  long long v14 = a3[1];
  *long long v9 = *a3;
  v9[1] = v14;
  long long v15 = a3[3];
  v9[2] = a3[2];
  v9[3] = v15;
  v4[direct field offset for Radiosity.UIView.isRadiosityEnabled] = a2;
  uint64_t v37 = *((void *)a3 + 10);
  v35[1] = v10;
  long long v36 = v12;
  sub_100C116F0((long long *)((char *)&v36 + 8), &v38);
  sub_100C116F0(&v38, &v39);
  if ((void)v39)
  {
    id v16 = objc_allocWithZone((Class)UIView);
    long long v17 = v4;
    id v18 = a1;
    sub_1004DD8BC((uint64_t)a3);
    id v19 = [v16 init];
  }
  else
  {
    id v20 = objc_allocWithZone((Class)_UIPortalView);
    double v21 = v4;
    id v22 = a1;
    sub_1004DD8BC((uint64_t)a3);
    id v19 = [v20 initWithSourceView:v22];
  }
  uint64_t v23 = v19;
  *(void *)&v4[qword_1010D03D8] = v19;
  id v24 = objc_allocWithZone((Class)_UIPortalView);
  id v25 = v23;
  id v26 = [v24 initWithSourceView:a1];
  *(void *)&v4[qword_1010D03E0] = v26;
  id v27 = v26;

  v35[0].receiver = v4;
  v35[0].super_class = (Class)type metadata accessor for Radiosity.UIView();
  id v28 = -[objc_super initWithFrame:](v35, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  [v28 addSubview:a1];
  if (a2)
  {
    [v28 addSubview:v25];
    [v28 addSubview:v27];
  }
  id v29 = a1;
  [v28 bounds];
  [v29 setFrame:];

  [v29 setAutoresizingMask:18];
  sub_100C0FF30(0);
  sub_100C10668();
  id v30 = [v28 traitCollection];
  id v31 = [v30 userInterfaceStyle];

  sub_100C10AE4((uint64_t)v31);
  sub_100063814(&qword_1010CAAA0);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_100E251D0;
  *(void *)(v32 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v32 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  *(void *)(swift_allocObject() + 16) = ObjectType;
  id v33 = v28;
  UIView.registerForTraitChanges<A>(_:handler:)();
  sub_1004DD920((uint64_t)a3);

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v33;
}

void sub_100C0FDBC()
{
}

uint64_t sub_100C0FDF8(uint64_t a1)
{
  id v3 = v1;
  return a1;
}

double sub_100C0FE10(void *a1)
{
  id v1 = a1;
  Radiosity.UIView.intrinsicContentSize.getter();
  double v3 = v2;

  return v3;
}

id Radiosity.UIView.intrinsicContentSize.getter()
{
  return [*(id *)(v0 + direct field offset for Radiosity.UIView.content) intrinsicContentSize];
}

Swift::Void __swiftcall Radiosity.UIView.layoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for Radiosity.UIView();
  [super layoutSubviews];
  sub_100C0FF30(0);
  sub_100C10668();
}

void sub_100C0FED4(void *a1)
{
  id v1 = a1;
  Radiosity.UIView.layoutSubviews()();
}

void sub_100C0FF1C(uint64_t a1)
{
  double v2 = *(void **)(v1 + qword_1010D03D8);
  *(void *)(v1 + qword_1010D03D8) = a1;
}

void sub_100C0FF30(char a1)
{
  double v2 = v1;
  if (a1)
  {
    [*(id *)&v1[qword_1010D03D8] removeFromSuperview];
    double v3 = &v1[direct field offset for Radiosity.UIView.specs];
    swift_beginAccess();
    long long v56 = *((_OWORD *)v3 + 4);
    long long v57 = *((_OWORD *)v3 + 5);
    v84[1] = *((_OWORD *)v3 + 3);
    long long v85 = v56;
    uint64_t v86 = v57;
    sub_100C116F0((long long *)((char *)&v85 + 8), &v87);
    sub_100C116F0(&v87, &v88);
    if ((void)v88) {
      id v4 = [objc_allocWithZone((Class)UIView) init];
    }
    else {
      id v4 = [objc_allocWithZone((Class)_UIPortalView) initWithSourceView:*(void *)&v2[direct field offset for Radiosity.UIView.content]];
    }
    long long v5 = *(void **)&v2[qword_1010D03D8];
    *(void *)&v2[qword_1010D03D8] = v4;
    id v6 = v4;

    long long v7 = &v2[direct field offset for Radiosity.UIView.isRadiosityEnabled];
    swift_beginAccess();
    if (*v7 == 1) {
      [v2 addSubview:v6];
    }
  }
  long long v8 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  long long v9 = *((_OWORD *)v8 + 5);
  long long v60 = *((_OWORD *)v8 + 4);
  long long v61 = v9;
  long long v10 = *((_OWORD *)v8 + 7);
  long long v62 = *((_OWORD *)v8 + 6);
  long long v63 = v10;
  long long v11 = *((_OWORD *)v8 + 1);
  *(_OWORD *)&v58.CGFloat a = *(_OWORD *)v8;
  *(_OWORD *)&v58.CGFloat c = v11;
  long long v12 = *((_OWORD *)v8 + 3);
  *(_OWORD *)&v58.tCGFloat x = *((_OWORD *)v8 + 2);
  long long v59 = v12;
  sub_1004DD8BC((uint64_t)&v58);
  [v2 bounds];
  CGFloat x = v91.origin.x;
  CGFloat y = v91.origin.y;
  CGFloat width = v91.size.width;
  CGFloat height = v91.size.height;
  CGAffineTransform v72 = v58;
  CGRect v92 = CGRectApplyAffineTransform(v91, &v72);
  CGFloat v17 = v92.origin.x;
  CGFloat v18 = v92.origin.y;
  double v19 = v92.size.width;
  double v20 = v92.size.height;
  v92.origin.CGFloat x = x;
  v92.origin.CGFloat y = y;
  v92.size.CGFloat width = width;
  v92.size.CGFloat height = height;
  double MinX = CGRectGetMinX(v92);
  v93.origin.CGFloat x = x;
  v93.origin.CGFloat y = y;
  v93.size.CGFloat width = width;
  v93.size.CGFloat height = height;
  double v54 = CGRectGetWidth(v93);
  v94.origin.CGFloat x = v17;
  v94.origin.CGFloat y = v18;
  v94.size.CGFloat width = v19;
  v94.size.CGFloat height = v20;
  double v53 = CGRectGetWidth(v94);
  v95.origin.CGFloat x = x;
  v95.origin.CGFloat y = y;
  v95.size.CGFloat width = width;
  v95.size.CGFloat height = height;
  double v21 = CGRectGetHeight(v95);
  v96.origin.CGFloat x = v17;
  v96.origin.CGFloat y = v18;
  v96.size.CGFloat width = v19;
  v96.size.CGFloat height = v20;
  double v22 = CGRectGetHeight(v96);
  sub_1004DD920((uint64_t)&v58);
  id v23 = *(id *)&v2[qword_1010D03D8];
  [v2 bounds];
  [v23 setFrame:];

  id v24 = [*(id *)&v2[qword_1010D03D8] layer];
  id v25 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  [v24 setShadowColor:*((void *)v25 + 7)];

  id v26 = [*(id *)&v2[qword_1010D03D8] layer];
  id v27 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  LODWORD(v28) = *((_DWORD *)v27 + 12);
  [v26 setShadowOpacity:v28];

  id v29 = [*(id *)&v2[qword_1010D03D8] layer];
  id v30 = (double *)&v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  [v29 setShadowRadius:v30[8]];

  id v31 = [*(id *)&v2[qword_1010D03D8] layer];
  uint64_t v32 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  long long v33 = *((_OWORD *)v32 + 5);
  long long v68 = *((_OWORD *)v32 + 4);
  long long v69 = v33;
  long long v34 = *((_OWORD *)v32 + 7);
  long long v70 = *((_OWORD *)v32 + 6);
  long long v71 = v34;
  long long v35 = *((_OWORD *)v32 + 1);
  long long v64 = *(_OWORD *)v32;
  long long v65 = v35;
  long long v36 = *((_OWORD *)v32 + 3);
  long long v66 = *((_OWORD *)v32 + 2);
  long long v67 = v36;
  v81[1] = v36;
  long long v82 = v68;
  uint64_t v83 = v33;
  sub_100C116F0((long long *)((char *)&v82 + 8), v84);
  sub_100C116F0(v84, &v89);
  uint64_t v37 = (uint64_t (*)(uint64_t *, double, double, double, double, double))v89;
  if ((void)v89)
  {
    long long v38 = (double *)&v2[direct field offset for Radiosity.UIView.specs];
    swift_beginAccess();
    double v39 = v38[8];
    objc_super v40 = sub_100C13860((uint64_t *)v84);
    double v41 = (void *)v37(v40, MinX + (v54 - v53) * 0.5, v21 - v22, v19, v20, v39);
    double v43 = v42;
    sub_100C13890((uint64_t *)v84);
  }
  else
  {
    double v41 = 0;
  }
  [v31 setShadowPath:v41];

  id v44 = [*(id *)&v2[qword_1010D03D8] layer];
  double v45 = &v2[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  long long v46 = *((_OWORD *)v45 + 5);
  long long v74 = *((_OWORD *)v45 + 4);
  long long v75 = v46;
  long long v47 = *((_OWORD *)v45 + 7);
  long long v76 = *((_OWORD *)v45 + 6);
  long long v77 = v47;
  long long v48 = *((_OWORD *)v45 + 1);
  *(_OWORD *)&v72.CGFloat a = *(_OWORD *)v45;
  *(_OWORD *)&v72.CGFloat c = v48;
  long long v49 = *((_OWORD *)v45 + 3);
  *(_OWORD *)&v72.tCGFloat x = *((_OWORD *)v45 + 2);
  long long v73 = v49;
  long long v78 = v49;
  long long v79 = v74;
  uint64_t v80 = v46;
  sub_100C116F0((long long *)((char *)&v79 + 8), v81);
  sub_100C116F0(v81, &v90);
  uint64_t v50 = (uint64_t (*)(uint64_t, double, double, double, double, double))v90;
  if ((void)v90)
  {
    uint64_t v51 = *((void *)&v90 + 1);
    sub_100C13860((uint64_t *)v81);
    id v52 = sub_100C104F4(v50, v51, v2);
    sub_100C13890((uint64_t *)v81);
  }
  else
  {
    id v52 = 0;
  }
  [v44 setMask:v52];
}

id sub_100C104F4(uint64_t (*a1)(uint64_t, double, double, double, double, double), uint64_t a2, char *a3)
{
  id v5 = [objc_allocWithZone((Class)CAShapeLayer) init];
  id v6 = self;
  id v7 = v5;
  id v8 = [v6 blackColor];
  id v9 = [v8 CGColor];

  [v7 setBackgroundColor:v9];
  [a3 bounds];
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;
  CGFloat v18 = (double *)&a3[direct field offset for Radiosity.UIView.specs];
  uint64_t v19 = swift_beginAccess();
  double v20 = (void *)a1(v19, v11, v13, v15, v17, v18[8]);
  double v22 = v21;

  [v7 setPath:v22];
  [v7 setFillRule:kCAFillRuleEvenOdd];
  return v7;
}

void sub_100C10668()
{
  uint64_t v1 = v0;
  double v2 = &v0[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  long long v3 = *((_OWORD *)v2 + 5);
  long long v44 = *((_OWORD *)v2 + 4);
  long long v45 = v3;
  long long v4 = *((_OWORD *)v2 + 7);
  long long v46 = *((_OWORD *)v2 + 6);
  long long v47 = v4;
  long long v5 = *((_OWORD *)v2 + 1);
  long long v40 = *(_OWORD *)v2;
  long long v41 = v5;
  long long v6 = *((_OWORD *)v2 + 3);
  long long v42 = *((_OWORD *)v2 + 2);
  long long v43 = v6;
  sub_1004DD8BC((uint64_t)&v40);
  [v1 bounds];
  CGFloat x = v48.origin.x;
  CGFloat y = v48.origin.y;
  CGFloat width = v48.size.width;
  CGFloat height = v48.size.height;
  *(_OWORD *)&rect[3] = v40;
  *(_OWORD *)&rect[5] = v41;
  *(_OWORD *)&rect[7] = v42;
  CGRect v49 = CGRectApplyAffineTransform(v48, (CGAffineTransform *)&rect[3]);
  CGFloat v11 = v49.origin.x;
  rect[0] = *(void *)&v49.origin.x;
  rect[2] = *(void *)&v49.origin.y;
  double v12 = v49.size.width;
  double v13 = v49.size.height;
  v49.origin.CGFloat x = x;
  v49.origin.CGFloat y = y;
  v49.size.CGFloat width = width;
  v49.size.CGFloat height = height;
  rect[1] = CGRectGetMinX(v49);
  v50.origin.CGFloat x = x;
  v50.origin.CGFloat y = y;
  v50.size.CGFloat width = width;
  v50.size.CGFloat height = height;
  double v14 = CGRectGetWidth(v50);
  v51.origin.CGFloat x = v11;
  *(void *)&v51.origin.CGFloat y = rect[2];
  v51.size.CGFloat width = v12;
  v51.size.CGFloat height = v13;
  double v15 = *(double *)&rect[1] + (v14 - CGRectGetWidth(v51)) * 0.5;
  v52.origin.CGFloat x = x;
  v52.origin.CGFloat y = y;
  v52.size.CGFloat width = width;
  v52.size.CGFloat height = height;
  double v16 = CGRectGetHeight(v52);
  *(void *)&v53.origin.CGFloat x = rect[0];
  *(void *)&v53.origin.CGFloat y = rect[2];
  v53.size.CGFloat width = v12;
  v53.size.CGFloat height = v13;
  double v17 = CGRectGetHeight(v53);
  sub_1004DD920((uint64_t)&v40);
  CGFloat v18 = *(void **)&v1[qword_1010D03E0];
  [v18 setFrame:v15, v16 - v17, v12, v13];
  uint64_t v19 = &v1[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)&rect[3] = *(_OWORD *)v19;
  *(_OWORD *)&rect[5] = v20;
  *(_OWORD *)&rect[7] = *((_OWORD *)v19 + 2);
  [v18 setTransform:&rect[3]];
  rect[2] = [v18 layer];
  sub_100063814(&qword_1010C94C0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100E251B0;
  double v22 = &v1[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  id v23 = (void (*)(id))*((void *)v22 + 13);
  swift_retain();
  swift_retain();
  id v24 = [v1 traitCollection];
  id v25 = [v24 userInterfaceStyle];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v26 = objc_allocWithZone((Class)CAFilter);
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v28 = [v26 initWithType:v27];

  v23(v25);
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v28 setValue:isa forKey:kCAFilterInputAmount];
  swift_release();
  swift_release();

  unint64_t v30 = sub_100C13820();
  *(void *)(v21 + 56) = v30;
  *(void *)(v21 + 32) = v28;
  swift_beginAccess();
  id v31 = sub_100C1172C();
  *(void *)(v21 + 88) = v30;
  *(void *)(v21 + 64) = v31;
  Class v32 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [(id)rect[2] setFilters:v32];

  id v33 = [v18 layer];
  long long v34 = &v1[direct field offset for Radiosity.UIView.specs];
  swift_beginAccess();
  long long v35 = (float (*)(id))*((void *)v34 + 11);
  swift_retain();
  id v36 = [v1 traitCollection];
  id v37 = [v36 userInterfaceStyle];

  LODWORD(v16) = v35(v37);
  swift_release();
  LODWORD(v38) = LODWORD(v16);
  [v33 setOpacity:v38];
}

void sub_100C10AE4(uint64_t a1)
{
  sub_100C10668();
  id v3 = [*(id *)(v1 + qword_1010D03D8) layer];
  long long v4 = v3;
  if (a1 == 2) {
    double v5 = -1.0;
  }
  else {
    double v5 = -2.0;
  }
  if (a1 == 2) {
    double v6 = -2.0;
  }
  else {
    double v6 = -1.0;
  }
  [v3 setZPosition:v5];

  id v7 = [*(id *)(v1 + qword_1010D03E0) layer];
  [v7 setZPosition:v6];
}

void Radiosity.UIView.init(frame:)()
{
}

void sub_100C10BD0()
{
}

id Radiosity.UIView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Radiosity.UIView();
  [super dealloc];
}

void sub_100C10C54(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 80);
  v6[4] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 64);
  _OWORD v6[5] = v2;
  long long v3 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 112);
  v6[6] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 96);
  v6[7] = v3;
  long long v4 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 16);
  v6[0] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs);
  v6[1] = v4;
  long long v5 = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 48);
  v6[2] = *(_OWORD *)(a1 + direct field offset for Radiosity.UIView.specs + 32);
  v6[3] = v5;
  sub_1004DD920((uint64_t)v6);
}

__n128 Radiosity.Specs.transform.getter@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 Radiosity.Specs.transform.setter(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v2;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 32) = result;
  return result;
}

float Radiosity.Specs.Shadow.opacity.getter()
{
  return *(float *)v0;
}

uint64_t Radiosity.Specs.Shadow.drawMode.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_10007B674(v1);
  return v1;
}

uint64_t Radiosity.Specs.Shadow.drawMode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10006ADFC(*(void *)(v2 + 24));
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t Radiosity.Specs.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  int v3 = *(_DWORD *)(v1 + 48);
  long long v4 = *(void **)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  uint64_t v6 = *(void *)(v1 + 80);
  id v8 = v4;
  uint64_t result = sub_10007B674(v7);
  *(_DWORD *)a1 = v3;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v6;
  return result;
}

__n128 Radiosity.Specs.shadow.setter(uint64_t a1)
{
  sub_10006ADFC(*(void *)(v1 + 72));
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 64) = v4;
  *(void *)(v1 + 80) = *(void *)(a1 + 32);
  return result;
}

uint64_t Radiosity.Specs.radiosity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 120);
  *(void *)a1 = *(void *)(v1 + 88);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 96);
  *(void *)(a1 + 24) = v2;
  *(void *)(a1 + 32) = v3;
  swift_retain();

  return swift_retain();
}

__n128 Radiosity.Specs.radiosity.setter(uint64_t a1)
{
  swift_release();
  swift_release();
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 104) = v4;
  *(void *)(v1 + 120) = *(void *)(a1 + 32);
  return result;
}

uint64_t View.radiosity(specs:)(long long *a1)
{
  long long v8 = a1[4];
  long long v9 = a1[5];
  long long v10 = a1[6];
  long long v11 = a1[7];
  long long v4 = *a1;
  long long v5 = a1[1];
  long long v6 = a1[2];
  long long v7 = a1[3];
  sub_1004DD8BC((uint64_t)a1);
  State.init(wrappedValue:)();
  char v1 = v12[0];
  uint64_t v2 = *((void *)&v12[0] + 1);
  v12[4] = v8;
  v12[5] = v9;
  v12[6] = v10;
  v12[7] = v11;
  v12[0] = v4;
  v12[1] = v5;
  v12[2] = v6;
  v12[3] = v7;
  char v13 = v1;
  uint64_t v14 = v2;
  View.modifier<A>(_:)();
  return sub_100C11BD4((uint64_t)v12);
}

double Radiosity.Specs.with(_:)@<D0>(void (*a1)(long long *)@<X0>, _OWORD *a2@<X8>)
{
  long long v5 = v2[5];
  long long v18 = v2[4];
  long long v19 = v5;
  long long v6 = v2[7];
  long long v20 = v2[6];
  long long v21 = v6;
  long long v7 = v2[1];
  long long v14 = *v2;
  long long v15 = v7;
  long long v8 = v2[3];
  long long v16 = v2[2];
  long long v17 = v8;
  sub_1004DD8BC((uint64_t)v2);
  a1(&v14);
  long long v9 = v19;
  a2[4] = v18;
  a2[5] = v9;
  long long v10 = v21;
  a2[6] = v20;
  a2[7] = v10;
  long long v11 = v15;
  *a2 = v14;
  a2[1] = v11;
  double result = *(double *)&v16;
  long long v13 = v17;
  a2[2] = v16;
  a2[3] = v13;
  return result;
}

__n128 sub_100C11040()
{
  v8.CGFloat a = 1.0;
  v8.CGFloat b = 0.0;
  v8.CGFloat c = 0.0;
  v8.CGFloat d = 1.0;
  v8.tCGFloat x = 0.0;
  v8.tCGFloat y = 0.0;
  CGAffineTransformScale(&v7, &v8, 0.85, 0.85);
  __n128 v5 = *(__n128 *)&v7.c;
  long long v6 = *(_OWORD *)&v7.a;
  tCGFloat x = v7.tx;
  tCGFloat y = v7.ty;
  id v2 = [self blackColor];
  id v3 = [v2 CGColor];

  __n128 result = v5;
  static Radiosity.Specs.containerDetailHeaderArtwork = v6;
  unk_10112CE20 = v5;
  qword_10112CE30 = *(void *)&tx;
  unk_10112CE38 = *(void *)&ty;
  dword_10112CE40 = 1050253722;
  qword_10112CE48 = (uint64_t)v3;
  unk_10112CE50 = 0x402E000000000000;
  qword_10112CE58 = 0;
  unk_10112CE60 = 0;
  qword_10112CE68 = (uint64_t)sub_100C11148;
  unk_10112CE70 = 0;
  qword_10112CE78 = (uint64_t)sub_100C11170;
  unk_10112CE80 = 0;
  qword_10112CE88 = 0x4040000000000000;
  return result;
}

float sub_100C11148(unint64_t a1)
{
  if (a1 > 2) {
    return 0.42;
  }
  else {
    return flt_100E5CCEC[a1];
  }
}

double sub_100C11170(unint64_t a1)
{
  if (a1 > 2) {
    return 1.8;
  }
  else {
    return dbl_100E5CCF8[a1];
  }
}

uint64_t static Radiosity.Specs.containerDetailHeaderArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C11334(&qword_1010C87A8, (uint64_t)&static Radiosity.Specs.containerDetailHeaderArtwork, a1);
}

__n128 sub_100C111B8()
{
  v8.CGFloat a = 1.0;
  v8.CGFloat b = 0.0;
  v8.CGFloat c = 0.0;
  v8.CGFloat d = 1.0;
  v8.tCGFloat x = 0.0;
  v8.tCGFloat y = 0.0;
  CGAffineTransformScale(&v7, &v8, 0.94, 0.94);
  __n128 v5 = *(__n128 *)&v7.c;
  long long v6 = *(_OWORD *)&v7.a;
  tCGFloat x = v7.tx;
  tCGFloat y = v7.ty;
  id v2 = [self blackColor];
  id v3 = [v2 CGColor];

  __n128 result = v5;
  static Radiosity.Specs.nowPlaying = v6;
  unk_10112CEA0 = v5;
  qword_10112CEB0 = *(void *)&tx;
  unk_10112CEB8 = *(void *)&ty;
  dword_10112CEC0 = 1053609165;
  qword_10112CEC8 = (uint64_t)v3;
  unk_10112CED0 = 0x402E000000000000;
  qword_10112CED8 = 0;
  unk_10112CEE0 = 0;
  qword_10112CEE8 = (uint64_t)variable initialization expression of VerticalToggleSlider._maxValue;
  unk_10112CEF0 = 0;
  qword_10112CEF8 = (uint64_t)sub_100C112BC;
  unk_10112CF00 = 0;
  qword_10112CF08 = 0x4049000000000000;
  return result;
}

double sub_100C112BC()
{
  return 1.5;
}

long long *Radiosity.Specs.nowPlaying.unsafeMutableAddressor()
{
  if (qword_1010C87B0 != -1) {
    swift_once();
  }
  return &static Radiosity.Specs.nowPlaying;
}

uint64_t static Radiosity.Specs.nowPlaying.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C11334(&qword_1010C87B0, (uint64_t)&static Radiosity.Specs.nowPlaying, a1);
}

uint64_t sub_100C11334@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }

  return sub_100C11C44(a2, a3);
}

double Radiosity.Specs.pathShadow(for:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  int v6 = *(_DWORD *)(v4 + 48);
  uint64_t v7 = *(void *)(v4 + 56);
  uint64_t v8 = *(void *)(v4 + 64);
  long long v9 = *(id (**)(double, double, double, double, double))(v4 + 72);
  uint64_t v10 = *(void *)(v4 + 80);
  if (a3)
  {
    sub_1004DD8BC(v4);
  }
  else
  {
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a1;
    sub_1004DD8BC(v4);
    sub_10006ADFC((uint64_t)v9);
    long long v9 = sub_100C11C8C;
    uint64_t v10 = v13;
  }
  double result = *(double *)(v4 + 120);
  long long v15 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a4 = *(_OWORD *)v4;
  *(_OWORD *)(a4 + 16) = v15;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(v4 + 32);
  *(_DWORD *)(a4 + 48) = v6;
  *(void *)(a4 + 56) = v7;
  *(void *)(a4 + 64) = v8;
  *(void *)(a4 + 72) = v9;
  *(void *)(a4 + 80) = v10;
  *(_OWORD *)(a4 + 88) = *(_OWORD *)(v4 + 88);
  *(_OWORD *)(a4 + 104) = *(_OWORD *)(v4 + 104);
  *(double *)(a4 + 120) = result;
  return result;
}

id sub_100C11470(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  uint64_t v13 = self;
  id v14 = [v13 bezierPathWithRoundedRect:a1 byRoundingCorners:a2 cornerRadii:a3 a4 a5 a7 a7];
  id v15 = [v14 CGPath];

  id v16 = [v13 bezierPathWithRoundedRect:a2 cornerRadius:a3 a4 a5 a7];
  UIEdgeInsets.init(edges:inset:)();
  id v19 = [v13 bezierPathWithRoundedRect:sub_10003B5C8(a2, a3, a4, a5, v17, v18)];
  CGPathCreateMutable();
  id v20 = [v16 CGPath];
  CGMutablePathRef.addPath(_:transform:)();

  id v21 = [v19 CGPath:0x3FF0000000000000, 0, 0, 0x3FF0000000000000, 0, 0];
  CGMutablePathRef.addPath(_:transform:)();

  return v15;
}

unsigned char *sub_100C1162C(unsigned char *result, void *(*a2)(uint64_t *__return_ptr))
{
  id v2 = result;
  if (*result == 1)
  {
    double result = a2(&v4);
    char v3 = v4;
  }
  else
  {
    char v3 = 0;
  }
  *id v2 = v3;
  return result;
}

__n128 sub_100C11688@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + direct field offset for Radiosity.UIView.specs;
  swift_beginAccess();
  long long v4 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(a1 + 80) = v4;
  long long v5 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  long long v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  __n128 result = *(__n128 *)(v3 + 32);
  long long v8 = *(_OWORD *)(v3 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v8;
  return result;
}

_OWORD *sub_100C116F0(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t type metadata accessor for Radiosity.UIView()
{
  return sub_10004CF5C();
}

uint64_t sub_100C11718()
{
  return swift_deallocObject();
}

id sub_100C1172C()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v0 = objc_allocWithZone((Class)CAFilter);
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithType:v1];

  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v2 setValue:isa forKey:kCAFilterInputRadius];

  Class v4 = Bool._bridgeToObjectiveC()().super.super.isa;
  [v2 setValue:v4 forKey:kCAFilterInputNormalizeEdges];

  return v2;
}

id sub_100C11818(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _UIHostingView();
  long long v8 = (objc_class *)type metadata accessor for Radiosity.UIView();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  long long v9 = (void *)_UIHostingView.__allocating_init(rootView:)();
  uint64_t v10 = *(int *)(v3 + 36);
  LOBYTE(v3) = *(unsigned char *)(v2 + *(int *)(v3 + 40));
  long long v11 = *(_OWORD *)(v2 + v10 + 80);
  void v17[4] = *(_OWORD *)(v2 + v10 + 64);
  v17[5] = v11;
  long long v12 = *(_OWORD *)(v2 + v10 + 112);
  v17[6] = *(_OWORD *)(v2 + v10 + 96);
  v17[7] = v12;
  long long v13 = *(_OWORD *)(v2 + v10 + 16);
  v17[0] = *(_OWORD *)(v2 + v10);
  v17[1] = v13;
  long long v14 = *(_OWORD *)(v2 + v10 + 48);
  void v17[2] = *(_OWORD *)(v2 + v10 + 32);
  v17[3] = v14;
  sub_1004DD8BC((uint64_t)v17);
  id v15 = objc_allocWithZone(v8);
  return Radiosity.UIView.init(content:isRadiosityEnabled:specs:)(v9, v3, v17);
}

id sub_100C11970(void *a1, uint64_t a2)
{
  __n128 v5 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, __n128))(v7 + 16))((char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2, v5);
  dispatch thunk of _UIHostingView.rootView.setter();
  [a1 invalidateIntrinsicContentSize];
  long long v8 = (_OWORD *)(v2 + *(int *)(a2 + 36));
  long long v9 = v8[5];
  _OWORD v14[4] = v8[4];
  _OWORD v14[5] = v9;
  long long v10 = v8[7];
  void v14[6] = v8[6];
  v14[7] = v10;
  long long v11 = v8[1];
  v14[0] = *v8;
  v14[1] = v11;
  long long v12 = v8[3];
  _OWORD v14[2] = v8[2];
  v14[3] = v12;
  sub_1004DD8BC((uint64_t)v14);
  Radiosity.UIView.specs.setter(v14);
  return Radiosity.UIView.isRadiosityEnabled.setter(*(unsigned char *)(v2 + *(int *)(a2 + 40)));
}

double sub_100C11AA4(void *a1)
{
  [a1 intrinsicContentSize];
  return result;
}

void sub_100C11AEC(void *a1)
{
  id v1 = [a1 traitCollection];
  id v2 = [v1 userInterfaceStyle];

  sub_100C10AE4((uint64_t)v2);
}

void sub_100C11B48()
{
}

void sub_100C11BA4()
{
}

uint64_t sub_100C11BD4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);

  sub_10006ADFC(v2);
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_100C11C44(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100C11C7C()
{
  return swift_deallocObject();
}

id sub_100C11C8C(double a1, double a2, double a3, double a4, double a5)
{
  return sub_100C11470(*(void *)(v5 + 16), a1, a2, a3, a4, a5, *(double *)(v5 + 24));
}

uint64_t sub_100C11C98()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for Radiosity()
{
  return &type metadata for Radiosity;
}

uint64_t destroy for Radiosity.ViewModifier(uint64_t a1)
{
  if (*(void *)(a1 + 72)) {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v5 = *(void **)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v6;
  long long v8 = (_OWORD *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 72);
  id v9 = v5;
  if (v7)
  {
    uint64_t v10 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v7;
    *(void *)(a1 + 80) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v8;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  long long v4 = *(void **)(a2 + 56);
  uint64_t v5 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v4;
  id v6 = v4;

  uint64_t v7 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  if (!v7)
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v8;
      *(void *)(a1 + 80) = v10;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v8)
  {
    sub_1000637B8(a1 + 72, qword_1010D03E8);
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_retain();
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for Radiosity.ViewModifier(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v5 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  uint64_t v6 = *(void *)(a2 + 72);
  uint64_t v7 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  if (!v7) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_1000637B8(a1 + 72, qword_1010D03E8);
LABEL_5:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v8;
  swift_release();
LABEL_6:
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.ViewModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Radiosity.ViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.ViewModifier()
{
  return &type metadata for Radiosity.ViewModifier;
}

uint64_t sub_100C120E4()
{
  return swift_initClassMetadata2();
}

uint64_t destroy for Radiosity.Specs(uint64_t a1)
{
  if (*(void *)(a1 + 72)) {
    swift_release();
  }
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v5 = *(void **)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v6;
  uint64_t v8 = (_OWORD *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 72);
  id v9 = v5;
  if (v7)
  {
    uint64_t v10 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v7;
    *(void *)(a1 + 80) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *v8;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  long long v4 = *(void **)(a2 + 56);
  uint64_t v5 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v4;
  id v6 = v4;

  uint64_t v7 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 72);
  if (!v7)
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v8;
      *(void *)(a1 + 80) = v10;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  if (!v8)
  {
    sub_1000637B8(a1 + 72, qword_1010D03E8);
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v11 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_retain();
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

__n128 initializeWithTake for Radiosity.Specs(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for Radiosity.Specs(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v5 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  uint64_t v6 = *(void *)(a2 + 72);
  uint64_t v7 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  if (!v7) {
    goto LABEL_5;
  }
  if (!v6)
  {
    sub_1000637B8(a1 + 72, qword_1010D03E8);
LABEL_5:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v8;
  swift_release();
LABEL_6:
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.Specs(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Radiosity.Specs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.Specs()
{
  return &type metadata for Radiosity.Specs;
}

void destroy for Radiosity.Specs.Shadow(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for Radiosity.Specs.Shadow(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  long long v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  uint64_t v7 = (_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 24);
  id v8 = v4;
  if (v6)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for Radiosity.Specs.Shadow(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  long long v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  uint64_t v7 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  if (!v7)
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v8;
      *(void *)(a1 + 32) = v10;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v8)
  {
    sub_1000637B8(a1 + 24, qword_1010D03E8);
    goto LABEL_7;
  }
  uint64_t v9 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Radiosity.Specs.Shadow(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  long long v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  if (!v6) {
    goto LABEL_5;
  }
  if (!v5)
  {
    sub_1000637B8(a1 + 24, qword_1010D03E8);
LABEL_5:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.Specs.Shadow(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Radiosity.Specs.Shadow(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.Specs.Shadow()
{
  return &type metadata for Radiosity.Specs.Shadow;
}

void *destroy for Radiosity.Specs.Shadow.DrawMode(void *result)
{
  if (*result >= 0xFFFFFFFFuLL) {
    return (void *)swift_release();
  }
  return result;
}

uint64_t _s11MusicCoreUI9RadiosityO5SpecsV6ShadowV8DrawModeOwCP_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_retain();
  }
  return a1;
}

unint64_t *assignWithCopy for Radiosity.Specs.Shadow.DrawMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      unint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  unint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for Radiosity.Specs.Shadow.DrawMode(void *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Radiosity.Specs.Shadow.DrawMode(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Radiosity.Specs.Shadow.DrawMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Radiosity.Specs.Shadow.DrawMode()
{
  return &type metadata for Radiosity.Specs.Shadow.DrawMode;
}

uint64_t initializeWithCopy for Radiosity.Specs.Radiosity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for Radiosity.Specs.Radiosity(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for Radiosity.Specs.Radiosity(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for Radiosity.Specs.Radiosity()
{
  return &type metadata for Radiosity.Specs.Radiosity;
}

unint64_t sub_100C12AE0()
{
  unint64_t result = qword_1010D0470;
  if (!qword_1010D0470)
  {
    sub_10006389C(&qword_1010D03B8);
    sub_100063858(&qword_1010D0478, &qword_1010D03A8);
    sub_100063858(&qword_1010D0480, &qword_1010D0488);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0470);
  }
  return result;
}

uint64_t sub_100C12BA4()
{
  return swift_getWitnessTable();
}

unint64_t sub_100C12C08()
{
  unint64_t result = qword_1010D0490[0];
  if (!qword_1010D0490[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1010D0490);
  }
  return result;
}

uint64_t sub_100C12C5C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100C12D00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 129 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    long long v12 = *(_OWORD *)(v11 + 32);
    long long v13 = *(_OWORD *)v11;
    *(_OWORD *)(v10 + 16) = *(_OWORD *)(v11 + 16);
    *(_OWORD *)(v10 + 32) = v12;
    *(_OWORD *)unint64_t v10 = v13;
    *(_DWORD *)(v10 + 48) = *(_DWORD *)(v11 + 48);
    long long v14 = *(void **)(v11 + 56);
    *(void *)(v10 + 56) = v14;
    *(void *)(v10 + 64) = *(void *)(v11 + 64);
    uint64_t v15 = *(void *)(v11 + 72);
    id v16 = v14;
    if (v15)
    {
      uint64_t v17 = *(void *)(v11 + 80);
      *(void *)(v10 + 72) = v15;
      *(void *)(v10 + 80) = v17;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
    }
    uint64_t v18 = *(void *)(v11 + 96);
    *(void *)(v10 + 88) = *(void *)(v11 + 88);
    *(void *)(v10 + 96) = v18;
    uint64_t v19 = *(void *)(v11 + 112);
    *(void *)(v10 + 104) = *(void *)(v11 + 104);
    *(void *)(v10 + 112) = v19;
    *(void *)(v10 + 120) = *(void *)(v11 + 120);
    *(unsigned char *)(v10 + 128) = *(unsigned char *)(v11 + 128);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100C12E74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;

  if (*(void *)(v4 + 72)) {
    swift_release();
  }
  swift_release();

  return swift_release();
}

uint64_t sub_100C12F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = v10;
  *(_OWORD *)unint64_t v7 = v9;
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  unint64_t v11 = *(void **)(v8 + 56);
  *(void *)(v7 + 56) = v11;
  *(void *)(v7 + 64) = *(void *)(v8 + 64);
  uint64_t v12 = *(void *)(v8 + 72);
  id v13 = v11;
  if (v12)
  {
    uint64_t v14 = *(void *)(v8 + 80);
    *(void *)(v7 + 72) = v12;
    *(void *)(v7 + 80) = v14;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
  }
  uint64_t v15 = *(void *)(v8 + 96);
  *(void *)(v7 + 88) = *(void *)(v8 + 88);
  *(void *)(v7 + 96) = v15;
  uint64_t v16 = *(void *)(v8 + 112);
  *(void *)(v7 + 104) = *(void *)(v8 + 104);
  *(void *)(v7 + 112) = v16;
  *(void *)(v7 + 120) = *(void *)(v8 + 120);
  *(unsigned char *)(v7 + 128) = *(unsigned char *)(v8 + 128);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100C13000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = *(void *)(v8 + 24);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = *(void *)(v8 + 40);
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  long long v9 = *(void **)(v8 + 56);
  long long v10 = *(void **)(v7 + 56);
  *(void *)(v7 + 56) = v9;
  id v11 = v9;

  *(void *)(v7 + 64) = *(void *)(v8 + 64);
  uint64_t v12 = *(void *)(v8 + 72);
  if (!*(void *)(v7 + 72))
  {
    if (v12)
    {
      uint64_t v14 = *(void *)(v8 + 80);
      *(void *)(v7 + 72) = v12;
      *(void *)(v7 + 80) = v14;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    goto LABEL_8;
  }
  if (!v12)
  {
    sub_1000637B8(v7 + 72, qword_1010D03E8);
    goto LABEL_7;
  }
  uint64_t v13 = *(void *)(v8 + 80);
  *(void *)(v7 + 72) = v12;
  *(void *)(v7 + 80) = v13;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v15 = *(void *)(v8 + 96);
  *(void *)(v7 + 88) = *(void *)(v8 + 88);
  *(void *)(v7 + 96) = v15;
  swift_retain();
  swift_release();
  uint64_t v16 = *(void *)(v8 + 112);
  *(void *)(v7 + 104) = *(void *)(v8 + 104);
  *(void *)(v7 + 112) = v16;
  swift_retain();
  swift_release();
  *(void *)(v7 + 120) = *(void *)(v8 + 120);
  *(unsigned char *)(v7 + 128) = *(unsigned char *)(v8 + 128);
  return a1;
}

uint64_t sub_100C13170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  long long v9 = *(_OWORD *)(v8 + 48);
  long long v11 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 48) = v9;
  *(_OWORD *)unint64_t v7 = v11;
  *(_OWORD *)(v7 + 16) = v10;
  long long v12 = *(_OWORD *)(v8 + 112);
  long long v14 = *(_OWORD *)(v8 + 64);
  long long v13 = *(_OWORD *)(v8 + 80);
  *(_OWORD *)(v7 + 96) = *(_OWORD *)(v8 + 96);
  *(_OWORD *)(v7 + 112) = v12;
  *(_OWORD *)(v7 + 64) = v14;
  *(_OWORD *)(v7 + 80) = v13;
  *(unsigned char *)(v7 + 128) = *(unsigned char *)(v8 + 128);
  return a1;
}

uint64_t sub_100C1320C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *(void *)(v8 + 8);
  *(void *)(v7 + 16) = *(void *)(v8 + 16);
  *(void *)(v7 + 24) = *(void *)(v8 + 24);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(void *)(v7 + 40) = *(void *)(v8 + 40);
  *(_DWORD *)(v7 + 48) = *(_DWORD *)(v8 + 48);
  long long v9 = *(void **)(v7 + 56);
  *(void *)(v7 + 56) = *(void *)(v8 + 56);

  *(void *)(v7 + 64) = *(void *)(v8 + 64);
  uint64_t v10 = *(void *)(v8 + 72);
  if (!*(void *)(v7 + 72)) {
    goto LABEL_5;
  }
  if (!v10)
  {
    sub_1000637B8(v7 + 72, qword_1010D03E8);
LABEL_5:
    *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(v8 + 80);
  *(void *)(v7 + 72) = v10;
  *(void *)(v7 + 80) = v11;
  swift_release();
LABEL_6:
  *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
  swift_release();
  *(_OWORD *)(v7 + 104) = *(_OWORD *)(v8 + 104);
  swift_release();
  *(void *)(v7 + 120) = *(void *)(v8 + 120);
  *(unsigned char *)(v7 + 128) = *(unsigned char *)(v8 + 128);
  return a1;
}

uint64_t sub_100C1334C(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 129;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * (((v6 + 7) & 0xF8) - 127));
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100C134B4);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * (((v6 + 7) & 0xF8) - 127));
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((v6 + 7) & 0xFFFFFFF8) == 0xFFFFFF80) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 56);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

double sub_100C134C8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 129;
  char v11 = 8 * (((v9 + 7) & 0xF8) - 127);
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return result;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_46;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v22 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
              if ((a2 & 0x80000000) != 0)
              {
                *(void *)(v22 + 120) = 0;
                double result = 0.0;
                *(_OWORD *)(v22 + 104) = 0u;
                *(_OWORD *)(v22 + 88) = 0u;
                *(_OWORD *)(v22 + 72) = 0u;
                *(_OWORD *)(v22 + 56) = 0u;
                *(_OWORD *)(v22 + 40) = 0u;
                *(_OWORD *)(v22 + 24) = 0u;
                *(_OWORD *)(v22 + 8) = 0u;
                *(void *)unint64_t v22 = a2 ^ 0x80000000;
              }
              else
              {
                *(void *)(v22 + 56) = a2 - 1;
              }
            }
            else
            {
              id v21 = *(void (**)(void))(v6 + 56);
              v21();
            }
          }
          break;
      }
      return result;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = ~v8 + a2;
  unsigned int v17 = (~(_BYTE)v8 + a2);
  if (v10 < 4) {
    int v18 = (v16 >> v11) + 1;
  }
  else {
    int v18 = 1;
  }
  if (v10 >= 4) {
    unsigned int v19 = v16;
  }
  else {
    unsigned int v19 = v17;
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v19;
  }
  else {
    *(_DWORD *)a1 = v19;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v18;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v18;
      break;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x100C13700);
    case 4:
      *(_DWORD *)&a1[v10] = v18;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for Radiosity.View()
{
  return sub_10004CF5C();
}

ValueMetadata *type metadata accessor for RadiosityEnabledPreferenceKey()
{
  return &type metadata for RadiosityEnabledPreferenceKey;
}

uint64_t sub_100C13750()
{
  return swift_getWitnessTable();
}

uint64_t sub_100C13770()
{
  if (*(void *)(v0 + 88)) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100C137D0()
{
  return State.wrappedValue.setter();
}

unint64_t sub_100C13820()
{
  unint64_t result = qword_1010C94C8;
  if (!qword_1010C94C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1010C94C8);
  }
  return result;
}

uint64_t *sub_100C13860(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_100C13890(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100C138C0(uint64_t a1)
{
  type metadata accessor for ColorScheme();
  __n128 v2 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, __n128))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  return EnvironmentValues.colorScheme.setter();
}

uint64_t property wrapper backing initializer of Reactions.StackView.Model.reaction()
{
  return Published.init(initialValue:)();
}

uint64_t Reactions.StackView.Model.reaction.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

double sub_100C13A44@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_100C13AC8()
{
  return static Published.subscript.setter();
}

uint64_t Reactions.StackView.Model.reaction.setter()
{
  return static Published.subscript.setter();
}

void (*Reactions.StackView.Model.reaction.modify(void *a1))(void *)
{
  __n128 v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return sub_1009C2C24;
}

uint64_t Reactions.StackView.Model.$reaction.getter()
{
  return sub_100063A58((uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction, &qword_1010D0530);
}

uint64_t Reactions.StackView.Model.$reaction.setter(uint64_t a1)
{
  return sub_100C148D8(a1, &qword_1010D0538, (uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction, &qword_1010D0530);
}

uint64_t (*Reactions.StackView.Model.$reaction.modify(void *a1))()
{
  long long v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_100063814(&qword_1010D0538);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unsigned int v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_100063814(&qword_1010D0530);
  Published.projectedValue.getter();
  swift_endAccess();
  return sub_1009C2D68;
}

uint64_t Reactions.StackView.Model.count.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100C13E0C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100C13E90()
{
  return static Published.subscript.setter();
}

uint64_t Reactions.StackView.Model.count.setter()
{
  return static Published.subscript.setter();
}

void (*Reactions.StackView.Model.count.modify(void *a1))(void *)
{
  __n128 v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return sub_1009C2C24;
}

uint64_t Reactions.StackView.Model.$count.getter()
{
  return sub_100063A58((uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count, &qword_1010D0548);
}

uint64_t Reactions.StackView.Model.$count.setter(uint64_t a1)
{
  return sub_100C148D8(a1, &qword_1010D0550, (uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count, &qword_1010D0548);
}

uint64_t (*Reactions.StackView.Model.$count.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_100063814(&qword_1010D0550);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unsigned int v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_100063814(&qword_1010D0548);
  Published.projectedValue.getter();
  swift_endAccess();
  return sub_1009C2D68;
}

uint64_t Reactions.StackView.Model.userImage.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_100C141B8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100C1423C(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t Reactions.StackView.Model.userImage.setter()
{
  return static Published.subscript.setter();
}

void (*Reactions.StackView.Model.userImage.modify(void *a1))(void *)
{
  id v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return sub_1009C2C24;
}

uint64_t Reactions.StackView.Model.$userImage.getter()
{
  return sub_100063A58((uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage, (uint64_t *)&unk_1010CEE90);
}

uint64_t Reactions.StackView.Model.$userImage.setter(uint64_t a1)
{
  return sub_100C148D8(a1, &qword_1010D0560, (uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage, (uint64_t *)&unk_1010CEE90);
}

uint64_t (*Reactions.StackView.Model.$userImage.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_100063814(&qword_1010D0560);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unsigned int v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_100063814((uint64_t *)&unk_1010CEE90);
  Published.projectedValue.getter();
  swift_endAccess();
  return sub_1009C2D68;
}

uint64_t Reactions.StackView.Model.isReacting.getter()
{
  return sub_1009E69E4();
}

uint64_t sub_100C14508@<X0>(unsigned char *a1@<X8>)
{
  return sub_1009E6940(a1);
}

uint64_t sub_100C14530()
{
  return sub_10047752C();
}

uint64_t Reactions.StackView.Model.isReacting.setter()
{
  return sub_100C147B0();
}

void (*Reactions.StackView.Model.isReacting.modify(void *a1))(void *)
{
  id v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return sub_1009C2C24;
}

uint64_t Reactions.StackView.Model.$isReacting.getter()
{
  return sub_100063A58((uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting, &qword_1010CD4E0);
}

uint64_t Reactions.StackView.Model.$isReacting.setter(uint64_t a1)
{
  return sub_100C148D8(a1, &qword_1010D0570, (uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting, &qword_1010CD4E0);
}

uint64_t (*Reactions.StackView.Model.$isReacting.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_100063814(&qword_1010D0570);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  unsigned int v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_100063814(&qword_1010CD4E0);
  Published.projectedValue.getter();
  swift_endAccess();
  return sub_1009C2D68;
}

uint64_t Reactions.StackView.Model.hasAnimatedBackground.getter()
{
  return sub_1009E69E4();
}

uint64_t sub_100C1474C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1009E6940(a1);
}

uint64_t sub_100C14774()
{
  return sub_10047752C();
}

uint64_t Reactions.StackView.Model.hasAnimatedBackground.setter()
{
  return sub_100C147B0();
}

uint64_t sub_100C147B0()
{
  return static Published.subscript.setter();
}

void (*Reactions.StackView.Model.hasAnimatedBackground.modify(void *a1))(void *)
{
  id v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return sub_1009C2C24;
}

uint64_t Reactions.StackView.Model.$hasAnimatedBackground.getter()
{
  return sub_100063A58((uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, &qword_1010CD4E0);
}

uint64_t Reactions.StackView.Model.$hasAnimatedBackground.setter(uint64_t a1)
{
  return sub_100C148D8(a1, &qword_1010D0570, (uint64_t)&OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, &qword_1010CD4E0);
}

uint64_t sub_100C148D8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = sub_100063814(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v8);
  swift_beginAccess();
  sub_100063814(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*Reactions.StackView.Model.$hasAnimatedBackground.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = sub_100063814(&qword_1010D0570);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = sub_100063814(&qword_1010CD4E0);
  Published.projectedValue.getter();
  swift_endAccess();
  return sub_1009C2D68;
}

uint64_t Reactions.StackView.Model.__allocating_init(reaction:count:userImage:isVibrant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v10 = swift_allocObject();
  Reactions.StackView.Model.init(reaction:count:userImage:isVibrant:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t Reactions.StackView.Model.init(reaction:count:userImage:isVibrant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v31 = a5;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v26 = sub_100063814(&qword_1010CD4E0);
  uint64_t v6 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814((uint64_t *)&unk_1010CEE90);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unsigned int v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100063814(&qword_1010D0530);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unsigned int v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v25 = sub_100063814(&qword_1010D0B40);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v17, v16, v13);
  uint64_t v18 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  uint64_t v34 = 0;
  sub_100063814(&qword_1010C9270);
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v18, v12, v9);
  uint64_t v19 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  LOBYTE(v34) = 0;
  Published.init(initialValue:)();
  id v20 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  uint64_t v21 = v26;
  v20(v19, v8, v26);
  uint64_t v22 = v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground;
  LOBYTE(v34) = 1;
  Published.init(initialValue:)();
  v20(v22, v8, v21);
  uint64_t v23 = OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant;
  *(unsigned char *)(v5 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant) = 0;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, v13);
  uint64_t v32 = v27;
  uint64_t v33 = v28;
  Published.init(initialValue:)();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v32 = v29;
  Published.init(initialValue:)();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v34 = v30;
  swift_retain();
  static Published.subscript.setter();
  *(unsigned char *)(v5 + v23) = v31;
  return v5;
}

uint64_t Reactions.StackView.Model.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  uint64_t v2 = sub_100063814(&qword_1010D0530);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count;
  uint64_t v4 = sub_100063814(&qword_1010D0548);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  uint64_t v6 = sub_100063814((uint64_t *)&unk_1010CEE90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  uint64_t v8 = sub_100063814(&qword_1010CD4E0);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, v8);
  return v0;
}

uint64_t Reactions.StackView.Model.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__reaction;
  uint64_t v2 = sub_100063814(&qword_1010D0530);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__count;
  uint64_t v4 = sub_100063814(&qword_1010D0548);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__userImage;
  uint64_t v6 = sub_100063814((uint64_t *)&unk_1010CEE90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__isReacting;
  uint64_t v8 = sub_100063814(&qword_1010CD4E0);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model__hasAnimatedBackground, v8);

  return swift_deallocClassInstance();
}

uint64_t sub_100C15274@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Reactions.StackView.Model(0);
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

uint64_t property wrapper backing initializer of Reactions.StackView.model()
{
  type metadata accessor for Reactions.StackView.Model(0);
  sub_100C1A0E4(&qword_1010D0580, (void (*)(uint64_t))type metadata accessor for Reactions.StackView.Model);

  return ObservedObject.init(wrappedValue:)();
}

uint64_t type metadata accessor for Reactions.StackView.Model(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010D0670);
}

uint64_t Reactions.StackView.model.getter()
{
  return swift_retain();
}

uint64_t Reactions.StackView.model.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t Reactions.StackView.$model.getter()
{
  type metadata accessor for Reactions.StackView.Model(0);
  sub_100C1A0E4(&qword_1010D0580, (void (*)(uint64_t))type metadata accessor for Reactions.StackView.Model);

  return ObservedObject.projectedValue.getter();
}

uint64_t Reactions.StackView.init(model:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = (int *)type metadata accessor for Reactions.StackView(0);
  uint64_t v3 = (uint64_t *)((char *)a1 + v2[5]);
  *uint64_t v3 = swift_getKeyPath();
  sub_100063814(&qword_1010C89E0);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (uint64_t *)((char *)a1 + v2[6]);
  *uint64_t v4 = swift_getKeyPath();
  sub_100063814(&qword_1010C8948);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = (uint64_t *)((char *)a1 + v2[7]);
  uint64_t *v5 = swift_getKeyPath();
  sub_100063814((uint64_t *)&unk_1010CD530);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for Reactions.StackView.Model(0);
  sub_100C1A0E4(&qword_1010D0580, (void (*)(uint64_t))type metadata accessor for Reactions.StackView.Model);
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *a1 = result;
  a1[1] = v7;
  return result;
}

uint64_t type metadata accessor for Reactions.StackView(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010D0608);
}

uint64_t sub_100C15554()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t Reactions.StackView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  sub_100063814(&qword_1010D0588);
  __chkstk_darwin();
  uint64_t v3 = (double *)((char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = sub_100063814(&qword_1010D0590);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100063814(&qword_1010D0598);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010D05A0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(type metadata accessor for BlendMode() - 8);
  __n128 v12 = __chkstk_darwin();
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void (**)(char *, uint64_t, __n128))(v10 + 104);
  if (*(unsigned char *)(*(void *)(v1 + 8) + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant)) {
    unsigned int v16 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  }
  else {
    unsigned int v16 = (unsigned int *)&enum case for BlendMode.normal(_:);
  }
  uint64_t v17 = *v16;
  uint64_t v37 = v11;
  v15(v14, v17, v12);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v18 = v40;
  if ((uint64_t)v40 >= 3) {
    uint64_t v18 = 3;
  }
  uint64_t v19 = v18 - 1;
  if (__OFSUB__(v18, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (qword_1010C87C0 != -1) {
LABEL_10:
  }
    swift_once();
  uint64_t v20 = v19 & ~(v19 >> 63);
  double v21 = *(double *)&qword_1010D0520;
  double v22 = v21 - sub_100C159E8();
  *(void *)uint64_t v3 = static VerticalAlignment.center.getter();
  v3[1] = v22;
  *((unsigned char *)v3 + 16) = 0;
  uint64_t v23 = sub_100063814(&qword_1010D05A8);
  sub_100C15C0C(v20, v1, v14, (uint64_t)v3 + *(int *)(v23 + 44));
  sub_100C159E8();
  Int.seconds.getter(v20 + 1);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10006CAB8((uint64_t)v3, (uint64_t)v5, &qword_1010D0588);
  id v24 = &v5[*(int *)(v36 + 36)];
  long long v25 = v41;
  *(_OWORD *)id v24 = v40;
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v42;
  sub_1000637B8((uint64_t)v3, &qword_1010D0588);
  LOBYTE(v20) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  sub_10006CAB8((uint64_t)v5, (uint64_t)v7, &qword_1010D0590);
  uint64_t v34 = &v7[*(int *)(v38 + 36)];
  char *v34 = v20;
  *((void *)v34 + 1) = v27;
  *((void *)v34 + 2) = v29;
  *((void *)v34 + 3) = v31;
  *((void *)v34 + 4) = v33;
  v34[40] = 0;
  sub_1000637B8((uint64_t)v5, &qword_1010D0590);
  sub_10006CAB8((uint64_t)v7, (uint64_t)v9, &qword_1010D0598);
  sub_1000637B8((uint64_t)v7, &qword_1010D0598);
  sub_10003CABC((uint64_t)v9, v39, &qword_1010D05A0);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v37);
}

double sub_100C159E8()
{
  sub_100063814(&qword_1010C9540);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v13 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for DynamicTypeSize();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010C87B8 != -1) {
    swift_once();
  }
  double v6 = *(double *)&qword_1010D0518;
  type metadata accessor for Reactions.StackView(0);
  sub_100B6E744((uint64_t)v5);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v1, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  uint64_t v7 = (void *)UIContentSizeCategory.init(_:)();
  id v8 = [self traitCollectionWithPreferredContentSizeCategory:v7];
  id v9 = [self defaultMetrics];
  [v9 scaledValueForValue:v8 compatibleWithTraitCollection:v6];
  double v11 = v10;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v11;
}

void sub_100C15C0C(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v42 = a4;
  sub_100063814(&qword_1010D0858);
  __chkstk_darwin();
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v41 = (void *)((char *)v36 - v8);
  uint64_t v9 = type metadata accessor for BlendMode();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin();
  long long v40 = *(char **)(type metadata accessor for Reactions.StackView(0) - 8);
  uint64_t v12 = *((void *)v40 + 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100063814(&qword_1010D0860);
  __chkstk_darwin();
  __chkstk_darwin();
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v45 = 0;
    uint64_t v46 = a1;
    uint64_t v38 = v17;
    uint64_t v39 = v14;
    long long v43 = (char *)v36 - v15;
    uint64_t v18 = v16;
    v36[1] = swift_getKeyPath();
    sub_100C19894(v44, (uint64_t)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v9);
    uint64_t v19 = v40[80];
    long long v40 = v7;
    uint64_t v20 = (v19 + 16) & ~v19;
    uint64_t v21 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v37 = a3;
    uint64_t v22 = v42;
    uint64_t v23 = (v12 + v21 + v20) & ~v21;
    uint64_t v24 = swift_allocObject();
    sub_100C19B90((uint64_t)v13, v24 + v20);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v24 + v23, (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
    sub_100063814(&qword_1010D0868);
    sub_100063814(&qword_1010D0870);
    sub_100C19CD8();
    sub_100C19DC8();
    long long v25 = v43;
    ForEach<>.init(_:id:content:)();
    uint64_t v26 = static Alignment.center.getter();
    uint64_t v27 = (uint64_t)v41;
    *long long v41 = v26;
    *(void *)(v27 + 8) = v28;
    uint64_t v29 = sub_100063814(&qword_1010D08B0);
    sub_100C16E14(v44, v37, v27 + *(int *)(v29 + 44));
    uint64_t v30 = *(void (**)(uint64_t, char *, uint64_t))(v18 + 16);
    uint64_t v31 = v38;
    uint64_t v32 = v39;
    v30((uint64_t)v38, v25, v39);
    uint64_t v33 = (uint64_t)v40;
    sub_10006CAB8(v27, (uint64_t)v40, &qword_1010D0858);
    *(void *)uint64_t v22 = 0;
    *(unsigned char *)(v22 + 8) = 1;
    uint64_t v34 = sub_100063814(&qword_1010D08B8);
    v30(v22 + *(int *)(v34 + 48), v31, v32);
    sub_10006CAB8(v33, v22 + *(int *)(v34 + 64), &qword_1010D0858);
    sub_1000637B8(v27, &qword_1010D0858);
    uint64_t v35 = *(void (**)(char *, uint64_t))(v18 + 8);
    v35(v43, v32);
    sub_1000637B8(v33, &qword_1010D0858);
    v35(v31, v32);
  }
}

uint64_t sub_100C16084@<X0>(uint64_t a1@<X1>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v5 = type metadata accessor for ScaleTransition();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100063814(&qword_1010D08C0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v23 - v13;
  sub_100063814(&qword_1010D0898);
  __chkstk_darwin();
  uint64_t v16 = (uint64_t *)((char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v16 = static Alignment.center.getter();
  v16[1] = v17;
  uint64_t v18 = sub_100063814(&qword_1010D0968);
  sub_100C163A0(a1, a2, (uint64_t)v16 + *(int *)(v18 + 44));
  static UnitPoint.center.getter();
  ScaleTransition.init(_:anchor:)();
  static Animation.easeInOut(duration:)();
  uint64_t v19 = sub_100C1A0E4(&qword_1010D0908, (void (*)(uint64_t))&type metadata accessor for ScaleTransition);
  Transition.animation(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v14, v9);
  uint64_t v25 = v5;
  uint64_t v26 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v20 = AnyTransition.init<A>(_:)();
  uint64_t v21 = v24;
  sub_10006CAB8((uint64_t)v16, v24, &qword_1010D0898);
  *(void *)(v21 + *(int *)(sub_100063814(&qword_1010D0870) + 36)) = v20;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  return sub_1000637B8((uint64_t)v16, &qword_1010D0898);
}

uint64_t sub_100C163A0@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  CGRect v51 = a2;
  uint64_t v52 = a3;
  uint64_t v50 = sub_100063814(&qword_1010D08C8) - 8;
  __chkstk_darwin();
  uint64_t v49 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100063814(&qword_1010D08D0) - 8;
  __chkstk_darwin();
  uint64_t v45 = (uint64_t *)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = sub_100063814(&qword_1010D0970) - 8;
  __chkstk_darwin();
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v48 = (uint64_t)&v35 - v8;
  uint64_t v44 = sub_100063814(&qword_1010D08E0) - 8;
  __chkstk_darwin();
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for BlendMode();
  uint64_t v11 = *(void *)(v53 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010D08E8);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100063814(&qword_1010D08F0) - 8;
  __chkstk_darwin();
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v54 = (uint64_t)&v35 - v19;
  uint64_t v41 = static Color.clear.getter();
  uint64_t v42 = a1;
  sub_100C159E8();
  sub_100C159E8();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v20 = v55[1];
  LODWORD(v40) = v56;
  uint64_t v39 = v57;
  int v38 = v58;
  uint64_t v37 = v59;
  uint64_t v36 = v60;
  uint64_t v21 = v53;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for BlendMode.destinationOut(_:), v53);
  long long v43 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v43(v15, v13, v21);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v21);
  sub_10006CAB8((uint64_t)v15, (uint64_t)v10, &qword_1010D08E8);
  *(_WORD *)&v10[*(int *)(v44 + 64)] = 256;
  sub_10006CAB8((uint64_t)v10, (uint64_t)&v18[*(int *)(v16 + 44)], &qword_1010D08E0);
  *(void *)uint64_t v18 = v41;
  *((void *)v18 + 1) = v20;
  v18[16] = v40;
  *((void *)v18 + 3) = v39;
  v18[32] = v38;
  uint64_t v22 = v36;
  *((void *)v18 + 5) = v37;
  *((void *)v18 + 6) = v22;
  swift_retain();
  sub_1000637B8((uint64_t)v10, &qword_1010D08E0);
  sub_1000637B8((uint64_t)v15, &qword_1010D08E8);
  swift_release();
  sub_10003CABC((uint64_t)v18, v54, &qword_1010D08F0);
  uint64_t v23 = static Color.clear.getter();
  sub_100C159E8();
  sub_100C159E8();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v44 = v61;
  LOBYTE(v20) = v62;
  uint64_t v41 = v63;
  LOBYTE(v10) = v64;
  uint64_t v24 = v65;
  uint64_t v40 = v66;
  sub_100C16A68(v55);
  uint64_t v25 = v55[0];
  uint64_t v26 = v45;
  v43((char *)v45 + *(int *)(v47 + 44), v51, v53);
  *uint64_t v26 = v25;
  uint64_t v27 = v49;
  sub_10006CAB8((uint64_t)v26, v49, &qword_1010D08D0);
  *(_WORD *)(v27 + *(int *)(v50 + 64)) = 256;
  sub_10006CAB8(v27, (uint64_t)&v7[*(int *)(v46 + 44)], &qword_1010D08C8);
  uint64_t v28 = v44;
  *(void *)uint64_t v7 = v23;
  *((void *)v7 + 1) = v28;
  unsigned char v7[16] = v20;
  *((void *)v7 + 3) = v41;
  v7[32] = (char)v10;
  uint64_t v29 = v40;
  *((void *)v7 + 5) = v24;
  *((void *)v7 + 6) = v29;
  swift_retain();
  sub_1000637B8(v27, &qword_1010D08C8);
  sub_1000637B8((uint64_t)v26, &qword_1010D08D0);
  swift_release();
  uint64_t v30 = v48;
  sub_10003CABC((uint64_t)v7, v48, &qword_1010D0970);
  uint64_t v31 = v54;
  sub_10006CAB8(v54, (uint64_t)v18, &qword_1010D08F0);
  sub_10006CAB8(v30, (uint64_t)v7, &qword_1010D0970);
  uint64_t v32 = v52;
  sub_10006CAB8((uint64_t)v18, v52, &qword_1010D08F0);
  uint64_t v33 = sub_100063814(&qword_1010D0978);
  sub_10006CAB8((uint64_t)v7, v32 + *(int *)(v33 + 48), &qword_1010D0970);
  sub_1000637B8(v30, &qword_1010D0970);
  sub_1000637B8(v31, &qword_1010D08F0);
  sub_1000637B8((uint64_t)v7, &qword_1010D0970);
  return sub_1000637B8((uint64_t)v18, &qword_1010D08F0);
}

uint64_t sub_100C16A68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v22 = a1;
  uint64_t v3 = sub_100063814(&qword_1010D0910) - 8;
  __chkstk_darwin();
  uint64_t v21 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ColorSchemeContrast();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ColorScheme();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Reactions.StackView(0);
  sub_100B6E95C((uint64_t)v12);
  sub_100B6F1F4((uint64_t)v8);
  uint64_t v13 = *(int *)(v3 + 56);
  uint64_t v14 = (uint64_t)v21;
  uint64_t v15 = &v21[v13];
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v21, v12, v9);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v15, v8, v5);
  int v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 88))(v14, v9);
  if (v16 == enum case for ColorScheme.light(_:))
  {
    if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v15, v5) == enum case for ColorSchemeContrast.increased(_:))
    {
      id v17 = [self secondarySystemFillColor];
      uint64_t v23 = Color.init(_:)();
LABEL_7:
      *uint64_t v22 = AnyShapeStyle.init<A>(_:)();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v14, v9);
    }
  }
  else if (v16 == enum case for ColorScheme.dark(_:) {
         && (*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v15, v5) == enum case for ColorSchemeContrast.increased(_:))
  }
  {
    LODWORD(v23) = static HierarchicalShapeStyle.quinary.getter();
    goto LABEL_7;
  }
  if (*(unsigned char *)(*(void *)(v2 + 8) + OBJC_IVAR____TtCVO11MusicCoreUI9Reactions9StackView5Model_isVibrant) == 1)
  {
    LODWORD(v23) = static HierarchicalShapeStyle.quaternary.getter();
  }
  else
  {
    id v19 = [self secondarySystemFillColor];
    uint64_t v23 = Color.init(_:)();
  }
  *uint64_t v22 = AnyShapeStyle.init<A>(_:)();
  return sub_1000637B8(v14, &qword_1010D0910);
}

uint64_t sub_100C16E14@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  double v101 = a2;
  uint64_t v104 = a3;
  uint64_t v85 = type metadata accessor for ScaleTransition();
  uint64_t v83 = *(void *)(v85 - 8);
  __chkstk_darwin();
  uint64_t v80 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100063814(&qword_1010D08C0);
  uint64_t v84 = *(void *)(v86 - 8);
  __chkstk_darwin();
  id v81 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v82 = (char *)&v77 - v6;
  uint64_t v7 = type metadata accessor for Image.ResizingMode();
  uint64_t v78 = *(void *)(v7 - 8);
  uint64_t v79 = v7;
  __chkstk_darwin();
  long long v77 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_100063814(&qword_1010D08C8) - 8;
  __chkstk_darwin();
  uint64_t v110 = (uint64_t)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100063814(&qword_1010D08D0) - 8;
  __chkstk_darwin();
  id v109 = (uint64_t *)((char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100063814(&qword_1010CC290);
  __chkstk_darwin();
  double v97 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_100063814(&qword_1010D08D8) - 8;
  __chkstk_darwin();
  uint64_t v103 = (uint64_t)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v77 - v13;
  __chkstk_darwin();
  CGFloat v105 = (char *)&v77 - v15;
  uint64_t v16 = sub_100063814(&qword_1010D08E0) - 8;
  __chkstk_darwin();
  uint64_t v107 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for BlendMode();
  uint64_t v18 = *(void *)(v108 - 8);
  __chkstk_darwin();
  uint64_t v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010D08E8);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100063814(&qword_1010D08F0) - 8;
  __chkstk_darwin();
  uint64_t v25 = (char *)&v77 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v111 = (uint64_t)&v77 - v26;
  uint64_t v106 = static Color.clear.getter();
  uint64_t v112 = a1;
  sub_100C159E8();
  sub_100C159E8();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  double v102 = (char *)v146;
  LODWORD(v94) = v147;
  uint64_t v93 = v148;
  LODWORD(v92) = v149;
  uint64_t v90 = v151;
  uint64_t v91 = v150;
  uint64_t v27 = v108;
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for BlendMode.destinationOut(_:), v108);
  CGRect v95 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  uint64_t v96 = v18 + 16;
  v95(v22, v20, v27);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v27);
  uint64_t v28 = (uint64_t)v107;
  sub_10006CAB8((uint64_t)v22, (uint64_t)v107, &qword_1010D08E8);
  *(_WORD *)(v28 + *(int *)(v16 + 64)) = 256;
  sub_10006CAB8(v28, (uint64_t)&v25[*(int *)(v23 + 44)], &qword_1010D08E0);
  uint64_t v29 = (uint64_t)v102;
  *(void *)uint64_t v25 = v106;
  *((void *)v25 + 1) = v29;
  v25[16] = v94;
  *((void *)v25 + 3) = v93;
  v25[32] = v92;
  uint64_t v30 = v90;
  *((void *)v25 + 5) = v91;
  *((void *)v25 + 6) = v30;
  swift_retain();
  sub_1000637B8(v28, &qword_1010D08E0);
  sub_1000637B8((uint64_t)v22, &qword_1010D08E8);
  swift_release();
  double v102 = v25;
  sub_10003CABC((uint64_t)v25, v111, &qword_1010D08F0);
  sub_100C17C44((uint64_t)&v163);
  uint64_t v107 = v163;
  uint64_t v93 = v165;
  uint64_t v94 = v164;
  uint64_t v91 = v167;
  uint64_t v92 = v166;
  uint64_t v90 = v168;
  LODWORD(v106) = v169;
  sub_100C17F8C();
  uint64_t v31 = type metadata accessor for Font.Design();
  uint64_t v32 = (uint64_t)v97;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v97, 1, 1, v31);
  uint64_t v89 = static Font.system(size:weight:design:)();
  sub_1000637B8(v32, &qword_1010CC290);
  uint64_t KeyPath = swift_getKeyPath();
  sub_100C159E8();
  sub_100C159E8();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v34 = v152;
  LOBYTE(v23) = v153;
  double v97 = v154;
  LOBYTE(v20) = v155;
  uint64_t v35 = v156;
  uint64_t v88 = v157;
  sub_100C16A68((uint64_t *)&v163);
  uint64_t v36 = (uint64_t)v163;
  uint64_t v37 = v109;
  v95((char *)v109 + *(int *)(v99 + 44), (char *)v101, v108);
  *uint64_t v37 = v36;
  uint64_t v38 = v110;
  sub_10006CAB8((uint64_t)v37, v110, &qword_1010D08D0);
  *(_WORD *)(v38 + *(int *)(v100 + 64)) = 256;
  sub_10006CAB8(v38, (uint64_t)&v14[*(int *)(v98 + 44)], &qword_1010D08C8);
  uint64_t v39 = (uint64_t)v107;
  uint64_t v40 = v93;
  uint64_t v41 = v94;
  *(void *)uint64_t v14 = v107;
  *((void *)v14 + 1) = v41;
  uint64_t v43 = v91;
  uint64_t v42 = v92;
  *((void *)v14 + 2) = v40;
  *((void *)v14 + 3) = v42;
  uint64_t v45 = v89;
  uint64_t v44 = v90;
  *((void *)v14 + 4) = v43;
  *((void *)v14 + 5) = v44;
  char v46 = v106;
  v14[48] = v106;
  uint64_t v87 = KeyPath;
  *((void *)v14 + 7) = KeyPath;
  *((void *)v14 + 8) = v45;
  *((void *)v14 + 9) = v34;
  v14[80] = v23;
  *((void *)v14 + 11) = v97;
  uint64_t v47 = (uint64_t)v105;
  v14[96] = (char)v20;
  uint64_t v48 = v88;
  *((void *)v14 + 13) = v35;
  *((void *)v14 + 14) = v48;
  LOBYTE(v23) = v40;
  uint64_t v49 = v42;
  uint64_t v50 = v43;
  uint64_t v51 = v44;
  sub_100C19E94(v39, v41, v40, v42, v43, v44, v46);
  swift_retain();
  swift_retain();
  sub_1000637B8(v110, &qword_1010D08C8);
  sub_1000637B8((uint64_t)v109, &qword_1010D08D0);
  sub_100C19F50((uint64_t)v107, v41, v23, v49, v50, v51, v106);
  swift_release();
  swift_release();
  uint64_t v52 = v47;
  sub_10003CABC((uint64_t)v14, v47, &qword_1010D08D8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v53 = v163;
  if (!v163) {
    goto LABEL_5;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (v163 != 1)
  {

LABEL_5:
    sub_100670F50((uint64_t)v123);
    goto LABEL_6;
  }
  uint64_t v54 = v53;
  Image.init(uiImage:)();
  unsigned __int8 v56 = v77;
  uint64_t v55 = v78;
  uint64_t v57 = v79;
  (*(void (**)(char *, void, uint64_t))(v78 + 104))(v77, enum case for Image.ResizingMode.stretch(_:), v79);
  uint64_t v110 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
  uint64_t v58 = static Alignment.center.getter();
  uint64_t v108 = v59;
  id v109 = (uint64_t *)v58;
  static Color.black.getter();
  uint64_t v107 = (char *)Color.opacity(_:)();
  swift_release();
  static UnitPoint.center.getter();
  uint64_t v60 = v80;
  ScaleTransition.init(_:anchor:)();
  static Animation.easeInOut(duration:)();
  uint64_t v61 = sub_100C1A0E4(&qword_1010D0908, (void (*)(uint64_t))&type metadata accessor for ScaleTransition);
  char v62 = v82;
  uint64_t v63 = v85;
  Transition.animation(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v60, v63);
  uint64_t v64 = v84;
  uint64_t v65 = v86;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v81, v62, v86);
  CGFloat v163 = (char *)v63;
  uint64_t v164 = v61;
  swift_getOpaqueTypeConformance2();
  uint64_t v66 = AnyTransition.init<A>(_:)();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v62, v65);
  sub_100C159E8();
  sub_100C159E8();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v67 = v158;
  LOBYTE(v61) = v159;
  uint64_t v68 = v160;
  char v69 = v161;

  char v120 = 1;
  char v117 = 1;
  char v116 = v61;
  char v114 = v69;
  v123[0] = v110;
  v123[1] = 0;
  __int16 v124 = 257;
  int v125 = v118;
  __int16 v126 = v119;
  uint64_t v127 = (uint64_t)v109;
  uint64_t v128 = v108;
  uint64_t v129 = (uint64_t)v107;
  uint64_t v130 = 0x3FE0000000000000;
  char v131 = 0;
  *(_DWORD *)&v132[3] = *(_DWORD *)((char *)v122 + 3);
  *(_DWORD *)double v132 = v122[0];
  uint64_t v133 = 0;
  uint64_t v134 = 0;
  char v135 = 1;
  *(_DWORD *)double v136 = *(_DWORD *)v121;
  *(_DWORD *)&v136[3] = *(_DWORD *)&v121[3];
  uint64_t v137 = 0x3FF0000000000000;
  uint64_t v138 = v66;
  uint64_t v52 = (uint64_t)v105;
  uint64_t v139 = v67;
  char v140 = v61;
  *(_DWORD *)double v141 = *(_DWORD *)v115;
  *(_DWORD *)&v141[3] = *(_DWORD *)&v115[3];
  uint64_t v142 = v68;
  char v143 = v69;
  *(_DWORD *)&v144[3] = *(_DWORD *)&v113[3];
  *(_DWORD *)uint64_t v144 = *(_DWORD *)v113;
  long long v145 = v162;
  UIScreen.Dimensions.size.getter(*(double *)&v162);
LABEL_6:
  sub_10003CABC((uint64_t)v123, (uint64_t)&v163, &qword_1010D08F8);
  uint64_t v70 = v111;
  uint64_t v71 = (uint64_t)v102;
  sub_10006CAB8(v111, (uint64_t)v102, &qword_1010D08F0);
  uint64_t v72 = v103;
  sub_10006CAB8(v52, v103, &qword_1010D08D8);
  sub_10003CABC((uint64_t)&v163, (uint64_t)v121, &qword_1010D08F8);
  uint64_t v73 = v104;
  sub_10006CAB8(v71, v104, &qword_1010D08F0);
  uint64_t v74 = sub_100063814(&qword_1010D0900);
  sub_10006CAB8(v72, v73 + *(int *)(v74 + 48), &qword_1010D08D8);
  uint64_t v75 = v73 + *(int *)(v74 + 64);
  sub_10003CABC((uint64_t)v121, (uint64_t)v122, &qword_1010D08F8);
  sub_10003CABC((uint64_t)v122, v75, &qword_1010D08F8);
  sub_100C1A02C(v122, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100C19FE0);
  sub_1000637B8(v52, &qword_1010D08D8);
  sub_1000637B8(v70, &qword_1010D08F0);
  sub_10003CABC((uint64_t)v121, (uint64_t)v123, &qword_1010D08F8);
  sub_100C1A02C(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100C1A098);
  sub_1000637B8(v72, &qword_1010D08D8);
  return sub_1000637B8(v71, &qword_1010D08F0);
}

double sub_100C17C44@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ScaleTransition();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v26 - v6;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  if (*((void *)&v34 + 1))
  {
    sub_10005D27C();
    uint64_t v8 = Text.init<A>(_:)();
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13 & 1;
    uint64_t v15 = static Animation.easeInOut(duration:)();
    static UnitPoint.center.getter();
    ScaleTransition.init(_:anchor:)();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v7, v2);
    sub_100C1A0E4(&qword_1010D0908, (void (*)(uint64_t))&type metadata accessor for ScaleTransition);
    uint64_t v16 = AnyTransition.init<A>(_:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
    uint64_t v27 = v8;
    uint64_t v28 = v10;
    uint64_t v29 = v14;
    uint64_t v30 = v12;
    uint64_t v31 = v15;
    uint64_t v32 = v16;
    char v33 = 0;
  }
  else
  {
    uint64_t v17 = Image.init(_internalSystemName:)();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    if (v34 == 1) {
      uint64_t v18 = static Color.primary.getter();
    }
    else {
      uint64_t v18 = static Color.accentColor.getter();
    }
    uint64_t v19 = v18;
    uint64_t v20 = static Font.callout.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v27 = v17;
    uint64_t v28 = v19;
    uint64_t v29 = KeyPath;
    uint64_t v30 = v20;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    char v33 = 1;
  }
  sub_100063814(&qword_1010D0918);
  sub_100063814(&qword_1010D0920);
  sub_100C1A12C();
  sub_100C1A1F0();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v34;
  long long v23 = v35;
  long long v24 = v36;
  char v25 = v37;
  *(_OWORD *)a1 = v34;
  *(_OWORD *)(a1 + 16) = v23;
  *(_OWORD *)(a1 + 32) = v24;
  *(unsigned char *)(a1 + 48) = v25;
  return result;
}

double sub_100C17F8C()
{
  sub_100063814(&qword_1010C9540);
  __chkstk_darwin();
  uint64_t v1 = (char *)&v12 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for DynamicTypeSize();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Reactions.StackView(0);
  sub_100B6E744((uint64_t)v5);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v1, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  uint64_t v6 = (void *)UIContentSizeCategory.init(_:)();
  id v7 = [self traitCollectionWithPreferredContentSizeCategory:v6];
  id v8 = [self defaultMetrics];
  [v8 scaledValueForValue:v7 compatibleWithTraitCollection:14.0];
  double v10 = v9;

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

double static Reactions.StackView.Specs.width(for:)(uint64_t a1)
{
  uint64_t v2 = sub_100063814(&qword_1010C9540);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010C87B8 != -1) {
    swift_once();
  }
  double v5 = *(double *)&qword_1010D0518;
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v4, a1, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v6);
  id v8 = (void *)UIContentSizeCategory.init(_:)();
  id v9 = [self traitCollectionWithPreferredContentSizeCategory:v8];
  id v10 = [self defaultMetrics];
  [v10 scaledValueForValue:v9 compatibleWithTraitCollection:v5];
  double v12 = v11;

  if (qword_1010C87C0 != -1) {
    swift_once();
  }
  return v12 + *(double *)&qword_1010D0520 * 3.0;
}

void sub_100C18378()
{
  qword_1010D0518 = 0x403C000000000000;
}

void sub_100C18388()
{
  qword_1010D0520 = 0x4014000000000000;
}

uint64_t sub_100C18398()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for Reactions()
{
  return &type metadata for Reactions;
}

uint64_t *initializeBufferWithCopyOfBuffer for Reactions.StackView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    id v9 = (uint64_t *)((char *)a1 + v8);
    id v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    sub_100063814(&qword_1010C89E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *id v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_100063814(&qword_1010C8948);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = a3[7];
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)a2 + v17);
    sub_100063814((uint64_t *)&unk_1010CD530);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      void *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for Reactions.StackView(uint64_t a1, int *a2)
{
  swift_release();
  uint64_t v4 = a1 + a2[5];
  sub_100063814(&qword_1010C89E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + a2[6];
  sub_100063814(&qword_1010C8948);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = a1 + a2[7];
  sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DynamicTypeSize();
    id v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  else
  {
    return swift_release();
  }
}

void *initializeWithCopy for Reactions.StackView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  swift_retain();
  sub_100063814(&qword_1010C89E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  sub_100063814(&qword_1010C8948);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    void *v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *uint64_t v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for Reactions.StackView(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1000637B8((uint64_t)a1 + v6, &qword_1010C89E0);
    sub_100063814(&qword_1010C89E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_1000637B8((uint64_t)a1 + v10, &qword_1010C8948);
    sub_100063814(&qword_1010C8948);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      void *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    sub_1000637B8((uint64_t)a1 + v14, (uint64_t *)&unk_1010CD530);
    sub_100063814((uint64_t *)&unk_1010CD530);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for Reactions.StackView(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100063814(&qword_1010C89E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100063814(&qword_1010C8948);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for Reactions.StackView(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1000637B8((uint64_t)a1 + v7, &qword_1010C89E0);
    uint64_t v10 = sub_100063814(&qword_1010C89E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    sub_1000637B8((uint64_t)a1 + v12, &qword_1010C8948);
    uint64_t v15 = sub_100063814(&qword_1010C8948);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    sub_1000637B8((uint64_t)a1 + v17, (uint64_t *)&unk_1010CD530);
    uint64_t v20 = sub_100063814((uint64_t *)&unk_1010CD530);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Reactions.StackView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C1908C);
}

uint64_t sub_100C1908C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_100063814(&qword_1010CDDB0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_100063814(&qword_1010CC890);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[6];
    goto LABEL_9;
  }
  uint64_t v14 = sub_100063814(&qword_1010CD9B8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[7];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for Reactions.StackView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C19224);
}

uint64_t sub_100C19224(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_100063814(&qword_1010CDDB0);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_100063814(&qword_1010CC890);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[6];
    goto LABEL_7;
  }
  uint64_t v14 = sub_100063814(&qword_1010CD9B8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[7];

  return v15(v17, a2, a2, v16);
}

void sub_100C193A8()
{
  sub_100C1950C(319, (unint64_t *)&unk_1010CDE20, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F)
  {
    sub_100C1950C(319, (unint64_t *)&unk_1010CC908, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v1 <= 0x3F)
    {
      sub_100C1950C(319, &qword_1010CDA38, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100C1950C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100C19560()
{
  return type metadata accessor for Reactions.StackView.Model(0);
}

void sub_100C19568()
{
  sub_100013CE0(319, &qword_1010D0680, &qword_1010D0B40);
  if (v0 <= 0x3F)
  {
    sub_100014014(319, (unint64_t *)&unk_1010D0688);
    if (v1 <= 0x3F)
    {
      sub_100013CE0(319, (unint64_t *)&unk_1010CF000, &qword_1010C9270);
      if (v2 <= 0x3F)
      {
        sub_100014014(319, (unint64_t *)&qword_1010CD658);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

ValueMetadata *type metadata accessor for Reactions.StackView.Specs()
{
  return &type metadata for Reactions.StackView.Specs;
}

uint64_t sub_100C19704()
{
  return sub_100C19778(&qword_1010D0838, &qword_1010D05A0, (void (*)(void))sub_100C19748);
}

uint64_t sub_100C19748()
{
  return sub_100C19778(&qword_1010D0840, &qword_1010D0598, (void (*)(void))sub_100C197F4);
}

uint64_t sub_100C19778(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100C197F4()
{
  unint64_t result = qword_1010D0848;
  if (!qword_1010D0848)
  {
    sub_10006389C(&qword_1010D0590);
    sub_100063858(&qword_1010D0850, &qword_1010D0588);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0848);
  }
  return result;
}

uint64_t sub_100C19894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Reactions.StackView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C198F8()
{
  unint64_t v1 = (int *)type metadata accessor for Reactions.StackView(0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v14 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v3 = type metadata accessor for BlendMode();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v0 + v2;
  swift_release();
  unint64_t v7 = v0 + v2 + v1[5];
  sub_100063814(&qword_1010C89E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ColorScheme();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  uint64_t v9 = v6 + v1[6];
  sub_100063814(&qword_1010C8948);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v6 + v1[7];
  sub_100063814((uint64_t *)&unk_1010CD530);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v2 + v14 + v5) & ~v5), v3);

  return swift_deallocObject();
}

uint64_t sub_100C19B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Reactions.StackView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C19BF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for Reactions.StackView(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for BlendMode() - 8);
  unint64_t v7 = (char *)(v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));

  return sub_100C16084(v1 + v4, v7, a1);
}

unint64_t sub_100C19CD8()
{
  unint64_t result = qword_1010D0878;
  if (!qword_1010D0878)
  {
    sub_10006389C(&qword_1010D0868);
    sub_100C19D4C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0878);
  }
  return result;
}

unint64_t sub_100C19D4C()
{
  unint64_t result = qword_1010D0880;
  if (!qword_1010D0880)
  {
    sub_10006389C(&qword_1010CD188);
    sub_100B97568();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0880);
  }
  return result;
}

unint64_t sub_100C19DC8()
{
  unint64_t result = qword_1010D0888;
  if (!qword_1010D0888)
  {
    sub_10006389C(&qword_1010D0870);
    sub_100063858(&qword_1010D0890, &qword_1010D0898);
    sub_100063858(&qword_1010D08A0, &qword_1010D08A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0888);
  }
  return result;
}

uint64_t sub_100C19E94(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  else
  {
    sub_1001CC8D0(a1, a2, a3 & 1);
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100C19F50(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    sub_1000D1500(a1, a2, a3 & 1);
    swift_release();
    swift_bridgeObjectRelease();
  }

  return swift_release();
}

uint64_t sub_100C19FE0(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

void *sub_100C1A02C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100C1A098(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100C1A0E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100C1A12C()
{
  unint64_t result = qword_1010D0928;
  if (!qword_1010D0928)
  {
    sub_10006389C(&qword_1010D0918);
    sub_100063858(&qword_1010D0930, &qword_1010D0938);
    sub_100063858(&qword_1010D08A0, &qword_1010D08A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0928);
  }
  return result;
}

unint64_t sub_100C1A1F0()
{
  unint64_t result = qword_1010D0940;
  if (!qword_1010D0940)
  {
    sub_10006389C(&qword_1010D0920);
    sub_100C1A290();
    sub_100063858((unint64_t *)&unk_1010CE060, &qword_1010CB4A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0940);
  }
  return result;
}

unint64_t sub_100C1A290()
{
  unint64_t result = qword_1010D0948;
  if (!qword_1010D0948)
  {
    sub_10006389C(&qword_1010D0950);
    sub_100063858(&qword_1010D0958, &qword_1010D0960);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0948);
  }
  return result;
}

id sub_100C1A418(uint64_t a1, uint64_t a2)
{
  sub_100058E50(a1, (uint64_t)v15);
  uint64_t v5 = v16;
  if (v16)
  {
    sub_100068990(v15, v16);
    uint64_t v6 = *(void *)(v5 - 8);
    __n128 v7 = __chkstk_darwin();
    uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v6 + 16))(v9, v7);
    uint64_t v10 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    sub_1000760E4((uint64_t)v15);
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t v11 = (objc_class *)type metadata accessor for SliderView.PanGestureRecognizer();
  v14.receiver = v2;
  v14.super_class = v11;
  [v14 initWithTarget:v10 action:a2];
  swift_unknownObjectRelease();
  sub_10005DF18(a1);
  return v12;
}

id sub_100C1A5EC()
{
  return sub_100C1D364(0, type metadata accessor for SliderView.PanGestureRecognizer);
}

void sub_100C1A608()
{
  static SliderView.Specs.barHeight = Int.seconds.getter(7);
}

uint64_t *SliderView.Specs.barHeight.unsafeMutableAddressor()
{
  if (qword_1010C87C8 != -1) {
    swift_once();
  }
  return &static SliderView.Specs.barHeight;
}

double static SliderView.Specs.barHeight.getter()
{
  return sub_100AE17DC(&qword_1010C87C8, (uint64_t)&static SliderView.Specs.barHeight);
}

void sub_100C1A69C()
{
  static SliderView.Specs.expandedBarHeight = Int.seconds.getter(16);
}

uint64_t *SliderView.Specs.expandedBarHeight.unsafeMutableAddressor()
{
  if (qword_1010C87D0 != -1) {
    swift_once();
  }
  return &static SliderView.Specs.expandedBarHeight;
}

double static SliderView.Specs.expandedBarHeight.getter()
{
  return sub_100AE17DC(&qword_1010C87D0, (uint64_t)&static SliderView.Specs.expandedBarHeight);
}

CGFloat sub_100C1A730()
{
  CGAffineTransformMakeScale(&v1, 1.05, 1.05);
  CGFloat result = v1.a;
  *(CGAffineTransform *)static SliderView.Specs.expandedTransform = v1;
  return result;
}

char *SliderView.Specs.expandedTransform.unsafeMutableAddressor()
{
  if (qword_1010C87D8 != -1) {
    swift_once();
  }
  return static SliderView.Specs.expandedTransform;
}

double static SliderView.Specs.expandedTransform.getter@<D0>(_OWORD *a1@<X8>)
{
  if (qword_1010C87D8 != -1) {
    swift_once();
  }
  long long v2 = *(_OWORD *)&static SliderView.Specs.expandedTransform[16];
  *a1 = *(_OWORD *)static SliderView.Specs.expandedTransform;
  a1[1] = v2;
  double result = *(double *)&static SliderView.Specs.expandedTransform[32];
  a1[2] = *(_OWORD *)&static SliderView.Specs.expandedTransform[32];
  return result;
}

void sub_100C1A82C()
{
  static SliderView.Specs.stretchLimit = Int.seconds.getter(12);
}

uint64_t *SliderView.Specs.stretchLimit.unsafeMutableAddressor()
{
  if (qword_1010C87E0 != -1) {
    swift_once();
  }
  return &static SliderView.Specs.stretchLimit;
}

double static SliderView.Specs.stretchLimit.getter()
{
  return sub_100AE17DC(&qword_1010C87E0, (uint64_t)&static SliderView.Specs.stretchLimit);
}

void sub_100C1A8C0()
{
  static SliderView.Specs.escapeHeight = Int.seconds.getter(180);
}

uint64_t *SliderView.Specs.escapeHeight.unsafeMutableAddressor()
{
  if (qword_1010C87E8 != -1) {
    swift_once();
  }
  return &static SliderView.Specs.escapeHeight;
}

double static SliderView.Specs.escapeHeight.getter()
{
  return sub_100AE17DC(&qword_1010C87E8, (uint64_t)&static SliderView.Specs.escapeHeight);
}

id SliderView.panRecognizer.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer;
  long long v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)type metadata accessor for SliderView.PanGestureRecognizer()) initWithTarget:v0 action:"panGestureRecognized:"];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    long long v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t type metadata accessor for SliderView.PanGestureRecognizer()
{
  return self;
}

void SliderView.panRecognizer.setter(uint64_t a1)
{
  long long v2 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer) = a1;
}

void (*SliderView.panRecognizer.modify(id *a1))(uint64_t *a1)
{
  a1[1] = v1;
  *a1 = SliderView.panRecognizer.getter();
  return sub_100C1AA58;
}

void sub_100C1AA58(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer);
  *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer) = v2;
}

id SliderView.trackLayoutGuide.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void SliderView.trackLayoutGuide.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
}

uint64_t (*SliderView.trackLayoutGuide.modify())()
{
  return j_j__swift_endAccess;
}

id SliderView.elapsedTrackColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void SliderView.elapsedTrackColor.setter(void *a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
  swift_beginAccess();
  id v4 = (void *)*v3;
  *id v3 = a1;
  id v5 = a1;

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
  __n128 v7 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess();
  if (*v7 == 1)
  {
    id v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
    swift_beginAccess();
  }
  [v6 setBackgroundColor:*v3];
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack);
  uint64_t v9 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
  swift_beginAccess();
  [v8 setBackgroundColor:*v9];
}

void (*SliderView.elapsedTrackColor.modify(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x58uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  v3[9] = v1;
  v3[10] = v4;
  swift_beginAccess();
  return sub_100C1AD54;
}

void sub_100C1AD54(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[9];
    id v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
    id v6 = (unsigned char *)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
    swift_beginAccess();
    if (*v6)
    {
      __n128 v7 = (void *)(v3[9] + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
      swift_beginAccess();
      uint64_t v8 = v3[9];
    }
    else
    {
      uint64_t v8 = v3[9];
      __n128 v7 = (void *)(v8 + v3[10]);
    }
    [v5 setBackgroundColor:*v7];
    uint64_t v9 = *(void **)(v8 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack);
    uint64_t v10 = (void *)(v8 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
    swift_beginAccess();
    [v9 setBackgroundColor:*v10];
  }

  free(v3);
}

id SliderView.remainingTrackColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void SliderView.remainingTrackColor.setter(void *a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
  swift_beginAccess();
  uint64_t v4 = (void *)*v3;
  *id v3 = a1;
  id v5 = a1;

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
  __n128 v7 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess();
  if (*v7 == 1) {
    uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  }
  else {
    uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  }
  uint64_t v9 = (void *)(v1 + v8);
  swift_beginAccess();
  [v6 setBackgroundColor:*v9];
  [*(id *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack) setBackgroundColor:*v3];
}

void (*SliderView.remainingTrackColor.modify(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x58uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor;
  v3[9] = v1;
  v3[10] = v4;
  swift_beginAccess();
  return sub_100C1B02C;
}

void sub_100C1B02C(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[9];
    id v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
    id v6 = (unsigned char *)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
    swift_beginAccess();
    __n128 v7 = &OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
    if (!*v6) {
      __n128 v7 = &OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
    }
    uint64_t v9 = v3[9];
    uint64_t v8 = v3[10];
    uint64_t v10 = (void *)(v9 + *v7);
    swift_beginAccess();
    [v5 setBackgroundColor:*v10];
    [*(id *)(v9 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack) setBackgroundColor:*(void *)(v9 + v8)];
  }

  free(v3);
}

id SliderView.trackingColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void SliderView.trackingColor.setter(void *a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor);
  swift_beginAccess();
  uint64_t v4 = (void *)*v3;
  *id v3 = a1;
  id v5 = a1;

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
  __n128 v7 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess();
  if ((*v7 & 1) == 0)
  {
    id v3 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
    swift_beginAccess();
  }
  [v6 setBackgroundColor:*v3];
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack);
  uint64_t v9 = (void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
  swift_beginAccess();
  [v8 setBackgroundColor:*v9];
}

void (*SliderView.trackingColor.modify(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x58uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  v3[9] = v1;
  v3[10] = v4;
  swift_beginAccess();
  return sub_100C1B2F8;
}

void sub_100C1B2F8(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[9];
    id v5 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack);
    id v6 = (unsigned char *)(v4 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
    swift_beginAccess();
    if (*v6 == 1)
    {
      uint64_t v7 = v3[9];
      uint64_t v8 = (void *)(v7 + v3[10]);
    }
    else
    {
      uint64_t v8 = (void *)(v3[9] + OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor);
      swift_beginAccess();
      uint64_t v7 = v3[9];
    }
    [v5 setBackgroundColor:*v8];
    uint64_t v9 = *(void **)(v7 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack);
    uint64_t v10 = (void *)(v7 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor);
    swift_beginAccess();
    [v9 setBackgroundColor:*v10];
  }

  free(v3);
}

double SliderView.value.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SliderView.isEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled);
  swift_beginAccess();
  return *v1;
}

void SliderView.isEnabled.setter(unsigned __int8 a1)
{
  id v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled);
  swift_beginAccess();
  *id v3 = a1;
  id v4 = SliderView.panRecognizer.getter();
  [v4 setEnabled:*v3];
}

void (*SliderView.isEnabled.modify(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_100C1B57C;
}

void sub_100C1B57C(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    id v6 = SliderView.panRecognizer.getter();
    [v6 setEnabled:*(unsigned __int8 *)(v4 + v5)];
  }

  free(v3);
}

uint64_t SliderView.isTracking.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  swift_beginAccess();
  return *v1;
}

uint64_t SliderView.valueChangedHandler.getter()
{
  return sub_100C1B6EC(&OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, (void (*)(void, void))sub_10007B674);
}

uint64_t SliderView.valueChangedHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_100C1B774(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler, (uint64_t (*)(uint64_t, uint64_t))sub_10006ADFC);
}

uint64_t (*SliderView.valueChangedHandler.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t SliderView.cancelledHandler.getter()
{
  return sub_100C1B6EC(&OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, (void (*)(void, void))sub_10007B674);
}

uint64_t sub_100C1B6EC(void *a1, void (*a2)(void, void))
{
  uint64_t v4 = (void *)(v2 + *a1);
  swift_beginAccess();
  uint64_t v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t SliderView.cancelledHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_100C1B774(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler, (uint64_t (*)(uint64_t, uint64_t))sub_10006ADFC);
}

uint64_t sub_100C1B774(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  *uint64_t v8 = a1;
  v8[1] = a2;
  return a4(v9, v10);
}

uint64_t (*SliderView.cancelledHandler.modify())()
{
  return j__swift_endAccess;
}

id SliderView.semanticContentAttribute.getter()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SliderView();
  return [super semanticContentAttribute];
}

uint64_t type metadata accessor for SliderView()
{
  return self;
}

id SliderView.semanticContentAttribute.setter(uint64_t a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for SliderView();
  [super setSemanticContentAttribute:a1];
  return [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView] setSemanticContentAttribute:[v1 semanticContentAttribute]];
}

uint64_t sub_100C1B9D0(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for UIView.Corner.Radius();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin();
  uint64_t v13 = (double *)((char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin();
  uint64_t v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView;
  id v17 = objc_allocWithZone((Class)UIStackView);
  uint64_t v18 = v5;
  id v19 = [v17 init];
  id v20 = UIView.forAutolayout.getter();

  *(void *)&v5[v16] = v20;
  uint64_t v21 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack;
  id v22 = [objc_allocWithZone((Class)UIView) init];
  id v23 = UIView.forAutolayout.getter();

  *(void *)&v18[v21] = v23;
  uint64_t v24 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack;
  id v25 = [objc_allocWithZone((Class)UIView) init];
  id v26 = UIView.forAutolayout.getter();

  *(void *)&v18[v24] = v26;
  *(void *)&v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint] = 0;
  *(void *)&v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint] = 0;
  uint64_t v27 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_feedbackGenerator;
  *(void *)&v18[v27] = [objc_allocWithZone((Class)UIImpactFeedbackGenerator) initWithStyle:0];
  uint64_t v28 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
  *(void *)uint64_t v28 = 0;
  v28[8] = 1;
  uint64_t v29 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds];
  *(_OWORD *)uint64_t v29 = 0u;
  *((_OWORD *)v29 + 1) = 0u;
  *(void *)&v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer] = 0;
  uint64_t v30 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide;
  *(void *)&v18[v30] = [objc_allocWithZone((Class)UILayoutGuide) init];
  uint64_t v31 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  uint64_t v32 = self;
  *(void *)&v18[v31] = [v32 whiteColor];
  uint64_t v33 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor;
  *(void *)&v18[v33] = [v32 systemFillColor];
  uint64_t v34 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  if (qword_1010C8418 != -1) {
    swift_once();
  }
  long long v35 = (void *)static UIColor.MusicTint.normal;
  *(void *)&v18[v34] = static UIColor.MusicTint.normal;
  uint64_t v36 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_value;
  *(double *)&v18[v36] = Int.seconds.getter(0);
  v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled] = 1;
  v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking] = 0;
  char v37 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler];
  *(void *)char v37 = 0;
  *((void *)v37 + 1) = 0;
  uint64_t v38 = &v18[OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler];
  *(void *)uint64_t v38 = 0;
  *((void *)v38 + 1) = 0;
  id v39 = v35;

  uint64_t v40 = (objc_class *)type metadata accessor for SliderView();
  v96.receiver = v18;
  v96.super_class = v40;
  [super initWithFrame:a1, a2, a3, a4];
  id v42 = SliderView.panRecognizer.getter();
  [v42 _setRequiresSystemGesturesToFail:0];

  uint64_t v43 = (char *)v41;
  id v44 = SliderView.panRecognizer.getter();
  [v43 addGestureRecognizer:v44];

  uint64_t v45 = (id *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide];
  swift_beginAccess();
  [v43 addLayoutGuide:*v45];
  [v43 setExclusiveTouch:1];
  uint64_t v46 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView;
  uint64_t v47 = *(void **)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView];
  uint64_t v48 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack;
  [v47 addArrangedSubview:*(void *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack]];
  [v47 addArrangedSubview:*(void *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack]];
  [v47 setAxis:0];
  if (qword_1010C87C8 != -1) {
    swift_once();
  }
  *uint64_t v13 = *(double *)&static SliderView.Specs.barHeight * 0.5;
  *((unsigned char *)v13 + 8) = 1;
  (*(void (**)(double *, void, uint64_t))(v11 + 104))(v13, enum case for UIView.Corner.Radius.value(_:), v10);
  static CACornerMask.all.getter();
  UIView.Corner.init(radius:mask:)();
  uint64_t v49 = type metadata accessor for UIView.Corner();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v15, 0, 1, v49);
  UIView.corner.setter();
  id v50 = [*(id *)&v43[v46] layer];
  [v50 setMasksToBounds:1];

  [v43 addSubview:*(void *)&v43[v46]];
  id v51 = [*(id *)&v43[v48] widthAnchor];
  id v52 = [v51 constraintEqualToConstant:0.0];

  uint64_t v53 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint;
  uint64_t v54 = *(void **)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
  *(void *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint] = v52;

  id v55 = [*(id *)&v43[v46] heightAnchor];
  id v56 = [v55 constraintEqualToConstant:*(double *)&static SliderView.Specs.barHeight];

  uint64_t v57 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint;
  uint64_t v58 = *(void **)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint];
  *(void *)&v43[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint] = v56;

  sub_100063814(&qword_1010C9B10);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_100E34BD0;
  uint64_t v60 = *(void **)&v43[v53];
  if (v60)
  {
    uint64_t v61 = (void *)result;
    *(void *)(result + 32) = v60;
    char v62 = *(void **)&v43[v57];
    if (v62)
    {
      id v94 = self;
      v61[5] = v62;
      uint64_t v63 = *(void **)&v43[v46];
      id v64 = v60;
      id v65 = v62;
      id v66 = [v63 leadingAnchor];
      id v67 = [v43 leadingAnchor];
      id v68 = [v66 constraintEqualToAnchor:v67];

      v61[6] = v68;
      id v69 = [*(id *)&v43[v46] trailingAnchor];
      id v70 = [v43 trailingAnchor];
      id v71 = [v69 constraintEqualToAnchor:v70];

      v61[7] = v71;
      id v72 = [*(id *)&v43[v46] topAnchor];
      id v73 = [v43 topAnchor];
      id v74 = [v72 constraintEqualToAnchor:v73];

      v61[8] = v74;
      id v75 = [*(id *)&v43[v46] bottomAnchor];
      id v76 = [v43 bottomAnchor];
      id v77 = [v75 constraintEqualToAnchor:v76];

      v61[9] = v77;
      id v78 = [*(id *)&v43[v46] centerYAnchor];
      id v79 = [v43 centerYAnchor];
      id v80 = [v78 constraintEqualToAnchor:v79];

      v61[10] = v80;
      id v81 = [*v45 leadingAnchor];
      id v82 = [v43 leadingAnchor];
      id v83 = [v81 constraintEqualToAnchor:v82];

      _OWORD v61[11] = v83;
      id v84 = [*v45 trailingAnchor];
      id v85 = [v43 trailingAnchor];
      id v86 = [v84 constraintEqualToAnchor:v85];

      v61[12] = v86;
      id v87 = [*v45 centerYAnchor];
      id v88 = [v43 centerYAnchor];
      id v89 = [v87 constraintEqualToAnchor:v88];

      v61[13] = v89;
      id v90 = [*v45 heightAnchor];
      id v91 = [v90 constraintEqualToConstant:*(double *)&static SliderView.Specs.barHeight];

      v61[14] = v91;
      CGRect v95 = v61;
      specialized Array._endMutation()();
      sub_100057778(0, &qword_1010CA7D8);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v94 activateConstraints:isa];

      return (uint64_t)v43;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall SliderView.layoutSubviews()()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for SliderView();
  [super layoutSubviews];
  [v0 bounds];
  uint64_t v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds];
  if (!CGRectEqualToRect(v11, *(CGRect *)&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds]))
  {
    objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
    if (v2)
    {
      id v3 = v2;
      [v0 bounds];
      double Width = CGRectGetWidth(v12);
      uint64_t v5 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
      swift_beginAccess();
      [v3 setConstant:Width * *v5];

      [v0 bounds];
      *(void *)uint64_t v1 = v6;
      *((void *)v1 + 1) = v7;
      *((void *)v1 + 2) = v8;
      *((void *)v1 + 3) = v9;
    }
    else
    {
      __break(1u);
    }
  }
}

void SliderView.setValue(_:animated:)(char a1, double a2)
{
  if (a2 < 0.0) {
    a2 = 0.0;
  }
  if (a2 <= 1.0) {
    double v4 = a2;
  }
  else {
    double v4 = 1.0;
  }
  uint64_t v5 = (double *)&v2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
  swift_beginAccess();
  if (v4 != *v5)
  {
    uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
    if (v6)
    {
      id v7 = v6;
      [v2 bounds];
      [v7 setConstant:v4 * CGRectGetWidth(v16)];

      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v2;
      *(double *)(v8 + 24) = v4;
      if (a1)
      {
        double v9 = vabdd_f64(*v5, v4) * 0.25;
        if (v9 > 0.1) {
          double v10 = v9;
        }
        else {
          double v10 = 0.1;
        }
        CGRect v11 = self;
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = sub_100C1C7A8;
        *(void *)(v12 + 24) = v8;
        aBlock[4] = sub_10007A644;
        aBlock[5] = v12;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100020238;
        aBlock[3] = &unk_101012B18;
        uint64_t v13 = _Block_copy(aBlock);
        uint64_t v14 = v2;
        swift_retain();
        swift_release();
        [v11 animateWithDuration:4 delay:v13 options:0 animations:v10 completion:0.0];
        swift_release();
        _Block_release(v13);
      }
      else
      {
        double *v5 = v4;
        [v2 layoutIfNeeded];
        swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100C1C770()
{
  return swift_deallocObject();
}

id sub_100C1C7A8()
{
  uint64_t v1 = *(char **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  id v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
  swift_beginAccess();
  *(void *)id v3 = v2;
  return [v1 layoutIfNeeded];
}

void sub_100C1C810(void *a1)
{
  switch((unint64_t)[a1 state])
  {
    case 1uLL:
      id v3 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint];
      if (!v3)
      {
        __break(1u);
        JUMPOUT(0x100C1CE74);
      }
      [v3 constant];
      double v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
      *(void *)double v4 = v5;
      v4[8] = 0;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v1;
      id v7 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess();
      if (*v7 == 1)
      {
        uint64_t v8 = v1;
        goto LABEL_35;
      }
      char *v7 = 1;
      uint64_t v37 = swift_allocObject();
      *(unsigned char *)(v37 + 16) = 1;
      *(void *)(v37 + 24) = v1;
      *(void *)(v37 + 32) = sub_100C1D718;
      *(void *)(v37 + 40) = v6;
      uint64_t v38 = self;
      uint64_t v46 = sub_100C1DA04;
      uint64_t v47 = v37;
      aBlock = _NSConcreteStackBlock;
      uint64_t v43 = 1107296256;
      id v44 = sub_100020238;
      uint64_t v45 = &unk_101012CC0;
      id v17 = _Block_copy(&aBlock);
      id v39 = v1;
      swift_retain();
      swift_retain();
      swift_release();
      [v38 _animateUsingSpringWithDuration:2 delay:v17 options:0 mass:1.0 stiffness:0.0 damping:1.0 initialVelocity:288.0 animations:26.5 completion:0.0];
      goto LABEL_34;
    case 2uLL:
      id v19 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess();
      if (*v19 == 1 && (v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth + 8] & 1) == 0)
      {
        double v20 = *(double *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
        [a1 translationInView:v1];
        double v22 = v21;
        double v24 = fabs(v23);
        if (qword_1010C87E8 != -1)
        {
          double v41 = v24;
          swift_once();
          double v24 = v41;
        }
        if (v24 >= *(double *)&static SliderView.Specs.escapeHeight)
        {
          id v40 = SliderView.panRecognizer.getter();
          [v40 setState:4];
        }
        else
        {
          id v25 = [v1 effectiveUserInterfaceLayoutDirection];
          double v26 = -v22;
          if (v25 != (id)1) {
            double v26 = v22;
          }
          double v27 = v20 + v26;
          [v1 bounds:v41];
          double Width = CGRectGetWidth(v48);
          if (Width >= v27) {
            double Width = v27;
          }
          if (Width < 0.0) {
            double v29 = 0.0;
          }
          else {
            double v29 = Width;
          }
          [v1 bounds];
          double v30 = v29 / CGRectGetWidth(v49);
          if (v30 < 0.0) {
            double v30 = 0.0;
          }
          if (v30 <= 1.0) {
            double v31 = v30;
          }
          else {
            double v31 = 1.0;
          }
          if (v31 == 1.0 || v31 == 0.0)
          {
            uint64_t v32 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
            swift_beginAccess();
            if (v31 != *v32) {
              [*(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_feedbackGenerator] impactOccurred];
            }
          }
          SliderView.setValue(_:animated:)(0, v31);
          uint64_t v33 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler];
          swift_beginAccess();
          uint64_t v34 = *(void (**)(uint64_t, double))v33;
          if (*(void *)v33)
          {
            long long v35 = (double *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_value];
            swift_beginAccess();
            double v36 = *v35;
            swift_retain();
            v34(1, v36);
            sub_10006ADFC((uint64_t)v34);
          }
        }
      }
      return;
    case 3uLL:
      double v9 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess();
      if (*v9 != 1) {
        return;
      }
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v1;
      *double v9 = 0;
      uint64_t v11 = swift_allocObject();
      *(unsigned char *)(v11 + 16) = 0;
      *(void *)(v11 + 24) = v1;
      *(void *)(v11 + 32) = sub_100C1D6F4;
      *(void *)(v11 + 40) = v10;
      uint64_t v12 = self;
      uint64_t v46 = sub_100C1DA04;
      uint64_t v47 = v11;
      aBlock = _NSConcreteStackBlock;
      uint64_t v43 = 1107296256;
      uint64_t v13 = &unk_101012C48;
      break;
    case 4uLL:
      uint64_t v14 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
      swift_beginAccess();
      if (*v14 != 1) {
        return;
      }
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v1;
      *uint64_t v14 = 0;
      uint64_t v16 = swift_allocObject();
      *(unsigned char *)(v16 + 16) = 0;
      *(void *)(v16 + 24) = v1;
      *(void *)(v16 + 32) = sub_100C1D6D8;
      *(void *)(v16 + 40) = v15;
      uint64_t v12 = self;
      uint64_t v46 = sub_100C1D6E4;
      uint64_t v47 = v16;
      aBlock = _NSConcreteStackBlock;
      uint64_t v43 = 1107296256;
      uint64_t v13 = &unk_101012BD0;
      break;
    default:
      return;
  }
  id v44 = sub_100020238;
  uint64_t v45 = v13;
  id v17 = _Block_copy(&aBlock);
  uint64_t v18 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  [v12 _animateUsingSpringWithDuration:2 delay:v17 options:0 mass:1.0 stiffness:0.0 damping:2.0 initialVelocity:500.0 animations:40.0 completion:0.0];
LABEL_34:
  swift_release();
  _Block_release(v17);
LABEL_35:
  swift_release();
}

uint64_t sub_100C1CE84(uint64_t a1)
{
  uint64_t v1 = (void (**)(uint64_t))(a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler);
  uint64_t result = swift_beginAccess();
  id v3 = *v1;
  if (*v1)
  {
    uint64_t v4 = swift_retain();
    v3(v4);
    return sub_10006ADFC((uint64_t)v3);
  }
  return result;
}

uint64_t sub_100C1CEF8(uint64_t a1, char a2)
{
  uint64_t v4 = (void (**)(void, double))(a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler);
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *v4;
  if (*v4)
  {
    id v7 = (double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value);
    swift_beginAccess();
    double v8 = *v7;
    swift_retain();
    v6(a2 & 1, v8);
    return sub_10006ADFC((uint64_t)v6);
  }
  return result;
}

void sub_100C1D004(char a1, char *a2, void (*a3)(uint64_t))
{
  uint64_t v6 = type metadata accessor for UIView.Corner.Radius();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin();
  double v9 = (double *)((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin();
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint];
  if ((a1 & 1) == 0)
  {
    if (v12)
    {
      uint64_t v16 = qword_1010C87C8;
      id v14 = v12;
      if (v16 != -1) {
        swift_once();
      }
      uint64_t v15 = &static SliderView.Specs.barHeight;
      goto LABEL_10;
    }
LABEL_17:
    __break(1u);
    return;
  }
  if (!v12)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v13 = qword_1010C87D0;
  id v14 = v12;
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v15 = &static SliderView.Specs.expandedBarHeight;
LABEL_10:
  [v14 setConstant:*(double *)v15];

  *double v9 = *(double *)v15 * 0.5;
  *((unsigned char *)v9 + 8) = 1;
  (*(void (**)(double *, void, uint64_t))(v7 + 104))(v9, enum case for UIView.Corner.Radius.value(_:), v6);
  static CACornerMask.all.getter();
  UIView.Corner.init(radius:mask:)();
  uint64_t v17 = type metadata accessor for UIView.Corner();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 0, 1, v17);
  uint64_t v18 = UIView.corner.setter();
  if (a3) {
    a3(v18);
  }
  id v19 = *(void **)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack];
  double v20 = &a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking];
  swift_beginAccess();
  if (*v20 == 1) {
    uint64_t v21 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  }
  else {
    uint64_t v21 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  }
  double v22 = &a2[v21];
  swift_beginAccess();
  [v19 setBackgroundColor:*(void *)v22];
  double v23 = *(void **)&a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack];
  double v24 = &a2[OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor];
  swift_beginAccess();
  [v23 setBackgroundColor:*(void *)v24];
  [a2 layoutIfNeeded];
}

id SliderView.__deallocating_deinit(uint64_t a1)
{
  return sub_100C1D364(a1, type metadata accessor for SliderView);
}

id sub_100C1D364(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_100C1D4A0()
{
  swift_release();

  return swift_deallocObject();
}

double sub_100C1D4D8@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = (double *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value);
  swift_beginAccess();
  double result = *v3;
  *a2 = *(void *)v3;
  return result;
}

uint64_t sub_100C1D52C(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_value);
  uint64_t result = swift_beginAccess();
  *id v3 = v2;
  return result;
}

uint64_t sub_100C1D584@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_100C1D5D8(char *a1, void *a2)
{
  char v2 = *a1;
  id v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking);
  uint64_t result = swift_beginAccess();
  *id v3 = v2;
  return result;
}

ValueMetadata *type metadata accessor for SliderView.Specs()
{
  return &type metadata for SliderView.Specs;
}

unint64_t sub_100C1D638()
{
  unint64_t result = qword_1010D0A68;
  if (!qword_1010D0A68)
  {
    sub_100057778(255, &qword_1010D0A60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0A68);
  }
  return result;
}

uint64_t sub_100C1D6A0()
{
  return swift_deallocObject();
}

uint64_t sub_100C1D6D8()
{
  return sub_100C1CE84(*(void *)(v0 + 16));
}

void sub_100C1D6E4()
{
  sub_100C1D004(*(unsigned char *)(v0 + 16), *(char **)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

uint64_t sub_100C1D6F4()
{
  return sub_100C1CEF8(*(void *)(v0 + 16), 0);
}

uint64_t sub_100C1D718()
{
  return sub_100C1CEF8(*(void *)(v0 + 16), 1);
}

uint64_t sub_100C1D73C()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return swift_deallocObject();
}

void sub_100C1D784()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_stackView;
  id v3 = [objc_allocWithZone((Class)UIStackView) init];
  id v4 = UIView.forAutolayout.getter();

  *(void *)&v1[v2] = v4;
  uint64_t v5 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrack;
  id v6 = [objc_allocWithZone((Class)UIView) init];
  id v7 = UIView.forAutolayout.getter();

  *(void *)&v1[v5] = v7;
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrack;
  id v9 = [objc_allocWithZone((Class)UIView) init];
  id v10 = UIView.forAutolayout.getter();

  *(void *)&v1[v8] = v10;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackWidthConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackHeightConstraint] = 0;
  uint64_t v11 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_feedbackGenerator;
  *(void *)&v1[v11] = [objc_allocWithZone((Class)UIImpactFeedbackGenerator) initWithStyle:0];
  uint64_t v12 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_startingWidth];
  *(void *)uint64_t v12 = 0;
  _OWORD v12[8] = 1;
  uint64_t v13 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_lastSeenBounds];
  *uint64_t v13 = 0u;
  v13[1] = 0u;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView____lazy_storage___panRecognizer] = 0;
  uint64_t v14 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackLayoutGuide;
  *(void *)&v1[v14] = [objc_allocWithZone((Class)UILayoutGuide) init];
  uint64_t v15 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_elapsedTrackColor;
  uint64_t v16 = self;
  *(void *)&v1[v15] = [v16 whiteColor];
  uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_remainingTrackColor;
  *(void *)&v1[v17] = [v16 systemFillColor];
  uint64_t v18 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_trackingColor;
  if (qword_1010C8418 != -1) {
    swift_once();
  }
  id v19 = (void *)static UIColor.MusicTint.normal;
  *(void *)&v1[v18] = static UIColor.MusicTint.normal;
  uint64_t v20 = OBJC_IVAR____TtC11MusicCoreUI10SliderView_value;
  *(double *)&v1[v20] = Int.seconds.getter(0);
  v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isEnabled] = 1;
  v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_isTracking] = 0;
  uint64_t v21 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_valueChangedHandler];
  *uint64_t v21 = 0;
  v21[1] = 0;
  double v22 = &v1[OBJC_IVAR____TtC11MusicCoreUI10SliderView_cancelledHandler];
  *double v22 = 0;
  v22[1] = 0;
  id v23 = v19;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

long long *SymbolButton.Configuration.platterMinimumSize.unsafeMutableAddressor()
{
  if (qword_1010C8818 != -1) {
    swift_once();
  }
  return &static SymbolButton.Configuration.platterMinimumSize;
}

unint64_t SymbolButton.CustomView.init(view:)@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>, int64x2_t a3@<Q0>, int64x2_t a4@<Q1>)
{
  a3.i64[0] = 0;
  *(void *)a2 = result;
  a4.i64[0] = result;
  int8x16_t v4 = (int8x16_t)vdupq_lane_s64(vmvnq_s8((int8x16_t)vceqq_s64(a4, a3)).i64[0], 0);
  int8x16_t v5 = vandq_s8(*(int8x16_t *)&UIEdgeInsetsZero.bottom, v4);
  uint64_t v6 = 0x3FF0000000000000;
  *(int8x16_t *)(a2 + 8) = vandq_s8(*(int8x16_t *)&UIEdgeInsetsZero.top, v4);
  if (!result) {
    uint64_t v6 = 0;
  }
  *(int8x16_t *)(a2 + 24) = v5;
  *(void *)(a2 + 40) = v6;
  *(void *)(a2 + 48) = 0;
  return result;
}

uint64_t SymbolButton.updateConfigurationIfNeeded(_:animation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6 = v5;
  int v74 = a5;
  uint64_t v75 = a2;
  uint64_t v73 = type metadata accessor for UIViewConfigurationState();
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  id v71 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100063814(&qword_1010D00F0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006CAB8(a1, (uint64_t)v13, &qword_1010D00F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    uint64_t v18 = (uint64_t)&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess();
    sub_100C35BE4(v18, (uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
    sub_1000637B8((uint64_t)v13, &qword_1010D00F0);
  }
  else
  {
    sub_100C363B8((uint64_t)v13, (uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
  }
  id v19 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden];
  swift_beginAccess();
  if ((*v19 & 1) != 0 || *(double *)&v17[*(int *)(v14 + 68)] != 0.0)
  {
    [v6 state];
    uint64_t v20 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled];
    swift_beginAccess();
    id v67 = v20;
    char v21 = *v20;
    uint64_t v69 = a4;
    uint64_t v68 = a3;
    uint64_t v70 = v14;
    if ((v21 & 1) != 0
      || (double v22 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted],
          swift_beginAccess(),
          (*v22 & 1) != 0)
      || (id v23 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected],
          swift_beginAccess(),
          *v23 == 1))
    {
      if (qword_1010C8838 != -1) {
        swift_once();
      }
      uint64_t v25 = static SymbolButton.Background.normal;
      double v24 = (void *)qword_10112D048;
      uint64_t v27 = qword_10112D050;
      uint64_t v26 = qword_10112D058;
      uint64_t v28 = *((void *)v17 + 24);
      double v29 = (void *)*((void *)v17 + 25);
      swift_bridgeObjectRetain();
      id v30 = v24;
      sub_1001773EC(v28, v29);
      *((void *)v17 + 24) = v25;
      *((void *)v17 + 25) = v24;
      *((void *)v17 + 26) = v27;
      *((void *)v17 + 27) = v26;
      id v31 = [v6 traitCollection];
      id v32 = [v31 userInterfaceIdiom];

      if (v32 == (id)6)
      {
        uint64_t v33 = self;
        id v34 = [v33 labelColor];

        *((void *)v17 + 14) = v34;
        id v35 = [v33 labelColor];

        *((void *)v17 + 22) = v35;
      }
      uint64_t v14 = v70;
      *(void *)&v17[*(int *)(v70 + 68)] = 0x3FF0000000000000;
      a4 = v69;
      a3 = v68;
    }
    if (([v6 state] & 2) != 0 && *v67 == 1) {
      *(void *)&v17[*(int *)(v14 + 68)] = 0x3FD0000000000000;
    }
    if ([v6 state])
    {
      double v36 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted];
      swift_beginAccess();
      if (*v36 == 1)
      {
        if (qword_1010C8840 != -1) {
          swift_once();
        }
        uint64_t v37 = (void *)qword_10112D068;
        id v67 = (unsigned char *)static SymbolButton.Background.highlighted;
        uint64_t v39 = qword_10112D070;
        uint64_t v38 = qword_10112D078;
        uint64_t v40 = *((void *)v17 + 24);
        double v41 = (void *)*((void *)v17 + 25);
        swift_bridgeObjectRetain();
        id v65 = v37;
        sub_1001773EC(v40, v41);
        *((void *)v17 + 24) = v67;
        id v66 = v17 + 200;
        *((void *)v17 + 25) = v37;
        *((void *)v17 + 26) = v39;
        *((void *)v17 + 27) = v38;
        id v67 = (unsigned char *)v38;
        uint64_t v14 = v70;
        uint64_t v42 = *(int *)(v70 + 68);
        *(void *)&v17[v42] = 0x3FE0000000000000;
        id v43 = [v6 traitCollection];
        id v44 = [v43 userInterfaceIdiom];

        a4 = v69;
        a3 = v68;
        if (v44 == (id)6)
        {
          uint64_t v45 = self;
          id v46 = [v45 labelColor];

          *((void *)v17 + 14) = v46;
          uint64_t v14 = v70;
          id v47 = [v45 labelColor];

          *((void *)v17 + 22) = v47;
          *(void *)&v17[v42] = 0x3FF0000000000000;
          if ([v6 showsMenuAsPrimaryAction])
          {
            if ([v6 isContextMenuInteractionEnabled])
            {

              swift_bridgeObjectRelease();
              *((void *)v17 + 24) = 0x3FF0000000000000;
              CGRect v48 = v66;
              *((void *)v66 + 1) = 0;
              *((void *)v48 + 2) = 0;
              *(void *)CGRect v48 = 0;
              CGRect v49 = v47;
              id v50 = [v45 blackColor];

              *((void *)v17 + 14) = v50;
              uint64_t v14 = v70;
              id v51 = [v45 blackColor];

              *((void *)v17 + 22) = v51;
            }
          }
        }
      }
    }
    if (([v6 state] & 4) != 0)
    {
      id v52 = &v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected];
      swift_beginAccess();
      if (*v52 == 1)
      {
        sub_1001773EC(*((void *)v17 + 24), *((void **)v17 + 25));
        *((void *)v17 + 24) = 0x3FF0000000000000;
        *((void *)v17 + 25) = 0;
        *((void *)v17 + 26) = 0;
        *((void *)v17 + 27) = 0;
        uint64_t v53 = *(int *)(v14 + 68);
        *(void *)&v17[v53] = 0x3FF0000000000000;
        id v54 = [v6 traitCollection];
        id v55 = [v54 userInterfaceIdiom];

        if (v55 == (id)6)
        {
          id v56 = self;
          id v57 = [v56 blackColor];

          *((void *)v17 + 14) = v57;
          id v58 = [v56 blackColor];

          *((void *)v17 + 22) = v58;
        }
        else if ([v6 state])
        {
          *(void *)&v17[v53] = 0x3FE0000000000000;
        }
      }
    }
  }
  uint64_t v59 = (uint64_t *)&v6[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  swift_beginAccess();
  uint64_t v60 = (void (*)(char *, char *))*v59;
  if (*v59)
  {
    sub_10007B674(*v59);
    uint64_t v61 = v6;
    id v62 = [v61 traitCollection];
    uint64_t v63 = v71;
    UIViewConfigurationState.init(traitCollection:)();
    [v61 isEnabled];
    UIViewConfigurationState.isDisabled.setter();
    [v61 isSelected];
    UIViewConfigurationState.isSelected.setter();
    [v61 isHighlighted];
    UIViewConfigurationState.isHighlighted.setter();

    v60(v63, v17);
    sub_10006ADFC((uint64_t)v60);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v63, v73);
  }
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v17, v75, a3, a4, v74 & 1, (uint64_t)_swiftEmptyArrayStorage);
  return sub_100C2DA84((uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
}

double static SymbolButton.Material.with(_:)@<D0>(void (*a1)(long long *)@<X0>, uint64_t a2@<X8>)
{
  long long v7 = 0uLL;
  uint64_t v8 = 0;
  char v9 = 2;
  long long v10 = 0uLL;
  a1(&v7);
  uint64_t v3 = v8;
  char v4 = v9;
  double result = *(double *)&v7;
  long long v6 = v10;
  *(_OWORD *)a2 = v7;
  *(void *)(a2 + 16) = v3;
  *(unsigned char *)(a2 + 24) = v4;
  *(_OWORD *)(a2 + 32) = v6;
  return result;
}

double static SymbolButton.Symbol.with(_:)@<D0>(void (*a1)(long long *)@<X0>, uint64_t a2@<X8>)
{
  long long v14 = 0uLL;
  *(void *)&long long v15 = 0;
  *((void *)&v15 + 1) = UIFontTextStyleSubheadline;
  uint64_t v16 = 0;
  char v17 = 1;
  long long v18 = xmmword_100E33E40;
  long long v19 = 0uLL;
  char v20 = -1;
  long long v21 = 0uLL;
  double v22 = 1.0;
  uint64_t v23 = 0;
  char v4 = UIFontTextStyleSubheadline;
  a1(&v14);
  uint64_t v5 = v16;
  char v6 = v17;
  char v7 = v20;
  double result = v22;
  uint64_t v9 = v23;
  long long v10 = v15;
  long long v11 = v18;
  long long v12 = v19;
  long long v13 = v21;
  *(_OWORD *)a2 = v14;
  *(_OWORD *)(a2 + 16) = v10;
  *(void *)(a2 + 32) = v5;
  *(unsigned char *)(a2 + 40) = v6;
  *(_OWORD *)(a2 + 48) = v11;
  *(_OWORD *)(a2 + 64) = v12;
  *(unsigned char *)(a2 + 80) = v7;
  *(_OWORD *)(a2 + 88) = v13;
  *(double *)(a2 + 104) = result;
  *(void *)(a2 + 112) = v9;
  return result;
}

double static SymbolButton.Title.with(_:)@<D0>(void (*a1)(long long *)@<X0>, uint64_t a2@<X8>)
{
  long long v11 = 0uLL;
  UIFontTextStyle v12 = UIFontTextStyleSubheadline;
  double v13 = UIFontWeightSemibold;
  long long v14 = 0uLL;
  uint64_t v15 = 0x3FF0000000000000;
  uint64_t v16 = 0;
  char v17 = 0;
  char v4 = UIFontTextStyleSubheadline;
  a1(&v11);
  UIFontTextStyle v5 = v12;
  double result = v13;
  uint64_t v7 = v15;
  uint64_t v8 = v16;
  char v9 = v17;
  long long v10 = v14;
  *(_OWORD *)a2 = v11;
  *(void *)(a2 + 16) = v5;
  *(double *)(a2 + 24) = result;
  *(_OWORD *)(a2 + 32) = v10;
  *(void *)(a2 + 48) = v7;
  *(void *)(a2 + 56) = v8;
  *(unsigned char *)(a2 + 64) = v9;
  return result;
}

uint64_t UIView.Corner.roundedRect.unsafeMutableAddressor()
{
  return sub_100C2C0AC(&qword_1010C8858, (uint64_t (*)(void))&type metadata accessor for UIView.Corner, (uint64_t)static UIView.Corner.roundedRect);
}

uint64_t static SymbolButton.Configuration.with(_:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  return a1(a2);
}

uint64_t static SymbolButton.Background.with(_:)(void (*a1)(uint64_t *))
{
  uint64_t v2 = 0x3FF0000000000000;
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  a1(&v2);
  return v3;
}

char *SymbolButton.__allocating_init(configuration:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return SymbolButton.init(configuration:handler:)(a1, a2, a3);
}

char *SymbolButton.init(configuration:handler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v65 = a3;
  uint64_t v64 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin(v5 - 8);
  uint64_t v61 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SymbolButton.Metrics(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v62 = (uint64_t *)((char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v10 = &v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
  *long long v10 = 0;
  v10[1] = 0;
  long long v11 = &v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  void *v11 = 0;
  v11[1] = 0;
  UIFontTextStyle v12 = (uint64_t *)&v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
  uint64_t *v12 = 0;
  v12[1] = 0;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted] = 1;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected] = 1;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled] = 1;
  v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden] = 1;
  *(void *)&v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = 0;
  uint64_t v13 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize;
  uint64_t v14 = qword_1010C8820;
  uint64_t v15 = v3;
  if (v14 != -1) {
    swift_once();
  }
  *(_OWORD *)&v3[v13] = static SymbolButton.Configuration.hitRectMinimumSize;
  uint64_t v16 = &v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu];
  *uint64_t v16 = 0;
  v16[1] = 0;
  uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView;
  *(void *)&v15[v17] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v18 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView;
  uint64_t v68 = 1;
  long long v19 = (objc_class *)type metadata accessor for SymbolButton.MaterialView();
  long long v69 = 0u;
  long long v70 = 0u;
  uint64_t v71 = 0;
  v67.receiver = objc_allocWithZone(v19);
  v67.super_class = v19;
  id v20 = [super initWithEffect:0];
  sub_100C2A83C((uint64_t)&v68);

  *(void *)&v15[v18] = v20;
  uint64_t v21 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView;
  if (qword_1010C87F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  double v22 = *(double *)&static SymbolButton.Background.clear;
  uint64_t v23 = (void *)qword_10112CF98;
  uint64_t v24 = qword_10112CFA0;
  uint64_t v25 = qword_10112CFA8;
  id v26 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.BackgroundView());
  swift_bridgeObjectRetain();
  id v27 = v23;
  *(void *)&v15[v21] = sub_100C2AC78(v23, v22, v24, v25);
  *(void *)&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView] = 0;
  *(void *)&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel] = 0;
  *(void *)&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView] = 0;
  *(void *)&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics], 1, 1, v7);
  v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] = 1;
  uint64_t v28 = a1;
  sub_100C35BE4(a1, (uint64_t)&v15[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration], type metadata accessor for SymbolButton.Configuration);
  swift_beginAccess();
  uint64_t v29 = *v12;
  uint64_t v30 = v64;
  uint64_t v31 = v65;
  uint64_t *v12 = v64;
  v12[1] = v31;
  sub_10007B674(v30);
  sub_10006ADFC(v29);

  id v32 = (objc_class *)type metadata accessor for SymbolButton(0);
  v66.receiver = v15;
  v66.super_class = v32;
  uint64_t v33 = (char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v34 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView;
  id v35 = *(void **)&v33[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
  double v36 = v33;
  [v35 setAutoresizingMask:18];
  id v37 = v35;
  [v36 bounds];
  [v37 setFrame:];

  uint64_t v38 = *(void **)&v33[v34];
  [v36 addSubview:v38];
  uint64_t v39 = *(void **)&v36[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  [v38 addSubview:v39];
  id v40 = [v39 contentView];
  uint64_t v41 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView;
  [v40 addSubview:*(void *)&v36[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView]];

  uint64_t v42 = *(void **)&v36[v41];
  type metadata accessor for SymbolButton.Label();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v44 = v42;
  if (([v44 isKindOfClass:ObjCClassFromMetadata] & 1) == 0)
  {
    uint64_t v45 = &v36[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess();
    uint64_t v46 = type metadata accessor for SymbolButton.Configuration(0);
    int v47 = v45[*(int *)(v46 + 76)];
    if (v47 == 2)
    {
      uint64_t v48 = v61;
      sub_10006CAB8((uint64_t)&v45[*(int *)(v46 + 36)], v61, &qword_1010D0AB0);
      uint64_t v49 = type metadata accessor for UIView.Corner();
      uint64_t v50 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v48, 1, v49) != 1;
      sub_1000637B8(v48, &qword_1010D0AB0);
    }
    else
    {
      uint64_t v50 = v47 & 1;
    }
    [v44 setClipsToBounds:v50];
  }

  sub_100C28D38(a1);
  id v51 = v62;
  sub_100C28854(v62);
  sub_100C2999C((uint64_t)v51);
  sub_100C2DA84((uint64_t)v51, type metadata accessor for SymbolButton.Metrics);
  sub_100057778(0, &qword_1010CAC68);
  *(void *)(swift_allocObject() + 16) = ObjectType;
  id v52 = v36;
  uint64_t v53 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [v52 addAction:v53 forControlEvents:64];

  UIAccessibilityTraits v54 = UIAccessibilityTraitButton;
  id v55 = v52;
  unint64_t v56 = (unint64_t)[v55 accessibilityTraits];
  if ((v54 & ~v56) != 0) {
    UIAccessibilityTraits v57 = v54;
  }
  else {
    UIAccessibilityTraits v57 = 0;
  }
  [v55 setAccessibilityTraits:v57 | v56];

  id v58 = [objc_allocWithZone((Class)UIPointerInteraction) initWithDelegate:v55];
  [v55 addInteraction:v58];

  sub_10006ADFC(v64);
  sub_100C2DA84(v28, type metadata accessor for SymbolButton.Configuration);
  return v55;
}

void sub_100C1EE6C(void *a1)
{
  if ([a1 sender])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_10003CABC((uint64_t)v4, (uint64_t)v5, &qword_1010CAD00);
  if (v6)
  {
    if (swift_dynamicCast())
    {
      uint64_t v1 = (void (**)())&v3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
      swift_beginAccess();
      uint64_t v2 = *v1;
      if (*v1)
      {
        swift_retain();
        v2();

        sub_10006ADFC((uint64_t)v2);
      }
      else
      {
      }
    }
  }
  else
  {
    sub_1000637B8((uint64_t)v5, &qword_1010CAD00);
  }
}

uint64_t SymbolButton.debugLabel.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SymbolButton.debugLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*SymbolButton.debugLabel.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t SymbolButton.configurationProvider.getter()
{
  return sub_100C276F0(&OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider, (void (*)(void, void))sub_1000CBB50);
}

uint64_t SymbolButton.configurationProvider.setter(uint64_t a1, uint64_t a2)
{
  sub_100063814(&qword_1010D00F0);
  __chkstk_darwin();
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider);
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t *v7 = a1;
  v7[1] = a2;
  sub_10007B674(a1);
  sub_10006ADFC(v8);
  uint64_t v9 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v6, 0, 0, 0, 1);
  sub_1000637B8((uint64_t)v6, &qword_1010D00F0);
  return sub_10006ADFC(a1);
}

void (*SymbolButton.configurationProvider.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100063814(&qword_1010D00F0);
  v3[4] = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  swift_beginAccess();
  return sub_100C1F2C4;
}

void sub_100C1F2C4(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  uint64_t v4 = (void *)v3[4];
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v4, 0, 0, 0, 1);
    sub_1000637B8((uint64_t)v4, &qword_1010D00F0);
  }
  free(v4);

  free(v3);
}

void SymbolButton.configurationState.getter()
{
  id v2 = v0;
  id v1 = [v2 traitCollection];
  UIViewConfigurationState.init(traitCollection:)();
  [v2 isEnabled];
  UIViewConfigurationState.isDisabled.setter();
  [v2 isSelected];
  UIViewConfigurationState.isSelected.setter();
  [v2 isHighlighted];
  UIViewConfigurationState.isHighlighted.setter();
}

uint64_t SymbolButton.handler.getter()
{
  return sub_100C276F0(&OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, (void (*)(void, void))sub_10007B674);
}

uint64_t SymbolButton.handler.setter(uint64_t a1, uint64_t a2)
{
  return sub_100C27778(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler, (uint64_t (*)(uint64_t, uint64_t))sub_10006ADFC);
}

uint64_t (*SymbolButton.handler.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.getter()
{
  id v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted);
  swift_beginAccess();
  return *v1;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.setter(char a1)
{
  return sub_100C1F61C(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted);
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenHighlighted.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100063814(&qword_1010D00F0);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted;
  v3[4] = v5;
  v3[5] = v6;
  uint64_t v7 = (unsigned char *)(v1 + v6);
  swift_beginAccess();
  *((unsigned char *)v3 + 48) = *v7;
  return sub_100C1F5C4;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenSelected.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected);
  swift_beginAccess();
  return *v1;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenSelected.setter(char a1)
{
  return sub_100C1F61C(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected);
}

uint64_t sub_100C1F61C(char a1, void *a2)
{
  int v5 = a1 & 1;
  sub_100063814(&qword_1010D00F0);
  __chkstk_darwin();
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (unsigned char *)(v2 + *a2);
  uint64_t result = swift_beginAccess();
  int v10 = *v8;
  *uint64_t v8 = a1;
  if (v10 != v5)
  {
    uint64_t v11 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 1, 1, v11);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v7, 0, 0, 0, 1);
    return sub_1000637B8((uint64_t)v7, &qword_1010D00F0);
  }
  return result;
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenSelected.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100063814(&qword_1010D00F0);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected;
  v3[4] = v5;
  v3[5] = v6;
  uint64_t v7 = (unsigned char *)(v1 + v6);
  swift_beginAccess();
  *((unsigned char *)v3 + 48) = *v7;
  return sub_100C1F5C4;
}

void sub_100C1F7E0(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (*a1)[5];
  uint64_t v3 = (*a1)[3];
  int v4 = *((unsigned __int8 *)*a1 + 48);
  int v5 = v2[(void)v3];
  v2[(void)v3] = v4;
  if ((v4 ^ v5))
  {
    uint64_t v6 = (uint64_t)v1[4];
    uint64_t v7 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    SymbolButton.updateConfigurationIfNeeded(_:animation:)(v6, 0, 0, 0, 1);
    sub_1000637B8(v6, &qword_1010D00F0);
  }
  free(v1[4]);

  free(v1);
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenDisabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled);
  swift_beginAccess();
  return *v1;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenDisabled.setter(char a1)
{
  return sub_100C1F61C(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled);
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenDisabled.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100063814(&qword_1010D00F0);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled;
  v3[4] = v5;
  v3[5] = v6;
  uint64_t v7 = (unsigned char *)(v1 + v6);
  swift_beginAccess();
  *((unsigned char *)v3 + 48) = *v7;
  return sub_100C1F5C4;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenHidden.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden);
  swift_beginAccess();
  return *v1;
}

uint64_t SymbolButton.automaticallyAdjustsAlphaWhenHidden.setter(char a1)
{
  return sub_100C1F61C(a1, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden);
}

uint64_t (*SymbolButton.automaticallyAdjustsAlphaWhenHidden.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_100063814(&qword_1010D00F0);
  int v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden;
  v3[4] = v5;
  v3[5] = v6;
  uint64_t v7 = (unsigned char *)(v1 + v6);
  swift_beginAccess();
  *((unsigned char *)v3 + 48) = *v7;
  return sub_100C1F5C4;
}

uint64_t SymbolButton.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  return sub_100C35BE4(v3, a1, type metadata accessor for SymbolButton.Configuration);
}

uint64_t SymbolButton.configuration.setter(uint64_t a1)
{
  return sub_100C2DA84(a1, type metadata accessor for SymbolButton.Configuration);
}

void (*SymbolButton.configuration.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  size_t v4 = *(void *)(*(void *)(type metadata accessor for SymbolButton.Configuration(0) - 8) + 64);
  v3[4] = malloc(v4);
  int v5 = malloc(v4);
  v3[5] = v5;
  uint64_t v6 = v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  sub_100C35BE4(v6, (uint64_t)v5, type metadata accessor for SymbolButton.Configuration);
  return sub_100C1FC38;
}

void sub_100C1FC38(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 32);
  size_t v4 = *(void **)(*(void *)a1 + 40);
  if (a2)
  {
    sub_100C35BE4(*(void *)(*(void *)a1 + 40), (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
    SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
    sub_100C2DA84((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  }
  else
  {
    SymbolButton.setConfiguration(_:animation:updates:)(*(void *)(*(void *)a1 + 40), 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  }
  sub_100C2DA84((uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
  free(v4);
  free(v3);

  free(v2);
}

uint64_t *SymbolButton.Background.normal.unsafeMutableAddressor()
{
  if (qword_1010C8838 != -1) {
    swift_once();
  }
  return &static SymbolButton.Background.normal;
}

uint64_t *SymbolButton.Background.highlighted.unsafeMutableAddressor()
{
  if (qword_1010C8840 != -1) {
    swift_once();
  }
  return &static SymbolButton.Background.highlighted;
}

void *SymbolButton.Background.selected.unsafeMutableAddressor()
{
  return &static SymbolButton.Background.selected;
}

void *SymbolButton.Animation.default.unsafeMutableAddressor()
{
  return &static SymbolButton.Animation.default;
}

uint64_t static SymbolButton.Animation.default.getter()
{
  return 3075;
}

void *SymbolButton.Animation.eased.unsafeMutableAddressor()
{
  return &static SymbolButton.Animation.eased;
}

uint64_t static SymbolButton.Animation.eased.getter()
{
  return 3075;
}

uint64_t SymbolButton.Update.alongside.getter()
{
  uint64_t v1 = *v0;
  sub_10007B674(*v0);
  return v1;
}

uint64_t SymbolButton.Update.alongside.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10006ADFC(*v2);
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

double SymbolButton.Update.animationOptions.getter()
{
  return *(double *)(v0 + 16);
}

void SymbolButton.Update.animationOptions.setter(double a1, double a2)
{
  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
}

uint64_t SymbolButton.Update.completion.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_10007B674(v1);
  return v1;
}

uint64_t SymbolButton.Update.completion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10006ADFC(*(void *)(v2 + 32));
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t SymbolButton.Update.init(alongside:animationOptions:completion:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(double *)(a5 + 16) = a6;
  *(double *)(a5 + 24) = a7;
  *(void *)(a5 + 32) = a3;
  *(void *)(a5 + 40) = a4;
  return result;
}

void SymbolButton.setConfiguration(_:animation:updates:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v215 = a6;
  LODWORD(v204) = a5;
  uint64_t v197 = a4;
  double v195 = *(double *)&a3;
  double v201 = *(double *)&a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v212 = (char *)sub_100063814(&qword_1010D0B20);
  __chkstk_darwin(v212);
  int v10 = (char *)&v191 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v216 - 8);
  __chkstk_darwin(v216);
  uint64_t v13 = (char *)&v191 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v198 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v198 + 64);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v202 = (uint64_t)&v191 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v203 = (uint64_t)&v191 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v210 = (char *)&v191 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v209 = (uint64_t)&v191 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v208 = (uint64_t)&v191 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v207 = (uint64_t)&v191 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v206 = (uint64_t)&v191 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v205 = (uint64_t)&v191 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v214 = (char *)&v191 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v200 = (uint64_t)&v191 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v199 = (uint64_t)&v191 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v191 - v38;
  __chkstk_darwin(v37);
  uint64_t v41 = (long long *)((char *)&v191 - v40);
  uint64_t v213 = v7;
  uint64_t v42 = (uint64_t)v7 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  sub_100C35BE4(v42, (uint64_t)v41, type metadata accessor for SymbolButton.Configuration);
  if (_s11MusicCoreUI12SymbolButtonC13ConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(a1, v41))
  {
    uint64_t v43 = (uint64_t)v41;
LABEL_56:
    sub_100C2DA84(v43, type metadata accessor for SymbolButton.Configuration);
    return;
  }
  sub_100C35BE4(a1, (uint64_t)v39, type metadata accessor for SymbolButton.Configuration);
  swift_beginAccess();
  CGRect v193 = v39;
  sub_1004B7DF8((uint64_t)v39, v42);
  swift_endAccess();
  UUID.init()();
  uint64_t v194 = UUID.uuidString.getter();
  unint64_t v211 = v44;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v216);
  uint64_t v192 = v14;
  uint64_t v45 = *(int *)(v14 + 36);
  uint64_t v216 = (uint64_t)v41;
  uint64_t v46 = a1 + v45;
  uint64_t v47 = (uint64_t)&v10[*((int *)v212 + 12)];
  sub_10006CAB8((uint64_t)v41 + v45, (uint64_t)v10, &qword_1010D0AB0);
  sub_10006CAB8(v46, v47, &qword_1010D0AB0);
  uint64_t v48 = type metadata accessor for UIView.Corner();
  uint64_t v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48);
  int v50 = v49(v10, 1, v48);
  int v51 = v49((char *)v47, 1, v48);
  uint64_t v52 = a1;
  if (v50 != 1)
  {
    uint64_t v53 = (uint64_t)v214;
    if (v51 == 1) {
      goto LABEL_7;
    }
LABEL_8:
    sub_1000637B8((uint64_t)v10, &qword_1010D0B20);
    unint64_t v55 = v211;
    UIAccessibilityTraits v54 = v213;
    goto LABEL_9;
  }
  uint64_t v53 = (uint64_t)v214;
  if (v51 == 1) {
    goto LABEL_8;
  }
  sub_1000637B8(v47, &qword_1010D0AB0);
LABEL_7:
  sub_1000637B8((uint64_t)v10, &qword_1010D0AB0);
  UIAccessibilityTraits v54 = v213;
  *((unsigned char *)v213 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated) = 1;
  unint64_t v55 = v211;
LABEL_9:
  [v54 invalidateIntrinsicContentSize];
  [v54 accessibilityUpdateSymbolButton];
  long long v56 = *(_OWORD *)(a1 + 80);
  long long v250 = *(_OWORD *)(a1 + 64);
  long long v251 = v56;
  long long v252 = *(_OWORD *)(a1 + 96);
  uint64_t v253 = *(void *)(a1 + 112);
  long long v57 = *(_OWORD *)(a1 + 16);
  long long v246 = *(_OWORD *)a1;
  long long v247 = v57;
  long long v58 = *(_OWORD *)(a1 + 48);
  long long v248 = *(_OWORD *)(a1 + 32);
  long long v249 = v58;
  id v59 = sub_100C215B0();
  [v54 setLargeContentImage:v59];

  id v60 = [v54 window];
  if (!v60 || (v204 & 1) != 0 || (double v61 = v201, v201 <= 0.0))
  {
    if (qword_1010C8410 != -1) {
      swift_once();
    }
    uint64_t v74 = type metadata accessor for Logger();
    uint64_t v75 = sub_100050A90(v74, (uint64_t)qword_10112C0F8);
    sub_100C35BE4(a1, v53, type metadata accessor for SymbolButton.Configuration);
    id v76 = v54;
    swift_bridgeObjectRetain_n();
    id v77 = v76;
    uint64_t v213 = (long long *)v75;
    id v78 = Logger.logObject.getter();
    os_log_type_t v79 = static os_log_type_t.debug.getter();
    BOOL v80 = os_log_type_enabled(v78, v79);
    uint64_t v81 = v216;
    if (v80)
    {
      uint64_t v82 = swift_slowAlloc();
      uint64_t v212 = (char *)swift_slowAlloc();
      *(void *)&long long v237 = v212;
      *(_DWORD *)uint64_t v82 = 136446722;
      id v83 = (uint64_t *)&v77[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
      swift_beginAccess();
      unint64_t v84 = v83[1];
      if (v84)
      {
        uint64_t v85 = *v83;
        unint64_t v86 = v84;
      }
      else
      {
        long long v204 = v77;
        id v87 = [v204 description];
        uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v86 = v88;

        uint64_t v81 = v216;
      }
      swift_bridgeObjectRetain();
      *(void *)(v82 + 4) = sub_100076010(v85, v86, (uint64_t *)&v237);
      swift_bridgeObjectRelease();

      *(_WORD *)(v82 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(void *)(v82 + 14) = sub_100076010(v194, v55, (uint64_t *)&v237);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v82 + 22) = 2082;
      uint64_t v89 = (uint64_t)v214;
      unint64_t v90 = SymbolButton.Configuration.description.getter();
      *(void *)(v82 + 24) = sub_100076010(v90, v91, (uint64_t *)&v237);
      swift_bridgeObjectRelease();
      sub_100C2DA84(v89, type metadata accessor for SymbolButton.Configuration);
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "[%{public}s] UpdateID=%{public}s — Applying new configuration=%{public}s", (uint8_t *)v82, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      sub_100C2DA84(v53, type metadata accessor for SymbolButton.Configuration);
    }

    sub_100C28D38(v52);
    uint64_t v92 = *(void *)(v215 + 16);
    if (v92)
    {
      uint64_t v93 = swift_bridgeObjectRetain() + 72;
      while (1)
      {
        CGRect v95 = *(void (**)(char *))(v93 - 40);
        objc_super v96 = *(void (**)(char *))(v93 - 8);
        if (v95)
        {
          sub_10007B674((uint64_t)v96);
          sub_10007B674((uint64_t)v95);
          v95(v77);
          if (v96) {
            goto LABEL_33;
          }
        }
        else
        {
          sub_10007B674((uint64_t)v96);
          if (v96)
          {
LABEL_33:
            v96(v77);
            sub_10006ADFC((uint64_t)v95);
            uint64_t v94 = (uint64_t)v96;
            goto LABEL_28;
          }
        }
        uint64_t v94 = (uint64_t)v95;
LABEL_28:
        sub_10006ADFC(v94);
        v93 += 48;
        if (!--v92)
        {
          swift_bridgeObjectRelease();
          uint64_t v81 = v216;
          break;
        }
      }
    }
    uint64_t v97 = *(void *)(v81 + 8);
    uint64_t v99 = *(void **)(v81 + 16);
    uint64_t v98 = *(void **)(v81 + 24);
    uint64_t v100 = *(void *)(v81 + 32);
    uint64_t v101 = *(unsigned __int8 *)(v81 + 40);
    uint64_t v102 = *(unsigned __int8 *)(v81 + 80);
    uint64_t v103 = *(void *)(v81 + 88);
    uint64_t v104 = *(void **)(v81 + 112);
    v230[0] = *(void *)v81;
    v230[1] = v97;
    v230[2] = v99;
    v230[3] = v98;
    v230[4] = v100;
    v230[5] = v101;
    long long v105 = *(_OWORD *)(v81 + 64);
    long long v231 = *(_OWORD *)(v81 + 48);
    long long v232 = v105;
    uint64_t v233 = v102;
    uint64_t v234 = v103;
    long long v235 = *(_OWORD *)(v81 + 96);
    uint64_t v236 = v104;
    uint64_t v106 = *(void **)(v52 + 32);
    uint64_t v107 = (void *)*(unsigned __int8 *)(v52 + 40);
    uint64_t v108 = *(unsigned __int8 *)(v52 + 80);
    long long v109 = *(_OWORD *)(v52 + 16);
    long long v237 = *(_OWORD *)v52;
    long long v238 = v109;
    uint64_t v239 = v106;
    unint64_t v240 = v107;
    long long v110 = *(_OWORD *)(v52 + 64);
    long long v241 = *(_OWORD *)(v52 + 48);
    long long v242 = v110;
    uint64_t v243 = v108;
    long long v244 = *(_OWORD *)(v52 + 88);
    long long v245 = *(_OWORD *)(v52 + 104);
    id v111 = v104;
    swift_bridgeObjectRetain();
    id v112 = v99;
    id v113 = v98;
    swift_bridgeObjectRetain();
    char v114 = _s11MusicCoreUI12SymbolButtonC0D0V21hasSignificantChanges4from2toSbAESg_AItFZ_0((uint64_t)v230, (uint64_t)&v237);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v115 = v216;
    uint64_t v116 = v205;
    sub_100C35BE4(v216, v205, type metadata accessor for SymbolButton.Configuration);
    uint64_t v117 = v206;
    sub_100C35BE4(v52, v206, type metadata accessor for SymbolButton.Configuration);
    if (v114)
    {
      sub_100C2DA84(v116, type metadata accessor for SymbolButton.Configuration);
      sub_100C2DA84(v117, type metadata accessor for SymbolButton.Configuration);
      uint64_t v118 = v207;
      sub_100C35BE4(v115, v207, type metadata accessor for SymbolButton.Configuration);
      uint64_t v119 = v208;
      sub_100C35BE4(v52, v208, type metadata accessor for SymbolButton.Configuration);
      uint64_t v120 = (uint64_t)v210;
    }
    else
    {
      long long v218 = *(_OWORD *)(v116 + 120);
      long long v121 = *(_OWORD *)(v116 + 160);
      long long v220 = *(_OWORD *)(v116 + 144);
      long long v221 = v121;
      long long v224 = *(_OWORD *)(v117 + 120);
      long long v122 = *(_OWORD *)(v117 + 160);
      long long v226 = *(_OWORD *)(v117 + 144);
      uint64_t v123 = *(void *)(v116 + 176);
      char v124 = *(unsigned char *)(v116 + 184);
      uint64_t v219 = *(void *)(v116 + 136);
      uint64_t v222 = v123;
      char v223 = v124;
      uint64_t v125 = *(void *)(v117 + 136);
      uint64_t v126 = *(void *)(v117 + 176);
      char v127 = *(unsigned char *)(v117 + 184);
      long long v227 = v122;
      uint64_t v225 = v125;
      uint64_t v228 = v126;
      char v229 = v127;
      char v128 = sub_100C2FC24((uint64_t)&v218, (uint64_t)&v224);
      sub_100C2DA84(v116, type metadata accessor for SymbolButton.Configuration);
      sub_100C2DA84(v117, type metadata accessor for SymbolButton.Configuration);
      uint64_t v118 = v207;
      sub_100C35BE4(v115, v207, type metadata accessor for SymbolButton.Configuration);
      uint64_t v119 = v208;
      sub_100C35BE4(v52, v208, type metadata accessor for SymbolButton.Configuration);
      uint64_t v120 = (uint64_t)v210;
      if ((v128 & 1) == 0)
      {
        int v141 = (*(void *)(v118 + 128) != 0) & (*(unsigned __int8 *)(v118 + 184) ^ 1);
        int v142 = (*(void *)(v119 + 128) != 0) & (*(unsigned __int8 *)(v119 + 184) ^ 1);
        sub_100C2DA84(v118, type metadata accessor for SymbolButton.Configuration);
        sub_100C2DA84(v119, type metadata accessor for SymbolButton.Configuration);
        uint64_t v129 = v209;
        sub_100C35BE4(v115, v209, type metadata accessor for SymbolButton.Configuration);
        sub_100C35BE4(v52, v120, type metadata accessor for SymbolButton.Configuration);
        uint64_t v143 = v192;
        if (v141 == v142)
        {
          uint64_t v144 = *(int *)(v192 + 40);
          uint64_t v145 = *(void *)(v129 + v144);
          uint64_t v146 = *(void *)(v120 + v144);
          BOOL v147 = v146 == 0;
          if (v145)
          {
            if (!v146) {
              goto LABEL_39;
            }
            BOOL v147 = v145 == v146;
          }
          sub_100C2DA84(v129, type metadata accessor for SymbolButton.Configuration);
          sub_100C2DA84(v120, type metadata accessor for SymbolButton.Configuration);
          uint64_t v130 = v203;
          sub_100C35BE4(v115, v203, type metadata accessor for SymbolButton.Configuration);
          uint64_t v131 = v202;
          sub_100C35BE4(v52, v202, type metadata accessor for SymbolButton.Configuration);
          if (v147)
          {
            uint64_t v148 = *(int *)(v143 + 44);
            uint64_t v149 = *(void *)(v130 + v148 + 16);
            uint64_t v150 = *(void *)(v131 + v148 + 16);
            if (v149 == 1)
            {
              if (v150 != 1) {
                goto LABEL_40;
              }
            }
            else if (v150 == 1)
            {
              goto LABEL_40;
            }
            sub_100C2DA84(v131, type metadata accessor for SymbolButton.Configuration);
            sub_100C2DA84(v130, type metadata accessor for SymbolButton.Configuration);
            goto LABEL_41;
          }
LABEL_40:
          sub_100C2DA84(v131, type metadata accessor for SymbolButton.Configuration);
          sub_100C2DA84(v130, type metadata accessor for SymbolButton.Configuration);
          [v77 setNeedsLayout];
LABEL_41:
          double v132 = v77;
          unint64_t v133 = v211;
          swift_bridgeObjectRetain();
          uint64_t v134 = Logger.logObject.getter();
          os_log_type_t v135 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v134, v135))
          {
            uint64_t v136 = swift_slowAlloc();
            v217[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v136 = 136446466;
            uint64_t v137 = (uint64_t *)&v132[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
            swift_beginAccess();
            unint64_t v138 = v137[1];
            if (v138)
            {
              uint64_t v139 = *v137;
              unint64_t v140 = v138;
            }
            else
            {
              id v151 = [v132 description];
              uint64_t v139 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v140 = v152;
            }
            swift_bridgeObjectRetain();
            *(void *)(v136 + 4) = sub_100076010(v139, v140, v217);
            swift_bridgeObjectRelease();

            *(_WORD *)(v136 + 12) = 2082;
            swift_bridgeObjectRetain();
            *(void *)(v136 + 14) = sub_100076010(v194, v133, v217);
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v134, v135, "[%{public}s] UpdateID=%{public}s — Updated ✅", (uint8_t *)v136, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          uint64_t v43 = v216;
          goto LABEL_56;
        }
LABEL_39:
        sub_100C2DA84(v129, type metadata accessor for SymbolButton.Configuration);
        sub_100C2DA84(v120, type metadata accessor for SymbolButton.Configuration);
        uint64_t v130 = v203;
        sub_100C35BE4(v115, v203, type metadata accessor for SymbolButton.Configuration);
        uint64_t v131 = v202;
        sub_100C35BE4(v52, v202, type metadata accessor for SymbolButton.Configuration);
        goto LABEL_40;
      }
    }
    sub_100C2DA84(v118, type metadata accessor for SymbolButton.Configuration);
    sub_100C2DA84(v119, type metadata accessor for SymbolButton.Configuration);
    uint64_t v129 = v209;
    sub_100C35BE4(v115, v209, type metadata accessor for SymbolButton.Configuration);
    sub_100C35BE4(v52, v120, type metadata accessor for SymbolButton.Configuration);
    goto LABEL_39;
  }
  if (qword_1010C8410 != -1) {
    swift_once();
  }
  uint64_t v62 = type metadata accessor for Logger();
  sub_100050A90(v62, (uint64_t)qword_10112C0F8);
  uint64_t v63 = v199;
  sub_100C35BE4(a1, v199, type metadata accessor for SymbolButton.Configuration);
  uint64_t v64 = v54;
  swift_bridgeObjectRetain_n();
  uint64_t v65 = v64;
  objc_super v66 = Logger.logObject.getter();
  int v67 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v66, (os_log_type_t)v67))
  {
    LODWORD(v214) = v67;
    uint64_t v68 = swift_slowAlloc();
    uint64_t v213 = (long long *)swift_slowAlloc();
    *(void *)&long long v237 = v213;
    *(_DWORD *)uint64_t v68 = 136446722;
    long long v69 = (uint64_t *)&v65[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
    swift_beginAccess();
    unint64_t v70 = v69[1];
    if (v70)
    {
      uint64_t v71 = *v69;
      uint64_t v72 = v65;
      unint64_t v73 = v70;
    }
    else
    {
      uint64_t v212 = v65;
      id v153 = [v212 description];
      uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v72 = v65;
      unint64_t v73 = v154;

      uint64_t v63 = v199;
    }
    swift_bridgeObjectRetain();
    *(void *)(v68 + 4) = sub_100076010(v71, v73, (uint64_t *)&v237);
    swift_bridgeObjectRelease();

    *(_WORD *)(v68 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v68 + 14) = sub_100076010(v194, v55, (uint64_t *)&v237);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v68 + 22) = 2082;
    unint64_t v155 = SymbolButton.Configuration.description.getter();
    *(void *)(v68 + 24) = sub_100076010(v155, v156, (uint64_t *)&v237);
    swift_bridgeObjectRelease();
    sub_100C2DA84(v63, type metadata accessor for SymbolButton.Configuration);
    _os_log_impl((void *)&_mh_execute_header, v66, (os_log_type_t)v214, "[%{public}s] UpdateID=%{public}s — Animating to new configuration=%{public}s", (uint8_t *)v68, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v65 = v72;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    sub_100C2DA84(v63, type metadata accessor for SymbolButton.Configuration);
  }
  uint64_t v157 = (uint64_t)v193;
  uint64_t v158 = *(void *)&v65[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount];
  uint64_t v159 = v158 + 1;
  uint64_t v160 = v200;
  if (__OFADD__(v158, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)&v65[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = v159;
    if (v159 != v158) {
      sub_100C29664();
    }
    uint64_t v161 = swift_allocObject();
    uint64_t v210 = (char *)v161;
    *(void *)(v161 + 16) = _swiftEmptyArrayStorage;
    uint64_t v213 = (long long *)(v161 + 16);
    uint64_t v214 = (char *)self;
    sub_100C35BE4(v216, v157, type metadata accessor for SymbolButton.Configuration);
    sub_100C35BE4(v52, v160, type metadata accessor for SymbolButton.Configuration);
    uint64_t v162 = *(unsigned __int8 *)(v198 + 80);
    uint64_t v163 = (v162 + 16) & ~v162;
    uint64_t v207 = v15 + v162;
    uint64_t v208 = v162;
    uint64_t v212 = v65;
    uint64_t v164 = (v163 + v15 + v162) & ~v162;
    uint64_t v206 = v15 + 7;
    unint64_t v165 = (v164 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v209 = v162 | 7;
    uint64_t v166 = swift_allocObject();
    sub_100C363B8(v157, v166 + v163, type metadata accessor for SymbolButton.Configuration);
    sub_100C363B8(v160, v166 + v164, type metadata accessor for SymbolButton.Configuration);
    uint64_t v168 = v212;
    uint64_t v167 = v213;
    *(void *)(v166 + v165) = v212;
    *(void *)(v166 + ((v165 + 15) & 0xFFFFFFFFFFFFFFF8)) = v167;
    uint64_t v169 = swift_allocObject();
    *(void *)(v169 + 16) = sub_100C305F4;
    *(void *)(v169 + 24) = v166;
    uint64_t v205 = v166;
    uint64_t v239 = sub_10013DD14;
    unint64_t v240 = (void *)v169;
    *(void *)&long long v237 = _NSConcreteStackBlock;
    *((void *)&v237 + 1) = 1107296256;
    uint64_t v213 = &v238;
    *(void *)&long long v238 = sub_10007A61C;
    *((void *)&v238 + 1) = &unk_101012D88;
    double v170 = _Block_copy(&v237);
    double v171 = v168;
    swift_retain();
    swift_release();
    [v214 performWithoutAnimation:v170];
    _Block_release(v170);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      double v173 = v195;
      uint64_t v174 = v208;
      uint64_t v175 = ~v208;
      uint64_t v176 = (uint64_t)v193;
      sub_100C35BE4(v52, (uint64_t)v193, type metadata accessor for SymbolButton.Configuration);
      uint64_t v177 = v200;
      sub_100C35BE4(v216, v200, type metadata accessor for SymbolButton.Configuration);
      uint64_t v178 = (v174 + 24) & v175;
      uint64_t v179 = (v178 + v207) & v175;
      unint64_t v180 = (v179 + v206) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v181 = swift_allocObject();
      *(void *)(v181 + 16) = v171;
      sub_100C363B8(v176, v181 + v178, type metadata accessor for SymbolButton.Configuration);
      sub_100C363B8(v177, v181 + v179, type metadata accessor for SymbolButton.Configuration);
      CGPoint v182 = v210;
      *(void *)(v181 + v180) = v210;
      uint64_t v183 = v215;
      *(void *)(v181 + ((v180 + 15) & 0xFFFFFFFFFFFFFFF8)) = v215;
      uint64_t v239 = sub_100C30A4C;
      unint64_t v240 = (void *)v181;
      *(void *)&long long v237 = _NSConcreteStackBlock;
      *((void *)&v237 + 1) = 1107296256;
      *(void *)&long long v238 = sub_100020238;
      *((void *)&v238 + 1) = &unk_101012DD8;
      CGPoint v184 = _Block_copy(&v237);
      CGPoint v185 = v171;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_release();
      CGPoint v186 = (void *)swift_allocObject();
      v186[2] = v182;
      v186[3] = v185;
      uint64_t v187 = v194;
      v186[4] = v183;
      v186[5] = v187;
      uint64_t v188 = ObjectType;
      v186[6] = v211;
      v186[7] = v188;
      uint64_t v239 = sub_100C30B48;
      unint64_t v240 = v186;
      *(void *)&long long v237 = _NSConcreteStackBlock;
      *((void *)&v237 + 1) = 1107296256;
      *(void *)&long long v238 = sub_1001695E8;
      *((void *)&v238 + 1) = &unk_101012E28;
      CGPoint v189 = _Block_copy(&v237);
      CGPoint v190 = v185;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_release();
      [v214 animateKeyframesWithDuration:v197 delay:v184 options:v189 animations:v61 completion:v173];
      _Block_release(v189);
      _Block_release(v184);
      sub_100C2DA84(v216, type metadata accessor for SymbolButton.Configuration);
      swift_release();
      swift_release();
      return;
    }
  }
  __break(1u);
}

id sub_100C215B0()
{
  if (!*(void *)(v0 + 8)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  NSString v1 = String._bridgeToObjectiveC()();
  uint64_t v2 = self;
  id v3 = [v2 _systemImageNamed:v1];

  if (v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = *(id *)(v0 + 16);
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v3 = [v2 imageNamed:v5 inBundle:v4];
  }
  return v3;
}

BOOL static SymbolButton.CustomView.hasSignificantChanges(from:to:)(uint64_t a1, uint64_t a2)
{
  sub_10003CABC(a2, (uint64_t)v8, &qword_1010D0B28);
  uint64_t v3 = v8[0];
  sub_10003CABC(a1, (uint64_t)v7, &qword_1010D0B28);
  if (v7[0]) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4) {
    BOOL v5 = (v7[0] | v3) == 0;
  }
  else {
    BOOL v5 = v7[0] == v3;
  }
  return !v5;
}

void sub_100C21728(uint64_t *a1, uint64_t a2, char *a3, char **a4)
{
  uint64_t v137 = a4;
  uint64_t v136 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v136);
  uint64_t v8 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *((_OWORD *)a1 + 4);
  long long v164 = *((_OWORD *)a1 + 3);
  long long v165 = v9;
  long long v167 = *(_OWORD *)(a1 + 11);
  long long v168 = *(_OWORD *)(a1 + 13);
  long long v10 = *(_OWORD *)(a2 + 48);
  long long v11 = *(_OWORD *)(a2 + 80);
  long long v155 = *(_OWORD *)(a2 + 64);
  long long v156 = v11;
  long long v157 = *(_OWORD *)(a2 + 96);
  long long v12 = *(_OWORD *)(a2 + 16);
  v154[0] = *(_OWORD *)a2;
  v154[1] = v12;
  long long v13 = *(_OWORD *)(a2 + 48);
  v154[2] = *(_OWORD *)(a2 + 32);
  v154[3] = v13;
  uint64_t v14 = *a1;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  uint64_t v17 = *((unsigned __int8 *)a1 + 40);
  uint64_t v18 = *((unsigned __int8 *)a1 + 80);
  v169[0] = v154[0];
  v169[1] = v12;
  long long v135 = *(_OWORD *)(a1 + 1);
  long long v160 = v135;
  uint64_t v159 = v14;
  uint64_t v161 = v15;
  uint64_t v162 = v16;
  uint64_t v163 = v17;
  uint64_t v166 = v18;
  uint64_t v158 = *(void *)(a2 + 112);
  uint64_t v19 = *(unsigned __int8 *)(a2 + 40);
  uint64_t v20 = *(unsigned __int8 *)(a2 + 80);
  uint64_t v170 = *(void *)(a2 + 32);
  uint64_t v171 = v19;
  long long v172 = v10;
  long long v173 = v155;
  uint64_t v174 = v20;
  long long v21 = *(_OWORD *)(a2 + 104);
  long long v175 = *(_OWORD *)(a2 + 88);
  long long v176 = v21;
  if (_s11MusicCoreUI12SymbolButtonC0D0V21hasSignificantChanges4from2toSbAESg_AItFZ_0((uint64_t)&v159, (uint64_t)v169))
  {
    id v22 = sub_100C27898();
    uint64_t v23 = (objc_class *)type metadata accessor for SymbolButton.ImageView();
    id v24 = objc_allocWithZone(v23);
    sub_100C35CEC((uint64_t)v154);
    v138.receiver = v24;
    v138.super_class = v23;
    [super initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v25 setAdjustsImageSizeForAccessibilityContentSizeCategory:0];
    [v25 setContentMode:4];
    sub_100C2B1D4((uint64_t)v154);
    sub_100C35D4C((uint64_t)v154);
    id v26 = v25;
    id v27 = [v22 preferredSymbolConfiguration];
    [v26 setPreferredSymbolConfiguration:v27];

    id v28 = v26;
    [v22 frame];
    [v28 setFrame:];

    uint64_t v29 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView];
    *(void *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView] = v28;

    id v30 = sub_100C27898();
    [v30 setAlpha:0.0];

    id v31 = sub_100C27898();
    uint64_t v32 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
    if (([v31 isDescendantOfView:v32] & 1) == 0) {
      [v32 addSubview:v31];
    }

    sub_100C35BE4(a2, (uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
    if ((void)v135)
    {
      sub_100C2DA84((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
    }
    else
    {
      uint64_t v33 = *((void *)v8 + 1);
      sub_100C2DA84((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
      if (v33)
      {
        [a3 setNeedsLayout];
        [a3 layoutIfNeeded];
      }
    }
    id v34 = sub_100C27898();
    uint64_t v35 = *(void *)(a2 + 104);
    uint64_t v36 = v137;
    uint64_t v37 = *v137;
    id v38 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char *v36 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v37 = sub_100AFBCE8(0, *((void *)v37 + 2) + 1, 1, v37);
      *uint64_t v137 = v37;
    }
    unint64_t v41 = *((void *)v37 + 2);
    unint64_t v40 = *((void *)v37 + 3);
    if (v41 >= v40 >> 1) {
      uint64_t v37 = sub_100AFBCE8((char *)(v40 > 1), v41 + 1, 1, v37);
    }
    *((void *)v37 + 2) = v41 + 1;
    uint64_t v42 = &v37[88 * v41];
    *((void *)v42 + 4) = v34;
    *((void *)v42 + 5) = v35;
    *((void *)v42 + 6) = 0;
    *((void *)v42 + 7) = 0;
    *((void *)v42 + 8) = 0;
    *((void *)v42 + 9) = v38;
    *((_OWORD *)v42 + 5) = xmmword_100E26B10;
    *((void *)v42 + 12) = 0;
    *((void *)v42 + 13) = 0;
    v42[112] = 0;
    *uint64_t v137 = v37;
  }
  uint64_t v43 = a1[17];
  uint64_t v44 = a1[22];
  char v45 = *((unsigned char *)a1 + 184);
  long long v139 = *(_OWORD *)(a1 + 15);
  uint64_t v140 = v43;
  long long v46 = *((_OWORD *)a1 + 10);
  long long v141 = *((_OWORD *)a1 + 9);
  long long v142 = v46;
  uint64_t v143 = v44;
  char v144 = v45;
  long long v47 = *(_OWORD *)(a2 + 136);
  long long v48 = *(_OWORD *)(a2 + 168);
  v151[2] = *(_OWORD *)(a2 + 152);
  long long v152 = v48;
  char v153 = *(unsigned char *)(a2 + 184);
  v151[0] = *(_OWORD *)(a2 + 120);
  v151[1] = v47;
  uint64_t v49 = *(void *)(a2 + 136);
  uint64_t v50 = *(void *)(a2 + 176);
  char v51 = *(unsigned char *)(a2 + 184);
  long long v145 = *(_OWORD *)(a2 + 120);
  uint64_t v146 = v49;
  long long v147 = *(_OWORD *)(a2 + 144);
  long long v148 = *(_OWORD *)(a2 + 160);
  uint64_t v149 = v50;
  char v150 = v51;
  if (sub_100C2FC24((uint64_t)&v139, (uint64_t)&v145))
  {
    id v52 = sub_100C27A00();
    id v53 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.Label());
    sub_100C35C4C((uint64_t)v151);
    id v54 = sub_100C2B3CC((uint64_t)v151);
    id v55 = [v52 font];
    [v54 setFont:v55];

    id v56 = v54;
    [v52 frame];
    [v56 setFrame:];

    long long v57 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel];
    *(void *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel] = v56;

    id v58 = sub_100C27A00();
    [v58 setAlpha:0.0];

    id v59 = sub_100C27A00();
    id v60 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
    if (([v59 isDescendantOfView:v60] & 1) == 0) {
      [v60 addSubview:v59];
    }

    *(void *)&long long v135 = v152;
    id v61 = sub_100C27A00();
    id v62 = v52;
    BOOL v63 = sub_100C30CEC((uint64_t)&v139, (uint64_t)&v145);
    uint64_t v64 = v137;
    uint64_t v65 = *v137;
    char v66 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v64 = v65;
    if ((v66 & 1) == 0)
    {
      uint64_t v65 = sub_100AFBCE8(0, *((void *)v65 + 2) + 1, 1, v65);
      *uint64_t v137 = v65;
    }
    unint64_t v68 = *((void *)v65 + 2);
    unint64_t v67 = *((void *)v65 + 3);
    if (v68 >= v67 >> 1) {
      uint64_t v65 = sub_100AFBCE8((char *)(v67 > 1), v68 + 1, 1, v65);
    }
    *((void *)v65 + 2) = v68 + 1;
    long long v69 = &v65[88 * v68];
    uint64_t v70 = v135;
    *((void *)v69 + 4) = v61;
    *((void *)v69 + 5) = v70;
    *((void *)v69 + 6) = 0;
    *((void *)v69 + 7) = 0;
    *((void *)v69 + 8) = 0;
    *((void *)v69 + 9) = v62;
    *((_OWORD *)v69 + 5) = xmmword_100E26B10;
    *((void *)v69 + 12) = 0;
    *((void *)v69 + 13) = 0;
    v69[112] = v63;
    *uint64_t v137 = v65;
  }
  uint64_t v71 = v136[10];
  uint64_t v72 = *(void **)((char *)a1 + v71);
  uint64_t v73 = a2 + v71;
  uint64_t v74 = *(void **)v73;
  uint64_t v75 = *(void *)(v73 + 40);
  if (v72)
  {
    if (v74 && v72 == v74) {
      goto LABEL_40;
    }
    if (!v74)
    {
      id v76 = 0;
      goto LABEL_28;
    }
  }
  else if (!v74)
  {
    goto LABEL_40;
  }
  id v77 = v74;
  id v76 = v74;
LABEL_28:
  sub_100C2F874(v76);

  uint64_t v78 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView;
  os_log_type_t v79 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView];
  if (v79) {
    [v79 setAlpha:0.0];
  }
  sub_100C27B00();
  [*(id *)&a3[v78] layoutIfNeeded];
  if (!v74)
  {
    uint64_t v75 = 0;
    if (v72) {
      goto LABEL_32;
    }
LABEL_34:
    *(void *)&long long v135 = 0;
    goto LABEL_35;
  }
  id v80 = v74;
  if (!v72) {
    goto LABEL_34;
  }
LABEL_32:
  id v81 = v72;
  *(void *)&long long v135 = 1;
LABEL_35:
  uint64_t v82 = a3;
  id v83 = v137;
  unint64_t v84 = *v137;
  char v85 = swift_isUniquelyReferenced_nonNull_native();
  *id v83 = v84;
  uint64_t v86 = v75;
  if ((v85 & 1) == 0)
  {
    unint64_t v84 = sub_100AFBCE8(0, *((void *)v84 + 2) + 1, 1, v84);
    *uint64_t v137 = v84;
  }
  unint64_t v88 = *((void *)v84 + 2);
  unint64_t v87 = *((void *)v84 + 3);
  if (v88 >= v87 >> 1) {
    unint64_t v84 = sub_100AFBCE8((char *)(v87 > 1), v88 + 1, 1, v84);
  }
  *((void *)v84 + 2) = v88 + 1;
  uint64_t v89 = &v84[88 * v88];
  *((void *)v89 + 4) = v74;
  *((void *)v89 + 5) = v86;
  *((void *)v89 + 6) = 0;
  *((void *)v89 + 7) = 0;
  *((void *)v89 + 8) = 0;
  *((void *)v89 + 9) = v72;
  uint64_t v90 = v135;
  *((void *)v89 + 10) = 0;
  *((void *)v89 + 11) = v90;
  *((void *)v89 + 12) = 0;
  *((void *)v89 + 13) = 0;
  v89[112] = 0;
  *uint64_t v137 = v84;
  a3 = v82;
LABEL_40:
  uint64_t v91 = v136[11];
  uint64_t v92 = *(uint64_t *)((char *)a1 + v91 + 16);
  uint64_t v93 = (uint64_t *)(a2 + v91);
  uint64_t v94 = (void *)v93[2];
  if (v92 != 1)
  {
    if (v94 != (void *)1) {
      return;
    }
    CGRect v95 = (id *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
    objc_super v96 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
    *(void *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
    id v97 = v96;
    if (v96)
    {
      uint64_t v98 = v97;
      [v97 removeFromSuperview];
      if (*v95)
      {
        uint64_t v99 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
        uint64_t v100 = *(void *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
        id v101 = *v95;
        [v99 insertSubview:v101 aboveSubview:v100];
        sub_100C27CE8();
      }
      uint64_t v102 = 0;
    }
    else
    {
      uint64_t v102 = 0;
    }
    goto LABEL_63;
  }
  if (v94 == (void *)1) {
    return;
  }
  uint64_t v103 = *v93;
  uint64_t v102 = v93[1];
  CGRect v95 = (id *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  objc_super v96 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  uint64_t v104 = (objc_class *)type metadata accessor for SymbolButton.BadgeView();
  id v105 = objc_allocWithZone(v104);
  sub_100C30C80(v103, v102, v94);
  uint64_t v134 = v104;
  if (v96)
  {
    id v106 = v96;
    sub_100C30C80(v103, v102, v94);
  }
  else
  {
    id v107 = v94;
  }
  uint64_t v108 = sub_100C2B6EC(v94, *(double *)&v103, *(double *)&v102);
  id v109 = *v95;
  *CGRect v95 = v108;
  long long v110 = v108;
  *(void *)&long long v135 = v103;
  uint64_t v136 = (int *)v110;
  if (v108)
  {
    if (!v109) {
      goto LABEL_57;
    }
    id v111 = (objc_class *)v109;
    uint64_t v132 = 1;
    id v112 = v111;
    id v113 = v136;
    char v114 = static NSObject.== infix(_:_:)();
    uint64_t v134 = v112;

    uint64_t v92 = v132;
    if (v114)
    {
      id v109 = v134;
LABEL_59:

      goto LABEL_60;
    }
LABEL_56:
    [v109 removeFromSuperview];
    uint64_t v108 = (char *)*v95;
    if (!*v95)
    {
LABEL_58:
      id v113 = v136;
      goto LABEL_59;
    }
LABEL_57:
    uint64_t v115 = *(void **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
    uint64_t v116 = *(objc_class **)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
    id v133 = v109;
    uint64_t v134 = v116;
    uint64_t v117 = v108;
    [v115 insertSubview:v117 aboveSubview:v134];
    sub_100C27CE8();

    id v109 = v133;
    goto LABEL_58;
  }
  if (v109) {
    goto LABEL_56;
  }
LABEL_60:
  uint64_t v118 = v135;

  if (*v95) {
    [*v95 setAlpha:0.0];
  }
  sub_100C27CE8();
  sub_1008329C4(v118, v102, (uint64_t)v94);
LABEL_63:
  BOOL v119 = v92 != 1;
  id v120 = *v95;
  if (*v95) {
    uint64_t v121 = v102;
  }
  else {
    uint64_t v121 = 0;
  }
  if (*v95) {
    BOOL v122 = v119;
  }
  else {
    BOOL v122 = 0;
  }
  uint64_t v123 = v137;
  char v124 = *v137;
  id v125 = v120;
  id v126 = v96;
  char v127 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v123 = v124;
  if ((v127 & 1) == 0)
  {
    char v124 = sub_100AFBCE8(0, *((void *)v124 + 2) + 1, 1, v124);
    *uint64_t v137 = v124;
  }
  unint64_t v129 = *((void *)v124 + 2);
  unint64_t v128 = *((void *)v124 + 3);
  if (v129 >= v128 >> 1) {
    char v124 = sub_100AFBCE8((char *)(v128 > 1), v129 + 1, 1, v124);
  }
  *((void *)v124 + 2) = v129 + 1;
  uint64_t v130 = &v124[88 * v129];
  *((void *)v130 + 4) = v120;
  *((void *)v130 + 5) = v121;
  *((void *)v130 + 6) = v122;
  *((void *)v130 + 7) = 0;
  *((void *)v130 + 8) = 0;
  *((void *)v130 + 9) = v96;
  *((void *)v130 + 10) = 0;
  *((void *)v130 + 11) = v96 != 0;
  *((void *)v130 + 12) = 0;
  *((void *)v130 + 13) = 0;
  v130[112] = 0;
  *uint64_t v137 = v124;
}

uint64_t sub_100C2220C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v81 = a5;
  uint64_t v82 = a4;
  uint64_t v8 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8 - 8);
  long long v12 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v69 - v13;
  id v76 = self;
  sub_100C35BE4(a2, (uint64_t)v14, type metadata accessor for SymbolButton.Configuration);
  sub_100C35BE4(a3, (uint64_t)v12, type metadata accessor for SymbolButton.Configuration);
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = (v15 + 24) & ~v15;
  uint64_t v17 = (v10 + v15 + v16) & ~v15;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  sub_100C363B8((uint64_t)v14, v18 + v16, type metadata accessor for SymbolButton.Configuration);
  sub_100C363B8((uint64_t)v12, v18 + v17, type metadata accessor for SymbolButton.Configuration);
  *(void *)(v18 + ((v10 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v82;
  unint64_t v88 = sub_100C36218;
  uint64_t v89 = (void *)v18;
  aBlock = _NSConcreteStackBlock;
  uint64_t v85 = 1107296256;
  id v83 = &v86;
  uint64_t v86 = sub_100020238;
  unint64_t v87 = &unk_101013818;
  uint64_t v19 = _Block_copy(&aBlock);
  id v20 = a1;
  swift_retain();
  swift_release();
  [v76 addKeyframeWithRelativeStartTime:v19 relativeDuration:0.0 animations:1.0];
  _Block_release(v19);
  uint64_t v21 = *(void *)(v81 + 16);
  if (v21)
  {
    uint64_t v22 = v81 + 72;
    swift_bridgeObjectRetain();
    uint64_t v23 = 1;
    while (1)
    {
      uint64_t v24 = *(void *)(v22 - 40);
      if (v24)
      {
        uint64_t v25 = *(void *)(v22 - 32);
        double v26 = *(double *)(v22 - 24);
        double v27 = *(double *)(v22 - 16);
        uint64_t v28 = *(void *)(v22 - 8);
        uint64_t v29 = (void *)swift_allocObject();
        v29[2] = v24;
        v29[3] = v25;
        v29[4] = v20;
        unint64_t v88 = sub_10028FB44;
        uint64_t v89 = v29;
        aBlock = _NSConcreteStackBlock;
        uint64_t v85 = 1107296256;
        uint64_t v86 = sub_100020238;
        unint64_t v87 = &unk_101013908;
        id v30 = _Block_copy(&aBlock);
        sub_10007B674(v24);
        sub_10007B674(v24);
        id v31 = v20;
        sub_10007B674(v24);
        sub_10007B674(v28);
        swift_release();
        [v76 addKeyframeWithRelativeStartTime:v30 relativeDuration:v26 animations:v27];
        _Block_release(v30);
        sub_10006ADFC(v24);
        sub_10006ADFC(v24);
        sub_10006ADFC(v28);
      }
      if (v21 == v23) {
        break;
      }
      v22 += 48;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
        break;
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v33 = v82 + 2;
  swift_beginAccess();
  uint64_t result = *v33;
  uint64_t v70 = *(void *)(*v33 + 16);
  if (!v70) {
    return result;
  }
  uint64_t v35 = result + 56;
  uint64_t v74 = &v86;
  uint64_t v69 = result;
  swift_bridgeObjectRetain_n();
  uint64_t v36 = 1;
  do
  {
    id v38 = *(void **)(v35 - 24);
    uint64_t v37 = *(void *)(v35 - 16);
    uint64_t v39 = *(void *)(v35 - 8);
    uint64_t v40 = *(void *)v35;
    uint64_t v41 = *(void *)(v35 + 8);
    uint64_t v42 = *(uint64_t **)(v35 + 16);
    uint64_t v44 = *(void *)(v35 + 24);
    uint64_t v43 = *(void *)(v35 + 32);
    uint64_t v46 = *(void *)(v35 + 40);
    uint64_t v45 = *(void *)(v35 + 48);
    int v47 = *(unsigned __int8 *)(v35 + 56);
    if (v39) {
      double v48 = 1.0;
    }
    else {
      double v48 = *(double *)(v35 - 16);
    }
    id v83 = *(uint64_t (***)(uint64_t))(v35 + 32);
    uint64_t v82 = v42;
    uint64_t v81 = v44;
    uint64_t v80 = v41;
    uint64_t v79 = v37;
    uint64_t v78 = v40;
    uint64_t v77 = v36;
    LODWORD(v75) = v47;
    if (v42)
    {
      char v93 = v43 & 1;
      if (v47) {
        double v49 = 1.0;
      }
      else {
        double v49 = 0.5;
      }
      uint64_t v73 = v39;
      uint64_t v50 = v37;
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = v42;
      *(void *)(v51 + 24) = v44;
      *(unsigned char *)(v51 + 32) = v93;
      *(_DWORD *)(v51 + 33) = *(_DWORD *)v92;
      *(_DWORD *)(v51 + 36) = *(_DWORD *)&v92[3];
      *(void *)(v51 + 40) = v46;
      *(void *)(v51 + 48) = v45;
      unint64_t v88 = sub_100C36330;
      uint64_t v89 = (void *)v51;
      aBlock = _NSConcreteStackBlock;
      uint64_t v85 = 1107296256;
      uint64_t v86 = sub_100020238;
      unint64_t v87 = &unk_1010138B8;
      uint64_t v72 = _Block_copy(&aBlock);
      uint64_t v71 = v89;
      uint64_t v52 = v50;
      uint64_t v39 = v73;
      sub_100C35DF4(v38, v52, v73, v40);
      sub_100C35DF4(v42, v44, v43, v46);
      sub_100C35DF4(v42, v44, v43, v46);
      id v53 = v42;
      sub_10007B674(v46);
      swift_release();
      id v54 = v72;
      [v76 addKeyframeWithRelativeStartTime:v72 relativeDuration:0.0 animations:v49];
      _Block_release(v54);

      sub_10006ADFC(v46);
      if (!v38)
      {
LABEL_28:
        sub_100C35E3C(0, v79, v39, v78);
        uint64_t v65 = v82;
        uint64_t v66 = v81;
        uint64_t v67 = (uint64_t)v83;
        uint64_t v68 = v46;
        goto LABEL_29;
      }
    }
    else
    {
      sub_100C35DF4(v38, v37, v39, v40);
      sub_100C35DF4(0, v44, v43, v46);
      if (!v38) {
        goto LABEL_28;
      }
    }
    char v91 = v39 & 1;
    if (v75) {
      double v55 = 1.0;
    }
    else {
      double v55 = 0.5;
    }
    if (v75) {
      double v56 = 0.0;
    }
    else {
      double v56 = 0.5;
    }
    uint64_t v57 = swift_allocObject();
    uint64_t v58 = v79;
    *(void *)(v57 + 16) = v38;
    *(void *)(v57 + 24) = v58;
    *(unsigned char *)(v57 + 32) = v91;
    *(_DWORD *)(v57 + 33) = *(_DWORD *)v90;
    *(_DWORD *)(v57 + 36) = *(_DWORD *)&v90[3];
    id v59 = v38;
    uint64_t v60 = v78;
    uint64_t v61 = v80;
    *(void *)(v57 + 40) = v78;
    *(void *)(v57 + 48) = v61;
    *(double *)(v57 + 56) = v48;
    unint64_t v88 = sub_100C362C0;
    uint64_t v89 = (void *)v57;
    aBlock = _NSConcreteStackBlock;
    uint64_t v85 = 1107296256;
    uint64_t v86 = sub_100020238;
    unint64_t v87 = &unk_101013868;
    id v62 = _Block_copy(&aBlock);
    uint64_t v75 = v45;
    BOOL v63 = v62;
    sub_100C35DF4(v59, v58, v39, v60);
    id v64 = v59;
    sub_10007B674(v60);
    swift_release();
    [v76 addKeyframeWithRelativeStartTime:v63 relativeDuration:v56 animations:v55];
    _Block_release(v63);

    sub_10006ADFC(v60);
    sub_100C35E3C(v59, v58, v39, v60);
    uint64_t v65 = v82;
    uint64_t v66 = v81;
    uint64_t v67 = (uint64_t)v83;
    uint64_t v68 = v46;
LABEL_29:
    sub_100C35E3C(v65, v66, v67, v68);
    if (v70 == v77) {
      return swift_bridgeObjectRelease_n();
    }
    v35 += 88;
    uint64_t v36 = v77 + 1;
  }
  while (!__OFADD__(v77, 1));
  __break(1u);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100C22A58(char *a1, uint64_t ObjCClassFromMetadata, uint64_t a3, uint64_t a4)
{
  uint64_t v128 = a4;
  uint64_t v130 = a1;
  uint64_t v7 = sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin(v7 - 8);
  uint64_t v131 = (uint64_t)&v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v132);
  uint64_t v10 = (char *)&v126 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v126 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v14 = [a1 traitCollection];
  sub_100C28854(v13);
  sub_100C2DA84((uint64_t)v13, type metadata accessor for SymbolButton.Metrics);
  sub_100C35BE4(ObjCClassFromMetadata, (uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
  sub_100C27E48((uint64_t)v10, v14, v13);
  uint64_t v134 = (uint64_t)v13;
  sub_100C28AE8((uint64_t)v13);
  uint64_t v15 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  sub_10003CABC(ObjCClassFromMetadata + 224, (uint64_t)v170, &qword_1010D0B30);
  id v129 = v15;
  sub_100C2A83C((uint64_t)v170);
  id v133 = *(char **)&a1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
  uint64_t v17 = *(void *)(ObjCClassFromMetadata + 192);
  uint64_t v16 = *(void **)(ObjCClassFromMetadata + 200);
  if (v16 != (void *)1)
  {
    double v18 = *(double *)(ObjCClassFromMetadata + 192);
    uint64_t v20 = *(void *)(ObjCClassFromMetadata + 216);
    uint64_t v19 = *(void **)(ObjCClassFromMetadata + 200);
    goto LABEL_5;
  }
  if (qword_1010C87F8 == -1) {
    goto LABEL_3;
  }
  while (1)
  {
    swift_once();
LABEL_3:
    swift_beginAccess();
    double v18 = *(double *)&static SymbolButton.Background.clear;
    uint64_t v19 = (void *)qword_10112CF98;
    uint64_t v20 = qword_10112CFA8;
    swift_bridgeObjectRetain();
    id v21 = v19;
LABEL_5:
    sub_100C30C38(v17, v16);
    id v22 = [v133 layer];
    if (v20) {
      NSString v23 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v23 = 0;
    }
    uint64_t v24 = v132;
    [v22 setCompositingFilter:v23];
    swift_unknownObjectRelease();

    id v25 = v19;
    sub_100C2AE6C(v19, v18);

    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(a3 + 136);
    uint64_t v27 = *(void *)(a3 + 176);
    char v28 = *(unsigned char *)(a3 + 184);
    long long v158 = *(_OWORD *)(a3 + 120);
    long long v29 = *(_OWORD *)(a3 + 160);
    long long v160 = *(_OWORD *)(a3 + 144);
    long long v161 = v29;
    uint64_t v159 = v26;
    uint64_t v162 = v27;
    char v163 = v28;
    long long v30 = *(_OWORD *)(ObjCClassFromMetadata + 136);
    long long v31 = *(_OWORD *)(ObjCClassFromMetadata + 168);
    v156[2] = *(_OWORD *)(ObjCClassFromMetadata + 152);
    v156[3] = v31;
    char v157 = *(unsigned char *)(ObjCClassFromMetadata + 184);
    v156[0] = *(_OWORD *)(ObjCClassFromMetadata + 120);
    v156[1] = v30;
    uint64_t v32 = *(void *)(ObjCClassFromMetadata + 136);
    uint64_t v33 = *(void *)(ObjCClassFromMetadata + 176);
    char v34 = *(unsigned char *)(ObjCClassFromMetadata + 184);
    long long v164 = *(_OWORD *)(ObjCClassFromMetadata + 120);
    long long v166 = *(_OWORD *)(ObjCClassFromMetadata + 144);
    long long v167 = *(_OWORD *)(ObjCClassFromMetadata + 160);
    uint64_t v165 = v32;
    uint64_t v168 = v33;
    char v169 = v34;
    char v35 = sub_100C2FC24((uint64_t)&v158, (uint64_t)&v164);
    uint64_t v36 = v130;
    if ((v35 & 1) == 0)
    {
      id v37 = sub_100C27A00();
      sub_10003CABC((uint64_t)v156, (uint64_t)v171, &qword_1010D0B40);
      sub_100C2B554((uint64_t)v156);

      sub_10003CABC((uint64_t)v171, (uint64_t)&v172, &qword_1010D0B40);
      if (v173)
      {
        uint64_t v38 = HIBYTE(v173) & 0xF;
        if ((v173 & 0x2000000000000000) == 0) {
          uint64_t v38 = v172 & 0xFFFFFFFFFFFFLL;
        }
        if (v38)
        {
          NSString v39 = String._bridgeToObjectiveC()();
          [v36 setAccessibilityLabel:v39];
        }
      }
    }
    long long v40 = *(_OWORD *)(a3 + 16);
    v140[0] = *(_OWORD *)a3;
    v140[1] = v40;
    long long v41 = *(_OWORD *)(a3 + 64);
    long long v143 = *(_OWORD *)(a3 + 48);
    long long v144 = v41;
    long long v146 = *(_OWORD *)(a3 + 88);
    long long v147 = *(_OWORD *)(a3 + 104);
    long long v42 = *(_OWORD *)(ObjCClassFromMetadata + 48);
    long long v43 = *(_OWORD *)(ObjCClassFromMetadata + 80);
    long long v136 = *(_OWORD *)(ObjCClassFromMetadata + 64);
    long long v137 = v43;
    long long v138 = *(_OWORD *)(ObjCClassFromMetadata + 96);
    long long v44 = *(_OWORD *)(ObjCClassFromMetadata + 16);
    v135[0] = *(_OWORD *)ObjCClassFromMetadata;
    v135[1] = v44;
    long long v45 = *(_OWORD *)(ObjCClassFromMetadata + 48);
    v135[2] = *(_OWORD *)(ObjCClassFromMetadata + 32);
    v135[3] = v45;
    v148[0] = v135[0];
    v148[1] = v44;
    uint64_t v46 = *(unsigned __int8 *)(a3 + 40);
    uint64_t v47 = *(unsigned __int8 *)(a3 + 80);
    uint64_t v141 = *(void *)(a3 + 32);
    uint64_t v142 = v46;
    uint64_t v145 = v47;
    uint64_t v139 = *(void *)(ObjCClassFromMetadata + 112);
    uint64_t v48 = *(unsigned __int8 *)(ObjCClassFromMetadata + 40);
    uint64_t v49 = *(unsigned __int8 *)(ObjCClassFromMetadata + 80);
    uint64_t v149 = *(void *)(ObjCClassFromMetadata + 32);
    uint64_t v150 = v48;
    long long v151 = v42;
    long long v152 = v136;
    uint64_t v153 = v49;
    long long v154 = *(_OWORD *)(ObjCClassFromMetadata + 88);
    long long v155 = *(_OWORD *)(ObjCClassFromMetadata + 104);
    if ((_s11MusicCoreUI12SymbolButtonC0D0V21hasSignificantChanges4from2toSbAESg_AItFZ_0((uint64_t)v140, (uint64_t)v148) & 1) == 0)
    {
      id v50 = sub_100C27898();
      sub_100C2B1D4((uint64_t)v135);
    }
    uint64_t v51 = v24[11];
    uint64_t v52 = (uint64_t *)(ObjCClassFromMetadata + v51);
    uint64_t v53 = *(void *)(ObjCClassFromMetadata + v51 + 16);
    if (v53 != 1 && *(void *)(a3 + v51 + 16) != 1)
    {
      id v54 = *(char **)&v36[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
      if (v54)
      {
        uint64_t v56 = *v52;
        uint64_t v55 = v52[1];
        if (v53)
        {
          uint64_t v57 = v54;
          uint64_t v58 = (void *)v53;
          id v59 = (id)v53;
        }
        else
        {
          uint64_t v60 = self;
          uint64_t v61 = v54;
          sub_100C30C80(v56, v55, 0);
          id v59 = [v60 tintColor];
          uint64_t v58 = 0;
        }
        id v62 = v58;
        [v54 setBackgroundColor:v59];

        [v54 setAlpha:*(double *)&v55];
        [*(id *)&v54[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView] setAlpha:*(double *)&v55];
        sub_100C2BC10();
        sub_1008329C4(v56, v55, v53);
      }
    }
    id v63 = [v129 contentView];
    uint64_t v64 = *(void *)(ObjCClassFromMetadata + 272);
    uint64_t v65 = *(void *)(ObjCClassFromMetadata + 280);
    uint64_t v66 = *(void **)(ObjCClassFromMetadata + 288);
    id v67 = v66;
    UIView.border.setter(v64, v65, v66);

    [v36 setAlpha:*(double *)(ObjCClassFromMetadata + v24[17])];
    uint64_t v68 = (void *)v134;
    sub_100C28854((void *)v134);
    sub_100C29B0C((uint64_t)v68);
    sub_100C2DA84((uint64_t)v68, type metadata accessor for SymbolButton.Metrics);
    id v69 = [v36 superview];
    [v69 layoutIfNeeded];

    [v36 layoutIfNeeded];
    if (v36[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] != 1) {
      break;
    }
    uint64_t v127 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated;
    id v70 = v129;
    [v129 _setAllowsGroupFiltering:1];
    id v71 = [v70 contentView];
    id v72 = [v71 subviews];

    sub_100057778(0, (unint64_t *)&qword_1010CD3B0);
    unint64_t v73 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v134 = v73;
    if (v73 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v74 = _CocoaArrayWrapper.endIndex.getter();
      if (!v74)
      {
LABEL_41:
        swift_bridgeObjectRelease_n();
        v130[v127] = 0;
        break;
      }
    }
    else
    {
      uint64_t v74 = *(void *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v74) {
        goto LABEL_41;
      }
    }
    type metadata accessor for SymbolButton.Label();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    unint64_t v75 = v134 & 0xC000000000000001;
    id v133 = &v130[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess();
    uint64_t v17 = 4;
    uint64_t v76 = 0;
    if (v75)
    {
LABEL_27:
      id v77 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_29;
    }
    while (1)
    {
      id v77 = *(id *)(v134 + 8 * v17);
LABEL_29:
      uint64_t v16 = v77;
      a3 = v76 + 1;
      if (__OFADD__(v76, 1)) {
        break;
      }
      if (![v77 isKindOfClass:ObjCClassFromMetadata])
      {
        int v78 = v133[v24[19]];
        if (v78 == 2)
        {
          uint64_t v79 = (unsigned __int8 *)&v133[v24[9]];
          uint64_t v80 = v131;
          sub_10006CAB8((uint64_t)v79, v131, &qword_1010D0AB0);
          uint64_t v81 = type metadata accessor for UIView.Corner();
          uint64_t v82 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 48))(v80, 1, v81) != 1;
          uint64_t v83 = v80;
          uint64_t v24 = v132;
          sub_1000637B8(v83, &qword_1010D0AB0);
        }
        else
        {
          uint64_t v82 = v78 & 1;
        }
        [v16 setClipsToBounds:v82];
      }

      if (a3 == v74) {
        goto LABEL_41;
      }
      uint64_t v76 = ++v17 - 4;
      if (v75) {
        goto LABEL_27;
      }
    }
    __break(1u);
  }
  unint64_t v84 = (uint64_t *)(v128 + 16);
  swift_beginAccess();
  uint64_t result = *v84;
  uint64_t v86 = *(void *)(*v84 + 16);
  if (!v86) {
    return result;
  }
  uint64_t v87 = v86 - 1;
  uint64_t v127 = swift_bridgeObjectRetain();
  for (uint64_t i = v127 + 56; ; i += 88)
  {
    uint64_t v90 = *(void **)(i - 24);
    uint64_t v89 = *(void *)(i - 16);
    uint64_t v91 = *(void *)(i - 8);
    uint64_t v92 = *(void (**)(double, double, double, double))i;
    char v93 = *(void **)(i + 16);
    uint64_t v94 = *(void **)(i + 24);
    uint64_t v95 = *(void *)(i + 32);
    id v133 = *(char **)(i + 8);
    uint64_t v134 = (uint64_t)v94;
    uint64_t v96 = *(void *)(i + 40);
    uint64_t v97 = *(void *)(i + 48);
    uint64_t v131 = v91;
    uint64_t v132 = (int *)v92;
    uint64_t v130 = (char *)v89;
    if (v90)
    {
      if (v92)
      {
        sub_100C35DF4(v90, v89, v91, (uint64_t)v92);
        sub_100C35DF4(v93, v134, v95, v96);
        id v98 = [v129 contentView];
        uint64_t v128 = v97;
        uint64_t v99 = v95;
        uint64_t v100 = v87;
        id v101 = v98;
        [v98 bounds];
        double v103 = v102;
        double v105 = v104;
        double v107 = v106;
        double v109 = v108;

        long long v110 = (void (*)(double, double, double, double))v96;
        v92(v103, v105, v107, v109);
        uint64_t v87 = v100;
        uint64_t v95 = v99;
        [v90 setFrame:];
        if (!v93) {
          goto LABEL_52;
        }
      }
      else
      {
        sub_100C35DF4(v90, v89, v91, 0);
        long long v110 = (void (*)(double, double, double, double))v96;
        sub_100C35DF4(v93, v134, v95, v96);
        if (!v93)
        {
LABEL_52:
          sub_100C35E3C(v90, (uint64_t)v130, v131, (uint64_t)v132);
          BOOL v122 = 0;
          uint64_t v123 = (void *)v134;
          uint64_t v124 = v95;
          uint64_t v125 = (uint64_t)v110;
          goto LABEL_54;
        }
      }
    }
    else
    {
      sub_100C35DF4(0, v89, v91, (uint64_t)v92);
      sub_100C35DF4(v93, v134, v95, v96);
      long long v110 = (void (*)(double, double, double, double))v96;
      if (!v93) {
        goto LABEL_52;
      }
    }
    if (v110)
    {
      uint64_t v111 = v95;
      uint64_t v112 = v87;
      id v113 = [v129 contentView];
      [v113 bounds];
      double v115 = v114;
      double v117 = v116;
      double v119 = v118;
      double v121 = v120;

      v110(v115, v117, v119, v121);
      uint64_t v87 = v112;
      [v93 setFrame:];
      sub_100C35E3C(v90, (uint64_t)v130, v131, (uint64_t)v132);
      BOOL v122 = v93;
      uint64_t v123 = (void *)v134;
      uint64_t v124 = v111;
      uint64_t v125 = (uint64_t)v110;
    }
    else
    {
      sub_100C35E3C(v90, (uint64_t)v130, v131, (uint64_t)v132);
      BOOL v122 = v93;
      uint64_t v123 = (void *)v134;
      uint64_t v124 = v95;
      uint64_t v125 = 0;
    }
LABEL_54:
    sub_100C35E3C(v122, (uint64_t)v123, v124, v125);
    if (!v87) {
      break;
    }
    --v87;
  }
  return swift_bridgeObjectRelease();
}

uint64_t *SymbolButton.Background.clear.unsafeMutableAddressor()
{
  if (qword_1010C87F8 != -1) {
    swift_once();
  }
  return &static SymbolButton.Background.clear;
}

void sub_100C235F4(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  swift_beginAccess();
  uint64_t v10 = *(void *)(*(void *)(a2 + 16) + 16);
  if (v10)
  {
    uint64_t v41 = a4;
    unint64_t v42 = a6;
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = v10 - 1;
    uint64_t v13 = (uint64_t *)(v11 + 56);
    long long v44 = a3;
    while (1)
    {
      id v14 = (void *)v13[2];
      if (!v14) {
        goto LABEL_4;
      }
      uint64_t v47 = v12;
      uint64_t v15 = (void *)*(v13 - 3);
      uint64_t v16 = *(v13 - 1);
      uint64_t v18 = v13[3];
      uint64_t v17 = v13[4];
      uint64_t v19 = v13[5];
      uint64_t v45 = *v13;
      uint64_t v46 = *(v13 - 2);
      sub_100C35DF4(v15, v46, v16, *v13);
      sub_100C35DF4(v14, v18, v17, v19);
      if (![v14 isDescendantOfView:a3]) {
        break;
      }
      [v14 removeFromSuperview];
      sub_100C35E3C(v15, v46, v16, v45);
      sub_100C35E3C(v14, v18, v17, v19);
      a3 = v44;
      uint64_t v12 = v47;
      if (!v47)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        a4 = v41;
        a6 = v42;
        goto LABEL_10;
      }
LABEL_5:
      v13 += 11;
      --v12;
    }
    sub_100C35E3C(v15, v46, v16, v45);
    sub_100C35E3C(v14, v18, v17, v19);
    a3 = v44;
    uint64_t v12 = v47;
LABEL_4:
    if (!v12) {
      goto LABEL_9;
    }
    goto LABEL_5;
  }
LABEL_10:
  uint64_t v20 = *(void *)(a4 + 16);
  if (v20)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = a4 + 72;
    do
    {
      id v22 = *(void (**)(char *))(v21 - 8);
      if (v22)
      {
        uint64_t v23 = *(void *)(v21 - 40);
        sub_10007B674(v23);
        sub_10007B674((uint64_t)v22);
        v22(a3);
        sub_10006ADFC(v23);
        sub_10006ADFC((uint64_t)v22);
      }
      v21 += 48;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = *(void *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount];
  uint64_t v25 = v24 - 1;
  if (__OFSUB__(v24, 1))
  {
    __break(1u);
LABEL_28:
    swift_once();
    goto LABEL_20;
  }
  *(void *)&a3[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = v25;
  if (v25 != v24) {
    sub_100C29664();
  }
  if (qword_1010C8410 != -1) {
    goto LABEL_28;
  }
LABEL_20:
  uint64_t v26 = type metadata accessor for Logger();
  sub_100050A90(v26, (uint64_t)qword_10112C0F8);
  uint64_t v27 = a3;
  swift_bridgeObjectRetain_n();
  char v28 = v27;
  unint64_t v29 = a6;
  long long v30 = v28;
  long long v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v31, v32))
  {
    unint64_t v33 = v29;
    uint64_t v34 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 136446466;
    char v35 = (uint64_t *)&v30[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
    swift_beginAccess();
    unint64_t v36 = v35[1];
    if (v36)
    {
      uint64_t v37 = *v35;
      unint64_t v38 = v36;
    }
    else
    {
      id v39 = [v30 description];
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v38 = v40;
    }
    swift_bridgeObjectRetain();
    *(void *)(v34 + 4) = sub_100076010(v37, v38, &v48);
    swift_bridgeObjectRelease();

    *(_WORD *)(v34 + 12) = 2082;
    swift_bridgeObjectRetain();
    *(void *)(v34 + 14) = sub_100076010(a5, v33, &v48);
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "[%{public}s] UpdateID=%{public}s — Updated ✅", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t SymbolButton.Configuration.symbol.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C30B58(v1, a1);
}

uint64_t SymbolButton.Configuration.symbol.setter(uint64_t a1)
{
  return sub_100C30B90(a1, v1);
}

uint64_t SymbolButton.Configuration.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C30BC8(v1 + 120, a1);
}

uint64_t SymbolButton.Configuration.title.setter(uint64_t a1)
{
  return sub_100C30C00(a1, v1 + 120);
}

uint64_t SymbolButton.Configuration.background.getter()
{
  uint64_t v1 = *(void *)(v0 + 192);
  sub_100C30C38(v1, *(void **)(v0 + 200));
  return v1;
}

uint64_t SymbolButton.Configuration.background.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_1001773EC(*(void *)(v4 + 192), *(void **)(v4 + 200));
  *(void *)(v4 + 192) = a1;
  *(void *)(v4 + 200) = a2;
  *(void *)(v4 + 208) = a3;
  *(void *)(v4 + 216) = a4;
  return result;
}

uint64_t SymbolButton.Configuration.material.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10006CAB8(v1 + 224, a1, &qword_1010D0B30);
}

uint64_t SymbolButton.Configuration.material.setter(uint64_t a1)
{
  return sub_10002D09C(a1, v1 + 224, &qword_1010D0B30);
}

uint64_t SymbolButton.Configuration.border.getter()
{
  uint64_t v1 = *(void *)(v0 + 272);
  id v2 = *(id *)(v0 + 288);
  return v1;
}

void SymbolButton.Configuration.border.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 272) = a1;
  *(void *)(v3 + 280) = a2;
  *(void *)(v3 + 288) = a3;
}

uint64_t SymbolButton.Configuration.corner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SymbolButton.Configuration(0);
  return sub_10006CAB8(v1 + *(int *)(v3 + 36), a1, &qword_1010D0AB0);
}

uint64_t SymbolButton.Configuration.corner.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SymbolButton.Configuration(0);
  return sub_10002D09C(a1, v1 + *(int *)(v3 + 36), &qword_1010D0AB0);
}

double (*SymbolButton.Configuration.corner.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SymbolButton.Configuration.customView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SymbolButton.Configuration(0);
  return sub_10006CAB8(v1 + *(int *)(v3 + 40), a1, &qword_1010D0B28);
}

uint64_t SymbolButton.Configuration.customView.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SymbolButton.Configuration(0);
  return sub_10002D09C(a1, v1 + *(int *)(v3 + 40), &qword_1010D0B28);
}

double (*SymbolButton.Configuration.customView.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SymbolButton.Configuration.badge.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 44);
  uint64_t v2 = *(void *)v1;
  sub_100C30C80(*(void *)v1, *(void *)(v1 + 8), *(void **)(v1 + 16));
  return v2;
}

uint64_t SymbolButton.Configuration.badge.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t *)(v3 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 44));
  uint64_t result = sub_1008329C4(*v7, v7[1], v7[2]);
  uint64_t *v7 = a1;
  v7[1] = a2;
  _OWORD v7[2] = a3;
  return result;
}

double (*SymbolButton.Configuration.badge.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SymbolButton.Configuration.symbolToTextSpacing.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 48));
}

uint64_t SymbolButton.Configuration.symbolToTextSpacing.setter(double a1)
{
  uint64_t result = type metadata accessor for SymbolButton.Configuration(0);
  *(double *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

double (*SymbolButton.Configuration.symbolToTextSpacing.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SymbolButton.Configuration.minimumSize.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 52));
}

uint64_t SymbolButton.Configuration.minimumSize.setter(double a1, double a2)
{
  uint64_t result = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v6 = (double *)(v2 + *(int *)(result + 52));
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

double (*SymbolButton.Configuration.minimumSize.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SymbolButton.Configuration.maximumImageSize.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 56));
}

uint64_t SymbolButton.Configuration.maximumImageSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v8 = v3 + *(int *)(result + 56);
  *(void *)uint64_t v8 = a1;
  *(void *)(v8 + 8) = a2;
  *(unsigned char *)(v8 + 16) = a3 & 1;
  return result;
}

double (*SymbolButton.Configuration.maximumImageSize.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

double SymbolButton.Configuration.contentInsets.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 60));
}

uint64_t SymbolButton.Configuration.contentInsets.setter(double a1, double a2, double a3, double a4)
{
  uint64_t result = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v10 = (double *)(v4 + *(int *)(result + 60));
  *uint64_t v10 = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  return result;
}

double (*SymbolButton.Configuration.contentInsets.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SymbolButton.Configuration.Accessibility.init(automaticallyAdjustsForAccessibility:minimumContentSizeCategory:maximumContentSizeCategory:showsLargeContentViewer:)(char a1)
{
  return a1 & 1;
}

uint64_t SymbolButton.Configuration.accessibility.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64));
  uint64_t v2 = *v1;
  uint64_t v3 = (void *)*((void *)v1 + 2);
  id v4 = *((id *)v1 + 1);
  id v5 = v3;
  return v2;
}

void SymbolButton.Configuration.accessibility.setter(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v9 = v4 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64);

  *(unsigned char *)uint64_t v9 = a1;
  *(void *)(v9 + 8) = a2;
  *(void *)(v9 + 16) = a3;
  *(unsigned char *)(v9 + 24) = a4;
}

double (*SymbolButton.Configuration.accessibility.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

void *SymbolButton.Configuration.Accessibility.minimumContentSizeCategory.getter(uint64_t a1, void *a2)
{
  id v3 = a2;
  return a2;
}

UIPointerRegion_optional __swiftcall SymbolButton.pointerInteraction(_:regionFor:defaultRegion:)(UIPointerInteraction _, UIPointerRegionRequest regionFor, UIPointerRegion defaultRegion)
{
  uint64_t v4 = defaultRegion.super.isa;
  Class isa = defaultRegion.super.isa;
  result.value.super.Class isa = isa;
  result.is_nil = v5;
  return result;
}

uint64_t SymbolButton.Configuration.Accessibility.showsLargeContentViewer.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return a4 & 1;
}

uint64_t SymbolButton.Material.color.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

UIContentSizeCategory sub_100C24270()
{
  static SymbolButton.Configuration.Accessibility.forBarButtonItem = 1;
  qword_10112CF78 = (uint64_t)UIContentSizeCategoryLarge;
  unk_10112CF80 = UIContentSizeCategoryExtraLarge;
  byte_10112CF88 = 1;
  uint64_t v0 = UIContentSizeCategoryLarge;

  return UIContentSizeCategoryExtraLarge;
}

char *SymbolButton.Configuration.Accessibility.forBarButtonItem.unsafeMutableAddressor()
{
  if (qword_1010C87F0 != -1) {
    swift_once();
  }
  return &static SymbolButton.Configuration.Accessibility.forBarButtonItem;
}

uint64_t static SymbolButton.Configuration.Accessibility.forBarButtonItem.getter()
{
  if (qword_1010C87F0 != -1) {
    swift_once();
  }
  uint64_t v0 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  uint64_t v1 = (void *)unk_10112CF80;
  id v2 = (id)qword_10112CF78;
  id v3 = v1;
  return v0;
}

uint64_t sub_100C243A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return _s11MusicCoreUI12SymbolButtonC13ConfigurationV13AccessibilityV23__derived_struct_equalsySbAG_AGtFZ_0(*a1, *((void *)a1 + 1), *((void *)a1 + 2), a1[24], *a2, *((void *)a2 + 1), *((void *)a2 + 2), a2[24]);
}

double SymbolButton.Configuration.alpha.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 68));
}

uint64_t SymbolButton.Configuration.alpha.setter(double a1)
{
  uint64_t result = type metadata accessor for SymbolButton.Configuration(0);
  *(double *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

double (*SymbolButton.Configuration.alpha.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

void *SymbolButton.Configuration.tint.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 72));
  id v2 = v1;
  return v1;
}

void SymbolButton.Configuration.tint.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 72);

  *(void *)(v1 + v3) = a1;
}

double (*SymbolButton.Configuration.tint.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

uint64_t SymbolButton.Configuration.shouldClipToBounds.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 76));
}

uint64_t SymbolButton.Configuration.shouldClipToBounds.setter(char a1)
{
  uint64_t result = type metadata accessor for SymbolButton.Configuration(0);
  *(unsigned char *)(v1 + *(int *)(result + 76)) = a1;
  return result;
}

double (*SymbolButton.Configuration.shouldClipToBounds.modify())(double)
{
  return UIScreen.Dimensions.size.getter;
}

void SymbolButton.Configuration.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = UIFontTextStyleSubheadline;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(_OWORD *)(a1 + 48) = xmmword_100E33E40;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = -1;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0x3FF0000000000000;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = UIFontTextStyleSubheadline;
  *(UIFontWeight *)(a1 + 144) = UIFontWeightSemibold;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0x3FF0000000000000;
  *(void *)(a1 + 176) = 0;
  *(unsigned char *)(a1 + 184) = 0;
  *(void *)(a1 + 224) = 1;
  id v2 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  uint64_t v3 = a1 + v2[9];
  uint64_t v4 = type metadata accessor for UIView.Corner();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = a1 + v2[10];
  *(void *)(v5 + 48) = 0;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)uint64_t v5 = 0u;
  uint64_t v6 = (void *)(a1 + v2[11]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  v6[2] = 1;
  *(void *)(a1 + v2[12]) = 0x4010000000000000;
  uint64_t v7 = v2[13];
  uint64_t v8 = qword_1010C8818;
  uint64_t v9 = UIFontTextStyleSubheadline;
  if (v8 != -1) {
    swift_once();
  }
  *(_OWORD *)(a1 + v7) = static SymbolButton.Configuration.platterMinimumSize;
  uint64_t v10 = a1 + v2[14];
  *(void *)uint64_t v10 = 0;
  *(void *)(v10 + 8) = 0;
  *(unsigned char *)(v10 + 16) = 1;
  uint64_t v11 = (_OWORD *)(a1 + v2[15]);
  long long v12 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  _OWORD *v11 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  v11[1] = v12;
  uint64_t v13 = a1 + v2[16];
  *(unsigned char *)uint64_t v13 = 1;
  *(void *)(v13 + 8) = 0;
  *(void *)(v13 + 16) = 0;
  *(unsigned char *)(v13 + 24) = 0;
  *(void *)(a1 + v2[17]) = 0x3FF0000000000000;
  *(void *)(a1 + v2[18]) = 0;
  *(unsigned char *)(a1 + v2[19]) = 2;
  if (qword_1010C8838 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_10112D058;
  *(void *)(a1 + 192) = static SymbolButton.Background.normal;
  char v28 = (void *)qword_10112D048;
  *(_OWORD *)(a1 + 200) = *(_OWORD *)&qword_10112D048;
  *(void *)(a1 + 216) = v14;
  uint64_t v15 = self;
  swift_bridgeObjectRetain();
  id v16 = v28;
  id v17 = [v15 currentTraitCollection];
  id v18 = [v17 userInterfaceIdiom];

  if (v18 == (id)6)
  {
    if (qword_1010C8848 != -1) {
      swift_once();
    }
    uint64_t v19 = (void *)static SymbolButton.Material.xr;
    uint64_t v20 = (void *)qword_10112D088;
    uint64_t v21 = qword_10112D090;
    unint64_t v29 = (void *)qword_10112D090;
    uint64_t v22 = byte_10112D098;
    uint64_t v24 = qword_10112D0A0;
    uint64_t v23 = unk_10112D0A8;
    *(void *)(a1 + 224) = static SymbolButton.Material.xr;
    *(void *)(a1 + 232) = v20;
    *(void *)(a1 + 240) = v21;
    *(void *)(a1 + 248) = v22;
    *(void *)(a1 + 256) = v24;
    *(void *)(a1 + 264) = v23;
    swift_bridgeObjectRetain();
    id v25 = v19;
    id v26 = v20;
    id v27 = v29;
  }
}

uint64_t *SymbolButton.Material.xr.unsafeMutableAddressor()
{
  if (qword_1010C8848 != -1) {
    swift_once();
  }
  return &static SymbolButton.Material.xr;
}

uint64_t SymbolButton.Symbol.weight.setter(uint64_t result)
{
  *(void *)(v1 + 48) = result;
  return result;
}

uint64_t SymbolButton.Symbol.scale.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t SymbolButton.Symbol.scale.setter(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

uint64_t SymbolButton.Symbol.offset.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t SymbolButton.Symbol.offset.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)(v3 + 64) = result;
  *(void *)(v3 + 72) = a2;
  *(unsigned char *)(v3 + 80) = a3;
  return result;
}

double SymbolButton.Symbol.alpha.getter()
{
  return *(double *)(v0 + 104);
}

void SymbolButton.Symbol.alpha.setter(double a1)
{
  *(double *)(v1 + 104) = a1;
}

void *SymbolButton.Symbol.tint.getter()
{
  uint64_t v1 = *(void **)(v0 + 112);
  id v2 = v1;
  return v1;
}

void SymbolButton.Symbol.tint.setter(uint64_t a1)
{
  *(void *)(v1 + 112) = a1;
}

BOOL sub_100C249E0(uint64_t a1, long long *a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  uint64_t v13 = *(void *)(a1 + 112);
  long long v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  long long v5 = *a2;
  long long v6 = a2[1];
  long long v7 = a2[3];
  _OWORD v14[2] = a2[2];
  v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  long long v8 = a2[4];
  long long v9 = a2[5];
  long long v10 = a2[6];
  uint64_t v15 = *((void *)a2 + 14);
  _OWORD v14[5] = v9;
  void v14[6] = v10;
  _OWORD v14[4] = v8;
  return _s11MusicCoreUI12SymbolButtonC0D0V23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v12, (uint64_t)v14);
}

void SymbolButton.Title.alpha.setter(double a1)
{
  *(double *)(v1 + 48) = a1;
}

uint64_t SymbolButton.Title.isHidden.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 64) = result;
  return result;
}

uint64_t sub_100C24A74(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  _OWORD v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  char v8 = *(unsigned char *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  char v10 = *(unsigned char *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return _s11MusicCoreUI12SymbolButtonC5TitleV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t SymbolButton.Background.compositingFilter.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SymbolButton.Background.init()()
{
  return 0;
}

id sub_100C24B18()
{
  id result = [self clearColor];
  static SymbolButton.Background.clear = 0x3FF0000000000000;
  qword_10112CF98 = (uint64_t)result;
  qword_10112CFA0 = 0;
  qword_10112CFA8 = 0;
  return result;
}

uint64_t static SymbolButton.Background.clear.getter()
{
  if (qword_1010C87F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_10112CF98;
  id v1 = (id)qword_10112CF98;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SymbolButton.Background.clear.setter(void *a1, uint64_t a2, uint64_t a3, double a4)
{
  if (qword_1010C87F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  char v8 = (void *)qword_10112CF98;
  static SymbolButton.Background.clear = *(void *)&a4;
  qword_10112CF98 = (uint64_t)a1;
  qword_10112CFA0 = a2;
  qword_10112CFA8 = a3;

  return swift_bridgeObjectRelease();
}

uint64_t (*static SymbolButton.Background.clear.modify())()
{
  if (qword_1010C87F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL sub_100C24D54(uint64_t a1, uint64_t a2)
{
  return _s11MusicCoreUI12SymbolButtonC10BackgroundV23__derived_struct_equalsySbAE_AEtFZ_0(*(void **)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void **)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24), *(double *)a1, *(double *)a2);
}

void SymbolButton.Material.init()(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 2;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
}

BOOL sub_100C24D94(_OWORD *a1, long long *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = *a2;
  long long v4 = a2[1];
  _OWORD v7[2] = a1[2];
  v8[0] = v3;
  long long v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return _s11MusicCoreUI12SymbolButtonC8MaterialV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v7, (uint64_t)v8);
}

double SymbolButton.CustomView.insets.getter()
{
  return *(double *)(v0 + 8);
}

void SymbolButton.CustomView.insets.setter(double a1, double a2, double a3, double a4)
{
  v4[1] = a1;
  _OWORD v4[2] = a2;
  v4[3] = a3;
  _OWORD v4[4] = a4;
}

void SymbolButton.CustomView.alpha.setter(double a1)
{
  *(double *)(v1 + 40) = a1;
}

void *static SymbolButton.CustomView.with(_:configurator:)@<X0>(void *result@<X0>, uint64_t (*a2)(void **)@<X1>, uint64_t a3@<X8>)
{
  if (result)
  {
    uint64_t v11 = result;
    long long v5 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
    long long v12 = *(_OWORD *)&UIEdgeInsetsZero.top;
    long long v13 = v5;
    long long v14 = 0x3FF0000000000000uLL;
    id v6 = result;
    id result = (void *)a2(&v11);
    long long v7 = v11;
    long long v8 = v12;
    long long v9 = v13;
    long long v10 = v14;
  }
  else
  {
    long long v7 = 0;
    long long v8 = 0uLL;
    long long v9 = 0uLL;
    long long v10 = 0uLL;
  }
  *(void *)a3 = v7;
  *(_OWORD *)(a3 + 8) = v8;
  *(_OWORD *)(a3 + 24) = v9;
  *(_OWORD *)(a3 + 40) = v10;
  return result;
}

uint64_t sub_100C24E98(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  void v5[2] = *(_OWORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  _OWORD v7[2] = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  return _s11MusicCoreUI12SymbolButtonC10CustomViewV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t SymbolButton.Badge.init()()
{
  return 0;
}

uint64_t static SymbolButton.Badge.with(_:)(void (*a1)(long long *))
{
  long long v2 = xmmword_100E526E0;
  uint64_t v3 = 0;
  a1(&v2);
  return v3;
}

uint64_t sub_100C24F58(uint64_t a1, uint64_t a2)
{
  return _s11MusicCoreUI12SymbolButtonC5BadgeV23__derived_struct_equalsySbAE_AEtFZ_0(*(void **)(a1 + 16), *(void **)(a2 + 16), *(double *)a1, *(double *)(a1 + 8), *(double *)a2, *(double *)(a2 + 8));
}

Swift::Void __swiftcall SymbolButton.layoutSubviews()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  long long v4 = (char *)&v137 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = type metadata accessor for UIView.Corner.Radius();
  uint64_t v139 = *(void *)(v140 - 8);
  __chkstk_darwin();
  long long v138 = (char *)&v137 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  uint64_t v8 = (uint64_t *)((char *)&v137 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  long long v10 = (uint64_t *)((char *)&v137 - v9);
  __chkstk_darwin();
  long long v12 = (uint64_t *)((char *)&v137 - v11);
  long long v13 = (objc_class *)type metadata accessor for SymbolButton(0);
  v148.receiver = v0;
  v148.super_class = v13;
  [super layoutSubviews];
  long long v14 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  [*(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView] bounds];
  [v14 setFrame:];
  id v15 = [v14 contentView];
  [v15 bounds];
  double v17 = v16;

  sub_100C28854(v12);
  double v18 = *(double *)((char *)v12 + v6[12] + 16);
  [v1 effectiveUserInterfaceLayoutDirection];
  [v1 contentHorizontalAlignment];
  uint64_t v141 = v2;
  CGFloat v147 = v17;
  if ([v1 contentVerticalAlignment] == (id)2) {
    double v19 = 0.0;
  }
  else {
    double v19 = v18;
  }
  [v1 effectiveUserInterfaceLayoutDirection:v19];
  CGRect.inset(by:for:)();
  CGFloat v21 = v20;
  CGFloat v23 = v22;
  CGFloat v145 = v24;
  CGFloat v146 = v25;
  sub_100C2DA84((uint64_t)v12, type metadata accessor for SymbolButton.Metrics);
  sub_100C28854(v10);
  double v26 = *(double *)((char *)v10 + v6[8]);
  sub_100C2DA84((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
  id v27 = sub_100C27898();
  sub_100C28854(v8);
  char v28 = (double *)((char *)v8 + v6[11]);
  double v29 = *v28;
  double v30 = v28[1];
  int v31 = *((unsigned __int8 *)v28 + 16);
  sub_100C2DA84((uint64_t)v8, type metadata accessor for SymbolButton.Metrics);
  if (v31) {
    double v32 = 0.0;
  }
  else {
    double v32 = v30;
  }
  if (v31) {
    double v33 = 0.0;
  }
  else {
    double v33 = v29;
  }
  [v27 sizeThatFits:v33, v32];
  CGFloat v35 = v34;
  CGFloat v37 = v36;

  uint64_t v38 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
  swift_beginAccess();
  if (!*(void *)(v38 + 128) || (*(unsigned char *)(v38 + 184) & 1) != 0)
  {
    id v44 = sub_100C27A00();
    [v44 frame];
    double v46 = v48;
    CGFloat v143 = v49;
  }
  else
  {
    v155.origin.CGFloat x = v21;
    v155.origin.CGFloat y = v23;
    CGFloat v39 = v145;
    v155.size.CGFloat width = v145;
    CGFloat v40 = v146;
    v155.size.CGFloat height = v146;
    double Width = CGRectGetWidth(v155);
    v156.origin.CGFloat x = 0.0;
    v156.origin.CGFloat y = 0.0;
    v156.size.CGFloat width = v35;
    v156.size.CGFloat height = v37;
    double v42 = Width - (v26 + CGRectGetWidth(v156));
    v157.origin.CGFloat x = v21;
    v157.origin.CGFloat y = v23;
    v157.size.CGFloat width = v39;
    v157.size.CGFloat height = v40;
    double Height = CGRectGetHeight(v157);
    id v44 = sub_100C27A00();
    [v44 sizeThatFits:v42 Height];
    double v46 = v45;
    CGFloat v143 = v47;
  }

  id v50 = &selRef_initWithActivityIndicatorStyle_;
  uint64_t v51 = &selRef_isDragging;
  double v142 = v26;
  CGFloat v144 = v46;
  if (!*(void *)(v38 + 8))
  {
    double v53 = 0.0;
    double v52 = 0.0;
    if (!*(void *)(v38 + 128)) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  v158.origin.CGFloat x = 0.0;
  v158.origin.CGFloat y = 0.0;
  v158.size.CGFloat width = v35;
  v158.size.CGFloat height = v37;
  double v52 = CGRectGetWidth(v158) + 0.0;
  v159.origin.CGFloat x = 0.0;
  v159.origin.CGFloat y = 0.0;
  v159.size.CGFloat height = 0.0;
  v159.size.CGFloat width = v52;
  double v53 = CGRectGetHeight(v159);
  v160.origin.CGFloat x = 0.0;
  v160.origin.CGFloat y = 0.0;
  v160.size.CGFloat width = v35;
  v160.size.CGFloat height = v37;
  double v54 = CGRectGetHeight(v160);
  if (v53 <= v54) {
    double v53 = v54;
  }
  if (*(void *)(v38 + 128))
  {
LABEL_20:
    if ((*(unsigned char *)(v38 + 184) & 1) == 0)
    {
      v161.origin.CGFloat x = 0.0;
      v161.origin.CGFloat y = 0.0;
      CGFloat v55 = v144;
      v161.size.CGFloat width = v144;
      CGFloat v56 = v143;
      v161.size.CGFloat height = v143;
      double v52 = v52 + CGRectGetWidth(v161);
      v162.origin.CGFloat x = 0.0;
      v162.origin.CGFloat y = 0.0;
      v162.size.CGFloat width = v52;
      v162.size.CGFloat height = v53;
      double v53 = CGRectGetHeight(v162);
      v163.origin.CGFloat x = 0.0;
      v163.origin.CGFloat y = 0.0;
      v163.size.CGFloat width = v55;
      v163.size.CGFloat height = v56;
      double v57 = CGRectGetHeight(v163);
      if (v53 <= v57) {
        double v53 = v57;
      }
    }
  }
LABEL_23:
  uint64_t v58 = *(void *)(v38 + 8);
  CGFloat v147 = v37;
  if (v58 && *(void *)(v38 + 128))
  {
    double v59 = -0.0;
    if (!*(unsigned char *)(v38 + 184)) {
      double v59 = v142;
    }
    double v52 = v52 + v59;
  }
  unint64_t v60 = (unint64_t)[v1 contentHorizontalAlignment];
  double MinY = 0.0;
  double MinX = 0.0;
  if (v60 <= 5)
  {
    if (((1 << v60) & 9) != 0)
    {
      v164.origin.CGFloat x = v21;
      v164.origin.CGFloat y = v23;
      v164.size.CGFloat width = v145;
      v164.size.CGFloat height = v146;
      CGRectGetMidX(v164);
      v165.origin.CGFloat x = 0.0;
      v165.origin.CGFloat y = 0.0;
      v165.size.CGFloat width = v52;
      v165.size.CGFloat height = v53;
      CGRectGetWidth(v165);
      id v67 = [v1 traitCollection];
      [v67 displayScale];

      CGFloat.roundValue(scale:)();
      double MinX = v68;
    }
    else
    {
      CGFloat v63 = v21;
      CGFloat v64 = v23;
      CGFloat v65 = v145;
      CGFloat v66 = v146;
      if (((1 << v60) & 0x12) != 0)
      {
        double MinX = CGRectGetMinX(*(CGRect *)&v63);
      }
      else
      {
        double MaxX = CGRectGetMaxX(*(CGRect *)&v63);
        v166.origin.CGFloat x = 0.0;
        v166.origin.CGFloat y = 0.0;
        v166.size.CGFloat width = v52;
        v166.size.CGFloat height = v53;
        double MinX = MaxX - CGRectGetWidth(v166);
      }
    }
  }
  switch((unint64_t)[v1 contentVerticalAlignment])
  {
    case 0uLL:
      v167.origin.CGFloat x = v21;
      v167.origin.CGFloat y = v23;
      v167.size.CGFloat width = v145;
      v167.size.CGFloat height = v146;
      CGRectGetMidY(v167);
      v168.origin.CGFloat y = 0.0;
      v168.origin.CGFloat x = MinX;
      v168.size.CGFloat width = v52;
      v168.size.CGFloat height = v53;
      CGRectGetHeight(v168);
      id v70 = [v1 traitCollection];
      [v70 displayScale];

      CGFloat.roundValue(scale:)();
      double MinY = v71;
      break;
    case 1uLL:
      v169.origin.CGFloat x = v21;
      v169.origin.CGFloat y = v23;
      v169.size.CGFloat width = v145;
      v169.size.CGFloat height = v146;
      double MinY = CGRectGetMinY(v169);
      break;
    case 2uLL:
      v170.origin.CGFloat x = v21;
      v170.origin.CGFloat y = v23;
      v170.size.CGFloat width = v145;
      v170.size.CGFloat height = v146;
      double MaxY = CGRectGetMaxY(v170);
      v171.origin.CGFloat y = 0.0;
      v171.origin.CGFloat x = MinX;
      v171.size.CGFloat width = v52;
      v171.size.CGFloat height = v53;
      double MinY = MaxY - CGRectGetHeight(v171);
      break;
    case 3uLL:
      v172.origin.CGFloat x = v21;
      v172.origin.CGFloat y = v23;
      CGFloat v73 = v145;
      v172.size.CGFloat width = v145;
      CGFloat v74 = v146;
      v172.size.CGFloat height = v146;
      double MinY = CGRectGetMinY(v172);
      v173.origin.CGFloat x = v21;
      v173.origin.CGFloat y = v23;
      v173.size.CGFloat width = v73;
      v173.size.CGFloat height = v74;
      double v53 = CGRectGetHeight(v173);
      break;
    default:
      break;
  }
  double v75 = MinX;
  if (*(void *)(v38 + 8))
  {
    v174.origin.CGFloat x = MinX;
    v174.origin.CGFloat y = MinY;
    v174.size.CGFloat width = v35;
    v174.size.CGFloat height = v147;
    double v75 = v142 + CGRectGetMaxX(v174);
  }
  id v76 = [v1 contentVerticalAlignment];
  if (v76 == (id)3)
  {
    v179.origin.CGFloat x = MinX;
    v179.origin.CGFloat y = MinY;
    v179.size.CGFloat width = v52;
    v179.size.CGFloat height = v53;
    CGFloat v147 = CGRectGetHeight(v179);
    v180.origin.CGFloat x = MinX;
    v180.origin.CGFloat y = MinY;
    v180.size.CGFloat width = v52;
    v180.size.CGFloat height = v53;
    double v81 = CGRectGetHeight(v180);
    CGFloat v79 = MinY;
    uint64_t v84 = v141;
    double v80 = v144;
  }
  else if (v76)
  {
    CGFloat v79 = MinY;
    uint64_t v84 = v141;
    double v80 = v144;
    double v81 = v143;
  }
  else
  {
    v175.origin.CGFloat x = MinX;
    v175.origin.CGFloat y = MinY;
    v175.size.CGFloat width = v52;
    v175.size.CGFloat height = v53;
    CGRectGetMidY(v175);
    v176.origin.CGFloat x = MinX;
    v176.origin.CGFloat y = MinY;
    v176.size.CGFloat width = v35;
    v176.size.CGFloat height = v147;
    CGRectGetHeight(v176);
    id v77 = [v1 traitCollection];
    [v77 displayScale];

    CGFloat.roundValue(scale:)();
    CGFloat v79 = v78;
    v177.origin.CGFloat x = MinX;
    v177.origin.CGFloat y = MinY;
    v177.size.CGFloat width = v52;
    v177.size.CGFloat height = v53;
    CGRectGetMidY(v177);
    v178.origin.CGFloat x = v75;
    v178.origin.CGFloat y = MinY;
    double v80 = v144;
    v178.size.CGFloat width = v144;
    double v81 = v143;
    v178.size.CGFloat height = v143;
    CGRectGetHeight(v178);
    uint64_t v51 = &selRef_isDragging;
    id v82 = [v1 traitCollection];
    [v82 displayScale];

    CGFloat.roundValue(scale:)();
    double MinY = v83;
    uint64_t v84 = v141;
  }
  id v85 = sub_100C27A00();
  if ([v1 v51[89]] == (id)4 || objc_msgSend(v1, v51[89]) == (id)5)
  {
    long long v152 = 0u;
    long long v153 = 0u;
    char v154 = 1;
    CGRect.applyingLayoutDirection(in:bounds:)();
    double v75 = v86;
    double MinY = v87;
    double v80 = v88;
    double v81 = v89;
  }
  [v85 setFrame:v75, MinY, v80, v81];

  if (*(void *)(v38 + 128) && (*(unsigned char *)(v38 + 184) & 1) == 0)
  {
    id v90 = sub_100C27898();
    id v91 = [v90 image];

    if (v91)
    {
      sub_100C28854(v10);
      id v92 = *(id *)((char *)v10 + v6[7]);
      sub_100C2DA84((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
      id v93 = [v91 imageByApplyingSymbolConfiguration:v92];

      if (v93)
      {
        UIImage.baselineOffsetFromBottom.getter();
        id v50 = &selRef_initWithActivityIndicatorStyle_;
        if ((v94 & 1) == 0)
        {
          id v95 = sub_100C27A00();
          [v95 frame];
          CGFloat v97 = v96;
          CGFloat v99 = v98;
          CGFloat v101 = v100;
          CGFloat v103 = v102;

          v181.origin.CGFloat x = v97;
          v181.origin.CGFloat y = v99;
          v181.size.CGFloat width = v101;
          v181.size.CGFloat height = v103;
          CGRectGetMinY(v181);
          id v104 = sub_100C27A00();
          [v104 _firstLineBaseline];

          v182.origin.CGFloat x = MinX;
          v182.origin.CGFloat y = v79;
          v182.size.CGFloat width = v35;
          v182.size.CGFloat height = v147;
          CGRectGetHeight(v182);
        }
      }
      else
      {
        id v50 = &selRef_initWithActivityIndicatorStyle_;
      }
      uint64_t v51 = &selRef_isDragging;
    }
    else
    {
      id v50 = &selRef_initWithActivityIndicatorStyle_;
    }
  }
  sub_100C28854(v10);
  sub_100C2DA84((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
  CGRect.offset(by:)();
  double v106 = v105;
  double v108 = v107;
  double v110 = v109;
  double v112 = v111;
  id v113 = sub_100C27898();
  if ([v1 v51[89]] == (id)4 || objc_msgSend(v1, v51[89]) == (id)5)
  {
    long long v149 = 0u;
    long long v150 = 0u;
    char v151 = 1;
    CGRect.applyingLayoutDirection(in:bounds:)();
    double v106 = v114;
    double v108 = v115;
    double v110 = v116;
    double v112 = v117;
  }
  [v113 v50[467]:v106, v108, v110, v112];

  sub_100C27B00();
  sub_100C27CE8();
  double v118 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
  id v119 = [v14 contentView];
  [v119 bounds];
  double v121 = v120;
  double v123 = v122;
  double v125 = v124;
  double v127 = v126;

  [v118 v50[467] v121 v123 v125 v127];
  sub_100C35BE4(v38, (uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
  uint64_t v128 = &v4[*(int *)(v84 + 36)];
  uint64_t v129 = type metadata accessor for UIView.Corner();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v129 - 8) + 48))(v128, 1, v129))
  {
    uint64_t v130 = type metadata accessor for SymbolButton.Configuration;
    uint64_t v131 = (uint64_t)v4;
  }
  else
  {
    uint64_t v132 = v138;
    UIView.Corner.radius.getter();
    sub_100C2DA84((uint64_t)v4, type metadata accessor for SymbolButton.Configuration);
    uint64_t v133 = v139;
    uint64_t v134 = v140;
    int v135 = (*(uint64_t (**)(char *, uint64_t))(v139 + 88))(v132, v140);
    int v136 = enum case for UIView.Corner.Radius.rounded(_:);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v132, v134);
    if (v135 != v136) {
      return;
    }
    sub_100C28854(v10);
    sub_100C29B0C((uint64_t)v10);
    uint64_t v130 = type metadata accessor for SymbolButton.Metrics;
    uint64_t v131 = (uint64_t)v10;
  }
  sub_100C2DA84(v131, v130);
}

Swift::Void __swiftcall SymbolButton.traitCollectionDidChange(_:)(UITraitCollection_optional a1)
{
  Class isa = a1.value.super.isa;
  type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  long long v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  long long v10 = (char *)&v16 - v9;
  sub_100063814(&qword_1010D00F0);
  __chkstk_darwin();
  long long v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = (objc_class *)type metadata accessor for SymbolButton(0);
  v17.receiver = v1;
  v17.super_class = v13;
  [super traitCollectionDidChange:isa];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v12, 1, 1, v5);
  SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v12, 0, 0, 0, 1);
  sub_1000637B8((uint64_t)v12, &qword_1010D00F0);
  uint64_t v14 = (uint64_t)v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  sub_100C35BE4(v14, (uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
  id v15 = [v1 traitCollection];
  sub_100C28854(v4);
  sub_100C2DA84((uint64_t)v4, type metadata accessor for SymbolButton.Metrics);
  sub_100C35BE4((uint64_t)v10, (uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
  sub_100C27E48((uint64_t)v8, v15, v4);
  sub_100C2DA84((uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
  sub_100C28AE8((uint64_t)v4);
}

double SymbolButton.intrinsicContentSize.getter()
{
  uint64_t v1 = (int *)type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin();
  uint64_t v3 = (uint64_t *)((char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin();
  uint64_t v5 = (uint64_t *)((char *)&v32 - v4);
  __chkstk_darwin();
  uint64_t v7 = (uint64_t *)((char *)&v32 - v6);
  __chkstk_darwin();
  uint64_t v9 = (uint64_t *)((char *)&v32 - v8);
  sub_100C28854((uint64_t *)((char *)&v32 - v8));
  sub_100C2DA84((uint64_t)v9, type metadata accessor for SymbolButton.Metrics);
  NSDirectionalEdgeInsets.horizontal.getter();
  double v11 = v10;
  sub_100C28854(v9);
  sub_100C2DA84((uint64_t)v9, type metadata accessor for SymbolButton.Metrics);
  NSDirectionalEdgeInsets.vertical.getter();
  uint64_t v12 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  if (!*(void *)(v12 + 8))
  {
    double v20 = 0.0;
    if (!*(void *)(v12 + 128)) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  sub_100C28854(v7);
  long long v13 = (double *)((char *)v7 + v1[11]);
  double v14 = *v13;
  int v15 = *((unsigned __int8 *)v13 + 16);
  sub_100C2DA84((uint64_t)v7, type metadata accessor for SymbolButton.Metrics);
  id v16 = sub_100C27898();
  [v16 intrinsicContentSize];
  double v18 = v17;

  if (v14 >= v18) {
    double v19 = v18;
  }
  else {
    double v19 = v14;
  }
  if (v15) {
    double v19 = v18;
  }
  double v20 = v19 + 0.0;
  if (*(void *)(v12 + 128))
  {
LABEL_10:
    if ((*(unsigned char *)(v12 + 184) & 1) == 0)
    {
      id v21 = sub_100C27A00();
      [v21 intrinsicContentSize];
      double v23 = v22;

      double v20 = v20 + v23;
    }
  }
LABEL_12:
  if (*(void *)(v12 + 8) && *(void *)(v12 + 128) && (*(unsigned char *)(v12 + 184) & 1) == 0)
  {
    sub_100C28854(v9);
    double v24 = *(double *)((char *)v9 + v1[8]);
    sub_100C2DA84((uint64_t)v9, type metadata accessor for SymbolButton.Metrics);
    double v20 = v20 + v24;
  }
  double v25 = *(void **)(v12 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 40));
  if (v25)
  {
    [v25 intrinsicContentSize];
    if (v26 > v20) {
      double v20 = v26;
    }
  }
  double v27 = v11 + 0.0;
  sub_100C28854(v5);
  double v28 = *(double *)((char *)v5 + v1[10]);
  sub_100C2DA84((uint64_t)v5, type metadata accessor for SymbolButton.Metrics);
  if (v20 > v28) {
    double v29 = v20;
  }
  else {
    double v29 = v28;
  }
  double v30 = v27 + v29;
  sub_100C28854(v3);
  sub_100C2DA84((uint64_t)v3, type metadata accessor for SymbolButton.Metrics);
  return v30;
}

Swift::Void __swiftcall SymbolButton.tintColorDidChange()()
{
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = (objc_class *)type metadata accessor for SymbolButton(0);
  v6.receiver = v0;
  v6.super_class = v3;
  [super tintColorDidChange];
  uint64_t v4 = (uint64_t)v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  sub_100C35BE4(v4, (uint64_t)v2, type metadata accessor for SymbolButton.Configuration);
  sub_100C28D38((uint64_t)v2);
  sub_100C2DA84((uint64_t)v2, type metadata accessor for SymbolButton.Configuration);
}

id SymbolButton.sizeThatFits(_:)()
{
  return [v0 intrinsicContentSize];
}

long long *SymbolButton.Configuration.hitRectMinimumSize.unsafeMutableAddressor()
{
  if (qword_1010C8820 != -1) {
    swift_once();
  }
  return &static SymbolButton.Configuration.hitRectMinimumSize;
}

double SymbolButton.hitRectMinimumSize.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SymbolButton.hitRectMinimumSize.setter(double a1, double a2)
{
  uint64_t v5 = (double *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize);
  uint64_t result = swift_beginAccess();
  double *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SymbolButton.hitRectMinimumSize.modify())()
{
  return j_j__swift_endAccess;
}

double SymbolButton.hitRect()()
{
  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for SymbolButton(0);
  [super hitRect];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  uint64_t v9 = (double *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize];
  swift_beginAccess();
  double v10 = *v9;
  v16.origin.CGFloat x = v2;
  v16.origin.CGFloat y = v4;
  v16.size.CGFloat width = v6;
  v16.size.CGFloat height = v8;
  double Width = CGRectGetWidth(v16);
  if (Width > v10) {
    double v10 = Width;
  }
  v17.origin.CGFloat x = v2;
  v17.origin.CGFloat y = v4;
  v17.size.CGFloat width = v6;
  v17.size.CGFloat height = v8;
  CGRectGetHeight(v17);
  CGRect.center.getter();
  double v13 = v12 - v10 * 0.5;
  CGRect.center.getter();
  return v13;
}

void *SymbolButton.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  if ((UIViewIgnoresTouchEvents() & 1) != 0 || !objc_msgSend(v3, "pointInside:withEvent:", a1, a2, a3)) {
    return 0;
  }
  id v7 = v3;
  return v3;
}

BOOL SymbolButton.point(inside:with:)(CGFloat a1, CGFloat a2)
{
  [v2 hitRect];
  v6.CGFloat x = a1;
  v6.CGFloat y = a2;
  return CGRectContainsPoint(v7, v6);
}

id SymbolButton.isHighlighted.getter()
{
  return sub_100C27288((SEL *)&selRef_isHighlighted);
}

id SymbolButton.isHighlighted.setter(char a1)
{
  double v3 = (objc_class *)type metadata accessor for SymbolButton(0);
  v7.receiver = v1;
  v7.super_class = v3;
  char v4 = [super isHighlighted];
  v6.receiver = v1;
  v6.super_class = v3;
  [super setHighlighted:a1 & 1];
  return sub_100C26CE8(v4);
}

id sub_100C26CE8(char a1)
{
  CGFloat v2 = v1;
  int v3 = a1 & 1;
  sub_100063814(&qword_1010D00F0);
  *(void *)&double v4 = __chkstk_darwin().n128_u64[0];
  objc_super v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v2 isHighlighted:v4];
  if (result != v3)
  {
    id v8 = [v2 traitCollection];
    id v9 = [v8 userInterfaceIdiom];

    if (v9 == (id)6)
    {
      double v10 = self;
      if ([v10 areAnimationsEnabled])
      {
        if ([v2 isHighlighted])
        {
          uint64_t v11 = swift_allocObject();
          *(void *)(v11 + 16) = v2;
          double v28 = sub_100C35BB4;
          uint64_t v29 = v11;
          aBlock = _NSConcreteStackBlock;
          uint64_t v25 = 1107296256;
          double v26 = sub_100020238;
          double v27 = &unk_101013750;
          double v12 = _Block_copy(&aBlock);
          id v13 = v2;
          swift_release();
          uint64_t v14 = swift_allocObject();
          *(void *)(v14 + 16) = v13;
          double v28 = sub_100C35BDC;
          uint64_t v29 = v14;
          aBlock = _NSConcreteStackBlock;
          uint64_t v25 = 1107296256;
          double v26 = sub_1001695E8;
          double v27 = &unk_1010137A0;
          objc_super v15 = _Block_copy(&aBlock);
          id v16 = v13;
          swift_release();
          [v10 animateWithDuration:0x20000 delay:v12 options:v15 animations:0.1 completion:0.0];
          _Block_release(v15);
          _Block_release(v12);
        }
        else
        {
          sub_100057778(0, (unint64_t *)&qword_1010CD3B0);
          sub_100057778(0, &qword_1010CA980);
          id v17 = UISpringTimingParameters.init(dampingRatio:response:)(0.7, 0.4);
          uint64_t v18 = swift_allocObject();
          *(void *)(v18 + 16) = v2;
          id v19 = v2;
          static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v17, 0, sub_100C35B94, v18, 0, 0, 0.0);

          swift_release();
        }
      }
    }
    uint64_t v20 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
    unsigned int v21 = [self areAnimationsEnabled];
    if (v21) {
      uint64_t v22 = 0x3FD0000000000000;
    }
    else {
      uint64_t v22 = 0;
    }
    if (v21) {
      uint64_t v23 = 3075;
    }
    else {
      uint64_t v23 = 0;
    }
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v6, v22, 0, v23, v21 ^ 1);
    return (id)sub_1000637B8((uint64_t)v6, &qword_1010D00F0);
  }
  return result;
}

id sub_100C27088(uint64_t a1, CGFloat a2)
{
  CGFloat v2 = *(void **)(a1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView);
  CGAffineTransformMakeScale(&v4, a2, a2);
  return [v2 setTransform:&v4];
}

id sub_100C270E8(int a1, id a2)
{
  id result = [a2 showsMenuAsPrimaryAction];
  if (result)
  {
    id result = [a2 isContextMenuInteractionEnabled];
    if (result)
    {
      sub_100057778(0, (unint64_t *)&qword_1010CD3B0);
      sub_100057778(0, &qword_1010CA980);
      id v4 = UISpringTimingParameters.init(dampingRatio:response:)(0.7, 0.4);
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = a2;
      id v6 = a2;
      static UIView.animate(withSpringTimingParameters:delay:options:animations:completion:)(v4, 0, sub_100C36E08, v5, 0, 0, 0.0);

      return (id)swift_release();
    }
  }
  return result;
}

id sub_100C27234(void *a1, uint64_t a2, uint64_t (*a3)(void), SEL *a4)
{
  v6.receiver = a1;
  v6.super_class = (Class)a3(0);
  return [super a4];
}

id SymbolButton.isSelected.getter()
{
  return sub_100C27288((SEL *)&selRef_isSelected);
}

id sub_100C27288(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for SymbolButton(0);
  return [super a1];
}

id SymbolButton.isSelected.setter(char a1)
{
  return sub_100C273C4(a1, (SEL *)&selRef_isSelected, (SEL *)&selRef_setSelected_);
}

id SymbolButton.isEnabled.getter()
{
  return sub_100C27288((SEL *)&selRef_isEnabled);
}

id SymbolButton.isEnabled.setter(char a1)
{
  return sub_100C273C4(a1, (SEL *)&selRef_isEnabled, (SEL *)&selRef_setEnabled_);
}

id sub_100C273C4(char a1, SEL *a2, SEL *a3)
{
  sub_100063814(&qword_1010D00F0);
  __chkstk_darwin();
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = (objc_class *)type metadata accessor for SymbolButton(0);
  v17.receiver = v3;
  v17.super_class = v9;
  unsigned int v10 = [super *a2];
  v16.receiver = v3;
  v16.super_class = v9;
  [super setValue:a1 & 1];
  id result = [v3 *a2];
  if (v10 != result)
  {
    uint64_t v12 = type metadata accessor for SymbolButton.Configuration(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 1, 1, v12);
    unsigned int v13 = [self areAnimationsEnabled];
    if (v13) {
      uint64_t v14 = 0x3FD0000000000000;
    }
    else {
      uint64_t v14 = 0;
    }
    if (v13) {
      uint64_t v15 = 3075;
    }
    else {
      uint64_t v15 = 0;
    }
    SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v8, v14, 0, v15, v13 ^ 1);
    return (id)sub_1000637B8((uint64_t)v8, &qword_1010D00F0);
  }
  return result;
}

Swift::Void __swiftcall SymbolButton.setEnabled(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  if (animated)
  {
    [v2 setEnabled:_];
  }
  else
  {
    objc_super v4 = self;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v2;
    *(unsigned char *)(v5 + 24) = _;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_100C30CC8;
    *(void *)(v6 + 24) = v5;
    v10[4] = sub_10013DF0C;
    _OWORD v10[5] = v6;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    v10[2] = sub_10007A61C;
    v10[3] = &unk_101012EA0;
    uint64_t v7 = _Block_copy(v10);
    id v8 = v2;
    swift_retain();
    swift_release();
    [v4 performWithoutAnimation:v7];
    _Block_release(v7);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
}

uint64_t SymbolButton.buildMenu.getter()
{
  return sub_100C276F0(&OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu, (void (*)(void, void))sub_1000CBB50);
}

uint64_t sub_100C276F0(void *a1, void (*a2)(void, void))
{
  objc_super v4 = (void *)(v2 + *a1);
  swift_beginAccess();
  uint64_t v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t SymbolButton.buildMenu.setter(uint64_t a1, uint64_t a2)
{
  return sub_100C27778(a1, a2, &OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu, (uint64_t (*)(uint64_t, uint64_t))sub_1000CBB54);
}

uint64_t sub_100C27778(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  id v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  *id v8 = a1;
  v8[1] = a2;
  return a4(v9, v10);
}

uint64_t (*SymbolButton.buildMenu.modify())()
{
  return j_j__swift_endAccess;
}

id sub_100C27898()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView);
  }
  else
  {
    uint64_t v4 = v0;
    uint64_t v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess();
    long long v6 = *(_OWORD *)(v5 + 80);
    void v17[4] = *(_OWORD *)(v5 + 64);
    v17[5] = v6;
    v17[6] = *(_OWORD *)(v5 + 96);
    uint64_t v18 = *(void *)(v5 + 112);
    long long v7 = *(_OWORD *)(v5 + 16);
    v17[0] = *(_OWORD *)v5;
    v17[1] = v7;
    long long v8 = *(_OWORD *)(v5 + 48);
    void v17[2] = *(_OWORD *)(v5 + 32);
    v17[3] = v8;
    uint64_t v9 = (objc_class *)type metadata accessor for SymbolButton.ImageView();
    id v10 = objc_allocWithZone(v9);
    sub_100C35CEC((uint64_t)v17);
    v16.receiver = v10;
    v16.super_class = v9;
    [super initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v11 setAdjustsImageSizeForAccessibilityContentSizeCategory:0];
    [v11 setContentMode:4];
    sub_100C2B1D4((uint64_t)v17);
    sub_100C35D4C((uint64_t)v17);

    uint64_t v12 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView);
    if (([v11 isDescendantOfView:v12] & 1) == 0) {
      [v12 addSubview:v11];
    }
    unsigned int v13 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v11;
    id v3 = v11;

    uint64_t v2 = 0;
  }
  id v14 = v2;
  return v3;
}

id sub_100C27A00()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel);
  }
  else
  {
    uint64_t v4 = v0;
    uint64_t v5 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess();
    long long v6 = *(_OWORD *)(v5 + 136);
    long long v7 = *(_OWORD *)(v5 + 168);
    _OWORD v14[2] = *(_OWORD *)(v5 + 152);
    v14[3] = v7;
    char v15 = *(unsigned char *)(v5 + 184);
    v14[0] = *(_OWORD *)(v5 + 120);
    v14[1] = v6;
    id v8 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.Label());
    sub_100C35C4C((uint64_t)v14);
    id v9 = sub_100C2B3CC((uint64_t)v14);
    id v10 = *(void **)(v4 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView);
    if (([v9 isDescendantOfView:v10] & 1) == 0) {
      [v10 addSubview:v9];
    }
    id v11 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v9;
    id v3 = v9;

    uint64_t v2 = 0;
  }
  id v12 = v2;
  return v3;
}

void sub_100C27B00()
{
  uint64_t v1 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v1);
  id v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView);
  if (v4)
  {
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView);
    id v6 = v4;
    id v7 = [v5 contentView];
    [v7 bounds];
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;

    uint64_t v16 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess();
    sub_100C35BE4(v16, (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
    objc_super v17 = &v3[*(int *)(v1 + 40)];
    if (*(void *)v17) {
      uint64_t v18 = (const UIEdgeInsets *)(v17 + 8);
    }
    else {
      uint64_t v18 = &UIEdgeInsetsZero;
    }
    if (*(void *)v17) {
      p_left = (CGFloat *)(v17 + 16);
    }
    else {
      p_left = &UIEdgeInsetsZero.left;
    }
    double v20 = *p_left;
    double top = v18->top;
    sub_100C2DA84((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
    [v6 setFrame:sub_10003B5C8(v9, v11, v13, v15, top, v20)];
  }
}

void sub_100C27CE8()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  if (v1)
  {
    id v7 = v1;
    id v2 = [v0 traitCollection];
    id v3 = [v2 userInterfaceIdiom];

    if (v3 == (id)6) {
      double v4 = 12.0;
    }
    else {
      double v4 = 8.0;
    }
    [v0 bounds];
    double MaxX = CGRectGetMaxX(v9);
    v10.origin.CGFloat x = 0.0;
    v10.origin.CGFloat y = 0.0;
    v10.size.CGFloat width = v4;
    v10.size.CGFloat height = v4;
    double v6 = MaxX - CGRectGetWidth(v10) + 1.0;
    [v0 bounds];
    [v7 setFrame:v6, CGRectGetMinY(v11) + -1.0, v4, v4];
  }
}

id sub_100C27E0C()
{
  id result = [self defaultMetrics];
  qword_1010D0A70 = (uint64_t)result;
  return result;
}

uint64_t sub_100C27E48@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin(v6 - 8);
  uint64_t v103 = (uint64_t)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v8 = (int *)type metadata accessor for SymbolButton.Metrics(0);
  uint64_t v9 = (uint64_t)a3 + v8[5];
  uint64_t v10 = type metadata accessor for UIView.Corner();
  CGRect v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  uint64_t v102 = v9;
  v11(v9, 1, 1, v10);
  double v12 = (char *)a3 + v8[11];
  *(void *)double v12 = 0;
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  double v13 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  double v14 = (unsigned __int8 *)(a1 + v13[16]);
  int v99 = *v14;
  id v104 = a2;
  double v98 = v12;
  if (v99 == 1)
  {
    double v15 = (NSString *)[a2 preferredContentSizeCategory];
    UIContentSizeCategory v16 = v15;
    objc_super v17 = (void *)*((void *)v14 + 1);
    if (v17)
    {
      uint64_t v18 = v15;
      UIContentSizeCategory v16 = v17;
      char v19 = static UIContentSizeCategory.>= infix(_:_:)();
      if (v19) {
        UIContentSizeCategory v20 = v18;
      }
      else {
        UIContentSizeCategory v20 = v16;
      }
      if ((v19 & 1) == 0) {
        UIContentSizeCategory v16 = v18;
      }
    }
    unsigned int v21 = (void *)*((void *)v14 + 2);
    if (v21)
    {
      uint64_t v22 = v21;
      UIContentSizeCategory v16 = v16;
      char v23 = static UIContentSizeCategory.< infix(_:_:)();

      if (v23)
      {

        UIContentSizeCategory v16 = v22;
      }
      else
      {
      }
    }
  }
  else
  {
    UIContentSizeCategory v16 = UIContentSizeCategoryLarge;
  }
  *((unsigned char *)a3 + v8[13]) = v14[24];
  double v24 = self;
  UIContentSizeCategory v101 = v16;
  id v25 = [v24 traitCollectionWithPreferredContentSizeCategory:v16];
  *a3 = v25;
  double v26 = self;
  uint64_t v27 = *(void *)(a1 + 136);
  uint64_t v97 = (uint64_t)v25;
  id v28 = v25;
  id v29 = [v26 preferredFontDescriptorWithTextStyle:v27 compatibleWithTraitCollection:v28];
  double v30 = self;
  id v100 = v29;
  [v29 pointSize];
  id v31 = [v30 systemFontOfSize:];
  uint64_t v32 = v31;
  *(void *)((char *)a3 + v8[6]) = v31;
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v33 = *(void *)(a1 + 24);
    id v34 = v31;
    id v35 = [v26 preferredFontDescriptorWithTextStyle:v33 compatibleWithTraitCollection:v28];
    [v35 pointSize];
    id v37 = [self configurationWithPointSize:*(void *)(a1 + 48) weight:*(void *)(a1 + 56) scale:v36];
  }
  else
  {
    double v38 = *(double *)(a1 + 32);
    uint64_t v39 = *(void *)(a1 + 48);
    uint64_t v40 = *(void *)(a1 + 56);
    uint64_t v41 = self;
    id v42 = v32;
    id v37 = [v41 configurationWithPointSize:v39 weight:v40 scale:v38];
  }
  *(void *)((char *)a3 + v8[7]) = v37;
  *(void *)((char *)a3 + v8[8]) = *(void *)(a1 + v13[12]);
  int v43 = *(unsigned __int8 *)(a1 + 80);
  id v44 = v104;
  if (v43 == 255)
  {
    *(UIOffset *)((char *)a3 + v8[9]) = UIOffsetZero;
    if (v99) {
      goto LABEL_24;
    }
LABEL_22:

    double v49 = (_OWORD *)(a1 + v13[15]);
    id v50 = (_OWORD *)((char *)a3 + v8[12]);
    long long v51 = v49[1];
    *id v50 = *v49;
    v50[1] = v51;
    *(_OWORD *)((char *)a3 + v8[10]) = *(_OWORD *)(a1 + v13[13]);
    uint64_t v52 = a1 + v13[14];
    LOBYTE(v50) = *(unsigned char *)(v52 + 16);
    long long v53 = *(_OWORD *)v52;
    double v54 = v98;
    _OWORD *v98 = v53;
    *((unsigned char *)v54 + 16) = (_BYTE)v50;
    uint64_t v55 = a1 + v13[9];
    uint64_t v56 = v103;
    sub_10006CAB8(v55, v103, &qword_1010D0AB0);
    goto LABEL_29;
  }
  uint64_t v45 = *(void *)(a1 + 72);
  if (v43)
  {
    double v57 = (void *)((char *)a3 + v8[9]);
    *double v57 = *(void *)(a1 + 64);
    v57[1] = v45;
    if (!v99) {
      goto LABEL_22;
    }
  }
  else
  {
    [v104 displayScale];
    static UIOffset./ infix(_:_:)();
    double v46 = (void *)((char *)a3 + v8[9]);
    *double v46 = v47;
    v46[1] = v48;
    if (!v99) {
      goto LABEL_22;
    }
  }
LABEL_24:
  if (qword_1010C8800 != -1) {
    swift_once();
  }
  uint64_t v58 = (void *)qword_1010D0A70;
  double v59 = (double *)(a1 + v13[15]);
  double v60 = *v59;
  double v61 = v59[1];
  double v62 = v59[2];
  double v63 = v59[3];
  id v64 = v28;
  [v58 scaledValueForValue:v64 compatibleWithTraitCollection:v60];
  uint64_t v66 = v65;
  [v58 scaledValueForValue:v64 compatibleWithTraitCollection:v61];
  uint64_t v68 = v67;
  [v58 scaledValueForValue:v64 compatibleWithTraitCollection:v62];
  uint64_t v70 = v69;
  [v58 scaledValueForValue:v64 compatibleWithTraitCollection:v63];
  uint64_t v72 = v71;

  CGFloat v73 = (void *)((char *)a3 + v8[12]);
  *CGFloat v73 = v66;
  v73[1] = v68;
  v73[2] = v70;
  v73[3] = v72;
  CGFloat v74 = (void *)qword_1010D0A70;
  double v75 = (double *)(a1 + v13[13]);
  double v76 = *v75;
  double v77 = v75[1];
  id v78 = v64;
  [v74 scaledValueForValue:v78 compatibleWithTraitCollection:v76];
  uint64_t v80 = v79;
  [v74 scaledValueForValue:v78 compatibleWithTraitCollection:v77];
  uint64_t v82 = v81;

  double v83 = (void *)((char *)a3 + v8[10]);
  *double v83 = v80;
  v83[1] = v82;
  uint64_t v84 = a1 + v13[14];
  if ((*(unsigned char *)(v84 + 16) & 1) == 0)
  {
    double v86 = *(double *)v84;
    double v85 = *(double *)(v84 + 8);
    double v87 = (void *)qword_1010D0A70;
    id v88 = v78;
    [v87 scaledValueForValue:v88 compatibleWithTraitCollection:v86];
    uint64_t v90 = v89;
    [v87 scaledValueForValue:v88 compatibleWithTraitCollection:v85];
    uint64_t v92 = v91;

    id v93 = v98;
    *(void *)double v98 = v90;
    *((void *)v93 + 1) = v92;
    *((unsigned char *)v93 + 16) = 0;
  }
  uint64_t v94 = a1 + v13[9];
  id v95 = v78;
  uint64_t v56 = v103;
  sub_100C284E0(v94, v97, v103);

LABEL_29:
  sub_100C2DA84(a1, type metadata accessor for SymbolButton.Configuration);
  return sub_10002D09C(v56, v102, &qword_1010D0AB0);
}

uint64_t sub_100C284E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v4 = type metadata accessor for UIView.Corner.Radius();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  double v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v25 - v9;
  uint64_t v11 = sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin(v11 - 8);
  double v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UIView.Corner();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  objc_super v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006CAB8(a1, (uint64_t)v13, &qword_1010D0AB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1000637B8((uint64_t)v13, &qword_1010D0AB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    UIView.Corner.radius.getter();
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v10, v4);
    if (v18 == enum case for UIView.Corner.Radius.value(_:))
    {
      uint64_t v19 = v18;
      (*(void (**)(char *, uint64_t))(v5 + 96))(v10, v4);
      double v20 = *(double *)v10;
      char v21 = v10[8];
      uint64_t v22 = v27;
      (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v27, v17, v14);
      [v25[1] scaledValueForValue:v26 compatibleWithTraitCollection:v20];
      *(void *)double v8 = v23;
      v8[8] = v21;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 104))(v8, v19, v4);
      UIView.Corner.radius.setter();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v22, 0, 1, v14);
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  return sub_10006CAB8(a1, v27, &qword_1010D0AB0);
}

uint64_t sub_100C28854@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100063814(&qword_1010D0F80);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = (uint64_t)v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics;
  swift_beginAccess();
  sub_10006CAB8(v12, (uint64_t)v11, &qword_1010D0F80);
  uint64_t v13 = type metadata accessor for SymbolButton.Metrics(0);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1) {
    return sub_100C363B8((uint64_t)v11, (uint64_t)a1, type metadata accessor for SymbolButton.Metrics);
  }
  sub_1000637B8((uint64_t)v11, &qword_1010D0F80);
  uint64_t v15 = (uint64_t)v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  sub_100C35BE4(v15, (uint64_t)v5, type metadata accessor for SymbolButton.Configuration);
  sub_100C27E48((uint64_t)v5, [v1 traitCollection], a1);
  sub_100C35BE4((uint64_t)a1, (uint64_t)v9, type metadata accessor for SymbolButton.Metrics);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
  swift_beginAccess();
  sub_10002D09C((uint64_t)v9, v12, &qword_1010D0F80);
  return swift_endAccess();
}

uint64_t sub_100C28AE8(uint64_t a1)
{
  uint64_t v3 = sub_100063814(&qword_1010D0F80);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SymbolButton.Metrics(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (void **)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v12 = (void **)((char *)&v16 - v11);
  sub_100C28854((uint64_t *)((char *)&v16 - v11));
  sub_100C35BE4(a1, (uint64_t)v5, type metadata accessor for SymbolButton.Metrics);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v13 = (uint64_t)v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics;
  swift_beginAccess();
  sub_10002D09C((uint64_t)v5, v13, &qword_1010D0F80);
  swift_endAccess();
  sub_100C28854(v10);
  char v14 = sub_100C2E6C0(v10, v12);
  sub_100C2DA84((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
  if ((v14 & 1) == 0)
  {
    sub_100C28854(v10);
    sub_100C2999C((uint64_t)v10);
    sub_100C2DA84((uint64_t)v10, type metadata accessor for SymbolButton.Metrics);
    [v1 invalidateIntrinsicContentSize];
    [v1 setNeedsLayout];
  }
  sub_100C2DA84(a1, type metadata accessor for SymbolButton.Metrics);
  return sub_100C2DA84((uint64_t)v12, type metadata accessor for SymbolButton.Metrics);
}

void sub_100C28D38(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SymbolButton.Metrics(0);
  __chkstk_darwin(v3 - 8);
  id v88 = (uint64_t *)((char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v89 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v5 = __chkstk_darwin(v89);
  uint64_t v87 = (uint64_t)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v85 - v7;
  if (qword_1010C8410 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100050A90(v9, (uint64_t)qword_10112C0F8);
  sub_100C35BE4(a1, (uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
  uint64_t v10 = v1;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    char v14 = (char *)swift_slowAlloc();
    *(void *)&v95[0] = v14;
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v15 = (uint64_t *)&v10[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
    swift_beginAccess();
    unint64_t v16 = v15[1];
    if (v16)
    {
      uint64_t v17 = *v15;
      unint64_t v18 = v16;
    }
    else
    {
      uint64_t v90 = v10;
      id v19 = [v90 description];
      uint64_t v91 = v14;
      id v20 = v19;
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v18 = v21;
    }
    swift_bridgeObjectRetain();
    *(void *)(v13 + 4) = sub_100076010(v17, v18, (uint64_t *)v95);
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2082;
    unint64_t v22 = SymbolButton.Configuration.description.getter();
    *(void *)(v13 + 14) = sub_100076010(v22, v23, (uint64_t *)v95);
    swift_bridgeObjectRelease();
    sub_100C2DA84((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[%{public}s] Applying configuration=%{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_100C2DA84((uint64_t)v8, type metadata accessor for SymbolButton.Configuration);
  }

  double v24 = *(void **)&v10[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView];
  sub_10003CABC(a1 + 224, (uint64_t)v97, &qword_1010D0B30);
  sub_100C2A83C((uint64_t)v97);
  double v86 = v24;
  id v25 = [v24 contentView];
  uint64_t v26 = *(void *)(a1 + 272);
  uint64_t v27 = *(void *)(a1 + 280);
  id v28 = *(void **)(a1 + 288);
  id v29 = v28;
  UIView.border.setter(v26, v27, v28);

  uint64_t v90 = *(char **)&v10[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView];
  uint64_t v91 = v10;
  uint64_t v30 = *(void *)(a1 + 192);
  id v31 = *(void **)(a1 + 200);
  if (v31 == (void *)1)
  {
    if (qword_1010C87F8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    double v32 = *(double *)&static SymbolButton.Background.clear;
    uint64_t v33 = (void *)qword_10112CF98;
    uint64_t v34 = qword_10112CFA8;
    swift_bridgeObjectRetain();
    id v35 = v33;
  }
  else
  {
    double v32 = *(double *)(a1 + 192);
    uint64_t v34 = *(void *)(a1 + 216);
    uint64_t v33 = *(void **)(a1 + 200);
  }
  sub_100C30C38(v30, v31);
  id v36 = [v90 layer];
  if (v34) {
    NSString v37 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v37 = 0;
  }
  double v38 = (int *)v89;
  [v36 setCompositingFilter:v37];
  swift_unknownObjectRelease();

  id v39 = v33;
  sub_100C2AE6C(v33, v32);

  swift_bridgeObjectRelease();
  id v40 = sub_100C27898();
  long long v41 = *(_OWORD *)(a1 + 80);
  v95[4] = *(_OWORD *)(a1 + 64);
  v95[5] = v41;
  v95[6] = *(_OWORD *)(a1 + 96);
  uint64_t v96 = *(void *)(a1 + 112);
  long long v42 = *(_OWORD *)(a1 + 16);
  v95[0] = *(_OWORD *)a1;
  v95[1] = v42;
  long long v43 = *(_OWORD *)(a1 + 48);
  v95[2] = *(_OWORD *)(a1 + 32);
  v95[3] = v43;
  sub_100C2B1D4((uint64_t)v95);

  id v44 = sub_100C27A00();
  long long v45 = *(_OWORD *)(a1 + 136);
  long long v46 = *(_OWORD *)(a1 + 168);
  v93[2] = *(_OWORD *)(a1 + 152);
  v93[3] = v46;
  char v94 = *(unsigned char *)(a1 + 184);
  v93[0] = *(_OWORD *)(a1 + 120);
  v93[1] = v45;
  sub_10003CABC((uint64_t)v93, (uint64_t)v98, &qword_1010D0B40);
  sub_100C2B554((uint64_t)v93);

  sub_10003CABC((uint64_t)v98, (uint64_t)&v99, &qword_1010D0B40);
  if (v100)
  {
    uint64_t v47 = HIBYTE(v100) & 0xF;
    if ((v100 & 0x2000000000000000) == 0) {
      uint64_t v47 = v99 & 0xFFFFFFFFFFFFLL;
    }
    if (v47)
    {
      NSString v48 = String._bridgeToObjectiveC()();
      [v91 setAccessibilityLabel:v48];
    }
  }
  uint64_t v49 = a1 + v38[11];
  id v50 = *(void **)(v49 + 16);
  long long v51 = &selRef_initWithActivityIndicatorStyle_;
  if (v50 != (void *)1)
  {
    uint64_t v58 = *(char **)v49;
    uint64_t v59 = *(void *)(v49 + 8);
    double v60 = *(double *)&v59;
    uint64_t v61 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView;
    long long v53 = v91;
    double v62 = *(void **)&v91[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
    uint64_t v90 = v58;
    uint64_t v85 = v59;
    if (v62)
    {
      id v63 = v62;
      id v64 = v50;
      uint64_t v65 = (char *)v63;
      uint64_t v66 = v65;
    }
    else
    {
      id v69 = objc_allocWithZone((Class)type metadata accessor for SymbolButton.BadgeView());
      sub_100C30C80((uint64_t)v58, v59, v50);
      id v70 = v50;
      uint64_t v68 = sub_100C2B6EC(v50, *(double *)&v58, *(double *)&v59);
      uint64_t v65 = *(char **)&v53[v61];
      *(void *)&v53[v61] = v68;
      uint64_t v71 = v68;
      if (!v68)
      {
        if (!v65)
        {
LABEL_36:

          CGFloat v74 = *(char **)&v53[v61];
          if (v74)
          {
            long long v51 = &selRef_initWithActivityIndicatorStyle_;
            if (v50)
            {
              double v75 = v74;
              double v76 = v50;
              id v77 = v50;
            }
            else
            {
              id v78 = self;
              uint64_t v79 = v74;
              id v77 = [v78 tintColor];
              double v76 = 0;
            }
            id v80 = v76;
            [v74 setBackgroundColor:v77];

            [v74 setAlpha:v60];
            [*(id *)&v74[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView] setAlpha:v60];
            sub_100C2BC10();
            sub_1008329C4((uint64_t)v90, v85, (uint64_t)v50);
          }
          else
          {
            sub_1008329C4((uint64_t)v90, v85, (uint64_t)v50);
            long long v51 = &selRef_initWithActivityIndicatorStyle_;
          }
          goto LABEL_42;
        }
        uint64_t v66 = 0;
LABEL_30:
        [v65 removeFromSuperview];
        uint64_t v68 = *(char **)&v53[v61];
        if (!v68) {
          goto LABEL_35;
        }
        goto LABEL_34;
      }
      uint64_t v66 = v71;
      if (!v65)
      {
LABEL_34:
        uint64_t v72 = *(void **)&v53[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
        CGFloat v73 = v68;
        [v72 insertSubview:v73 aboveSubview:v86];
        sub_100C27CE8();

        double v38 = (int *)v89;
        goto LABEL_35;
      }
    }
    type metadata accessor for SymbolButton.BadgeView();
    uint64_t v65 = v65;
    uint64_t v66 = v66;
    char v67 = static NSObject.== infix(_:_:)();

    if (v67)
    {
LABEL_35:

      goto LABEL_36;
    }
    goto LABEL_30;
  }
  uint64_t v52 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView;
  long long v53 = v91;
  double v54 = *(void **)&v91[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView];
  *(void *)&v91[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
  if (v54)
  {
    [v54 removeFromSuperview];
    uint64_t v55 = *(void **)&v53[v52];
    if (v55)
    {
      uint64_t v56 = *(void **)&v53[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
      id v57 = v55;
      [v56 insertSubview:v57 aboveSubview:v86];
      sub_100C27CE8();
    }
  }
LABEL_42:
  sub_10003CABC(a1 + v38[10], (uint64_t)v92, &qword_1010D0B28);
  sub_100C297F4((uint64_t)v92);
  [v53 v51[389]:*(double *)(a1 + v38[17])];
  [v53 setTintColor:*(void *)(a1 + v38[18])];
  id v81 = [v53 traitCollection];
  uint64_t v82 = v88;
  sub_100C28854(v88);
  sub_100C2DA84((uint64_t)v82, type metadata accessor for SymbolButton.Metrics);
  uint64_t v83 = a1;
  uint64_t v84 = v87;
  sub_100C35BE4(v83, v87, type metadata accessor for SymbolButton.Configuration);
  sub_100C27E48(v84, v81, v82);
  sub_100C28AE8((uint64_t)v82);
  sub_100C28854(v82);
  sub_100C29B0C((uint64_t)v82);
  sub_100C2DA84((uint64_t)v82, type metadata accessor for SymbolButton.Metrics);
  sub_100C29664();
}

void sub_100C29664()
{
  uint64_t v1 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView);
  if (!*(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount))
  {
    uint64_t v6 = v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
    swift_beginAccess();
    sub_100C35BE4(v6, (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
    if (*((void *)v3 + 28) == 1)
    {
      sub_100C2DA84((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
    }
    else
    {
      uint64_t v7 = *((void *)v3 + 33);
      swift_bridgeObjectRetain();
      sub_100C2DA84((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
      if (v7)
      {
        NSString v8 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
LABEL_10:
        [v4 _setGroupName:v8];

        return;
      }
    }
    NSString v8 = 0;
    goto LABEL_10;
  }
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView);

  [v5 _setGroupName:0];
}

void sub_100C297F4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView;
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView);
  sub_10003CABC(a1, (uint64_t)v20, &qword_1010D0B28);
  if (!v20[0])
  {
    if (!v5) {
      goto LABEL_14;
    }
LABEL_4:
    uint64_t v10 = *(void **)(v2 + v4);
    if (!v10) {
      goto LABEL_11;
    }
LABEL_9:
    if ([v10 isDescendantOfView:v2]) {
      [*(id *)(v2 + v4) removeFromSuperview];
    }
    goto LABEL_11;
  }
  id v6 = v20[0];
  uint64_t v7 = v6;
  if (v5)
  {
    sub_100057778(0, (unint64_t *)&qword_1010CD3B0);
    id v8 = v5;
    char v9 = static NSObject.== infix(_:_:)();

    if (v9) {
      goto LABEL_14;
    }
    goto LABEL_4;
  }

  uint64_t v10 = *(void **)(v1 + v4);
  if (v10) {
    goto LABEL_9;
  }
LABEL_11:
  sub_10003CABC(a1, (uint64_t)v19, &qword_1010D0B28);
  id v11 = v19[0];
  if (v19[0]) {
    id v12 = v19[0];
  }
  sub_100C2F874(v11);

LABEL_14:
  uint64_t v13 = *(void **)(v2 + v4);
  if (v13)
  {
    sub_10003CABC(a1, (uint64_t)v18, &qword_1010D0B28);
    double v14 = *(double *)&v18[5];
    if (!v18[0]) {
      double v14 = 1.0;
    }
    [v13 setAlpha:v14];
    uint64_t v15 = *(void **)(v2 + v4);
    if (v15)
    {
      sub_10003CABC(a1, (uint64_t)v17, &qword_1010D0B28);
      if (v17[0]) {
        uint64_t v16 = v17[6];
      }
      else {
        uint64_t v16 = 0;
      }
      [v15 setTintColor:v16];
    }
  }
}

id sub_100C2999C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SymbolButton.Metrics(0);
  uint64_t v4 = (int *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v7 = sub_100C27898();
  sub_100C28854(v6);
  id v8 = *(id *)((char *)v6 + v4[9]);
  sub_100C2DA84((uint64_t)v6, type metadata accessor for SymbolButton.Metrics);
  [v7 setPreferredSymbolConfiguration:v8];

  id v9 = sub_100C27A00();
  sub_100C28854(v6);
  id v10 = *(id *)((char *)v6 + v4[8]);
  sub_100C2DA84((uint64_t)v6, type metadata accessor for SymbolButton.Metrics);
  [v9 setFont:v10];

  sub_100C28854(v6);
  sub_100C29B0C((uint64_t)v6);
  sub_100C2DA84((uint64_t)v6, type metadata accessor for SymbolButton.Metrics);
  [v1 setShowsLargeContentViewer:*(unsigned __int8 *)(a1 + v4[15])];
  return [v1 setScalesLargeContentImage:1];
}

uint64_t sub_100C29B0C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100063814(&qword_1010D0AB0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v49 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v45 - v8;
  __chkstk_darwin(v7);
  id v11 = (char *)&v45 - v10;
  uint64_t v12 = *(void **)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView);
  uint64_t v13 = a1 + *(int *)(type metadata accessor for SymbolButton.Metrics(0) + 20);
  sub_10006CAB8(v13, (uint64_t)v11, &qword_1010D0AB0);
  UIView.corner.setter();
  sub_10006CAB8(v13, (uint64_t)v11, &qword_1010D0AB0);
  UIView.corner.setter();
  id v14 = [v12 contentView];
  unsigned int v15 = [v14 clipsToBounds];

  if (v15)
  {
    sub_10006CAB8(v13, (uint64_t)v9, &qword_1010D0AB0);
    uint64_t v16 = type metadata accessor for UIView.Corner();
    int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v9, 1, v16);
    sub_1000637B8((uint64_t)v9, &qword_1010D0AB0);
    if (v17 != 1)
    {
      id v18 = [v12 contentView];
      [v18 setClipsToBounds:0];
    }
  }
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated) == 1)
  {
    uint64_t v46 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated;
    [v12 _setAllowsGroupFiltering:1];
    id v19 = [v12 contentView];
    id v20 = [v19 subviews];

    sub_100057778(0, (unint64_t *)&qword_1010CD3B0);
    unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v47 = v2;
    if (v21 >> 62) {
      goto LABEL_20;
    }
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v22; uint64_t v22 = _CocoaArrayWrapper.endIndex.getter())
    {
      type metadata accessor for SymbolButton.Label();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      uint64_t v24 = v47 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
      unint64_t v25 = v21 & 0xC000000000000001;
      swift_beginAccess();
      uint64_t v26 = 4;
      uint64_t v27 = &selRef_setManagingNavigationController_;
      unint64_t v48 = v21 & 0xC000000000000001;
      uint64_t v28 = 0;
      if ((v21 & 0xC000000000000001) != 0)
      {
LABEL_8:
        id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_10;
      }
      while (1)
      {
        id v29 = *(id *)(v21 + 8 * v26);
LABEL_10:
        uint64_t v30 = v29;
        uint64_t v31 = v28 + 1;
        if (__OFADD__(v28, 1)) {
          break;
        }
        if (!objc_msgSend(v29, v27[373], ObjCClassFromMetadata))
        {
          uint64_t v32 = type metadata accessor for SymbolButton.Configuration(0);
          int v33 = *(unsigned __int8 *)(v24 + *(int *)(v32 + 76));
          if (v33 == 2)
          {
            uint64_t v34 = v24 + *(int *)(v32 + 36);
            uint64_t v35 = ObjCClassFromMetadata;
            unint64_t v36 = v21;
            uint64_t v37 = v22;
            uint64_t v38 = v24;
            id v39 = v27;
            uint64_t v40 = v49;
            sub_10006CAB8(v34, v49, &qword_1010D0AB0);
            uint64_t v41 = type metadata accessor for UIView.Corner();
            uint64_t v42 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v40, 1, v41) != 1;
            uint64_t v43 = v40;
            uint64_t v27 = v39;
            uint64_t v24 = v38;
            uint64_t v22 = v37;
            unint64_t v21 = v36;
            uint64_t ObjCClassFromMetadata = v35;
            unint64_t v25 = v48;
            sub_1000637B8(v43, &qword_1010D0AB0);
          }
          else
          {
            uint64_t v42 = v33 & 1;
          }
          [v30 setClipsToBounds:v42];
        }

        if (v31 == v22) {
          goto LABEL_21;
        }
        uint64_t v28 = ++v26 - 4;
        if (v25) {
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
    }
LABEL_21:
    swift_bridgeObjectRelease_n();
    *(unsigned char *)(v47 + v46) = 0;
  }
  return sub_100C29F70();
}

uint64_t sub_100C29F70()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIView.Corner.Radius();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v36 = (uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = sub_100063814(&qword_1010D0F98);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = 0;
  memset(v42, 0, sizeof(v42));
  id v14 = [v0 traitCollection];
  id v15 = [v14 userInterfaceIdiom];

  if (v15 == (id)6)
  {
    uint64_t v40 = type metadata accessor for UIHoverHighlightEffect();
    uint64_t v41 = &protocol witness table for UIHoverHighlightEffect;
    sub_100068018(v39);
    static UIHoverEffect<>.highlight.getter();
  }
  else
  {
    uint64_t v40 = type metadata accessor for UIHoverLiftEffect();
    uint64_t v41 = &protocol witness table for UIHoverLiftEffect;
    sub_100068018(v39);
    static UIHoverEffect<>.lift.getter();
  }
  sub_1000637B8((uint64_t)v42, &qword_1010D0FA0);
  sub_10003CABC((uint64_t)v39, (uint64_t)v42, &qword_1010D0FA0);
  sub_10006CAB8((uint64_t)v42, (uint64_t)&v37, &qword_1010D0FA0);
  if (v38)
  {
    uint64_t v29 = v3;
    uint64_t v30 = v2;
    uint64_t v35 = v13;
    sub_100068978(&v37, (uint64_t)v39);
    id v33 = *(id *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView];
    uint64_t v32 = v41;
    uint64_t v16 = sub_100068990(v39, v40);
    uint64_t v31 = &v29;
    __chkstk_darwin(v16);
    (*(void (**)(char *))(v18 + 16))((char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v19 = (uint64_t)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration];
    swift_beginAccess();
    sub_100C35BE4(v19, (uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
    uint64_t v34 = v6;
    id v20 = &v10[*(int *)(v6 + 36)];
    uint64_t v21 = type metadata accessor for UIView.Corner();
    uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48);
    if (v22(v20, 1, v21))
    {
      sub_100C2DA84((uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
      static UIPointerShape.defaultCornerRadius.getter();
    }
    else
    {
      UIView.Corner.radius.getter();
      sub_100C2DA84((uint64_t)v10, type metadata accessor for SymbolButton.Configuration);
      [v1 bounds];
      UIView.Corner.Radius.value(in:)();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v30);
    }
    uint64_t v24 = v36;
    sub_100C35BE4(v19, v36, type metadata accessor for SymbolButton.Configuration);
    if (v22((char *)(v24 + *(int *)(v34 + 36)), 1, v21)) {
      CACornerMask v25 = 0;
    }
    else {
      CACornerMask v25 = UIView.Corner.mask.getter();
    }
    uint64_t v26 = v35;
    sub_100057778(0, &qword_1010D0FA8);
    sub_100C2DA84(v24, type metadata accessor for SymbolButton.Configuration);
    UIRectCorner.init(_:)(v25);
    static UIShape.rect(cornerRadius:cornerCurve:maskedCorners:)();
    uint64_t v27 = type metadata accessor for UIShape();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
    uint64_t v28 = (void *)UIHoverStyle.init<A>(effect:shape:)();
    [v33 setHoverStyle:v28];

    sub_1000637B8((uint64_t)v42, &qword_1010D0FA0);
    return sub_1000760E4((uint64_t)v39);
  }
  else
  {
    sub_1000637B8((uint64_t)&v37, &qword_1010D0FA0);
    [v1 setHoverStyle:0];
    return sub_1000637B8((uint64_t)v42, &qword_1010D0FA0);
  }
}

void SymbolButton.init(frame:)()
{
}

id SymbolButton.__deallocating_deinit()
{
  return sub_100C2AC38(type metadata accessor for SymbolButton);
}

void sub_100C2A83C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10003CABC(a1, (uint64_t)v20, &qword_1010D0B30);
  uint64_t v5 = v21;
  uint64_t v4 = v22;
  [v1 setEffect:0];
  sub_10003CABC(a1, (uint64_t)v27, &qword_1010D0B30);
  uint64_t v6 = (void *)v27[0];
  if (v27[0] >= 2)
  {
    sub_100063814(&qword_1010C9B10);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100E251C0;
    *(void *)(v9 + 32) = v6;
    uint64_t v25 = v9;
    specialized Array._endMutation()();
    sub_100057778(0, &qword_1010D0FB0);
    id v10 = v6;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v1 setBackgroundEffects:isa];

    if (!v5) {
      goto LABEL_4;
    }
    goto LABEL_8;
  }
  sub_100057778(0, &qword_1010D0FB0);
  Class v7 = Array._bridgeToObjectiveC()().super.isa;
  [v2 setBackgroundEffects:v7];

  sub_10003CABC(a1, (uint64_t)&v25, &qword_1010D0B30);
  if (v25 != 1)
  {
    uint64_t v5 = v26;
    if (!v26)
    {
LABEL_4:
      sub_10003CABC(a1, (uint64_t)&v23, &qword_1010D0B30);
      if (v23 == 1) {
        goto LABEL_6;
      }
      uint64_t v4 = v24;
      if (!v24) {
        goto LABEL_6;
      }
LABEL_11:
      sub_100063814(&qword_1010C9B10);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_100E251C0;
      *(void *)(v16 + 32) = v4;
      specialized Array._endMutation()();
      sub_100057778(0, &qword_1010D0FB0);
      id v17 = v4;
      v8.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v2 setContentEffects:v8.super.isa];

      goto LABEL_12;
    }
LABEL_8:
    id v12 = v5;
    id v13 = [v2 backgroundEffects];
    sub_100057778(0, &qword_1010D0FB0);
    uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v23 = v14;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    Class v15 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v2 setBackgroundEffects:v15];

    if (!v4) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_6:
  sub_100057778(0, &qword_1010D0FB0);
  v8.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v2 setContentEffects:v8.super.isa];
LABEL_12:

  id v18 = [v2 contentView];
  id v19 = [v18 layer];

  [v19 setAllowsGroupBlending:0];
}

id sub_100C2AC20()
{
  return sub_100C2AC38((uint64_t (*)(void))type metadata accessor for SymbolButton.MaterialView);
}

id sub_100C2AC38(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return [super dealloc];
}

id sub_100C2AC78(void *a1, double a2, uint64_t a3, uint64_t a4)
{
  NSArray v8 = &v4[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  *(void *)NSArray v8 = 0;
  *((void *)v8 + 1) = 0x3FF0000000000000;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for SymbolButton.BackgroundView();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v10 = [v9 layer];
  if (a4) {
    NSString v11 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v11 = 0;
  }
  [v10 setCompositingFilter:v11];
  swift_unknownObjectRelease();

  id v12 = a1;
  sub_100C2AE6C(a1, a2);
  sub_100C2AF60();

  swift_bridgeObjectRelease();
  return v9;
}

void sub_100C2AE6C(void *a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v3
     + OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration;
  Class v7 = *(void **)(v3
                + OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration);
  double v8 = *(double *)(v3
                 + OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration
                 + 8);
  *(void *)uint64_t v6 = a1;
  *(double *)(v6 + 8) = a2;
  id v13 = v7;
  if (a1)
  {
    if (!v7) {
      goto LABEL_8;
    }
    sub_100057778(0, (unint64_t *)&qword_1010D0F70);
    id v9 = v13;
    id v10 = a1;
    char v11 = static NSObject.== infix(_:_:)();

    if ((v11 & 1) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    if (v8 == a2) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (!v7) {
    goto LABEL_7;
  }
  id v12 = v7;
LABEL_8:
  sub_100C2AF60();
LABEL_9:
}

void sub_100C2AF60()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  if (v2) {
    id v3 = *(id *)&v0[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A9314BackgroundView_configuration];
  }
  else {
    id v3 = [self tintColor];
  }
  uint64_t v4 = *((void *)v1 + 1);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  id v6 = objc_allocWithZone((Class)UIColor);
  v11[4] = sub_100C35B1C;
  v11[5] = v5;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10004DA48;
  v11[3] = &unk_101013688;
  Class v7 = _Block_copy(v11);
  id v8 = v2;
  id v9 = v3;
  id v10 = [v6 initWithDynamicProvider:v7];
  _Block_release(v7);
  swift_release();
  [v0 setBackgroundColor:v10];
}

id sub_100C2B0C0(uint64_t a1, id a2, double a3)
{
  id v4 = [a2 resolvedColorWithTraitCollection:a1];
  [v4 alphaComponent];
  id v6 = [v4 colorWithAlphaComponent:v5 * a3];

  return v6;
}

id sub_100C2B150()
{
  return sub_100C2AC38((uint64_t (*)(void))type metadata accessor for SymbolButton.BackgroundView);
}

id sub_100C2B1D4(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = sub_100C215B0();
  [v2 setImage:v4];

  id v5 = [v2 layer];
  sub_10003CABC(a1 + 88, (uint64_t)v9, &qword_1010D0B40);
  sub_10003CABC((uint64_t)v9, (uint64_t)v10, &qword_1010D0B40);
  if (v10[1]) {
    NSString v6 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v6 = 0;
  }
  [v5 setCompositingFilter:v6];

  swift_unknownObjectRelease();
  id v7 = [v2 layer];
  [v7 setAllowsGroupOpacity:0];

  [v2 setTintColor:*(void *)(a1 + 112)];
  return [v2 setAlpha:*(double *)(a1 + 104)];
}

void sub_100C2B320(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_100C2B3B4()
{
  return sub_100C2AC38((uint64_t (*)(void))type metadata accessor for SymbolButton.ImageView);
}

id sub_100C2B3CC(uint64_t a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for SymbolButton.Label();
  id v3 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v3 setLineBreakMode:5];
  [v3 setNumberOfLines:1];
  id v4 = self;
  id v5 = v3;
  id v6 = [v4 clearColor];
  [v5 setBackgroundColor:v6];

  [v5 setAdjustsFontForContentSizeCategory:0];
  [v5 setClipsToBounds:0];
  [v5 _setTextColorFollowsTintColor:1];
  sub_100C2B554(a1);
  sub_100C35C9C(a1);

  return v5;
}

id sub_100C2B554(uint64_t a1)
{
  sub_10003CABC(a1, (uint64_t)v10, &qword_1010D0B40);
  sub_10003CABC((uint64_t)v10, (uint64_t)v11, &qword_1010D0B40);
  if (v11[1]) {
    NSString v3 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v3 = 0;
  }
  [v1 setText:v3];

  id v4 = [v1 layer];
  sub_10003CABC(a1 + 32, (uint64_t)v9, &qword_1010D0B40);
  sub_10003CABC((uint64_t)v9, (uint64_t)v12, &qword_1010D0B40);
  if (v12[1]) {
    NSString v5 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v5 = 0;
  }
  [v4 setCompositingFilter:v5];

  swift_unknownObjectRelease();
  id v6 = [v1 layer];
  [v6 setAllowsGroupOpacity:0];

  [v1 setTintColor:*(void *)(a1 + 56)];
  double v7 = 0.0;
  if ((*(unsigned char *)(a1 + 64) & 1) == 0) {
    double v7 = *(double *)(a1 + 48);
  }
  return [v1 setAlpha:v7];
}

id sub_100C2B6D4()
{
  return sub_100C2AC38((uint64_t (*)(void))type metadata accessor for SymbolButton.Label);
}

char *sub_100C2B6EC(void *a1, double a2, double a3)
{
  uint64_t v7 = OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView;
  id v8 = objc_allocWithZone((Class)UIView);
  id v9 = v3;
  id v10 = [v8 init];
  char v11 = self;
  id v12 = [v11 blackColor];
  [v10 setBackgroundColor:v12];

  id v13 = [v10 layer];
  [v13 setCompositingFilter:kCAFilterDestOut];

  *(void *)&v3[v7] = v10;
  objc_super v14 = (double *)&v9[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_configuration];
  *objc_super v14 = a2;
  v14[1] = a3;
  *((void *)v14 + 2) = a1;
  id v15 = a1;

  v20.receiver = v9;
  v20.super_class = (Class)type metadata accessor for SymbolButton.BadgeView();
  uint64_t v16 = (char *)[v20 initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v17 = v15;
  if (!a1) {
    id v17 = [v11 tintColor];
  }
  id v18 = v15;
  [v16 setBackgroundColor:v17];

  [v16 setAlpha:a3];
  [*(id *)&v16[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView] setAlpha:a3];
  sub_100C2BC10();

  return v16;
}

void sub_100C2BC10()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v1 bounds];
  uint64_t v5 = OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_configuration;
  UIEdgeInsets.init(edges:inset:)();
  CGSize.inset(by:)();
  double v7 = v6;
  double v9 = v8;
  [v1 frame];
  double v11 = v10 - *(double *)&v1[v5];
  [v1 frame];
  double v13 = v12 - *(double *)&v1[v5];
  objc_super v14 = *(void **)&v1[OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView];
  [v14 setFrame:v11, v13, v7, v9];
  static UIView.Corner.rounded.getter();
  uint64_t v15 = type metadata accessor for UIView.Corner();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 0, 1, v15);
  UIView.corner.setter();
  id v16 = [v1 superview];
  [v16 insertSubview:v14 belowSubview:v1];
}

id sub_100C2BDC4()
{
  return sub_100C2AC38((uint64_t (*)(void))type metadata accessor for SymbolButton.BadgeView);
}

double sub_100C2BE2C()
{
  uint64_t v0 = sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for SymbolButton.Configuration(0);
  sub_100014CA4(v3, static SymbolButton.Configuration.contextualAction);
  uint64_t v4 = sub_100050A90(v3, (uint64_t)static SymbolButton.Configuration.contextualAction);
  SymbolButton.Configuration.init()(v4);
  uint64_t v5 = self;
  double v6 = UIFontTextStyleSubheadline;
  id v7 = [v5 currentTraitCollection];
  id v8 = [v7 userInterfaceIdiom];

  double v9 = &UIFontTextStyleTitle3;
  if (v8 != (id)6) {
    double v9 = &UIFontTextStyleCallout;
  }
  UIFontTextStyle v10 = *v9;
  if (v8 == (id)6) {
    uint64_t v11 = 5;
  }
  else {
    uint64_t v11 = 6;
  }
  double v12 = v10;

  double v13 = *(void **)(v4 + 16);
  objc_super v14 = *(void **)(v4 + 24);
  uint64_t v15 = *(void **)(v4 + 112);
  *(_OWORD *)uint64_t v4 = xmmword_100E526F0;
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = v12;
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 40) = 1;
  *(void *)(v4 + 48) = v11;
  *(void *)(v4 + 56) = 2;
  *(void *)(v4 + 64) = 0;
  *(void *)(v4 + 72) = 0;
  *(unsigned char *)(v4 + 80) = -1;
  *(void *)(v4 + 88) = 0;
  *(void *)(v4 + 96) = 0;
  *(void *)(v4 + 104) = 0x3FF0000000000000;
  *(void *)(v4 + 112) = 0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  static UIView.Corner.rounded.getter();
  uint64_t v16 = type metadata accessor for UIView.Corner();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v2, 0, 1, v16);
  sub_10002D09C((uint64_t)v2, v4 + *(int *)(v3 + 36), &qword_1010D0AB0);
  if (qword_1010C8818 != -1) {
    swift_once();
  }
  double result = *(double *)&static SymbolButton.Configuration.platterMinimumSize;
  *(_OWORD *)(v4 + *(int *)(v3 + 52)) = static SymbolButton.Configuration.platterMinimumSize;
  return result;
}

uint64_t SymbolButton.Configuration.contextualAction.unsafeMutableAddressor()
{
  return sub_100C2C0AC(&qword_1010C8808, type metadata accessor for SymbolButton.Configuration, (uint64_t)static SymbolButton.Configuration.contextualAction);
}

uint64_t sub_100C2C0AC(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);

  return sub_100050A90(v5, a3);
}

uint64_t static SymbolButton.Configuration.contextualAction.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C2C3F8(&qword_1010C8808, (uint64_t)static SymbolButton.Configuration.contextualAction, a1);
}

uint64_t sub_100C2C12C()
{
  uint64_t v0 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014CA4(v1, static SymbolButton.Configuration.barButtonContextualAction);
  uint64_t v4 = sub_100050A90(v0, (uint64_t)static SymbolButton.Configuration.barButtonContextualAction);
  if (qword_1010C8808 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100050A90(v0, (uint64_t)static SymbolButton.Configuration.contextualAction);
  sub_100C35BE4(v5, (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  if (qword_1010C87F0 != -1) {
    swift_once();
  }
  char v6 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  id v7 = (void *)qword_10112CF78;
  id v8 = (void *)unk_10112CF80;
  char v9 = byte_10112CF88;
  sub_100C35BE4((uint64_t)v3, v4, type metadata accessor for SymbolButton.Configuration);
  uint64_t v10 = v4 + *(int *)(v0 + 64);
  uint64_t v11 = *(void **)(v10 + 8);
  double v12 = *(void **)(v10 + 16);
  id v13 = v7;
  id v14 = v8;

  *(unsigned char *)uint64_t v10 = v6;
  *(void *)(v10 + 8) = v7;
  *(void *)(v10 + 16) = v8;
  *(unsigned char *)(v10 + 24) = v9;
  return sub_100C2DA84((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
}

void SymbolButton.Configuration.forBarButtonItem()(uint64_t a1@<X8>)
{
  if (qword_1010C87F0 != -1) {
    swift_once();
  }
  char v3 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  uint64_t v4 = (void *)qword_10112CF78;
  uint64_t v5 = (void *)unk_10112CF80;
  char v6 = byte_10112CF88;
  sub_100C35BE4(v1, a1, type metadata accessor for SymbolButton.Configuration);
  uint64_t v7 = a1 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64);
  id v8 = *(void **)(v7 + 8);
  char v9 = *(void **)(v7 + 16);
  id v10 = v4;
  id v11 = v5;

  *(unsigned char *)uint64_t v7 = v3;
  *(void *)(v7 + 8) = v4;
  *(void *)(v7 + 16) = v5;
  *(unsigned char *)(v7 + 24) = v6;
}

uint64_t SymbolButton.Configuration.barButtonContextualAction.unsafeMutableAddressor()
{
  return sub_100C2C0AC(&qword_1010C8810, type metadata accessor for SymbolButton.Configuration, (uint64_t)static SymbolButton.Configuration.barButtonContextualAction);
}

uint64_t static SymbolButton.Configuration.barButtonContextualAction.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100C2C3F8(&qword_1010C8810, (uint64_t)static SymbolButton.Configuration.barButtonContextualAction, a1);
}

uint64_t sub_100C2C3F8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v6 = sub_100050A90(v5, a2);
  return sub_100C35BE4(v6, a3, type metadata accessor for SymbolButton.Configuration);
}

__n128 sub_100C2C460()
{
  __asm { FMOV            V0.2D, #28.0 }
  static SymbolButton.Configuration.platterMinimumSize = (__int128)result;
  return result;
}

uint64_t type metadata accessor for SymbolButton.Configuration(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010D0C10);
}

double static SymbolButton.Configuration.platterMinimumSize.getter()
{
  return sub_100AD8FAC(&qword_1010C8818, (uint64_t)&static SymbolButton.Configuration.platterMinimumSize);
}

int64x2_t sub_100C2C4B8()
{
  int64x2_t result = vdupq_n_s64(0x4040000000000000uLL);
  static SymbolButton.Configuration.hitRectMinimumSize = (__int128)result;
  return result;
}

double static SymbolButton.Configuration.hitRectMinimumSize.getter()
{
  return sub_100AD8FAC(&qword_1010C8820, (uint64_t)&static SymbolButton.Configuration.hitRectMinimumSize);
}

__n128 SymbolButton.Configuration.adding(_:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 v16 = *(__n128 *)a1;
  uint64_t v5 = a1 + 16;
  uint64_t v6 = a1 + 8;
  unint64_t v14 = *(unsigned __int8 *)(a1 + 24);
  unint64_t v15 = *(void *)(a1 + 16);
  uint64_t v7 = a1 + 32;
  unint64_t v12 = *(void *)(a1 + 40);
  unint64_t v13 = *(void *)(a1 + 32);
  sub_100C35BE4(v2, (uint64_t)a2, type metadata accessor for SymbolButton.Configuration);
  id v8 = (void *)a2[14].n128_u64[1];
  char v9 = (void *)a2[15].n128_u64[0];
  id v11 = (void *)a2[14].n128_u64[0];
  sub_10003CABC(a1, (uint64_t)&v20, &qword_1010D0B38);
  sub_10003CABC(v6, (uint64_t)&v19, &qword_1010D0B38);
  sub_10003CABC(v5, (uint64_t)&v18, &qword_1010D0B38);
  sub_10003CABC(v7, (uint64_t)v17, &qword_1010D0B40);
  sub_10003CB4C(&v20);
  sub_10003CB4C(&v19);
  sub_10003CB4C(&v18);
  sub_1000D230C((uint64_t)v17);
  sub_1002618F0(v11, v8, v9);
  __n128 result = v16;
  a2[14] = v16;
  a2[15].n128_u64[0] = v15;
  a2[15].n128_u64[1] = v14;
  a2[16].n128_u64[0] = v13;
  a2[16].n128_u64[1] = v12;
  return result;
}

double SymbolButton.Configuration.removingMaterial()@<D0>(uint64_t a1@<X8>)
{
  sub_100C35BE4(v1, a1, type metadata accessor for SymbolButton.Configuration);
  sub_1002618F0(*(void **)(a1 + 224), *(void **)(a1 + 232), *(void **)(a1 + 240));
  *(void *)(a1 + 224) = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 264) = 0;
  return result;
}

uint64_t SymbolButton.Configuration.adding(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double *a4@<X8>, double a5@<D0>)
{
  sub_100C35BE4(v5, (uint64_t)a4, type metadata accessor for SymbolButton.Configuration);
  uint64_t v11 = *((void *)a4 + 24);
  unint64_t v12 = (void *)*((void *)a4 + 25);
  swift_bridgeObjectRetain();
  id v13 = a1;
  uint64_t result = sub_1001773EC(v11, v12);
  a4[24] = a5;
  *((void *)a4 + 25) = a1;
  *((void *)a4 + 26) = a2;
  *((void *)a4 + 27) = a3;
  return result;
}

double SymbolButton.Configuration.removingBackground()@<D0>(uint64_t a1@<X8>)
{
  sub_100C35BE4(v1, a1, type metadata accessor for SymbolButton.Configuration);
  sub_1001773EC(*(void *)(a1 + 192), *(void **)(a1 + 200));
  double result = 0.0;
  *(_OWORD *)(a1 + 192) = xmmword_100E26B10;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  return result;
}

void SymbolButton.Configuration.withAccessibility(_:)(char a1@<W0>, void *a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  sub_100C35BE4(v5, a5, type metadata accessor for SymbolButton.Configuration);
  uint64_t v11 = a5 + *(int *)(type metadata accessor for SymbolButton.Configuration(0) + 64);
  unint64_t v12 = *(void **)(v11 + 8);
  id v13 = *(void **)(v11 + 16);
  id v14 = a2;
  id v15 = a3;

  *(unsigned char *)uint64_t v11 = a1;
  *(void *)(v11 + 8) = a2;
  *(void *)(v11 + 16) = a3;
  *(unsigned char *)(v11 + 24) = a4;
}

uint64_t *SymbolButton.Background.tertiary.unsafeMutableAddressor()
{
  if (qword_1010C8830 != -1) {
    swift_once();
  }
  return &static SymbolButton.Background.tertiary;
}

uint64_t SymbolButton.Configuration.forUberNavigationBar(withMaterial:background:groupName:)@<X0>(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  uint64_t v9 = v8;
  uint64_t v49 = a5;
  uint64_t v50 = a6;
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  id v46 = a2;
  LODWORD(v53) = a1;
  uint64_t v12 = type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v54 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v45 - v16;
  __chkstk_darwin(v15);
  id v19 = (char *)&v45 - v18;
  uint64_t v20 = sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010C87F0 != -1) {
    swift_once();
  }
  int v51 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  uint64_t v23 = (void *)qword_10112CF78;
  uint64_t v24 = (void *)unk_10112CF80;
  char v25 = byte_10112CF88;
  sub_100C35BE4(v9, a7, type metadata accessor for SymbolButton.Configuration);
  uint64_t v26 = a7 + *(int *)(v12 + 64);
  uint64_t v52 = (int *)v12;
  uint64_t v28 = *(void **)(v26 + 8);
  uint64_t v27 = *(void **)(v26 + 16);
  id v29 = v23;
  id v30 = v24;

  *(unsigned char *)uint64_t v26 = v51;
  *(void *)(v26 + 8) = v23;
  *(void *)(v26 + 16) = v24;
  *(unsigned char *)(v26 + 24) = v25;
  static UIView.Corner.rounded.getter();
  uint64_t v31 = type metadata accessor for UIView.Corner();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v22, 0, 1, v31);
  sub_10002D09C((uint64_t)v22, a7 + v52[9], &qword_1010D0AB0);

  *(void *)(a7 + 272) = 0;
  *(void *)(a7 + 280) = 0;
  *(void *)(a7 + 288) = 0;
  if (v53)
  {
    uint64_t v32 = v54;
    long long v53 = type metadata accessor for SymbolButton.Configuration;
    sub_100C35BE4(a7, v54, type metadata accessor for SymbolButton.Configuration);
    uint64_t v52 = (int *)[self effectWithStyle:16];
    sub_100C35BE4(v32, (uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
    id v33 = (void *)*((void *)v17 + 28);
    uint64_t v34 = (void *)*((void *)v17 + 29);
    uint64_t v35 = (void *)*((void *)v17 + 30);
    uint64_t v36 = v50;
    swift_bridgeObjectRetain();
    sub_1002618F0(v33, v34, v35);
    *((void *)v17 + 28) = v52;
    *((void *)v17 + 29) = 0;
    *((void *)v17 + 30) = 0;
    *((void *)v17 + 31) = 2;
    *((void *)v17 + 32) = v49;
    *((void *)v17 + 33) = v36;
    long long v37 = v53;
    sub_100C2DA84(v54, v53);
    sub_100C35BE4((uint64_t)v17, (uint64_t)v19, v37);
    sub_1001773EC(*((void *)v19 + 24), *((void **)v19 + 25));
    *((_OWORD *)v19 + 12) = xmmword_100E26B10;
    *((void *)v19 + 26) = 0;
    *((void *)v19 + 27) = 0;
  }
  else
  {
    sub_100C35BE4(a7, (uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
    sub_1002618F0(*((void **)v17 + 28), *((void **)v17 + 29), *((void **)v17 + 30));
    *((void *)v17 + 28) = 1;
    *(_OWORD *)(v17 + 232) = 0u;
    *(_OWORD *)(v17 + 248) = 0u;
    *((void *)v17 + 33) = 0;
    sub_100C35BE4((uint64_t)v17, (uint64_t)v19, type metadata accessor for SymbolButton.Configuration);
    uint64_t v38 = *((void *)v19 + 24);
    id v39 = (void *)*((void *)v19 + 25);
    uint64_t v40 = v48;
    swift_bridgeObjectRetain();
    id v41 = v46;
    id v42 = v46;
    sub_1001773EC(v38, v39);
    *((double *)v19 + 24) = a8;
    uint64_t v43 = v47;
    *((void *)v19 + 25) = v41;
    *((void *)v19 + 26) = v43;
    *((void *)v19 + 27) = v40;
  }
  sub_100C2DA84((uint64_t)v17, type metadata accessor for SymbolButton.Configuration);
  return sub_1004B7DF8((uint64_t)v19, a7);
}

uint64_t SymbolButton.Configuration.forPromotionalParallaxNavigationBar(withMaterial:background:backgroundAlpha:groupName:)@<X0>(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v40 = a7;
  uint64_t v41 = a8;
  int v48 = a6;
  uint64_t v43 = a5;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  id v42 = a2;
  LODWORD(v47) = a1;
  uint64_t v11 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v39 = (uint64_t)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v39 - v13;
  sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin();
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1010C87F0 != -1) {
    swift_once();
  }
  char v17 = static SymbolButton.Configuration.Accessibility.forBarButtonItem;
  uint64_t v18 = (void *)qword_10112CF78;
  id v19 = (void *)unk_10112CF80;
  char v20 = byte_10112CF88;
  sub_100C35BE4(v9, a9, type metadata accessor for SymbolButton.Configuration);
  uint64_t v21 = a9 + *(int *)(v11 + 64);
  id v46 = (int *)v11;
  uint64_t v22 = *(void **)(v21 + 8);
  uint64_t v23 = *(void **)(v21 + 16);
  id v24 = v18;
  id v25 = v19;

  *(unsigned char *)uint64_t v21 = v17;
  *(void *)(v21 + 8) = v18;
  *(void *)(v21 + 16) = v19;
  *(unsigned char *)(v21 + 24) = v20;
  static UIView.Corner.rounded.getter();
  uint64_t v26 = type metadata accessor for UIView.Corner();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v16, 0, 1, v26);
  sub_10002D09C((uint64_t)v16, a9 + v46[9], &qword_1010D0AB0);

  *(void *)(a9 + 272) = 0;
  *(void *)(a9 + 280) = 0;
  *(void *)(a9 + 288) = 0;
  if (v47)
  {
    uint64_t v27 = v39;
    uint64_t v47 = type metadata accessor for SymbolButton.Configuration;
    sub_100C35BE4(a9, v39, type metadata accessor for SymbolButton.Configuration);
    id v46 = (int *)[self effectWithStyle:16];
    sub_100C35BE4(v27, (uint64_t)v14, type metadata accessor for SymbolButton.Configuration);
    uint64_t v28 = (void *)*((void *)v14 + 28);
    id v29 = (void *)*((void *)v14 + 29);
    id v30 = (void *)*((void *)v14 + 30);
    uint64_t v31 = v41;
    swift_bridgeObjectRetain();
    sub_1002618F0(v28, v29, v30);
    uint64_t v32 = v47;
    *((void *)v14 + 28) = v46;
    *((void *)v14 + 29) = 0;
    *((void *)v14 + 30) = 0;
    *((void *)v14 + 31) = 2;
    *((void *)v14 + 32) = v40;
    *((void *)v14 + 33) = v31;
    sub_100C2DA84(v27, v32);
  }
  else
  {
    sub_100C35BE4(a9, (uint64_t)v14, type metadata accessor for SymbolButton.Configuration);
    sub_1002618F0(*((void **)v14 + 28), *((void **)v14 + 29), *((void **)v14 + 30));
    *((void *)v14 + 28) = 1;
    *(_OWORD *)(v14 + 232) = 0u;
    *(_OWORD *)(v14 + 248) = 0u;
    *((void *)v14 + 33) = 0;
  }
  sub_1004B7DF8((uint64_t)v14, a9);
  sub_100C35BE4(a9, (uint64_t)v14, type metadata accessor for SymbolButton.Configuration);
  uint64_t v33 = *((void *)v14 + 24);
  uint64_t v34 = (void *)*((void *)v14 + 25);
  if (v48)
  {
    sub_1001773EC(*((void *)v14 + 24), *((void **)v14 + 25));
    *((_OWORD *)v14 + 12) = xmmword_100E26B10;
    *((void *)v14 + 26) = 0;
    *((void *)v14 + 27) = 0;
  }
  else
  {
    uint64_t v35 = v45;
    swift_bridgeObjectRetain();
    id v36 = v42;
    id v37 = v42;
    sub_1001773EC(v33, v34);
    *((void *)v14 + 24) = v43;
    *((void *)v14 + 25) = v36;
    *((void *)v14 + 26) = v44;
    *((void *)v14 + 27) = v35;
  }
  return sub_1004B7DF8((uint64_t)v14, a9);
}

void *SymbolButton.Background.withAlpha(_:)(void *a1)
{
  id v2 = a1;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t SymbolButton.Configuration.withAlpha(_:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  sub_100C35BE4(v2, a1, type metadata accessor for SymbolButton.Configuration);
  uint64_t result = type metadata accessor for SymbolButton.Configuration(0);
  *(double *)(a1 + *(int *)(result + 68)) = a2;
  return result;
}

void *static SymbolButton.Background.tint(_:)(void *a1)
{
  id v2 = a1;
  return a1;
}

id sub_100C2D154()
{
  id result = [self secondarySystemFillColor];
  static SymbolButton.Background.secondarCGFloat y = 0x3FF0000000000000;
  qword_10112D008 = (uint64_t)result;
  qword_10112D010 = 0;
  qword_10112D018 = 0;
  return result;
}

uint64_t *SymbolButton.Background.secondary.unsafeMutableAddressor()
{
  if (qword_1010C8828 != -1) {
    swift_once();
  }
  return &static SymbolButton.Background.secondary;
}

uint64_t static SymbolButton.Background.secondary.getter()
{
  if (qword_1010C8828 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10112D008;
  id v1 = (id)qword_10112D008;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_100C2D274()
{
  id result = [self tertiarySystemFillColor];
  static SymbolButton.Background.tertiarCGFloat y = 0x3FF0000000000000;
  qword_10112D028 = (uint64_t)result;
  qword_10112D030 = 0;
  qword_10112D038 = 0;
  return result;
}

uint64_t static SymbolButton.Background.tertiary.getter()
{
  if (qword_1010C8830 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10112D028;
  id v1 = (id)qword_10112D028;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_100C2D348()
{
  if (qword_1010C8830 != -1) {
    swift_once();
  }
  static SymbolButton.Background.normal = static SymbolButton.Background.tertiary;
  *(_OWORD *)&qword_10112D048 = *(_OWORD *)&qword_10112D028;
  qword_10112D058 = qword_10112D038;
  id v1 = (id)qword_10112D028;
  swift_bridgeObjectRetain();

  return v1;
}

uint64_t static SymbolButton.Background.normal.getter()
{
  if (qword_1010C8838 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10112D048;
  id v1 = (id)qword_10112D048;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_100C2D468()
{
  if (qword_1010C8828 != -1) {
    swift_once();
  }
  static SymbolButton.Background.highlighteCGFloat d = static SymbolButton.Background.secondary;
  *(_OWORD *)&qword_10112D068 = *(_OWORD *)&qword_10112D008;
  qword_10112D078 = qword_10112D018;
  id v1 = (id)qword_10112D008;
  swift_bridgeObjectRetain();

  return v1;
}

uint64_t static SymbolButton.Background.highlighted.getter()
{
  if (qword_1010C8840 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10112D068;
  id v1 = (id)qword_10112D068;
  swift_bridgeObjectRetain();
  return v0;
}

id sub_100C2D588()
{
  id result = [self effectWithStyle:7];
  qword_10112D088 = 0;
  qword_10112D090 = 0;
  static SymbolButton.Material.xr = (uint64_t)result;
  byte_10112D098 = 2;
  qword_10112D0A0 = 0;
  unk_10112D0A8 = 0;
  return result;
}

uint64_t static SymbolButton.Material.xr.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1010C8848 != -1) {
    swift_once();
  }
  id v2 = (void *)static SymbolButton.Material.xr;
  char v3 = (void *)qword_10112D088;
  uint64_t v4 = (void *)qword_10112D090;
  char v5 = byte_10112D098;
  uint64_t v6 = qword_10112D0A0;
  uint64_t v7 = unk_10112D0A8;
  *(void *)a1 = static SymbolButton.Material.xr;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  id v8 = v2;
  id v9 = v3;
  id v10 = v4;

  return swift_bridgeObjectRetain();
}

uint64_t sub_100C2D67C()
{
  uint64_t v0 = type metadata accessor for UIView.Corner();
  sub_100014CA4(v0, static UIView.Corner.capsule);
  sub_100050A90(v0, (uint64_t)static UIView.Corner.capsule);
  return static UIView.Corner.rounded.getter();
}

uint64_t UIView.Corner.capsule.unsafeMutableAddressor()
{
  return sub_100C2C0AC(&qword_1010C8850, (uint64_t (*)(void))&type metadata accessor for UIView.Corner, (uint64_t)static UIView.Corner.capsule);
}

uint64_t static UIView.Corner.capsule.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100AF314C(&qword_1010C8850, (uint64_t)static UIView.Corner.capsule, a1);
}

uint64_t sub_100C2D724()
{
  uint64_t v0 = type metadata accessor for UIView.Corner();
  sub_100014CA4(v0, static UIView.Corner.roundedRect);
  sub_100050A90(v0, (uint64_t)static UIView.Corner.roundedRect);
  return static UIView.Corner.value(_:continuous:)();
}

uint64_t static UIView.Corner.roundedRect.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100AF314C(&qword_1010C8858, (uint64_t)static UIView.Corner.roundedRect, a1);
}

id SymbolButton.withProvider(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010D00F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)&v12[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  swift_beginAccess();
  uint64_t v8 = *v7;
  uint64_t *v7 = a1;
  v7[1] = a2;
  swift_retain_n();
  sub_10006ADFC(v8);
  uint64_t v9 = type metadata accessor for SymbolButton.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  SymbolButton.updateConfigurationIfNeeded(_:animation:)((uint64_t)v6, 0, 0, 0, 1);
  sub_1000637B8((uint64_t)v6, &qword_1010D00F0);
  swift_release();
  id v10 = v12;

  return v10;
}

id SymbolButton.withConfiguration(_:)(uint64_t a1)
{
  type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  char v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100C35BE4(a1, (uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  SymbolButton.setConfiguration(_:animation:updates:)((uint64_t)v3, 0, 0, 0, 1, (uint64_t)_swiftEmptyArrayStorage);
  sub_100C2DA84((uint64_t)v3, type metadata accessor for SymbolButton.Configuration);
  uint64_t v4 = (void *)v6[1];

  return v4;
}

uint64_t type metadata accessor for SymbolButton.Metrics(uint64_t a1)
{
  return sub_10006CD50(a1, qword_1010D0E20);
}

uint64_t type metadata accessor for SymbolButton.MaterialView()
{
  return self;
}

uint64_t type metadata accessor for SymbolButton.BackgroundView()
{
  return self;
}

uint64_t type metadata accessor for SymbolButton(uint64_t a1)
{
  return sub_10006CD50(a1, (uint64_t *)&unk_1010D0BA0);
}

uint64_t type metadata accessor for SymbolButton.Label()
{
  return self;
}

uint64_t sub_100C2DA84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100C2DAE4()
{
  return swift_deallocObject();
}

void sub_100C2DAF4(void *a1)
{
}

id sub_100C2DAFC(uint64_t a1)
{
  id v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_100057778(0, &qword_1010C9728);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();

  return v3;
}

BOOL _s11MusicCoreUI12SymbolButtonC0D0V23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
  if (v6 || (v7 = _stringCompareWithSmolCheck(_:_:expecting:)(), BOOL result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    uint64_t v9 = *(void **)(a1 + 16);
    id v10 = *(void **)(a2 + 16);
    if (v9)
    {
      if (!v10) {
        return 0;
      }
      sub_100057778(0, &qword_1010D0FD0);
      id v11 = v10;
      id v12 = v9;
      char v13 = static NSObject.== infix(_:_:)();

      if ((v13 & 1) == 0) {
        return 0;
      }
    }
    else if (v10)
    {
      return 0;
    }
    uint64_t v14 = *(void **)(a1 + 24);
    id v38 = *(id *)(a2 + 24);
    id v39 = v14;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;
    if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18)
    {
      sub_10003CB4C(&v39);
      sub_10003CB4C(&v38);
      swift_bridgeObjectRelease_n();
      sub_10003CB20(&v38);
      sub_10003CB20(&v39);
    }
    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_10003CB4C(&v39);
      sub_10003CB4C(&v38);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10003CB20(&v38);
      sub_10003CB20(&v39);
      BOOL result = 0;
      if ((v19 & 1) == 0) {
        return result;
      }
    }
    char v20 = *(unsigned char *)(a2 + 40);
    if (*(unsigned char *)(a1 + 40))
    {
      if (!*(unsigned char *)(a2 + 40)) {
        return 0;
      }
    }
    else
    {
      if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
        char v20 = 1;
      }
      if (v20) {
        return 0;
      }
    }
    if (*(void *)(a1 + 48) != *(void *)(a2 + 48) || *(void *)(a1 + 56) != *(void *)(a2 + 56)) {
      return 0;
    }
    sub_10003CABC(a1 + 64, (uint64_t)v37, &qword_1010D0FB8);
    uint64_t v21 = *(void *)(a2 + 64);
    uint64_t v22 = *(void *)(a2 + 72);
    int v23 = *(unsigned __int8 *)(a2 + 80);
    sub_10003CABC((uint64_t)v37, (uint64_t)v40, &qword_1010D0FB8);
    if (v40[16] == 255)
    {
      if (v23 != 255) {
        return 0;
      }
    }
    else
    {
      sub_10003CABC((uint64_t)v40, (uint64_t)v41, &qword_1010D0FC0);
      sub_10003CABC((uint64_t)v37, (uint64_t)v36, &qword_1010D0FB8);
      if (v23 == 255) {
        return 0;
      }
      v34[0] = v21;
      v34[1] = v22;
      char v35 = v23 & 1;
      type metadata accessor for UIOffset(0);
      uint64_t v25 = v24;
      sub_100C35DAC(&qword_1010D0FC8, type metadata accessor for UIOffset);
      if ((static DisplayUnit.__derived_enum_equals(_:_:)((uint64_t)v36, (uint64_t)v34, v25) & 1) == 0) {
        return 0;
      }
    }
    uint64_t v26 = *(void *)(a1 + 96);
    uint64_t v27 = *(void *)(a2 + 96);
    if (v26)
    {
      if (!v27) {
        return 0;
      }
      if (*(void *)(a1 + 88) != *(void *)(a2 + 88) || v26 != v27)
      {
        char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL result = 0;
        if ((v28 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v27)
    {
      return 0;
    }
    if (*(double *)(a1 + 104) == *(double *)(a2 + 104))
    {
      id v29 = *(void **)(a1 + 112);
      id v30 = *(void **)(a2 + 112);
      if (v29)
      {
        if (!v30) {
          return 0;
        }
        sub_100057778(0, (unint64_t *)&qword_1010D0F70);
        id v31 = v30;
        id v32 = v29;
        char v33 = static NSObject.== infix(_:_:)();

        return (v33 & 1) != 0;
      }
      if (!v30) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

BOOL _s11MusicCoreUI12SymbolButtonC10BackgroundV23__derived_struct_equalsySbAE_AEtFZ_0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  if (a7 != a8) {
    return 0;
  }
  if (a1)
  {
    if (!a4) {
      return 0;
    }
    sub_100057778(0, (unint64_t *)&qword_1010D0F70);
    id v14 = a4;
    id v15 = a1;
    char v16 = static NSObject.== infix(_:_:)();

    if ((v16 & 1) == 0) {
      return 0;
    }
  }
  else if (a4)
  {
    return 0;
  }
  if (a3) {
    return a6 && (a2 == a5 && a3 == a6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0);
  }
  return !a6;
}

uint64_t _s11MusicCoreUI12SymbolButtonC10CustomViewV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_100057778(0, (unint64_t *)&qword_1010CAA20);
  if ((static NSObject.== infix(_:_:)() & 1) != 0 && *(double *)(a1 + 8) == *(double *)(a2 + 8))
  {
    BOOL v4 = *(double *)(a1 + 16) == *(double *)(a2 + 16) && *(double *)(a1 + 24) == *(double *)(a2 + 24);
    BOOL v5 = v4 && *(double *)(a1 + 32) == *(double *)(a2 + 32);
    if (v5 && *(double *)(a1 + 40) == *(double *)(a2 + 40))
    {
      BOOL v6 = *(void **)(a1 + 48);
      char v7 = *(void **)(a2 + 48);
      if (v6)
      {
        if (v7)
        {
          sub_100057778(0, (unint64_t *)&qword_1010D0F70);
          id v8 = v7;
          id v9 = v6;
          char v10 = static NSObject.== infix(_:_:)();

          if (v10) {
            return 1;
          }
        }
      }
      else if (!v7)
      {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t _s11MusicCoreUI12SymbolButtonC13ConfigurationV13AccessibilityV23__derived_struct_equalsySbAG_AGtFZ_0(int a1, uint64_t a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a1 ^ a5)) {
    return 0;
  }
  if (a2)
  {
    if (!a6) {
      goto LABEL_17;
    }
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;
    if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v18 = 0;
      if ((v17 & 1) == 0) {
        return v18 & 1;
      }
    }
  }
  else if (a6)
  {
    goto LABEL_17;
  }
  if (!a3)
  {
    if (!a7) {
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  if (!a7)
  {
LABEL_17:
    char v18 = 0;
    return v18 & 1;
  }
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;
  if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22)
  {
    swift_bridgeObjectRelease_n();
LABEL_19:
    char v18 = a4 ^ a8 ^ 1;
    return v18 & 1;
  }
  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v18 = 0;
  if (v23) {
    goto LABEL_19;
  }
  return v18 & 1;
}

uint64_t _s11MusicCoreUI12SymbolButtonC5TitleV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v4)
  {
    if (v5) {
      goto LABEL_31;
    }
    goto LABEL_10;
  }
  if (!v5) {
    goto LABEL_31;
  }
  BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
  if (v6 || (v7 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v8 = 0, (v7 & 1) != 0))
  {
LABEL_10:
    id v9 = *(void **)(a1 + 16);
    id v25 = *(id *)(a2 + 16);
    id v26 = v9;
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;
    if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
    {
      sub_10003CB4C(&v26);
      sub_10003CB4C(&v25);
      swift_bridgeObjectRelease_n();
      sub_10003CB20(&v25);
      sub_10003CB20(&v26);
    }
    else
    {
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_10003CB4C(&v26);
      sub_10003CB4C(&v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10003CB20(&v25);
      sub_10003CB20(&v26);
      char v8 = 0;
      if ((v15 & 1) == 0) {
        return v8 & 1;
      }
    }
    if (*(double *)(a1 + 24) != *(double *)(a2 + 24)) {
      goto LABEL_31;
    }
    uint64_t v16 = *(void *)(a1 + 40);
    uint64_t v17 = *(void *)(a2 + 40);
    if (v16)
    {
      if (!v17) {
        goto LABEL_31;
      }
      if (*(void *)(a1 + 32) != *(void *)(a2 + 32) || v16 != v17)
      {
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v8 = 0;
        if ((v18 & 1) == 0) {
          return v8 & 1;
        }
      }
    }
    else if (v17)
    {
      goto LABEL_31;
    }
    if (*(double *)(a1 + 48) == *(double *)(a2 + 48))
    {
      uint64_t v19 = *(void **)(a1 + 56);
      uint64_t v20 = *(void **)(a2 + 56);
      if (v19)
      {
        if (v20)
        {
          sub_100057778(0, (unint64_t *)&qword_1010D0F70);
          id v21 = v20;
          id v22 = v19;
          char v23 = static NSObject.== infix(_:_:)();

          if (v23) {
            goto LABEL_29;
          }
        }
      }
      else if (!v20)
      {
LABEL_29:
        char v8 = ((*(unsigned char *)(a1 + 64) & 1) == 0) ^ *(unsigned char *)(a2 + 64);
        return v8 & 1;
      }
    }
LABEL_31:
    char v8 = 0;
  }
  return v8 & 1;
}

BOOL _s11MusicCoreUI12SymbolButtonC8MaterialV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1)
  {
    if (!v5) {
      return 0;
    }
    sub_100057778(0, &qword_1010D0FB0);
    id v6 = v5;
    id v7 = v4;
    char v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  id v9 = *(void **)(a1 + 8);
  uint64_t v10 = *(void **)(a2 + 8);
  if (v9)
  {
    if (!v10) {
      return 0;
    }
    sub_100057778(0, &qword_1010D0FB0);
    id v11 = v10;
    id v12 = v9;
    char v13 = static NSObject.== infix(_:_:)();

    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  uint64_t v14 = *(void **)(a1 + 16);
  char v15 = *(void **)(a2 + 16);
  if (v14)
  {
    if (!v15) {
      return 0;
    }
    sub_100057778(0, &qword_1010D0FB0);
    id v16 = v15;
    id v17 = v14;
    char v18 = static NSObject.== infix(_:_:)();

    if ((v18 & 1) == 0) {
      return 0;
    }
  }
  else if (v15)
  {
    return 0;
  }
  int v19 = *(unsigned __int8 *)(a1 + 24);
  int v20 = *(unsigned __int8 *)(a2 + 24);
  if (v19 == 2)
  {
    if (v20 != 2) {
      return 0;
    }
    goto LABEL_21;
  }
  BOOL result = 0;
  if (v20 != 2 && ((v20 ^ v19) & 1) == 0)
  {
LABEL_21:
    uint64_t v22 = *(void *)(a1 + 40);
    uint64_t v23 = *(void *)(a2 + 40);
    if (v22) {
      return v23
    }
          && (*(void *)(a1 + 32) == *(void *)(a2 + 32) && v22 == v23
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0);
    return !v23;
  }
  return result;
}

uint64_t _s11MusicCoreUI12SymbolButtonC5BadgeV23__derived_struct_equalsySbAE_AEtFZ_0(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  if (a3 != a5 || a4 != a6) {
    return 0;
  }
  if (a1)
  {
    if (a2)
    {
      sub_100057778(0, (unint64_t *)&qword_1010D0F70);
      id v10 = a2;
      id v11 = a1;
      char v12 = static NSObject.== infix(_:_:)();

      if (v12) {
        return 1;
      }
    }
  }
  else if (!a2)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_100C2E6C0(void **a1, void **a2)
{
  uint64_t v4 = type metadata accessor for UIView.Corner();
  uint64_t v51 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100063814(&qword_1010D0B20);
  __chkstk_darwin(v7);
  id v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100063814(&qword_1010D0AB0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  char v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  id v16 = (char *)&v48 - v15;
  __chkstk_darwin(v14);
  char v18 = (char *)&v48 - v17;
  uint64_t v49 = a1;
  uint64_t v50 = a2;
  int v19 = *a1;
  int v20 = *a2;
  if (*a1)
  {
    if (!v20) {
      goto LABEL_27;
    }
    sub_100057778(0, &qword_1010C9478);
    id v21 = v20;
    id v22 = v19;
    char v23 = static NSObject.== infix(_:_:)();

    if ((v23 & 1) == 0) {
      goto LABEL_27;
    }
  }
  else if (v20)
  {
    goto LABEL_27;
  }
  uint64_t v24 = type metadata accessor for SymbolButton.Metrics(0);
  sub_10006CAB8((uint64_t)v49 + *(int *)(v24 + 20), (uint64_t)v18, &qword_1010D0AB0);
  int v48 = (int *)v24;
  sub_10006CAB8((uint64_t)v50 + *(int *)(v24 + 20), (uint64_t)v16, &qword_1010D0AB0);
  uint64_t v25 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10006CAB8((uint64_t)v18, (uint64_t)v9, &qword_1010D0AB0);
  sub_10006CAB8((uint64_t)v16, v25, &qword_1010D0AB0);
  id v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  if (v26((uint64_t)v9, 1, v4) == 1)
  {
    sub_1000637B8((uint64_t)v16, &qword_1010D0AB0);
    sub_1000637B8((uint64_t)v18, &qword_1010D0AB0);
    if (v26(v25, 1, v4) == 1)
    {
      sub_1000637B8((uint64_t)v9, &qword_1010D0AB0);
      goto LABEL_13;
    }
LABEL_11:
    sub_1000637B8((uint64_t)v9, &qword_1010D0B20);
    goto LABEL_27;
  }
  sub_10006CAB8((uint64_t)v9, (uint64_t)v13, &qword_1010D0AB0);
  if (v26(v25, 1, v4) == 1)
  {
    sub_1000637B8((uint64_t)v16, &qword_1010D0AB0);
    sub_1000637B8((uint64_t)v18, &qword_1010D0AB0);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v13, v4);
    goto LABEL_11;
  }
  uint64_t v27 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v6, v25, v4);
  sub_100C35DAC((unint64_t *)&unk_1010D0F60, (void (*)(uint64_t))&type metadata accessor for UIView.Corner);
  char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v29 = *(void (**)(char *, uint64_t))(v27 + 8);
  v29(v6, v4);
  sub_1000637B8((uint64_t)v16, &qword_1010D0AB0);
  sub_1000637B8((uint64_t)v18, &qword_1010D0AB0);
  v29(v13, v4);
  sub_1000637B8((uint64_t)v9, &qword_1010D0AB0);
  if ((v28 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_13:
  sub_100057778(0, (unint64_t *)&qword_1010CAA20);
  id v31 = v48;
  id v30 = v49;
  id v32 = v50;
  if ((static NSObject.== infix(_:_:)() & 1) == 0 || (static NSObject.== infix(_:_:)() & 1) == 0) {
    goto LABEL_27;
  }
  uint64_t v35 = v31[8];
  double v33 = *(double *)((char *)v30 + v35);
  double v34 = *(double *)((char *)v32 + v35);
  LOBYTE(v35) = 0;
  if (v33 != v34) {
    return v35 & 1;
  }
  uint64_t v36 = v31[9];
  uint64_t v37 = (uint64_t)v30 + v36;
  double v38 = *(double *)((char *)v30 + v36);
  id v39 = (double *)((char *)v32 + v36);
  if (v38 != *v39) {
    return v35 & 1;
  }
  if (*(double *)(v37 + 8) != v39[1]) {
    return v35 & 1;
  }
  LOBYTE(v35) = 0;
  uint64_t v40 = v31[10];
  uint64_t v41 = (uint64_t)v30 + v40;
  double v42 = *(double *)((char *)v30 + v40);
  uint64_t v43 = (double *)((char *)v32 + v40);
  if (v42 != *v43 || *(double *)(v41 + 8) != v43[1]) {
    return v35 & 1;
  }
  uint64_t v35 = v31[11];
  uint64_t v44 = (double *)((char *)v30 + v35);
  char v45 = *((unsigned char *)v30 + v35 + 16);
  id v46 = (double *)((char *)v32 + v35);
  LODWORD(v35) = *((unsigned __int8 *)v32 + v35 + 16);
  if (v45)
  {
    if (!v35) {
      return v35 & 1;
    }
LABEL_26:
    if (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)((char *)v30 + v31[12]), *(float64x2_t *)((char *)v32 + v31[12])), (int32x4_t)vceqq_f64(*(float64x2_t *)((char *)v30 + v31[12] + 16), *(float64x2_t *)((char *)v32 + v31[12] + 16)))), 0xFuLL))))
    {
      LOBYTE(v35) = *((unsigned char *)v30 + v31[13]) ^ *((unsigned char *)v32 + v31[13]) ^ 1;
      return v35 & 1;
    }
    goto LABEL_27;
  }
  if (v35)
  {
LABEL_27:
    LOBYTE(v35) = 0;
    return v35 & 1;
  }
  LOBYTE(v35) = 0;
  if (*v44 == *v46 && v44[1] == v46[1]) {
    goto LABEL_26;
  }
  return v35 & 1;
}

uint64_t _s11MusicCoreUI12SymbolButtonC13ConfigurationV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, long long *a2)
{
  uint64_t v4 = (void *)type metadata accessor for UIView.Corner();
  uint64_t v5 = *(v4 - 1);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v142 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_100063814(&qword_1010D0B20);
  __chkstk_darwin(v158);
  id v9 = (char *)v142 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100063814(&qword_1010D0AB0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  char v13 = (char *)v142 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  id v16 = (char *)v142 - v15;
  __chkstk_darwin(v14);
  char v18 = (char *)v142 - v17;
  long long v19 = *(_OWORD *)(a1 + 80);
  v173[4] = *(_OWORD *)(a1 + 64);
  v173[5] = v19;
  v173[6] = *(_OWORD *)(a1 + 96);
  uint64_t v174 = *(void *)(a1 + 112);
  long long v20 = *(_OWORD *)(a1 + 16);
  v173[0] = *(_OWORD *)a1;
  v173[1] = v20;
  long long v21 = *(_OWORD *)(a1 + 48);
  v173[2] = *(_OWORD *)(a1 + 32);
  v173[3] = v21;
  long long v22 = *a2;
  long long v23 = a2[1];
  long long v24 = a2[3];
  v175[2] = a2[2];
  v175[3] = v24;
  v175[0] = v22;
  v175[1] = v23;
  long long v25 = a2[4];
  long long v26 = a2[5];
  long long v27 = a2[6];
  uint64_t v176 = *((void *)a2 + 14);
  v175[5] = v26;
  v175[6] = v27;
  v175[4] = v25;
  if (!_s11MusicCoreUI12SymbolButtonC0D0V23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v173, (uint64_t)v175)) {
    return 0;
  }
  long long v28 = *(_OWORD *)(a1 + 136);
  long long v29 = *(_OWORD *)(a1 + 168);
  _OWORD v169[2] = *(_OWORD *)(a1 + 152);
  v169[3] = v29;
  char v170 = *(unsigned char *)(a1 + 184);
  v169[0] = *(_OWORD *)(a1 + 120);
  v169[1] = v28;
  long long v30 = *(long long *)((char *)a2 + 136);
  long long v31 = *(long long *)((char *)a2 + 168);
  v171[2] = *(long long *)((char *)a2 + 152);
  v171[3] = v31;
  char v172 = *((unsigned char *)a2 + 184);
  v171[0] = *(long long *)((char *)a2 + 120);
  v171[1] = v30;
  if ((_s11MusicCoreUI12SymbolButtonC5TitleV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v169, (uint64_t)v171) & 1) == 0) {
    return 0;
  }
  char v154 = v16;
  CGRect v155 = v18;
  char v151 = v7;
  long long v152 = v13;
  uint64_t v156 = v5;
  CGRect v157 = v9;
  long long v153 = v4;
  id v32 = *(void **)(a1 + 200);
  uint64_t v33 = *(void *)(a1 + 208);
  uint64_t v34 = *(void *)(a1 + 216);
  uint64_t v35 = *((void *)a2 + 24);
  uint64_t v36 = (void *)*((void *)a2 + 25);
  uint64_t v38 = *((void *)a2 + 26);
  uint64_t v37 = *((void *)a2 + 27);
  if (v32 == (void *)1)
  {
    if (v36 == (void *)1) {
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v39 = *(void *)(a1 + 192);
    sub_100C30C38(v39, *(void **)(a1 + 200));
    sub_100C30C38(v35, v36);
    sub_1001773EC(v39, v32);
    sub_1001773EC(v35, v36);
    return 0;
  }
  if (v36 == (void *)1) {
    goto LABEL_7;
  }
  long long v150 = *(int **)(a1 + 192);
  uint64_t v40 = v150;
  sub_100C30C38((uint64_t)v150, v32);
  sub_100C30C38(v35, v36);
  LODWORD(v149) = _s11MusicCoreUI12SymbolButtonC10BackgroundV23__derived_struct_equalsySbAE_AEtFZ_0(v32, v33, v34, v36, v38, v37, *(double *)&v40, *(double *)&v35);
  sub_1001773EC(v35, v36);
  sub_1001773EC((uint64_t)v150, v32);
  if ((v149 & 1) == 0) {
    return 0;
  }
LABEL_9:
  double v42 = *(void **)(a1 + 224);
  uint64_t v41 = *(void **)(a1 + 232);
  uint64_t v44 = *(void **)(a1 + 240);
  uint64_t v43 = *(void *)(a1 + 248);
  uint64_t v46 = *(void *)(a1 + 256);
  char v45 = *(void **)(a1 + 264);
  int v48 = (void *)*((void *)a2 + 28);
  uint64_t v47 = (void *)*((void *)a2 + 29);
  uint64_t v50 = (void *)*((void *)a2 + 30);
  uint64_t v49 = *((void *)a2 + 31);
  uint64_t v51 = *((void *)a2 + 32);
  long long v150 = (int *)*((void *)a2 + 33);
  if (v42 == (void *)1)
  {
    if (v48 == (void *)1) {
      goto LABEL_15;
    }
LABEL_13:
    objc_super v148 = v48;
    long long v149 = v41;
    uint64_t v52 = v42;
    uint64_t v146 = v49;
    CGFloat v147 = v47;
    sub_100C36358(v42, v41, v44);
    long long v53 = v48;
    uint64_t v54 = v147;
    sub_100C36358(v53, v147, v50);
    sub_1002618F0(v52, v149, v44);
    sub_1002618F0(v148, v54, v50);
    return 0;
  }
  if (v48 == (void *)1) {
    goto LABEL_13;
  }
  v161[0] = v42;
  v161[1] = v41;
  v161[2] = v44;
  char v162 = v43;
  uint64_t v163 = v46;
  CGRect v164 = v45;
  v165[0] = v48;
  v165[1] = v47;
  v165[2] = v50;
  char v166 = v49;
  uint64_t v167 = v51;
  CGRect v168 = v150;
  objc_super v148 = v48;
  long long v149 = v41;
  CGFloat v143 = v42;
  uint64_t v144 = v46;
  CGFloat v147 = v47;
  v142[0] = v44;
  v142[1] = v45;
  uint64_t v145 = v43;
  sub_100C36358(v42, v41, v44);
  uint64_t v56 = v147;
  uint64_t v55 = v148;
  sub_100C36358(v148, v147, v50);
  BOOL v57 = _s11MusicCoreUI12SymbolButtonC8MaterialV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v161, (uint64_t)v165);
  sub_1002618F0(v55, v56, v50);
  sub_1002618F0(v143, v149, v142[0]);
  if (!v57) {
    return 0;
  }
LABEL_15:
  uint64_t v58 = *(void **)(a1 + 288);
  uint64_t v59 = (void *)*((void *)a2 + 36);
  if (v58)
  {
    if (!v59) {
      return 0;
    }
    uint64_t v60 = *(void *)(a1 + 272);
    uint64_t v61 = *(void *)(a1 + 280);
    uint64_t v62 = *((void *)a2 + 34);
    uint64_t v63 = *((void *)a2 + 35);
    id v64 = v59;
    id v65 = v58;
    LOBYTE(v160[0]) = v63 & 1;
    LOBYTE(v60) = static UIView.Border.__derived_struct_equals(_:_:)(v60, v61 & 1, (uint64_t)v65, v62, v63 & 1);

    if ((v60 & 1) == 0) {
      return 0;
    }
  }
  else if (v59)
  {
    return 0;
  }
  uint64_t v66 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v67 = (uint64_t)v155;
  sub_10006CAB8(a1 + v66[9], (uint64_t)v155, &qword_1010D0AB0);
  long long v150 = v66;
  uint64_t v68 = (uint64_t)v154;
  sub_10006CAB8((uint64_t)a2 + v66[9], (uint64_t)v154, &qword_1010D0AB0);
  uint64_t v69 = (uint64_t)v157;
  uint64_t v70 = (uint64_t)&v157[*(int *)(v158 + 48)];
  sub_10006CAB8(v67, (uint64_t)v157, &qword_1010D0AB0);
  sub_10006CAB8(v68, v70, &qword_1010D0AB0);
  uint64_t v71 = *(unsigned int (**)(uint64_t, uint64_t, void *))(v156 + 48);
  uint64_t v72 = v153;
  if (v71(v69, 1, v153) == 1)
  {
    sub_1000637B8(v68, &qword_1010D0AB0);
    sub_1000637B8(v67, &qword_1010D0AB0);
    if (v71(v70, 1, v72) == 1)
    {
      sub_1000637B8((uint64_t)v157, &qword_1010D0AB0);
      goto LABEL_27;
    }
LABEL_25:
    sub_1000637B8((uint64_t)v157, &qword_1010D0B20);
    return 0;
  }
  uint64_t v73 = (uint64_t)v152;
  sub_10006CAB8(v69, (uint64_t)v152, &qword_1010D0AB0);
  if (v71(v70, 1, v72) == 1)
  {
    sub_1000637B8((uint64_t)v154, &qword_1010D0AB0);
    sub_1000637B8((uint64_t)v155, &qword_1010D0AB0);
    (*(void (**)(uint64_t, void *))(v156 + 8))(v73, v72);
    goto LABEL_25;
  }
  uint64_t v74 = v156;
  double v75 = v151;
  (*(void (**)(char *, uint64_t, void *))(v156 + 32))(v151, v70, v72);
  sub_100C35DAC((unint64_t *)&unk_1010D0F60, (void (*)(uint64_t))&type metadata accessor for UIView.Corner);
  char v76 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v77 = *(void (**)(char *, void *))(v74 + 8);
  v77(v75, v72);
  sub_1000637B8((uint64_t)v154, &qword_1010D0AB0);
  sub_1000637B8((uint64_t)v155, &qword_1010D0AB0);
  v77((char *)v73, v72);
  sub_1000637B8(v69, &qword_1010D0AB0);
  if ((v76 & 1) == 0) {
    return 0;
  }
LABEL_27:
  uint64_t v78 = v150[10];
  id v80 = *(void **)(a1 + v78);
  uint64_t v79 = *(void *)(a1 + v78 + 8);
  uint64_t v82 = *(void *)(a1 + v78 + 16);
  uint64_t v81 = *(void *)(a1 + v78 + 24);
  uint64_t v84 = *(void *)(a1 + v78 + 32);
  uint64_t v83 = *(void *)(a1 + v78 + 40);
  uint64_t v85 = *(void **)(a1 + v78 + 48);
  uint64_t v86 = (uint64_t)a2 + v78;
  uint64_t v87 = *(void **)v86;
  uint64_t v88 = *(void *)(v86 + 8);
  uint64_t v90 = *(void *)(v86 + 16);
  uint64_t v89 = *(void *)(v86 + 24);
  uint64_t v92 = *(void *)(v86 + 32);
  uint64_t v91 = *(void *)(v86 + 40);
  id v93 = *(void **)(v86 + 48);
  if (!v80)
  {
    if (!v87) {
      goto LABEL_35;
    }
LABEL_32:
    uint64_t v103 = v82;
    char v154 = (char *)v82;
    CGRect v155 = (char *)v81;
    uint64_t v104 = v90;
    uint64_t v105 = v81;
    uint64_t v106 = v89;
    uint64_t v107 = v84;
    uint64_t v156 = v84;
    CGRect v157 = (char *)v83;
    uint64_t v108 = v92;
    uint64_t v109 = v91;
    long long v153 = v85;
    uint64_t v158 = v88;
    double v110 = v93;
    sub_100AEF7D4(v80, v79, v103, v105, v107, v83, v85);
    sub_100AEF7D4(v87, v88, v104, v106, v108, v109, v110);
    sub_100AE59D4(v80, v79, (uint64_t)v154, (uint64_t)v155, v156, (uint64_t)v157, v153);
    sub_100AE59D4(v87, v158, v104, v106, v108, v109, v110);
    return 0;
  }
  if (!v87) {
    goto LABEL_32;
  }
  v159[0] = v80;
  v159[1] = v79;
  v159[2] = v82;
  v159[3] = v81;
  v159[4] = v84;
  v159[5] = v83;
  v159[6] = v85;
  v160[0] = v87;
  CGRect v157 = (char *)v83;
  uint64_t v158 = v88;
  v160[1] = v88;
  v160[2] = v90;
  v160[3] = v89;
  v160[4] = v92;
  v160[5] = v91;
  v160[6] = v93;
  long long v152 = (char *)v79;
  long long v153 = v85;
  uint64_t v94 = v79;
  uint64_t v95 = v82;
  char v154 = (char *)v82;
  CGRect v155 = (char *)v81;
  uint64_t v96 = v90;
  uint64_t v97 = v81;
  uint64_t v98 = v89;
  uint64_t v99 = v84;
  uint64_t v156 = v84;
  uint64_t v100 = v92;
  uint64_t v101 = v91;
  uint64_t v102 = v93;
  sub_100AEF7D4(v80, v94, v95, v97, v99, v83, v85);
  sub_100AEF7D4(v87, v158, v96, v98, v100, v101, v102);
  LODWORD(v151) = _s11MusicCoreUI12SymbolButtonC10CustomViewV23__derived_struct_equalsySbAE_AEtFZ_0((uint64_t)v159, (uint64_t)v160);
  sub_100AE59D4(v87, v158, v96, v98, v100, v101, v102);
  sub_100AE59D4(v80, (uint64_t)v152, (uint64_t)v154, (uint64_t)v155, v156, (uint64_t)v157, v153);
  if ((v151 & 1) == 0) {
    return 0;
  }
LABEL_35:
  double v112 = v150;
  uint64_t v113 = v150[11];
  double v114 = (uint64_t *)(a1 + v113);
  double v115 = *(void **)(a1 + v113 + 16);
  double v116 = (uint64_t *)((char *)a2 + v113);
  double v117 = (void *)v116[2];
  if (v115 == (void *)1)
  {
    if (v117 != (void *)1) {
      return 0;
    }
  }
  else
  {
    if (v117 == (void *)1) {
      return 0;
    }
    uint64_t result = 0;
    uint64_t v126 = *v114;
    uint64_t v127 = *v116;
    if (*(double *)v114 != *(double *)v116) {
      return result;
    }
    uint64_t v128 = v114[1];
    uint64_t v129 = v116[1];
    if (*(double *)&v128 != *(double *)&v129) {
      return result;
    }
    if (v115)
    {
      if (!v117) {
        return 0;
      }
      sub_100057778(0, (unint64_t *)&qword_1010D0F70);
      sub_100C30C80(v127, v129, v117);
      sub_100C30C80(v126, v128, v115);
      char v130 = static NSObject.== infix(_:_:)();
      sub_1008329C4(v127, v129, (uint64_t)v117);
      sub_1008329C4(v126, v128, (uint64_t)v115);
      double v112 = v150;
      if ((v130 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      double v112 = v150;
      if (v117) {
        return 0;
      }
    }
  }
  if (*(double *)(a1 + v112[12]) != *(double *)((char *)a2 + v112[12])) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v118 = v112[13];
  uint64_t v119 = a1 + v118;
  double v120 = *(double *)(a1 + v118);
  double v121 = (double *)((char *)a2 + v118);
  if (v120 == *v121 && *(double *)(v119 + 8) == v121[1])
  {
    uint64_t v122 = v150[14];
    double v123 = (double *)(a1 + v122);
    char v124 = *(unsigned char *)(a1 + v122 + 16);
    uint64_t v125 = (uint64_t)a2 + v122;
    if (v124)
    {
      if (!*(unsigned char *)(v125 + 16)) {
        return 0;
      }
      goto LABEL_55;
    }
    if (*(unsigned char *)(v125 + 16)) {
      return 0;
    }
    uint64_t result = 0;
    if (*v123 == *(double *)v125 && v123[1] == *(double *)(v125 + 8))
    {
LABEL_55:
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + v150[15]), *(float64x2_t *)((char *)a2 + v150[15])), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + v150[15] + 16), *(float64x2_t *)((char *)a2 + v150[15] + 16)))), 0xFuLL))) & 1) == 0)return 0; {
      uint64_t v131 = v150[16];
      }
      if ((_s11MusicCoreUI12SymbolButtonC13ConfigurationV13AccessibilityV23__derived_struct_equalsySbAG_AGtFZ_0(*(unsigned __int8 *)(a1 + v131), *(void *)(a1 + v131 + 8), *(void *)(a1 + v131 + 16), *(unsigned char *)(a1 + v131 + 24), *((unsigned __int8 *)a2 + v131), *(void *)((char *)a2 + v131 + 8), *(void *)((char *)a2 + v131 + 16), *((unsigned char *)a2 + v131 + 24)) & 1) == 0|| *(double *)(a1 + v150[17]) != *(double *)((char *)a2 + v150[17]))
      {
        return 0;
      }
      uint64_t v132 = v150[18];
      uint64_t v133 = *(void **)(a1 + v132);
      uint64_t v134 = *(void **)((char *)a2 + v132);
      if (v133)
      {
        if (!v134) {
          return 0;
        }
        sub_100057778(0, (unint64_t *)&qword_1010D0F70);
        id v135 = v134;
        id v136 = v133;
        char v137 = static NSObject.== infix(_:_:)();

        if ((v137 & 1) == 0) {
          return 0;
        }
      }
      else if (v134)
      {
        return 0;
      }
      uint64_t v138 = v150[19];
      int v139 = *(unsigned __int8 *)(a1 + v138);
      int v140 = *((unsigned __int8 *)a2 + v138);
      if (v139 == 2)
      {
        if (v140 == 2) {
          return 1;
        }
      }
      else
      {
        BOOL v141 = (v139 & 1) == 0;
        if (v140 != 2 && ((v141 ^ v140) & 1) != 0) {
          return 1;
        }
      }
      return 0;
    }
  }
  return result;
}

void sub_100C2F874(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView);
  *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView) = a1;
  id v4 = a1;

  uint64_t v5 = *(void **)(v1 + v2);
  if (v5)
  {
    uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView);
    id v8 = v5;
    id v7 = v6;
    if ([v7 isDescendantOfView:v7])
    {
      [v7 insertSubview:v8 aboveSubview:v7];
    }
    else
    {

      if (![v8 isDescendantOfView:v7]) {
        [v7 addSubview:v8];
      }
    }
    sub_100C27B00();
  }
}

uint64_t _s11MusicCoreUI12SymbolButtonC0D0V21hasSignificantChanges4from2toSbAESg_AItFZ_0(uint64_t a1, uint64_t a2)
{
  sub_10003CABC(a1, (uint64_t)v40, &qword_1010D0FE0);
  if (v40[3])
  {
    uint64_t v5 = v40[0];
    uint64_t v4 = v40[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v4 = 0;
  }
  sub_10003CABC(a2, (uint64_t)v39, &qword_1010D0FE0);
  if (!v39[3])
  {
    if (!v4) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  uint64_t v6 = v39[0];
  uint64_t v7 = v39[1];
  swift_bridgeObjectRetain();
  if (!v4)
  {
    if (!v7) {
      goto LABEL_15;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (!v7) {
    goto LABEL_13;
  }
  if (v5 == v6 && v4 == v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return 1;
    }
  }
LABEL_15:
  sub_10003CABC(a1, (uint64_t)v37, &qword_1010D0FE0);
  if (v38)
  {
    id v9 = v38;
    sub_10003CABC(a2, (uint64_t)v35, &qword_1010D0FE0);
    if (!v36)
    {

      return 1;
    }
    id v10 = v36;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;
    if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if ((v15 & 1) == 0) {
        return 1;
      }
    }
  }
  else
  {
    sub_10003CABC(a2, (uint64_t)v35, &qword_1010D0FE0);
    if (v36) {
      return 1;
    }
  }
  sub_10003CABC(a2, (uint64_t)v32, &qword_1010D0FE0);
  uint64_t v16 = v33;
  uint64_t v17 = v34;
  sub_10003CABC(a1, (uint64_t)v29, &qword_1010D0FE0);
  if (v30)
  {
    if (v16) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    uint64_t result = 1;
    if (!v16 || v31 != v18) {
      return result;
    }
    goto LABEL_34;
  }
  if (v16) {
    return 1;
  }
LABEL_34:
  sub_10003CABC(a2, (uint64_t)v26, &qword_1010D0FE0);
  uint64_t v20 = v27;
  uint64_t v21 = v28;
  sub_10003CABC(a1, (uint64_t)&v23, &qword_1010D0FE0);
  BOOL v22 = (v24 | v20) == 0;
  if (v24)
  {
    if (v20) {
      BOOL v22 = v25 == v21;
    }
  }
  return !v22;
}

uint64_t sub_100C2FC24(uint64_t a1, uint64_t a2)
{
  sub_10003CABC(a1, (uint64_t)v28, &qword_1010D0FD8);
  uint64_t v4 = (void *)v28[7];
  sub_10003CABC(a1, (uint64_t)v43, &qword_1010D0FD8);
  if (v43[2])
  {
    uint64_t v6 = v43[0];
    uint64_t v5 = v43[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  sub_10003CABC(a2, (uint64_t)v42, &qword_1010D0FD8);
  if (!v42[2])
  {
    if (!v5) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  uint64_t v8 = v42[0];
  uint64_t v7 = v42[1];
  swift_bridgeObjectRetain();
  if (!v5)
  {
    if (!v7) {
      goto LABEL_15;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  if (!v7) {
    goto LABEL_13;
  }
  if (v6 == v8 && v5 == v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      goto LABEL_40;
    }
  }
LABEL_15:
  sub_10003CABC(a1, (uint64_t)v40, &qword_1010D0FD8);
  if (v41)
  {
    id v10 = v41;
    sub_10003CABC(a2, (uint64_t)v38, &qword_1010D0FD8);
    if (!v39)
    {

      goto LABEL_40;
    }
    id v11 = v39;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
    if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if ((v16 & 1) == 0) {
        goto LABEL_40;
      }
    }
  }
  else
  {
    sub_10003CABC(a2, (uint64_t)v38, &qword_1010D0FD8);
    if (v39) {
      goto LABEL_40;
    }
  }
  sub_10003CABC(a2, (uint64_t)v35, &qword_1010D0FD8);
  uint64_t v17 = v36;
  double v18 = v37;
  sub_10003CABC(a1, (uint64_t)v32, &qword_1010D0FD8);
  if (!v33)
  {
    if (!v17)
    {
      uint64_t v4 = 0;
LABEL_32:
      sub_10003CABC(a2, (uint64_t)v29, &qword_1010D0FD8);
      if (v30)
      {
        id v22 = v31;
        id v23 = v31;
        uint64_t v24 = v23;
        if (v4)
        {
          if (v22)
          {
            sub_100057778(0, (unint64_t *)&qword_1010D0F70);
            id v25 = v4;
            char v26 = static NSObject.== infix(_:_:)();

            char v20 = v26 ^ 1;
            return v20 & 1;
          }
          goto LABEL_37;
        }
        if (v22)
        {

          goto LABEL_40;
        }
      }
      else if (v4)
      {
LABEL_37:

        goto LABEL_40;
      }
      char v20 = 0;
      return v20 & 1;
    }
LABEL_40:
    char v20 = 1;
    return v20 & 1;
  }
  double v19 = 0.0;
  if (v17) {
    double v19 = v18;
  }
  char v20 = 1;
  if (v17 && v34 == v19)
  {
    id v21 = v4;
    goto LABEL_32;
  }
  return v20 & 1;
}

void _s11MusicCoreUI12SymbolButtonC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_debugLabel];
  *uint64_t v2 = 0;
  v2[1] = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_configurationProvider];
  *uint64_t v3 = 0;
  v3[1] = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_handler];
  *uint64_t v4 = 0;
  v4[1] = 0;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHighlighted] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenSelected] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenDisabled] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_automaticallyAdjustsAlphaWhenHidden] = 1;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_pendingAnimatedChangesCount] = 0;
  uint64_t v5 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_hitRectMinimumSize;
  if (qword_1010C8820 != -1) {
    swift_once();
  }
  *(_OWORD *)&v1[v5] = static SymbolButton.Configuration.hitRectMinimumSize;
  uint64_t v6 = &v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu];
  *uint64_t v6 = 0;
  v6[1] = 0;
  uint64_t v7 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_containerView;
  *(void *)&v1[v7] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_materialView;
  uint64_t v20 = 1;
  char v9 = (objc_class *)type metadata accessor for SymbolButton.MaterialView();
  long long v21 = 0u;
  long long v22 = 0u;
  uint64_t v23 = 0;
  v19.receiver = objc_allocWithZone(v9);
  v19.super_class = v9;
  [super initWithEffect:0];
  sub_100C2A83C((uint64_t)&v20);

  *(void *)&v1[v8] = v10;
  uint64_t v11 = OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_backgroundView;
  if (qword_1010C87F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  double v12 = *(double *)&static SymbolButton.Background.clear;
  uint64_t v13 = (void *)qword_10112CF98;
  uint64_t v14 = qword_10112CFA0;
  uint64_t v15 = qword_10112CFA8;
  objc_allocWithZone((Class)type metadata accessor for SymbolButton.BackgroundView());
  swift_bridgeObjectRetain();
  id v16 = v13;
  *(void *)&v1[v11] = sub_100C2AC78(v13, v12, v14, v15);
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___imageView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___titleLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_customView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_badgeView] = 0;
  uint64_t v17 = &v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton____lazy_storage___metrics];
  uint64_t v18 = type metadata accessor for SymbolButton.Metrics(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v1[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_isClippingInvalidated] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100C30228()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100C30260()
{
  uint64_t v1 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v27 = v0;
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(v0 + v3 + 200);
  if (v6 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v7 = *(void **)(v5 + 224);
  if (v7 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v26 = v4;
  uint64_t v8 = v4 + v2;

  uint64_t v9 = v5 + v1[9];
  uint64_t v10 = type metadata accessor for UIView.Corner();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v13 = v8 + v3;
  uint64_t v14 = (id *)(v5 + v1[10]);
  if (*v14)
  {
  }
  uint64_t v15 = v13 & ~v2;
  id v16 = *(void **)(v5 + v1[11] + 16);
  if (v16 != (void *)1) {

  }
  uint64_t v17 = v5 + v1[16];
  uint64_t v18 = v27 + v15;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  objc_super v19 = *(void **)(v27 + v15 + 200);
  if (v19 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *(void **)(v18 + 224);
  if (v20 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }

  uint64_t v21 = v18 + v1[9];
  if (!v12(v21, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v21, v10);
  }
  long long v22 = (id *)(v18 + v1[10]);
  if (*v22)
  {
  }
  uint64_t v23 = *(void **)(v18 + v1[11] + 16);
  if (v23 != (void *)1) {

  }
  uint64_t v24 = v18 + v1[16];

  return swift_deallocObject();
}

void sub_100C305F4()
{
  uint64_t v1 = *(void *)(type metadata accessor for SymbolButton.Configuration(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  unint64_t v6 = (v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(char **)(v0 + v6);
  uint64_t v8 = *(char ***)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_100C21728((uint64_t *)(v0 + v3), v0 + v5, v7, v8);
}

uint64_t sub_100C3069C()
{
  return swift_deallocObject();
}

uint64_t sub_100C306AC()
{
  uint64_t v1 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  unint64_t v6 = *(void **)(v0 + v3 + 200);
  if (v6 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v7 = *(void **)(v5 + 224);
  if (v7 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v4 + v2;

  uint64_t v9 = v5 + v1[9];
  uint64_t v10 = type metadata accessor for UIView.Corner();
  uint64_t v11 = *(void *)(v10 - 8);
  id v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v25(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v8 + v3;
  uint64_t v13 = (id *)(v5 + v1[10]);
  if (*v13)
  {
  }
  uint64_t v14 = v12 & ~v2;
  uint64_t v15 = *(void **)(v5 + v1[11] + 16);
  if (v15 != (void *)1) {

  }
  uint64_t v16 = v5 + v1[16];
  uint64_t v17 = v0 + v14;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v18 = *(void **)(v0 + v14 + 200);
  if (v18 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  objc_super v19 = *(void **)(v17 + 224);
  if (v19 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }

  uint64_t v20 = v17 + v1[9];
  if (!v25(v20, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v20, v10);
  }
  uint64_t v21 = (id *)(v17 + v1[10]);
  if (*v21)
  {
  }
  long long v22 = *(void **)(v17 + v1[11] + 16);
  if (v22 != (void *)1) {

  }
  uint64_t v23 = v17 + v1[16];
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100C30A4C()
{
  uint64_t v1 = *(void *)(type metadata accessor for SymbolButton.Configuration(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  unint64_t v6 = (v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void **)(v0 + 16);
  uint64_t v8 = *(uint64_t **)(v0 + v6);
  uint64_t v9 = *(void *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_100C2220C(v7, v0 + v3, v0 + v5, v8, v9);
}

uint64_t sub_100C30AF8()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100C30B48(uint64_t a1)
{
  sub_100C235F4(a1, *(void *)(v1 + 16), *(char **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_100C30B58(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100C30B90(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100C30BC8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100C30C00(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_100C30C38(uint64_t a1, void *a2)
{
  if (a2 != (void *)1)
  {
    swift_bridgeObjectRetain();
    id v3 = a2;
  }
}

id sub_100C30C80(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3 != (void *)1) {
    return a3;
  }
  return result;
}

uint64_t sub_100C30C90()
{
  return swift_deallocObject();
}

id sub_100C30CC8()
{
  return [*(id *)(v0 + 16) setEnabled:*(unsigned __int8 *)(v0 + 24)];
}

uint64_t sub_100C30CDC()
{
  return swift_deallocObject();
}

BOOL sub_100C30CEC(uint64_t a1, uint64_t a2)
{
  sub_10003CABC(a1, (uint64_t)v28, &qword_1010D0FD8);
  if (v28[2])
  {
    uint64_t v5 = v28[0];
    uint64_t v4 = v28[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v4 = 0;
  }
  sub_10003CABC(a2, (uint64_t)v27, &qword_1010D0FD8);
  if (!v27[2])
  {
    if (!v4) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  uint64_t v7 = v27[0];
  uint64_t v6 = v27[1];
  swift_bridgeObjectRetain();
  if (!v4)
  {
    if (!v6) {
      goto LABEL_15;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v6) {
    goto LABEL_13;
  }
  if (v5 == v7 && v4 == v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v8 & 1) == 0) {
      return result;
    }
  }
LABEL_15:
  sub_10003CABC(a1, (uint64_t)v25, &qword_1010D0FD8);
  if (v26)
  {
    id v10 = v26;
    sub_10003CABC(a2, (uint64_t)v23, &qword_1010D0FD8);
    if (!v24)
    {

      return 0;
    }
    id v11 = v24;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;
    if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      BOOL result = 0;
      if ((v16 & 1) == 0) {
        return result;
      }
    }
  }
  else
  {
    sub_10003CABC(a2, (uint64_t)v23, &qword_1010D0FD8);
    if (v24) {
      return 0;
    }
  }
  sub_10003CABC(a2, (uint64_t)v20, &qword_1010D0FD8);
  uint64_t v17 = v21;
  double v18 = v22;
  sub_10003CABC(a1, (uint64_t)v19, &qword_1010D0FD8);
  if (!v19[2]) {
    return !v17;
  }
  BOOL result = 0;
  if (v17 && *(double *)&v19[3] == v18) {
    return 1;
  }
  return result;
}

id _s11MusicCoreUI12SymbolButtonC22contextMenuInteraction_016configurationForG10AtLocationSo09UIContextG13ConfigurationCSgSo0mgH0C_So7CGPointVtF_0()
{
  uint64_t v1 = (uint64_t *)&v0[OBJC_IVAR____TtC11MusicCoreUI12SymbolButton_buildMenu];
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!*v1) {
    return 0;
  }
  uint64_t v3 = v1[1];
  uint64_t v4 = (void *)swift_allocObject();
  _OWORD v4[2] = v2;
  v4[3] = v3;
  _OWORD v4[4] = v0;
  uint64_t v5 = self;
  aBlock[4] = sub_100C35B2C;
  aBlock[5] = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100C2DAFC;
  aBlock[3] = &unk_1010136D8;
  uint64_t v6 = _Block_copy(aBlock);
  sub_10007B674(v2);
  sub_10007B674(v2);
  uint64_t v7 = v0;
  swift_retain();
  swift_release();
  id v8 = [v5 configurationWithIdentifier:0 previewProvider:0 actionProvider:v6];
  swift_release();
  _Block_release(v6);
  [v8 setPreferredMenuElementOrder:2];
  sub_10006ADFC(v2);
  return v8;
}

uint64_t _s11MusicCoreUI12SymbolButtonC18pointerInteraction_8styleForSo14UIPointerStyleCSgSo0jG0C_So0J6RegionCtF_0(void *a1)
{
  sub_100063814(&qword_1010D0F88);
  __chkstk_darwin();
  uint64_t v4 = (char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIView.Corner.Radius();
  uint64_t v93 = *(void *)(v5 - 8);
  uint64_t v94 = v5;
  __chkstk_darwin();
  uint64_t v92 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UIView.Corner();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v101 = v7;
  uint64_t v102 = v8;
  __chkstk_darwin();
  uint64_t v90 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100063814(&qword_1010D0B20);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin();
  uint64_t v14 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  char v16 = (char *)&v88 - v15;
  __chkstk_darwin();
  double v18 = (char *)&v88 - v17;
  uint64_t v103 = type metadata accessor for SymbolButton.Configuration(0);
  __chkstk_darwin();
  uint64_t v96 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v21 = (char *)&v88 - v20;
  __chkstk_darwin();
  uint64_t v23 = (char *)&v88 - v22;
  uint64_t v24 = type metadata accessor for UIPointerEffect();
  uint64_t v99 = *(void *)(v24 - 8);
  uint64_t v100 = v24;
  __chkstk_darwin();
  uint64_t v97 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v26 = __chkstk_darwin().n128_u64[0];
  uint64_t v98 = (void **)((char *)&v88 - v27);
  id v28 = [a1 view:v26];
  if (!v28) {
    return 0;
  }
  long long v29 = v28;
  if (![v1 isUserInteractionEnabled])
  {

    return 0;
  }
  uint64_t v88 = v4;
  uint64_t v30 = (uint64_t)v1 + OBJC_IVAR____TtC11MusicCoreUI12SymbolButton__configuration;
  swift_beginAccess();
  uint64_t v95 = v30;
  sub_100C35BE4(v30, (uint64_t)v23, type metadata accessor for SymbolButton.Configuration);
  id v31 = (void *)*((void *)v23 + 28);
  id v91 = v1;
  id v89 = v29;
  if (v31 == (void *)1)
  {
    sub_100C2DA84((uint64_t)v23, type metadata accessor for SymbolButton.Configuration);
  }
  else
  {
    id v33 = v31;
    sub_100C2DA84((uint64_t)v23, type metadata accessor for SymbolButton.Configuration);
    if (v31)
    {

      goto LABEL_11;
    }
  }
  if (*(void *)(v95 + 200) == 1 && !*(void *)(v95 + *(int *)(v103 + 40))) {
    goto LABEL_21;
  }
LABEL_11:
  id v34 = [v91 traitCollection];
  id v35 = [v34 userInterfaceIdiom];

  if (v35 != (id)6)
  {
LABEL_19:
    id v44 = objc_allocWithZone((Class)UITargetedPreview);
    id v45 = [v44 initWithView:v89];
    id v46 = [v45 parameters];
    id v47 = v91;
    [v91 bounds];
    double v49 = v48;
    double v51 = v50;
    double v53 = v52;
    double v55 = v54;
    sub_100C35BE4(v95, (uint64_t)v21, type metadata accessor for SymbolButton.Configuration);
    uint64_t v56 = v101;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(&v21[*(int *)(v103 + 36)], 1, v101))
    {
      sub_100C2DA84((uint64_t)v21, type metadata accessor for SymbolButton.Configuration);
      static UIPointerShape.defaultCornerRadius.getter();
      double v58 = v57;
    }
    else
    {
      uint64_t v67 = v92;
      UIView.Corner.radius.getter();
      sub_100C2DA84((uint64_t)v21, type metadata accessor for SymbolButton.Configuration);
      [v47 bounds];
      UIView.Corner.Radius.value(in:)();
      double v58 = v68;
      (*(void (**)(char *, uint64_t))(v93 + 8))(v67, v94);
    }
    uint64_t v65 = v100;
    uint64_t v66 = v97;
    uint64_t v62 = v98;
    id v69 = [self bezierPathWithRoundedRect:v49 cornerRadius:v51 v53, v55, v58];
    [v46 setShadowPath:v69];

    *uint64_t v62 = v45;
    uint64_t v63 = (unsigned int *)&enum case for UIPointerEffect.lift(_:);
    id v64 = v91;
    uint64_t v61 = v99;
    goto LABEL_24;
  }
  sub_10006CAB8(v95 + *(int *)(v103 + 36), (uint64_t)v18, &qword_1010D0AB0);
  static UIView.Corner.rounded.getter();
  uint64_t v36 = v101;
  uint64_t v37 = v102;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v16, 0, 1, v101);
  uint64_t v38 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_10006CAB8((uint64_t)v18, (uint64_t)v12, &qword_1010D0AB0);
  sub_10006CAB8((uint64_t)v16, v38, &qword_1010D0AB0);
  id v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  if (v39((uint64_t)v12, 1, v36) == 1)
  {
    sub_1000637B8((uint64_t)v16, &qword_1010D0AB0);
    sub_1000637B8((uint64_t)v18, &qword_1010D0AB0);
    if (v39(v38, 1, v36) == 1)
    {
      sub_1000637B8((uint64_t)v12, &qword_1010D0AB0);
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  sub_10006CAB8((uint64_t)v12, (uint64_t)v14, &qword_1010D0AB0);
  if (v39(v38, 1, v36) == 1)
  {
    sub_1000637B8((uint64_t)v16, &qword_1010D0AB0);
    sub_1000637B8((uint64_t)v18, &qword_1010D0AB0);
    (*(void (**)(char *, uint64_t))(v102 + 8))(v14, v36);
LABEL_17:
    sub_1000637B8((uint64_t)v12, &qword_1010D0B20);
    goto LABEL_21;
  }
  uint64_t v40 = v102;
  id v41 = v90;
  (*(void (**)(char *, uint64_t, uint64_t))(v102 + 32))(v90, v38, v36);
  sub_100C35DAC((unint64_t *)&unk_1010D0F60, (void (*)(uint64_t))&type metadata accessor for UIView.Corner);
  char v42 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v40 + 8);
  v43(v41, v36);
  sub_1000637B8((uint64_t)v16, &qword_1010D0AB0);
  sub_1000637B8((uint64_t)v18, &qword_1010D0AB0);
  v43(v14, v36);
  sub_1000637B8((uint64_t)v12, &qword_1010D0AB0);
  if (v42) {
    goto LABEL_19;
  }
LABEL_21:
  id v59 = objc_allocWithZone((Class)UITargetedPreview);
  id v60 = [v59 initWithView:v89];
  uint64_t v62 = v98;
  uint64_t v61 = v99;
  void *v98 = v60;
  uint64_t v63 = (unsigned int *)&enum case for UIPointerEffect.highlight(_:);
  id v64 = v91;
  uint64_t v65 = v100;
  uint64_t v56 = v101;
  uint64_t v66 = v97;
LABEL_24:
  uint64_t v70 = (uint64_t)v96;
  (*(void (**)(void *, void, uint64_t))(v61 + 104))(v62, *v63, v65);
  (*(void (**)(char *, void *, uint64_t))(v61 + 16))(v66, v62, v65);
  [v64 bounds];
  uint64_t v72 = v71;
  uint64_t v74 = v73;
  uint64_t v76 = v75;
  uint64_t v78 = v77;
  sub_100C35BE4(v95, v70, type metadata accessor for SymbolButton.Configuration);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v70 + *(int *)(v103 + 36), 1, v56))
  {
    sub_100C2DA84(v70, type metadata accessor for SymbolButton.Configuration);
    static UIPointerShape.defaultCornerRadius.getter();
    uint64_t v80 = v79;
  }
  else
  {
    uint64_t v81 = v92;
    UIView.Corner.radius.getter();
    sub_100C2DA84(v70, type metadata accessor for SymbolButton.Configuration);
    [v64 bounds];
    UIView.Corner.Radius.value(in:)();
    uint64_t v80 = v82;
    (*(void (**)(char *, uint64_t))(v93 + 8))(v81, v94);
  }
  uint64_t v83 = v88;
  sub_100057778(0, &qword_1010D0F90);
  *uint64_t v83 = v72;
  v83[1] = v74;
  v83[2] = v76;
  v83[3] = v78;
  v83[4] = v80;
  uint64_t v84 = enum case for UIPointerShape.roundedRect(_:);
  uint64_t v85 = type metadata accessor for UIPointerShape();
  uint64_t v86 = *(void *)(v85 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v86 + 104))(v83, v84, v85);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
  uint64_t v32 = UIPointerStyle.init(effect:shape:)();

  (*(void (**)(void *, uint64_t))(v61 + 8))(v62, v65);
  return v32;
}

unint64_t sub_100C31C5C(uint64_t a1)
{
  unint64_t result = sub_100C31C84();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100C31C84()
{
  unint64_t result = qword_1010D0B48;
  if (!qword_1010D0B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0B48);
  }
  return result;
}

unint64_t sub_100C31CD8(uint64_t a1)
{
  unint64_t result = sub_100C31D00();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100C31D00()
{
  unint64_t result = qword_1010D0B50;
  if (!qword_1010D0B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0B50);
  }
  return result;
}

unint64_t sub_100C31D54(uint64_t a1)
{
  unint64_t result = sub_100C31D7C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100C31D7C()
{
  unint64_t result = qword_1010D0B58;
  if (!qword_1010D0B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0B58);
  }
  return result;
}

unint64_t sub_100C31DD4()
{
  unint64_t result = qword_1010D0B60;
  if (!qword_1010D0B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0B60);
  }
  return result;
}

unint64_t sub_100C31E28(uint64_t a1)
{
  unint64_t result = sub_100C31E50();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100C31E50()
{
  unint64_t result = qword_1010D0B68;
  if (!qword_1010D0B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0B68);
  }
  return result;
}

unint64_t sub_100C31EA4(uint64_t a1)
{
  unint64_t result = sub_100C31ECC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100C31ECC()
{
  unint64_t result = qword_1010D0B70;
  if (!qword_1010D0B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0B70);
  }
  return result;
}

uint64_t sub_100C31F20()
{
  return type metadata accessor for SymbolButton(0);
}

void sub_100C31F28()
{
  type metadata accessor for SymbolButton.Configuration(319);
  if (v0 <= 0x3F)
  {
    sub_100C33DA8(319, &qword_1010D0BB0, (void (*)(uint64_t))type metadata accessor for SymbolButton.Metrics);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

ValueMetadata *type metadata accessor for SymbolButton.Animation()
{
  return &type metadata for SymbolButton.Animation;
}

void *destroy for SymbolButton.Update(void *result)
{
  unint64_t v1 = result;
  if (*result) {
    unint64_t result = (void *)swift_release();
  }
  if (v1[4])
  {
    return (void *)swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for SymbolButton.Update(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  return a1;
}

void *assignWithCopy for SymbolButton.Update(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a1[4];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v8 = a2[4];
  if (!v7)
  {
    if (v8)
    {
      uint64_t v10 = a2[5];
      a1[4] = v8;
      a1[5] = v10;
      swift_retain();
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v9 = a2[5];
  a1[4] = v8;
  a1[5] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SymbolButton.Update(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (*(void *)a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[4];
  uint64_t v8 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  if (!v8)
  {
    if (v7)
    {
      uint64_t v10 = a2[5];
      *(void *)(a1 + 32) = v7;
      *(void *)(a1 + 40) = v10;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v9 = a2[5];
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v9;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Update()
{
  return &type metadata for SymbolButton.Update;
}

ValueMetadata *type metadata accessor for SymbolButton.Update.AnimationOptions()
{
  return &type metadata for SymbolButton.Update.AnimationOptions;
}

uint64_t initializeBufferWithCopyOfBuffer for SymbolButton.Configuration(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *(void *)a1 = *a2;
    a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = (void *)a2[2];
    uint64_t v8 = (void *)a2[3];
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = a2[4];
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    long long v9 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v9;
    uint64_t v10 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v10;
    uint64_t v11 = (void *)a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v11;
    uint64_t v12 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v12;
    uint64_t v13 = (void *)a2[17];
    *(void *)(a1 + 136) = v13;
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    uint64_t v14 = a2[21];
    *(void *)(a1 + 160) = a2[20];
    *(void *)(a1 + 168) = v14;
    uint64_t v15 = (void *)a2[22];
    *(void *)(a1 + 176) = v15;
    *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
    uint64_t v77 = (void *)a2[25];
    swift_bridgeObjectRetain();
    id v16 = v7;
    id v17 = v8;
    swift_bridgeObjectRetain();
    id v18 = v11;
    swift_bridgeObjectRetain();
    id v19 = v13;
    swift_bridgeObjectRetain();
    id v20 = v15;
    if (v77 == (void *)1)
    {
      long long v21 = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 208) = v21;
    }
    else
    {
      *(void *)(a1 + 192) = a2[24];
      *(void *)(a1 + 200) = v77;
      uint64_t v23 = a2[27];
      *(void *)(a1 + 208) = a2[26];
      *(void *)(a1 + 216) = v23;
      id v24 = v77;
      swift_bridgeObjectRetain();
    }
    uint64_t v25 = (void *)a2[28];
    if (v25 == (void *)1)
    {
      long long v26 = *((_OWORD *)a2 + 15);
      *(_OWORD *)(a1 + 224) = *((_OWORD *)a2 + 14);
      *(_OWORD *)(a1 + 240) = v26;
      *(_OWORD *)(a1 + 256) = *((_OWORD *)a2 + 16);
    }
    else
    {
      uint64_t v27 = (void *)a2[29];
      id v28 = (void *)a2[30];
      *(void *)(a1 + 224) = v25;
      *(void *)(a1 + 232) = v27;
      *(void *)(a1 + 240) = v28;
      *(unsigned char *)(a1 + 248) = *((unsigned char *)a2 + 248);
      uint64_t v29 = a2[33];
      *(void *)(a1 + 256) = a2[32];
      *(void *)(a1 + 264) = v29;
      id v30 = v25;
      id v31 = v27;
      id v32 = v28;
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + 272) = a2[34];
    *(unsigned char *)(a1 + 280) = *((unsigned char *)a2 + 280);
    id v33 = (void *)a2[36];
    *(void *)(a1 + 288) = v33;
    uint64_t v34 = a3[9];
    id v35 = (void *)(a1 + v34);
    uint64_t v36 = (char *)a2 + v34;
    uint64_t v37 = type metadata accessor for UIView.Corner();
    uint64_t v38 = *(void *)(v37 - 8);
    id v39 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v38 + 48);
    id v40 = v33;
    if (v39(v36, 1, v37))
    {
      uint64_t v41 = sub_100063814(&qword_1010D0AB0);
      memcpy(v35, v36, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
    }
    uint64_t v42 = a3[10];
    uint64_t v43 = a1 + v42;
    uint64_t v44 = (uint64_t)a2 + v42;
    id v45 = *(void **)v44;
    if (*(void *)v44)
    {
      *(void *)uint64_t v43 = v45;
      *(_OWORD *)(v43 + 8) = *(_OWORD *)(v44 + 8);
      *(_OWORD *)(v43 + 24) = *(_OWORD *)(v44 + 24);
      id v46 = *(void **)(v44 + 48);
      *(void *)(v43 + 40) = *(void *)(v44 + 40);
      *(void *)(v43 + 48) = v46;
      id v47 = v45;
      id v48 = v46;
    }
    else
    {
      long long v49 = *(_OWORD *)(v44 + 16);
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      *(_OWORD *)(v43 + 16) = v49;
      *(_OWORD *)(v43 + 32) = *(_OWORD *)(v44 + 32);
      *(void *)(v43 + 48) = *(void *)(v44 + 48);
    }
    uint64_t v50 = a3[11];
    uint64_t v51 = a1 + v50;
    uint64_t v52 = (uint64_t)a2 + v50;
    double v53 = *(void **)(v52 + 16);
    *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
    if (v53 == (void *)1)
    {
      *(void *)(v51 + 16) = *(void *)(v52 + 16);
    }
    else
    {
      *(void *)(v51 + 16) = v53;
      id v54 = v53;
    }
    uint64_t v55 = a3[13];
    *(void *)(a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(_OWORD *)(a1 + v55) = *(_OWORD *)((char *)a2 + v55);
    uint64_t v56 = a3[14];
    uint64_t v57 = a3[15];
    uint64_t v58 = a1 + v56;
    uint64_t v59 = (uint64_t)a2 + v56;
    *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
    *(unsigned char *)(v58 + 16) = *(unsigned char *)(v59 + 16);
    id v60 = (_OWORD *)(a1 + v57);
    uint64_t v61 = (_OWORD *)((char *)a2 + v57);
    long long v62 = v61[1];
    _OWORD *v60 = *v61;
    v60[1] = v62;
    uint64_t v63 = a3[16];
    uint64_t v64 = a3[17];
    uint64_t v65 = a1 + v63;
    uint64_t v66 = (uint64_t)a2 + v63;
    *(unsigned char *)uint64_t v65 = *(unsigned char *)v66;
    *(unsigned char *)(v65 + 24) = *(unsigned char *)(v66 + 24);
    uint64_t v67 = *(void **)(v66 + 8);
    double v68 = *(void **)(v66 + 16);
    *(void *)(v65 + 8) = v67;
    *(void *)(v65 + 16) = v68;
    *(void *)(a1 + v64) = *(uint64_t *)((char *)a2 + v64);
    uint64_t v69 = a3[18];
    uint64_t v70 = a3[19];
    uint64_t v71 = *(void **)((char *)a2 + v69);
    *(void *)(a1 + v69) = v71;
    *(unsigned char *)(a1 + v70) = *((unsigned char *)a2 + v70);
    id v72 = v67;
    id v73 = v68;
    id v74 = v71;
  }
  return a1;
}

void destroy for SymbolButton.Configuration(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 200);
  if (v4 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  int v5 = *(void **)(a1 + 224);
  if (v5 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }

  uint64_t v6 = a1 + a2[9];
  uint64_t v7 = type metadata accessor for UIView.Corner();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  long long v9 = (id *)(a1 + a2[10]);
  if (*v9)
  {
  }
  uint64_t v10 = *(void **)(a1 + a2[11] + 16);
  if (v10 != (void *)1) {

  }
  uint64_t v11 = a1 + a2[16];
  uint64_t v12 = *(void **)(a1 + a2[18]);
}

uint64_t initializeWithCopy for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  long long v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  uint64_t v10 = *(void **)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  uint64_t v12 = *(void **)(a2 + 136);
  *(void *)(a1 + 136) = v12;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  uint64_t v13 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v13;
  uint64_t v14 = *(void **)(a2 + 176);
  *(void *)(a1 + 176) = v14;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v75 = *(void **)(a2 + 200);
  swift_bridgeObjectRetain();
  id v15 = v6;
  id v16 = v7;
  swift_bridgeObjectRetain();
  id v17 = v10;
  swift_bridgeObjectRetain();
  id v18 = v12;
  swift_bridgeObjectRetain();
  id v19 = v14;
  if (v75 == (void *)1)
  {
    long long v20 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v20;
  }
  else
  {
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = v75;
    uint64_t v21 = *(void *)(a2 + 216);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = v21;
    id v22 = v75;
    swift_bridgeObjectRetain();
  }
  uint64_t v23 = *(void **)(a2 + 224);
  if (v23 == (void *)1)
  {
    long long v24 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v24;
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  }
  else
  {
    uint64_t v25 = *(void **)(a2 + 232);
    long long v26 = *(void **)(a2 + 240);
    *(void *)(a1 + 224) = v23;
    *(void *)(a1 + 232) = v25;
    *(void *)(a1 + 240) = v26;
    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    uint64_t v27 = *(void *)(a2 + 264);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = v27;
    id v28 = v23;
    id v29 = v25;
    id v30 = v26;
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  id v31 = *(void **)(a2 + 288);
  *(void *)(a1 + 288) = v31;
  uint64_t v32 = a3[9];
  id v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  uint64_t v35 = type metadata accessor for UIView.Corner();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48);
  id v38 = v31;
  if (v37(v34, 1, v35))
  {
    uint64_t v39 = sub_100063814(&qword_1010D0AB0);
    memcpy(v33, v34, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  uint64_t v40 = a3[10];
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  uint64_t v43 = *(void **)v42;
  if (*(void *)v42)
  {
    *(void *)uint64_t v41 = v43;
    *(_OWORD *)(v41 + 8) = *(_OWORD *)(v42 + 8);
    *(_OWORD *)(v41 + 24) = *(_OWORD *)(v42 + 24);
    uint64_t v44 = *(void **)(v42 + 48);
    *(void *)(v41 + 40) = *(void *)(v42 + 40);
    *(void *)(v41 + 48) = v44;
    id v45 = v43;
    id v46 = v44;
  }
  else
  {
    long long v47 = *(_OWORD *)(v42 + 16);
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    *(_OWORD *)(v41 + 16) = v47;
    *(_OWORD *)(v41 + 32) = *(_OWORD *)(v42 + 32);
    *(void *)(v41 + 48) = *(void *)(v42 + 48);
  }
  uint64_t v48 = a3[11];
  uint64_t v49 = a1 + v48;
  uint64_t v50 = a2 + v48;
  uint64_t v51 = *(void **)(v50 + 16);
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
  if (v51 == (void *)1)
  {
    *(void *)(v49 + 16) = *(void *)(v50 + 16);
  }
  else
  {
    *(void *)(v49 + 16) = v51;
    id v52 = v51;
  }
  uint64_t v53 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v53) = *(_OWORD *)(a2 + v53);
  uint64_t v54 = a3[14];
  uint64_t v55 = a3[15];
  uint64_t v56 = a1 + v54;
  uint64_t v57 = a2 + v54;
  *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
  *(unsigned char *)(v56 + 16) = *(unsigned char *)(v57 + 16);
  uint64_t v58 = (_OWORD *)(a1 + v55);
  uint64_t v59 = (_OWORD *)(a2 + v55);
  long long v60 = v59[1];
  *uint64_t v58 = *v59;
  v58[1] = v60;
  uint64_t v61 = a3[16];
  uint64_t v62 = a3[17];
  uint64_t v63 = a1 + v61;
  uint64_t v64 = a2 + v61;
  *(unsigned char *)uint64_t v63 = *(unsigned char *)v64;
  *(unsigned char *)(v63 + 24) = *(unsigned char *)(v64 + 24);
  uint64_t v65 = *(void **)(v64 + 8);
  uint64_t v66 = *(void **)(v64 + 16);
  *(void *)(v63 + 8) = v65;
  *(void *)(v63 + 16) = v66;
  *(void *)(a1 + v62) = *(void *)(a2 + v62);
  uint64_t v67 = a3[18];
  uint64_t v68 = a3[19];
  uint64_t v69 = *(void **)(a2 + v67);
  *(void *)(a1 + v67) = v69;
  *(unsigned char *)(a1 + v68) = *(unsigned char *)(a2 + v68);
  id v70 = v65;
  id v71 = v66;
  id v72 = v69;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v7 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v7;
  id v8 = v7;

  uint64_t v9 = *(void **)(a2 + 24);
  uint64_t v10 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v9;
  id v11 = v9;

  uint64_t v12 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v13 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v13;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v14 = *(void **)(a1 + 112);
  id v15 = *(void **)(a2 + 112);
  *(void *)(a1 + 112) = v15;
  id v16 = v15;

  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v17 = *(void **)(a2 + 136);
  id v18 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = v17;
  id v19 = v17;

  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  long long v20 = *(void **)(a1 + 176);
  uint64_t v21 = *(void **)(a2 + 176);
  *(void *)(a1 + 176) = v21;
  id v22 = v21;

  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v23 = (_OWORD *)(a1 + 192);
  long long v24 = (_OWORD *)(a2 + 192);
  uint64_t v25 = *(void **)(a1 + 200);
  uint64_t v26 = *(void *)(a2 + 200);
  if (v25 == (void *)1)
  {
    if (v26 == 1)
    {
      long long v27 = *(_OWORD *)(a2 + 208);
      *uint64_t v23 = *v24;
      *(_OWORD *)(a1 + 208) = v27;
    }
    else
    {
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      id v29 = *(void **)(a2 + 200);
      *(void *)(a1 + 200) = v29;
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      id v30 = v29;
      swift_bridgeObjectRetain();
    }
  }
  else if (v26 == 1)
  {
    sub_100C3333C(a1 + 192);
    long long v28 = *(_OWORD *)(a2 + 208);
    *uint64_t v23 = *v24;
    *(_OWORD *)(a1 + 208) = v28;
  }
  else
  {
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    id v31 = *(void **)(a2 + 200);
    *(void *)(a1 + 200) = v31;
    id v32 = v31;

    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  id v33 = (long long *)(a1 + 224);
  uint64_t v34 = *(void **)(a1 + 224);
  uint64_t v36 = (long long *)(a2 + 224);
  uint64_t v35 = *(void **)(a2 + 224);
  if (v34 == (void *)1)
  {
    if (v35 == (void *)1)
    {
      long long v37 = *v36;
      long long v38 = *(_OWORD *)(a2 + 256);
      *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 256) = v38;
      *id v33 = v37;
    }
    else
    {
      *(void *)(a1 + 224) = v35;
      uint64_t v41 = *(void **)(a2 + 232);
      *(void *)(a1 + 232) = v41;
      uint64_t v42 = *(void **)(a2 + 240);
      *(void *)(a1 + 240) = v42;
      *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      id v43 = v35;
      id v44 = v41;
      id v45 = v42;
      swift_bridgeObjectRetain();
    }
  }
  else if (v35 == (void *)1)
  {
    sub_100C33370((id *)(a1 + 224));
    long long v40 = *(_OWORD *)(a2 + 240);
    long long v39 = *(_OWORD *)(a2 + 256);
    *id v33 = *v36;
    *(_OWORD *)(a1 + 240) = v40;
    *(_OWORD *)(a1 + 256) = v39;
  }
  else
  {
    *(void *)(a1 + 224) = v35;
    id v46 = v35;

    long long v47 = *(void **)(a1 + 232);
    uint64_t v48 = *(void **)(a2 + 232);
    *(void *)(a1 + 232) = v48;
    id v49 = v48;

    uint64_t v50 = *(void **)(a1 + 240);
    uint64_t v51 = *(void **)(a2 + 240);
    *(void *)(a1 + 240) = v51;
    id v52 = v51;

    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  uint64_t v53 = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  *(void *)(a1 + 272) = v53;
  uint64_t v54 = *(void **)(a2 + 288);
  uint64_t v55 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = v54;
  id v56 = v54;

  uint64_t v57 = a3[9];
  uint64_t v58 = (void *)(a1 + v57);
  uint64_t v59 = (void *)(a2 + v57);
  uint64_t v60 = type metadata accessor for UIView.Corner();
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
  int v63 = v62(v58, 1, v60);
  int v64 = v62(v59, 1, v60);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(void *, void *, uint64_t))(v61 + 16))(v58, v59, v60);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v64)
  {
    (*(void (**)(void *, uint64_t))(v61 + 8))(v58, v60);
LABEL_20:
    uint64_t v65 = sub_100063814(&qword_1010D0AB0);
    memcpy(v58, v59, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v61 + 24))(v58, v59, v60);
LABEL_21:
  uint64_t v66 = a3[10];
  uint64_t v67 = a1 + v66;
  uint64_t v68 = (long long *)(a2 + v66);
  uint64_t v69 = *(void **)(a1 + v66);
  id v70 = *(void **)(a2 + v66);
  if (v69)
  {
    if (v70)
    {
      *(void *)uint64_t v67 = v70;
      id v71 = v70;

      *(void *)(v67 + 8) = *((void *)v68 + 1);
      *(void *)(v67 + 16) = *((void *)v68 + 2);
      *(void *)(v67 + 24) = *((void *)v68 + 3);
      *(void *)(v67 + 32) = *((void *)v68 + 4);
      *(void *)(v67 + 40) = *((void *)v68 + 5);
      id v72 = *(void **)(v67 + 48);
      id v73 = (void *)*((void *)v68 + 6);
      *(void *)(v67 + 48) = v73;
      id v74 = v73;
    }
    else
    {
      sub_100C333A0((id *)v67);
      long long v80 = v68[1];
      long long v79 = v68[2];
      long long v81 = *v68;
      *(void *)(v67 + 48) = *((void *)v68 + 6);
      *(_OWORD *)(v67 + 16) = v80;
      *(_OWORD *)(v67 + 32) = v79;
      *(_OWORD *)uint64_t v67 = v81;
    }
  }
  else if (v70)
  {
    *(void *)uint64_t v67 = v70;
    long long v75 = *(long long *)((char *)v68 + 8);
    *(_OWORD *)(v67 + 24) = *(long long *)((char *)v68 + 24);
    *(_OWORD *)(v67 + 8) = v75;
    *(void *)(v67 + 40) = *((void *)v68 + 5);
    uint64_t v76 = (void *)*((void *)v68 + 6);
    *(void *)(v67 + 48) = v76;
    id v77 = v70;
    id v78 = v76;
  }
  else
  {
    long long v82 = *v68;
    long long v83 = v68[1];
    long long v84 = v68[2];
    *(void *)(v67 + 48) = *((void *)v68 + 6);
    *(_OWORD *)(v67 + 16) = v83;
    *(_OWORD *)(v67 + 32) = v84;
    *(_OWORD *)uint64_t v67 = v82;
  }
  uint64_t v85 = a3[11];
  uint64_t v86 = a1 + v85;
  uint64_t v87 = (long long *)(a2 + v85);
  uint64_t v88 = *(void **)(a1 + v85 + 16);
  uint64_t v89 = *(void *)(a2 + v85 + 16);
  if (v88 == (void *)1)
  {
    if (v89 == 1)
    {
      long long v90 = *v87;
      *(void *)(v86 + 16) = *((void *)v87 + 2);
      *(_OWORD *)uint64_t v86 = v90;
    }
    else
    {
      *(void *)uint64_t v86 = *(void *)v87;
      *(void *)(v86 + 8) = *((void *)v87 + 1);
      uint64_t v92 = (void *)*((void *)v87 + 2);
      *(void *)(v86 + 16) = v92;
      id v93 = v92;
    }
  }
  else if (v89 == 1)
  {
    sub_100C333D4(v86);
    uint64_t v91 = *((void *)v87 + 2);
    *(_OWORD *)uint64_t v86 = *v87;
    *(void *)(v86 + 16) = v91;
  }
  else
  {
    *(void *)uint64_t v86 = *(void *)v87;
    *(void *)(v86 + 8) = *((void *)v87 + 1);
    uint64_t v94 = (void *)*((void *)v87 + 2);
    *(void *)(v86 + 16) = v94;
    id v95 = v94;
  }
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  uint64_t v96 = a3[13];
  uint64_t v97 = (void *)(a1 + v96);
  uint64_t v98 = (void *)(a2 + v96);
  *uint64_t v97 = *v98;
  v97[1] = v98[1];
  uint64_t v99 = a3[14];
  uint64_t v100 = a1 + v99;
  uint64_t v101 = (long long *)(a2 + v99);
  long long v102 = *v101;
  *(unsigned char *)(v100 + 16) = *((unsigned char *)v101 + 16);
  *(_OWORD *)uint64_t v100 = v102;
  uint64_t v103 = a3[15];
  uint64_t v104 = (void *)(a1 + v103);
  uint64_t v105 = (void *)(a2 + v103);
  *uint64_t v104 = *v105;
  v104[1] = v105[1];
  v104[2] = v105[2];
  v104[3] = v105[3];
  uint64_t v106 = a3[16];
  uint64_t v107 = a1 + v106;
  uint64_t v108 = a2 + v106;
  *(unsigned char *)uint64_t v107 = *(unsigned char *)(a2 + v106);
  uint64_t v109 = *(void **)(a1 + v106 + 8);
  double v110 = *(void **)(a2 + v106 + 8);
  *(void *)(v107 + 8) = v110;
  id v111 = v110;

  double v112 = *(void **)(v107 + 16);
  uint64_t v113 = *(void **)(v108 + 16);
  *(void *)(v107 + 16) = v113;
  id v114 = v113;

  *(unsigned char *)(v107 + 24) = *(unsigned char *)(v108 + 24);
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  uint64_t v115 = a3[18];
  double v116 = *(void **)(a1 + v115);
  double v117 = *(void **)(a2 + v115);
  *(void *)(a1 + v115) = v117;
  id v118 = v117;

  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  return a1;
}

uint64_t sub_100C3333C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

id *sub_100C33370(id *a1)
{
  return a1;
}

id *sub_100C333A0(id *a1)
{
  return a1;
}

uint64_t sub_100C333D4(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  long long v9 = *(_OWORD *)(a2 + 136);
  long long v10 = *(_OWORD *)(a2 + 152);
  long long v11 = *(_OWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = v11;
  *(_OWORD *)(a1 + 152) = v10;
  *(_OWORD *)(a1 + 136) = v9;
  long long v12 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v12;
  long long v13 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v13;
  long long v14 = *(_OWORD *)(a2 + 256);
  long long v15 = *(_OWORD *)(a2 + 272);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  uint64_t v16 = a3[9];
  id v17 = (void *)(a1 + v16);
  id v18 = (const void *)(a2 + v16);
  *(_OWORD *)(a1 + 256) = v14;
  *(_OWORD *)(a1 + 272) = v15;
  uint64_t v19 = type metadata accessor for UIView.Corner();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = sub_100063814(&qword_1010D0AB0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v22 = a3[10];
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v22;
  uint64_t v25 = a2 + v22;
  long long v26 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v26;
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(void *)(v24 + 48) = *(void *)(v25 + 48);
  uint64_t v27 = a1 + v23;
  uint64_t v28 = a2 + v23;
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(void *)(v27 + 16) = *(void *)(v28 + 16);
  uint64_t v29 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v29) = *(_OWORD *)(a2 + v29);
  uint64_t v30 = a3[14];
  uint64_t v31 = a3[15];
  uint64_t v32 = a1 + v30;
  uint64_t v33 = a2 + v30;
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
  uint64_t v34 = (_OWORD *)(a1 + v31);
  uint64_t v35 = (_OWORD *)(a2 + v31);
  long long v36 = v35[1];
  _OWORD *v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = a3[16];
  uint64_t v38 = a3[17];
  long long v39 = (_OWORD *)(a1 + v37);
  long long v40 = (_OWORD *)(a2 + v37);
  *long long v39 = *v40;
  *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)((char *)v40 + 9);
  *(void *)(a1 + v38) = *(void *)(a2 + v38);
  uint64_t v41 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v41) = *(unsigned char *)(a2 + v41);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Configuration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  long long v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  long long v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  long long v11 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);

  uint64_t v12 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v12;
  swift_bridgeObjectRelease();
  long long v13 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);

  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  long long v15 = *(void **)(a1 + 176);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);

  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  uint64_t v16 = *(void **)(a1 + 200);
  if (v16 == (void *)1) {
    goto LABEL_4;
  }
  uint64_t v17 = *(void *)(a2 + 200);
  if (v17 == 1)
  {
    sub_100C3333C(a1 + 192);
LABEL_4:
    long long v18 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v18;
    goto LABEL_6;
  }
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v17;

  uint64_t v19 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v20 = *(void **)(a1 + 224);
  uint64_t v21 = *(void *)(a2 + 224);
  if (v20 == (void *)1)
  {
LABEL_9:
    long long v22 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v22;
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    goto LABEL_11;
  }
  if (v21 == 1)
  {
    sub_100C33370((id *)(a1 + 224));
    goto LABEL_9;
  }
  *(void *)(a1 + 224) = v21;

  uint64_t v23 = *(void **)(a1 + 232);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);

  uint64_t v24 = *(void **)(a1 + 240);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);

  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  uint64_t v25 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v25;
  swift_bridgeObjectRelease();
LABEL_11:
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  long long v26 = *(void **)(a1 + 288);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);

  uint64_t v27 = a3[9];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  uint64_t v30 = type metadata accessor for UIView.Corner();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, void *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
LABEL_16:
    uint64_t v35 = sub_100063814(&qword_1010D0AB0);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v31 + 40))(v28, v29, v30);
LABEL_17:
  uint64_t v36 = a3[10];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  long long v39 = *(void **)(a1 + v36);
  if (v39)
  {
    if (*(void *)v38)
    {
      *(void *)uint64_t v37 = *(void *)v38;

      *(_OWORD *)(v37 + 8) = *(_OWORD *)(v38 + 8);
      *(_OWORD *)(v37 + 24) = *(_OWORD *)(v38 + 24);
      *(void *)(v37 + 40) = *(void *)(v38 + 40);
      long long v40 = *(void **)(v37 + 48);
      *(void *)(v37 + 48) = *(void *)(v38 + 48);

      goto LABEL_22;
    }
    sub_100C333A0((id *)v37);
  }
  long long v41 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v41;
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  *(void *)(v37 + 48) = *(void *)(v38 + 48);
LABEL_22:
  uint64_t v42 = a3[11];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  id v45 = *(void **)(a1 + v42 + 16);
  if (v45 != (void *)1)
  {
    uint64_t v46 = *(void *)(v44 + 16);
    if (v46 != 1)
    {
      *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
      *(void *)(v43 + 16) = v46;

      goto LABEL_27;
    }
    sub_100C333D4(v43);
  }
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  *(void *)(v43 + 16) = *(void *)(v44 + 16);
LABEL_27:
  uint64_t v47 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v47) = *(_OWORD *)(a2 + v47);
  uint64_t v48 = a3[14];
  uint64_t v49 = a3[15];
  uint64_t v50 = a1 + v48;
  uint64_t v51 = a2 + v48;
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *(unsigned char *)(v50 + 16) = *(unsigned char *)(v51 + 16);
  id v52 = (_OWORD *)(a1 + v49);
  uint64_t v53 = (_OWORD *)(a2 + v49);
  long long v54 = v53[1];
  *id v52 = *v53;
  v52[1] = v54;
  uint64_t v55 = a3[16];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  *(unsigned char *)uint64_t v56 = *(unsigned char *)(a2 + v55);
  uint64_t v58 = *(void **)(a1 + v55 + 8);
  *(void *)(v56 + 8) = *(void *)(v57 + 8);

  uint64_t v59 = *(void **)(v56 + 16);
  *(void *)(v56 + 16) = *(void *)(v57 + 16);

  *(unsigned char *)(v56 + 24) = *(unsigned char *)(v57 + 24);
  uint64_t v60 = a3[18];
  *(void *)(a1 + a3[17]) = *(void *)(a2 + a3[17]);
  uint64_t v61 = *(void **)(a1 + v60);
  *(void *)(a1 + v60) = *(void *)(a2 + v60);

  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Configuration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C33AF8);
}

uint64_t sub_100C33AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100063814(&qword_1010D0AB0);
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Configuration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C33BC0);
}

uint64_t sub_100C33BC0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100063814(&qword_1010D0AB0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100C33C6C()
{
  sub_100C33DA8(319, (unint64_t *)&qword_1010D0C20, (void (*)(uint64_t))&type metadata accessor for UIView.Corner);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100C33DA8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void destroy for SymbolButton.Configuration.Accessibility(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t initializeWithCopy for SymbolButton.Configuration.Accessibility(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void **)(a2 + 8);
  unint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Configuration.Accessibility(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unint64_t v4 = *(void **)(a1 + 8);
  id v5 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v5;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 16);
  uint64_t v8 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v8;
  id v9 = v8;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Configuration.Accessibility(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;

  unint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Configuration.Accessibility(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Configuration.Accessibility(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Configuration.Accessibility()
{
  return &type metadata for SymbolButton.Configuration.Accessibility;
}

void destroy for SymbolButton.Symbol(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 112);
}

uint64_t initializeWithCopy for SymbolButton.Symbol(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  int v4 = *(void **)(a2 + 16);
  id v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  uint64_t v8 = *(void **)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  swift_bridgeObjectRetain();
  id v9 = v4;
  id v10 = v5;
  swift_bridgeObjectRetain();
  id v11 = v8;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Symbol(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(void **)(a1 + 16);
  id v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  uint64_t v7 = *(void **)(a2 + 24);
  uint64_t v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  uint64_t v10 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v11 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v11;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v12 = *(void **)(a1 + 112);
  long long v13 = *(void **)(a2 + 112);
  *(void *)(a1 + 112) = v13;
  id v14 = v13;

  return a1;
}

uint64_t assignWithTake for SymbolButton.Symbol(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  int v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  uint64_t v8 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);

  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Symbol()
{
  return &type metadata for SymbolButton.Symbol;
}

void destroy for SymbolButton.Title(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 56);
}

uint64_t initializeWithCopy for SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  int v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  long long v6 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  id v7 = v4;
  swift_bridgeObjectRetain();
  id v8 = v6;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  id v7 = *(void **)(a1 + 56);
  id v8 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v8;
  id v9 = v8;

  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for SymbolButton.Title(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  int v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  id v6 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Title(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Title(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Title()
{
  return &type metadata for SymbolButton.Title;
}

uint64_t destroy for SymbolButton.Background(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SymbolButton.Background(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SymbolButton.Background(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)a1[1];
  id v5 = (void *)a2[1];
  a1[1] = v5;
  id v6 = v5;

  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SymbolButton.Background(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = (void *)a1[1];
  a1[1] = a2[1];

  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Background()
{
  return &type metadata for SymbolButton.Background;
}

uint64_t destroy for SymbolButton.Material(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SymbolButton.Material(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Material(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  id v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  uint64_t v10 = *(void **)(a1 + 16);
  long long v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SymbolButton.Material(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11MusicCoreUI12SymbolButtonC8MaterialVwet_0(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s11MusicCoreUI12SymbolButtonC8MaterialVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Material()
{
  return &type metadata for SymbolButton.Material;
}

ValueMetadata *type metadata accessor for SymbolButton.Material.Color()
{
  return &type metadata for SymbolButton.Material.Color;
}

void destroy for SymbolButton.CustomView(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 48);
}

uint64_t initializeWithCopy for SymbolButton.CustomView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  int v4 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for SymbolButton.CustomView(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v7 = *(void **)(a1 + 48);
  id v8 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for SymbolButton.CustomView(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  id v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.CustomView()
{
  return &type metadata for SymbolButton.CustomView;
}

uint64_t initializeBufferWithCopyOfBuffer for SymbolButton.Badge(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v3;
  id v4 = v3;
  return a1;
}

void *assignWithCopy for SymbolButton.Badge(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v3 = (void *)a1[2];
  id v4 = (void *)a2[2];
  a1[2] = v4;
  id v5 = v4;

  return a1;
}

uint64_t assignWithTake for SymbolButton.Badge(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Badge()
{
  return &type metadata for SymbolButton.Badge;
}

uint64_t type metadata accessor for SymbolButton.ImageView()
{
  return self;
}

uint64_t type metadata accessor for SymbolButton.BadgeView()
{
  return self;
}

void **sub_100C34B60(void **a1, void **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  id v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    id v7 = a1;
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UIView.Corner();
    uint64_t v12 = *(void *)(v11 - 8);
    long long v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    id v14 = v4;
    if (v13(v10, 1, v11))
    {
      uint64_t v15 = sub_100063814(&qword_1010D0AB0);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    long long v18 = *(void **)((char *)a2 + v16);
    *(void **)((char *)v7 + v16) = v18;
    uint64_t v19 = *(void **)((char *)a2 + v17);
    *(void **)((char *)v7 + v17) = v19;
    uint64_t v20 = a3[9];
    *(void **)((char *)v7 + a3[8]) = *(void **)((char *)a2 + a3[8]);
    *(_OWORD *)((char *)v7 + v20) = *(_OWORD *)((char *)a2 + v20);
    uint64_t v21 = a3[11];
    *(_OWORD *)((char *)v7 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
    long long v22 = (char *)v7 + v21;
    uint64_t v23 = (char *)a2 + v21;
    *(_OWORD *)long long v22 = *(_OWORD *)v23;
    v22[16] = v23[16];
    uint64_t v24 = a3[12];
    uint64_t v25 = a3[13];
    long long v26 = (_OWORD *)((char *)v7 + v24);
    uint64_t v27 = (_OWORD *)((char *)a2 + v24);
    long long v28 = v27[1];
    *long long v26 = *v27;
    v26[1] = v28;
    *((unsigned char *)v7 + v25) = *((unsigned char *)a2 + v25);
    id v29 = v18;
    id v30 = v19;
  }
  return v7;
}

void sub_100C34D60(id *a1, int *a2)
{
  id v4 = (char *)a1 + a2[5];
  uint64_t v5 = type metadata accessor for UIView.Corner();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }

  id v7 = *(id *)((char *)a1 + a2[7]);
}

void **sub_100C34E3C(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  id v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UIView.Corner();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v6;
  if (v12(v9, 1, v10))
  {
    uint64_t v14 = sub_100063814(&qword_1010D0AB0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = *(void **)((char *)a2 + v15);
  *(void **)((char *)a1 + v15) = v17;
  long long v18 = *(void **)((char *)a2 + v16);
  *(void **)((char *)a1 + v16) = v18;
  uint64_t v19 = a3[9];
  *(void **)((char *)a1 + a3[8]) = *(void **)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  uint64_t v20 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  uint64_t v21 = (char *)a1 + v20;
  long long v22 = (char *)a2 + v20;
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  unsigned char v21[16] = v22[16];
  uint64_t v23 = a3[12];
  uint64_t v24 = a3[13];
  uint64_t v25 = (_OWORD *)((char *)a1 + v23);
  long long v26 = (_OWORD *)((char *)a2 + v23);
  long long v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  *((unsigned char *)a1 + v24) = *((unsigned char *)a2 + v24);
  id v28 = v17;
  id v29 = v18;
  return a1;
}

void **sub_100C34FDC(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = *a2;
  *a1 = *a2;
  id v8 = v7;

  uint64_t v9 = a3[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for UIView.Corner();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_100063814(&qword_1010D0AB0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[6];
  uint64_t v19 = *(void **)((char *)a2 + v18);
  uint64_t v20 = *(void **)((char *)a1 + v18);
  *(void **)((char *)a1 + v18) = v19;
  id v21 = v19;

  uint64_t v22 = a3[7];
  uint64_t v23 = *(void **)((char *)a2 + v22);
  uint64_t v24 = *(void **)((char *)a1 + v22);
  *(void **)((char *)a1 + v22) = v23;
  id v25 = v23;

  *(void **)((char *)a1 + a3[8]) = *(void **)((char *)a2 + a3[8]);
  uint64_t v26 = a3[9];
  long long v27 = (void **)((char *)a1 + v26);
  id v28 = (void **)((char *)a2 + v26);
  *long long v27 = *v28;
  v27[1] = v28[1];
  uint64_t v29 = a3[10];
  id v30 = (void **)((char *)a1 + v29);
  uint64_t v31 = (void **)((char *)a2 + v29);
  void *v30 = *v31;
  v30[1] = v31[1];
  uint64_t v32 = a3[11];
  int v33 = (char *)a1 + v32;
  int v34 = (char *)a2 + v32;
  long long v35 = *(_OWORD *)v34;
  v33[16] = v34[16];
  *(_OWORD *)int v33 = v35;
  uint64_t v36 = a3[12];
  uint64_t v37 = (void **)((char *)a1 + v36);
  uint64_t v38 = (void **)((char *)a2 + v36);
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  v37[2] = v38[2];
  v37[3] = v38[3];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  return a1;
}

void *sub_100C35238(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UIView.Corner();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100063814(&qword_1010D0AB0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  uint64_t v14 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  int v15 = (char *)a1 + v14;
  int v16 = (char *)a2 + v14;
  *(_OWORD *)int v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  uint64_t v17 = a3[12];
  uint64_t v18 = a3[13];
  uint64_t v19 = (_OWORD *)((char *)a1 + v17);
  uint64_t v20 = (_OWORD *)((char *)a2 + v17);
  long long v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
  return a1;
}

void **sub_100C353C4(void **a1, void **a2, int *a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = a3[5];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UIView.Corner();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_100063814(&qword_1010D0AB0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = a3[6];
  uint64_t v17 = *(void **)((char *)a1 + v16);
  *(void **)((char *)a1 + v16) = *(void **)((char *)a2 + v16);

  uint64_t v18 = a3[7];
  uint64_t v19 = *(void **)((char *)a1 + v18);
  *(void **)((char *)a1 + v18) = *(void **)((char *)a2 + v18);

  uint64_t v20 = a3[9];
  *(void **)((char *)a1 + a3[8]) = *(void **)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
  uint64_t v21 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  v22[16] = v23[16];
  uint64_t v24 = a3[12];
  uint64_t v25 = a3[13];
  uint64_t v26 = (_OWORD *)((char *)a1 + v24);
  long long v27 = (_OWORD *)((char *)a2 + v24);
  long long v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
  return a1;
}

uint64_t sub_100C355D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C355E4);
}

uint64_t sub_100C355E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100063814(&qword_1010D0AB0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_100C356AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C356C0);
}

uint64_t sub_100C356C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100063814(&qword_1010D0AB0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

void sub_100C35784()
{
  sub_100C33DA8(319, (unint64_t *)&qword_1010D0C20, (void (*)(uint64_t))&type metadata accessor for UIView.Corner);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100C35884()
{
  unint64_t result = qword_1010D0E78;
  if (!qword_1010D0E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0E78);
  }
  return result;
}

unint64_t sub_100C358DC()
{
  unint64_t result = qword_1010D0EB0;
  if (!qword_1010D0EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0EB0);
  }
  return result;
}

unint64_t sub_100C35934()
{
  unint64_t result = qword_1010D0EE8;
  if (!qword_1010D0EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0EE8);
  }
  return result;
}

unint64_t sub_100C3598C()
{
  unint64_t result = qword_1010D0F20;
  if (!qword_1010D0F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0F20);
  }
  return result;
}

void sub_100C359E0()
{
  uint64_t v1 = OBJC_IVAR____TtCC11MusicCoreUI12SymbolButtonP33_0D6450BB937596549C350B7D294A2A939BadgeView_punchOutView;
  id v2 = [objc_allocWithZone((Class)UIView) init];
  id v3 = [self blackColor];
  [v2 setBackgroundColor:v3];

  id v4 = [v2 layer];
  [v4 setCompositingFilter:kCAFilterDestOut];

  *(void *)&v0[v1] = v2;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100C35AE4()
{
  return swift_deallocObject();
}

id sub_100C35B1C(uint64_t a1)
{
  return sub_100C2B0C0(a1, *(id *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_100C35B2C()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_100C35B5C()
{
  return swift_deallocObject();
}

id sub_100C35B94()
{
  return sub_100C27088(*(void *)(v0 + 16), 1.0);
}

id sub_100C35BB4()
{
  return sub_100C27088(*(void *)(v0 + 16), 0.95);
}

id sub_100C35BDC(int a1)
{
  return sub_100C270E8(a1, *(id *)(v1 + 16));
}

uint64_t sub_100C35BE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100C35C4C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 16);
  id v3 = *(id *)(a1 + 56);
  swift_bridgeObjectRetain();
  id v4 = v2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100C35C9C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 56);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_100C35CEC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 16);
  id v3 = *(void **)(a1 + 24);
  id v4 = *(id *)(a1 + 112);
  swift_bridgeObjectRetain();
  id v5 = v2;
  id v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100C35D4C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 16);
  id v3 = *(void **)(a1 + 112);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_100C35DAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100C35DF4(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    id v5 = result;
    return (void *)sub_10007B674(a4);
  }
  return result;
}

void *sub_100C35E3C(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {

    return (void *)sub_10006ADFC(a4);
  }
  return result;
}

uint64_t sub_100C35E84()
{
  uint64_t v1 = (int *)type metadata accessor for SymbolButton.Configuration(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v26 = v0;
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  id v6 = *(void **)(v0 + v3 + 200);
  if (v6 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v7 = *(void **)(v5 + 224);
  if (v7 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v4 + v2;

  uint64_t v9 = v5 + v1[9];
  uint64_t v10 = type metadata accessor for UIView.Corner();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v12(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v13 = v8 + v3;
  int v14 = (id *)(v5 + v1[10]);
  if (*v14)
  {
  }
  uint64_t v15 = v13 & ~v2;
  uint64_t v16 = *(void **)(v5 + v1[11] + 16);
  if (v16 != (void *)1) {

  }
  uint64_t v17 = v5 + v1[16];
  uint64_t v18 = v26 + v15;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v19 = *(void **)(v26 + v15 + 200);
  if (v19 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *(void **)(v18 + 224);
  if (v20 != (void *)1)
  {

    swift_bridgeObjectRelease();
  }

  uint64_t v21 = v18 + v1[9];
  if (!v12(v21, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v21, v10);
  }
  uint64_t v22 = (id *)(v18 + v1[10]);
  if (*v22)
  {
  }
  uint64_t v23 = *(void **)(v18 + v1[11] + 16);
  if (v23 != (void *)1) {

  }
  uint64_t v24 = v18 + v1[16];
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100C36218()
{
  uint64_t v1 = *(void *)(type metadata accessor for SymbolButton.Configuration(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  id v6 = *(char **)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + ((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100C22A58(v6, v0 + v3, v0 + v5, v7);
}

uint64_t sub_100C362B8()
{
  return sub_100C362DC();
}

id sub_100C362C0()
{
  return [*(id *)(v0 + 16) setAlpha:*(double *)(v0 + 56)];
}

uint64_t sub_100C362D4()
{
  return sub_100C362DC();
}

uint64_t sub_100C362DC()
{
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return swift_deallocObject();
}

id sub_100C36330()
{
  double v1 = *(double *)(v0 + 24);
  if (*(unsigned char *)(v0 + 32)) {
    double v1 = 0.0;
  }
  return [*(id *)(v0 + 16) setAlpha:v1];
}

id sub_100C36358(id result, void *a2, void *a3)
{
  if (result != (id)1)
  {
    uint64_t v5 = result;
    swift_bridgeObjectRetain();
    id v6 = v5;
    id v7 = a2;
    return a3;
  }
  return result;
}

uint64_t sub_100C363B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *_s11MusicCoreUI12SymbolButtonC8MaterialV5ColorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100C364ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Animation.TransitionStyle()
{
  return &type metadata for SymbolButton.Animation.TransitionStyle;
}

void destroy for SymbolButton.Transition(uint64_t a1)
{
  if (*(void *)a1)
  {

    if (*(void *)(a1 + 24)) {
      swift_release();
    }
  }
  uint64_t v2 = *(void **)(a1 + 40);
  if (v2)
  {

    if (*(void *)(a1 + 64))
    {
      swift_release();
    }
  }
}

uint64_t initializeWithCopy for SymbolButton.Transition(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  if (*(void *)a2)
  {
    uint64_t v5 = (_OWORD *)(a2 + 24);
    uint64_t v6 = *(void *)(a2 + 24);
    uint64_t v7 = *(void *)(a2 + 8);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    id v8 = v4;
    if (v6)
    {
      uint64_t v9 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = v9;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 24) = *v5;
    }
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  uint64_t v11 = *(void **)(a2 + 40);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v13;
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    id v14 = v11;
    if (v12)
    {
      uint64_t v15 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v12;
      *(void *)(a1 + 72) = v15;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    }
  }
  else
  {
    long long v16 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v16;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Transition(uint64_t a1, long long *a2)
{
  unsigned int v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1)
  {
    if (!v5)
    {
      sub_100C368C4(a1);
      uint64_t v16 = *((void *)a2 + 4);
      long long v17 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v17;
      *(void *)(a1 + 32) = v16;
      goto LABEL_17;
    }
    *(void *)a1 = v5;
    id v6 = v5;

    uint64_t v7 = *((void *)a2 + 1);
    uint64_t v8 = *(void *)(a1 + 24);
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 8) = v7;
    uint64_t v9 = *((void *)a2 + 3);
    if (v8)
    {
      if (v9)
      {
        uint64_t v10 = *((void *)a2 + 4);
        *(void *)(a1 + 24) = v9;
        *(void *)(a1 + 32) = v10;
        swift_retain();
        swift_release();
        goto LABEL_17;
      }
      swift_release();
      goto LABEL_15;
    }
    if (!v9)
    {
LABEL_15:
      *(_OWORD *)(a1 + 24) = *(long long *)((char *)a2 + 24);
      goto LABEL_17;
    }
    uint64_t v15 = *((void *)a2 + 4);
    *(void *)(a1 + 24) = v9;
LABEL_12:
    *(void *)(a1 + 32) = v15;
    swift_retain();
    goto LABEL_17;
  }
  if (!v5)
  {
    long long v18 = *a2;
    long long v19 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v18;
    *(_OWORD *)(a1 + 16) = v19;
    goto LABEL_17;
  }
  *(void *)a1 = v5;
  uint64_t v11 = *((void *)a2 + 1);
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(void *)(a1 + 8) = v11;
  uint64_t v13 = (long long *)((char *)a2 + 24);
  uint64_t v12 = *((void *)a2 + 3);
  id v14 = v5;
  if (v12)
  {
    uint64_t v15 = *((void *)a2 + 4);
    *(void *)(a1 + 24) = v12;
    goto LABEL_12;
  }
  *(_OWORD *)(a1 + 24) = *v13;
LABEL_17:
  uint64_t v20 = (long long *)(a1 + 40);
  uint64_t v21 = *(void **)(a1 + 40);
  uint64_t v23 = (long long *)((char *)a2 + 40);
  uint64_t v22 = (void *)*((void *)a2 + 5);
  if (!v21)
  {
    if (!v22)
    {
      long long v35 = *v23;
      long long v36 = *(long long *)((char *)a2 + 56);
      *(void *)(a1 + 72) = *((void *)a2 + 9);
      *(_OWORD *)(a1 + 56) = v36;
LABEL_32:
      *uint64_t v20 = v35;
      goto LABEL_34;
    }
    *(void *)(a1 + 40) = v22;
    uint64_t v29 = *((void *)a2 + 6);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    *(void *)(a1 + 48) = v29;
    uint64_t v30 = *((void *)a2 + 8);
    id v31 = v22;
    if (!v30)
    {
      *(_OWORD *)(a1 + 64) = a2[4];
      goto LABEL_34;
    }
    uint64_t v32 = *((void *)a2 + 9);
    *(void *)(a1 + 64) = v30;
    goto LABEL_28;
  }
  if (!v22)
  {
    sub_100C368C4(a1 + 40);
    uint64_t v33 = *((void *)a2 + 9);
    long long v34 = *(long long *)((char *)a2 + 56);
    *uint64_t v20 = *v23;
    *(_OWORD *)(a1 + 56) = v34;
    *(void *)(a1 + 72) = v33;
    goto LABEL_34;
  }
  *(void *)(a1 + 40) = v22;
  id v24 = v22;

  uint64_t v25 = *((void *)a2 + 6);
  uint64_t v20 = (long long *)(a1 + 64);
  uint64_t v26 = *(void *)(a1 + 64);
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v25;
  uint64_t v27 = *((void *)a2 + 8);
  if (!v26)
  {
    if (!v27)
    {
LABEL_31:
      long long v35 = a2[4];
      goto LABEL_32;
    }
    uint64_t v32 = *((void *)a2 + 9);
    *(void *)(a1 + 64) = v27;
LABEL_28:
    *(void *)(a1 + 72) = v32;
    swift_retain();
    goto LABEL_34;
  }
  if (!v27)
  {
    swift_release();
    goto LABEL_31;
  }
  uint64_t v28 = *((void *)a2 + 9);
  *(void *)(a1 + 64) = v27;
  *(void *)(a1 + 72) = v28;
  swift_retain();
  swift_release();
LABEL_34:
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  return a1;
}

uint64_t sub_100C368C4(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for SymbolButton.Transition(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SymbolButton.Transition(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  if (!*(void *)a1) {
    goto LABEL_7;
  }
  if (!*(void *)a2)
  {
    sub_100C368C4(a1);
LABEL_7:
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    goto LABEL_8;
  }
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 24);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (v6)
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v16 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = v16;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  uint64_t v9 = *(void **)(a1 + 40);
  uint64_t v10 = *(void *)(a2 + 40);
  if (!v9)
  {
LABEL_14:
    long long v14 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v14;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    goto LABEL_15;
  }
  if (!v10)
  {
    sub_100C368C4(a1 + 40);
    goto LABEL_14;
  }
  *(void *)(a1 + 40) = v10;

  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a1 + 64);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  if (!v12)
  {
    if (v11)
    {
      uint64_t v17 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v11;
      *(void *)(a1 + 72) = v17;
      goto LABEL_15;
    }
LABEL_23:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_15;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_23;
  }
  uint64_t v13 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  swift_release();
LABEL_15:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolButton.Transition(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 81)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolButton.Transition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolButton.Transition()
{
  return &type metadata for SymbolButton.Transition;
}

void destroy for SymbolButton.Transition.View(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for SymbolButton.Transition.View(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = (_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 24);
  id v8 = v4;
  if (v6)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for SymbolButton.Transition.View(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a1 + 24);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v7;
  uint64_t v9 = *(void *)(a2 + 24);
  if (!v8)
  {
    if (v9)
    {
      uint64_t v11 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v9;
      *(void *)(a1 + 32) = v11;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v9)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v10 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SymbolButton.Transition.View(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 24);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  if (!v6)
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v7;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SymbolButton.Transition.View()
{
  return &type metadata for SymbolButton.Transition.View;
}

unint64_t sub_100C36D68()
{
  unint64_t result = qword_1010D0FE8;
  if (!qword_1010D0FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0FE8);
  }
  return result;
}

void *sub_100C36E24(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100AFC2AC(0, v1, 0);
    uint64_t v3 = (void *)(a1 + 56);
    do
    {
      uint64_t v4 = *(v3 - 3);
      uint64_t v5 = *(v3 - 2);
      char v6 = *((unsigned char *)v3 - 8);
      uint64_t v7 = *v3;
      sub_1001CC8D0(v4, v5, v6);
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1) {
        sub_100AFC2AC((char *)(v9 > 1), v8 + 1, 1);
      }
      v3 += 6;
      _swiftEmptyArrayStorage[2] = v8 + 1;
      uint64_t v10 = &_swiftEmptyArrayStorage[4 * v8];
      v10[4] = v4;
      _OWORD v10[5] = v5;
      *((unsigned char *)v10 + 48) = v6;
      v10[7] = v7;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

char *sub_100C36F24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)_swiftEmptyArrayStorage;
  }
  long long v2 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
  uint64_t v3 = (char *)_swiftEmptyArrayStorage;
  do
  {
    uint64_t v5 = *v2;
    if (*v2)
    {
      uint64_t v6 = *(v2 - 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_100073498(0, *((void *)v3 + 2) + 1, 1, v3);
      }
      unint64_t v8 = *((void *)v3 + 2);
      unint64_t v7 = *((void *)v3 + 3);
      if (v8 >= v7 >> 1) {
        uint64_t v3 = sub_100073498((char *)(v7 > 1), v8 + 1, 1, v3);
      }
      *((void *)v3 + 2) = v8 + 1;
      uint64_t v4 = &v3[16 * v8];
      *((void *)v4 + 4) = v6;
      *((void *)v4 + 5) = v5;
    }
    v2 += 6;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t TextArray.Element.init(text:accessibilityLabel:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = a3 & 1;
  *(void *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  return result;
}

uint64_t TextArray.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6 = a1;
  uint64_t v56 = a4;
  unint64_t v7 = sub_100C36E24(a1);
  unint64_t v8 = sub_10005D27C();
  swift_bridgeObjectRetain();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v11 = v9;
  uint64_t v57 = (char *)v10;
  uint64_t v58 = v9;
  LODWORD(v54) = v12;
  char v59 = v12 & 1;
  uint64_t v60 = v13;
  uint64_t v14 = v7[2];
  if (v14)
  {
    v46[1] = v46;
    unint64_t v49 = v8;
    uint64_t v50 = a2;
    uint64_t v15 = v7[4];
    uint64_t v16 = v7[5];
    uint64_t v48 = v6;
    char v17 = *((unsigned char *)v7 + 48);
    uint64_t v51 = a3;
    uint64_t v18 = v7[7];
    uint64_t v55 = 0;
    uint64_t v19 = v9;
    unint64_t v20 = (2 * v14) | 1;
    __chkstk_darwin();
    uint64_t v47 = v10;
    v45[2] = v21;
    sub_1001CC8D0(v15, v16, v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v11 = v19;
    uint64_t v22 = sub_100C373E0(v15, v16, v17, v18, (void (*)(uint64_t *__return_ptr, uint64_t *, void *))sub_100C376A8, (uint64_t)v45, (uint64_t)v7, (uint64_t)(v7 + 4), 1, v20);
    unint64_t v53 = v23;
    char v25 = v24;
    uint64_t v55 = v26;
    swift_bridgeObjectRelease();
    int v52 = v25 & 1;
    char v27 = v17;
    uint64_t v10 = v47;
    uint64_t v6 = v48;
    sub_1000D1500(v15, v16, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = 0;
    int v52 = 0;
    uint64_t v55 = _swiftEmptyArrayStorage;
    unint64_t v53 = 0xE000000000000000;
  }
  sub_1000D1500(v10, v11, v54 & 1);
  swift_bridgeObjectRelease();
  uint64_t v57 = sub_100C36F24(v6);
  sub_100063814(&qword_1010CA7C8);
  sub_100066540();
  uint64_t v28 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  uint64_t v57 = (char *)v28;
  uint64_t v58 = v30;
  uint64_t v31 = Text.init<A>(_:)();
  uint64_t v33 = v32;
  char v35 = v34 & 1;
  uint64_t v36 = v53;
  char v37 = v52;
  uint64_t v51 = Text.accessibilityLabel(_:)();
  uint64_t v39 = v38;
  char v41 = v40;
  uint64_t v54 = v42;
  sub_1000D1500(v22, v36, v37);
  swift_bridgeObjectRelease();
  sub_1000D1500(v31, v33, v35);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v44 = v56;
  uint64_t *v56 = v51;
  v44[1] = v39;
  *((unsigned char *)v44 + 16) = v41 & 1;
  v44[3] = v54;
  return result;
}

uint64_t sub_100C37360@<X0>(uint64_t *a1@<X8>)
{
  return TextArray.body.getter(*v1, v1[1], v1[2], a1);
}

uint64_t TextArray.Element.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_10005D27C();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a3 = result;
  *(void *)(a3 + 8) = v7;
  *(unsigned char *)(a3 + 16) = v8 & 1;
  *(void *)(a3 + 24) = v9;
  *(void *)(a3 + 32) = a1;
  *(void *)(a3 + 40) = a2;
  return result;
}

uint64_t sub_100C373E0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t *, void *), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  char v11 = a3;
  uint64_t v12 = a2;
  uint64_t v13 = a1;
  uint64_t v14 = a9;
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  char v35 = a3 & 1;
  uint64_t v36 = a4;
  int64_t v15 = a10 >> 1;
  sub_1001CC8D0(a1, a2, a3 & 1);
  if (a10 >> 1 == a9)
  {
    swift_bridgeObjectRetain();
    return v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = swift_unknownObjectRetain();
    uint64_t v17 = a8 + 32 * a9 + 16;
    while (v14 < v15)
    {
      char v18 = v11;
      uint64_t v24 = v12;
      uint64_t v19 = *(void *)(v17 - 16);
      uint64_t v20 = *(void *)(v17 - 8);
      char v21 = *(unsigned char *)v17;
      uint64_t v22 = *(void *)(v17 + 8);
      v30[0] = v19;
      v30[1] = v20;
      char v31 = v21;
      uint64_t v32 = v22;
      sub_1001CC8D0(v19, v20, v21);
      swift_bridgeObjectRetain();
      a5(&v26, &v33, v30);
      if (v10)
      {
        sub_1000D1500(v19, v20, v21);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000D1500(v13, v24, v18 & 1);
        swift_bridgeObjectRelease();
        return v13;
      }
      ++v14;
      sub_1000D1500(v19, v20, v21);
      swift_bridgeObjectRelease();
      sub_1000D1500(v13, v24, v18 & 1);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v13 = v26;
      uint64_t v12 = v27;
      char v11 = v28;
      uint64_t v33 = v26;
      uint64_t v34 = v27;
      char v35 = v28;
      uint64_t v36 = v29;
      v17 += 32;
      int64_t v15 = a10 >> 1;
      if (a10 >> 1 == v14)
      {
        swift_unknownObjectRelease();
        return v13;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100C375C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static Text.+ infix(_:_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = static Text.+ infix(_:_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  sub_1000D1500(v2, v4, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_100C376A8@<X0>(uint64_t a1@<X8>)
{
  return sub_100C375C4(a1);
}

uint64_t sub_100C376C4()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_100C376E4(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TextArray(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TextArray(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TextArray()
{
  return &type metadata for TextArray;
}

uint64_t destroy for TextArray.Element(uint64_t a1)
{
  sub_1000D1500(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextArray.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1001CC8D0(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextArray.Element(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_1001CC8D0(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_1000D1500(v7, v8, v9);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TextArray.Element(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_1000D1500(v5, v6, v7);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TextArray.Element()
{
  return &type metadata for TextArray.Element;
}

void *sub_100C379B8()
{
  return &protocol witness table for Text;
}

uint64_t sub_100C379C4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for _ConditionalContent.Storage();
  __n128 v4 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_100C37ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for _ConditionalContent.Storage();
  __n128 v5 = __chkstk_darwin();
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3, v5);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t Text.with<A>(style:configurator:)@<X0>(int a1@<W0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X7>, uint64_t a4@<X8>, uint64_t a5)
{
  uint64_t v20 = a2;
  uint64_t v21 = a4;
  uint64_t v7 = *(void *)(a3 - 8);
  __chkstk_darwin();
  char v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100C3A5CC(v11, v12, v10 & 1, v13, a1);
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  v20(v14);
  sub_100C38E70((uint64_t)v9, a1, a5, v21);
  sub_1000D1500(v14, v16, v18);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, a3);
}

uint64_t sub_100C37CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v98 = a4;
  uint64_t v97 = a2;
  uint64_t v95 = a1;
  uint64_t v101 = a3 & 1;
  uint64_t v96 = sub_100063814(&qword_1010D1078);
  __chkstk_darwin();
  uint64_t v100 = (uint64_t *)((char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v92 = sub_100063814(&qword_1010D1080);
  __chkstk_darwin();
  char v10 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100063814(&qword_1010D1088);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100063814(&qword_1010D1050);
  __chkstk_darwin();
  long long v90 = (char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100063814(&qword_1010D1010);
  __chkstk_darwin();
  uint64_t v94 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100063814(&qword_1010CB458);
  __chkstk_darwin();
  char v17 = (uint64_t *)((char *)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100063814(&qword_1010CB460);
  __chkstk_darwin();
  uint64_t v19 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100063814(&qword_1010D1070);
  __chkstk_darwin();
  uint64_t v22 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100063814(&qword_1010D1060);
  __chkstk_darwin();
  uint64_t v24 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  switch(a5)
  {
    case 4:
    case 6:
      uint64_t v27 = static Color.secondary.getter();
      uint64_t v89 = v27;
      uint64_t KeyPath = swift_getKeyPath();
      long long v90 = (char *)KeyPath;
      uint64_t v29 = swift_getKeyPath();
      uint64_t v91 = a6;
      uint64_t v30 = v29;
      uint64_t v31 = swift_getKeyPath();
      uint64_t v88 = v31;
      uint64_t v32 = v95;
      uint64_t v33 = v97;
      uint64_t v34 = v101;
      sub_1001CC8D0(v95, v97, v101);
      uint64_t v35 = v98;
      swift_bridgeObjectRetain();
      sub_1001CC8D0(v32, v33, v34);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1000D1500(v32, v33, v34);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v102 = v32;
      uint64_t v103 = v33;
      uint64_t v104 = v34;
      uint64_t v105 = v35;
      uint64_t v106 = KeyPath;
      uint64_t v107 = v27;
      uint64_t v108 = v30;
      long long v109 = xmmword_100E35750;
      uint64_t v110 = v31;
      __int16 v111 = 257;
      sub_1001CC8D0(v32, v33, v34);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v87 = sub_100063814(&qword_1010D1030);
      sub_100063814(&qword_1010D1040);
      sub_100C3AE98(&qword_1010D1028, &qword_1010D1030, (unint64_t *)&qword_1010CB440, &qword_1010CB448);
      sub_100C3AF28();
      _ConditionalContent<>.init(storage:)();
      char v36 = v117;
      char v37 = v118;
      long long v38 = v113;
      *(_OWORD *)char v10 = v112;
      *((_OWORD *)v10 + 1) = v38;
      long long v39 = v115;
      long long v40 = v116;
      *((_OWORD *)v10 + 2) = v114;
      *((_OWORD *)v10 + 3) = v39;
      *((_OWORD *)v10 + 4) = v40;
      v10[80] = v36;
      v10[81] = v37;
      swift_storeEnumTagMultiPayload();
      sub_100063814(&qword_1010D1020);
      sub_100C3ADFC();
      sub_100C3AFD4();
      uint64_t v41 = (uint64_t)v94;
      _ConditionalContent<>.init(storage:)();
      sub_10006CAB8(v41, (uint64_t)v100, &qword_1010D1010);
      swift_storeEnumTagMultiPayload();
      sub_100C3B010(&qword_1010D1008, &qword_1010D1010, (void (*)(void))sub_100C3ADFC, (void (*)(void))sub_100C3AFD4);
      _ConditionalContent<>.init(storage:)();
      sub_1000637B8(v41, &qword_1010D1010);
      sub_1000D1500(v32, v33, v34);
      swift_release();
      goto LABEL_4;
    case 5:
      LODWORD(v86) = v101 != 0;
      uint64_t v88 = (uint64_t)&v83 - v26;
      uint64_t v87 = v25;
      uint64_t v84 = static Color.secondary.getter();
      uint64_t v83 = swift_getKeyPath();
      LODWORD(v85) = enum case for Text.Case.uppercase(_:);
      uint64_t v54 = type metadata accessor for Text.Case();
      uint64_t v91 = a6;
      uint64_t v55 = v54;
      uint64_t v56 = *(void *)(v54 - 8);
      (*(void (**)(char *, void, uint64_t))(v56 + 104))(v19, v85, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v19, 0, 1, v55);
      uint64_t v57 = swift_getKeyPath();
      sub_10006CAB8((uint64_t)v19, (uint64_t)v17 + *(int *)(v15 + 28), &qword_1010CB460);
      *char v17 = v57;
      sub_10006CAB8((uint64_t)v17, (uint64_t)&v22[*(int *)(v20 + 36)], &qword_1010CB458);
      uint64_t v58 = v95;
      uint64_t v59 = v97;
      *(void *)uint64_t v22 = v95;
      *((void *)v22 + 1) = v59;
      v22[16] = (char)v86;
      uint64_t v86 = v10;
      uint64_t v60 = v83;
      *((void *)v22 + 3) = v98;
      *((void *)v22 + 4) = v60;
      uint64_t v85 = v12;
      *((void *)v22 + 5) = v84;
      LOBYTE(v57) = v101;
      sub_1001CC8D0(v58, v59, v101);
      swift_bridgeObjectRetain();
      sub_1001CC8D0(v58, v59, v57);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_1000637B8((uint64_t)v17, &qword_1010CB458);
      sub_1000637B8((uint64_t)v19, &qword_1010CB460);
      sub_1000D1500(v58, v59, v101);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v61 = swift_getKeyPath();
      sub_10006CAB8((uint64_t)v22, (uint64_t)v24, &qword_1010D1070);
      uint64_t v62 = &v24[*(int *)(v87 + 36)];
      *(void *)uint64_t v62 = v61;
      *((void *)v62 + 1) = 1;
      v62[16] = 0;
      sub_1000637B8((uint64_t)v22, &qword_1010D1070);
      uint64_t v63 = v88;
      sub_100C3B15C((uint64_t)v24, v88);
      sub_10006CAB8(v63, (uint64_t)v85, &qword_1010D1060);
      swift_storeEnumTagMultiPayload();
      sub_100063814(&qword_1010CE580);
      sub_100C3B098();
      sub_100BC3D1C();
      uint64_t v64 = (uint64_t)v90;
      _ConditionalContent<>.init(storage:)();
      sub_10006CAB8(v64, (uint64_t)v86, &qword_1010D1050);
      swift_storeEnumTagMultiPayload();
      sub_100063814(&qword_1010D1020);
      sub_100C3ADFC();
      sub_100C3AFD4();
      uint64_t v65 = (uint64_t)v94;
      _ConditionalContent<>.init(storage:)();
      sub_1000637B8(v64, &qword_1010D1050);
      sub_10006CAB8(v65, (uint64_t)v100, &qword_1010D1010);
      swift_storeEnumTagMultiPayload();
      sub_100063814(&qword_1010D1030);
      sub_100C3B010(&qword_1010D1008, &qword_1010D1010, (void (*)(void))sub_100C3ADFC, (void (*)(void))sub_100C3AFD4);
      sub_100C3AE98(&qword_1010D1028, &qword_1010D1030, (unint64_t *)&qword_1010CB440, &qword_1010CB448);
      _ConditionalContent<>.init(storage:)();
      sub_1000637B8(v65, &qword_1010D1010);
      return sub_1000637B8(v63, &qword_1010D1060);
    case 7:
      char v67 = v101;
      BOOL v68 = v101 != 0;
      uint64_t v69 = static Color.white.getter();
      uint64_t v70 = swift_getKeyPath();
      uint64_t v71 = v95;
      uint64_t v72 = v97;
      *(void *)uint64_t v12 = v95;
      *((void *)v12 + 1) = v72;
      v12[16] = v68;
      *((void *)v12 + 3) = v98;
      *((void *)v12 + 4) = v70;
      uint64_t v88 = v70;
      *((void *)v12 + 5) = v69;
      uint64_t v87 = v69;
      swift_storeEnumTagMultiPayload();
      sub_1001CC8D0(v71, v72, v67);
      swift_bridgeObjectRetain();
      sub_1001CC8D0(v71, v72, v67);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_100063814(&qword_1010CE580);
      sub_100C3B098();
      uint64_t v91 = a6;
      sub_100BC3D1C();
      uint64_t v73 = (uint64_t)v90;
      _ConditionalContent<>.init(storage:)();
      sub_10006CAB8(v73, (uint64_t)v10, &qword_1010D1050);
      swift_storeEnumTagMultiPayload();
      sub_100063814(&qword_1010D1020);
      sub_100C3ADFC();
      sub_100C3AFD4();
      uint64_t v74 = (uint64_t)v94;
      _ConditionalContent<>.init(storage:)();
      sub_1000637B8(v73, &qword_1010D1050);
      sub_10006CAB8(v74, (uint64_t)v100, &qword_1010D1010);
      swift_storeEnumTagMultiPayload();
      sub_100063814(&qword_1010D1030);
      sub_100C3B010(&qword_1010D1008, &qword_1010D1010, (void (*)(void))sub_100C3ADFC, (void (*)(void))sub_100C3AFD4);
      sub_100C3AE98(&qword_1010D1028, &qword_1010D1030, (unint64_t *)&qword_1010CB440, &qword_1010CB448);
      _ConditionalContent<>.init(storage:)();
      sub_1000637B8(v74, &qword_1010D1010);
      sub_1000D1500(v71, v72, v101);
      swift_release();
      goto LABEL_7;
    case 8:
      char v75 = v101;
      BOOL v76 = v101 != 0;
      uint64_t v77 = static Color.white.getter();
      uint64_t v78 = swift_getKeyPath();
      uint64_t v79 = swift_getKeyPath();
      long long v80 = v100;
      uint64_t v81 = v95;
      uint64_t v82 = v97;
      void *v100 = v95;
      v80[1] = v82;
      *((unsigned char *)v80 + 16) = v76;
      v80[3] = v98;
      v80[4] = v78;
      v80[5] = v77;
      v80[6] = v79;
      v80[7] = 1;
      *((unsigned char *)v80 + 64) = 0;
      swift_storeEnumTagMultiPayload();
      sub_1001CC8D0(v81, v82, v75);
      swift_bridgeObjectRetain();
      sub_100063814(&qword_1010D1030);
      sub_100C3B010(&qword_1010D1008, &qword_1010D1010, (void (*)(void))sub_100C3ADFC, (void (*)(void))sub_100C3AFD4);
      sub_100C3AE98(&qword_1010D1028, &qword_1010D1030, (unint64_t *)&qword_1010CB440, &qword_1010CB448);
      return _ConditionalContent<>.init(storage:)();
    default:
      uint64_t v42 = static Color.primary.getter();
      uint64_t v43 = swift_getKeyPath();
      uint64_t v44 = swift_getKeyPath();
      uint64_t v45 = v95;
      uint64_t v102 = v95;
      uint64_t v46 = v97;
      uint64_t v103 = v97;
      char v47 = v101;
      uint64_t v104 = v101;
      uint64_t v105 = v98;
      uint64_t v106 = v43;
      long long v90 = (char *)v43;
      uint64_t v107 = v42;
      uint64_t v108 = v44;
      uint64_t v89 = v42;
      uint64_t v88 = v44;
      long long v109 = 1uLL;
      uint64_t v110 = 0;
      __int16 v111 = 0;
      sub_1001CC8D0(v95, v97, v101);
      swift_bridgeObjectRetain();
      sub_1001CC8D0(v45, v46, v47);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_100063814(&qword_1010D1030);
      uint64_t v91 = a6;
      sub_100063814(&qword_1010D1040);
      sub_100C3AE98(&qword_1010D1028, &qword_1010D1030, (unint64_t *)&qword_1010CB440, &qword_1010CB448);
      sub_100C3AF28();
      _ConditionalContent<>.init(storage:)();
      char v48 = v117;
      char v49 = v118;
      long long v50 = v113;
      *(_OWORD *)char v10 = v112;
      *((_OWORD *)v10 + 1) = v50;
      long long v51 = v115;
      long long v52 = v116;
      *((_OWORD *)v10 + 2) = v114;
      *((_OWORD *)v10 + 3) = v51;
      *((_OWORD *)v10 + 4) = v52;
      v10[80] = v48;
      v10[81] = v49;
      swift_storeEnumTagMultiPayload();
      sub_100063814(&qword_1010D1020);
      sub_100C3ADFC();
      sub_100C3AFD4();
      uint64_t v53 = (uint64_t)v94;
      _ConditionalContent<>.init(storage:)();
      sub_10006CAB8(v53, (uint64_t)v100, &qword_1010D1010);
      swift_storeEnumTagMultiPayload();
      sub_100C3B010(&qword_1010D1008, &qword_1010D1010, (void (*)(void))sub_100C3ADFC, (void (*)(void))sub_100C3AFD4);
      _ConditionalContent<>.init(storage:)();
      sub_1000637B8(v53, &qword_1010D1010);
      sub_1000D1500(v45, v46, v47);
LABEL_4:
      swift_release();
      swift_release();
LABEL_7:
      swift_release();
      return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100C38E70@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v178 = a3;
  LODWORD(v166) = a2;
  uint64_t v164 = a1;
  uint64_t v170 = a4;
  sub_10006389C((uint64_t *)&unk_1010CDEF0);
  uint64_t v4 = type metadata accessor for ModifiedContent();
  sub_10006389C(&qword_1010CB458);
  uint64_t v5 = type metadata accessor for ModifiedContent();
  sub_10006389C(&qword_1010CB448);
  uint64_t v6 = type metadata accessor for ModifiedContent();
  uint64_t v7 = type metadata accessor for _ConditionalContent();
  uint64_t v156 = *(void *)(v7 - 8);
  __chkstk_darwin();
  uint64_t v159 = (uint64_t)&v151 - v8;
  sub_100063814(&qword_1010CB460);
  __chkstk_darwin();
  char v10 = (char *)&v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = v5;
  uint64_t v154 = *(void *)(v5 - 8);
  __chkstk_darwin();
  long long v153 = (char *)&v151 - v11;
  uint64_t v179 = v6;
  uint64_t v157 = *(void *)(v6 - 8);
  __chkstk_darwin();
  uint64_t v13 = (char *)&v151 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  CGRect v155 = (char *)&v151 - v14;
  uint64_t v15 = type metadata accessor for ModifiedContent();
  sub_10006389C(&qword_1010CC440);
  uint64_t v167 = *(void *)(type metadata accessor for ModifiedContent() - 8);
  __chkstk_darwin();
  char v17 = (char *)&v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  CGRect v161 = (char *)&v151 - v18;
  uint64_t v174 = v19;
  uint64_t v158 = *(void *)(type metadata accessor for _ConditionalContent() - 8);
  __chkstk_darwin();
  uint64_t v160 = (uint64_t)&v151 - v20;
  uint64_t v177 = v21;
  uint64_t v180 = v7;
  uint64_t v163 = *(void *)(type metadata accessor for _ConditionalContent() - 8);
  __chkstk_darwin();
  char v162 = (char *)&v151 - v22;
  uint64_t v181 = v4;
  uint64_t v173 = *(void *)(v4 - 8);
  __chkstk_darwin();
  uint64_t v24 = (char *)&v151 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v26 = (char *)&v151 - v25;
  CGRect v171 = *(void (***)(char *, uint64_t))(v15 - 8);
  __chkstk_darwin();
  char v28 = (char *)&v151 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  uint64_t v30 = (char *)&v151 - v29;
  uint64_t v165 = v31;
  uint64_t v175 = v15;
  uint64_t v32 = type metadata accessor for _ConditionalContent();
  uint64_t v168 = *(void *)(v32 - 8);
  uint64_t v169 = v32;
  __chkstk_darwin();
  uint64_t v176 = (char *)&v151 - v33;
  switch((char)v166)
  {
    case 4:
    case 6:
      static Color.secondary.getter();
      uint64_t v34 = v178;
      View.foregroundColor(_:)();
      swift_release();
      uint64_t v35 = sub_100C3ACD4(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
      uint64_t v212 = v34;
      uint64_t v213 = v35;
      uint64_t v36 = v181;
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v166 = WitnessTable;
      View.lineLimit(_:)();
      (*(void (**)(char *, uint64_t))(v173 + 8))(v26, v36);
      uint64_t v173 = sub_100C3ACD4((unint64_t *)&qword_1010CB440, &qword_1010CB448);
      uint64_t v210 = WitnessTable;
      uint64_t v211 = v173;
      long long v38 = v171;
      uint64_t v39 = v175;
      uint64_t v40 = swift_getWitnessTable();
      View.multilineTextAlignment(_:)();
      uint64_t v41 = v30;
      uint64_t v42 = v39;
      v38[1](v41, v39);
      uint64_t v43 = sub_100C3ACD4(&qword_1010CC438, &qword_1010CC440);
      uint64_t v44 = v40;
      uint64_t v164 = v40;
      uint64_t v208 = v40;
      uint64_t v209 = v43;
      uint64_t v45 = v174;
      uint64_t v46 = swift_getWitnessTable();
      char v47 = v161;
      sub_1005CF83C(v17, v45, v46);
      uint64_t v48 = v167 + 8;
      char v49 = *(void (**)(char *, uint64_t))(v167 + 8);
      v49(v17, v45);
      CGRect v171 = (void (**)(char *, uint64_t))v49;
      uint64_t v167 = v48;
      sub_1005CF83C(v47, v45, v46);
      uint64_t v50 = (uint64_t)v17;
      uint64_t v51 = v160;
      sub_100C37ABC(v50, v42, v45);
      v49((char *)v50, v45);
      uint64_t v206 = v44;
      uint64_t v207 = v46;
      uint64_t v52 = v177;
      uint64_t v53 = swift_getWitnessTable();
      uint64_t v54 = sub_100C3ACD4(&qword_1010CB4A0, &qword_1010CB458);
      uint64_t v55 = v166;
      uint64_t v204 = v166;
      uint64_t v205 = v54;
      uint64_t v202 = swift_getWitnessTable();
      uint64_t v203 = v173;
      uint64_t v200 = swift_getWitnessTable();
      uint64_t v201 = v55;
      uint64_t v56 = swift_getWitnessTable();
      uint64_t v57 = (uint64_t)v162;
      sub_100C379C4(v51, v52);
      (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v51, v52);
      uint64_t v198 = v53;
      uint64_t v199 = v56;
      uint64_t v58 = v165;
      swift_getWitnessTable();
      sub_100C379C4(v57, v58);
      (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v57, v58);
      ((void (*)(char *, uint64_t))v171)(v161, v45);
      break;
    case 5:
      static Color.secondary.getter();
      uint64_t v76 = v178;
      View.foregroundColor(_:)();
      swift_release();
      uint64_t v77 = enum case for Text.Case.uppercase(_:);
      uint64_t v78 = type metadata accessor for Text.Case();
      uint64_t v79 = *(void *)(v78 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 104))(v10, v77, v78);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v10, 0, 1, v78);
      uint64_t v80 = sub_100C3ACD4(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
      uint64_t v228 = v76;
      uint64_t v229 = v80;
      uint64_t v81 = v181;
      uint64_t v82 = swift_getWitnessTable();
      uint64_t v83 = v153;
      View.textCase(_:)();
      sub_1000637B8((uint64_t)v10, &qword_1010CB460);
      (*(void (**)(char *, uint64_t))(v173 + 8))(v26, v81);
      uint64_t v84 = sub_100C3ACD4(&qword_1010CB4A0, &qword_1010CB458);
      uint64_t v226 = v82;
      uint64_t v227 = v84;
      uint64_t v85 = v172;
      uint64_t v86 = swift_getWitnessTable();
      View.lineLimit(_:)();
      (*(void (**)(char *, uint64_t))(v154 + 8))(v83, v85);
      uint64_t v87 = sub_100C3ACD4((unint64_t *)&qword_1010CB440, &qword_1010CB448);
      uint64_t v224 = v86;
      uint64_t v225 = v87;
      uint64_t v88 = v179;
      uint64_t v89 = swift_getWitnessTable();
      long long v90 = v155;
      sub_1005CF83C(v13, v88, v89);
      uint64_t v92 = v157 + 8;
      uint64_t v91 = *(void (**)(char *, uint64_t))(v157 + 8);
      v91(v13, v88);
      uint64_t v173 = (uint64_t)v91;
      uint64_t v157 = v92;
      sub_1005CF83C(v90, v88, v89);
      sub_100C379C4((uint64_t)v13, v88);
      v91(v13, v88);
      uint64_t v222 = v82;
      uint64_t v223 = v87;
      uint64_t v93 = swift_getWitnessTable();
      CGRect v171 = (void (**)(char *, uint64_t))v93;
      uint64_t v94 = sub_100C3ACD4(&qword_1010CC438, &qword_1010CC440);
      uint64_t v220 = v93;
      uint64_t v221 = v94;
      uint64_t v95 = swift_getWitnessTable();
      uint64_t v218 = v93;
      uint64_t v219 = v95;
      uint64_t v96 = v177;
      uint64_t v97 = swift_getWitnessTable();
      uint64_t v216 = v89;
      uint64_t v217 = v82;
      uint64_t v98 = v180;
      uint64_t v99 = swift_getWitnessTable();
      uint64_t v100 = (uint64_t)v162;
      uint64_t v101 = v159;
      sub_100C37ABC(v159, v96, v98);
      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v101, v98);
      uint64_t v214 = v97;
      uint64_t v215 = v99;
      uint64_t v102 = v165;
      swift_getWitnessTable();
      sub_100C379C4(v100, v102);
      (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v100, v102);
      ((void (*)(char *, uint64_t))v173)(v155, v88);
      break;
    case 7:
      static Color.white.getter();
      uint64_t v103 = v178;
      View.foregroundColor(_:)();
      swift_release();
      uint64_t v104 = sub_100C3ACD4(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
      uint64_t v244 = v103;
      uint64_t v245 = v104;
      uint64_t v105 = v181;
      uint64_t v106 = swift_getWitnessTable();
      sub_1005CF83C(v24, v105, v106);
      uint64_t v107 = *(void (**)(char *, uint64_t))(v173 + 8);
      v173 += 8;
      v107(v24, v105);
      uint64_t v108 = v107;
      CGRect v171 = (void (**)(char *, uint64_t))v107;
      sub_1005CF83C(v26, v105, v106);
      uint64_t v109 = sub_100C3ACD4(&qword_1010CB4A0, &qword_1010CB458);
      uint64_t v242 = v106;
      uint64_t v243 = v109;
      uint64_t v110 = swift_getWitnessTable();
      uint64_t v111 = sub_100C3ACD4((unint64_t *)&qword_1010CB440, &qword_1010CB448);
      uint64_t v240 = v110;
      uint64_t v241 = v111;
      uint64_t v112 = v179;
      uint64_t v113 = swift_getWitnessTable();
      sub_100C37ABC((uint64_t)v24, v112, v105);
      v108(v24, v105);
      uint64_t v238 = v106;
      uint64_t v239 = v111;
      uint64_t v114 = swift_getWitnessTable();
      uint64_t v167 = v114;
      uint64_t v115 = sub_100C3ACD4(&qword_1010CC438, &qword_1010CC440);
      uint64_t v236 = v114;
      uint64_t v237 = v115;
      uint64_t v116 = swift_getWitnessTable();
      uint64_t v234 = v114;
      uint64_t v235 = v116;
      uint64_t v117 = v177;
      uint64_t v118 = swift_getWitnessTable();
      uint64_t v232 = v113;
      uint64_t v233 = v106;
      uint64_t v119 = v180;
      uint64_t v120 = swift_getWitnessTable();
      uint64_t v121 = (uint64_t)v162;
      uint64_t v122 = v159;
      sub_100C37ABC(v159, v117, v119);
      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v122, v119);
      uint64_t v230 = v118;
      uint64_t v231 = v120;
      uint64_t v123 = v165;
      swift_getWitnessTable();
      sub_100C379C4(v121, v123);
      (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v121, v123);
      ((void (*)(char *, uint64_t))v171)(v26, v105);
      break;
    case 8:
      static Color.white.getter();
      uint64_t v124 = v178;
      View.foregroundColor(_:)();
      swift_release();
      uint64_t v125 = sub_100C3ACD4(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
      uint64_t v278 = v124;
      uint64_t v279 = v125;
      uint64_t v126 = v181;
      uint64_t v127 = swift_getWitnessTable();
      View.lineLimit(_:)();
      (*(void (**)(char *, uint64_t))(v173 + 8))(v26, v126);
      uint64_t v167 = sub_100C3ACD4((unint64_t *)&qword_1010CB440, &qword_1010CB448);
      uint64_t v276 = v127;
      uint64_t v277 = v167;
      uint64_t v128 = v175;
      uint64_t v129 = swift_getWitnessTable();
      long long v152 = v30;
      sub_1005CF83C(v28, v128, v129);
      char v130 = v171[1];
      ++v171;
      uint64_t v173 = (uint64_t)v130;
      v130(v28, v128);
      sub_1005CF83C(v30, v128, v129);
      uint64_t v131 = sub_100C3ACD4(&qword_1010CC438, &qword_1010CC440);
      uint64_t v274 = v129;
      uint64_t v275 = v131;
      uint64_t v132 = swift_getWitnessTable();
      uint64_t v272 = v129;
      uint64_t v273 = v132;
      uint64_t v133 = swift_getWitnessTable();
      uint64_t v134 = sub_100C3ACD4(&qword_1010CB4A0, &qword_1010CB458);
      uint64_t v270 = v127;
      uint64_t v271 = v134;
      uint64_t v268 = swift_getWitnessTable();
      uint64_t v269 = v167;
      uint64_t v266 = swift_getWitnessTable();
      uint64_t v267 = v127;
      uint64_t v135 = swift_getWitnessTable();
      uint64_t v264 = v133;
      uint64_t v265 = v135;
      uint64_t v136 = v165;
      swift_getWitnessTable();
      sub_100C37ABC((uint64_t)v28, v136, v128);
      char v137 = (void (*)(char *, uint64_t))v173;
      ((void (*)(char *, uint64_t))v173)(v28, v128);
      v137(v152, v128);
      break;
    default:
      static Color.primary.getter();
      uint64_t v59 = v178;
      View.foregroundColor(_:)();
      swift_release();
      uint64_t v60 = sub_100C3ACD4(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
      uint64_t v196 = v59;
      uint64_t v197 = v60;
      uint64_t v61 = v181;
      uint64_t v62 = swift_getWitnessTable();
      View.lineLimit(_:)();
      (*(void (**)(char *, uint64_t))(v173 + 8))(v26, v61);
      uint64_t v167 = sub_100C3ACD4((unint64_t *)&qword_1010CB440, &qword_1010CB448);
      uint64_t v194 = v62;
      uint64_t v195 = v167;
      uint64_t v63 = v175;
      uint64_t v64 = swift_getWitnessTable();
      long long v152 = v30;
      sub_1005CF83C(v28, v63, v64);
      uint64_t v65 = v171 + 1;
      uint64_t v66 = v171[1];
      v66(v28, v63);
      CGRect v171 = v65;
      uint64_t v173 = (uint64_t)v66;
      sub_1005CF83C(v30, v63, v64);
      uint64_t v67 = sub_100C3ACD4(&qword_1010CC438, &qword_1010CC440);
      uint64_t v192 = v64;
      uint64_t v193 = v67;
      uint64_t v68 = swift_getWitnessTable();
      sub_100C379C4((uint64_t)v28, v63);
      v66(v28, v63);
      uint64_t v190 = v64;
      uint64_t v191 = v68;
      uint64_t v69 = v177;
      uint64_t v166 = swift_getWitnessTable();
      uint64_t v70 = sub_100C3ACD4(&qword_1010CB4A0, &qword_1010CB458);
      uint64_t v188 = v62;
      uint64_t v189 = v70;
      uint64_t v186 = swift_getWitnessTable();
      uint64_t v187 = v167;
      uint64_t v184 = swift_getWitnessTable();
      uint64_t v185 = v62;
      uint64_t v71 = swift_getWitnessTable();
      uint64_t v72 = (uint64_t)v162;
      uint64_t v73 = v160;
      uint64_t v74 = v166;
      sub_100C379C4(v160, v69);
      (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v73, v69);
      uint64_t v182 = v74;
      uint64_t v183 = v71;
      uint64_t v75 = v165;
      swift_getWitnessTable();
      sub_100C379C4(v72, v75);
      (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v72, v75);
      ((void (*)(char *, uint64_t))v173)(v152, v63);
      break;
  }
  uint64_t v138 = sub_100C3ACD4(&qword_1010CCFE8, (uint64_t *)&unk_1010CDEF0);
  uint64_t v262 = v178;
  uint64_t v263 = v138;
  uint64_t v139 = swift_getWitnessTable();
  uint64_t v140 = sub_100C3ACD4((unint64_t *)&qword_1010CB440, &qword_1010CB448);
  uint64_t v260 = v139;
  uint64_t v261 = v140;
  uint64_t v141 = swift_getWitnessTable();
  uint64_t v142 = sub_100C3ACD4(&qword_1010CC438, &qword_1010CC440);
  uint64_t v258 = v141;
  uint64_t v259 = v142;
  uint64_t v143 = swift_getWitnessTable();
  uint64_t v256 = v141;
  uint64_t v257 = v143;
  uint64_t v144 = swift_getWitnessTable();
  uint64_t v145 = sub_100C3ACD4(&qword_1010CB4A0, &qword_1010CB458);
  uint64_t v254 = v139;
  uint64_t v255 = v145;
  uint64_t v252 = swift_getWitnessTable();
  uint64_t v253 = v140;
  uint64_t v250 = swift_getWitnessTable();
  uint64_t v251 = v139;
  uint64_t v146 = swift_getWitnessTable();
  uint64_t v248 = v144;
  uint64_t v249 = v146;
  uint64_t v246 = swift_getWitnessTable();
  uint64_t v247 = v141;
  uint64_t v147 = v169;
  uint64_t v148 = swift_getWitnessTable();
  long long v149 = v176;
  sub_1005CF83C(v176, v147, v148);
  return (*(uint64_t (**)(char *, uint64_t))(v168 + 8))(v149, v147);
}

uint64_t Text.with(style:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8 = sub_100C3A5CC(a2, a3, a4 & 1, a5, a1);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  sub_1001CC8D0(v8, v9, v13 & 1);
  swift_bridgeObjectRetain();
  sub_100C37CFC(v8, v10, v14, v12, a1, a6);
  sub_1000D1500(v8, v10, v14);
  swift_bridgeObjectRelease();
  sub_1000D1500(v8, v10, v14);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100C3A5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 2:
    case 4:
    case 6:
    case 7:
      static Font.body.getter();
      goto LABEL_6;
    case 5:
      static Font.Weight.semibold.getter();
      uint64_t v5 = Text.fontWeight(_:)();
      uint64_t v7 = v6;
      char v9 = v8 & 1;
      static Font.caption.getter();
      uint64_t v10 = Text.font(_:)();
      swift_release();
      sub_1000D1500(v5, v7, v9);
      swift_bridgeObjectRelease();
      return v10;
    case 8:
      static Font.title3.getter();
      goto LABEL_6;
    default:
      static Font.title2.getter();
LABEL_6:
      uint64_t v10 = Text.font(_:)();
      swift_release();
      return v10;
  }
}

unint64_t sub_100C3A740()
{
  unint64_t result = qword_1010D0FF0;
  if (!qword_1010D0FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0FF0);
  }
  return result;
}

uint64_t _s5StyleOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF8)
  {
    unsigned int v2 = a2 + 8;
    if (a2 + 8 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 8;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 8;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100C3A844);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 8;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 3) {
    unsigned int v8 = v7 - 2;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 7) {
    return v8 - 6;
  }
  else {
    return 0;
  }
}

unsigned char *_s5StyleOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 8;
  if (a3 + 8 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF8) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v7 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x100C3A92CLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Text.Style()
{
  return &type metadata for Text.Style;
}

unsigned char *_s9TitleKindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100C3AA30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Text.TitleKind()
{
  return &type metadata for Text.TitleKind;
}

uint64_t sub_100C3AA68()
{
  return swift_getWitnessTable();
}

uint64_t sub_100C3ACD4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100C3AD28()
{
  unint64_t result = qword_1010D0FF8;
  if (!qword_1010D0FF8)
  {
    sub_10006389C(&qword_1010D1000);
    sub_100C3B010(&qword_1010D1008, &qword_1010D1010, (void (*)(void))sub_100C3ADFC, (void (*)(void))sub_100C3AFD4);
    sub_100C3AE98(&qword_1010D1028, &qword_1010D1030, (unint64_t *)&qword_1010CB440, &qword_1010CB448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D0FF8);
  }
  return result;
}

unint64_t sub_100C3ADFC()
{
  unint64_t result = qword_1010D1018;
  if (!qword_1010D1018)
  {
    sub_10006389C(&qword_1010D1020);
    sub_100C3AE98(&qword_1010D1028, &qword_1010D1030, (unint64_t *)&qword_1010CB440, &qword_1010CB448);
    sub_100C3AF28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D1018);
  }
  return result;
}

uint64_t sub_100C3AE98(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    sub_100BC3D1C();
    sub_100C3ACD4(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100C3AF28()
{
  unint64_t result = qword_1010D1038;
  if (!qword_1010D1038)
  {
    sub_10006389C(&qword_1010D1040);
    sub_100C3AE98(&qword_1010D1028, &qword_1010D1030, (unint64_t *)&qword_1010CB440, &qword_1010CB448);
    sub_100C3ACD4(&qword_1010CC438, &qword_1010CC440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D1038);
  }
  return result;
}

uint64_t sub_100C3AFD4()
{
  return sub_100C3B010(&qword_1010D1048, &qword_1010D1050, (void (*)(void))sub_100C3B098, (void (*)(void))sub_100BC3D1C);
}

uint64_t sub_100C3B010(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10006389C(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100C3B098()
{
  unint64_t result = qword_1010D1058;
  if (!qword_1010D1058)
  {
    sub_10006389C(&qword_1010D1060);
    sub_100C3AE98(&qword_1010D1068, &qword_1010D1070, &qword_1010CB4A0, &qword_1010CB458);
    sub_100C3ACD4((unint64_t *)&qword_1010CB440, &qword_1010CB448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D1058);
  }
  return result;
}

uint64_t sub_100C3B15C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100063814(&qword_1010D1060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t VerticalToggleSlider.packageDefinition.getter@<X0>(uint64_t *a1@<X8>)
{
  int v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  unsigned int v6 = (void *)v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  uint64_t v14 = v3[9];
  uint64_t v13 = v3[8];
  uint64_t result = sub_100054404(*v3, v5, v6);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = (uint64_t)v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v14;
  return result;
}

void *VerticalToggleSlider.packageDefinition.setter(void *a1)
{
  int v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition);
  swift_beginAccess();
  sub_100054738((uint64_t)v3, (uint64_t)v8);
  uint64_t v4 = v3[1];
  uint64_t v5 = (void *)v3[2];
  uint64_t v7 = *v3;
  sub_100054738((uint64_t)a1, (uint64_t)v3);
  sub_100053BB4(v8, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100054404);
  sub_100053BB4(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100054404);
  sub_100053B68(v7, v4, v5);
  sub_100C3F1DC((uint64_t)v8);
  sub_100053BB4(a1, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100053B68);
  return sub_100053BB4(v8, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100053B68);
}

void (*VerticalToggleSlider.packageDefinition.modify(void *a1))(uint64_t *a1, char a2)
{
  int v3 = malloc(0x118uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition;
  v3[33] = v1;
  v3[34] = v4;
  uint64_t v5 = (uint64_t *)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v8 = (void *)v5[2];
  uint64_t v9 = v5[3];
  uint64_t v10 = v5[4];
  uint64_t v11 = v5[5];
  uint64_t v12 = v5[6];
  uint64_t v13 = v5[7];
  uint64_t v14 = v5[8];
  uint64_t v15 = v5[9];
  v3[20] = *v5;
  v3[21] = v7;
  v3 += 20;
  v3[2] = v8;
  v3[3] = v9;
  v3[4] = v10;
  v3[5] = v11;
  v3[6] = v12;
  v3[7] = v13;
  v3[8] = v14;
  v3[9] = v15;
  sub_100054404(v6, v7, v8);
  return sub_100C3B460;
}

void sub_100C3B460(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 160);
  uint64_t v5 = *(void *)(*a1 + 168);
  uint64_t v4 = *(void **)(*a1 + 176);
  uint64_t v7 = *(void *)(*a1 + 184);
  uint64_t v6 = *(void *)(*a1 + 192);
  uint64_t v9 = *(void *)(*a1 + 200);
  uint64_t v8 = *(void *)(*a1 + 208);
  uint64_t v10 = *(void *)(*a1 + 216);
  uint64_t v20 = *(void *)(*a1 + 224);
  uint64_t v21 = *(void *)(*a1 + 232);
  uint64_t v12 = *(void *)(*a1 + 264);
  uint64_t v11 = *(void *)(*a1 + 272);
  uint64_t v13 = (uint64_t *)(v12 + v11);
  if (a2)
  {
    sub_100054738(v12 + v11, v2);
    uint64_t v18 = *v13;
    uint64_t v14 = (void *)v13[2];
    uint64_t v16 = v13[1];
    *uint64_t v13 = v3;
    v13[1] = v5;
    _OWORD v13[2] = (uint64_t)v4;
    v13[3] = v7;
    v13[4] = v6;
    _OWORD v13[5] = v9;
    v13[6] = v8;
    v13[7] = v10;
    unsigned char v13[8] = v20;
    v13[9] = v21;
    sub_100054404(v3, v5, v4);
    sub_100054404(v3, v5, v4);
    sub_100053BB4((void *)v2, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100054404);
    sub_100053B68(v18, v16, v14);
    sub_100C3F1DC(v2);
    sub_100053B68(v3, v5, v4);
    sub_100053BB4((void *)v2, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100053B68);
    sub_100053B68(*(void *)(v2 + 160), *(void *)(v2 + 168), *(void **)(v2 + 176));
  }
  else
  {
    sub_100054738(v12 + v11, v2 + 80);
    uint64_t v19 = *v13;
    uint64_t v15 = (void *)v13[2];
    uint64_t v17 = v13[1];
    *uint64_t v13 = v3;
    v13[1] = v5;
    _OWORD v13[2] = (uint64_t)v4;
    v13[3] = v7;
    v13[4] = v6;
    _OWORD v13[5] = v9;
    v13[6] = v8;
    v13[7] = v10;
    unsigned char v13[8] = v20;
    v13[9] = v21;
    sub_100053BB4((void *)(v2 + 80), (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100054404);
    sub_100054404(v3, v5, v4);
    sub_100053B68(v19, v17, v15);
    sub_100C3F1DC(v2 + 80);
    sub_100053B68(v3, v5, v4);
    sub_100053BB4((void *)(v2 + 80), (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100053B68);
  }

  free((void *)v2);
}

BOOL VerticalToggleSlider.isOn.getter()
{
  return *(unsigned char *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) != 2;
}

void VerticalToggleSlider.isOn.setter(char a1)
{
  if (a1) {
    char v2 = 0;
  }
  else {
    char v2 = 2;
  }
  unsigned __int8 v3 = *(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) = v2;
  sub_100C401E0(v3);
}

void (*VerticalToggleSlider.isOn.modify(uint64_t a1))(uint64_t *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(v1 + v2) != 2;
  return sub_100C3B820;
}

void sub_100C3B820(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  if (*((unsigned char *)a1 + 16)) {
    char v3 = 0;
  }
  else {
    char v3 = 2;
  }
  unsigned __int8 v4 = *(unsigned char *)(v2 + v1);
  *(unsigned char *)(v2 + v1) = v3;
  sub_100C401E0(v4);
}

void VerticalToggleSlider.value.getter()
{
  if (*(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) > *(float *)(v0
                                                                                                 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue))
    __break(1u);
}

void VerticalToggleSlider.value.setter(float a1)
{
  float v2 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
  float v3 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
  if (v2 > v3)
  {
    __break(1u);
  }
  else
  {
    if (v2 > a1) {
      a1 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
    }
    if (v3 < a1) {
      a1 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
    }
    sub_100C3D1C0(*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange)+ (float)((float)((float)(a1 - v2) / (float)(v3 - v2))* (float)(*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4)- *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange))));
  }
}

void (*VerticalToggleSlider.value.modify(void (**a1)(float **a1, char a2)))(float **a1, char a2)
{
  uint64_t result = (void (*)(float **, char))malloc(0x28uLL);
  *a1 = result;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue;
  *(void *)uint64_t result = v1;
  *((void *)result + 1) = v4;
  float v5 = *(float *)(v1 + v4);
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue;
  *((void *)result + 2) = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue;
  float v7 = *(float *)(v1 + v6);
  if (v5 > v7)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange;
    *((void *)result + 3) = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange;
    uint64_t v9 = (float *)(v1 + v8);
    float v10 = v9[1];
    float v11 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue);
    if (*v9 > v11) {
      float v11 = *v9;
    }
    if (v10 < v11) {
      float v11 = v9[1];
    }
    *((float *)result + 8) = v5 + (float)((float)(v7 - v5) * (float)((float)(v11 - *v9) / (float)(v10 - *v9)));
    return sub_100C3B9E8;
  }
  return result;
}

void sub_100C3B9E8(float **a1, char a2)
{
  float v2 = *a1;
  uint64_t v3 = *(void *)*a1;
  float v4 = *(float *)(v3 + *((void *)*a1 + 1));
  float v5 = *(float *)(v3 + *((void *)*a1 + 2));
  if (a2)
  {
    if (v4 <= v5) {
      goto LABEL_5;
    }
    __break(1u);
  }
  if (v4 > v5)
  {
    __break(1u);
    return;
  }
LABEL_5:
  float v6 = v2[8];
  if (v4 > v6) {
    float v6 = v4;
  }
  if (v5 < v6) {
    float v6 = v5;
  }
  sub_100C3D1C0(*(float *)(v3 + *((void *)v2 + 3))+ (float)((float)(*(float *)(v3 + *((void *)v2 + 3) + 4) - *(float *)(v3 + *((void *)v2 + 3)))* (float)((float)(v6 - v4) / (float)(v5 - v4))));

  free(v2);
}

float VerticalToggleSlider.minValue.getter()
{
  return *(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
}

void VerticalToggleSlider.minValue.setter(float a1)
{
  if (*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue) <= a1)
  {
    v9[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(145);
    v2._uint64_t object = (void *)0x8000000100DD6F50;
    v2._uint64_t countAndFlagsBits = 0xD000000000000042;
    String.append(_:)(v2);
    Float.write<A>(to:)();
    v3._uint64_t countAndFlagsBits = 3026478;
    v3._uint64_t object = (void *)0xE300000000000000;
    String.append(_:)(v3);
    Float.write<A>(to:)();
    v4._uint64_t countAndFlagsBits = 0xD000000000000048;
    v4._uint64_t object = (void *)0x8000000100DD6FA0;
    String.append(_:)(v4);
    if (qword_1010C8400 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100050A90(v5, (uint64_t)qword_10112C0C0);
    swift_bridgeObjectRetain();
    float v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      v9[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)(v8 + 4) = sub_100076010(0, 0xE000000000000000, v9);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s", (uint8_t *)v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) = a1;
  }
}

void (*VerticalToggleSlider.minValue.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
  return sub_100C3BD18;
}

void sub_100C3BD18(uint64_t a1)
{
}

float VerticalToggleSlider.maxValue.getter()
{
  return *(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
}

void VerticalToggleSlider.maxValue.setter(float a1)
{
  if (*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) >= a1)
  {
    v9[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(145);
    v2._uint64_t object = (void *)0x8000000100DD6F50;
    v2._uint64_t countAndFlagsBits = 0xD000000000000042;
    String.append(_:)(v2);
    Float.write<A>(to:)();
    v3._uint64_t countAndFlagsBits = 3026478;
    v3._uint64_t object = (void *)0xE300000000000000;
    String.append(_:)(v3);
    Float.write<A>(to:)();
    v4._uint64_t countAndFlagsBits = 0xD000000000000048;
    v4._uint64_t object = (void *)0x8000000100DD6FA0;
    String.append(_:)(v4);
    if (qword_1010C8400 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100050A90(v5, (uint64_t)qword_10112C0C0);
    swift_bridgeObjectRetain();
    float v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      v9[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)(v8 + 4) = sub_100076010(0, 0xE000000000000000, v9);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s", (uint8_t *)v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue) = a1;
  }
}

void (*VerticalToggleSlider.maxValue.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
  return sub_100C3BFD8;
}

void sub_100C3BFD8(uint64_t a1)
{
}

void VerticalToggleSlider.valueRange.getter()
{
  if (*(float *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) > *(float *)(v0
                                                                                                 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue))
    __break(1u);
}

void VerticalToggleSlider.valueRange.setter(float a1, float a2)
{
  if (a1 >= a2)
  {
    v10[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(164);
    v3._uint64_t object = (void *)0x8000000100DD6F50;
    v3._uint64_t countAndFlagsBits = 0xD000000000000042;
    String.append(_:)(v3);
    Float.write<A>(to:)();
    v4._uint64_t countAndFlagsBits = 3026478;
    v4._uint64_t object = (void *)0xE300000000000000;
    String.append(_:)(v4);
    Float.write<A>(to:)();
    v5._uint64_t countAndFlagsBits = 0xD00000000000005BLL;
    v5._uint64_t object = (void *)0x8000000100DD6FF0;
    String.append(_:)(v5);
    if (qword_1010C8400 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100050A90(v6, (uint64_t)qword_10112C0C0);
    swift_bridgeObjectRetain();
    os_log_type_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      v10[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)(v9 + 4) = sub_100076010(0, 0xE000000000000000, v10);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s", (uint8_t *)v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    *(float *)(v2 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue) = a1;
    *(float *)(v2 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue) = a2;
  }
}

void (*VerticalToggleSlider.valueRange.modify(void (*result)(uint64_t a1)))(uint64_t a1)
{
  *(void *)uint64_t result = v1;
  float v2 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
  float v3 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
  if (v2 > v3)
  {
    __break(1u);
  }
  else
  {
    *((float *)result + 2) = v2;
    *((float *)result + 3) = v3;
    return sub_100C3C2CC;
  }
  return result;
}

void sub_100C3C2CC(uint64_t a1)
{
}

float VerticalToggleSlider.minLevelOffsetRatio.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio;
  swift_beginAccess();
  return *(float *)v1;
}

void VerticalToggleSlider.minLevelOffsetRatio.setter(float a1)
{
  float v3 = (float *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio];
  swift_beginAccess();
  float v4 = *v3;
  *float v3 = a1;
  if (v4 != a1)
  {
    sub_100C3DE18(0x100000000);
    id v5 = sub_100C3D7C0();
    int v6 = v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
    id v7 = [v1 traitCollection];
    os_log_type_t v8 = v7;
    if (v6 == 2)
    {

      double v9 = 0.0;
    }
    else if (v6)
    {

      double v9 = 1.0;
    }
    else
    {
      id v10 = [v7 accessibilityContrast];

      double v9 = 0.5;
      if (v10 == (id)1) {
        double v9 = 1.0;
      }
    }
    [v5 setAlpha:v9];
  }
}

void (*VerticalToggleSlider.minLevelOffsetRatio.modify(void *a1))(uint64_t a1, char a2)
{
  float v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio;
  v3[3] = v1;
  v3[4] = v4;
  id v5 = (_DWORD *)(v1 + v4);
  swift_beginAccess();
  *((_DWORD *)v3 + 10) = *v5;
  return sub_100C3C4C8;
}

void sub_100C3C4C8(uint64_t a1, char a2)
{
  float v2 = *(void **)a1;
  float v3 = *(float *)(*(void *)a1 + 40);
  if (a2)
  {
    VerticalToggleSlider.minLevelOffsetRatio.setter(v3);
  }
  else
  {
    uint64_t v5 = v2[3];
    uint64_t v4 = v2[4];
    float v6 = *(float *)(v5 + v4);
    *(float *)(v5 + v4) = v3;
    if (v3 != v6)
    {
      id v7 = (unsigned __int8 *)v2[3];
      sub_100C3DE18(0x100000000);
      id v8 = sub_100C3D7C0();
      int v9 = v7[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
      id v10 = [v7 traitCollection];
      float v11 = v10;
      if (v9 == 2)
      {

        double v12 = 0.0;
      }
      else if (v9)
      {

        double v12 = 1.0;
      }
      else
      {
        id v13 = [v10 accessibilityContrast];

        double v12 = 0.5;
        if (v13 == (id)1) {
          double v12 = 1.0;
        }
      }
      [v8 setAlpha:v12];
    }
  }

  free(v2);
}

uint64_t VerticalToggleSlider.interactionScaleFactor.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t VerticalToggleSlider.interactionScaleFactor.setter(uint64_t a1, char a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 8) = a2 & 1;
  return result;
}

uint64_t (*VerticalToggleSlider.interactionScaleFactor.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t VerticalToggleSlider.isTapToToggleEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t VerticalToggleSlider.isTapToToggleEnabled.setter(char a1)
{
  float v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled);
  uint64_t result = swift_beginAccess();
  *float v3 = a1;
  return result;
}

uint64_t (*VerticalToggleSlider.isTapToToggleEnabled.modify())()
{
  return j__swift_endAccess;
}

uint64_t VerticalToggleSlider.isVisuallyDisabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled);
  swift_beginAccess();
  return *v1;
}

void VerticalToggleSlider.isVisuallyDisabled.setter(char a1)
{
  int v3 = a1 & 1;
  uint64_t v4 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled];
  swift_beginAccess();
  int v5 = *v4;
  *uint64_t v4 = a1;
  if (v5 != v3)
  {
    if (a1) {
      unsigned int v6 = 1;
    }
    else {
      unsigned int v6 = [v1 isEnabled] ^ 1;
    }
    id v7 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
    if (v7)
    {
      double v8 = 0.4;
      if (!v6) {
        double v8 = 1.0;
      }
      [v7 setAlpha:v8];
    }
    id v9 = sub_100C3D680();
    id v10 = v9;
    double v11 = 1.0;
    if (v6) {
      double v11 = 0.5;
    }
    [v9 setAlpha:v11];
  }
}

void (*VerticalToggleSlider.isVisuallyDisabled.modify(void *a1))(uint64_t *a1, char a2)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled;
  v3[3] = v1;
  v3[4] = v4;
  int v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *v5;
  return sub_100C3C980;
}

void sub_100C3C980(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  int v3 = *(unsigned __int8 *)(*a1 + 40);
  if (a2)
  {
    VerticalToggleSlider.isVisuallyDisabled.setter(v3);
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 24);
    uint64_t v4 = *(void *)(v2 + 32);
    int v6 = *(unsigned __int8 *)(v5 + v4);
    *(unsigned char *)(v5 + v4) = v3;
    if (v3 != v6)
    {
      if (v3) {
        unsigned int v7 = 1;
      }
      else {
        unsigned int v7 = [*(id *)(v2 + 24) isEnabled] ^ 1;
      }
      double v8 = *(void **)(*(void *)(v2 + 24) + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView);
      if (v8)
      {
        double v9 = 0.4;
        if (!v7) {
          double v9 = 1.0;
        }
        [v8 setAlpha:v9];
      }
      id v10 = sub_100C3D680();
      double v11 = v10;
      double v12 = 1.0;
      if (v7) {
        double v12 = 0.5;
      }
      [v10 setAlpha:v12];
    }
  }

  free((void *)v2);
}

uint64_t VerticalToggleSlider.isContinuous.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous);
  swift_beginAccess();
  return *v1;
}

uint64_t VerticalToggleSlider.isContinuous.setter(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*VerticalToggleSlider.isContinuous.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t VerticalToggleSlider.accessibilityAutomaticallyDisablesOnMaxValue.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue);
  swift_beginAccess();
  return *v1;
}

uint64_t VerticalToggleSlider.automaticallyDisablesOnMaxValue.setter(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*VerticalToggleSlider.automaticallyDisablesOnMaxValue.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t VerticalToggleSlider.longPressMode.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode);
  swift_beginAccess();
  return *v1;
}

void VerticalToggleSlider.longPressMode.setter(unsigned __int8 a1)
{
  int v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode);
  swift_beginAccess();
  int v4 = *v3;
  *int v3 = a1;
  if (v4 != a1) {
    sub_100C3EA58();
  }
}

void (*VerticalToggleSlider.longPressMode.modify(void *a1))(uint64_t a1)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode;
  v3[3] = v1;
  v3[4] = v4;
  uint64_t v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *v5;
  return sub_100C3CD6C;
}

void sub_100C3CD6C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int v2 = *(unsigned __int8 *)(*(void *)a1 + 40);
  uint64_t v4 = *(void *)(*(void *)a1 + 24);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  int v5 = *(unsigned __int8 *)(v4 + v3);
  *(unsigned char *)(v4 + v3) = v2;
  if (v2 != v5) {
    sub_100C3EA58();
  }

  free(v1);
}

uint64_t VerticalToggleSlider.isBeingInteractedWith.getter()
{
  return *(unsigned char *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) & 1;
}

uint64_t VerticalToggleSlider.growAnchorPoint.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint);
  swift_beginAccess();
  return *v1;
}

void VerticalToggleSlider.growAnchorPoint.setter(char a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint];
  swift_beginAccess();
  *uint64_t v3 = a1;
  id v4 = sub_100C3D104();
  uint64_t v5 = *v3;
  id v6 = [v1 traitCollection];
  *(void *)&double v7 = sub_100C3F5C4(v6, v5).n128_u64[0];
  double v9 = v8;

  [v4 setAnchorPoint:v7, v9];
  id v10 = sub_100C3D104();
  [v1 bounds];
  [v10 setFrame:];
}

void (*VerticalToggleSlider.growAnchorPoint.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_100C3CF6C;
}

void sub_100C3CF6C(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = (unsigned __int8 *)v3[3];
    uint64_t v5 = v3[4];
    id v6 = sub_100C3D104();
    uint64_t v7 = v4[v5];
    id v8 = [v4 traitCollection];
    *(void *)&double v9 = sub_100C3F5C4(v8, v7).n128_u64[0];
    double v11 = v10;

    [v6 setAnchorPoint:v9, v11];
    id v12 = sub_100C3D104();
    [v4 bounds];
    [v12 setFrame:];
  }

  free(v3);
}

id sub_100C3D050()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___stretchView;
  int v2 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___stretchView];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___stretchView];
  }
  else
  {
    [v0 bounds];
    id v8 = [objc_allocWithZone((Class)UIView) initWithFrame:v4, v5, v6, v7];
    double v9 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v8;
    id v3 = v8;

    int v2 = 0;
  }
  id v10 = v2;
  return v3;
}

id sub_100C3D104()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___growView;
  int v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___growView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___growView);
  }
  else
  {
    id v4 = sub_100C3D050();
    [v4 bounds];
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;

    id v13 = [objc_allocWithZone((Class)UIView) initWithFrame:v6, v8, v10, v12];
    uint64_t v14 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v13;
    id v3 = v13;

    int v2 = 0;
  }
  id v15 = v2;
  return v3;
}

void sub_100C3D1C0(float a1)
{
  float v2 = *(float *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue];
  *(float *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue] = a1;
  if (v2 != a1)
  {
    uint64_t v3 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
    if ((v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] & 1) == 0)
    {
      sub_100C3DE18(0x100000000);
      id v9 = sub_100C3D7C0();
      int v4 = v1[v3];
      id v5 = [v1 traitCollection];
      double v6 = v5;
      if (v4 == 2)
      {

        double v7 = 0.0;
      }
      else if (v4)
      {

        double v7 = 1.0;
      }
      else
      {
        id v8 = [v5 accessibilityContrast];

        double v7 = 0.5;
        if (v8 == (id)1) {
          double v7 = 1.0;
        }
      }
      [v9 setAlpha:v7];
    }
  }
}

id sub_100C3D2D4()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___feedbackGenerator;
  float v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___feedbackGenerator);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___feedbackGenerator);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)_UIButtonFeedbackGenerator) initWithStyle:1];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    float v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_100C3D34C()
{
  id v1 = [v0 traitCollection];
  id v2 = [v1 accessibilityContrast];

  id v3 = sub_100C3D680();
  id v4 = [v3 contentView];

  id v5 = [v4 layer];
  if (v2 != (id)1)
  {
    [v5 setCompositingFilter:kCAFilterPlusL];

    id v12 = sub_100C3D680();
    id v13 = [v12 contentView];

    uint64_t v14 = self;
    id v15 = [v14 whiteColor];
    id v16 = [v15 colorWithAlphaComponent:0.18];

    [v13 setBackgroundColor:v16];
    id v17 = sub_100C3D7C0();
    id v18 = [v14 whiteColor];
    [v17 setBackgroundColor:v18];
LABEL_8:

    sub_100C3E610();
    return;
  }
  [v5 setCompositingFilter:0];

  int v6 = v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  id v7 = sub_100C3D680();
  id v8 = [v7 contentView];

  if (v6 != 2)
  {
    id v19 = objc_allocWithZone((Class)UIColor);
    v22[4] = sub_100C40144;
    v22[5] = 0;
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 1107296256;
    v22[2] = sub_10004DA48;
    v22[3] = &unk_101014080;
    uint64_t v20 = _Block_copy(v22);
    id v21 = [v19 initWithDynamicProvider:v20];
    _Block_release(v20);
    swift_release();
    [v8 setBackgroundColor:v21];

    goto LABEL_7;
  }
  id v9 = [v0 tintColor];
  if (v9)
  {
    double v10 = v9;
    id v11 = [v9 colorWithAlphaComponent:0.2];

    [v8 setBackgroundColor:v11];
LABEL_7:
    id v18 = sub_100C3D7C0();
    id v17 = [v0 tintColor];
    [v18 setBackgroundColor:v17];
    goto LABEL_8;
  }
  __break(1u);
}

id sub_100C3D680()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___visualEffectView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___visualEffectView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___visualEffectView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:*(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_blurEffect)];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_100C3D704(void *a1)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView);
  *(void *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView) = a1;
  id v7 = a1;
  if (a1)
  {
    if (!v3) {
      goto LABEL_8;
    }
    type metadata accessor for CoreAnimationPackageView();
    id v4 = v3;
    id v5 = v7;
    char v6 = static NSObject.== infix(_:_:)();

    if (v6) {
      goto LABEL_7;
    }
  }
  else if (!v3)
  {
    goto LABEL_8;
  }
  [v3 removeFromSuperview];
  id v4 = v3;
LABEL_7:

LABEL_8:
}

id sub_100C3D7C0()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___levelView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___levelView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___levelView);
  }
  else
  {
    id v4 = sub_100C3D680();
    [v4 bounds];
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;

    id v13 = [objc_allocWithZone((Class)UIView) initWithFrame:v6, v8, v10, v12];
    uint64_t v14 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v13;
    id v3 = v13;

    id v2 = 0;
  }
  id v15 = v2;
  return v3;
}

void sub_100C3D87C()
{
  sub_100063814(&qword_1010D0AB0);
  *(void *)&double v1 = __chkstk_darwin().n128_u64[0];
  id v3 = &v63[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  [v0 setClipsToBounds:0, v1];
  id v4 = sub_100C3D104();
  [v4 setUserInteractionEnabled:0];

  id v5 = sub_100C3D104();
  [v5 setAutoresizingMask:18];

  id v6 = sub_100C3D104();
  double v7 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint];
  swift_beginAccess();
  uint64_t v8 = *v7;
  id v9 = [v0 traitCollection];
  *(void *)&double v10 = sub_100C3F5C4(v9, v8).n128_u64[0];
  double v12 = v11;

  [v6 setAnchorPoint:v10, v12];
  id v13 = sub_100C3D104();
  [v0 bounds];
  [v13 setFrame:];

  id v14 = sub_100C3D104();
  [v0 addSubview:v14];

  id v15 = sub_100C3D050();
  [v15 setClipsToBounds:1];

  id v16 = sub_100C3D050();
  [v16 setUserInteractionEnabled:0];

  id v17 = sub_100C3D050();
  [v17 setAutoresizingMask:18];

  id v18 = sub_100C3D050();
  id v19 = sub_100C3D104();
  [v19 bounds];
  double v21 = v20;
  double v23 = v22;
  double v25 = v24;
  double v27 = v26;

  [v18 setFrame:v21, v23, v25, v27];
  id v28 = sub_100C3D104();
  id v29 = sub_100C3D050();
  [v28 addSubview:v29];

  id v30 = sub_100C3D680();
  [v30 setUserInteractionEnabled:0];

  id v31 = sub_100C3D680();
  [v31 setClipsToBounds:0];

  id v32 = sub_100C3D680();
  [v32 setAutoresizingMask:18];

  id v33 = sub_100C3D680();
  id v34 = sub_100C3D050();
  [v34 bounds];
  double v36 = v35;
  double v38 = v37;
  double v40 = v39;
  double v42 = v41;

  [v33 setFrame:v36, v38, v40, v42];
  id v43 = sub_100C3D680();
  id v44 = [v43 contentView];

  id v45 = [v44 layer];
  [v45 setCompositingFilter:kCAFilterPlusL];

  id v46 = sub_100C3D050();
  id v47 = sub_100C3D680();
  [v46 addSubview:v47];

  id v48 = sub_100C3D7C0();
  [v48 setUserInteractionEnabled:0];

  id v49 = sub_100C3D7C0();
  NSString v50 = String._bridgeToObjectiveC()();
  [v49 setAccessibilityIdentifier:v50];

  id v51 = sub_100C3D7C0();
  [v51 setAutoresizingMask:26];

  id v52 = sub_100C3D680();
  id v53 = [v52 contentView];

  id v54 = sub_100C3D7C0();
  [v53 addSubview:v54];

  v63[4] = 1;
  sub_100C3DE18(0x100000000);
  id v55 = sub_100C3D7C0();
  int v56 = v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  id v57 = [v0 traitCollection];
  uint64_t v58 = v57;
  if (v56 == 2)
  {

    double v59 = 0.0;
  }
  else if (v56)
  {

    double v59 = 1.0;
  }
  else
  {
    id v60 = [v57 accessibilityContrast];

    double v59 = 0.5;
    if (v60 == (id)1) {
      double v59 = 1.0;
    }
  }
  [v55 setAlpha:v59];

  sub_100C3D34C();
  sub_100C3E070();
  id v61 = sub_100C3D050();
  if (qword_1010C8898 != -1) {
    swift_once();
  }
  static UIView.Corner.value(_:continuous:)();
  uint64_t v62 = type metadata accessor for UIView.Corner();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v3, 0, 1, v62);
  UIView.corner.setter();
}

void sub_100C3DE18(uint64_t a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) == 2)
  {
    id v57 = sub_100C3D7C0();
    id v2 = sub_100C3D680();
    [v2 bounds];
    double v4 = v3;
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;

    [v57 setFrame:v4, v6, v8, v10];
  }
  else
  {
    id v12 = sub_100C3D680();
    [v12 bounds];
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    CGFloat v20 = v19;

    v59.origin.CGFloat x = v14;
    v59.origin.CGFloat y = v16;
    v59.size.CGFloat width = v18;
    v59.size.CGFloat height = v20;
    double Height = CGRectGetHeight(v59);
    double v22 = (float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio);
    swift_beginAccess();
    double v23 = Height * *v22;
    id v24 = sub_100C3D680();
    [v24 bounds];
    CGFloat v26 = v25;
    CGFloat v28 = v27;
    CGFloat v30 = v29;
    CGFloat v32 = v31;

    v60.origin.CGFloat x = v26;
    v60.origin.CGFloat y = v28;
    v60.size.CGFloat width = v30;
    v60.size.CGFloat height = v32;
    double v33 = CGRectGetHeight(v60);
    if ((a1 & 0x100000000) != 0) {
      float v34 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue);
    }
    else {
      float v34 = *(float *)&a1;
    }
    double v35 = v23 + (v33 - v23) * v34;
    id v36 = sub_100C3D680();
    [v36 bounds];
    CGFloat v38 = v37;
    CGFloat v40 = v39;
    CGFloat v42 = v41;
    CGFloat v44 = v43;

    v61.origin.CGFloat x = v38;
    v61.origin.CGFloat y = v40;
    v61.size.CGFloat width = v42;
    v61.size.CGFloat height = v44;
    double v45 = CGRectGetHeight(v61) - v35;
    if (v45 < 0.0) {
      double v46 = 0.0;
    }
    else {
      double v46 = v45;
    }
    id v47 = sub_100C3D7C0();
    id v48 = sub_100C3D680();
    [v48 bounds];
    CGFloat v50 = v49;
    CGFloat v52 = v51;
    CGFloat v54 = v53;
    CGFloat v56 = v55;

    v62.origin.CGFloat x = v50;
    v62.origin.CGFloat y = v52;
    v62.size.CGFloat width = v54;
    v62.size.CGFloat height = v56;
    [v47 setFrame:CGRectMake(0.0, v46, CGRectGetWidth(v62), v35)];
  }
}

void sub_100C3E070()
{
  uint64_t v1 = v0;
  id v2 = (uint64_t *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition];
  swift_beginAccess();
  uint64_t v3 = v2[1];
  if (v3)
  {
    double v4 = (void *)v2[2];
    uint64_t v5 = v2[4];
    uint64_t v6 = v2[5];
    uint64_t v8 = v2[6];
    uint64_t v7 = v2[7];
    uint64_t v10 = v2[8];
    uint64_t v9 = v2[9];
    uint64_t v51 = v2[3];
    uint64_t v52 = *v2;
    *(void *)&long long v53 = *v2;
    *((void *)&v53 + 1) = v3;
    CGFloat v54 = v4;
    uint64_t v55 = v51;
    uint64_t v56 = v5;
    uint64_t v57 = v6;
    uint64_t v58 = v8;
    uint64_t v59 = v7;
    uint64_t v60 = v10;
    uint64_t v61 = v9;
    double v11 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
    if (v11)
    {
      id v12 = v11;
      sub_100054404(v52, v3, v4);
      CoreAnimationPackageView.reset()();
    }
    else
    {
      id v13 = objc_allocWithZone((Class)type metadata accessor for CoreAnimationPackageView());
      swift_bridgeObjectRetain_n();
      id v14 = v4;
      swift_bridgeObjectRetain_n();
      id v15 = v14;
      id v16 = CoreAnimationPackageView.init(definition:)(&v53);
      id v17 = UIView.forAutolayout.getter();

      id v12 = (char *)v17;
      [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
      sub_100C3D704(v12);
      id v18 = sub_100C3D680();
      id v19 = [v18 contentView];

      [v19 addSubview:v12];
      sub_100063814(&qword_1010C9B10);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_100E291A0;
      CGFloat v50 = v4;
      id v21 = [v12 topAnchor];
      id v22 = sub_100C3D680();
      id v23 = [v22 topAnchor];

      id v24 = [v21 constraintGreaterThanOrEqualToAnchor:v23];
      *(void *)(v20 + 32) = v24;
      id v25 = [v12 leadingAnchor];
      id v26 = sub_100C3D680();
      id v27 = [v26 leadingAnchor];

      id v28 = [v25 constraintEqualToAnchor:v27];
      *(void *)(v20 + 40) = v28;
      id v29 = [v12 trailingAnchor];
      id v30 = sub_100C3D680();
      id v31 = [v30 trailingAnchor];

      id v32 = [v29 constraintEqualToAnchor:v31];
      *(void *)(v20 + 48) = v32;
      id v33 = [v12 bottomAnchor];
      id v34 = sub_100C3D680();
      id v35 = [v34 bottomAnchor];

      id v36 = [v33 constraintEqualToAnchor:v35];
      *(void *)(v20 + 56) = v36;
      id v37 = [v12 heightAnchor];
      id v38 = [v12 widthAnchor];

      id v39 = [v37 constraintEqualToAnchor:v38];
      *(void *)(v20 + 64) = v39;
      double v4 = v50;
      specialized Array._endMutation()();
      Array<A>.activate()(v20);
      swift_bridgeObjectRelease();
    }
    CGFloat v40 = (uint64_t *)&v12[OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName];
    if (v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] == 2)
    {
      swift_beginAccess();
      uint64_t v41 = *v40;
      uint64_t v42 = v40[1];
      *(_OWORD *)CGFloat v40 = xmmword_100E52710;
      double v43 = v12;
      sub_100058628(v41, v42);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_beginAccess();
      uint64_t v44 = *v40;
      uint64_t v45 = v40[1];
      *(_OWORD *)CGFloat v40 = xmmword_100E52700;
      sub_100058628(v44, v45);
      swift_bridgeObjectRelease();
      sub_100057778(0, (unint64_t *)&qword_1010C8910);
      double v46 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = v1;
      *(void *)(v47 + 24) = v12;
      id v48 = v1;
      double v43 = v12;
      double v49 = v12;
      OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100C44B78, v47);

      swift_release();
    }
    sub_100C3E610();

    sub_100053B68(v52, v3, v4);
  }
  else
  {
    sub_100C3D704(0);
  }
}

void sub_100C3E610()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
  if (v1)
  {
    int v2 = v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
    uint64_t v3 = v1;
    Class v4 = v3;
    if (v2 != 2)
    {
      id v12 = [v0 traitCollection];
      id v13 = [v12 accessibilityContrast];

      if (v13 == (id)1)
      {
        id v14 = [self whiteColor];
        id v15 = (void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor);
        swift_beginAccess();
        id v16 = *v15;
        *id v15 = v14;
        Class v17 = (Class)v14;

        if (*v15)
        {
          sub_10005486C();
        }
        else
        {
          id v25 = *(void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
          if (v25)
          {
            id v26 = v25;
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            [v26 setFilters:isa];

            Class v17 = isa;
          }
        }

        id v28 = [(objc_class *)v4 layer];
        [v28 setCompositingFilter:0];
      }
      else
      {
        uint64_t v20 = (void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor);
        swift_beginAccess();
        id v21 = *v20;
        *uint64_t v20 = 0;

        if (*v20)
        {
          sub_10005486C();
        }
        else
        {
          id v32 = *(void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
          if (v32)
          {
            id v33 = v32;
            Class v34 = Array._bridgeToObjectiveC()().super.isa;
            [v33 setFilters:v34];
          }
        }
        id v35 = [(objc_class *)v4 layer];
        id v36 = kCAFilterDestOut;
        [v35 setCompositingFilter:v36];
      }
      goto LABEL_24;
    }
    id v5 = [(objc_class *)v3 layer];
    [v5 setCompositingFilter:0];

    id v6 = [v0 traitCollection];
    id v7 = [v6 accessibilityContrast];

    if (v7 != (id)1)
    {
      id v18 = (void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor);
      swift_beginAccess();
      id v19 = *v18;
      void *v18 = 0;

      if (*v18)
      {
        sub_10005486C();
      }
      else
      {
        id v29 = *(void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
        if (v29)
        {
          id v30 = v29;
          Class v31 = Array._bridgeToObjectiveC()().super.isa;
          [v30 setFilters:v31];

          Class v4 = v31;
        }
      }
      goto LABEL_24;
    }
    id v8 = [v0 tintColor];
    uint64_t v9 = (void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_foregroundColor);
    swift_beginAccess();
    uint64_t v10 = *v9;
    *uint64_t v9 = v8;
    id v11 = v8;

    if (*v9)
    {
      sub_10005486C();
    }
    else
    {
      id v22 = *(void **)((char *)v4 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_packageLayer);
      if (v22)
      {
        id v23 = v22;
        Class v24 = Array._bridgeToObjectiveC()().super.isa;
        [v23 setFilters:v24];

        Class v4 = v24;
        goto LABEL_24;
      }
    }

    Class v4 = (Class)v11;
LABEL_24:
  }
}

void sub_100C3EA58()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode];
  swift_beginAccess();
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressGestureRecognizer;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressGestureRecognizer];
  if (*v1 - 1 > 1)
  {
    if (!v3) {
      return;
    }
    id v6 = v3;
    [v0 removeGestureRecognizer:v6];
    id v5 = *(void **)&v0[v2];
    *(void *)&v0[v2] = 0;
  }
  else
  {
    if (v3) {
      return;
    }
    id v4 = [objc_allocWithZone((Class)UILongPressGestureRecognizer) initWithTarget:v0 action:"longPressed:"];
    [v4 setMinimumPressDuration:0.25];
    [v0 addGestureRecognizer:v4];
    id v5 = *(void **)&v0[v2];
    *(void *)&v0[v2] = v4;
  }
}

void sub_100C3EB50(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode];
  swift_beginAccess();
  int v4 = *v3;
  if (v4 == 2 || v4 == 1 && v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] != 2)
  {
    id v5 = (char *)[a1 state];
    if ((unint64_t)(v5 - 3) >= 3)
    {
      if (v5 == (char *)2)
      {
        id v7 = sub_100C3D104();
        [a1 locationInView:v7];
        double v9 = v8;
        double v11 = v10;

        sub_100C3EF08(v9, v11);
      }
      else if (v5 == (char *)1)
      {
        unsigned __int8 v6 = v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
        v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 1;
        sub_100C401E0(v6);
        [v1 sendActionsForControlEvents:0x10000];
        [v1 sendActionsForControlEvents:4096];
        *(_DWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialValue] = *(_DWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue];
      }
    }
    else
    {
      sub_100C3EDF0();
    }
  }
}

void sub_100C3EC90(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  if (v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] != 2)
  {
    int v4 = (char *)[a1 state];
    if ((unint64_t)(v4 - 3) >= 3)
    {
      if (v4 == (char *)2)
      {
        id v12 = sub_100C3D104();
        [a1 locationInView:v12];
        double v14 = v13;
        double v16 = v15;

        sub_100C3EF08(v14, v16);
      }
      else if (v4 == (char *)1)
      {
        [v1 sendActionsForControlEvents:0x10000];
        unsigned __int8 v5 = v1[v2];
        v1[v2] = 1;
        sub_100C401E0(v5);
        id v6 = sub_100C3D104();
        [a1 locationInView:v6];
        uint64_t v8 = v7;
        uint64_t v10 = v9;

        double v11 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation];
        *(void *)double v11 = v8;
        *((void *)v11 + 1) = v10;
        unsigned char v11[16] = 0;
        *(_DWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialValue] = *(_DWORD *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue];
      }
    }
    else
    {
      sub_100C3EDF0();
    }
  }
}

void sub_100C3EDF0()
{
  float v1 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue];
  float v2 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue];
  if (v1 > v2)
  {
    __break(1u);
  }
  else
  {
    float v3 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue];
    float v4 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange];
    float v5 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4];
    if (v4 > v3) {
      float v3 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange];
    }
    if (v5 < v3) {
      float v3 = *(float *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4];
    }
    if ((float)(v1 + (float)((float)(v2 - v1) * (float)((float)(v3 - v4) / (float)(v5 - v4)))) == v2
      && (id v6 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue],
          swift_beginAccess(),
          *v6 == 1))
    {
      unsigned __int8 v7 = v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
      v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 2;
    }
    else
    {
      unsigned __int8 v7 = v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
      v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 0;
    }
    sub_100C401E0(v7);
    uint64_t v8 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation];
    *(void *)uint64_t v8 = 0;
    *((void *)v8 + 1) = 0;
    v8[16] = 1;
    [v0 sendActionsForControlEvents:0x40000];
  }
}

id sub_100C3EF08(double a1, double a2)
{
  float v4 = (double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation];
  if (v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation + 16])
  {
    *float v4 = a1;
    v4[1] = a2;
    double v5 = a2;
    *((unsigned char *)v4 + 16) = 0;
  }
  else
  {
    double v5 = v4[1];
  }
  id v6 = sub_100C3D104();
  [v6 bounds];
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;

  v42.origin.CGFloat x = v8;
  v42.origin.CGFloat y = v10;
  v42.size.CGFloat width = v12;
  v42.size.CGFloat height = v14;
  double Height = CGRectGetHeight(v42);
  double v16 = (float *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio];
  swift_beginAccess();
  double v17 = Height * (1.0 - *v16);
  double v18 = (v5 - a2) * (1.0 / v17) + *(float *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialValue];
  float v19 = *(float *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange];
  float v20 = v18;
  if (v19 <= v20) {
    float v19 = v18;
  }
  if (*(float *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4] < v19) {
    float v19 = *(float *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4];
  }
  sub_100C3D1C0(v19);
  if (v17 < 0.0)
  {
    __break(1u);
    goto LABEL_30;
  }
  double v21 = 0.0;
  double v22 = v17 * v18 + 0.0;
  if (v22 >= 0.0 && v22 <= v17)
  {
    if (qword_1010C8868 == -1)
    {
LABEL_18:
      Class v31 = &v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
      double v27 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
      double v28 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8];
      double v29 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16];
      double v30 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24];
      long long v32 = *(_OWORD *)&qword_1010D10A8;
      _OWORD *v31 = xmmword_1010D1098;
      v31[1] = v32;
      goto LABEL_19;
    }
LABEL_30:
    swift_once();
    goto LABEL_18;
  }
  if (v22 >= 0.0) {
    double v21 = v17;
  }
  double v24 = vabdd_f64(v22, v21);
  double v25 = (v22 - v21) * 0.01;
  id v26 = (float64x2_t *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
  double v27 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
  double v28 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8];
  double v29 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16];
  double v30 = *(double *)&v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24];
  *id v26 = vmulq_n_f64((float64x2_t)xmmword_100E52720, v24);
  v26[1].f64[0] = v24 * 0.01;
  v26[1].f64[1] = v25;
LABEL_19:
  sub_100C43010(v27, v28, v29, v30);
  LOBYTE(v41) = 1;
  sub_100C3DE18(0x100000000);
  id v33 = sub_100C3D7C0();
  int v34 = v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  id v35 = [v2 traitCollection:v41];
  id v36 = v35;
  if (v34 == 2)
  {

    double v37 = 0.0;
  }
  else if (v34)
  {

    double v37 = 1.0;
  }
  else
  {
    id v38 = [v35 accessibilityContrast];

    double v37 = 0.5;
    if (v38 == (id)1) {
      double v37 = 1.0;
    }
  }
  [v33 setAlpha:v37];

  id v39 = &v2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous];
  id result = (id)swift_beginAccess();
  if (*v39) {
    return [v2 sendActionsForControlEvents:4096];
  }
  return result;
}

void sub_100C3F1DC(uint64_t a1)
{
  sub_100054738(a1, (uint64_t)v51);
  uint64_t v4 = v51[0];
  uint64_t v3 = v51[1];
  uint64_t v19 = v51[3];
  uint64_t v20 = v51[4];
  double v21 = (void *)v51[5];
  uint64_t v22 = v51[6];
  uint64_t v23 = v51[7];
  uint64_t v24 = v51[8];
  uint64_t v25 = v51[2];
  double v18 = (void *)v51[9];
  double v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition);
  swift_beginAccess();
  uint64_t v6 = v5[1];
  double v7 = (void *)v5[2];
  uint64_t v8 = v5[3];
  uint64_t v9 = v5[4];
  uint64_t v10 = v5[7];
  uint64_t v27 = v5[5];
  uint64_t v28 = v5[6];
  uint64_t v11 = v5[8];
  double v29 = (void *)v5[9];
  uint64_t v30 = *v5;
  CGFloat v12 = (void *)a1;
  if (!v6)
  {
    sub_100054738(a1, (uint64_t)v52);
    uint64_t v13 = v30;
    if (!v53) {
      return;
    }
    goto LABEL_13;
  }
  sub_100054738(a1, (uint64_t)v52);
  uint64_t v13 = v30;
  if (!v53)
  {
LABEL_13:
    uint64_t v31 = v13;
    uint64_t v32 = v6;
    id v33 = v7;
    uint64_t v34 = v8;
    uint64_t v35 = v9;
    uint64_t v36 = v27;
    uint64_t v37 = v28;
    uint64_t v38 = v10;
    uint64_t v39 = v11;
    CGFloat v40 = v29;
    uint64_t v41 = v4;
    uint64_t v42 = v3;
    uint64_t v43 = v25;
    uint64_t v44 = v19;
    uint64_t v45 = v20;
    double v46 = v21;
    uint64_t v47 = v22;
    uint64_t v48 = v23;
    uint64_t v49 = v24;
    CGFloat v50 = v18;
    sub_100054404(v13, v6, v7);
    sub_100053BB4(v12, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100054404);
    sub_100C44CEC((uint64_t)&v31);
    goto LABEL_15;
  }
  BOOL v14 = v30 == v4 && v6 == v3;
  if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    goto LABEL_15;
  }
  sub_100057778(0, (unint64_t *)&qword_1010CAA20);
  double v15 = v7;
  uint64_t v16 = v8;
  double v17 = v15;
  sub_100054404(v30, v6, v15);
  sub_100053BB4(v12, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100054404);
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v54 = v16;
  uint64_t v55 = v9;
  uint64_t v56 = v27;
  uint64_t v57 = v28;
  uint64_t v58 = v10;
  uint64_t v59 = v11;
  uint64_t v31 = v19;
  uint64_t v32 = v20;
  id v33 = v21;
  uint64_t v34 = v22;
  uint64_t v35 = v23;
  uint64_t v36 = v24;
  if ((static CGAffineTransform.== infix(_:_:)() & 1) == 0)
  {
LABEL_14:
    sub_100053BB4(v12, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100053B68);
    sub_100053B68(v30, v6, v17);
    goto LABEL_15;
  }
  char v26 = sub_100054E98(v29, v18);
  sub_100053BB4(v12, (void (*)(void, void, void, void, void, void, void, void, void, void))sub_100053B68);
  sub_100053B68(v30, v6, v17);
  if ((v26 & 1) == 0)
  {
LABEL_15:
    sub_100C3D704(0);
    sub_100C3E070();
  }
}

long long *VerticalToggleSlider.DesignSpecs.expandedSize.unsafeMutableAddressor()
{
  if (qword_1010C8888 != -1) {
    swift_once();
  }
  return &static VerticalToggleSlider.DesignSpecs.expandedSize;
}

__n128 sub_100C3F5C4(id a1, uint64_t a2)
{
  id v3 = a1;
  if (a1) {
    a1 = [a1 layoutDirection];
  }
  switch((char)a2)
  {
    case 1:
      uint64_t v4 = CGPoint.topCenter.unsafeMutableAddressor();
      goto LABEL_34;
    case 2:
      if (!v3 || (unint64_t)a1 + 1 < 2) {
        goto LABEL_11;
      }
      if (a1 != (id)1) {
        goto LABEL_35;
      }
LABEL_29:
      uint64_t v4 = CGPoint.topLeft.unsafeMutableAddressor();
      goto LABEL_34;
    case 3:
      if (!v3 || (unint64_t)a1 + 1 < 2) {
        goto LABEL_31;
      }
      if (a1 != (id)1) {
        goto LABEL_35;
      }
LABEL_19:
      uint64_t v4 = CGPoint.centerRight.unsafeMutableAddressor();
      goto LABEL_34;
    case 4:
      uint64_t v4 = CGPoint.center.unsafeMutableAddressor();
      goto LABEL_34;
    case 5:
      if (!v3 || (unint64_t)a1 + 1 < 2) {
        goto LABEL_19;
      }
      if (a1 != (id)1) {
        goto LABEL_35;
      }
LABEL_31:
      uint64_t v4 = CGPoint.centerLeft.unsafeMutableAddressor();
      goto LABEL_34;
    case 6:
      if (!v3 || (unint64_t)a1 + 1 < 2) {
        goto LABEL_33;
      }
      if (a1 != (id)1) {
        goto LABEL_35;
      }
LABEL_27:
      uint64_t v4 = CGPoint.bottomRight.unsafeMutableAddressor();
      goto LABEL_34;
    case 7:
      uint64_t v4 = CGPoint.bottomCenter.unsafeMutableAddressor();
      goto LABEL_34;
    case 8:
      if (!v3 || (unint64_t)a1 + 1 < 2) {
        goto LABEL_27;
      }
      if (a1 != (id)1) {
        goto LABEL_35;
      }
LABEL_33:
      uint64_t v4 = CGPoint.bottomLeft.unsafeMutableAddressor();
      goto LABEL_34;
    default:
      if (!v3 || (unint64_t)a1 + 1 < 2) {
        goto LABEL_29;
      }
      if (a1 == (id)1)
      {
LABEL_11:
        uint64_t v4 = CGPoint.topRight.unsafeMutableAddressor();
LABEL_34:
        double v5 = v4;
        swift_beginAccess();
        return *(__n128 *)v5;
      }
      else
      {
LABEL_35:
        sub_100C3F5C4(0, a2);
        result.n128_u64[1] = v7;
      }
      return result;
  }
}

id VerticalToggleSlider.init(frame:)(double a1, double a2, double a3, double a4)
{
  double v5 = v4;
  swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *((_OWORD *)v10 + 3) = 0u;
  *((_OWORD *)v10 + 4) = 0u;
  uint64_t v11 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio;
  uint64_t v12 = qword_1010C8888;
  uint64_t v13 = v4;
  if (v12 != -1) {
    swift_once();
  }
  double v14 = 1.0 / *((double *)&static VerticalToggleSlider.DesignSpecs.expandedSize + 1);
  if (qword_1010C8878 != -1) {
    swift_once();
  }
  float v15 = v14 * *(double *)&qword_10112D0F8;
  *(float *)&v5[v11] = v15;
  uint64_t v16 = &v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
  *(void *)uint64_t v16 = 0;
  v16[8] = 1;
  v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled] = 1;
  v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled] = 0;
  v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous] = 1;
  v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue] = 1;
  v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode] = 1;
  v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint] = 8;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___stretchView] = 0;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___growView] = 0;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange] = 0x3F80000000000000;
  *(_DWORD *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue] = 1065353216;
  *(_DWORD *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue] = 0;
  *(_DWORD *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue] = 1065353216;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___feedbackGenerator] = 0;
  v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 2;
  uint64_t v17 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_blurEffect;
  if (qword_1010C8860 != -1) {
    swift_once();
  }
  *(void *)&v13[v17] = [self effectWithBlurRadius:*(double *)&qword_1010D1090];
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___visualEffectView] = 0;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView] = 0;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___levelView] = 0;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_sceneActivationObserver] = 0;
  *(void *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressGestureRecognizer] = 0;
  double v18 = &v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation];
  *(void *)double v18 = 0;
  *((void *)v18 + 1) = 0;
  v18[16] = 1;
  *(_DWORD *)&v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialValue] = 0;
  uint64_t v19 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange;
  if (qword_1010C8868 != -1) {
    swift_once();
  }
  uint64_t v20 = &v13[v19];
  long long v21 = *(_OWORD *)&qword_1010D10A8;
  *(_OWORD *)uint64_t v20 = xmmword_1010D1098;
  *((_OWORD *)v20 + 1) = v21;
  uint64_t v22 = &v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_stretchTransform];
  *(void *)uint64_t v22 = 0x3FF0000000000000;
  *((void *)v22 + 1) = 0;
  *((void *)v22 + 2) = 0;
  *((void *)v22 + 3) = 0x3FF0000000000000;
  *((void *)v22 + 4) = 0;
  *((void *)v22 + 5) = 0;
  uint64_t v23 = &v13[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform];
  *(void *)uint64_t v23 = 0x3FF0000000000000;
  *((void *)v23 + 1) = 0;
  *((void *)v23 + 2) = 0;
  *((void *)v23 + 3) = 0x3FF0000000000000;
  *((void *)v23 + 4) = 0;
  *((void *)v23 + 5) = 0;

  v33.receiver = v13;
  v33.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  id v24 = [super initWithFrame:a1, a2, a3, a4];
  [v24 setDeliversTouchesForGesturesToSuperview:0];
  sub_100057778(0, &qword_1010CAC68);
  uint64_t v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v26 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [v24 addAction:v26 forControlEvents:64];

  id v27 = [objc_allocWithZone((Class)UIPanGestureRecognizer) initWithTarget:v24 action:"dragged:"];
  [v24 addGestureRecognizer:v27];

  sub_100C3EA58();
  sub_100C3D87C();
  sub_100063814(&qword_1010CAAA0);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_100E251D0;
  *(void *)(v28 + 32) = type metadata accessor for UITraitAccessibilityContrast();
  *(void *)(v28 + 40) = &protocol witness table for UITraitAccessibilityContrast;
  id v29 = v24;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_100E251D0;
  *(void *)(v30 + 32) = type metadata accessor for UITraitLayoutDirection();
  *(void *)(v30 + 40) = &protocol witness table for UITraitLayoutDirection;
  id v31 = v29;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v31;
}

double VerticalToggleSlider.intrinsicContentSize.getter()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) == 2)
  {
    if (qword_1010C8880 != -1) {
      swift_once();
    }
    uint64_t v1 = &static VerticalToggleSlider.DesignSpecs.size;
  }
  else
  {
    if (qword_1010C8888 != -1) {
      swift_once();
    }
    uint64_t v1 = &static VerticalToggleSlider.DesignSpecs.expandedSize;
  }
  return *(double *)v1;
}

long long *VerticalToggleSlider.DesignSpecs.size.unsafeMutableAddressor()
{
  if (qword_1010C8880 != -1) {
    swift_once();
  }
  return &static VerticalToggleSlider.DesignSpecs.size;
}

id VerticalToggleSlider.isEnabled.getter()
{
  return sub_100C42894((SEL *)&selRef_isEnabled);
}

uint64_t VerticalToggleSlider.isEnabled.setter(char a1)
{
  return sub_100C429B8(a1, (SEL *)&selRef_isEnabled, (SEL *)&selRef_setEnabled_, (uint64_t (*)(id))sub_100C3FF24);
}

void sub_100C3FF24(char a1)
{
  if ([v1 isEnabled] != (a1 & 1))
  {
    float v2 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled];
    swift_beginAccess();
    if (*v2) {
      unsigned int v3 = 1;
    }
    else {
      unsigned int v3 = [v1 isEnabled] ^ 1;
    }
    uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
    if (v4)
    {
      double v5 = 0.4;
      if (!v3) {
        double v5 = 1.0;
      }
      [v4 setAlpha:v5];
    }
    id v6 = sub_100C3D680();
    unint64_t v7 = v6;
    double v8 = 1.0;
    if (v3) {
      double v8 = 0.5;
    }
    [v6 setAlpha:v8];
  }
}

Swift::Void __swiftcall VerticalToggleSlider.tintColorDidChange()()
{
  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  [super tintColorDidChange];
  sub_100C3D34C();
}

long long *VerticalToggleSlider.DesignSpecs.minimumTapArea.unsafeMutableAddressor()
{
  if (qword_1010C8890 != -1) {
    swift_once();
  }
  return &static VerticalToggleSlider.DesignSpecs.minimumTapArea;
}

id sub_100C40144(void *a1)
{
  id v1 = [a1 userInterfaceStyle];
  if (qword_1010C8418 != -1) {
    swift_once();
  }
  id v2 = [(id)static UIColor.MusicTint.normal colorWithAlphaComponent:dbl_100E52730[v1 == (id)2]];

  return v2;
}

void sub_100C401E0(unsigned __int8 a1)
{
  id v2 = v1;
  int v3 = a1;
  uint64_t v4 = sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin(v4 - 8);
  id v6 = &v154[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  int v8 = v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  if (v8 == 2)
  {
    if (v3 == 2) {
      return;
    }
  }
  else if (v3 == 2)
  {
    if (v8) {
      sub_100C3D1C0(1.0);
    }
  }
  else if ((((v3 & 1) == 0) ^ v8))
  {
    return;
  }
  id v9 = sub_100C3D2D4();
  [v9 userInteractionStarted];

  uint64_t v10 = self;
  if ([v10 areAnimationsEnabled])
  {
    int v11 = v1[v7];
    if (v3 == 2)
    {
      if (v11 == 2) {
        return;
      }
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v2;
      *(unsigned char *)(v12 + 24) = v11 & 1;
      if (v11)
      {
        uint64_t v109 = qword_1010C88D0;
        id v110 = v2;
        if (v109 != -1) {
          swift_once();
        }
        uint64_t v111 = (void *)qword_1010D10E8;
        [(id)qword_1010D10E8 settlingDuration];
        double v113 = v112;
        [v111 mass];
        double v115 = v114;
        [v111 stiffness];
        double v117 = v116;
        [v111 damping];
        double v119 = v118;
        *(void *)&aBlock.tCGFloat x = sub_100C44C8C;
        *(void *)&aBlock.tCGFloat y = v12;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        *(void *)&aBlock.CGFloat c = sub_100020238;
        *(void *)&aBlock.CGFloat d = &unk_1010143C8;
        uint64_t v120 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v10 _animateUsingSpringWithDuration:6 delay:v120 options:0 mass:v113 stiffness:0.0 damping:v115 initialVelocity:v117 animations:v119 completion:0.0];
        _Block_release(v120);
        if (qword_1010C88D8 != -1) {
          swift_once();
        }
        uint64_t v121 = (void *)qword_1010D10F0;
        uint64_t v122 = swift_allocObject();
        *(void *)(v122 + 16) = v110;
        id v123 = v110;
        [v121 settlingDuration];
        double v125 = v124;
        [v121 mass];
        double v127 = v126;
        [v121 stiffness];
        double v129 = v128;
        [v121 damping];
        double v131 = v130;
        *(void *)&aBlock.tCGFloat x = sub_100C44CA8;
        *(void *)&aBlock.tCGFloat y = v122;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        *(void *)&aBlock.CGFloat c = sub_100020238;
        *(void *)&aBlock.CGFloat d = &unk_101014418;
        uint64_t v132 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v10 _animateUsingSpringWithDuration:6 delay:v132 options:0 mass:v125 stiffness:0.0 damping:v127 initialVelocity:v129 animations:v131 completion:0.0];
        _Block_release(v132);
      }
      else
      {
        uint64_t v13 = qword_1010C88B0;
        id v14 = v2;
        if (v13 != -1) {
          swift_once();
        }
        float v15 = (void *)qword_1010D10C8;
        [(id)qword_1010D10C8 settlingDuration];
        double v17 = v16;
        [v15 mass];
        double v19 = v18;
        [v15 stiffness];
        double v21 = v20;
        [v15 damping];
        double v23 = v22;
        *(void *)&aBlock.tCGFloat x = sub_100C44C8C;
        *(void *)&aBlock.tCGFloat y = v12;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        *(void *)&aBlock.CGFloat c = sub_100020238;
        *(void *)&aBlock.CGFloat d = &unk_101014328;
        id v24 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v10 _animateUsingSpringWithDuration:6 delay:v24 options:0 mass:v17 stiffness:0.2 damping:v19 initialVelocity:v21 animations:v23 completion:0.0];
        _Block_release(v24);
        if (qword_1010C88A8 != -1) {
          swift_once();
        }
        uint64_t v25 = (void *)qword_1010D10C0;
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = v14;
        id v27 = v14;
        [v25 settlingDuration];
        double v29 = v28;
        [v25 mass];
        double v31 = v30;
        [v25 stiffness];
        double v33 = v32;
        [v25 damping];
        double v35 = v34;
        *(void *)&aBlock.tCGFloat x = sub_100C44C98;
        *(void *)&aBlock.tCGFloat y = v26;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        *(void *)&aBlock.CGFloat c = sub_100020238;
        *(void *)&aBlock.CGFloat d = &unk_101014378;
        uint64_t v36 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v10 _animateUsingSpringWithDuration:6 delay:v36 options:0 mass:v29 stiffness:0.0 damping:v31 initialVelocity:v33 animations:v35 completion:0.0];
        _Block_release(v36);
        swift_release();
        sub_100057778(0, (unint64_t *)&qword_1010C8910);
        uint64_t v37 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = v27;
        id v39 = v27;
        OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100C44CA0, v38);
      }
LABEL_68:
      swift_release();
      swift_release();
      return;
    }
    int v56 = v3 & 1;
    if (v11 != 2)
    {
      if ((((v56 != 0) ^ v11) & 1) == 0) {
        return;
      }
      int v81 = v11 & 1;
      uint64_t v82 = swift_allocObject();
      *(void *)(v82 + 16) = v2;
      *(unsigned char *)(v82 + 24) = v81;
      uint64_t v83 = swift_allocObject();
      *(void *)(v83 + 16) = v2;
      *(unsigned char *)(v83 + 24) = v81;
      if (v81)
      {
        uint64_t v84 = qword_1010C88D0;
        id v85 = v2;
        if (v84 != -1) {
          swift_once();
        }
        uint64_t v86 = (void *)qword_1010D10E8;
        [(id)qword_1010D10E8 settlingDuration];
        double v88 = v87;
        [v86 mass];
        double v90 = v89;
        [v86 stiffness];
        double v92 = v91;
        [v86 damping];
        double v94 = v93;
        *(void *)&aBlock.tCGFloat x = sub_100C44BC0;
        *(void *)&aBlock.tCGFloat y = v82;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        *(void *)&aBlock.CGFloat c = sub_100020238;
        *(void *)&aBlock.CGFloat d = &unk_101014198;
        uint64_t v95 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v10 _animateUsingSpringWithDuration:6 delay:v95 options:0 mass:v88 stiffness:0.0 damping:v90 initialVelocity:v92 animations:v94 completion:0.0];
        _Block_release(v95);
        if (qword_1010C88D8 != -1) {
          swift_once();
        }
        uint64_t v96 = (void *)qword_1010D10F0;
        [(id)qword_1010D10F0 settlingDuration];
        double v98 = v97;
        [v96 mass];
        double v100 = v99;
        [v96 stiffness];
        double v102 = v101;
        [v96 damping];
        double v104 = v103;
        *(void *)&aBlock.tCGFloat x = sub_100C44BCC;
        *(void *)&aBlock.tCGFloat y = v83;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        uint64_t v105 = &unk_1010141C0;
      }
      else
      {
        uint64_t v133 = qword_1010C88E0;
        id v134 = v2;
        if (v133 != -1) {
          swift_once();
        }
        uint64_t v135 = (void *)qword_1010D10F8;
        uint64_t v136 = swift_allocObject();
        *(void *)(v136 + 16) = v134;
        id v137 = v134;
        [v135 settlingDuration];
        double v139 = v138;
        [v135 mass];
        double v141 = v140;
        [v135 stiffness];
        double v143 = v142;
        [v135 damping];
        double v145 = v144;
        *(void *)&aBlock.tCGFloat x = sub_100C44BC0;
        *(void *)&aBlock.tCGFloat y = v82;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        *(void *)&aBlock.CGFloat c = sub_100020238;
        *(void *)&aBlock.CGFloat d = &unk_101014120;
        uint64_t v146 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        *(void *)&aBlock.tCGFloat x = UIScreen.Dimensions.size.getter;
        *(void *)&aBlock.tCGFloat y = v136;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        *(void *)&aBlock.CGFloat c = sub_1001695E8;
        *(void *)&aBlock.CGFloat d = &unk_101014148;
        uint64_t v147 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v10 _animateUsingSpringWithDuration:6 delay:v146 options:v147 mass:v139 stiffness:0.0 damping:v141 initialVelocity:v143 animations:v145 completion:0.0];
        _Block_release(v147);
        _Block_release(v146);
        swift_release();
        if (qword_1010C88E8 != -1) {
          swift_once();
        }
        uint64_t v148 = (void *)qword_1010D1100;
        [(id)qword_1010D1100 settlingDuration];
        double v98 = v149;
        [v148 mass];
        double v100 = v150;
        [v148 stiffness];
        double v102 = v151;
        [v148 damping];
        double v104 = v152;
        *(void *)&aBlock.tCGFloat x = sub_100C44BCC;
        *(void *)&aBlock.tCGFloat y = v83;
        *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
        *(void *)&aBlock.CGFloat b = 1107296256;
        uint64_t v105 = &unk_101014170;
      }
      *(void *)&aBlock.CGFloat c = sub_100020238;
      *(void *)&aBlock.CGFloat d = v105;
      long long v153 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v10 _animateUsingSpringWithDuration:6 delay:v153 options:0 mass:v98 stiffness:0.0 damping:v100 initialVelocity:v102 animations:v104 completion:0.0];
      _Block_release(v153);
      goto LABEL_68;
    }
    if ((v3 & 1) == 0)
    {
      if (qword_1010C88C0 != -1) {
        swift_once();
      }
      uint64_t v57 = (void *)qword_1010D10D8;
      uint64_t v58 = swift_allocObject();
      *(void *)(v58 + 16) = v2;
      id v59 = v2;
      [v57 settlingDuration];
      double v61 = v60;
      [v57 mass];
      double v63 = v62;
      [v57 stiffness];
      double v65 = v64;
      [v57 damping];
      double v67 = v66;
      *(void *)&aBlock.tCGFloat x = sub_100C44C10;
      *(void *)&aBlock.tCGFloat y = v58;
      *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
      *(void *)&aBlock.CGFloat b = 1107296256;
      *(void *)&aBlock.CGFloat c = sub_100020238;
      *(void *)&aBlock.CGFloat d = &unk_101014210;
      uint64_t v68 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v10 _animateUsingSpringWithDuration:6 delay:v68 options:0 mass:v61 stiffness:0.0 damping:v63 initialVelocity:v65 animations:v67 completion:0.0];
      _Block_release(v68);
      swift_release();
    }
    if (qword_1010C88C8 != -1) {
      swift_once();
    }
    uint64_t v69 = qword_1010D10E0;
    uint64_t v70 = swift_allocObject();
    *(unsigned char *)(v70 + 16) = v56;
    *(void *)(v70 + 24) = v2;
    uint64_t v71 = swift_allocObject();
    *(void *)(v71 + 16) = v2;
    id v72 = v2;
    double v73 = 0.0;
    if (!v56) {
      double v73 = 0.1;
    }
    sub_100C44078(v69, 2, sub_100C44C50, v70, UIScreen.Dimensions.size.getter, v71, 0.75, v73);
    swift_release();
    swift_release();
    sub_100057778(0, (unint64_t *)&qword_1010C8910);
    uint64_t v74 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = v72;
    id v76 = v72;
    OS_dispatch_queue.asyncAfter(_:block:)((uint64_t)sub_100C44C5C, v75);

    swift_release();
    if (!v56)
    {
      uint64_t v77 = swift_allocObject();
      *(void *)(v77 + 16) = v76;
      *(void *)&aBlock.tCGFloat x = sub_100C44C84;
      *(void *)&aBlock.tCGFloat y = v77;
      *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
      *(void *)&aBlock.CGFloat b = 1107296256;
      *(void *)&aBlock.CGFloat c = sub_100020238;
      *(void *)&aBlock.CGFloat d = &unk_1010142D8;
      uint64_t v78 = _Block_copy(&aBlock);
      id v79 = v76;
      swift_release();
      [v10 animateWithDuration:0 delay:v78 options:0 animations:0.25 completion:0.7];
      _Block_release(v78);
    }
  }
  else
  {
    [v1 invalidateIntrinsicContentSize];
    [v1 setNeedsUpdateConstraints];
    id v40 = [v1 superview];
    [v40 setNeedsLayout];

    id v41 = [v1 superview];
    [v41 layoutIfNeeded];

    [v1 updateConstraintsIfNeeded];
    CGFloat v42 = 1.0;
    CGFloat v43 = 1.0;
    if (v1[v7])
    {
      uint64_t v44 = (uint64_t *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
      swift_beginAccess();
      if (*((unsigned char *)v44 + 8) == 1)
      {
        if (qword_1010C8870 != -1) {
          swift_once();
        }
        uint64_t v44 = &qword_10112D0F0;
      }
      CGFloat v43 = *(double *)v44;
    }
    if (v1[v7])
    {
      uint64_t v45 = (uint64_t *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
      swift_beginAccess();
      if (*((unsigned char *)v45 + 8) == 1)
      {
        if (qword_1010C8870 != -1) {
          swift_once();
        }
        uint64_t v45 = &qword_10112D0F0;
      }
      CGFloat v42 = *(double *)v45;
    }
    CGAffineTransformMakeScale(&aBlock, v43, v42);
    long long v46 = *(_OWORD *)&aBlock.c;
    long long v47 = *(_OWORD *)&aBlock.tx;
    uint64_t v48 = &v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform];
    *(_OWORD *)uint64_t v48 = *(_OWORD *)&aBlock.a;
    *((_OWORD *)v48 + 1) = v46;
    *((_OWORD *)v48 + 2) = v47;
    id v49 = sub_100C3D104();
    long long v50 = *((_OWORD *)v48 + 1);
    *(_OWORD *)&aBlock.CGFloat a = *(_OWORD *)v48;
    *(_OWORD *)&aBlock.CGFloat c = v50;
    *(_OWORD *)&aBlock.tCGFloat x = *((_OWORD *)v48 + 2);
    [v49 setTransform:&aBlock];

    sub_100C3E070();
    LOBYTE(aBlock.a) = 1;
    sub_100C3DE18(0x100000000);
    id v51 = sub_100C3D7C0();
    int v52 = v1[v7];
    id v53 = [v1 traitCollection];
    uint64_t v54 = v53;
    if (v52 == 2)
    {

      double v55 = 0.0;
    }
    else if (v52)
    {

      double v55 = 1.0;
    }
    else
    {
      id v80 = [v53 accessibilityContrast];

      double v55 = 0.5;
      if (v80 == (id)1) {
        double v55 = 1.0;
      }
    }
    [v51 setAlpha:v55];

    id v106 = sub_100C3D050();
    if (qword_1010C8898 != -1) {
      swift_once();
    }
    static UIView.Corner.value(_:continuous:)();
    uint64_t v107 = type metadata accessor for UIView.Corner();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v6, 0, 1, v107);
    UIView.corner.setter();

    id v108 = [self clearColor];
    UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v108, (uint64_t)&aBlock, 0.0, 0.0, 0.0, 0.0);
    UIView.shadow.setter((uint64_t)&aBlock);
  }
}

void sub_100C41574(char *a1, char a2)
{
  uint64_t v4 = sub_100063814(&qword_1010D0AB0);
  *(void *)&double v5 = __chkstk_darwin(v4 - 8).n128_u64[0];
  uint64_t v7 = &v28[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  [a1 invalidateIntrinsicContentSize];
  [a1 setNeedsUpdateConstraints];
  id v8 = [a1 superview];
  [v8 setNeedsLayout];

  id v9 = [a1 superview];
  [v9 layoutIfNeeded];

  [a1 updateConstraintsIfNeeded];
  uint64_t v10 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  CGFloat v11 = 1.0;
  CGFloat v12 = 1.0;
  if (a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode])
  {
    uint64_t v13 = (uint64_t *)&a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
    swift_beginAccess();
    if (*((unsigned char *)v13 + 8) == 1)
    {
      if (qword_1010C8870 != -1) {
        swift_once();
      }
      uint64_t v13 = &qword_10112D0F0;
    }
    CGFloat v12 = *(double *)v13;
  }
  if (a1[v10])
  {
    id v14 = (uint64_t *)&a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
    swift_beginAccess();
    if (*((unsigned char *)v14 + 8) == 1)
    {
      if (qword_1010C8870 != -1) {
        swift_once();
      }
      id v14 = &qword_10112D0F0;
    }
    CGFloat v11 = *(double *)v14;
  }
  CGAffineTransformMakeScale(&v29, v12, v11);
  long long v15 = *(_OWORD *)&v29.c;
  long long v16 = *(_OWORD *)&v29.tx;
  double v17 = &a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform];
  *(_OWORD *)double v17 = *(_OWORD *)&v29.a;
  *((_OWORD *)v17 + 1) = v15;
  *((_OWORD *)v17 + 2) = v16;
  id v18 = sub_100C3D104();
  long long v19 = *((_OWORD *)v17 + 1);
  *(_OWORD *)&v29.CGFloat a = *(_OWORD *)v17;
  *(_OWORD *)&v29.CGFloat c = v19;
  *(_OWORD *)&v29.tCGFloat x = *((_OWORD *)v17 + 2);
  [v18 setTransform:&v29];

  id v20 = sub_100C3D050();
  if (qword_1010C8898 != -1) {
    swift_once();
  }
  static UIView.Corner.value(_:continuous:)();
  uint64_t v21 = type metadata accessor for UIView.Corner();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v7, 0, 1, v21);
  UIView.corner.setter();

  if (a2)
  {
    LOBYTE(v29.a) = 1;
    sub_100C3DE18(0x100000000);
    id v22 = sub_100C3D7C0();
    int v23 = a1[v10];
    id v24 = [a1 traitCollection];
    uint64_t v25 = v24;
    if (v23 == 2)
    {

      double v26 = 0.0;
    }
    else if (v23)
    {

      double v26 = 1.0;
    }
    else
    {
      id v27 = [v24 accessibilityContrast];

      double v26 = 0.5;
      if (v27 == (id)1) {
        double v26 = 1.0;
      }
    }
    [v22 setAlpha:v26];

    sub_100C3E070();
  }
  else
  {
    LOBYTE(v29.a) = 0;
    sub_100C3DE18(1065353216);
  }
  sub_100C3D34C();
}

void sub_100C41950()
{
  id v0 = [self blackColor];
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v0, (uint64_t)v1, 0.3, 9.0, 0.0, 5.0);
  UIView.shadow.setter((uint64_t)v1);
}

void sub_100C419C0(unsigned __int8 *a1)
{
  id v2 = sub_100C3D7C0();
  int v3 = a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  id v4 = [a1 traitCollection];
  double v5 = v4;
  if (v3 == 2)
  {

    double v6 = 0.0;
  }
  else if (v3)
  {

    double v6 = 1.0;
  }
  else
  {
    id v7 = [v4 accessibilityContrast];

    double v6 = 0.5;
    if (v7 == (id)1) {
      double v6 = 1.0;
    }
  }
  [v2 setAlpha:v6];

  sub_100C3E070();
  id v8 = [self clearColor];
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v8, (uint64_t)v9, 0.0, 0.0, 0.0, 0.0);
  UIView.shadow.setter((uint64_t)v9);
}

uint64_t sub_100C41AC4(void *a1)
{
  if (qword_1010C88B8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1010D10D0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  id v4 = self;
  id v5 = a1;
  [v4 begin];
  [v4 setAnimationTimingFunction:v2];
  double v6 = self;
  _OWORD v9[4] = sub_100C44CB0;
  _OWORD v9[5] = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  uint64_t v9[2] = sub_100020238;
  v9[3] = &unk_101014468;
  id v7 = _Block_copy(v9);
  swift_retain();
  swift_release();
  [v6 animateWithDuration:2 delay:v7 options:0 animations:0.85 completion:0.0];
  _Block_release(v7);
  [v4 commit];
  return swift_release();
}

void sub_100C41C5C(uint64_t a1)
{
  id v2 = sub_100C3D7C0();
  id v3 = sub_100C3D680();
  [v3 bounds];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  [v2 setFrame:v5, v7, v9, v11];
  if (qword_1010C8868 != -1) {
    swift_once();
  }
  CGFloat v12 = (_OWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange);
  double v13 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange);
  double v14 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8);
  double v15 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16);
  double v16 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24);
  long long v17 = *(_OWORD *)&qword_1010D10A8;
  _OWORD *v12 = xmmword_1010D1098;
  v12[1] = v17;
  sub_100C43010(v13, v14, v15, v16);
}

void sub_100C41D40(char a1, char *a2)
{
  uint64_t v4 = sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin(v4 - 8);
  double v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (qword_1010C8868 != -1) {
      swift_once();
    }
    double v7 = &a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
    double v8 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
    double v9 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8];
    double v10 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16];
    double v11 = *(double *)&a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24];
    long long v12 = *(_OWORD *)&qword_1010D10A8;
    *(_OWORD *)double v7 = xmmword_1010D1098;
    *((_OWORD *)v7 + 1) = v12;
    sub_100C43010(v8, v9, v10, v11);
    LOBYTE(v27[0]) = 1;
    sub_100C3DE18(0x100000000);
    id v13 = sub_100C3D7C0();
    int v14 = a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
    id v15 = [a2 traitCollection];
    double v16 = v15;
    if (v14 == 2)
    {

      double v17 = 0.0;
    }
    else if (v14)
    {

      double v17 = 1.0;
    }
    else
    {
      id v18 = [v15 accessibilityContrast];

      double v17 = 0.5;
      if (v18 == (id)1) {
        double v17 = 1.0;
      }
    }
    [v13 setAlpha:v17];
  }
  long long v19 = &a2[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform];
  *(void *)long long v19 = 0x3FF0000000000000;
  *((void *)v19 + 1) = 0;
  *((void *)v19 + 2) = 0;
  *((void *)v19 + 3) = 0x3FF0000000000000;
  *((void *)v19 + 4) = 0;
  *((void *)v19 + 5) = 0;
  id v20 = sub_100C3D104();
  long long v21 = *((_OWORD *)v19 + 1);
  v27[0] = *(_OWORD *)v19;
  v27[1] = v21;
  v27[2] = *((_OWORD *)v19 + 2);
  [v20 setTransform:v27];

  [a2 invalidateIntrinsicContentSize];
  [a2 setNeedsUpdateConstraints];
  id v22 = [a2 superview];
  [v22 setNeedsLayout];

  id v23 = [a2 superview];
  [v23 layoutIfNeeded];

  [a2 updateConstraintsIfNeeded];
  id v24 = sub_100C3D050();
  if (qword_1010C8898 != -1) {
    swift_once();
  }
  static UIView.Corner.value(_:continuous:)();
  uint64_t v25 = type metadata accessor for UIView.Corner();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v6, 0, 1, v25);
  UIView.corner.setter();

  id v26 = [self clearColor];
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v26, (uint64_t)v27, 0.0, 0.0, 0.0, 0.0);
  UIView.shadow.setter((uint64_t)v27);
}

void sub_100C42094(unsigned __int8 *a1)
{
  id v7 = sub_100C3D7C0();
  int v2 = a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  id v3 = [a1 traitCollection];
  uint64_t v4 = v3;
  if (v2 == 2)
  {

    double v5 = 0.0;
  }
  else if (v2)
  {

    double v5 = 1.0;
  }
  else
  {
    id v6 = [v3 accessibilityContrast];

    double v5 = 0.5;
    if (v6 == (id)1) {
      double v5 = 1.0;
    }
  }
  [v7 setAlpha:v5];
}

void sub_100C42164(uint64_t a1, char a2)
{
  uint64_t v4 = sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin(v4 - 8);
  id v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode;
  CGFloat v8 = 1.0;
  CGFloat v9 = 1.0;
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode))
  {
    double v10 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor);
    swift_beginAccess();
    if (*((unsigned char *)v10 + 8) == 1)
    {
      if (qword_1010C8870 != -1) {
        swift_once();
      }
      double v10 = &qword_10112D0F0;
    }
    CGFloat v9 = *(double *)v10;
  }
  if (*(unsigned char *)(a1 + v7))
  {
    double v11 = (uint64_t *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor);
    swift_beginAccess();
    if (*((unsigned char *)v11 + 8) == 1)
    {
      if (qword_1010C8870 != -1) {
        swift_once();
      }
      double v11 = &qword_10112D0F0;
    }
    CGFloat v8 = *(double *)v11;
  }
  CGAffineTransformMakeScale(&v26, v9, v8);
  long long v12 = *(_OWORD *)&v26.c;
  long long v13 = *(_OWORD *)&v26.tx;
  int v14 = (_OWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform);
  *int v14 = *(_OWORD *)&v26.a;
  v14[1] = v12;
  _OWORD v14[2] = v13;
  id v15 = sub_100C3D104();
  long long v16 = v14[1];
  *(_OWORD *)&v26.CGFloat a = *v14;
  *(_OWORD *)&v26.CGFloat c = v16;
  *(_OWORD *)&v26.tCGFloat x = v14[2];
  [v15 setTransform:&v26];

  id v17 = sub_100C3D050();
  if (qword_1010C8898 != -1) {
    swift_once();
  }
  static UIView.Corner.value(_:continuous:)();
  uint64_t v18 = type metadata accessor for UIView.Corner();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 0, 1, v18);
  UIView.corner.setter();

  if ((a2 & 1) == 0)
  {
    if (qword_1010C8868 != -1) {
      swift_once();
    }
    long long v19 = (_OWORD *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange);
    double v20 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange);
    double v21 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8);
    double v22 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16);
    double v23 = *(double *)(a1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24);
    long long v24 = *(_OWORD *)&qword_1010D10A8;
    *long long v19 = xmmword_1010D1098;
    v19[1] = v24;
    sub_100C43010(v20, v21, v22, v23);
  }
}

void sub_100C4244C(unsigned __int8 *a1, char a2)
{
  LOBYTE(v18) = 1;
  sub_100C3DE18(0x100000000);
  id v4 = sub_100C3D7C0();
  int v5 = a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
  id v6 = [a1 traitCollection];
  uint64_t v7 = v6;
  if (v5 == 2)
  {

    double v8 = 0.0;
  }
  else if (v5)
  {

    double v8 = 1.0;
  }
  else
  {
    id v9 = [v6 accessibilityContrast];

    double v8 = 0.5;
    if (v9 == (id)1) {
      double v8 = 1.0;
    }
  }
  [v4 setAlpha:v8];

  double v10 = self;
  if (a2)
  {
    id v11 = [v10 blackColor];
    double v12 = 0.3;
    double v13 = 9.0;
    double v14 = 5.0;
  }
  else
  {
    id v11 = [v10 clearColor];
    double v12 = 0.0;
    double v13 = 0.0;
    double v14 = 0.0;
  }
  UIView.Shadow.init(color:opacity:radius:offset:)((uint64_t)v11, (uint64_t)&v15, v12, v13, 0.0, v14);
  uint64_t v18 = v15;
  long long v19 = v16;
  long long v20 = v17;
  UIView.shadow.setter((uint64_t)&v18);
}

void sub_100C425C0()
{
  qword_1010D1090 = 0x4024000000000000;
}

uint64_t sub_100C425D0(uint64_t result, uint64_t a2)
{
  if (*(unsigned char *)(result + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode) != 2)
  {
    int v2 = (uint64_t *)(a2 + OBJC_IVAR____TtC11MusicCoreUI24CoreAnimationPackageView_stateName);
    swift_beginAccess();
    uint64_t v3 = *v2;
    uint64_t v4 = v2[1];
    *(_OWORD *)int v2 = xmmword_100E52740;
    sub_100058628(v3, v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall VerticalToggleSlider.didMoveToWindow()()
{
  id v1 = v0;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  [super didMoveToWindow];
  id v2 = [v0 window];
  if (v2 && (uint64_t v3 = v2, v4 = [v2 windowScene], v3, v4))
  {
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for NotificationObserver();
    swift_allocObject();
    id v6 = UISceneDidActivateNotification;
    id v7 = v4;
    *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_sceneActivationObserver] = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v6, (uint64_t)v4, 1, 1, (uint64_t)sub_100C44664, v5);
  }
  else
  {
    *(void *)&v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_sceneActivationObserver] = 0;
  }
  swift_release();
}

void sub_100C427A0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    sub_100C3E070();
  }
}

id sub_100C42848(void *a1, uint64_t a2, SEL *a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  return [super *a3];
}

id VerticalToggleSlider.isHighlighted.getter()
{
  return sub_100C42894((SEL *)&selRef_isHighlighted);
}

id sub_100C42894(SEL *a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  return [super a1];
}

void sub_100C428F8(void *a1, uint64_t a2, uint64_t a3, const char **a4, SEL *a5, void (*a6)(id))
{
  id v11 = (objc_class *)type metadata accessor for VerticalToggleSlider();
  v16.receiver = a1;
  v16.super_class = v11;
  double v12 = *a4;
  id v13 = a1;
  id v14 = [super v12];
  v15.receiver = v13;
  v15.super_class = v11;
  [super a3];
  a6(v14);
}

uint64_t VerticalToggleSlider.isHighlighted.setter(char a1)
{
  return sub_100C429B8(a1, (SEL *)&selRef_isHighlighted, (SEL *)&selRef_setHighlighted_, (uint64_t (*)(id))sub_100C42A38);
}

uint64_t sub_100C429B8(char a1, SEL *a2, SEL *a3, uint64_t (*a4)(id))
{
  id v9 = (objc_class *)type metadata accessor for VerticalToggleSlider();
  v13.receiver = v4;
  v13.super_class = v9;
  id v10 = [super a2];
  v12.receiver = v4;
  v12.super_class = v9;
  [super setValue:a1 & 1];
  return a4(v10);
}

void sub_100C42A38(char a1)
{
  id v2 = v1;
  if ([v1 isHighlighted] != (a1 & 1))
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    objc_super v4 = self;
    objc_super v5 = v2;
    if ([v4 areAnimationsEnabled])
    {
      if (qword_1010C88A0 != -1) {
        swift_once();
      }
      id v6 = (void *)qword_1010D10B8;
      [(id)qword_1010D10B8 settlingDuration];
      double v8 = v7;
      [v6 mass];
      double v10 = v9;
      [v6 stiffness];
      double v12 = v11;
      [v6 damping];
      double v14 = v13;
      *(void *)&v24.tCGFloat x = sub_100C44B80;
      *(void *)&v24.tCGFloat y = v3;
      *(void *)&v24.CGFloat a = _NSConcreteStackBlock;
      *(void *)&v24.CGFloat b = 1107296256;
      *(void *)&v24.CGFloat c = sub_100020238;
      *(void *)&v24.CGFloat d = &unk_101014058;
      objc_super v15 = _Block_copy(&v24);
      swift_retain();
      swift_release();
      [v4 _animateUsingSpringWithDuration:6 delay:v15 options:0 mass:v8 stiffness:0.0 damping:v10 initialVelocity:v12 animations:v14 completion:0.0];
      _Block_release(v15);
LABEL_12:
      swift_release();
      return;
    }
    if ([v5 isHighlighted])
    {
      CGAffineTransformMakeScale(&v24, 0.95, 0.95);
      long long v17 = *(_OWORD *)&v24.a;
      long long v16 = *(_OWORD *)&v24.c;
      long long v18 = *(_OWORD *)&v24.tx;
    }
    else
    {
      long long v16 = xmmword_100E26B20;
      long long v17 = xmmword_100E26B30;
      long long v18 = 0uLL;
    }
    *(_OWORD *)&v24.CGFloat a = v17;
    *(_OWORD *)&v24.CGFloat c = v16;
    *(_OWORD *)&v24.tCGFloat x = v18;
    [v5 setTransform:&v24];
    long long v19 = *(void **)&v5[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
    if (!v19) {
      goto LABEL_12;
    }
    id v20 = v19;
    if ([v5 isHighlighted])
    {
      CGAffineTransformMakeScale(&v24, 0.9, 0.9);
      long long v22 = *(_OWORD *)&v24.a;
      long long v21 = *(_OWORD *)&v24.c;
      long long v23 = *(_OWORD *)&v24.tx;
    }
    else
    {
      long long v21 = xmmword_100E26B20;
      long long v22 = xmmword_100E26B30;
      long long v23 = 0uLL;
    }
    *(_OWORD *)&v24.CGFloat a = v22;
    *(_OWORD *)&v24.CGFloat c = v21;
    *(_OWORD *)&v24.tCGFloat x = v23;
    [v20 setTransform:&v24];
    swift_release();
  }
}

void sub_100C42D14(char *a1)
{
  if ([a1 isHighlighted])
  {
    CGAffineTransformMakeScale(&v10, 0.95, 0.95);
    long long v3 = *(_OWORD *)&v10.a;
    long long v2 = *(_OWORD *)&v10.c;
    long long v4 = *(_OWORD *)&v10.tx;
  }
  else
  {
    long long v2 = xmmword_100E26B20;
    long long v3 = xmmword_100E26B30;
    long long v4 = 0uLL;
  }
  *(_OWORD *)&v10.CGFloat a = v3;
  *(_OWORD *)&v10.CGFloat c = v2;
  *(_OWORD *)&v10.tCGFloat x = v4;
  [a1 setTransform:&v10];
  objc_super v5 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
  if (v5)
  {
    id v6 = v5;
    if ([a1 isHighlighted])
    {
      CGAffineTransformMakeScale(&v10, 0.9, 0.9);
      long long v8 = *(_OWORD *)&v10.a;
      long long v7 = *(_OWORD *)&v10.c;
      long long v9 = *(_OWORD *)&v10.tx;
    }
    else
    {
      long long v7 = xmmword_100E26B20;
      long long v8 = xmmword_100E26B30;
      long long v9 = 0uLL;
    }
    *(_OWORD *)&v10.CGFloat a = v8;
    *(_OWORD *)&v10.CGFloat c = v7;
    *(_OWORD *)&v10.tCGFloat x = v9;
    [v6 setTransform:&v10];
  }
}

void sub_100C42E20()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (unsigned __int8 *)Strong;
    long long v2 = (unsigned char *)(Strong + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled);
    swift_beginAccess();
    if (*v2 == 1)
    {
      [v1 sendActionsForControlEvents:0x10000];
      int v3 = v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode];
      v1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 2 * (v3 != 2);
      sub_100C401E0(v3);
      [v1 sendActionsForControlEvents:4096];
      [v1 sendActionsForControlEvents:0x40000];
    }
  }
}

double sub_100C42FC0()
{
  double result = 0.0;
  xmmword_1010D1098 = 0u;
  *(_OWORD *)&qword_1010D10A8 = 0u;
  return result;
}

BOOL sub_100C42FD4(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

void sub_100C43010(double a1, double a2, double a3, double a4)
{
  objc_super v5 = v4;
  uint64_t v10 = sub_100063814(&qword_1010D0AB0);
  __chkstk_darwin(v10 - 8);
  double v12 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = (float64x2_t *)&v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange];
  if (*(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange] != a1
    || *(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 8] != a2
    || *(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 16] != a3
    || *(double *)&v4[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24] != a4)
  {
    id v17 = sub_100C3D050();
    if (qword_1010C8898 != -1) {
      swift_once();
    }
    static UIView.Corner.value(_:continuous:)();
    uint64_t v18 = type metadata accessor for UIView.Corner();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 0, 1, v18);
    UIView.corner.setter();

    float64x2_t v19 = *v13;
    float64x2_t v20 = v13[1];
    if (qword_1010C8868 != -1)
    {
      float64x2_t v91 = *v13;
      float64x2_t v90 = v20;
      swift_once();
      float64x2_t v20 = v90;
      float64x2_t v19 = v91;
    }
    if (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v19, (float64x2_t)xmmword_1010D1098), (int32x4_t)vceqq_f64(v20, *(float64x2_t *)&qword_1010D10A8))), 0xFuLL))))
    {
      id v76 = sub_100C3D050();
      [v76 anchorPoint];
      double v78 = v77;
      double v80 = v79;

      int v81 = (double *)CGPoint.center.unsafeMutableAddressor();
      swift_beginAccess();
      if (v78 != *v81 || v80 != v81[1])
      {
        id v82 = sub_100C3D050();
        swift_beginAccess();
        [v82 setAnchorPoint:*v81, v81[1]];

        id v83 = sub_100C3D050();
        [v5 bounds];
        [v83 setFrame:];
      }
      uint64_t v84 = &v5[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_stretchTransform];
      *(void *)uint64_t v84 = 0x3FF0000000000000;
      *((void *)v84 + 1) = 0;
      *((void *)v84 + 2) = 0;
      *((void *)v84 + 3) = 0x3FF0000000000000;
      *((void *)v84 + 4) = 0;
      *((void *)v84 + 5) = 0;
      id v85 = sub_100C3D050();
      long long v86 = *((_OWORD *)v84 + 1);
      *(_OWORD *)&aBlock.CGFloat a = *(_OWORD *)v84;
      *(_OWORD *)&aBlock.CGFloat c = v86;
      *(_OWORD *)&aBlock.tCGFloat x = *((_OWORD *)v84 + 2);
      [v85 setTransform:&aBlock];

      double v87 = *(void **)&v5[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
      if (v87)
      {
        long long v88 = *((_OWORD *)v84 + 1);
        *(_OWORD *)&aBlock.CGFloat a = *(_OWORD *)v84;
        *(_OWORD *)&aBlock.CGFloat c = v88;
        *(_OWORD *)&aBlock.tCGFloat x = *((_OWORD *)v84 + 2);
        CGAffineTransformInvert(&v95, &aBlock);
        CGAffineTransform aBlock = v95;
        [v87 setTransform:&aBlock];
      }
      id v89 = sub_100C3D050();
      [v5 bounds];
      [v89 setFrame:];
    }
    else
    {
      long long v21 = self;
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v5;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = sub_100C44B20;
      *(void *)(v23 + 24) = v22;
      *(void *)&aBlock.tCGFloat x = sub_10013DD14;
      *(void *)&aBlock.tCGFloat y = v23;
      *(void *)&aBlock.CGFloat a = _NSConcreteStackBlock;
      *(void *)&aBlock.CGFloat b = 1107296256;
      *(void *)&aBlock.CGFloat c = sub_10007A61C;
      *(void *)&aBlock.CGFloat d = &unk_101013FE0;
      CGAffineTransform v24 = _Block_copy(&aBlock);
      uint64_t v25 = v5;
      swift_retain();
      swift_release();
      [v21 performWithoutAnimation:v24];
      _Block_release(v24);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (isEscapingClosureAtFileLocation)
      {
        __break(1u);
      }
      else
      {
        id v27 = sub_100C3D104();
        [v27 frame];
        CGFloat v29 = v28;
        CGFloat v31 = v30;
        CGFloat v33 = v32;
        CGFloat v35 = v34;

        v97.origin.CGFloat x = v29;
        v97.origin.CGFloat y = v31;
        v97.size.CGFloat width = v33;
        v97.size.CGFloat height = v35;
        CGFloat v36 = CGRectGetWidth(v97) + v13->f64[1];
        id v37 = sub_100C3D104();
        [v37 frame];
        CGFloat v39 = v38;
        CGFloat v41 = v40;
        CGFloat v43 = v42;
        CGFloat v45 = v44;

        v98.origin.CGFloat x = v39;
        v98.origin.CGFloat y = v41;
        v98.size.CGFloat width = v43;
        v98.size.CGFloat height = v45;
        CGFloat v46 = v36 / CGRectGetWidth(v98);
        id v47 = sub_100C3D104();
        [v47 frame];
        CGFloat v49 = v48;
        CGFloat v51 = v50;
        CGFloat v53 = v52;
        CGFloat v55 = v54;

        v99.origin.CGFloat x = v49;
        v99.origin.CGFloat y = v51;
        v99.size.CGFloat width = v53;
        v99.size.CGFloat height = v55;
        CGFloat v56 = CGRectGetHeight(v99) + v13->f64[0];
        id v57 = sub_100C3D104();
        [v57 frame];
        CGFloat v59 = v58;
        CGFloat v61 = v60;
        CGFloat v63 = v62;
        CGFloat v65 = v64;

        v100.origin.CGFloat x = v59;
        v100.origin.CGFloat y = v61;
        v100.size.CGFloat width = v63;
        v100.size.CGFloat height = v65;
        CGFloat Height = CGRectGetHeight(v100);
        CGAffineTransformMakeScale(&aBlock, v46, v56 / Height);
        long long v67 = *(_OWORD *)&aBlock.a;
        long long v68 = *(_OWORD *)&aBlock.c;
        long long v69 = *(_OWORD *)&aBlock.tx;
        *(_OWORD *)&v95.CGFloat a = *(_OWORD *)&aBlock.a;
        *(_OWORD *)&v95.CGFloat c = *(_OWORD *)&aBlock.c;
        CGFloat v70 = -v13[1].f64[1];
        *(_OWORD *)&v95.tCGFloat x = *(_OWORD *)&aBlock.tx;
        CGAffineTransformMakeTranslation(&aBlock, 0.0, v70);
        static CGAffineTransform.+ infix(_:_:)(&v95, &aBlock, v94);
        uint64_t v71 = &v25[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_stretchTransform];
        *(_OWORD *)uint64_t v71 = v94[0];
        *((_OWORD *)v71 + 1) = v94[1];
        *((_OWORD *)v71 + 2) = v94[2];
        id v72 = sub_100C3D050();
        CGAffineTransform v93 = *(CGAffineTransform *)v71;
        [v72 setTransform:&v93];

        uint64_t v73 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView;
        uint64_t v74 = *(void **)&v25[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView];
        if (v74)
        {
          CGAffineTransform v93 = *(CGAffineTransform *)v71;
          CGAffineTransformInvert(&v92, &v93);
          CGAffineTransform v93 = v92;
          [v74 setTransform:&v93];
          uint64_t v75 = *(void **)&v25[v73];
          if (v75)
          {
            *(_OWORD *)&v93.CGFloat a = v67;
            *(_OWORD *)&v93.CGFloat c = v68;
            *(_OWORD *)&v93.tCGFloat x = v69;
            CGAffineTransformInvert(&v92, &v93);
            CGAffineTransform v93 = v92;
            [v75 setTransform:&v93];
          }
        }
        swift_release();
      }
    }
  }
}

void sub_100C437A0(char *a1)
{
  if (*(double *)&a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange + 24] <= 0.0) {
    long long v2 = CGPoint.topCenter.unsafeMutableAddressor();
  }
  else {
    long long v2 = CGPoint.bottomCenter.unsafeMutableAddressor();
  }
  int v3 = (double *)v2;
  swift_beginAccess();
  double v5 = *v3;
  double v4 = v3[1];
  id v6 = sub_100C3D050();
  [v6 anchorPoint];
  double v8 = v7;
  double v10 = v9;

  if (v8 != v5 || v10 != v4)
  {
    id v12 = sub_100C3D050();
    [v12 setAnchorPoint:v5, v4];

    id v13 = sub_100C3D050();
    [a1 bounds];
    [v13 setFrame:];
  }
}

void sub_100C4388C()
{
  qword_10112D0F0 = 0x4000000000000000;
}

void sub_100C4389C()
{
  qword_10112D0F8 = 0x4024000000000000;
}

int64x2_t sub_100C438AC()
{
  int64x2_t result = vdupq_n_s64(0x4042000000000000uLL);
  static VerticalToggleSlider.DesignSpecs.CGSize size = (__int128)result;
  return result;
}

double static VerticalToggleSlider.DesignSpecs.size.getter()
{
  return sub_100AD8FAC(&qword_1010C8880, (uint64_t)&static VerticalToggleSlider.DesignSpecs.size);
}

double sub_100C438E8()
{
  double result = 36.0;
  static VerticalToggleSlider.DesignSpecs.expandedSize = xmmword_100E52750;
  return result;
}

double static VerticalToggleSlider.DesignSpecs.expandedSize.getter()
{
  return sub_100AD8FAC(&qword_1010C8888, (uint64_t)&static VerticalToggleSlider.DesignSpecs.expandedSize);
}

int64x2_t sub_100C43924()
{
  int64x2_t result = vdupq_n_s64(0x404A000000000000uLL);
  static VerticalToggleSlider.DesignSpecs.minimumTapAreCGFloat a = (__int128)result;
  return result;
}

double static VerticalToggleSlider.DesignSpecs.minimumTapArea.getter()
{
  return sub_100AD8FAC(&qword_1010C8890, (uint64_t)&static VerticalToggleSlider.DesignSpecs.minimumTapArea);
}

void sub_100C43960()
{
  qword_10112D130 = 0x4024000000000000;
}

id sub_100C43970()
{
  id result = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:465.0 damping:21.0 initialVelocity:0.0];
  qword_1010D10B8 = (uint64_t)result;
  return result;
}

id sub_100C439C0()
{
  id result = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:300.0 damping:40.0 initialVelocity:0.0];
  qword_1010D10C0 = (uint64_t)result;
  return result;
}

id sub_100C43A14()
{
  id result = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:194.0 damping:24.0 initialVelocity:0.0];
  qword_1010D10C8 = (uint64_t)result;
  return result;
}

id sub_100C43A64()
{
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1051931443;
  LODWORD(v2) = 0.25;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v1 :0.0 :v2 :v3];
  qword_1010D10D0 = (uint64_t)result;
  return result;
}

id sub_100C43AB0()
{
  id result = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:158.0 damping:25.0 initialVelocity:0.0];
  qword_1010D10D8 = (uint64_t)result;
  return result;
}

id sub_100C43B00()
{
  id v0 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v1) = 1051931443;
  LODWORD(v2) = 1.0;
  LODWORD(v3) = 1.0;
  id result = [v0 initWithControlPoints:v2 :0.0 :v1 :v3];
  qword_1010D10E0 = (uint64_t)result;
  return result;
}

id sub_100C43B4C()
{
  id result = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:288.0 damping:26.5 initialVelocity:0.0];
  qword_1010D10E8 = (uint64_t)result;
  return result;
}

id sub_100C43BA0()
{
  id result = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:300.0 damping:40.0 initialVelocity:0.0];
  qword_1010D10F0 = (uint64_t)result;
  return result;
}

id sub_100C43BF4()
{
  id result = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:2.0 stiffness:500.0 damping:40.0 initialVelocity:0.0];
  qword_1010D10F8 = (uint64_t)result;
  return result;
}

id sub_100C43C48()
{
  id result = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:300.0 damping:40.0 initialVelocity:0.0];
  qword_1010D1100 = (uint64_t)result;
  return result;
}

id VerticalToggleSlider.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VerticalToggleSlider();
  [super dealloc];
}

void VerticalToggleSlider.accessibilitySetSliderValue(_:)(double a1)
{
  float v2 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
  float v3 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
  if (v2 > v3)
  {
    __break(1u);
  }
  else
  {
    float v4 = a1;
    if (v2 > v4) {
      float v4 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue);
    }
    if (v3 < v4) {
      float v4 = *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue);
    }
    sub_100C3D1C0(*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange)+ (float)((float)((float)(v4 - v2) / (float)(v3 - v2))* (float)(*(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange + 4)- *(float *)(v1 + OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange))));
    sub_100C3EDF0();
  }
}

uint64_t type metadata accessor for VerticalToggleSlider()
{
  return self;
}

uint64_t sub_100C43F64()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100C43F9C()
{
}

void sub_100C43FA4()
{
}

void sub_100C43FC8(char *a1)
{
  id v2 = sub_100C3D104();
  float v3 = &a1[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint];
  swift_beginAccess();
  uint64_t v4 = *v3;
  id v5 = [a1 traitCollection];
  *(void *)&double v6 = sub_100C3F5C4(v5, v4).n128_u64[0];
  double v8 = v7;

  [v2 setAnchorPoint:v6, v8];
}

id sub_100C44078(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, double a7, double a8)
{
  long long v16 = self;
  [v16 begin];
  [v16 setAnimationTimingFunction:a1];
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  float64x2_t v19 = _NSConcreteStackBlock;
  uint64_t v20 = 1107296256;
  long long v21 = sub_100020238;
  uint64_t v22 = &unk_101014490;
  id v17 = _Block_copy(&v19);
  swift_retain();
  swift_release();
  if (a5)
  {
    uint64_t v23 = a5;
    uint64_t v24 = a6;
    float64x2_t v19 = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    long long v21 = sub_1001695E8;
    uint64_t v22 = &unk_1010144B8;
    a5 = _Block_copy(&v19);
    swift_retain();
    swift_release();
  }
  [self animateWithDuration:a2 delay:v17 options:a5 animations:a7 completion:a8];
  _Block_release(a5);
  _Block_release(v17);
  return [v16 commit];
}

void _s11MusicCoreUI20VerticalToggleSliderC5coderACSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageDefinition];
  *uint64_t v1 = 0u;
  v1[1] = 0u;
  v1[2] = 0u;
  v1[3] = 0u;
  v1[4] = 0u;
  uint64_t v2 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_minLevelOffsetRatio;
  if (qword_1010C8888 != -1) {
    swift_once();
  }
  double v3 = 1.0 / *((double *)&static VerticalToggleSlider.DesignSpecs.expandedSize + 1);
  if (qword_1010C8878 != -1) {
    swift_once();
  }
  float v4 = v3 * *(double *)&qword_10112D0F8;
  *(float *)&v0[v2] = v4;
  id v5 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_interactionScaleFactor];
  *(void *)id v5 = 0;
  v5[8] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isTapToToggleEnabled] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isVisuallyDisabled] = 0;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_isContinuous] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_automaticallyDisablesOnMaxValue] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressMode] = 1;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growAnchorPoint] = 8;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___stretchView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___growView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValueRange] = 0x3F80000000000000;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_internalValue] = 1065353216;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__minValue] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider__maxValue] = 1065353216;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___feedbackGenerator] = 0;
  v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_mode] = 2;
  uint64_t v6 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_blurEffect;
  if (qword_1010C8860 != -1) {
    swift_once();
  }
  *(void *)&v0[v6] = [self effectWithBlurRadius:*(double *)&qword_1010D1090];
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___visualEffectView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_packageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider____lazy_storage___levelView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_sceneActivationObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_longPressGestureRecognizer] = 0;
  double v7 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialDraggingLocation];
  *(void *)double v7 = 0;
  *((void *)v7 + 1) = 0;
  unsigned char v7[16] = 1;
  *(_DWORD *)&v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_initialValue] = 0;
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_shapeChange;
  if (qword_1010C8868 != -1) {
    swift_once();
  }
  double v9 = &v0[v8];
  long long v10 = *(_OWORD *)&qword_1010D10A8;
  *double v9 = xmmword_1010D1098;
  v9[1] = v10;
  uint64_t v11 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_stretchTransform];
  void *v11 = 0x3FF0000000000000;
  v11[1] = 0;
  void v11[2] = 0;
  v11[3] = 0x3FF0000000000000;
  v11[4] = 0;
  v11[5] = 0;
  id v12 = &v0[OBJC_IVAR____TtC11MusicCoreUI20VerticalToggleSlider_growTransform];
  void *v12 = 0x3FF0000000000000;
  v12[1] = 0;
  void v12[2] = 0;
  v12[3] = 0x3FF0000000000000;
  v12[4] = 0;
  v12[5] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

BOOL _s11MusicCoreUI20VerticalToggleSliderC5point6inside4withSbSo7CGPointV_So7UIEventCSgtF_0(CGFloat a1, CGFloat a2)
{
  [v2 bounds];
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  if (qword_1010C8890 != -1) {
    swift_once();
  }
  double v13 = *(double *)&static VerticalToggleSlider.DesignSpecs.minimumTapArea;
  if (qword_1010C8880 != -1) {
    swift_once();
  }
  double v14 = v13 - *(double *)&static VerticalToggleSlider.DesignSpecs.size;
  if (v13 - *(double *)&static VerticalToggleSlider.DesignSpecs.size < 0.0) {
    double v14 = 0.0;
  }
  double v15 = *((double *)&static VerticalToggleSlider.DesignSpecs.minimumTapArea + 1)
      - *((double *)&static VerticalToggleSlider.DesignSpecs.size + 1);
  if (*((double *)&static VerticalToggleSlider.DesignSpecs.minimumTapArea + 1)
     - *((double *)&static VerticalToggleSlider.DesignSpecs.size + 1) < 0.0)
    double v15 = 0.0;
  CGFloat v16 = -v14;
  CGFloat v17 = -v15;
  v20.origin.CGFloat x = v6;
  v20.origin.CGFloat y = v8;
  v20.size.CGFloat width = v10;
  v20.size.CGFloat height = v12;
  CGRect v21 = CGRectInset(v20, v16, v17);
  v19.CGFloat x = a1;
  v19.CGFloat y = a2;
  return CGRectContainsPoint(v21, v19);
}

void sub_100C44664()
{
}

unint64_t sub_100C44670()
{
  unint64_t result = qword_1010D11E8;
  if (!qword_1010D11E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D11E8);
  }
  return result;
}

unint64_t sub_100C446C8()
{
  unint64_t result = qword_1010D11F0;
  if (!qword_1010D11F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1010D11F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VerticalToggleSlider.LongPressMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100C447E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VerticalToggleSlider.LongPressMode()
{
  return &type metadata for VerticalToggleSlider.LongPressMode;
}

unsigned char *storeEnumTagSinglePayload for VerticalToggleSlider.AnchorPoint(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100C448ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VerticalToggleSlider.AnchorPoint()
{
  return &type metadata for VerticalToggleSlider.AnchorPoint;
}

ValueMetadata *type metadata accessor for VerticalToggleSlider.DesignSpecs()
{
  return &type metadata for VerticalToggleSlider.DesignSpecs;
}

ValueMetadata *type metadata accessor for VerticalToggleSlider.ShapeChange()
{
  return &type metadata for VerticalToggleSlider.ShapeChange;
}

uint64_t getEnumTagSinglePayload for VerticalToggleSlider.Mode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100C44A00);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for VerticalToggleSlider.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x100C44AE8);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VerticalToggleSlider.Mode()
{
  return &type metadata for VerticalToggleSlider.Mode;
}

void sub_100C44B20()
{
  sub_100C437A0(*(char **)(v0 + 16));
}

uint64_t sub_100C44B28()
{
  return swift_deallocObject();
}

uint64_t sub_100C44B38()
{
  return swift_deallocObject();
}

uint64_t sub_100C44B78()
{
  return sub_100C425D0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100C44B80()
{
  sub_100C42D14(*(char **)(v0 + 16));
}

uint64_t sub_100C44B88()
{
  return swift_deallocObject();
}

void sub_100C44BC0()
{
  sub_100C42164(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_100C44BCC()
{
  sub_100C4244C(*(unsigned __int8 **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100C44BD8()
{
  return swift_deallocObject();
}

void sub_100C44C10()
{
  sub_100C41C5C(*(void *)(v0 + 16));
}

uint64_t sub_100C44C18()
{
  return swift_deallocObject();
}

void sub_100C44C50()
{
  sub_100C41D40(*(unsigned char *)(v0 + 16), *(char **)(v0 + 24));
}

void sub_100C44C5C()
{
}

void sub_100C44C84()
{
  sub_100C42094(*(unsigned __int8 **)(v0 + 16));
}

void sub_100C44C8C()
{
  sub_100C41574(*(char **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_100C44C98()
{
  sub_100C419C0(*(unsigned __int8 **)(v0 + 16));
}

uint64_t sub_100C44CA0()
{
  return sub_100C41AC4(*(void **)(v0 + 16));
}

void sub_100C44CA8()
{
}

void sub_100C44CB0()
{
}

uint64_t sub_100C44CEC(uint64_t a1)
{
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v2 = *(void *)(a1 + 88);
  unsigned int v3 = *(void **)(a1 + 96);
  sub_100053B68(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16));
  sub_100053B68(v5, v2, v3);
  return a1;
}

Swift::Int sub_100C44E48()
{
  return Hasher._finalize()();
}

void *sub_100C44EF0(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    unint64_t result = _swiftEmptyArrayStorage;
    if (!v2) {
      break;
    }
    unint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      ++v4;
      id v7 = [v5 layer];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t WaveformPlayIndicator.__allocating_init(settings:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return WaveformPlayIndicator.init(settings:)(a1);
}

unint64_t WaveformPlayIndicator.init(settings:)(void *a1)
{
  CGFloat v33 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v32 = sub_100063814(&qword_1010CD4E0);
  uint64_t v2 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode] = 0;
  id v5 = &v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette];
  uint64_t v6 = self;
  unint64_t v7 = v1;
  id v31 = [v6 tintColor];
  id v8 = [v6 labelColor];
  id v9 = [v8 colorWithAlphaComponent:0.35];

  id v10 = [v6 labelColor];
  id v11 = [v10 colorWithAlphaComponent:0.2];

  id v12 = [v6 labelColor];
  id v13 = [v12 colorWithAlphaComponent:0.6];

  void *v5 = v31;
  v5[1] = v9;
  void v5[2] = v11;
  _OWORD v5[3] = v13;
  uint64_t v14 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform;
  *(void *)(v7 + v14) = [self zero];
  *(void *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_barRatio) = 0x3FE0000000000000;
  double v15 = (char *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator__isVisible);
  char v36 = 0;
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v15, v4, v32);
  *(void *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator____lazy_storage___bars) = 0;
  uint64_t v16 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_cannedAnimationAsset;
  type metadata accessor for BouncyBarsAsset();
  swift_allocObject();
  *(void *)(v7 + v16) = sub_100C4AD50();
  CGFloat v17 = v33;
  *(void *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_settings) = v33;
  id v18 = v17;
  id v19 = [v18 stops];
  sub_100057778(0, &qword_1010C9670);
  unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = (objc_class *)ObjectType;
  if (__OFSUB__(v21, 1))
  {
    __break(1u);
  }
  else
  {
    *(void *)(v7 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_numberOfBars) = v21 - 1;

    v35.receiver = (id)v7;
    v35.super_class = v22;
    unint64_t v20 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
    unint64_t result = sub_100C45534();
    unint64_t v7 = result;
    if (!(result >> 62))
    {
      uint64_t v24 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v24) {
        goto LABEL_6;
      }
LABEL_15:
      swift_bridgeObjectRelease();
      sub_100063814(&qword_1010CAAA0);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_100E251D0;
      *(void *)(v28 + 32) = type metadata accessor for UITraitActiveAppearance();
      *(void *)(v28 + 40) = &protocol witness table for UITraitActiveAppearance;
      id v29 = (id)v20;
      UIView.registerForTraitChanges<A>(_:handler:)();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();

      return (unint64_t)v29;
    }
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v24 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_6:
  if (v24 >= 1)
  {
    uint64_t v25 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v26 = *(id *)(v7 + 8 * v25 + 32);
      }
      id v27 = v26;
      ++v25;
      [(id)v20 addSubview:v26];
      [v27 setAlpha:0.0];
    }
    while (v24 != v25);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_100C45534()
{
  uint64_t v1 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator____lazy_storage___bars;
  if (*(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator____lazy_storage___bars))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator____lazy_storage___bars);
  }
  else
  {
    sub_100C4A20C();
    uint64_t v2 = v3;
    *(void *)(v0 + v1) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_100C45598()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode);
  uint64_t result = swift_beginAccess();
  switch(*v1)
  {
    case 1:
      uint64_t v3 = v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
      swift_beginAccess();
      id v4 = *(id *)(v3 + 8);
      unint64_t v5 = sub_100C45534();
      unint64_t v6 = v5;
      if (v5 >> 62)
      {
        uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
        if (v7) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v7)
        {
LABEL_4:
          if (v7 >= 1)
          {
            for (uint64_t i = 0; i != v7; ++i)
            {
              if ((v6 & 0xC000000000000001) != 0) {
                id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v9 = *(id *)(v6 + 8 * i + 32);
              }
              id v10 = v9;
              [v9 setBackgroundColor:v4];
            }
            goto LABEL_31;
          }
          __break(1u);
          goto LABEL_33;
        }
      }
      goto LABEL_31;
    case 2:
      id v11 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette);
      swift_beginAccess();
      id v4 = *v11;
      unint64_t v12 = sub_100C45534();
      unint64_t v13 = v12;
      if (v12 >> 62)
      {
        uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
        if (v14)
        {
LABEL_12:
          if (v14 >= 1)
          {
            for (uint64_t j = 0; j != v14; ++j)
            {
              if ((v13 & 0xC000000000000001) != 0) {
                id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v16 = *(id *)(v13 + 8 * j + 32);
              }
              CGFloat v17 = v16;
              [v16 setBackgroundColor:v4];
            }
            goto LABEL_31;
          }
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v14) {
          goto LABEL_12;
        }
      }
      goto LABEL_31;
    case 3:
      id v18 = (id *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette);
      swift_beginAccess();
      id v4 = *v18;
      unint64_t v19 = sub_100C45534();
      unint64_t v20 = v19;
      if (v19 >> 62)
      {
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        if (v21)
        {
LABEL_20:
          if (v21 >= 1)
          {
            for (uint64_t k = 0; k != v21; ++k)
            {
              if ((v20 & 0xC000000000000001) != 0) {
                id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v23 = *(id *)(v20 + 8 * k + 32);
              }
              uint64_t v24 = v23;
              [v23 setBackgroundColor:v4];
            }
            goto LABEL_31;
          }
LABEL_34:
          __break(1u);
          JUMPOUT(0x100C45860);
        }
      }
      else
      {
        uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v21) {
          goto LABEL_20;
        }
      }
LABEL_31:

      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

void sub_100C458A0(unsigned __int8 a1, unsigned __int8 a2)
{
  unsigned __int8 v4 = a1;
  if (a1 == a2 && (a1 != 3 || (sub_100C47220() & 1) != 0)) {
    return;
  }
  unint64_t v5 = sub_100C45534();
  type metadata accessor for AnimationGroup();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = (char *)_swiftEmptyArrayStorage;
  *(void *)(v6 + 16) = _swiftEmptyArrayStorage;
  *(void *)(v6 + 24) = _swiftEmptyArrayStorage;
  uint64_t v8 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask;
  if (*(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask])
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(void *)&v2[v8] = 0;
  swift_release();
  if (v4 == 3) {
    sub_100C47534();
  }
  unsigned __int8 v93 = a2;
  if (a2 == 1)
  {
    id v22 = [objc_allocWithZone((Class)UICubicTimingParameters) initWithControlPoint1:0.33 controlPoint2:1.0];
    id v23 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v22 timingParameters:0.9];

    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v2;
    CGRect v100 = sub_100C4D094;
    uint64_t v101 = v24;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v97 = 1107296256;
    CGRect v98 = sub_100020238;
    CGRect v99 = &unk_101014978;
    uint64_t v25 = _Block_copy(&aBlock);
    swift_retain_n();
    id v26 = v2;
    swift_release();
    [v23 addAnimations:v25];
    _Block_release(v25);
    swift_release();
    id v27 = v23;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v6 + 16) = _swiftEmptyArrayStorage;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v7 = sub_100AFBE04(0, _swiftEmptyArrayStorage[2] + 1, 1, (char *)_swiftEmptyArrayStorage);
      *(void *)(v6 + 16) = v7;
    }
    unint64_t v30 = *((void *)v7 + 2);
    unint64_t v29 = *((void *)v7 + 3);
    if (v30 >= v29 >> 1)
    {
      uint64_t v7 = sub_100AFBE04((char *)(v29 > 1), v30 + 1, 1, v7);
      *(void *)(v6 + 16) = v7;
    }
    *((void *)v7 + 2) = v30 + 1;
    id v31 = &v7[16 * v30];
    *((void *)v31 + 4) = v27;
    *((void *)v31 + 5) = 0;

    swift_release();
  }
  else if (a2 == 4)
  {
    id v9 = [objc_allocWithZone((Class)UICubicTimingParameters) initWithControlPoint1:0.5 controlPoint2:0.89];
    id v10 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v9 timingParameters:0.25];

    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v2;
    CGRect v100 = sub_100C4D09C;
    uint64_t v101 = v11;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v97 = 1107296256;
    CGRect v98 = sub_100020238;
    CGRect v99 = &unk_1010149C8;
    unint64_t v12 = _Block_copy(&aBlock);
    unint64_t v13 = v2;
    swift_release();
    [v10 addAnimations:v12];
    _Block_release(v12);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v13;
    *(unsigned char *)(v14 + 24) = 4;
    CGRect v100 = sub_100C4D0A4;
    uint64_t v101 = v14;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v97 = 1107296256;
    CGRect v98 = sub_1002DE0E4;
    CGRect v99 = &unk_101014A18;
    double v15 = _Block_copy(&aBlock);
    id v16 = v13;
    swift_release();
    [v10 addCompletion:v15];
    _Block_release(v15);
    id v17 = v10;
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v6 + 16) = _swiftEmptyArrayStorage;
    if ((v18 & 1) == 0)
    {
      uint64_t v7 = sub_100AFBE04(0, _swiftEmptyArrayStorage[2] + 1, 1, (char *)_swiftEmptyArrayStorage);
      *(void *)(v6 + 16) = v7;
    }
    unint64_t v20 = *((void *)v7 + 2);
    unint64_t v19 = *((void *)v7 + 3);
    if (v20 >= v19 >> 1)
    {
      uint64_t v7 = sub_100AFBE04((char *)(v19 > 1), v20 + 1, 1, v7);
      *(void *)(v6 + 16) = v7;
    }
    *((void *)v7 + 2) = v20 + 1;
    uint64_t v21 = &v7[16 * v20];
    *((void *)v21 + 4) = v17;
    *((void *)v21 + 5) = 0;
  }
  if (v4)
  {
    int v32 = a2;
    if (a2)
    {
LABEL_22:
      if (v32 == 2)
      {
        swift_bridgeObjectRelease();
        unsigned __int8 v70 = v4;
        id v71 = [objc_allocWithZone((Class)UICubicTimingParameters) initWithControlPoint1:0.5 controlPoint2:0.89];
        id v72 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v71 timingParameters:0.15];

        uint64_t v73 = swift_allocObject();
        *(void *)(v73 + 16) = v2;
        *(unsigned char *)(v73 + 24) = v70;
        CGRect v100 = sub_100C4CFF4;
        uint64_t v101 = v73;
        CGAffineTransform aBlock = _NSConcreteStackBlock;
        uint64_t v97 = 1107296256;
        CGRect v98 = sub_100020238;
        CGRect v99 = &unk_101014888;
        uint64_t v74 = _Block_copy(&aBlock);
        swift_retain_n();
        uint64_t v75 = v2;
        swift_release();
        [v72 addAnimations:v74];
        _Block_release(v74);
        swift_release();
        id v76 = *(char **)(v6 + 16);
        id v77 = v72;
        char v78 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v6 + 16) = v76;
        if ((v78 & 1) == 0)
        {
          id v76 = sub_100AFBE04(0, *((void *)v76 + 2) + 1, 1, v76);
          *(void *)(v6 + 16) = v76;
        }
        unint64_t v80 = *((void *)v76 + 2);
        unint64_t v79 = *((void *)v76 + 3);
        if (v80 >= v79 >> 1)
        {
          id v76 = sub_100AFBE04((char *)(v79 > 1), v80 + 1, 1, v76);
          *(void *)(v6 + 16) = v76;
        }
        *((void *)v76 + 2) = v80 + 1;
        int v81 = &v76[16 * v80];
        *((void *)v81 + 4) = v77;
        *((void *)v81 + 5) = 0;

        swift_release();
      }
      else
      {
        if (v32 == 3)
        {
          id v33 = [objc_allocWithZone((Class)UICubicTimingParameters) initWithControlPoint1:0.5 controlPoint2:0.89];
          id v34 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v33 timingParameters:0.15];

          uint64_t v35 = swift_allocObject();
          *(void *)(v35 + 16) = v2;
          CGRect v100 = sub_100C4D000;
          uint64_t v101 = v35;
          CGAffineTransform aBlock = _NSConcreteStackBlock;
          uint64_t v97 = 1107296256;
          CGRect v98 = sub_100020238;
          CGRect v99 = &unk_1010148D8;
          char v36 = _Block_copy(&aBlock);
          swift_retain_n();
          id v37 = v2;
          swift_release();
          [v34 addAnimations:v36];
          _Block_release(v36);
          swift_release();
          double v38 = *(char **)(v6 + 16);
          id v39 = v34;
          char v40 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v6 + 16) = v38;
          if ((v40 & 1) == 0)
          {
            double v38 = sub_100AFBE04(0, *((void *)v38 + 2) + 1, 1, v38);
            *(void *)(v6 + 16) = v38;
          }
          unint64_t v42 = *((void *)v38 + 2);
          unint64_t v41 = *((void *)v38 + 3);
          if (v42 >= v41 >> 1)
          {
            double v38 = sub_100AFBE04((char *)(v41 > 1), v42 + 1, 1, v38);
            *(void *)(v6 + 16) = v38;
          }
          *((void *)v38 + 2) = v42 + 1;
          CGFloat v43 = &v38[16 * v42];
          *((void *)v43 + 4) = v39;
          *((void *)v43 + 5) = 0;

          swift_release();
        }
        swift_bridgeObjectRelease();
      }
      goto LABEL_53;
    }
  }
  else
  {
    unsigned __int8 v92 = v4;
    uint64_t v95 = v6;
    unint64_t v44 = swift_bridgeObjectRetain();
    unint64_t v91 = v5;
    sub_100C47ECC(v44);
    uint64_t v46 = v45;
    sub_100C47930();
    uint64_t v94 = *(void *)(v46 + 16);
    if (v94)
    {
      uint64_t v47 = 0;
      double v48 = (void **)(v46 + 40);
      do
      {
        double v50 = *(v48 - 1);
        CGFloat v49 = *v48;
        id v51 = objc_allocWithZone((Class)UICubicTimingParameters);
        id v52 = v49;
        id v53 = v50;
        id v54 = [v51 initWithControlPoint1:0.32 controlPoint2:0.0 0.67 0.0];
        id v55 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v54 timingParameters:0.5];

        uint64_t v56 = swift_allocObject();
        *(void *)(v56 + 16) = v53;
        *(void *)(v56 + 24) = v49;
        CGRect v100 = sub_100C4D048;
        uint64_t v101 = v56;
        CGAffineTransform aBlock = _NSConcreteStackBlock;
        uint64_t v97 = 1107296256;
        CGRect v98 = sub_100020238;
        CGRect v99 = &unk_101014928;
        id v57 = _Block_copy(&aBlock);
        swift_retain_n();
        id v58 = v53;
        id v59 = v52;
        swift_release();
        [v55 addAnimations:v57];
        _Block_release(v57);
        swift_release();
        double v60 = *(char **)(v95 + 16);
        id v61 = v55;
        char v62 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v95 + 16) = v60;
        if ((v62 & 1) == 0)
        {
          double v60 = sub_100AFBE04(0, *((void *)v60 + 2) + 1, 1, v60);
          *(void *)(v95 + 16) = v60;
        }
        unint64_t v64 = *((void *)v60 + 2);
        unint64_t v63 = *((void *)v60 + 3);
        if (v64 >= v63 >> 1)
        {
          double v60 = sub_100AFBE04((char *)(v63 > 1), v64 + 1, 1, v60);
          *(void *)(v95 + 16) = v60;
        }
        v48 += 2;
        *((void *)v60 + 2) = v64 + 1;
        CGFloat v65 = &v60[16 * v64];
        *((void *)v65 + 4) = v61;
        *((double *)v65 + 5) = (double)v47 * 0.03;

        swift_release();
        ++v47;
      }
      while (v94 != v47);
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = v95;
    unint64_t v5 = v91;
    unsigned __int8 v4 = v92;
    int v32 = v93;
    if (v93) {
      goto LABEL_22;
    }
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v66) {
      goto LABEL_40;
    }
  }
  else
  {
    uint64_t v66 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v66)
    {
LABEL_40:
      if (v66 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v66; ++i)
      {
        if ((v5 & 0xC000000000000001) != 0) {
          id v68 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v68 = *(id *)(v5 + 8 * i + 32);
        }
        long long v69 = v68;
        [v68 setAlpha:0.0];
      }
    }
  }
  swift_bridgeObjectRelease();
  sub_100C47930();
LABEL_53:
  uint64_t v82 = *(void *)&v2[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation];
  if (v82)
  {
    uint64_t v83 = swift_allocObject();
    *(void *)(v83 + 16) = v2;
    *(void *)(v83 + 24) = v6;
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = sub_100C4CFB4;
    *(void *)(v84 + 24) = v83;
    id v85 = *(void **)(v82 + 24);
    long long v86 = v2;
    swift_retain();
    swift_retain();
    swift_retain();
    char v87 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v82 + 24) = v85;
    if ((v87 & 1) == 0)
    {
      id v85 = sub_10000EDC8(0, v85[2] + 1, 1, v85);
      *(void *)(v82 + 24) = v85;
    }
    unint64_t v89 = v85[2];
    unint64_t v88 = v85[3];
    if (v89 >= v88 >> 1)
    {
      id v85 = sub_10000EDC8((void *)(v88 > 1), v89 + 1, 1, v85);
      *(void *)(v82 + 24) = v85;
    }
    v85[2] = v89 + 1;
    float64x2_t v90 = &v85[2 * v89];
    v90[4] = sub_10013DD14;
    v90[5] = v84;
    swift_release();
    swift_release();
  }
  else
  {
    sub_100C4A5FC();
  }
  swift_release();
}

uint64_t WaveformPlayIndicator.mode.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode);
  swift_beginAccess();
  return *v1;
}

void WaveformPlayIndicator.mode.setter(unsigned __int8 a1)
{
  uint64_t v3 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode);
  swift_beginAccess();
  unsigned __int8 v4 = *v3;
  *uint64_t v3 = a1;
  sub_100C458A0(v4, a1);
}

void (*WaveformPlayIndicator.mode.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode;
  v3[3] = v1;
  v3[4] = v4;
  unint64_t v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *v5;
  return sub_100C466AC;
}

void sub_100C466AC(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v2 = *(void *)(*(void *)a1 + 32);
  unsigned __int8 v4 = *(unsigned char *)(v3 + v2);
  unsigned __int8 v5 = v1[40];
  *(unsigned char *)(v3 + v2) = v5;
  sub_100C458A0(v4, v5);

  free(v1);
}

uint64_t type metadata accessor for BouncyBarsAsset()
{
  return self;
}

void sub_100C4671C()
{
  uint64_t v0 = self;
  id v1 = [v0 whiteColor];
  id v2 = [v0 whiteColor];
  id v3 = [v0 whiteColor];
  id v4 = [v3 colorWithAlphaComponent:0.2];

  id v5 = [v0 whiteColor];
  id v6 = [v5 colorWithAlphaComponent:0.6];

  static WaveformPlayIndicator.ColorPalette.overlaCGFloat y = (uint64_t)v1;
  unk_10112D140 = v2;
  qword_10112D148 = (uint64_t)v4;
  unk_10112D150 = v6;
}

uint64_t *WaveformPlayIndicator.ColorPalette.overlay.unsafeMutableAddressor()
{
  if (qword_1010C88F0 != -1) {
    swift_once();
  }
  return &static WaveformPlayIndicator.ColorPalette.overlay;
}

uint64_t static WaveformPlayIndicator.ColorPalette.overlay.getter()
{
  if (qword_1010C88F0 != -1) {
    swift_once();
  }
  uint64_t v0 = static WaveformPlayIndicator.ColorPalette.overlay;
  id v1 = (void *)unk_10112D140;
  id v2 = (void *)qword_10112D148;
  id v3 = (void *)unk_10112D150;
  id v4 = (id)static WaveformPlayIndicator.ColorPalette.overlay;
  id v5 = v1;
  id v6 = v2;
  id v7 = v3;
  return v0;
}

uint64_t static WaveformPlayIndicator.ColorPalette.__derived_struct_equals(_:_:)()
{
  if ((static NSObject.== infix(_:_:)() & 1) != 0
    && (static NSObject.== infix(_:_:)() & 1) != 0
    && (static NSObject.== infix(_:_:)() & 1) != 0)
  {
    return static NSObject.== infix(_:_:)() & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100C469A8()
{
  if ((static NSObject.== infix(_:_:)() & 1) != 0
    && (static NSObject.== infix(_:_:)() & 1) != 0
    && (static NSObject.== infix(_:_:)() & 1) != 0)
  {
    return static NSObject.== infix(_:_:)() & 1;
  }
  else
  {
    return 0;
  }
}

void sub_100C46A58()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess();
  id v2 = *(void **)v1;
  id v3 = *(void **)(v1 + 8);
  id v4 = *(void **)(v1 + 16);
  id v5 = *(void **)(v1 + 24);
  sub_100057778(0, (unint64_t *)&qword_1010CAA20);
  id v6 = v2;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  if ((static NSObject.== infix(_:_:)() & 1) == 0
    || (static NSObject.== infix(_:_:)() & 1) == 0
    || (static NSObject.== infix(_:_:)() & 1) == 0)
  {

    goto LABEL_7;
  }
  char v10 = static NSObject.== infix(_:_:)();

  if ((v10 & 1) == 0) {
LABEL_7:
  }
    sub_100C45598();
}

void *WaveformPlayIndicator.colorPalette.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess();
  id v2 = *(void **)v1;
  id v3 = *(void **)(v1 + 8);
  id v5 = *(void **)(v1 + 16);
  id v4 = *(void **)(v1 + 24);
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;
  id v9 = v4;
  return v2;
}

void WaveformPlayIndicator.colorPalette.setter(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v9 = v4 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess();
  char v10 = *(void **)v9;
  uint64_t v11 = *(void **)(v9 + 8);
  unint64_t v12 = *(void **)(v9 + 16);
  unint64_t v13 = *(void **)(v9 + 24);
  *(void *)uint64_t v9 = a1;
  *(void *)(v9 + 8) = a2;
  *(void *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a4;
  id v14 = a1;
  id v15 = a2;
  id v16 = a3;
  id v17 = a4;
  sub_100C46A58();
}

void (*WaveformPlayIndicator.colorPalette.modify(void *a1))(void ***a1, char a2)
{
  id v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[7] = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess();
  id v5 = *(void **)v4;
  id v6 = *(void **)(v4 + 8);
  id v8 = *(void **)(v4 + 16);
  id v7 = *(void **)(v4 + 24);
  *id v3 = v5;
  v3[1] = v6;
  v3[2] = v8;
  v3[3] = v7;
  id v9 = v5;
  id v10 = v6;
  id v11 = v8;
  id v12 = v7;
  return sub_100C46D74;
}

void sub_100C46D74(void ***a1, char a2)
{
  id v2 = *a1;
  id v3 = **a1;
  if (a2)
  {
    WaveformPlayIndicator.colorPalette.setter(v3, v2[1], v2[2], v2[3]);
    uint64_t v4 = v2[1];
    id v5 = v2[2];
    id v6 = v2[3];
  }
  else
  {
    WaveformPlayIndicator.colorPalette.setter(v3, v2[1], v2[2], v2[3]);
  }

  free(v2);
}

id WaveformPlayIndicator.waveform.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void WaveformPlayIndicator.waveform.setter(void *a1)
{
  id v3 = (void **)&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform];
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
  id v5 = a1;

  id v6 = &v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode];
  swift_beginAccess();
  if (*v6 == 2)
  {
    id v7 = self;
    id v8 = *(void **)&v1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_settings];
    [v8 animationDuration];
    double v10 = v9;
    [v8 springDamping];
    double v12 = v11;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v1;
    void v16[4] = sub_100C4CAE0;
    v16[5] = v13;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    void v16[2] = sub_100020238;
    v16[3] = &unk_101014508;
    id v14 = _Block_copy(v16);
    id v15 = v1;
    swift_release();
    [v7 animateWithDuration:0 delay:v14 usingSpringWithDamping:0 initialSpringVelocity:v10 options:0.0 animations:v12 completion:0.0];
    _Block_release(v14);
  }
}

void (*WaveformPlayIndicator.waveform.modify(void *a1))(void ****a1, char a2)
{
  id v3 = malloc(0x50uLL);
  *a1 = v3;
  v3[9] = v1;
  swift_beginAccess();
  return sub_100C47090;
}

void sub_100C47090(void ****a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = (char *)v3[9] + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode;
    swift_beginAccess();
    if (*v4 == 2)
    {
      id v5 = v3[9];
      id v6 = self;
      id v7 = *(void **)((char *)v5 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_settings);
      [v7 animationDuration];
      double v9 = v8;
      [v7 springDamping];
      double v11 = v10;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v5;
      v3[4] = (void **)sub_100C4D6FC;
      v3[5] = (void **)v12;
      *id v3 = _NSConcreteStackBlock;
      v3[1] = (void **)1107296256;
      v3[2] = (void **)sub_100020238;
      v3[3] = (void **)&unk_101014558;
      uint64_t v13 = _Block_copy(v3);
      id v14 = v5;
      swift_release();
      [v6 animateWithDuration:0 delay:v13 usingSpringWithDamping:0 initialSpringVelocity:v9 options:0.0 animations:v11 completion:0.0];
      _Block_release(v13);
    }
  }

  free(v3);
}

uint64_t sub_100C47220()
{
  unint64_t v0 = sub_100C45534();
  unint64_t v1 = v0;
  if (v0 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (v1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v1 + 8 * v3);
      id v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = [v4 layer];
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v9 = [v7 animationForKey:v8];

      if (!v9) {
        goto LABEL_13;
      }
      id v10 = [v5 layer];
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v12 = [v10 animationForKey:v11];

      if (!v12
        || (id v13 = [v5 layer],
            NSString v14 = String._bridgeToObjectiveC()(),
            swift_bridgeObjectRelease(),
            id v15 = [v13 animationForKey:v14],
            v15,
            v13,
            v14,
            !v15))
      {
LABEL_13:
        swift_bridgeObjectRelease_n();

        return 0;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
LABEL_12:
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t sub_100C47534()
{
  unint64_t v0 = sub_100C45534();
  unint64_t v1 = (unint64_t)sub_100C44EF0(v0);
  swift_bridgeObjectRelease();
  if (v1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    unint64_t v3 = 0;
    unint64_t v14 = v1 & 0xC000000000000001;
    id v13 = (void *)v1;
    uint64_t v12 = v1 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if (v14)
      {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v3 >= *(void *)(v12 + 16)) {
          goto LABEL_13;
        }
        id v4 = *(id *)(v1 + 8 * v3 + 32);
      }
      id v5 = v4;
      if (__OFADD__(v3, 1)) {
        break;
      }
      unint64_t v15 = v3 + 1;
      NSString v6 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v5 removeAnimationForKey:v6];

      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v5 removeAnimationForKey:v7];

      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v5 removeAnimationForKey:v8];

      id v9 = [v5 presentationLayer];
      if (v9)
      {
        id v10 = v9;
        [v9 frame];
        [v5 setFrame:];
        [v10 cornerRadius];
        [v5 setCornerRadius:];
      }
      ++v3;
      unint64_t v1 = (unint64_t)v13;
      if (v15 == v2) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_100C47824(uint64_t a1)
{
  sub_100C47930();
  uint64_t v2 = a1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess();
  id v3 = *(id *)(v2 + 16);
  unint64_t result = sub_100C45534();
  unint64_t v5 = result;
  if (!(result >> 62))
  {
    uint64_t v6 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_3;
    }
LABEL_10:

    return swift_bridgeObjectRelease();
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v5 + 8 * i + 32);
      }
      id v9 = v8;
      [v8 setBackgroundColor:v3];
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

unint64_t sub_100C47930()
{
  [v0 bounds];
  double Width = CGRectGetWidth(v22);
  double v2 = *(double *)&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_numberOfBars];
  [v0 bounds];
  double v3 = CGRectGetWidth(v23);
  id v4 = &v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode];
  swift_beginAccess();
  if (*v4 == 2)
  {
    unint64_t v5 = (id *)&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_waveform];
    swift_beginAccess();
    id v6 = *v5;
  }
  else
  {
    id v6 = [self zero];
  }
  id v21 = v6;
  unint64_t result = sub_100C45534();
  unint64_t v8 = result;
  if (result >> 62)
  {
LABEL_18:
    unint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = result;
    if (result) {
      goto LABEL_6;
    }
LABEL_19:

    return swift_bridgeObjectRelease();
  }
  uint64_t v9 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v9) {
    goto LABEL_19;
  }
LABEL_6:
  if (v9 >= 1)
  {
    uint64_t v10 = 0;
    double v11 = Width / (double)*(uint64_t *)&v2;
    double Width = v11 * 0.5;
    double v12 = v3 / (double)*(uint64_t *)&v2 - v11 * 0.5;
    double v3 = v11 * 0.5 * 0.5;
    double v13 = v12 * 0.5;
    while (1)
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v14 = *(id *)(v8 + 8 * v10 + 32);
      }
      unint64_t v15 = v14;
      double v2 = v13 + v3 + v11 * (double)v10;
      [v0 bounds];
      [v15 setCenter:v2, CGRectGetMidY(v24)];
      id v16 = [v15 layer];
      [v16 setCornerRadius:v11 * 0.5 * 0.5];

      id v17 = [v21 amplitudes];
      sub_100057778(0, &qword_1010C9670);
      uint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if ((v18 & 0xC000000000000001) != 0)
      {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((unint64_t)v10 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_18;
        }
        id v19 = *(id *)(v18 + 8 * v10 + 32);
      }
      unint64_t v20 = v19;
      ++v10;
      swift_bridgeObjectRelease();
      [v20 doubleValue];

      [v0 bounds];
      CGRectGetHeight(v25);
      [v15 bounds];
      [v15 setBounds:];
      [v15 bounds];
      [v15 setBounds:];

      if (v9 == v10) {
        goto LABEL_19;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100C47C5C(uint64_t a1, char *a2, char a3)
{
  uint64_t v5 = sub_100063814(&qword_1010CAA90);
  __chkstk_darwin(v5 - 8);
  NSString v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = &a2[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_mode];
  uint64_t result = swift_beginAccess();
  if (*v8 == a3)
  {
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
    type metadata accessor for MainActor();
    double v11 = a2;
    uint64_t v12 = static MainActor.shared.getter();
    double v13 = (void *)swift_allocObject();
    _OWORD v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v11;
    *(void *)&v11[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_pulseTask] = sub_100066A94((uint64_t)v7, (uint64_t)&unk_1010D1518, (uint64_t)v13);
    return swift_release();
  }
  return result;
}

unint64_t sub_100C47DC0(uint64_t a1)
{
  sub_100C47930();
  uint64_t v2 = a1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette;
  swift_beginAccess();
  id v3 = *(id *)(v2 + 8);
  unint64_t result = sub_100C45534();
  unint64_t v5 = result;
  if (!(result >> 62))
  {
    uint64_t v6 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_3;
    }
LABEL_10:

    return swift_bridgeObjectRelease();
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v5 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      [v8 setBackgroundColor:v3];
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_100C47ECC(unint64_t a1)
{
  unint64_t v1 = (void *)sub_100C4BF40(a1);
  unint64_t v2 = v1[2];
  swift_bridgeObjectRelease();
  if (v2 < 2) {
    return;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  unint64_t v5 = v2 - 1;
  uint64_t v6 = 2 * v2;
  uint64_t v7 = 5;
  unint64_t v21 = v2 >> 1;
  while (1)
  {
    if (v3 == v5) {
      goto LABEL_4;
    }
    unint64_t v8 = v1[2];
    if (v3 >= v8) {
      break;
    }
    if (v5 >= v8) {
      goto LABEL_13;
    }
    uint64_t v9 = (void *)v1[v7 - 1];
    uint64_t v10 = (void *)v1[v7];
    double v11 = (void *)v1[v6 + 2];
    uint64_t v12 = (void *)v1[v6 + 3];
    id v13 = v12;
    id v14 = v9;
    id v15 = v10;
    id v16 = v11;
    id v22 = v14;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v1 = sub_100C4BB94(v1);
    }
    id v17 = &v1[v7];
    uint64_t v18 = (void *)v1[v7];

    *(v17 - 1) = v16;
    *id v17 = v12;
    if (v5 >= v1[2]) {
      goto LABEL_14;
    }
    id v19 = &v1[v6];
    unint64_t v20 = (void *)v1[v6 + 3];

    v19[2] = v22;
    v19[3] = v10;
    unint64_t v4 = v21;
LABEL_4:
    ++v3;
    v7 += 2;
    --v5;
    v6 -= 2;
    if (v4 == v3) {
      return;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_100C48018(uint64_t a1)
{
  sub_100C47930();
  unint64_t v2 = (id *)(a1 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette);
  swift_beginAccess();
  id v3 = *v2;
  unint64_t v4 = sub_100C45534();
  unint64_t v5 = v4;
  if (!(v4 >> 62))
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_3;
    }
LABEL_10:

    swift_bridgeObjectRelease();
    sub_100C48128();
    return;
  }
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  if (!v6) {
    goto LABEL_10;
  }
LABEL_3:
  if (v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v5 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      [v8 setBackgroundColor:v3];
    }
    goto LABEL_10;
  }
  __break(1u);
}

void sub_100C48128()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_cannedAnimationAsset)) {
    return;
  }
  swift_retain();
  unint64_t v3 = sub_1002C7F14(3uLL);
  if (v3 > 2)
  {
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_5;
    }
LABEL_46:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v2 = *((unsigned __int8 *)&off_101008AC8 + v3 + 32);
  unint64_t v4 = sub_100C45534();
  unint64_t v1 = (unint64_t)sub_100C44EF0(v4);
  swift_bridgeObjectRelease();
  if (v1 >> 62) {
    goto LABEL_45;
  }
  uint64_t v5 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_46;
  }
LABEL_5:
  if (v5 >= 1)
  {
    unint64_t v6 = 0;
    unsigned int v27 = v2;
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v1 + 8 * v6 + 32);
      }
      id v8 = v7;
      uint64_t v9 = sub_100C4B028(v2, v6);
      if (v9)
      {
        uint64_t v10 = v9;
        __chkstk_darwin(v9);
        sub_100C4C2D8(v11, (void (*)(uint64_t, id))sub_100C4D2A4);
        if (!v10[2]
          || (unint64_t v12 = sub_100AFD08C(1), (v13 & 1) == 0)
          || (id v14 = [*(id *)(v10[7] + 8 * v12) values]) == 0)
        {
LABEL_27:
          long long v29 = 0u;
          long long v30 = 0u;
LABEL_28:
          swift_bridgeObjectRelease();
LABEL_29:

          sub_10005DF18((uint64_t)&v29);
          goto LABEL_9;
        }
        id v15 = v14;
        uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (*(void *)(v16 + 16))
        {
          sub_100076134(v16 + 32, (uint64_t)&v29);
        }
        else
        {
          long long v29 = 0u;
          long long v30 = 0u;
        }
        swift_bridgeObjectRelease();
        uint64_t v2 = v27;
        if (!*((void *)&v30 + 1)) {
          goto LABEL_28;
        }
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_7;
        }
        if (!v10[2]) {
          goto LABEL_27;
        }
        unint64_t v17 = sub_100AFD08C(0);
        if ((v18 & 1) == 0) {
          goto LABEL_27;
        }
        id v19 = [*(id *)(v10[7] + 8 * v17) values];
        if (!v19) {
          goto LABEL_27;
        }
        unint64_t v20 = v19;
        uint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (*(void *)(v21 + 16))
        {
          sub_100076134(v21 + 32, (uint64_t)&v29);
        }
        else
        {
          long long v29 = 0u;
          long long v30 = 0u;
        }
        swift_bridgeObjectRelease();
        uint64_t v2 = v27;
        if (!*((void *)&v30 + 1)) {
          goto LABEL_28;
        }
        if (swift_dynamicCast())
        {
          if (!v10[2] || (unint64_t v22 = sub_100AFD08C(2), (v23 & 1) == 0))
          {
            swift_bridgeObjectRelease();
LABEL_39:
            long long v29 = 0u;
            long long v30 = 0u;
            uint64_t v2 = v27;
            goto LABEL_29;
          }
          id v24 = *(id *)(v10[7] + 8 * v22);
          swift_bridgeObjectRelease();
          id v25 = [v24 values];

          if (!v25) {
            goto LABEL_39;
          }
          uint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (*(void *)(v26 + 16))
          {
            sub_100076134(v26 + 32, (uint64_t)&v29);
          }
          else
          {
            long long v29 = 0u;
            long long v30 = 0u;
          }
          uint64_t v2 = v27;
          swift_bridgeObjectRelease();
          if (!*((void *)&v30 + 1)) {
            goto LABEL_29;
          }
          if (swift_dynamicCast())
          {
            [v8 frame];
            [v8 setFrame:];
            [v8 setCornerRadius:v28];
          }
        }
        else
        {
LABEL_7:
          swift_bridgeObjectRelease();
        }
      }

LABEL_9:
      if (v5 == ++v6) {
        goto LABEL_46;
      }
    }
  }
  __break(1u);
}

void sub_100C48594(char *a1, char a2)
{
  unint64_t v4 = (id *)&a1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette];
  swift_beginAccess();
  id v5 = *v4;
  unint64_t v6 = sub_100C45534();
  unint64_t v7 = v6;
  if (v6 >> 62)
  {
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (!v8) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v8) {
      goto LABEL_10;
    }
  }
  if (v8 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(v7 + 8 * i + 32);
    }
    uint64_t v11 = v10;
    [v10 setBackgroundColor:v5];
  }
LABEL_10:

  swift_bridgeObjectRelease();
  if (a2 == 3)
  {
    unint64_t v12 = self;
    char v13 = *(void **)&a1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_settings];
    [v13 animationDuration];
    double v15 = v14;
    [v13 springDamping];
    double v17 = v16;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a1;
    aBlock[4] = sub_100C4D6FC;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100020238;
    aBlock[3] = &unk_101014BD0;
    id v19 = _Block_copy(aBlock);
    unint64_t v20 = a1;
    swift_release();
    [v12 animateWithDuration:0 delay:v19 usingSpringWithDamping:0 initialSpringVelocity:v15 options:0.0 animations:v17 completion:0.0];
    _Block_release(v19);
  }
}

uint64_t sub_100C487C0(char *a1, uint64_t a2)
{
  *(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation] = a2;
  swift_release();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100C4D2AC;
  *(void *)(v5 + 24) = v4;
  unint64_t v6 = *(void **)(a2 + 24);
  swift_retain();
  unint64_t v7 = a1;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 24) = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v6 = sub_10000EDC8(0, v6[2] + 1, 1, v6);
    *(void *)(a2 + 24) = v6;
  }
  unint64_t v10 = v6[2];
  unint64_t v9 = v6[3];
  if (v10 >= v9 >> 1)
  {
    unint64_t v6 = sub_10000EDC8((void *)(v9 > 1), v10 + 1, 1, v6);
    *(void *)(a2 + 24) = v6;
  }
  void v6[2] = v10 + 1;
  uint64_t v11 = &v6[2 * v10];
  v11[4] = sub_10013DF0C;
  v11[5] = v5;
  swift_release();
  return sub_100C4A5FC();
}

id sub_100C488F8(char *a1)
{
  v3.receiver = a1;
  v3.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  if (!*(void *)&a1[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation]) {
    return (id)sub_100C47930();
  }
  return result;
}

Swift::Void __swiftcall WaveformPlayIndicator.layoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  if (!*(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation]) {
    sub_100C47930();
  }
}

uint64_t sub_100C48998()
{
  objc_super v1 = v0;
  [v0 bounds];
  double Width = CGRectGetWidth(v59);
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_numberOfBars];
  [v0 bounds];
  double Height = CGRectGetHeight(v60);
  uint64_t v5 = &v0[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_colorPalette];
  swift_beginAccess();
  unint64_t v6 = (void *)*((void *)v5 + 2);
  unint64_t v7 = (void *)*((void *)v5 + 3);
  type metadata accessor for AnimationGroup();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = _swiftEmptyArrayStorage;
  *(void *)(v8 + 24) = _swiftEmptyArrayStorage;
  uint64_t v52 = v8;
  id v51 = v6;
  id v50 = v7;
  uint64_t v46 = v1;
  unint64_t v9 = sub_100C45534();
  unint64_t v10 = v9;
  if (v9 >> 62)
  {
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (!result) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t result = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!result) {
      goto LABEL_15;
    }
  }
  if (result < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v12 = 0;
  unint64_t v47 = v10 & 0xC000000000000001;
  double v13 = Width / (double)v3 * 0.5;
  double v14 = Height * 0.7;
  uint64_t v48 = result;
  unint64_t v49 = v10;
  do
  {
    if (v47) {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v15 = *(id *)(v10 + 8 * v12 + 32);
    }
    float v16 = v15;
    id v17 = [objc_allocWithZone((Class)UICubicTimingParameters) initWithControlPoint1:0.11 controlPoint2:0.05];
    id v18 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v17 timingParameters:0.25];

    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v16;
    *(void *)(v19 + 24) = v50;
    *(double *)(v19 + 32) = v14;
    id v57 = (id (*)(id))sub_100C4D1E4;
    uint64_t v58 = v19;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v54 = 1107296256;
    id v55 = sub_100020238;
    uint64_t v56 = &unk_101014A90;
    unint64_t v20 = _Block_copy(&aBlock);
    id v21 = v50;
    id v22 = v16;
    swift_release();
    [v18 addAnimations:v20];
    _Block_release(v20);
    id v23 = [objc_allocWithZone((Class)UICubicTimingParameters) initWithControlPoint1:0.11 controlPoint2:0.0 0.5 0.0];
    id v24 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v23 timingParameters:0.25];

    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v22;
    *(void *)(v25 + 24) = v51;
    *(double *)(v25 + 32) = v13;
    id v57 = (id (*)(id))sub_100C4D1E4;
    uint64_t v58 = v25;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v54 = 1107296256;
    id v55 = sub_100020238;
    uint64_t v56 = &unk_101014AE0;
    uint64_t v26 = _Block_copy(&aBlock);
    id v27 = v51;
    id v28 = v22;
    swift_release();
    [v24 addAnimations:v26];
    _Block_release(v26);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v24;
    id v57 = sub_100C4D254;
    uint64_t v58 = v29;
    CGAffineTransform aBlock = _NSConcreteStackBlock;
    uint64_t v54 = 1107296256;
    id v55 = sub_1002DE0E4;
    uint64_t v56 = &unk_101014B30;
    long long v30 = _Block_copy(&aBlock);
    id v31 = v24;
    swift_release();
    [v18 addCompletion:v30];
    _Block_release(v30);
    int v32 = *(char **)(v52 + 16);
    id v33 = v18;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v52 + 16) = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      int v32 = sub_100AFBE04(0, *((void *)v32 + 2) + 1, 1, v32);
      *(void *)(v52 + 16) = v32;
    }
    unint64_t v36 = *((void *)v32 + 2);
    unint64_t v35 = *((void *)v32 + 3);
    if (v36 >= v35 >> 1)
    {
      int v32 = sub_100AFBE04((char *)(v35 > 1), v36 + 1, 1, v32);
      *(void *)(v52 + 16) = v32;
    }
    *((void *)v32 + 2) = v36 + 1;
    id v37 = &v32[16 * v36];
    *((void *)v37 + 4) = v33;
    *((double *)v37 + 5) = (double)v12 * 0.1;

    ++v12;
    unint64_t v10 = v49;
  }
  while (v48 != v12);
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v46;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = sub_100C4D68C;
  *(void *)(v39 + 24) = v38;
  char v40 = *(void **)(v52 + 24);
  unint64_t v41 = v46;
  swift_retain();
  char v42 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v52 + 24) = v40;
  if ((v42 & 1) == 0)
  {
    char v40 = sub_10000EDC8(0, v40[2] + 1, 1, v40);
    *(void *)(v52 + 24) = v40;
  }
  unint64_t v44 = v40[2];
  unint64_t v43 = v40[3];
  if (v44 >= v43 >> 1)
  {
    char v40 = sub_10000EDC8((void *)(v43 > 1), v44 + 1, 1, v40);
    *(void *)(v52 + 24) = v40;
  }
  v40[2] = v44 + 1;
  uint64_t v45 = &v40[2 * v44];
  void v45[4] = sub_10013DF0C;
  v45[5] = v39;
  swift_release();
  *(void *)&v41[OBJC_IVAR____TtC11MusicCoreUI21WaveformPlayIndicator_exclusiveAnimation] = v52;
  swift_retain();
  swift_release();
  sub_100C4A5FC();

  return swift_release();
}