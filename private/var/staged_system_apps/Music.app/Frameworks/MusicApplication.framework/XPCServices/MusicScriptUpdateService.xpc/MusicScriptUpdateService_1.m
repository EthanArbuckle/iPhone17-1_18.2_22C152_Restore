uint64_t sub_1000B5300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  unint64_t v11;
  int v12;
  long long v13;
  long long v14;
  void *v15;
  id v16;
  void **v17;
  void *v18;
  void *v19;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  v6 = *(void *)(v5 + 48) + 7;
  v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v11 = v10[1];
  if (v11 >= 0xFFFFFFFF) {
    LODWORD(v11) = -1;
  }
  v12 = v11 - 1;
  swift_bridgeObjectRetain();
  if (v12 < 0)
  {
    *v9 = *v10;
    v9[1] = v10[1];
    v9[2] = v10[2];
    v9[3] = v10[3];
    v15 = (void *)v10[4];
    v9[4] = v15;
    v9[5] = v10[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = v15;
  }
  else
  {
    v13 = *(_OWORD *)v10;
    v14 = *((_OWORD *)v10 + 2);
    *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
    *((_OWORD *)v9 + 2) = v14;
    *(_OWORD *)v9 = v13;
  }
  v17 = (void **)(((unint64_t)v10 + 55) & 0xFFFFFFFFFFFFFFF8);
  v18 = *v17;
  v19 = (void *)(((unint64_t)v9 + 55) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v17;
  v20 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = (unint64_t *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = *v21;
  v23 = v18;
  if (v22 < 0xFFFFFFFF)
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
  }
  else
  {
    v24 = v21[1];
    *(void *)v20 = v22;
    *(void *)(v20 + 8) = v24;
    swift_retain();
  }
  v25 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v26 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
  }
  else
  {
    v27 = *(void *)(v26 + 8);
    *(void *)v25 = *(void *)v26;
    *(void *)(v25 + 8) = v27;
    swift_retain();
  }
  v28 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v29 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
  }
  else
  {
    v30 = *(void *)(v29 + 8);
    *(void *)v28 = *(void *)v29;
    *(void *)(v28 + 8) = v30;
    swift_retain();
  }
  v31 = (v28 + 23) & 0xFFFFFFFFFFFFFFF8;
  v32 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v32 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v31 = *(_OWORD *)v32;
  }
  else
  {
    v33 = *(void *)(v32 + 8);
    *(void *)v31 = *(void *)v32;
    *(void *)(v31 + 8) = v33;
    swift_retain();
  }
  return a1;
}

uint64_t sub_1000B5500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  LODWORD(v11) = -1;
  if (*(void *)(v9 + 8) >= 0xFFFFFFFFuLL) {
    LODWORD(v12) = -1;
  }
  else {
    uint64_t v12 = *(void *)(v9 + 8);
  }
  int v13 = v12 - 1;
  if (v10[1] < 0xFFFFFFFFuLL) {
    uint64_t v11 = v10[1];
  }
  int v14 = v11 - 1;
  if ((v13 & 0x80000000) == 0)
  {
    if (v14 < 0)
    {
      *(void *)unint64_t v9 = *v10;
      *(void *)(v9 + 8) = v10[1];
      *(void *)(v9 + 16) = v10[2];
      *(void *)(v9 + 24) = v10[3];
      v15 = (void *)v10[4];
      *(void *)(v9 + 32) = v15;
      *(void *)(v9 + 40) = v10[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v16 = v15;
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if ((v14 & 0x80000000) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_11:
    long long v17 = *(_OWORD *)v10;
    long long v18 = *((_OWORD *)v10 + 2);
    *(_OWORD *)(v9 + 16) = *((_OWORD *)v10 + 1);
    *(_OWORD *)(v9 + 32) = v18;
    *(_OWORD *)unint64_t v9 = v17;
    goto LABEL_12;
  }
  *(void *)unint64_t v9 = *v10;
  *(void *)(v9 + 8) = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 16) = v10[2];
  *(void *)(v9 + 24) = v10[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = *(void **)(v9 + 32);
  v46 = (void *)v10[4];
  *(void *)(v9 + 32) = v46;
  id v47 = v46;

  *(void *)(v9 + 40) = v10[5];
LABEL_12:
  v19 = (void **)((v9 + 55) & 0xFFFFFFFFFFFFFFF8);
  v20 = (void **)(((unint64_t)v10 + 55) & 0xFFFFFFFFFFFFFFF8);
  v21 = *v20;
  v22 = *v19;
  *v19 = *v20;
  id v23 = v21;

  v24 = (void *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  v25 = (unint64_t *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v26 = *v25;
  if (*v24 < 0xFFFFFFFFuLL)
  {
    if (v26 >= 0xFFFFFFFF)
    {
      unint64_t v28 = v25[1];
      void *v24 = v26;
      v24[1] = v28;
      swift_retain();
      goto LABEL_19;
    }
  }
  else
  {
    if (v26 >= 0xFFFFFFFF)
    {
      unint64_t v27 = v25[1];
      void *v24 = v26;
      v24[1] = v27;
      swift_retain();
      swift_release();
      goto LABEL_19;
    }
    swift_release();
  }
  *(_OWORD *)v24 = *(_OWORD *)v25;
LABEL_19:
  v29 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v30 = (unint64_t *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v31 = *v30;
  if (*v29 < 0xFFFFFFFFuLL)
  {
    if (v31 >= 0xFFFFFFFF)
    {
      unint64_t v33 = v30[1];
      void *v29 = v31;
      v29[1] = v33;
      swift_retain();
      goto LABEL_26;
    }
  }
  else
  {
    if (v31 >= 0xFFFFFFFF)
    {
      unint64_t v32 = v30[1];
      void *v29 = v31;
      v29[1] = v32;
      swift_retain();
      swift_release();
      goto LABEL_26;
    }
    swift_release();
  }
  *(_OWORD *)v29 = *(_OWORD *)v30;
LABEL_26:
  v34 = (void *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  v35 = (unint64_t *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v36 = *v35;
  if (*v34 < 0xFFFFFFFFuLL)
  {
    if (v36 >= 0xFFFFFFFF)
    {
      unint64_t v38 = v35[1];
      void *v34 = v36;
      v34[1] = v38;
      swift_retain();
      goto LABEL_33;
    }
  }
  else
  {
    if (v36 >= 0xFFFFFFFF)
    {
      unint64_t v37 = v35[1];
      void *v34 = v36;
      v34[1] = v37;
      swift_retain();
      swift_release();
      goto LABEL_33;
    }
    swift_release();
  }
  *(_OWORD *)v34 = *(_OWORD *)v35;
LABEL_33:
  v39 = (void *)(((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFFFF8);
  v40 = (unint64_t *)(((unint64_t)v35 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v41 = *v40;
  if (*v39 < 0xFFFFFFFFuLL)
  {
    if (v41 >= 0xFFFFFFFF)
    {
      unint64_t v43 = v40[1];
      void *v39 = v41;
      v39[1] = v43;
      swift_retain();
      return a1;
    }
LABEL_39:
    *(_OWORD *)v39 = *(_OWORD *)v40;
    return a1;
  }
  if (v41 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_39;
  }
  unint64_t v42 = v40[1];
  void *v39 = v41;
  v39[1] = v42;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1000B58A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v7 = *v8;
  unint64_t v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v10 = (long long *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  long long v11 = *v10;
  long long v12 = v10[2];
  v9[1] = v10[1];
  v9[2] = v12;
  *unint64_t v9 = v11;
  int v13 = (void *)(((unint64_t)v9 + 55) & 0xFFFFFFFFFFFFFFF8);
  int v14 = (void *)(((unint64_t)v10 + 55) & 0xFFFFFFFFFFFFFFF8);
  *int v13 = *v14;
  unint64_t v15 = ((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = ((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v16 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
  }
  else
  {
    uint64_t v17 = *(void *)(v16 + 8);
    *(void *)unint64_t v15 = *(void *)v16;
    *(void *)(v15 + 8) = v17;
  }
  unint64_t v18 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v19 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
  }
  else
  {
    uint64_t v20 = *(void *)(v19 + 8);
    *(void *)unint64_t v18 = *(void *)v19;
    *(void *)(v18 + 8) = v20;
  }
  unint64_t v21 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)v22 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)unint64_t v21 = *(_OWORD *)v22;
  }
  else
  {
    uint64_t v23 = *(void *)(v22 + 8);
    *(void *)unint64_t v21 = *(void *)v22;
    *(void *)(v21 + 8) = v23;
  }
  unint64_t v24 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  v25 = (uint64_t *)((v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = *v25;
  if ((unint64_t)*v25 < 0xFFFFFFFF)
  {
    *(_OWORD *)unint64_t v24 = *(_OWORD *)v25;
  }
  else
  {
    uint64_t v27 = v25[1];
    *(void *)unint64_t v24 = v26;
    *(void *)(v24 + 8) = v27;
  }
  return a1;
}

uint64_t sub_1000B5A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  LODWORD(v11) = -1;
  if (*(void *)(v9 + 8) < 0xFFFFFFFFuLL) {
    uint64_t v11 = *(void *)(v9 + 8);
  }
  if ((int)v11 - 1 >= 0) {
    goto LABEL_8;
  }
  unint64_t v12 = *(void *)(v10 + 8);
  if (v12 >= 0xFFFFFFFF) {
    LODWORD(v12) = -1;
  }
  if ((int)v12 - 1 >= 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_8:
    long long v13 = *(_OWORD *)v10;
    long long v14 = *(_OWORD *)(v10 + 32);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)(v10 + 16);
    *(_OWORD *)(v9 + 32) = v14;
    *(_OWORD *)unint64_t v9 = v13;
    goto LABEL_9;
  }
  *(void *)unint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  swift_bridgeObjectRelease();
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  *(void *)(v9 + 24) = *(void *)(v10 + 24);
  swift_bridgeObjectRelease();
  v39 = *(void **)(v9 + 32);
  *(void *)(v9 + 32) = *(void *)(v10 + 32);

  *(void *)(v9 + 40) = *(void *)(v10 + 40);
LABEL_9:
  unint64_t v15 = (void **)((v9 + 55) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = (void **)((v10 + 55) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = *v15;
  void *v15 = *v16;

  unint64_t v18 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v19 = (unint64_t *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v20 = *v19;
  if (*v18 < 0xFFFFFFFFuLL)
  {
    if (v20 >= 0xFFFFFFFF)
    {
      unint64_t v22 = v19[1];
      *unint64_t v18 = v20;
      v18[1] = v22;
      goto LABEL_16;
    }
  }
  else
  {
    if (v20 >= 0xFFFFFFFF)
    {
      unint64_t v21 = v19[1];
      *unint64_t v18 = v20;
      v18[1] = v21;
      swift_release();
      goto LABEL_16;
    }
    swift_release();
  }
  *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
LABEL_16:
  uint64_t v23 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (unint64_t *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v25 = *v24;
  if (*v23 < 0xFFFFFFFFuLL)
  {
    if (v25 >= 0xFFFFFFFF)
    {
      unint64_t v27 = v24[1];
      *uint64_t v23 = v25;
      v23[1] = v27;
      goto LABEL_23;
    }
  }
  else
  {
    if (v25 >= 0xFFFFFFFF)
    {
      unint64_t v26 = v24[1];
      *uint64_t v23 = v25;
      v23[1] = v26;
      swift_release();
      goto LABEL_23;
    }
    swift_release();
  }
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
LABEL_23:
  unint64_t v28 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v29 = (unint64_t *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v30 = *v29;
  if (*v28 < 0xFFFFFFFFuLL)
  {
    if (v30 >= 0xFFFFFFFF)
    {
      unint64_t v32 = v29[1];
      *unint64_t v28 = v30;
      v28[1] = v32;
      goto LABEL_30;
    }
  }
  else
  {
    if (v30 >= 0xFFFFFFFF)
    {
      unint64_t v31 = v29[1];
      *unint64_t v28 = v30;
      v28[1] = v31;
      swift_release();
      goto LABEL_30;
    }
    swift_release();
  }
  *(_OWORD *)unint64_t v28 = *(_OWORD *)v29;
LABEL_30:
  unint64_t v33 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  v34 = (unint64_t *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v35 = *v34;
  if (*v33 < 0xFFFFFFFFuLL)
  {
    if (v35 >= 0xFFFFFFFF)
    {
      unint64_t v37 = v34[1];
      *unint64_t v33 = v35;
      v33[1] = v37;
      return a1;
    }
LABEL_36:
    *(_OWORD *)unint64_t v33 = *(_OWORD *)v34;
    return a1;
  }
  if (v35 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_36;
  }
  unint64_t v36 = v34[1];
  *unint64_t v33 = v35;
  v33[1] = v36;
  swift_release();
  return a1;
}

uint64_t sub_1000B5D10(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((((((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1000B5E8CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1000B5EA0(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((((((((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                *unint64_t v19 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                v19[1] = a2 - 1;
              }
            }
            else
            {
              unint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((((((((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v12 = v11 + 1;
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((((((((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v16 = v15;
  else {
    int v16 = 1;
  }
  if (((((((((((((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 55) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8)
       + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((((((((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1000B60BCLL);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_1000B60E4()
{
  sub_100007118(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1000B611C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_10000C300(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_1000B6170()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100012B44;
  v2[2] = v0 + 16;
  return _swift_task_switch(sub_1000B3B14, 0, 0);
}

uint64_t sub_1000B6218()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000117C8;
  v2[2] = v0 + 16;
  return _swift_task_switch(sub_1000B3C34, 0, 0);
}

uint64_t sub_1000B62C0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  sub_10000C300(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t ActionCondition.Result.failure.getter(uint64_t a1, uint64_t a2)
{
  if (a2 == 1) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = a1;
  }
  sub_10003DC88(a1, a2);
  return v2;
}

BOOL ActionCondition.Result.isTrue.getter(uint64_t a1, uint64_t a2)
{
  return a2 == 1;
}

uint64_t ActionCondition.Result.init(_:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t static ActionCondition.Result.failure(_:redactLog:)(uint64_t a1)
{
  return a1;
}

BOOL sub_1000B63D0(uint64_t a1, uint64_t a2)
{
  return _s9MusicCore15ActionConditionV6ResultO21__derived_enum_equalsySbAE_AEtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t ActionCondition.init(_:file:line:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t ActionCondition.init(_:_:redactLog:file:line:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t (*a6)()@<X5>, uint64_t (*a7)()@<X6>, uint64_t (*a8)()@<X7>, uint64_t (**a9)()@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(unsigned char *)(result + 48) = a5;
  *a9 = sub_1000B6764;
  a9[1] = (uint64_t (*)())result;
  a9[2] = a6;
  a9[3] = a7;
  a9[4] = a8;
  return result;
}

BOOL ActionCondition.isTrue.getter()
{
  uint64_t v1 = (*v0)();
  BOOL v3 = v2 == 1;
  sub_100018DAC(v1, v2);
  return v3;
}

uint64_t static ActionConditionEvaluator.buildBlock(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v12 = v2;
    uint64_t v13 = v1;
    while (1)
    {
      uint64_t v4 = *(void *)(v2 + 8 * v3);
      uint64_t v5 = *(void *)(v4 + 16);
      if (v5) {
        break;
      }
LABEL_3:
      if (++v3 == v1)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    swift_bridgeObjectRetain_n();
    uint64_t v6 = v4 + 56;
    while (1)
    {
      unsigned int v7 = *(uint64_t (**)(uint64_t))(v6 - 24);
      swift_retain();
      uint64_t v8 = swift_bridgeObjectRetain();
      uint64_t v1 = v7(v8);
      uint64_t v10 = v9;
      swift_bridgeObjectRelease();
      swift_release();
      if (v10 != 1) {
        break;
      }
      v6 += 40;
      if (!--v5)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v2 = v12;
        uint64_t v1 = v13;
        goto LABEL_3;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  return v1;
}

uint64_t static ActionConditionEvaluator.buildExpression(_:)(long long *a1)
{
  sub_100005BFC(&qword_100573E08);
  uint64_t v2 = swift_allocObject();
  long long v4 = *a1;
  long long v6 = a1[1];
  long long v3 = v6;
  *(_OWORD *)(v2 + 16) = xmmword_100466900;
  *(_OWORD *)(v2 + 32) = v4;
  *(_OWORD *)(v2 + 48) = v3;
  *(void *)(v2 + 64) = *((void *)a1 + 4);
  swift_retain();
  sub_100074F98((uint64_t)&v6);
  return v2;
}

BOOL _s9MusicCore15ActionConditionV6ResultO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a2 == 1) {
    return a5 == 1;
  }
  if (a5 == 1) {
    return 0;
  }
  if (a2)
  {
    if (a5)
    {
      if (a1 != a4 || a2 != a5)
      {
        char v9 = sub_1004626E0();
        char v10 = 0;
        if ((v9 & 1) == 0) {
          return v10 & 1;
        }
      }
      goto LABEL_14;
    }
  }
  else
  {
    if (!a5)
    {
LABEL_14:
      char v10 = ((a3 & 1) == 0) ^ a6;
      return v10 & 1;
    }
    sub_100018DAC(a1, 0);
  }
  char v10 = 0;
  return v10 & 1;
}

uint64_t sub_1000B6724()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1000B6764()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if ((*(uint64_t (**)(void))(v0 + 16))()) {
    return 0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t destroy for ActionCondition()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ActionCondition(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ActionCondition(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

__n128 initializeWithTake for ActionCondition(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ActionCondition(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionCondition(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionCondition(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionCondition()
{
  return &type metadata for ActionCondition;
}

unint64_t destroy for ActionCondition.Result(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9MusicCore15ActionConditionV6ResultOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if ((int)v4 - 1 < 0)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  }
  return a1;
}

uint64_t assignWithCopy for ActionCondition.Result(uint64_t a1, long long *a2)
{
  LODWORD(v4) = -1;
  if (*(void *)(a1 + 8) >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = *(void *)(a1 + 8);
  }
  int v6 = v5 - 1;
  if (*((void *)a2 + 1) < 0xFFFFFFFFuLL) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    long long v8 = *a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = v8;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for ActionCondition.Result(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = *(void *)(a2 + 8);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = *(void *)(a2 + 8);
    }
    if ((int)v7 - 1 < 0)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_9:
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionCondition.Result(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ActionCondition.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1000B6C40(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1000B6C64(uint64_t result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(void *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionCondition.Result()
{
  return &type metadata for ActionCondition.Result;
}

ValueMetadata *type metadata accessor for ActionConditionEvaluator()
{
  return &type metadata for ActionConditionEvaluator;
}

void *ActionDisplayConfiguration.image.getter()
{
  unint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

uint64_t ActionDisplayConfiguration.attributes.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t ActionDisplayConfiguration.init(title:subtitle:image:attributes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

void *ActionDisplayConfiguration.Attributes.disabled.unsafeMutableAddressor()
{
  return &static ActionDisplayConfiguration.Attributes.disabled;
}

void *ActionDisplayConfiguration.Attributes.destructive.unsafeMutableAddressor()
{
  return &static ActionDisplayConfiguration.Attributes.destructive;
}

void *ActionDisplayConfiguration.Attributes.hidden.unsafeMutableAddressor()
{
  return &static ActionDisplayConfiguration.Attributes.hidden;
}

unint64_t sub_1000B6D1C()
{
  unint64_t result = qword_100573E10;
  if (!qword_100573E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100573E10);
  }
  return result;
}

unint64_t sub_1000B6D74()
{
  unint64_t result = qword_100573E18;
  if (!qword_100573E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100573E18);
  }
  return result;
}

unint64_t sub_1000B6DCC()
{
  unint64_t result = qword_100573E20;
  if (!qword_100573E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100573E20);
  }
  return result;
}

unint64_t sub_1000B6E24()
{
  unint64_t result = qword_100573E28[0];
  if (!qword_100573E28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100573E28);
  }
  return result;
}

uint64_t sub_1000B6E78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10000F864();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void destroy for ActionDisplayConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for ActionDisplayConfiguration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  unint64_t v6 = (void *)a2[4];
  uint64_t v5 = a2[5];
  a1[4] = v6;
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v7 = v6;
  return a1;
}

void *assignWithCopy for ActionDisplayConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for ActionDisplayConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionDisplayConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionDisplayConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionDisplayConfiguration()
{
  return &type metadata for ActionDisplayConfiguration;
}

ValueMetadata *type metadata accessor for ActionDisplayConfiguration.Attributes()
{
  return &type metadata for ActionDisplayConfiguration.Attributes;
}

uint64_t ActionList.init(_:lookup:resolver:excluding:)(uint64_t isUniquelyReferenced_nonNull_native, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = isUniquelyReferenced_nonNull_native;
  int64_t v4 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
  uint64_t v5 = _swiftEmptyArrayStorage;
  if (v4)
  {
    uint64_t v28 = a2;
    unint64_t v31 = _swiftEmptyArrayStorage;
    sub_1000A020C(0, v4, 0);
    uint64_t v6 = v3 + 32;
    do
    {
      sub_100007168(v6, (uint64_t)v30);
      sub_100007168((uint64_t)v30, (uint64_t)v29);
      sub_100005BFC(&qword_100573CA8);
      uint64_t v7 = sub_100460D40();
      char v9 = String.components(wrappedToLineLength:bullet:)(80, 62, 0xE100000000000000, v7, v8);
      swift_bridgeObjectRelease();
      sub_100007118((uint64_t)v30);
      uint64_t v5 = v31;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_1000A020C(0, v5[2] + 1, 1);
        uint64_t v5 = v31;
      }
      unint64_t v11 = v5[2];
      unint64_t v10 = v5[3];
      if (v11 >= v10 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_1000A020C((void *)(v10 > 1), v11 + 1, 1);
        uint64_t v5 = v31;
      }
      v5[2] = v11 + 1;
      v5[v11 + 4] = v9;
      v6 += 32;
      --v4;
    }
    while (v4);
    uint64_t v12 = a3;
    a2 = v28;
  }
  else
  {
    uint64_t v12 = a3;
  }
  v30[0] = v5;
  v29[0] = a2;
  __chkstk_darwin(isUniquelyReferenced_nonNull_native);
  type metadata accessor for ActionLookup.Group();
  sub_1004611C0();
  type metadata accessor for ActionGroup();
  swift_getWitnessTable();
  uint64_t v13 = sub_100460F70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = swift_bridgeObjectRetain();
  int v15 = Array<A>.asciiBoxed()(v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = *((void *)v15 + 2);
  if (v16)
  {
    uint64_t v26 = v13;
    uint64_t v17 = qword_100570740;
    swift_bridgeObjectRetain();
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_10045D310();
    unint64_t v19 = (unint64_t *)(v15 + 40);
    do
    {
      uint64_t v20 = *(v19 - 1);
      unint64_t v21 = *v19;
      sub_100009688(v18, (uint64_t)static Logger.actions);
      swift_bridgeObjectRetain_n();
      unint64_t v22 = sub_10045D2F0();
      os_log_type_t v23 = sub_100461770();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        unint64_t v31 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 136446210;
        swift_bridgeObjectRetain();
        *(void *)(v24 + 4) = sub_10001FCAC(v20, v21, (uint64_t *)&v31);
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "%{public}s", (uint8_t *)v24, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v19 += 2;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t v13 = v26;
    uint64_t v12 = a3;
  }
  swift_bridgeObjectRelease();
  sub_100007118(v12);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1000B7540@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v16 = _swiftEmptyArrayStorage;
  sub_10002FA38(a3, (uint64_t)v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1000B7674(v8, a2, (uint64_t)v15);
  unint64_t v10 = v16;
  unint64_t v11 = (void *)*a4;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a4 = (uint64_t)v11;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100051690(0, v11[2] + 1, 1, v11);
    unint64_t v11 = (void *)result;
    *a4 = result;
  }
  unint64_t v14 = v11[2];
  unint64_t v13 = v11[3];
  if (v14 >= v13 >> 1)
  {
    uint64_t result = (uint64_t)sub_100051690((void *)(v13 > 1), v14 + 1, 1, v11);
    unint64_t v11 = (void *)result;
    *a4 = result;
  }
  v11[2] = v14 + 1;
  v11[v14 + 4] = v10;
  *a5 = v9;
  return result;
}

uint64_t sub_1000B7674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1004611C0();
  type metadata accessor for AnyAction();
  swift_getWitnessTable();
  uint64_t v4 = sub_100460F70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_100461160();
  sub_100007118(a3);
  if (v5 < 1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t sub_1000B7794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = a8;
  uint64_t v14 = *(void *)(a6 - 8);
  __chkstk_darwin(a1);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v18, v17))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall != 1) {
      goto LABEL_9;
    }
    uint64_t v31 = 0;
    uint64_t v32 = 0xE000000000000000;
    sub_100462120(32);
    uint64_t v19 = sub_100040820();
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v31 = v19;
    uint64_t v32 = v21;
    v22._countAndFlagsBits = 0xD00000000000001ELL;
    v22._object = (void *)0x800000010048F9C0;
LABEL_8:
    sub_100460E50(v22);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v31, v32, 80, 120, 0xE100000000000000);
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v26 = type metadata accessor for AnyAction();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v30, 1, 1, v26);
  }
  uint64_t v31 = a3;
  sub_1004611C0();
  swift_getWitnessTable();
  if (sub_100461020())
  {
    uint64_t v31 = 0;
    uint64_t v32 = 0xE000000000000000;
    sub_100462120(24);
    uint64_t v23 = sub_100040820();
    uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t v31 = v23;
    uint64_t v32 = v25;
    v22._object = (void *)0x800000010048F9E0;
    v22._countAndFlagsBits = 0xD000000000000016;
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, a6);
  sub_10002FA38(a5, (uint64_t)&v31);
  swift_bridgeObjectRetain();
  return AnyAction.init(identifier:contexts:resolver:logs:)((uint64_t)v16, a4, &v31, v29, a6, a7, v30);
}

uint64_t (*sub_1000B7A94(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = a3 + 16 * a2;
    uint64_t v5 = *(void *)(v4 + 40);
    *(void *)uint64_t v3 = *(void *)(v4 + 32);
    *((void *)v3 + 1) = v5;
    swift_bridgeObjectRetain();
    return destroy for ActionError;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B7AFC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000B7540(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), *(uint64_t **)(v2 + 56), a2);
}

uint64_t type metadata accessor for ActionGroup()
{
  return sub_100041DA8();
}

uint64_t type metadata accessor for ActionList()
{
  return sub_100041DA8();
}

uint64_t (*sub_1000B7B50(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_100462170();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return destroy for PresentationKind.NowPlayingDestination;
  }
  __break(1u);
  return result;
}

uint64_t destroy for PresentationKind.NowPlayingDestination()
{
  return swift_release();
}

void (*sub_1000B7BD8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_100462170();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for BagProvider.Result;
  }
  __break(1u);
  return result;
}

void destroy for BagProvider.Result(id *a1)
{
}

uint64_t (*sub_1000B7C60(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_100462170();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_1000B7CE0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000B7CE0()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1000B7CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000B7794(a1, v2[4], v2[5], v2[6], v2[7], v2[2], v2[3], a2);
}

uint64_t ActionType.isHidden.getter(char a1)
{
  char v1 = 0;
  switch(a1)
  {
    case 16:
    case 21:
      unint64_t v3 = sub_1000B7EF0();
      uint64_t v4 = &type metadata for Feature.Music;
      goto LABEL_5;
    case 31:
    case 32:
      unint64_t v3 = sub_1000B7E9C();
      uint64_t v4 = &type metadata for Feature.MediaPlayer;
LABEL_5:
      char v1 = FeatureFlagsKey.isEnabled.getter((uint64_t)v4, v3) ^ 1;
      break;
    default:
      return v1 & 1;
  }
  return v1 & 1;
}

unint64_t sub_1000B7E9C()
{
  unint64_t result = qword_100573F30;
  if (!qword_100573F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100573F30);
  }
  return result;
}

unint64_t sub_1000B7EF0()
{
  unint64_t result = qword_100573F38;
  if (!qword_100573F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100573F38);
  }
  return result;
}

void *static ActionType.modelActionLookup.getter()
{
  sub_100005BFC(&qword_100572A78);
  uint64_t v0 = swift_allocObject();
  long long v20 = xmmword_100466900;
  *(_OWORD *)(v0 + 16) = xmmword_100466900;
  uint64_t v19 = v0;
  *(void *)(v0 + 32) = &off_100522D20;
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100466900;
  uint64_t v18 = v1;
  *(void *)(v1 + 32) = &off_100522D48;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100466900;
  *(void *)(v2 + 32) = &off_100522D70;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100466900;
  *(void *)(v3 + 32) = &off_100522D98;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100466900;
  *(void *)(v4 + 32) = &off_100522DC0;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100466900;
  *(void *)(v5 + 32) = &off_100522DE8;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100466900;
  *(void *)(v6 + 32) = &off_100522E10;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100466900;
  *(void *)(v7 + 32) = &off_100522E38;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100466900;
  *(void *)(v8 + 32) = &off_100522E60;
  uint64_t v9 = (void *)swift_allocObject();
  *((_OWORD *)v9 + 1) = xmmword_100466900;
  v9[4] = &off_100522E88;
  if (qword_1005710B8 != -1) {
LABEL_25:
  }
    swift_once();
  if (static DeviceCapabilities.isInternalInstall == 1)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v20;
    *(void *)(inited + 32) = &off_100522EB0;
    sub_1000B94CC((void *)inited);
  }
  *(void *)&long long v20 = v22;
  v22[0] = v19;
  v22[1] = v18;
  v22[2] = v2;
  v22[3] = v3;
  v22[4] = v4;
  v22[5] = v5;
  v22[6] = v6;
  v22[7] = v7;
  v22[8] = v8;
  v22[9] = v9;
  uint64_t v6 = 32;
  v22[10] = _swiftEmptyArrayStorage;
  uint64_t v9 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v2 = *(void *)&v21[v6];
    uint64_t v3 = *(void *)(v2 + 16);
    uint64_t v4 = v9[2];
    uint64_t v5 = v4 + v3;
    if (__OFADD__(v4, v3))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v5 <= v9[3] >> 1)
    {
      if (!*(void *)(v2 + 16)) {
        goto LABEL_5;
      }
    }
    else
    {
      if (v4 <= v5) {
        int64_t v12 = v4 + v3;
      }
      else {
        int64_t v12 = v4;
      }
      uint64_t v9 = sub_1000517B4(isUniquelyReferenced_nonNull_native, v12, 1, v9);
      if (!*(void *)(v2 + 16))
      {
LABEL_5:
        if (v3) {
          goto LABEL_22;
        }
        goto LABEL_6;
      }
    }
    uint64_t v13 = v9[2];
    if ((v9[3] >> 1) - v13 < v3) {
      goto LABEL_23;
    }
    uint64_t v4 = (uint64_t)&v9[v13 + 4];
    uint64_t v5 = v2 + 32;
    sub_100005BFC(&qword_100572A80);
    swift_arrayInitWithCopy();
    if (v3)
    {
      uint64_t v14 = v9[2];
      BOOL v15 = __OFADD__(v14, v3);
      uint64_t v16 = v14 + v3;
      if (v15) {
        goto LABEL_24;
      }
      v9[2] = v16;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    v6 += 8;
  }
  while (v6 != 120);
  sub_100005BFC(&qword_100573F40);
  swift_arrayDestroy();
  return v9;
}

uint64_t static ActionLookupBuilder.buildExpression(_:)(uint64_t a1)
{
  type metadata accessor for ActionLookup.Group();
  sub_100462670();
  swift_allocObject();
  uint64_t v2 = sub_1004610D0();
  *uint64_t v3 = a1;
  uint64_t v4 = sub_10003F66C(v2);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t static ActionLookupBuilder.buildBlock<A>(_:)()
{
  return sub_1000B83D4();
}

{
  return sub_1000B83D4();
}

uint64_t static ActionLookupBuilder.buildOptional<A>(_:)(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
  }
  else
  {
    type metadata accessor for ActionLookup.Group();
    uint64_t v1 = sub_100461120();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1000B83D4()
{
  return sub_100460FF0();
}

uint64_t static ActionType.socialActionLookup.getter()
{
  sub_100005BFC(&qword_100572A78);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100466900;
  *(void *)(v1 + 32) = &off_100522ED8;
  int64_t v2 = v1 + 32;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100466900;
  *(void *)(v3 + 32) = &off_100522F00;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100466900;
  *(void *)(v4 + 32) = &off_100522F28;
  swift_bridgeObjectRetain();
  uint64_t result = (uint64_t)sub_1000517B4(0, 1, 1, _swiftEmptyArrayStorage);
  if (!*(void *)(v1 + 16)) {
    goto LABEL_37;
  }
  uint64_t v6 = (void *)result;
  if (*(void *)(result + 16) >= *(void *)(result + 24) >> 1)
  {
    __break(1u);
    goto LABEL_11;
  }
  sub_100005BFC(&qword_100572A80);
  swift_arrayInitWithCopy();
  ++v6[2];
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v3 + 16);
  int64_t v2 = v6[2];
  int64_t v0 = v2 + v1;
  if (__OFADD__(v2, v1))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v7 = v6[3];
  uint64_t result = swift_bridgeObjectRetain();
  if (v0 <= (uint64_t)(v7 >> 1))
  {
    if (v1) {
      goto LABEL_6;
    }
LABEL_16:
    if (v1)
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    int64_t v12 = *(void *)(v4 + 16);
    int64_t v13 = v6[2];
    int64_t v14 = v13 + v12;
    if (__OFADD__(v13, v12))
    {
      __break(1u);
    }
    else
    {
      unint64_t v15 = v6[3];
      uint64_t result = swift_bridgeObjectRetain();
      if (v14 <= (uint64_t)(v15 >> 1))
      {
        if (v12) {
          goto LABEL_20;
        }
LABEL_29:
        if (!v12) {
          goto LABEL_30;
        }
        goto LABEL_32;
      }
    }
    if (v13 <= v14) {
      int64_t v18 = v13 + v12;
    }
    else {
      int64_t v18 = v13;
    }
    uint64_t result = (uint64_t)sub_1000517B4((void *)1, v18, 1, v6);
    uint64_t v6 = (void *)result;
    int64_t v13 = *(void *)(result + 16);
    if (*(void *)(v4 + 16))
    {
LABEL_20:
      if ((v6[3] >> 1) - v13 >= v12)
      {
        sub_100005BFC(&qword_100572A80);
        uint64_t result = swift_arrayInitWithCopy();
        if (!v12)
        {
LABEL_30:
          swift_bridgeObjectRelease();
          sub_100005BFC(&qword_100573F40);
          swift_arrayDestroy();
          return (uint64_t)v6;
        }
        uint64_t v16 = v6[2];
        BOOL v9 = __OFADD__(v16, v12);
        uint64_t v17 = v16 + v12;
        if (!v9)
        {
          v6[2] = v17;
          goto LABEL_30;
        }
        goto LABEL_36;
      }
      goto LABEL_34;
    }
    goto LABEL_29;
  }
LABEL_12:
  if (v2 <= v0) {
    int64_t v11 = v0;
  }
  else {
    int64_t v11 = v2;
  }
  uint64_t result = (uint64_t)sub_1000517B4((void *)1, v11, 1, v6);
  uint64_t v6 = (void *)result;
  int64_t v2 = *(void *)(result + 16);
  if (!*(void *)(v3 + 16)) {
    goto LABEL_16;
  }
LABEL_6:
  if ((v6[3] >> 1) - v2 < v1)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  sub_100005BFC(&qword_100572A80);
  uint64_t result = swift_arrayInitWithCopy();
  if (!v1) {
    goto LABEL_17;
  }
  uint64_t v8 = v6[2];
  BOOL v9 = __OFADD__(v8, v1);
  uint64_t v10 = v8 + v1;
  if (!v9)
  {
    v6[2] = v10;
    goto LABEL_17;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t ActionType.rawValue.getter(char a1)
{
  uint64_t result = 0x62694C6F54646461;
  switch(a1)
  {
    case 1:
      uint64_t result = 0xD000000000000012;
      break;
    case 2:
      uint64_t result = 0x616C506F54646461;
      break;
    case 3:
      uint64_t result = 0xD000000000000013;
      break;
    case 4:
      unsigned int v3 = 2003789939;
      goto LABEL_35;
    case 5:
      uint64_t result = 0x7453657461657263;
      break;
    case 6:
      uint64_t result = 0xD000000000000014;
      break;
    case 7:
      uint64_t result = 0x726F62616C6C6F63;
      break;
    case 8:
    case 24:
    case 27:
    case 45:
      uint64_t result = 0xD000000000000011;
      break;
    case 9:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    case 10:
      uint64_t result = 0x657469726F766166;
      break;
    case 11:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 12:
      uint64_t result = 0x79616C506F546F67;
      break;
    case 13:
      uint64_t result = 0x697472416F546F67;
      break;
    case 14:
      uint64_t result = 0x75626C416F546F67;
      break;
    case 15:
      uint64_t result = 0x6D6F724665646968;
      break;
    case 16:
      uint64_t result = 0x6F546E657473696CLL;
      break;
    case 17:
      uint64_t result = 0xD000000000000013;
      break;
    case 18:
      uint64_t result = 0x6C436E496E65706FLL;
      break;
    case 19:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 20:
      uint64_t result = 2036427888;
      break;
    case 21:
      uint64_t result = 0x6F5479616C70;
      break;
    case 22:
      uint64_t result = 0x7473696C79616C70;
      break;
    case 23:
      uint64_t result = 0xD000000000000015;
      break;
    case 25:
      uint64_t result = 0xD000000000000012;
      break;
    case 26:
      uint64_t result = 0xD000000000000017;
      break;
    case 28:
      uint64_t result = 0xD000000000000015;
      break;
    case 29:
      uint64_t result = 0x7473614C79616C70;
      break;
    case 30:
      uint64_t result = 0x7478654E79616C70;
      break;
    case 31:
      uint64_t result = 0x6574664179616C70;
      break;
    case 32:
      uint64_t result = 0x6575516F54646461;
      break;
    case 33:
      uint64_t result = 0xD000000000000010;
      break;
    case 34:
      uint64_t result = 0x766F4D6575657571;
      break;
    case 35:
      unsigned int v3 = 1702125938;
LABEL_35:
      uint64_t result = v3 | 0x676E6F5300000000;
      break;
    case 36:
      uint64_t result = 0x65766F6D6572;
      break;
    case 37:
      uint64_t result = 0x6F4465766F6D6572;
      break;
    case 38:
      uint64_t result = 0xD000000000000012;
      break;
    case 39:
      uint64_t result = 0x6572616873;
      break;
    case 40:
      uint64_t result = 0x72794C6572616873;
      break;
    case 41:
      uint64_t result = 0x72506E4F776F6873;
      break;
    case 42:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 43:
      uint64_t result = 0x6C426C6169636F73;
      break;
    case 44:
      uint64_t result = 0xD000000000000013;
      break;
    case 46:
      uint64_t result = 0x6F466C6169636F73;
      break;
    case 47:
      uint64_t result = 0xD000000000000013;
      break;
    case 48:
    case 49:
      uint64_t result = 0x6E556C6169636F73;
      break;
    case 50:
      uint64_t result = 1953656691;
      break;
    case 51:
      uint64_t result = 0x4C74736567677573;
      break;
    case 52:
      uint64_t result = 0x6F7661466F646E75;
      break;
    case 53:
      uint64_t result = 0x676775536F646E75;
      break;
    case 54:
      uint64_t result = 0x6C6C754677656976;
      break;
    default:
      return result;
  }
  return result;
}

_UNKNOWN **static ActionType.allCases.getter()
{
  return &off_100523498;
}

uint64_t sub_1000B8E94(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = ActionType.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == ActionType.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1004626E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1000B8F20()
{
  char v1 = *v0;
  sub_1004628B0();
  ActionType.rawValue.getter(v1);
  sub_100460DA0();
  swift_bridgeObjectRelease();
  return sub_100462900();
}

uint64_t sub_1000B8F84()
{
  ActionType.rawValue.getter(*v0);
  sub_100460DA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000B8FD8()
{
  char v1 = *v0;
  sub_1004628B0();
  ActionType.rawValue.getter(v1);
  sub_100460DA0();
  swift_bridgeObjectRelease();
  return sub_100462900();
}

uint64_t sub_1000B9038@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s9MusicCore10ActionTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1000B9068@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ActionType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000B9094()
{
  return ActionType.isHidden.getter(*v0);
}

void sub_1000B909C(void *a1@<X8>)
{
  *a1 = &off_100523498;
}

uint64_t sub_1000B90AC()
{
  return ActionType.rawValue.getter(*v0);
}

size_t sub_1000B90B4(size_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  size_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = sub_100050D68(result, v11, 1, v3);
  uint64_t v3 = (void *)result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = (v3[3] >> 1) - v3[2];
  uint64_t result = sub_100005BFC(&qword_100571720);
  if (v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = v3[2];
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    v3[2] = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void *sub_1000B91E0(void *result)
{
  uint64_t v2 = result[2];
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  size_t v6 = result;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (v6[2]) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = sub_100051414(result, v10, 1, v3);
  uint64_t v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_100005BFC(&qword_100572A90);
  uint64_t result = (void *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = v3[2];
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void *sub_1000B92E0(void *result)
{
  uint64_t v2 = result[2];
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  size_t v6 = result;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (v6[2]) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = sub_10005167C(result, v10, 1, v3);
  uint64_t v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_100005BFC(&qword_1005772E0);
  uint64_t result = (void *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = v3[2];
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1000B93E0(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = (uint64_t)sub_1000511A8((char *)result, v10, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((*(void *)(v3 + 24) >> 1) - *(void *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = *(void *)(v3 + 16);
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    *(void *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void *sub_1000B94CC(void *result)
{
  uint64_t v2 = result[2];
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (v6[2]) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v10 = v4 + v2;
  }
  else {
    int64_t v10 = v4;
  }
  uint64_t result = sub_1000517B4(result, v10, 1, v3);
  uint64_t v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_100005BFC(&qword_100572A80);
  uint64_t result = (void *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = (void *)swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v7 = v3[2];
  BOOL v8 = __OFADD__(v7, v2);
  uint64_t v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1000B95C8(unint64_t a1)
{
  return sub_1000B9948(a1, sub_100131D50);
}

size_t sub_1000B95E0(size_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  size_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = sub_100051168(result, v11, 1, v3);
  uint64_t v3 = (void *)result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = (v3[3] >> 1) - v3[2];
  uint64_t result = sub_10045BA10();
  if (v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = v3[2];
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    v3[2] = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1000B9708(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = result;
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v8 = *((void *)v3 + 3) >> 1, v8 < v5))
  {
    if (v4 <= v5) {
      int64_t v9 = v4 + v2;
    }
    else {
      int64_t v9 = v4;
    }
    uint64_t v3 = sub_1000511A8(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    int64_t v8 = *((void *)v3 + 3) >> 1;
  }
  uint64_t v10 = *((void *)v3 + 2);
  uint64_t v11 = v8 - v10;
  uint64_t result = sub_100131698(&v29, &v3[16 * v10 + 32], v8 - v10, v6);
  if (result < v2) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v12 = *((void *)v3 + 2);
    BOOL v13 = __OFADD__(v12, result);
    uint64_t v14 = v12 + result;
    if (v13)
    {
      __break(1u);
      goto LABEL_32;
    }
    *((void *)v3 + 2) = v14;
  }
  if (result != v11)
  {
LABEL_13:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
LABEL_16:
  if (!v30) {
    goto LABEL_13;
  }
  unint64_t v15 = v30 - 1;
  if (__OFSUB__(v30, 1)) {
    goto LABEL_34;
  }
  int64_t v16 = *((void *)v3 + 2);
  uint64_t v17 = v29;
  int64_t v18 = sub_1000B7A94((uint64_t (*)())v28, v30 - 1, v29);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  swift_bridgeObjectRetain();
  uint64_t result = ((uint64_t (*)(unsigned char *, void))v18)(v28, 0);
LABEL_20:
  while (1)
  {
    unint64_t v22 = *((void *)v3 + 3);
    int64_t v23 = v22 >> 1;
    int64_t v5 = v16 + 1;
    if ((uint64_t)(v22 >> 1) < v16 + 1) {
      break;
    }
    if (v16 < v23) {
      goto LABEL_22;
    }
LABEL_19:
    *((void *)v3 + 2) = v16;
  }
  uint64_t result = (uint64_t)sub_1000511A8((char *)(v22 > 1), v16 + 1, 1, v3);
  uint64_t v3 = (char *)result;
  int64_t v23 = *(void *)(result + 24) >> 1;
  if (v16 >= v23) {
    goto LABEL_19;
  }
LABEL_22:
  uint64_t v24 = &v3[16 * v16];
  *((void *)v24 + 4) = v21;
  *((void *)v24 + 5) = v20;
  if (!v15)
  {
LABEL_32:
    *((void *)v3 + 2) = v5;
    goto LABEL_13;
  }
  uint64_t v25 = v24 + 56;
  while (1)
  {
    BOOL v13 = __OFSUB__(v15--, 1);
    if (v13) {
      break;
    }
    uint64_t v26 = sub_1000B7A94((uint64_t (*)())v28, v15, v17);
    uint64_t v21 = *v27;
    uint64_t v20 = v27[1];
    swift_bridgeObjectRetain();
    uint64_t result = ((uint64_t (*)(unsigned char *, void))v26)(v28, 0);
    if (v23 == v5)
    {
      int64_t v16 = v23;
      *((void *)v3 + 2) = v23;
      goto LABEL_20;
    }
    *(v25 - 1) = v21;
    void *v25 = v20;
    ++v5;
    v25 += 2;
    if (!v15) {
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1000B9930(unint64_t a1)
{
  return sub_1000B9948(a1, sub_100131F10);
}

uint64_t sub_1000B9948(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1004623D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1004623D0();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100462180();
    swift_bridgeObjectRelease();
    *uint64_t v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_1004623D0();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_1004610C0();
}

uint64_t sub_1000B9B1C(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = (uint64_t)sub_100051F80((char *)result, v11, 1, (char *)v3);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = *(void *)(v3 + 16);
  if ((*(void *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = (uint64_t)memcpy((void *)(v3 + 32 * v7 + 32), (const void *)(v6 + 32), 32 * v2);
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = *(void *)(v3 + 16);
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    *(void *)(v3 + 16) = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1000B9C00(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1004623D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1004623D0();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_100462180();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1001320E0(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_1004623D0();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_1004610C0();
}

uint64_t type metadata accessor for ActionLookup.Group()
{
  return sub_100041DA8();
}

uint64_t _s9MusicCore10ActionTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_100462730();
  swift_bridgeObjectRelease();
  if (v0 >= 0x37) {
    return 55;
  }
  else {
    return v0;
  }
}

unint64_t sub_1000B9E3C()
{
  unint64_t result = qword_100573F48;
  if (!qword_100573F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100573F48);
  }
  return result;
}

unint64_t sub_1000B9E90(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1000B9EC0();
  unint64_t result = sub_1000B9F14();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1000B9EC0()
{
  unint64_t result = qword_100573F50;
  if (!qword_100573F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100573F50);
  }
  return result;
}

unint64_t sub_1000B9F14()
{
  unint64_t result = qword_100573F58;
  if (!qword_100573F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100573F58);
  }
  return result;
}

unint64_t sub_1000B9F6C()
{
  unint64_t result = qword_100573F60;
  if (!qword_100573F60)
  {
    sub_100005C9C(qword_100573F68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100573F60);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xCA) {
    goto LABEL_17;
  }
  if (a2 + 54 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 54) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 54;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 54;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 54;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x37;
  int v8 = v6 - 55;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 54 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 54) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xCA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xC9)
  {
    unsigned int v6 = ((a2 - 202) >> 8) + 1;
    *unint64_t result = a2 + 54;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000BA124);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 54;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionType()
{
  return &type metadata for ActionType;
}

uint64_t type metadata accessor for ActionLookup()
{
  return sub_100041DA8();
}

uint64_t type metadata accessor for ActionLookupBuilder()
{
  return sub_100041DA8();
}

void *sub_1000BA18C@<X0>(char a1@<W0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v82[0] = a1;
  if (ActionType.isHidden.getter(a1))
  {
    swift_bridgeObjectRelease();
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if ((static DeviceCapabilities.isInternalInstall & 1) == 0) {
      goto LABEL_17;
    }
    sub_100462120(32);
    uint64_t v10 = ActionType.rawValue.getter(a1);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    *(void *)v77 = v10;
    *(void *)&v77[8] = v12;
    v83._countAndFlagsBits = 0xD00000000000001ELL;
    v83._object = (void *)0x800000010048F9C0;
    sub_100460E50(v83);
    uint64_t v13 = v10;
    uint64_t v14 = v12;
LABEL_16:
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v13, v14, 80, 120, 0xE100000000000000);
    swift_bridgeObjectRelease();
LABEL_17:
    sub_100007118((uint64_t)a3);
    sub_1000B4D78(0, 1, 0, 0, 0);
    sub_10004CAE0(0);
    sub_10004CAE0(0);
    sub_10004CAE0(0);
    sub_10004CAE0(0);
    sub_1000C0F3C(v77);
    return (void *)sub_100019960((uint64_t)v77, a5, &qword_100574248);
  }
  *(void *)&long long v62 = a4;
  uint64_t v15 = a3[3];
  uint64_t v16 = a3[4];
  sub_10000C300(a3, v15);
  uint64_t v17 = *(uint64_t (**)(char *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v16 + 8);
  unint64_t v18 = sub_1000B9F14();
  uint64_t v19 = v17(v82, &type metadata for ActionType, v18, v15, v16);
  *(void *)&long long v65 = v20;
  if (!v19)
  {
    swift_bridgeObjectRelease();
    sub_100462120(22);
    uint64_t v29 = ActionType.rawValue.getter(a1);
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    *(void *)v77 = v29;
    *(void *)&v77[8] = v31;
    v32._countAndFlagsBits = 0xD000000000000014;
    unint64_t v33 = " - No implementation";
LABEL_15:
    v32._object = (void *)((unint64_t)(v33 - 32) | 0x8000000000000000);
    sub_100460E50(v32);
    uint64_t v14 = *(void *)&v77[8];
    uint64_t v13 = *(void *)v77;
    goto LABEL_16;
  }
  uint64_t v21 = *(void *)(a2 + 16);
  if (!v21)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    *(void *)v77 = 0;
    *(void *)&v77[8] = 0xE000000000000000;
    sub_100462120(24);
    uint64_t v34 = ActionType.rawValue.getter(v82[0]);
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();
    *(void *)v77 = v34;
    *(void *)&v77[8] = v36;
    v32._countAndFlagsBits = 0xD000000000000016;
    unint64_t v33 = " - No matching context";
    goto LABEL_15;
  }
  uint64_t v22 = v19;
  v59 = a3;
  uint64_t v60 = a5;
  *(void *)&long long v64 = *(void *)(v65 + 8);
  *(void *)&long long v61 = a2;
  uint64_t v23 = a2 + 32;
  *(void *)&long long v63 = v19 - 8;
  while (1)
  {
    sub_100007168(v23, (uint64_t)&v69);
    uint64_t v24 = sub_100461EA0();
    uint64_t v25 = *(void *)(v24 - 8);
    __chkstk_darwin(v24);
    unint64_t v27 = (char *)&v57 - v26;
    ((void (*)(long long *, uint64_t, void))v64)(&v69, v22, v65);
    uint64_t v28 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v27, 1, v22) != 1) {
      break;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    memset(v77, 0, 40);
    sub_100009790((uint64_t)v77, &qword_100573CB0);
    v23 += 32;
    if (!--v21)
    {
      swift_bridgeObjectRelease();
      a3 = v59;
      a5 = v60;
      goto LABEL_14;
    }
  }
  *(void *)&v77[24] = v22;
  *(void *)&v77[32] = v65;
  unint64_t v38 = sub_10002A270((uint64_t *)v77);
  (*(void (**)(uint64_t *, char *, uint64_t))(v28 + 32))(v38, v27, v22);
  swift_bridgeObjectRelease();
  sub_100017FD4((long long *)v77, (uint64_t)v76);
  sub_10002FA38((uint64_t)v76, (uint64_t)&v69);
  char v39 = v82[0];
  unint64_t result = sub_1000BA950(&v69, v82[0], v77);
  uint64_t v40 = v78;
  if ((void)v78)
  {
    uint64_t v41 = *((void *)&v78 + 1);
    uint64_t v42 = ((uint64_t (*)(void *))v78)(result);
    if (v43 != 1)
    {
      uint64_t v50 = v42;
      v51 = (void *)v43;
      if (v44)
      {
        sub_100018DAC(v42, v43);
        uint64_t v53 = *(void *)&v77[8];
        v54 = *(void **)&v77[16];
      }
      else
      {
        *(void *)&long long v69 = ActionType.rawValue.getter(v39);
        *((void *)&v69 + 1) = v52;
        v87._countAndFlagsBits = 10272;
        v87._object = (void *)0xE200000000000000;
        sub_100460E50(v87);
        uint64_t v53 = *(void *)&v77[8];
        v54 = *(void **)&v77[16];
        swift_bridgeObjectRetain();
        v88._countAndFlagsBits = v53;
        v88._object = v54;
        sub_100460E50(v88);
        swift_bridgeObjectRelease();
        v89._countAndFlagsBits = 539828265;
        v89._object = (void *)0xE400000000000000;
        sub_100460E50(v89);
        if (v51) {
          v55._countAndFlagsBits = v50;
        }
        else {
          v55._countAndFlagsBits = 0xD000000000000013;
        }
        if (v51) {
          v56 = v51;
        }
        else {
          v56 = (void *)0x800000010048F9A0;
        }
        v55._object = v56;
        sub_100460E50(v55);
        swift_bridgeObjectRelease();
        Array<A>.appendStringComponents(_:lineLength:bullet:)(v69, *((uint64_t *)&v69 + 1), 80, 120, 0xE100000000000000);
        swift_bridgeObjectRelease();
      }
      LOBYTE(v69) = v77[0];
      *((void *)&v69 + 1) = v53;
      v70 = v54;
      long long v71 = *(_OWORD *)&v77[24];
      long long v72 = *(_OWORD *)&v77[40];
      long long v73 = *(_OWORD *)&v77[56];
      *(void *)&long long v74 = *(void *)&v77[72];
      *((void *)&v74 + 1) = v40;
      *(void *)&v75[0] = v41;
      *(_OWORD *)((char *)v75 + 8) = v79;
      *(_OWORD *)((char *)&v75[1] + 8) = v80;
      *(_OWORD *)((char *)&v75[2] + 8) = v81;
      sub_1000C0E70(&v69);
      sub_100007118((uint64_t)v76);
      a3 = v59;
      a5 = v60;
      goto LABEL_17;
    }
    *(void *)&long long v69 = ActionType.rawValue.getter(v39);
    *((void *)&v69 + 1) = v45;
    v84._countAndFlagsBits = 10272;
    v84._object = (void *)0xE200000000000000;
    sub_100460E50(v84);
    uint64_t v46 = *(void *)&v77[8];
    id v47 = *(void **)&v77[16];
    swift_bridgeObjectRetain();
    v85._countAndFlagsBits = v46;
    v85._object = v47;
    sub_100460E50(v85);
    swift_bridgeObjectRelease();
    v86._countAndFlagsBits = 41;
    v86._object = (void *)0xE100000000000000;
    sub_100460E50(v86);
    Array<A>.appendStringComponents(_:lineLength:bullet:)(v69, *((uint64_t *)&v69 + 1), 80, 9673954, 0xA300000000000000);
    swift_bridgeObjectRelease();
    sub_100007118((uint64_t)v76);
    sub_1000B4D78(0, 1, 0, 0, 0);
    sub_10004CAE0(0);
    sub_10004CAE0(0);
    sub_10004CAE0(0);
    sub_10004CAE0(0);
    v67[1] = *(_OWORD *)&v77[32];
    v67[2] = *(_OWORD *)&v77[48];
    v67[3] = *(_OWORD *)&v77[64];
    v67[4] = v78;
    v67[5] = v79;
    v67[6] = v80;
    v67[7] = v81;
    long long v66 = *(_OWORD *)v77;
    v67[0] = *(_OWORD *)&v77[16];
    long long v65 = *(_OWORD *)((char *)v67 + 8);
    long long v64 = *(_OWORD *)((char *)&v67[1] + 8);
    long long v63 = *(_OWORD *)((char *)&v67[2] + 8);
    v68[6] = v79;
    v68[7] = v80;
    long long v62 = *(_OWORD *)((char *)&v67[3] + 8);
    v68[8] = v81;
    long long v61 = *(_OWORD *)((char *)&v67[4] + 8);
    v68[2] = *(_OWORD *)&v77[32];
    v68[3] = *(_OWORD *)&v77[48];
    v68[4] = *(_OWORD *)&v77[64];
    v68[5] = v78;
    long long v57 = *(_OWORD *)((char *)&v67[6] + 8);
    long long v58 = *(_OWORD *)((char *)&v67[5] + 8);
    uint64_t v48 = *((void *)&v81 + 1);
    v68[0] = *(_OWORD *)v77;
    v68[1] = *(_OWORD *)&v77[16];
    v49.location = (Swift::Int)v68;
    CFRange.init(_:)(v49);
    sub_100019960((uint64_t)v68, v60, &qword_100574248);
    sub_1000C059C(&v66);
    sub_100007118((uint64_t)v59);
    long long v69 = *(_OWORD *)v77;
    long long v71 = v65;
    long long v72 = v64;
    long long v73 = v63;
    long long v74 = v62;
    v75[0] = v61;
    v75[1] = v58;
    v75[2] = v57;
    v70 = *(void **)&v77[16];
    *(void *)&v75[3] = v48;
    return sub_1000C0E70(&v69);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1000BA950@<X0>(void *a1@<X0>, char a2@<W1>, _OWORD *a3@<X8>)
{
  sub_10000C300(a1, a1[3]);
  uint64_t DynamicType = swift_getDynamicType();
  uint64_t v5 = a1[4];
  *(void *)&long long v42 = DynamicType;
  *((void *)&v42 + 1) = v5;
  sub_100005BFC(&qword_100573DD8);
  uint64_t v6 = sub_100460D40();
  uint64_t v30 = v7;
  uint64_t v31 = v6;
  sub_10002FA38((uint64_t)a1, (uint64_t)&v42);
  sub_100005BFC(&qword_100573DE0);
  sub_100005BFC(&qword_100573DE8);
  if (swift_dynamicCast())
  {
    uint64_t v8 = *((void *)&v60 + 1);
    uint64_t v9 = v61;
    sub_10000C300(&v59, *((uint64_t *)&v60 + 1));
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v62, v8, v9);
    uint64_t v10 = v62[1];
    uint64_t v29 = v62[0];
    uint64_t v26 = v62[3];
    uint64_t v27 = v62[2];
    uint64_t v11 = v62[5];
    uint64_t v25 = v62[4];
    sub_100007118((uint64_t)&v59);
  }
  else
  {
    uint64_t v61 = 0;
    long long v59 = 0u;
    long long v60 = 0u;
    sub_100009790((uint64_t)&v59, &qword_100573DF0);
    uint64_t v29 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v25 = 0;
    uint64_t v11 = 0;
    uint64_t v10 = 1;
  }
  sub_1000B4D78(0, 1, 0, 0, 0);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_10000C300(a1, v12);
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
  sub_10002FA38((uint64_t)a1, (uint64_t)&v42);
  uint64_t v23 = swift_allocObject();
  sub_100017FD4(&v42, v23 + 16);
  sub_10004CAE0(0);
  sub_10002FA38((uint64_t)a1, (uint64_t)&v42);
  uint64_t v22 = swift_allocObject();
  sub_100017FD4(&v42, v22 + 16);
  sub_10004CAE0(0);
  sub_10002FA38((uint64_t)a1, (uint64_t)&v42);
  uint64_t v21 = swift_allocObject();
  sub_100017FD4(&v42, v21 + 16);
  sub_10004CAE0(0);
  sub_10002FA38((uint64_t)a1, (uint64_t)&v42);
  uint64_t v14 = swift_allocObject();
  sub_100017FD4(&v42, v14 + 16);
  sub_10004CAE0(0);
  LOBYTE(v33) = a2;
  *((void *)&v33 + 1) = v31;
  *(void *)&long long v34 = v30;
  *((void *)&v34 + 1) = v29;
  *(void *)&long long v35 = v10;
  *((void *)&v35 + 1) = v27;
  *(void *)&long long v36 = v26;
  *((void *)&v36 + 1) = v25;
  *(void *)&long long v37 = v11;
  *((void *)&v37 + 1) = v24;
  *(void *)&long long v38 = sub_1000C0F90;
  *((void *)&v38 + 1) = v23;
  *(void *)&long long v39 = &unk_100573DF8;
  *((void *)&v39 + 1) = v22;
  *(void *)&long long v40 = &unk_100573E00;
  *((void *)&v40 + 1) = v21;
  *(void *)&long long v41 = sub_1000C10C0;
  *((void *)&v41 + 1) = v14;
  long long v15 = v34;
  *a3 = v33;
  a3[1] = v15;
  long long v16 = v41;
  long long v17 = v39;
  a3[7] = v40;
  a3[8] = v16;
  long long v18 = v37;
  a3[5] = v38;
  a3[6] = v17;
  long long v19 = v35;
  a3[3] = v36;
  a3[4] = v18;
  a3[2] = v19;
  sub_1000C059C(&v33);
  sub_100007118((uint64_t)a1);
  LOBYTE(v42) = a2;
  *((void *)&v42 + 1) = v31;
  uint64_t v43 = v30;
  uint64_t v44 = v29;
  uint64_t v45 = v10;
  uint64_t v46 = v27;
  uint64_t v47 = v26;
  uint64_t v48 = v25;
  uint64_t v49 = v11;
  uint64_t v50 = v24;
  v51 = sub_1000C0F90;
  uint64_t v52 = v23;
  uint64_t v53 = &unk_100573DF8;
  uint64_t v54 = v22;
  Swift::String v55 = &unk_100573E00;
  uint64_t v56 = v21;
  long long v57 = sub_1000C10C0;
  uint64_t v58 = v14;
  return sub_1000C0E70(&v42);
}

uint64_t sub_1000BAD20()
{
  v1[3] = v0;
  sub_100461280();
  v1[4] = sub_100461270();
  uint64_t v3 = sub_100461200();
  v1[5] = v3;
  v1[6] = v2;
  return _swift_task_switch(sub_1000BADB8, v3, v2);
}

void sub_1000BADB8()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(uint64_t (**)(void))(v0[3] + 80);
  if (!v1)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v2 = v1();
  uint64_t v4 = v3;
  sub_100018DAC(v2, v3);
  if (v4 == 1)
  {
    uint64_t v5 = *(int **)(v0[3] + 96);
    if (v5)
    {
      uint64_t v27 = (void (*)(void))((char *)v5 + *v5);
      uint64_t v6 = (void *)swift_task_alloc();
      v0[7] = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_1000BB1CC;
      v27();
      return;
    }
LABEL_19:
    __break(1u);
    return;
  }
  uint64_t v7 = swift_release();
  uint64_t v8 = ((uint64_t (*)(uint64_t))v1)(v7);
  if (v9 == 1)
  {
    sub_100005BFC(&qword_100574270);
    sub_10003F604(&qword_100574278, &qword_100574270);
    uint64_t v10 = swift_allocError();
    *uint64_t v11 = 0;
    v11[1] = 0;
  }
  else
  {
    uint64_t v12 = v8;
    uint64_t v13 = v9;
    sub_100005BFC(&qword_100574270);
    sub_10003F604(&qword_100574278, &qword_100574270);
    uint64_t v10 = swift_allocError();
    *uint64_t v14 = v12;
    v14[1] = v13;
  }
  swift_willThrow();
  if (qword_100570740 != -1) {
    swift_once();
  }
  long long v15 = (void *)v0[3];
  uint64_t v16 = sub_10045D310();
  sub_100009688(v16, (uint64_t)static Logger.actions);
  sub_1000C059C(v15);
  swift_errorRetain();
  sub_1000C059C(v15);
  swift_errorRetain();
  long long v17 = sub_10045D2F0();
  os_log_type_t v18 = sub_100461750();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v20 = (char *)v0[3];
  if (v19)
  {
    uint64_t v21 = swift_slowAlloc();
    v28[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136446466;
    uint64_t v22 = ActionType.rawValue.getter(*v20);
    *(void *)(v21 + 4) = sub_10001FCAC(v22, v23, v28);
    swift_bridgeObjectRelease();
    sub_1000C0E70(v20);
    sub_1000C0E70(v20);
    *(_WORD *)(v21 + 12) = 2082;
    v0[2] = v10;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v24 = sub_100460D40();
    *(void *)(v21 + 14) = sub_10001FCAC(v24, v25, v28);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000C0E70((void *)v0[3]);
    sub_1000C0E70(v20);
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  uint64_t v26 = (void (*)(void))v0[1];
  v26();
}

uint64_t sub_1000BB1CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_1000BB51C;
  }
  else {
    uint64_t v5 = sub_1000BB308;
  }
  return _swift_task_switch(v5, v4, v3);
}

void sub_1000BB308()
{
  uint64_t v1 = *(int **)(*(void *)(v0 + 24) + 112);
  if (v1)
  {
    uint64_t v3 = (void (*)(void))((char *)v1 + *v1);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1000BB3E0;
    v3();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000BB3E0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_1000BB7FC;
  }
  else {
    uint64_t v5 = sub_1000BB77C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000BB51C()
{
  uint64_t v16 = v0;
  swift_release();
  uint64_t v1 = v0[8];
  if (qword_100570740 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[3];
  uint64_t v3 = sub_10045D310();
  sub_100009688(v3, (uint64_t)static Logger.actions);
  sub_1000C059C(v2);
  swift_errorRetain();
  sub_1000C059C(v2);
  swift_errorRetain();
  uint64_t v4 = sub_10045D2F0();
  os_log_type_t v5 = sub_100461750();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (char *)v0[3];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v9 = ActionType.rawValue.getter(*v7);
    *(void *)(v8 + 4) = sub_10001FCAC(v9, v10, v15);
    swift_bridgeObjectRelease();
    sub_1000C0E70(v7);
    sub_1000C0E70(v7);
    *(_WORD *)(v8 + 12) = 2082;
    v0[2] = v1;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v11 = sub_100460D40();
    *(void *)(v8 + 14) = sub_10001FCAC(v11, v12, v15);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000C0E70((void *)v0[3]);
    sub_1000C0E70(v7);
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1000BB77C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t result = swift_release();
  uint64_t v3 = *(void (**)(uint64_t))(v1 + 128);
  if (v3)
  {
    v3(result);
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000BB7FC()
{
  uint64_t v16 = v0;
  swift_release();
  uint64_t v1 = v0[10];
  if (qword_100570740 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[3];
  uint64_t v3 = sub_10045D310();
  sub_100009688(v3, (uint64_t)static Logger.actions);
  sub_1000C059C(v2);
  swift_errorRetain();
  sub_1000C059C(v2);
  swift_errorRetain();
  uint64_t v4 = sub_10045D2F0();
  os_log_type_t v5 = sub_100461750();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (char *)v0[3];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v9 = ActionType.rawValue.getter(*v7);
    *(void *)(v8 + 4) = sub_10001FCAC(v9, v10, v15);
    swift_bridgeObjectRelease();
    sub_1000C0E70(v7);
    sub_1000C0E70(v7);
    *(_WORD *)(v8 + 12) = 2082;
    v0[2] = v1;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v11 = sub_100460D40();
    *(void *)(v8 + 14) = sub_10001FCAC(v11, v12, v15);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to perform action %{public}s with error %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000C0E70((void *)v0[3]);
    sub_1000C0E70(v7);
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t property wrapper backing initializer of Actionable.contexts()
{
  sub_100005BFC(&qword_1005740F0);
  sub_10045F470();
  return v1;
}

uint64_t sub_1000BBA9C()
{
  sub_100005BFC(&qword_1005742A8);
  sub_10045F480();
  return v1;
}

uint64_t sub_1000BBAE4()
{
  return sub_10045F490();
}

uint64_t sub_1000BBB30()
{
  sub_100005BFC(&qword_1005742B0);
  sub_10045F5E0();
  return v1;
}

uint64_t Actionable.init(lookup:excluding:resolver:preview:propertyLoader:hasLoadedModelProperties:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, char *a8@<X8>, uint64_t a9, unsigned __int8 a10, uint64_t a11)
{
  uint64_t v30 = a6;
  uint64_t v31 = a7;
  uint64_t v29 = a5;
  int v28 = a10;
  uint64_t v16 = *(void *)(a11 - 8);
  uint64_t v27 = a9;
  __chkstk_darwin(a1);
  os_log_type_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v32 = _swiftEmptyArrayStorage;
  sub_100005BFC(&qword_1005740F0);
  sub_10045F470();
  uint64_t v19 = v34;
  *(void *)a8 = v33;
  *((void *)a8 + 1) = v19;
  *((void *)a8 + 2) = a1;
  *((void *)a8 + 3) = a2;
  uint64_t v20 = sub_10002FA38(a3, (uint64_t)(a8 + 32));
  a4(v20);
  sub_100007118(a3);
  uint64_t v21 = (int *)type metadata accessor for Actionable();
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(&a8[v21[12]], v18, a11);
  unint64_t v23 = &a8[v21[13]];
  uint64_t v24 = v30;
  *(void *)unint64_t v23 = v29;
  *((void *)v23 + 1) = v24;
  unint64_t v25 = &a8[v21[14]];
  uint64_t v26 = v27;
  *(void *)unint64_t v25 = v31;
  *((void *)v25 + 1) = v26;
  v25[16] = v28;
  return result;
}

uint64_t type metadata accessor for Actionable()
{
  return sub_100041DA8();
}

uint64_t Actionable.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v27 = a1;
  uint64_t v28 = a3;
  swift_getWitnessTable();
  uint64_t v6 = sub_10045E780();
  uint64_t v7 = sub_100005C9C(&qword_1005740F8);
  unint64_t v8 = *(void *)(a2 + 16);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v35 = sub_100005C9C(&qword_100574100);
  long long v36 = &type metadata for Bool;
  unint64_t v37 = sub_1000BC008();
  long long v38 = &protocol witness table for Bool;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v35 = v6;
  long long v36 = (void *)v7;
  unint64_t v37 = v8;
  long long v38 = (void *)WitnessTable;
  uint64_t v39 = OpaqueTypeConformance2;
  uint64_t v40 = v10;
  uint64_t v24 = OpaqueTypeConformance2;
  uint64_t v26 = &opaque type descriptor for <<opaque return type of View.contextMenu<A, B>(menuItems:preview:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v12 = *(void *)(OpaqueTypeMetadata2 - 8);
  uint64_t v13 = __chkstk_darwin(OpaqueTypeMetadata2);
  long long v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v23 - v16;
  unint64_t v32 = v8;
  uint64_t v33 = v10;
  uint64_t v34 = v4;
  unint64_t v29 = v8;
  uint64_t v30 = v10;
  uint64_t v31 = v4;
  uint64_t v18 = swift_checkMetadataState();
  uint64_t v19 = (void *)WitnessTable;
  sub_10045EE60();
  uint64_t v35 = v18;
  long long v36 = (void *)v7;
  unint64_t v37 = v8;
  long long v38 = v19;
  uint64_t v39 = v24;
  uint64_t v40 = v10;
  uint64_t v20 = swift_getOpaqueTypeConformance2();
  sub_100046FEC(v15, OpaqueTypeMetadata2, v20);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v15, OpaqueTypeMetadata2);
  sub_100046FEC(v17, OpaqueTypeMetadata2, v20);
  return ((uint64_t (*)(char *, uint64_t))v21)(v17, OpaqueTypeMetadata2);
}

unint64_t sub_1000BC008()
{
  unint64_t result = qword_100574108;
  if (!qword_100574108)
  {
    sub_100005C9C(&qword_100574100);
    sub_1000BC0B4();
    sub_1000C053C(&qword_100574130, (void (*)(uint64_t))&type metadata accessor for _TaskModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574108);
  }
  return result;
}

unint64_t sub_1000BC0B4()
{
  unint64_t result = qword_100574110;
  if (!qword_100574110)
  {
    sub_100005C9C(&qword_100574118);
    sub_10003F604(&qword_100574120, &qword_100574128);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574110);
  }
  return result;
}

uint64_t sub_1000BC14C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Actionable();
  return sub_1000BC184(v2, a1);
}

uint64_t sub_1000BC184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v4 = sub_1004612C0();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v39 = (char *)&KeyPath - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&KeyPath - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_100005BFC(&qword_100574118);
  uint64_t v38 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v11 = (char *)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100005BFC(&qword_100574100);
  __chkstk_darwin(v54);
  uint64_t v44 = (char *)&KeyPath - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v2;
  uint64_t v56 = *(void *)(v2 + 16);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v47 = v7 + 16;
  uint64_t v53 = v13;
  v13(v9, v2, a1);
  uint64_t v14 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = ((v14 + 32) & ~v14) + v8;
  uint64_t v16 = (v14 + 32) & ~v14;
  uint64_t v50 = v16;
  uint64_t v51 = v14 | 7;
  uint64_t v52 = v15;
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = *(void *)(a1 + 24);
  uint64_t v48 = *(void *)(a1 + 16);
  uint64_t v49 = v18;
  *(void *)(v17 + 16) = v48;
  *(void *)(v17 + 24) = v18;
  uint64_t v19 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  uint64_t v45 = v7 + 32;
  uint64_t v46 = v19;
  v19(v17 + v16, v9, a1);
  swift_bridgeObjectRetain();
  sub_100005BFC(&qword_100573F40);
  sub_100005BFC(&qword_100574128);
  sub_10003F604(&qword_100574148, &qword_100573F40);
  sub_1000C038C(&qword_100574150, qword_100573F68, (void (*)(void))sub_1000B9F14);
  sub_10003F604(&qword_100574120, &qword_100574128);
  uint64_t v20 = v11;
  sub_10045F670();
  uint64_t v21 = v37;
  v53(v9, v37, a1);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v49;
  *(void *)(v22 + 16) = v48;
  *(void *)(v22 + 24) = v23;
  v46(v22 + v50, v9, a1);
  uint64_t v24 = v39;
  sub_100461290();
  unint64_t v25 = v44;
  uint64_t v26 = &v44[*(int *)(v54 + 36)];
  uint64_t v27 = sub_10045DBF0();
  uint64_t v29 = v41;
  uint64_t v28 = v42;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(&v26[*(int *)(v27 + 20)], v24, v42);
  *(void *)uint64_t v26 = &unk_100574298;
  *((void *)v26 + 1) = v22;
  uint64_t v30 = v38;
  uint64_t v31 = v40;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v25, v20, v40);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v28);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v31);
  char v55 = sub_1000BBB30() & 1;
  v53(v9, v21, a1);
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v49;
  *(void *)(v32 + 16) = v48;
  *(void *)(v32 + 24) = v33;
  v46(v32 + v50, v9, a1);
  sub_1000BC008();
  uint64_t v34 = (uint64_t)v44;
  sub_10045F190();
  swift_release();
  return sub_100009790(v34, &qword_100574100);
}

uint64_t sub_1000BC71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Actionable();
  sub_100046FEC(a1 + *(int *)(v9 + 48), a2, a3);
  sub_100046FEC(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_1000BC814()
{
  return sub_1000BC71C(v0[4], v0[2], v0[3]);
}

uint64_t sub_1000BC820@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v49 = a5;
  uint64_t v48 = sub_10045F660();
  uint64_t v46 = *(void *)(v48 - 8);
  uint64_t v8 = __chkstk_darwin(v48);
  uint64_t v47 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v52 = (char *)&v40 - v10;
  uint64_t v11 = type metadata accessor for Actionable();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v45 = sub_100005BFC(&qword_1005742B8);
  uint64_t v41 = *(void *)(v45 - 8);
  uint64_t v16 = v41;
  uint64_t v17 = __chkstk_darwin(v45);
  uint64_t v51 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v50 = (char *)&v40 - v19;
  uint64_t v20 = *a1;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = _swiftEmptyArrayStorage;
  uint64_t v53 = v20;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  unint64_t v22 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v23 = (v13 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v43;
  *(void *)(v24 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v24 + v22, v15, v11);
  uint64_t v44 = v21;
  *(void *)(v24 + v23) = v21;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100005BFC(qword_100573F68);
  sub_100005BFC(&qword_1005742C0);
  sub_10003F604(&qword_100574200, qword_100573F68);
  sub_1000B9F14();
  sub_1000C038C(&qword_1005742C8, &qword_1005742C0, (void (*)(void))sub_1000C04A4);
  unint64_t v25 = v50;
  sub_10045F670();
  uint64_t v26 = v52;
  sub_10045F650();
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v28 = v51;
  uint64_t v29 = v45;
  v27(v51, v25, v45);
  uint64_t v30 = v46;
  uint64_t v31 = v47;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  uint64_t v33 = v26;
  uint64_t v34 = v48;
  v32(v47, v33, v48);
  uint64_t v35 = v49;
  v27(v49, v28, v29);
  uint64_t v36 = sub_100005BFC(&qword_1005742D0);
  v32(&v35[*(int *)(v36 + 48)], v31, v34);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v30 + 8);
  v37(v52, v34);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v41 + 8);
  v38(v50, v29);
  v37(v31, v34);
  v38(v51, v29);
  return swift_release();
}

uint64_t sub_1000BCCE4@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  char v7 = *a1;
  uint64_t v8 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  char v9 = sub_1000DF19C(v7, v8);
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0
    || (uint64_t v10 = sub_1000BBA9C(),
        sub_10002FA38(a2 + 32, (uint64_t)v18),
        swift_beginAccess(),
        sub_1000BA18C(v7, v10, v18, a3 + 16, (uint64_t)v15),
        swift_endAccess(),
        sub_100019960((uint64_t)v15, (uint64_t)v16, &qword_100574248),
        sub_100019960((uint64_t)v16, (uint64_t)v17, &qword_100574248),
        sub_1000C0584((uint64_t)v17) == 1))
  {
    uint64_t v11 = sub_100005BFC(&qword_100574228);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a4, 1, 1, v11);
  }
  else
  {
    v18[6] = v17[6];
    v18[7] = v17[7];
    v18[8] = v17[8];
    v18[2] = v17[2];
    v18[3] = v17[3];
    v18[4] = v17[4];
    v18[5] = v17[5];
    v18[0] = v17[0];
    v18[1] = v17[1];
    sub_100019960((uint64_t)v16, (uint64_t)v14, &qword_100574248);
    sub_1000C059C(v14);
    sub_1000BCEB8(a4);
    sub_1000C0724((uint64_t)v16);
    sub_1000C0724((uint64_t)v16);
    uint64_t v13 = sub_100005BFC(&qword_100574228);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a4, 0, 1, v13);
  }
}

uint64_t sub_1000BCEB8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100005BFC(&qword_100572798);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100005BFC(&qword_100574138);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v15 = (void *)v1[4];
  if ((unint64_t)v15 >= 2)
  {
    uint64_t v16 = (void *)v1[7];
    if (v16)
    {
      uint64_t v37 = v12;
      uint64_t v17 = (uint64_t (*)(uint64_t))v1[10];
      if (!v17)
      {
        __break(1u);
        return result;
      }
      uint64_t v18 = (void *)v1[3];
      uint64_t v35 = (id *)v1[8];
      uint64_t v36 = v18;
      id v19 = v16;
      uint64_t v20 = swift_bridgeObjectRetain();
      uint64_t v21 = v17(v20);
      uint64_t v23 = v22;
      sub_100018DAC(v21, v22);
      if (v23 == 1)
      {
        uint64_t v24 = (_OWORD *)swift_allocObject();
        long long v25 = *((_OWORD *)v2 + 7);
        v24[7] = *((_OWORD *)v2 + 6);
        v24[8] = v25;
        v24[9] = *((_OWORD *)v2 + 8);
        long long v26 = *((_OWORD *)v2 + 3);
        v24[3] = *((_OWORD *)v2 + 2);
        v24[4] = v26;
        long long v27 = *((_OWORD *)v2 + 5);
        v24[5] = *((_OWORD *)v2 + 4);
        v24[6] = v27;
        long long v28 = *((_OWORD *)v2 + 1);
        v24[1] = *(_OWORD *)v2;
        v24[2] = v28;
        if ((v35 & 2) != 0)
        {
          sub_1000C059C(v2);
          sub_10045D810();
          uint64_t v32 = sub_10045D830();
          uint64_t v30 = (void *)(*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v6, 0, 1, v32);
        }
        else
        {
          uint64_t v29 = sub_10045D830();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v6, 1, 1, v29);
          uint64_t v30 = sub_1000C059C(v2);
        }
        id v34 = v19;
        uint64_t v35 = &v34;
        __chkstk_darwin(v30);
        *(&v34 - 4) = v36;
        *(&v34 - 3) = v15;
        *(&v34 - 2) = v19;
        sub_100005BFC(&qword_1005726F0);
        sub_10003F604(&qword_1005726E8, &qword_1005726F0);
        sub_10045F4C0();

        swift_bridgeObjectRelease();
        uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
        v33(v14, v10, v7);
        v33(a1, v14, v7);
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(a1, 0, 1, v7);
      }
      swift_bridgeObjectRelease();

      uint64_t v12 = v37;
    }
  }
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);

  return v31(a1, 1, 1, v7);
}

uint64_t AnyAction.button.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = sub_100005BFC(&qword_100572798);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100005BFC(&qword_100574138);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = *(void *)(a1 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v10);
  uint64_t v18 = (uint64_t *)(v2 + *(int *)(v17 + 48));
  unint64_t v19 = v18[1];
  uint64_t v20 = (void *)v18[4];
  if (v19 >= 2 && v20 != 0)
  {
    uint64_t v41 = a2;
    uint64_t v42 = v15;
    uint64_t v38 = *v18;
    uint64_t v39 = v16;
    uint64_t v37 = v18[5];
    id v40 = v20;
    swift_bridgeObjectRetain();
    uint64_t v24 = AnyAction.canPerform.getter(a1);
    uint64_t v26 = v25;
    sub_100018DAC(v24, v25);
    if (v26 == 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
      unint64_t v27 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = *(_OWORD *)(a1 + 16);
      (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v28 + v27, (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
      id v29 = v40;
      uint64_t v30 = v38;
      if ((v37 & 2) != 0)
      {
        sub_10045D810();
        uint64_t v33 = sub_10045D830();
        uint64_t v32 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v7, 0, 1, v33);
      }
      else
      {
        uint64_t v31 = sub_10045D830();
        uint64_t v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v7, 1, 1, v31);
      }
      __chkstk_darwin(v32);
      *(&v37 - 4) = v30;
      *(&v37 - 3) = v19;
      *(&v37 - 2) = (uint64_t)v29;
      sub_100005BFC(&qword_1005726F0);
      sub_10003F604(&qword_1005726E8, &qword_1005726F0);
      uint64_t v34 = v39;
      sub_10045F4C0();

      swift_bridgeObjectRelease();
      uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 32);
      v35(v12, v34, v8);
      uint64_t v36 = v41;
      v35(v41, (uint64_t)v12, v8);
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v36, 0, 1, v8);
    }
    swift_bridgeObjectRelease();

    a2 = v41;
    uint64_t v15 = v42;
  }
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);

  return v22(a2, 1, 1, v8);
}

uint64_t sub_1000BD70C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for Actionable();
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = *(void *)(v5 + 64);
  v3[8] = swift_task_alloc();
  sub_100461280();
  v3[9] = sub_100461270();
  uint64_t v7 = sub_100461200();
  return _swift_task_switch(sub_1000BD80C, v7, v6);
}

uint64_t sub_1000BD80C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 16);
  long long v10 = *(_OWORD *)(v0 + 24);
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t (*)(), uint64_t))(v4 + *(int *)(v3 + 52));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = v10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v7 + v6, v1, v3);
  v5(sub_1000C159C, v7);
  swift_release();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1000BD944(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for Actionable();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v17 - v12;
  if ((*a2 & 1) == 0)
  {
    uint64_t v14 = *(void (**)(uint64_t (*)(), uint64_t))(a3 + *(int *)(v9 + 52));
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a3, v9);
    unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a4;
    *(void *)(v16 + 24) = a5;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, v13, v9);
    v14(sub_1000C159C, v16);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000BDAB4(uint64_t a1)
{
  sub_100005BFC(&qword_1005742A0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100466900;
  sub_100007168(a1, v2 + 32);
  sub_100005BFC(&qword_1005742A8);
  return sub_10045F490();
}

uint64_t static Actionable.menuBuilder(lookup:excluding:contexts:resolver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a1;
  swift_getKeyPath();
  sub_10002FA38(a4, (uint64_t)v9);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  sub_100017FD4(v9, v7 + 24);
  *(void *)(v7 + 64) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100005BFC(&qword_100573F40);
  sub_100005BFC(&qword_100574140);
  sub_10003F604(&qword_100574148, &qword_100573F40);
  sub_1000C038C(&qword_100574150, qword_100573F68, (void (*)(void))sub_1000B9F14);
  sub_10003F604(qword_100574158, &qword_100574140);
  return sub_10045F670();
}

uint64_t sub_1000BDCE8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v45 = a5;
  uint64_t v9 = sub_10045F660();
  uint64_t v43 = *(void *)(v9 - 8);
  uint64_t v44 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v42 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v46 = (char *)&v35 - v12;
  uint64_t v41 = sub_100005BFC(&qword_1005741F0);
  uint64_t v38 = *(void *)(v41 - 8);
  uint64_t v13 = v38;
  uint64_t v14 = __chkstk_darwin(v41);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v35 - v17;
  uint64_t v19 = *a1;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = _swiftEmptyArrayStorage;
  uint64_t v40 = v20;
  uint64_t v48 = v19;
  uint64_t KeyPath = swift_getKeyPath();
  sub_10002FA38(a3, (uint64_t)v47);
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a2;
  sub_100017FD4(v47, (uint64_t)(v21 + 3));
  v21[8] = v20;
  v21[9] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100005BFC(qword_100573F68);
  sub_100005BFC(&qword_1005741F8);
  sub_10003F604(&qword_100574200, qword_100573F68);
  sub_1000B9F14();
  sub_1000C038C(&qword_100574208, &qword_1005741F8, (void (*)(void))sub_1000C03F8);
  uint64_t v22 = v18;
  uint64_t v37 = v18;
  sub_10045F670();
  uint64_t v23 = v46;
  sub_10045F650();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v36 = v16;
  uint64_t v25 = v41;
  v24(v16, v22, v41);
  unint64_t v27 = v42;
  uint64_t v26 = v43;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  uint64_t v29 = v44;
  v28(v42, v23, v44);
  uint64_t v30 = v45;
  v24(v45, v16, v25);
  uint64_t v31 = sub_100005BFC(&qword_100574240);
  v28(&v30[*(int *)(v31 + 48)], v27, v29);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v26 + 8);
  v32(v46, v29);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v38 + 8);
  v33(v37, v25);
  v32(v27, v29);
  v33(v36, v25);
  return swift_release();
}

uint64_t sub_1000BE0EC@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v22 = a6;
  uint64_t v21 = sub_100005BFC(&qword_100574228);
  __chkstk_darwin(v21);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100005BFC(&qword_100574218);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  sub_10002FA38(a3, (uint64_t)v28);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1000BA18C((char)a1, a2, v28, a4 + 16, (uint64_t)v27);
  swift_endAccess();
  sub_100019960((uint64_t)v27, (uint64_t)v28, &qword_100574248);
  if (sub_1000DF19C((char)a1, a5))
  {
    sub_1000C0724((uint64_t)v28);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v22, 1, 1, v13);
  }
  sub_100019960((uint64_t)v28, (uint64_t)v26, &qword_100574248);
  if (sub_1000C0584((uint64_t)v26) == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v22, 1, 1, v13);
  }
  v27[6] = v26[6];
  v27[7] = v26[7];
  v27[8] = v26[8];
  v27[2] = v26[2];
  v27[3] = v26[3];
  v27[4] = v26[4];
  v27[5] = v26[5];
  v27[0] = v26[0];
  v27[1] = v26[1];
  sub_100019960((uint64_t)v28, (uint64_t)v25, &qword_100574248);
  sub_1000C059C(v25);
  sub_1000BCEB8(v12);
  uint64_t v23 = 0x2E736E6F69746341;
  unint64_t v24 = 0xE800000000000000;
  v29._countAndFlagsBits = ActionType.rawValue.getter(v26[0]);
  sub_100460E50(v29);
  swift_bridgeObjectRelease();
  uint64_t v19 = v23;
  uint64_t v18 = (void *)v24;
  if (qword_100570B30 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_10057A768;
  unint64_t v24 = unk_10057A770;
  swift_bridgeObjectRetain();
  v30._countAndFlagsBits = 46;
  v30._object = (void *)0xE100000000000000;
  sub_100460E50(v30);
  swift_bridgeObjectRetain();
  v31._countAndFlagsBits = v19;
  v31._object = v18;
  sub_100460E50(v31);
  swift_bridgeObjectRelease();
  sub_1000C04A4();
  sub_10045F080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000C0724((uint64_t)v28);
  sub_1000C0724((uint64_t)v28);
  sub_100009790((uint64_t)v12, &qword_100574228);
  uint64_t v20 = v22;
  sub_100019960((uint64_t)v16, v22, &qword_100574218);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
}

uint64_t sub_1000BE464()
{
  return sub_10045DA70();
}

uint64_t sub_1000BE484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AnyAction();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = sub_100005BFC(&qword_100574B80);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1004612C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_100461280();
  uint64_t v14 = sub_100461270();
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = v14;
  *((void *)v16 + 3) = &protocol witness table for MainActor;
  *((void *)v16 + 4) = a2;
  *((void *)v16 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v16[v15], v9, v6);
  sub_1000FFB78((uint64_t)v12, (uint64_t)&unk_100574288, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1000BE678()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)type metadata accessor for AnyAction();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 + v2[10];
  if (*(void *)(v4 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v3 + v2[12])) {
    swift_release();
  }
  if (*(void *)(v3 + v2[13])) {
    swift_release();
  }
  if (*(void *)(v3 + v2[14])) {
    swift_release();
  }
  if (*(void *)(v3 + v2[15])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1000BE804()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(type metadata accessor for AnyAction() - 8);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000BE484(v4, v1, v2);
}

uint64_t sub_1000BE888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  v4[4] = sub_100461280();
  v4[5] = sub_100461270();
  uint64_t v7 = (uint64_t (*)(void))((char *)&dword_100574268 + dword_100574268);
  uint64_t v5 = (void *)swift_task_alloc();
  v4[6] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1000BE950;
  return v7();
}

uint64_t sub_1000BE950()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_100461200();
  if (v0) {
    uint64_t v4 = sub_1000BEB0C;
  }
  else {
    uint64_t v4 = sub_1000BEAAC;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_1000BEAAC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000BEB0C()
{
  uint64_t v16 = v0;
  swift_release();
  if (qword_100570740 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = sub_10045D310();
  sub_100009688(v2, (uint64_t)static Logger.actions);
  sub_1000C059C(v1);
  swift_errorRetain();
  sub_1000C059C(v1);
  swift_errorRetain();
  uint64_t v3 = sub_10045D2F0();
  os_log_type_t v4 = sub_100461750();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = v0[7];
  uint64_t v7 = (char *)v0[3];
  if (v5)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446466;
    uint64_t v9 = ActionType.rawValue.getter(*v7);
    *(void *)(v8 + 4) = sub_10001FCAC(v9, v10, &v15);
    swift_bridgeObjectRelease();
    sub_1000C0E70(v7);
    sub_1000C0E70(v7);
    *(_WORD *)(v8 + 12) = 2082;
    v0[2] = v6;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v11 = sub_100460D40();
    *(void *)(v8 + 14) = sub_10001FCAC(v11, v12, &v15);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Action %{public}s failed: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    sub_1000C0E70(v7);
    sub_1000C0E70(v7);
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1000BED78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  uint64_t v7 = type metadata accessor for AnyAction();
  v6[6] = v7;
  v6[7] = *(void *)(v7 - 8);
  v6[8] = swift_task_alloc();
  v6[9] = sub_100461280();
  v6[10] = sub_100461270();
  uint64_t v8 = (void *)swift_task_alloc();
  v6[11] = v8;
  void *v8 = v6;
  v8[1] = sub_1000BEEA8;
  return AnyAction.execute()(v7);
}

uint64_t sub_1000BEEA8()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  uint64_t v3 = sub_100461200();
  if (v0) {
    os_log_type_t v4 = sub_1000BF06C;
  }
  else {
    os_log_type_t v4 = sub_1000BF004;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_1000BF004()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000BF06C()
{
  uint64_t v21 = v0;
  swift_release();
  if (qword_100570740 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v5 = sub_10045D310();
  sub_100009688(v5, (uint64_t)static Logger.actions);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = sub_10045D2F0();
  os_log_type_t v7 = sub_100461750();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[12];
  uint64_t v10 = v0[7];
  uint64_t v11 = v0[8];
  uint64_t v12 = v0[6];
  if (v8)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v14 = sub_100040820();
    *(void *)(v13 + 4) = sub_10001FCAC(v14, v15, &v20);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    *(_WORD *)(v13 + 12) = 2082;
    v0[2] = v9;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v16 = sub_100460D40();
    *(void *)(v13 + 14) = sub_10001FCAC(v16, v17, &v20);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Action %{public}s failed: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1000BF31C()
{
  swift_bridgeObjectRelease();
  sub_100007118(v0 + 24);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1000BF364@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1000BDCE8(a1, *(void *)(v2 + 16), v2 + 24, *(void *)(v2 + 64), a2);
}

uint64_t sub_1000BF374()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000BF3B8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1000BF484(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + 7;
  int v7 = *(_DWORD *)(v4 + 80) & 0x100000;
  uint64_t v8 = *a2;
  *a1 = *a2;
  if (v5 > 7
    || v7 != 0
    || ((((v6 + ((v5 + 72) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 17 > 0x18)
  {
    uint64_t v11 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
  }
  else
  {
    uint64_t v11 = a1;
    a1[1] = a2[1];
    uint64_t v12 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v13;
    uint64_t v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v14 = *v15;
    unint64_t v16 = ((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v17 = ((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v18 = *(void *)(v17 + 24);
    *(void *)(v16 + 24) = v18;
    *(void *)(v16 + 32) = *(void *)(v17 + 32);
    unint64_t v27 = **(void (***)(unint64_t, unint64_t, uint64_t))(v18 - 8);
    uint64_t v28 = v3;
    uint64_t v29 = v6;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27(v16, v17, v18);
    uint64_t v19 = (v16 + v5 + 40) & ~v5;
    uint64_t v20 = (v17 + v5 + 40) & ~v5;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v19, v20, v28);
    uint64_t v21 = (void *)((v29 + v19) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v22 = (void *)((v29 + v20) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    unint64_t v24 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v25 = ((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v24 = *(void *)v25;
    *(void *)(v24 + 8) = *(void *)(v25 + 8);
    *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v11;
}

uint64_t sub_1000BF6CC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = (((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_100007118(v4);
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((v4
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)
                                                                                            + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
  swift_release();
  swift_release();

  return swift_release();
}

void *sub_1000BF7AC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  uint64_t v8 = (void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v8 = *v9;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(v11 + 24);
  *(void *)(v10 + 24) = v12;
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  uint64_t v13 = **(void (***)(unint64_t, unint64_t, uint64_t))(v12 - 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  uint64_t v14 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v15 = v14 + 16;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (v16 + 40 + v10) & ~v16;
  uint64_t v18 = (v16 + 40 + v11) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v17, v18);
  uint64_t v19 = *(void *)(v15 + 48) + 7;
  uint64_t v20 = (void *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v21 = (void *)((v19 + v18) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  unint64_t v23 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v23 = *(void *)v24;
  *(void *)(v23 + 8) = *(void *)(v24 + 8);
  *(unsigned char *)(v23 + 16) = *(unsigned char *)(v24 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1000BF948(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v8 = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v10 = (uint64_t *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (uint64_t *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  sub_10002A628(v10, v11);
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 24;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = ((unint64_t)v10 + v14 + 40) & ~v14;
  uint64_t v16 = ((unint64_t)v11 + v14 + 40) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 24))(v15, v16);
  uint64_t v17 = *(void *)(v13 + 40) + 7;
  uint64_t v18 = (void *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (void *)((v17 + v16) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_release();
  unint64_t v21 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v21 = *(void *)v22;
  swift_retain();
  swift_release();
  *(void *)(v21 + 8) = *(void *)(v22 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(v21 + 16) = *(unsigned char *)(v22 + 16);
  return a1;
}

_OWORD *sub_1000BFAD4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v4 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v4;
  uint64_t v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v6;
  unint64_t v8 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = ((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  long long v10 = *(_OWORD *)v9;
  long long v11 = *(_OWORD *)(v9 + 16);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(_OWORD *)unint64_t v8 = v10;
  *(_OWORD *)(v8 + 16) = v11;
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 32;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 40 + v8) & ~v14;
  uint64_t v16 = (v14 + 40 + v9) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 32))(v15, v16);
  uint64_t v17 = *(void *)(v13 + 32) + 7;
  uint64_t v18 = (_OWORD *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = (_OWORD *)((v17 + v16) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v18 = *v19;
  unint64_t v20 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  char v22 = *(unsigned char *)(v21 + 16);
  *(_OWORD *)unint64_t v20 = *(_OWORD *)v21;
  *(unsigned char *)(v20 + 16) = v22;
  return a1;
}

void *sub_1000BFBCC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = ((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)v7;
  v7 += 15;
  *uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  unint64_t v9 = (void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 15;
  *unint64_t v9 = *(void *)(v7 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  unint64_t v11 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFF8;
  sub_100007118(v11);
  long long v13 = *(_OWORD *)(v10 & 0xFFFFFFFFFFFFFFF8);
  long long v14 = *(_OWORD *)((v10 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(void *)(v11 + 32) = *(void *)((v10 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(_OWORD *)unint64_t v11 = v13;
  *(_OWORD *)(v11 + 16) = v14;
  uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v16 = v15 + 40;
  uint64_t v17 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (v17 + 40 + v11) & ~v17;
  uint64_t v19 = (v17 + 40 + v12) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v15 + 40))(v18, v19);
  uint64_t v20 = *(void *)(v16 + 24) + 7;
  unint64_t v21 = (_OWORD *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = v20 + v19;
  unint64_t v23 = (v22 & 0xFFFFFFFFFFFFFFF8) + 23;
  _OWORD *v21 = *(_OWORD *)(v22 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v24 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v24 = *(void *)v23;
  swift_release();
  *(void *)(v24 + 8) = *(void *)(v23 + 8);
  swift_release();
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v23 + 16);
  return a1;
}

uint64_t sub_1000BFD28(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 72) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 17;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1000BFEBCLL);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((((*(_DWORD *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 72) & ~v6) + 7) & 0xFFFFFFF8)
             + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
          int v16 = *a1;
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))((((((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8)
  }
                                                                      + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                    + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                  + v6
                                                                  + 40) & ~v6);
  uint64_t v17 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1000BFED0(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 72) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 17;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_47;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v20 = (((((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + v9
                   + 40) & ~v9;
              unint64_t v21 = *(void (**)(unint64_t))(v6 + 56);
              v21(v20);
            }
            else
            {
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v19 = a2 ^ 0x80000000;
                *((void *)a1 + 1) = 0;
              }
              else
              {
                uint64_t v19 = a2 - 1;
              }
              *(void *)a1 = v19;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = (~v8 + a2) >> v11;
  if (v10 < 4) {
    int v17 = v16 + 1;
  }
  else {
    int v17 = 1;
  }
  if (v10 >= 4) {
    unsigned int v18 = ~v8 + a2;
  }
  else {
    unsigned int v18 = (~(_BYTE)v8 + a2);
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v18;
  }
  else {
    *(_DWORD *)a1 = v18;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v17;
      break;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x1000C010CLL);
    case 4:
      *(_DWORD *)&a1[v10] = v17;
      break;
    default:
      return;
  }
}

uint64_t sub_1000C0134()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1000C025C()
{
  unint64_t result = qword_1005741E0;
  if (!qword_1005741E0)
  {
    sub_100005C9C(&qword_1005741E8);
    sub_10003F604(qword_100574158, &qword_100574140);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005741E0);
  }
  return result;
}

uint64_t sub_1000C02F4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1000C032C()
{
  swift_bridgeObjectRelease();
  sub_100007118(v0 + 24);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1000C037C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BE0EC(a1, v2[2], (uint64_t)(v2 + 3), v2[8], v2[9], a2);
}

uint64_t sub_1000C038C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005C9C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000C03F8()
{
  unint64_t result = qword_100574210;
  if (!qword_100574210)
  {
    sub_100005C9C(&qword_100574218);
    sub_1000C04A4();
    sub_1000C053C((unint64_t *)&qword_100574238, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574210);
  }
  return result;
}

unint64_t sub_1000C04A4()
{
  unint64_t result = qword_100574220;
  if (!qword_100574220)
  {
    sub_100005C9C(&qword_100574228);
    sub_10003F604(&qword_100574230, &qword_100574138);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574220);
  }
  return result;
}

uint64_t sub_1000C053C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000C0584(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1000C059C(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v6 = (void *)a1[7];
  unsigned int v8 = (void *)a1[9];
  uint64_t v7 = a1[10];
  uint64_t v11 = a1[12];
  uint64_t v12 = a1[14];
  uint64_t v13 = a1[16];
  swift_bridgeObjectRetain();
  sub_1000C0668(v2, v3, v4, v5, v6);
  id v9 = v8;
  sub_10004C8E8(v7);
  sub_10004C8E8(v11);
  sub_10004C8E8(v12);
  sub_10004C8E8(v13);
  return a1;
}

uint64_t sub_1000C0668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2 != 1)
  {
    id v6 = a5;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000C06B8@<X0>(uint64_t a1@<X8>)
{
  sub_10000F810();
  swift_bridgeObjectRetain();
  uint64_t result = sub_10045EDA0();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1000C0724(uint64_t a1)
{
  return a1;
}

void sub_1000C0780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    sub_1000B4D78(a4, a5, a6, a7, a8);

    sub_10004CAE0(a11);
    sub_10004CAE0(a13);
    sub_10004CAE0(a15);
    sub_10004CAE0(a17);
  }
}

uint64_t sub_1000C0870(long long *a1)
{
  uint64_t v2 = sub_100005BFC(&qword_100574B80);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = a1[7];
  long long v32 = a1[6];
  long long v33 = v5;
  long long v34 = a1[8];
  long long v6 = a1[3];
  long long v28 = a1[2];
  long long v29 = v6;
  long long v7 = a1[5];
  long long v30 = a1[4];
  long long v31 = v7;
  long long v8 = a1[1];
  long long v26 = *a1;
  long long v27 = v8;
  uint64_t v9 = sub_1004612C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  long long v23 = v32;
  long long v24 = v33;
  long long v25 = v34;
  long long v19 = v28;
  long long v20 = v29;
  long long v21 = v30;
  long long v22 = v31;
  long long v17 = v26;
  long long v18 = v27;
  sub_100461280();
  sub_1000C059C(&v26);
  uint64_t v10 = sub_100461270();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = &protocol witness table for MainActor;
  long long v12 = v24;
  *(_OWORD *)(v11 + 128) = v23;
  *(_OWORD *)(v11 + 144) = v12;
  *(_OWORD *)(v11 + 160) = v25;
  long long v13 = v20;
  *(_OWORD *)(v11 + 64) = v19;
  *(_OWORD *)(v11 + 80) = v13;
  long long v14 = v22;
  *(_OWORD *)(v11 + 96) = v21;
  *(_OWORD *)(v11 + 112) = v14;
  long long v15 = v18;
  *(_OWORD *)(v11 + 32) = v17;
  *(_OWORD *)(v11 + 48) = v15;
  sub_1000FFB78((uint64_t)v4, (uint64_t)&unk_100574258, v11);
  return swift_release();
}

uint64_t sub_1000C0A04()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 96)) {
    swift_release();
  }
  if (*(void *)(v0 + 112)) {
    swift_release();
  }
  if (*(void *)(v0 + 128)) {
    swift_release();
  }
  if (*(void *)(v0 + 144)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1000C0AA4()
{
  return sub_1000C0870((long long *)(v0 + 16));
}

uint64_t sub_1000C0AAC()
{
  return sub_10045F3E0();
}

uint64_t sub_1000C0B2C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  long long v8 = a4[7];
  *(_OWORD *)(v4 + 112) = a4[6];
  *(_OWORD *)(v4 + 128) = v8;
  *(_OWORD *)(v4 + 144) = a4[8];
  long long v9 = a4[3];
  *(_OWORD *)(v4 + 48) = a4[2];
  *(_OWORD *)(v4 + 64) = v9;
  long long v10 = a4[5];
  *(_OWORD *)(v4 + 80) = a4[4];
  *(_OWORD *)(v4 + 96) = v10;
  long long v11 = a4[1];
  *(_OWORD *)(v4 + 16) = *a4;
  *(_OWORD *)(v4 + 32) = v11;
  long long v12 = (void *)swift_task_alloc();
  *(void *)(v4 + 160) = v12;
  *long long v12 = v4;
  v12[1] = sub_1000C0C0C;
  return sub_1000BE888(a1, a2, a3, v4 + 16);
}

uint64_t sub_1000C0C0C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000C0D00()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 112)) {
    swift_release();
  }
  if (*(void *)(v0 + 128)) {
    swift_release();
  }
  if (*(void *)(v0 + 144)) {
    swift_release();
  }
  if (*(void *)(v0 + 160)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1000C0DA8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *long long v6 = v2;
  v6[1] = sub_100012B44;
  long long v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, _OWORD *))((char *)&dword_100574250 + dword_100574250);
  return v7(a1, v4, v5, (_OWORD *)(v1 + 32));
}

void *sub_1000C0E70(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  long long v6 = (void *)a1[7];
  long long v8 = (void *)a1[9];
  uint64_t v7 = a1[10];
  uint64_t v10 = a1[12];
  uint64_t v11 = a1[14];
  uint64_t v12 = a1[16];
  swift_bridgeObjectRelease();
  sub_1000B4D78(v2, v3, v4, v5, v6);

  sub_10004CAE0(v7);
  sub_10004CAE0(v10);
  sub_10004CAE0(v11);
  sub_10004CAE0(v12);
  return a1;
}

double sub_1000C0F3C(_OWORD *a1)
{
  double result = 0.0;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1000C0F58()
{
  sub_100007118(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1000C0F90()
{
  return sub_1000B3AA4((void *)(v0 + 16));
}

uint64_t sub_1000C0F98()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100012B44;
  return sub_1000B3AF4(v0 + 16);
}

uint64_t sub_1000C102C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1000117C8;
  return sub_1000B3C14(v0 + 16);
}

uint64_t sub_1000C10C0()
{
  return sub_1000B3D34((void *)(v0 + 16));
}

uint64_t sub_1000C10C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1000C06B8(a1);
}

uint64_t sub_1000C10D0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = (int *)type metadata accessor for AnyAction();
  unint64_t v3 = (*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v4 = v0 + v3;
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  unint64_t v5 = v0 + v3 + v2[10];
  if (*(void *)(v5 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v4 + v2[12])) {
    swift_release();
  }
  if (*(void *)(v4 + v2[13])) {
    swift_release();
  }
  if (*(void *)(v4 + v2[14])) {
    swift_release();
  }
  if (*(void *)(v4 + v2[15])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1000C1264(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for AnyAction() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_100012B44;
  return sub_1000BED78(a1, v7, v8, v9, v4, v5);
}

uint64_t sub_1000C1370@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for Actionable() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_1000BC820(a1, v8, v5, v6, a2);
}

uint64_t sub_1000C1410()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(type metadata accessor for Actionable() - 8);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_1000117C8;
  return sub_1000BD70C(v5, v2, v3);
}

uint64_t sub_1000C14FC(uint64_t a1, unsigned char *a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for Actionable() - 8);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_1000BD944(a1, a2, v8, v5, v6);
}

uint64_t sub_1000C15A4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for Actionable() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100007118(v3 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[14], v1);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000C16DC(uint64_t a1)
{
  return sub_1000BDAB4(a1);
}

uint64_t sub_1000C175C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for Actionable() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100007118(v3 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[14], v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000C18B0@<X0>(char *a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for Actionable() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1000BCCE4(a1, v2 + v6, v7, a2);
}

UIMenu ActionList.menu.getter()
{
  type metadata accessor for ActionGroup();
  sub_1004611C0();
  sub_100009854(0, &qword_100572808);
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  unint64_t v0 = sub_100460F70();
  swift_bridgeObjectRelease();
  if (v0 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1004623D0();
    swift_bridgeObjectRelease();
    if (v4 >= 1)
    {
      sub_100009854(0, &qword_1005742D8);
      swift_bridgeObjectRetain();
      UIMenuElementSize v1 = sub_100462360();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
  }
  else if (*(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_bridgeObjectRetain();
    sub_100462700();
    sub_100009854(0, &qword_1005742D8);
    UIMenuElementSize v1 = v0;
LABEL_4:
    swift_bridgeObjectRelease();
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v8.value._countAndFlagsBits = 0;
    v8.value._object = 0;
    v6.value.super.isa = 0;
    v6.is_nil = 0;
    v2.value = 0;
    return sub_100461BD0(v7, v8, v6, v2, 0xFFFFFFFFFFFFFFFFLL, v1, v5);
  }
  swift_bridgeObjectRelease();
  return 0;
}

UIMenu sub_1000C1B40@<X0>(UIMenu *a1@<X8>)
{
  result.super.super.isa = ActionGroup.menu.getter().super.super.isa;
  a1->super.super.isa = result.super.super.isa;
  return result;
}

UIMenu ActionGroup.menu.getter()
{
  type metadata accessor for AnyAction();
  sub_1004611C0();
  sub_100009854(0, &qword_1005742D8);
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  UIMenuElementSize v0 = sub_100460F70();
  swift_bridgeObjectRelease();
  if ((unint64_t)v0 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1004623D0();
    swift_bridgeObjectRelease();
    if (v3 >= 1) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    sub_100009854(0, &qword_100572808);
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v7.value._countAndFlagsBits = 0;
    v7.value._object = 0;
    v5.value.super.isa = 0;
    v5.is_nil = 0;
    v1.value = (UIMenuIdentifier)1;
    return sub_100461BD0(v6, v7, v5, v1, 0xFFFFFFFFFFFFFFFFLL, v0, v4);
  }
  swift_bridgeObjectRelease();
  return 0;
}

id ActionList.contextMenuConfiguration(identifier:previewProvider:)(uint64_t a1, void *(*a2)(), uint64_t a3)
{
  v6.super.super.Class isa = ActionList.menu.getter().super.super.isa;
  if (v6.super.super.isa)
  {
    Class isa = v6.super.super.isa;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = isa;
    uint64_t v9 = self;
    long long v19 = a2;
    uint64_t v20 = a3;
    long long v15 = _NSConcreteStackBlock;
    uint64_t v16 = 1107296256;
    long long v17 = sub_1000C2544;
    long long v18 = &unk_10052BCB8;
    uint64_t v10 = _Block_copy(&v15);
    swift_unknownObjectRetain();
    uint64_t v11 = isa;
    swift_retain_n();
    swift_release();
    long long v19 = Artwork.Placeholder.image.getter;
    uint64_t v20 = v8;
    long long v15 = _NSConcreteStackBlock;
    uint64_t v16 = 1107296256;
    long long v17 = sub_1000C25AC;
    long long v18 = &unk_10052BCE0;
    uint64_t v12 = _Block_copy(&v15);
    swift_retain();
    swift_release();
    id v13 = [v9 configurationWithIdentifier:a1 previewProvider:v10 actionProvider:v12];
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    _Block_release(v12);
    _Block_release(v10);
  }
  else
  {
    return 0;
  }
  return v13;
}

id AnyAction.menuElement.getter(uint64_t a1)
{
  UIMenuIdentifier_optional v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(a1);
  Swift::String_optional v7 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v37 - v8;
  uint64_t v11 = (uint64_t *)&v1[*(int *)(v10 + 48)];
  unint64_t v12 = v11[1];
  if (v12 == 1) {
    return 0;
  }
  uint64_t v13 = *v11;
  uint64_t v14 = v11[2];
  uint64_t v15 = v11[3];
  long long v17 = (void *)v11[4];
  uint64_t v16 = v11[5];
  uint64_t v40 = v13;
  uint64_t v41 = v16;
  uint64_t v42 = v17;
  uint64_t v43 = v14;
  id v18 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = AnyAction.canPerform.getter(a1);
  uint64_t v21 = v20;
  sub_100018DAC(v19, v20);
  if (v21 != 1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  id v38 = v18;
  uint64_t v39 = v15;
  long long v22 = *(void **)&v2[*(int *)(a1 + 44)];
  long long v23 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v23(v9, v2, a1);
  if (!v22)
  {
    if (v12) {
      uint64_t v27 = v40;
    }
    else {
      uint64_t v27 = 0;
    }
    unint64_t v28 = 0xE000000000000000;
    if (v12) {
      unint64_t v28 = v12;
    }
    uint64_t v40 = v27;
    v37[1] = v28;
    if (v41)
    {
      if ((v41 & 2) == 0)
      {
        long long v29 = v23;
        goto LABEL_18;
      }
    }
    else if ((v41 & 2) == 0)
    {
      long long v29 = v23;
LABEL_18:
      uint64_t v41 = sub_100009854(0, (unint64_t *)&unk_100576310);
      v29(v7, v9, a1);
      unint64_t v30 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = *(_OWORD *)(a1 + 16);
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v31 + v30, v7, a1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v26 = v38;
      id v32 = v38;
      id v25 = (id)sub_100461D40();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, a1);
      goto LABEL_19;
    }
    long long v29 = v23;
    goto LABEL_18;
  }
  long long v24 = *(void (**)(char *, uint64_t))(v4 + 8);
  id v25 = v22;
  v24(v9, a1);
  id v26 = v38;
LABEL_19:
  uint64_t v44 = 0;
  unint64_t v45 = 0xE000000000000000;
  v46._countAndFlagsBits = 0x2E736E6F69746341;
  v46._object = (void *)0xE800000000000000;
  sub_100460E50(v46);
  sub_1004626A0();
  uint64_t v34 = v44;
  long long v33 = (void *)v45;
  if (qword_100570B30 != -1) {
    swift_once();
  }
  uint64_t v44 = qword_10057A768;
  unint64_t v45 = unk_10057A770;
  swift_bridgeObjectRetain();
  v47._countAndFlagsBits = 46;
  v47._object = (void *)0xE100000000000000;
  sub_100460E50(v47);
  swift_bridgeObjectRetain();
  v48._countAndFlagsBits = v34;
  v48._object = v33;
  sub_100460E50(v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v35 = sub_100460C70();
  swift_bridgeObjectRelease();
  [v25 setAccessibilityIdentifier:v35];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v25;
}

uint64_t sub_1000C22C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for AnyAction();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = sub_100005BFC(&qword_100574B80);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1004612C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  sub_100461280();
  uint64_t v15 = sub_100461270();
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  long long v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = v15;
  *((void *)v17 + 3) = &protocol witness table for MainActor;
  *((void *)v17 + 4) = a3;
  *((void *)v17 + 5) = a4;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v17[v16], v10, v7);
  sub_1000FFB78((uint64_t)v13, (uint64_t)&unk_1005742E8, (uint64_t)v17);
  return swift_release();
}

id sub_1000C24C0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AnyAction();
  id result = AnyAction.menuElement.getter(v2);
  *a1 = result;
  return result;
}

uint64_t sub_1000C250C()
{
  return swift_deallocObject();
}

id sub_1000C2544(uint64_t a1)
{
  UIMenuIdentifier_optional v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();

  return v3;
}

uint64_t sub_1000C2594(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000C25A4()
{
  return swift_release();
}

id sub_1000C25AC(uint64_t a1)
{
  UIMenuIdentifier_optional v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_100009854(0, &qword_1005742D8);
  uint64_t v2 = sub_1004610A0();
  swift_retain();
  uint64_t v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();

  return v3;
}

uint64_t sub_1000C263C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)type metadata accessor for AnyAction();
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 + v2[10];
  if (*(void *)(v4 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v3 + v2[12])) {
    swift_release();
  }
  if (*(void *)(v3 + v2[13])) {
    swift_release();
  }
  if (*(void *)(v3 + v2[14])) {
    swift_release();
  }
  if (*(void *)(v3 + v2[15])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1000C27C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(type metadata accessor for AnyAction() - 8);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1000C22C4(a1, v6, v3, v4);
}

uint64_t sub_1000C2854()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = (int *)type metadata accessor for AnyAction();
  unint64_t v3 = (*(unsigned __int8 *)(*((void *)v2 - 1) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  swift_unknownObjectRelease();
  uint64_t v4 = v0 + v3;
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  unint64_t v5 = v0 + v3 + v2[10];
  if (*(void *)(v5 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v4 + v2[12])) {
    swift_release();
  }
  if (*(void *)(v4 + v2[13])) {
    swift_release();
  }
  if (*(void *)(v4 + v2[14])) {
    swift_release();
  }
  if (*(void *)(v4 + v2[15])) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1000C29E8(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for AnyAction() - 8);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_1000117C8;
  return sub_1000BED78(a1, v7, v8, v9, v4, v5);
}

uint64_t View.alertPresenting(_:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  swift_retain();
  sub_100005BFC(&qword_1005742F0);
  sub_10003F604(&qword_1005742F8, &qword_1005742F0);
  sub_10045DCA0();
  unint64_t v4 = sub_1000C2BC8();
  View.viewPresenting<A, B>(_:modifier:)(a1, v4, a2);
  return swift_release();
}

unint64_t sub_1000C2BC8()
{
  unint64_t result = qword_100574300;
  if (!qword_100574300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574300);
  }
  return result;
}

uint64_t sub_1000C2C1C()
{
  return swift_getWitnessTable();
}

void *initializeBufferWithCopyOfBuffer for Modifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for Modifier()
{
  return swift_release();
}

void *assignWithCopy for Modifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for Modifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Modifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Modifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Modifier()
{
  return &type metadata for Modifier;
}

uint64_t sub_1000C2E30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000C2E4C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100005BFC(&qword_100574330);
  long long v78 = *(uint64_t **)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  long long v74 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v77 = (char *)&v57 - v7;
  uint64_t v79 = sub_100005BFC(&qword_100574338);
  __chkstk_darwin(v79);
  long long v80 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100005BFC(&qword_100574340);
  v76 = *(uint64_t **)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v75 = (char *)&v57 - v13;
  uint64_t v14 = sub_100005BFC(&qword_100574348);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  long long v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = (uint64_t *)(a1 + *(void *)(*(void *)a1 + 96));
  swift_beginAccess();
  uint64_t v19 = v18[5];
  if (v19)
  {
    v68 = v17;
    uint64_t v69 = v9;
    uint64_t v70 = v15;
    uint64_t v71 = v14;
    uint64_t v72 = v4;
    uint64_t v73 = a2;
    uint64_t v21 = v18[1];
    uint64_t v22 = v18[2];
    uint64_t v23 = v18[3];
    uint64_t v24 = v18[4];
    id v25 = (void *)v18[6];
    uint64_t v92 = *v18;
    uint64_t v20 = v92;
    uint64_t v93 = v21;
    uint64_t v62 = v22;
    uint64_t v94 = v22;
    uint64_t v95 = v23;
    char v96 = v24 & 1;
    uint64_t v97 = v19;
    v98 = v25;
    uint64_t v26 = v19;
    long long v66 = v25;
    id v27 = v25;
    swift_bridgeObjectRetain();
    uint64_t v64 = v23;
    swift_bridgeObjectRetain();
    uint64_t v67 = v26;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_10045F2D0();
    uint64_t v63 = v20;
    if (v21) {
      uint64_t v29 = v20;
    }
    else {
      uint64_t v29 = 0;
    }
    unint64_t v30 = 0xE000000000000000;
    if (v21) {
      unint64_t v30 = v21;
    }
    uint64_t v65 = v24;
    uint64_t v61 = v28;
    uint64_t v60 = v21;
    unint64_t v90 = v30;
    uint64_t v91 = v28;
    uint64_t v89 = v29;
    swift_bridgeObjectRetain();
    sub_100005BFC(&qword_1005742F0);
    sub_10003F604(&qword_1005742F8, &qword_1005742F0);
    sub_10045DCB0();
    swift_getKeyPath();
    sub_10045DCC0();
    swift_release();
    uint64_t v31 = swift_release();
    if (v24)
    {
      v76 = &v57;
      uint64_t v44 = __chkstk_darwin(v31);
      __chkstk_darwin(v44);
      uint64_t v45 = sub_100005BFC(&qword_100574350);
      uint64_t v46 = sub_100005BFC(&qword_100574358);
      unint64_t v58 = sub_10000F810();
      unint64_t v59 = sub_1000C436C();
      v75 = (char *)sub_1000C4404();
      Swift::String v47 = v74;
      sub_10045EFB0();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      Swift::String v48 = v78;
      uint64_t v49 = v77;
      uint64_t v50 = v72;
      ((void (*)(char *, char *, uint64_t))v78[4])(v77, v47, v72);
      ((void (*)(char *, char *, uint64_t))v48[2])(v80, v49, v50);
      swift_storeEnumTagMultiPayload();
      long long v81 = &type metadata for Color;
      v82 = &type metadata for String;
      unint64_t v83 = v45;
      uint64_t v84 = v46;
      unint64_t v51 = v58;
      Swift::String v85 = &protocol witness table for Color;
      unint64_t v86 = v58;
      unint64_t v52 = v59;
      uint64_t v53 = v75;
      Swift::String v87 = (char *)v59;
      Swift::String v88 = v75;
      swift_getOpaqueTypeConformance2();
      long long v81 = &type metadata for Color;
      v82 = &type metadata for String;
      unint64_t v83 = v45;
      uint64_t v84 = v46;
      Swift::String v85 = &protocol witness table for Color;
      unint64_t v86 = v51;
      Swift::String v87 = (char *)v52;
      Swift::String v88 = v53;
      swift_getOpaqueTypeConformance2();
      uint64_t v42 = (uint64_t)v68;
      sub_10045E650();
      swift_release();
      sub_1000B2448(v63, v60, v62, v64, v65, v67, v66);
      ((void (*)(char *, uint64_t))v48[1])(v49, v50);
    }
    else
    {
      long long v78 = &v57;
      LODWORD(v77) = v83;
      uint64_t v32 = __chkstk_darwin(v31);
      __chkstk_darwin(v32);
      unint64_t v58 = sub_100005BFC(&qword_100574350);
      uint64_t v33 = sub_100005BFC(&qword_100574358);
      unint64_t v59 = sub_10000F810();
      long long v74 = (char *)sub_1000C436C();
      unint64_t v56 = sub_1000C4404();
      uint64_t v34 = v33;
      sub_10045F0E0();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      NSString v35 = v76;
      uint64_t v36 = v75;
      uint64_t v37 = v12;
      uint64_t v38 = v69;
      ((void (*)(char *, char *, uint64_t))v76[4])(v75, v37, v69);
      ((void (*)(char *, char *, uint64_t))v35[2])(v80, v36, v38);
      swift_storeEnumTagMultiPayload();
      long long v81 = &type metadata for Color;
      v82 = &type metadata for String;
      unint64_t v39 = v58;
      unint64_t v83 = v58;
      uint64_t v84 = v34;
      unint64_t v40 = v59;
      Swift::String v85 = &protocol witness table for Color;
      unint64_t v86 = v59;
      uint64_t v41 = v74;
      Swift::String v87 = v74;
      Swift::String v88 = (char *)v56;
      swift_getOpaqueTypeConformance2();
      long long v81 = &type metadata for Color;
      v82 = &type metadata for String;
      unint64_t v83 = v39;
      uint64_t v84 = v34;
      Swift::String v85 = &protocol witness table for Color;
      unint64_t v86 = v40;
      Swift::String v87 = v41;
      Swift::String v88 = (char *)v56;
      swift_getOpaqueTypeConformance2();
      uint64_t v42 = (uint64_t)v68;
      sub_10045E650();
      swift_release();
      sub_1000B2448(v63, v60, v62, v64, v65, v67, v66);
      ((void (*)(char *, uint64_t))v35[1])(v36, v38);
    }
    uint64_t v54 = v42;
    a2 = v73;
    sub_100019960(v54, v73, &qword_100574348);
    uint64_t v43 = 0;
    uint64_t v14 = v71;
    uint64_t v15 = v70;
  }
  else
  {
    uint64_t v43 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a2, v43, 1, v14);
}

uint64_t sub_1000C394C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1000C39E4()
{
  return sub_10045D720();
}

uint64_t sub_1000C3A70()
{
  return sub_10045F680();
}

uint64_t sub_1000C3B70@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (*(void *)(a1 + 24))
  {
    sub_10000F810();
    swift_bridgeObjectRetain();
    uint64_t result = sub_10045EDA0();
    uint64_t v7 = v6 & 1;
  }
  else
  {
    uint64_t result = 0;
    uint64_t v4 = 0;
    uint64_t v7 = 0;
    uint64_t v5 = 0;
  }
  *a2 = result;
  a2[1] = v4;
  a2[2] = v7;
  a2[3] = v5;
  return result;
}

uint64_t sub_1000C3BF4@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100005BFC(&qword_100572798);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100005BFC(&qword_100574370);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = a1[1];
  long long v20 = *a1;
  long long v21 = v11;
  long long v22 = a1[2];
  uint64_t v23 = *((void *)a1 + 6);
  long long v25 = v11;
  long long v19 = v11;
  sub_100019960((uint64_t)&v22, (uint64_t)&v24, &qword_100574398);
  sub_100019960((uint64_t)&v24, (uint64_t)&v27, &qword_100574398);
  char v12 = v27;
  if (v27 == 2)
  {
    uint64_t v13 = sub_10045D830();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    if (v12) {
      sub_10045D810();
    }
    else {
      sub_10045D820();
    }
    uint64_t v14 = sub_10045D830();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 0, 1, v14);
  }
  long long v26 = v20;
  uint64_t v15 = *((void *)&v22 + 1);
  uint64_t v16 = swift_allocObject();
  long long v17 = v21;
  *(_OWORD *)(v16 + 16) = v20;
  *(_OWORD *)(v16 + 32) = v17;
  *(_OWORD *)(v16 + 48) = v22;
  *(void *)(v16 + 64) = v23;
  sub_100074F98((uint64_t)&v25);
  sub_100074F98((uint64_t)&v26);
  sub_10004C8E8(v15);
  sub_10000F810();
  sub_10045F4E0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v10, v7);
}

uint64_t sub_1000C3EA8(uint64_t a1)
{
  uint64_t v2 = sub_100005BFC(&qword_100574B80);
  uint64_t result = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6)
  {
    uint64_t v7 = *(void *)(a1 + 48);
    uint64_t v8 = sub_1004612C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
    sub_100461280();
    swift_retain_n();
    uint64_t v9 = sub_100461270();
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v9;
    v10[3] = &protocol witness table for MainActor;
    v10[4] = v6;
    v10[5] = v7;
    sub_1000FFB78((uint64_t)v5, (uint64_t)&unk_1005743A8, (uint64_t)v10);
    sub_10004CAE0(v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000C3FE4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  v4[2] = sub_100461280();
  v4[3] = sub_100461270();
  uint64_t v8 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  v4[4] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1000C40D8;
  return v8();
}

uint64_t sub_1000C40D8()
{
  swift_task_dealloc();
  uint64_t v1 = sub_100461200();
  return _swift_task_switch(sub_1000C4214, v1, v0);
}

uint64_t sub_1000C4214()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000C4274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t v6 = sub_10045F7D0();
  uint64_t v8 = v7;
  uint64_t v9 = a2 + *(int *)(sub_100005BFC(&qword_100574318) + 36);
  sub_1000C2E4C(v5, v9);
  uint64_t v10 = (uint64_t *)(v9 + *(int *)(sub_100005BFC(&qword_100574320) + 36));
  uint64_t *v10 = v6;
  v10[1] = v8;
  uint64_t v11 = sub_100005BFC(&qword_100574328);
  char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);

  return v12(a2, a1, v11);
}

uint64_t sub_1000C4350()
{
  return sub_1000C3A70();
}

unint64_t sub_1000C436C()
{
  unint64_t result = qword_100574360;
  if (!qword_100574360)
  {
    sub_100005C9C(&qword_100574350);
    sub_10003F604(&qword_100574368, &qword_100574370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574360);
  }
  return result;
}

unint64_t sub_1000C4404()
{
  unint64_t result = qword_100574378;
  if (!qword_100574378)
  {
    sub_100005C9C(&qword_100574358);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574378);
  }
  return result;
}

uint64_t sub_1000C4470@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000C3B70(*(void *)(v1 + 16), a1);
}

unint64_t sub_1000C448C()
{
  unint64_t result = qword_100574390;
  if (!qword_100574390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574390);
  }
  return result;
}

uint64_t sub_1000C44E0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1000C4530()
{
  return sub_1000C3EA8(v0 + 16);
}

uint64_t sub_1000C4538()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000C4578(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_1000117C8;
  return sub_1000C3FE4(a1, v4, v5, v6);
}

uint64_t sub_1000C4640()
{
  return 8;
}

void *sub_1000C464C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1000C465C()
{
  unint64_t result = qword_1005743B0;
  if (!qword_1005743B0)
  {
    sub_100005C9C(&qword_100574318);
    sub_10003F604(&qword_1005743B8, &qword_100574328);
    sub_10003F604(&qword_1005743C0, &qword_100574320);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005743B0);
  }
  return result;
}

void sub_1000C472C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id static UIAlertController.alertController(with:overrideStyle:)(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000C4DCC(a1, a2, a3 & 1);
}

uint64_t sub_1000C479C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100005BFC(&qword_100574B80);
  uint64_t result = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 40);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 48);
    uint64_t v9 = sub_1004612C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    sub_100461280();
    swift_retain_n();
    uint64_t v10 = sub_100461270();
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v7;
    v11[5] = v8;
    sub_1000FFB78((uint64_t)v6, (uint64_t)&unk_1005743D0, (uint64_t)v11);
    sub_10004CAE0(v7);
    return swift_release();
  }
  return result;
}

id static UIAlertAction.tapToRadar(title:description:screenshots:attachments:keywords:withDevicePrefix:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v39 = a6;
  uint64_t v40 = a7;
  uint64_t v41 = sub_10045BDE0();
  uint64_t v11 = *(void *)(v41 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v41);
  uint64_t v37 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v38 = (char *)&v37 - v14;
  uint64_t v15 = sub_100005BFC(&qword_100571720);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  id v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  long long v20 = (char *)&v37 - v19;
  if (qword_1005710B8 != -1) {
    swift_once();
  }
  if (static DeviceCapabilities.isInternalInstall != 1) {
    return 0;
  }
  sub_1001366FC(a4, a5, v39, v40, a8 & 1, (uint64_t)v20);
  sub_1000103C8((uint64_t)v20, (uint64_t)v18);
  uint64_t v21 = v41;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v18, 1, v41) == 1)
  {
    sub_100010430((uint64_t)v20);
    uint64_t v22 = (uint64_t)v18;
LABEL_9:
    sub_100010430(v22);
    return 0;
  }
  uint64_t v23 = *(void (**)(void))(v11 + 32);
  char v24 = v38;
  v23();
  id v25 = [self sharedApplication];
  sub_10045BD30(v26);
  uint64_t v28 = v27;
  unsigned int v29 = [v25 canOpenURL:v27];

  if (!v29)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v21);
    uint64_t v22 = (uint64_t)v20;
    goto LABEL_9;
  }
  unint64_t v30 = v37;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, v24, v21);
  unint64_t v31 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v32 = swift_allocObject();
  ((void (*)(unint64_t, char *, uint64_t))v23)(v32 + v31, v30, v21);
  NSString v33 = sub_100460C70();
  aBlock[4] = sub_1000C5170;
  aBlock[5] = v32;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000C472C;
  aBlock[3] = &unk_10052BE50;
  uint64_t v34 = _Block_copy(aBlock);
  swift_release();
  id v35 = [(id)swift_getObjCClassFromMetadata() actionWithTitle:v33 style:0 handler:v34];
  _Block_release(v34);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v21);
  sub_100010430((uint64_t)v20);
  return v35;
}

void sub_1000C4CE0()
{
  id v0 = [self sharedApplication];
  sub_10045BD30(v1);
  uint64_t v3 = v2;
  sub_1000CB158((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1000B2054();
  Class isa = sub_100460A70().super.isa;
  swift_bridgeObjectRelease();
  [v0 openURL:v3 options:isa completionHandler:0];
}

id Alert.uiAlertController.getter()
{
  return sub_1000C4DCC(v0, 0, 1);
}

id sub_1000C4DCC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    a2 = ~*(unsigned __int8 *)(a1 + 32) & 1;
  }
  sub_1000C51F8(a1, (uint64_t)v33);
  sub_1000C51F8(a1 + 16, (uint64_t)v32);
  sub_1000C51F8((uint64_t)v33, (uint64_t)v34);
  if (v34[1])
  {
    sub_100074F98((uint64_t)v32);
    sub_100074F98((uint64_t)v33);
    NSString v5 = sub_100460C70();
    sub_10006A8BC((uint64_t)v33);
  }
  else
  {
    sub_100074F98((uint64_t)v32);
    NSString v5 = 0;
  }
  sub_1000C51F8((uint64_t)v32, (uint64_t)v35);
  if (v35[1])
  {
    NSString v6 = sub_100460C70();
    sub_10006A8BC((uint64_t)v32);
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [self alertControllerWithTitle:v5 message:v6 preferredStyle:a2];

  if (!a2) {
    [v7 setModalPresentationStyle:7];
  }
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v31 = v8;
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    id v25 = v30;
    id v26 = self;
    swift_bridgeObjectRetain();
    uint64_t v10 = (uint64_t *)(v8 + 40);
    do
    {
      uint64_t v27 = v9;
      uint64_t v11 = v7;
      uint64_t v12 = *(v10 - 1);
      uint64_t v13 = *v10;
      uint64_t v15 = v10[1];
      uint64_t v14 = v10[2];
      int v16 = *((unsigned __int8 *)v10 + 24);
      uint64_t v17 = v10[4];
      uint64_t v18 = v10[5];
      uint64_t v19 = 1;
      if (v16) {
        uint64_t v19 = 2;
      }
      if (v16 == 2) {
        uint64_t v19 = 0;
      }
      uint64_t v28 = v19;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v12;
      *(void *)(v20 + 24) = v13;
      id v7 = v11;
      *(void *)(v20 + 32) = v15;
      *(void *)(v20 + 40) = v14;
      *(unsigned char *)(v20 + 48) = v16;
      *(void *)(v20 + 56) = v17;
      *(void *)(v20 + 64) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10004C8E8(v17);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10004C8E8(v17);
      NSString v21 = sub_100460C70();
      v30[2] = sub_1000C52B0;
      v30[3] = v20;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      v30[0] = sub_1000C472C;
      v30[1] = &unk_10052BEA0;
      uint64_t v22 = _Block_copy(aBlock);
      swift_release();
      id v23 = [v26 actionWithTitle:v21 style:v28 handler:v22 v25];
      _Block_release(v22);

      [v11 addAction:v23];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_10004CAE0(v17);
      v10 += 7;
      uint64_t v9 = v27 - 1;
    }
    while (v27 != 1);
    sub_1000C52B8((uint64_t)&v31);
  }
  return v7;
}

uint64_t sub_1000C50E0()
{
  uint64_t v1 = sub_10045BDE0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

void sub_1000C5170()
{
  sub_10045BDE0();

  sub_1000C4CE0();
}

uint64_t sub_1000C51E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000C51F0()
{
  return swift_release();
}

uint64_t sub_1000C51F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005BFC((uint64_t *)&unk_100577400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C5260()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1000C52B0(uint64_t a1)
{
  return sub_1000C479C(a1, v1 + 16);
}

uint64_t sub_1000C52B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000C52E4()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000C5324(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  NSString v6 = (int *)v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_1000117C8;
  return sub_1000C3FE4(a1, v4, v5, v6);
}

uint64_t Alert.Action.init(id:title:role:perform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v23 = a7;
  uint64_t v15 = sub_10045C1E0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t result = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    a1 = sub_10045C1B0();
    a2 = v20;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(unsigned char *)(a8 + 32) = a5;
  uint64_t v21 = v23;
  *(void *)(a8 + 40) = a6;
  *(void *)(a8 + 48) = v21;
  return result;
}

uint64_t Alert.init(title:message:image:style:actions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(unsigned char *)(a8 + 32) = a6 & 1;
  *(void *)(a8 + 40) = a7;
  *(void *)(a8 + 48) = a5;
  return result;
}

uint64_t Alert.Action.role.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t Library.Menu.userSelectedIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

void *Alert.image.getter()
{
  uint64_t v1 = *(void **)(v0 + 48);
  id v2 = v1;
  return v1;
}

uint64_t Alert.Action.perform.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_10004C8E8(v1);
  return v1;
}

unint64_t sub_1000C559C()
{
  unint64_t result = qword_1005743D8;
  if (!qword_1005743D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005743D8);
  }
  return result;
}

unint64_t sub_1000C55F4()
{
  unint64_t result = qword_1005743E0[0];
  if (!qword_1005743E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1005743E0);
  }
  return result;
}

void destroy for Alert(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 48);
}

uint64_t initializeWithCopy for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

uint64_t assignWithCopy for Alert(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 48);
  uint64_t v5 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for Alert(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Alert(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Alert()
{
  return &type metadata for Alert;
}

ValueMetadata *type metadata accessor for Alert.Style()
{
  return &type metadata for Alert.Style;
}

uint64_t destroy for Alert.Action(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for Alert.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  id v7 = (_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for Alert.Action(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 40);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  if (!v4)
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v5;
      *(void *)(a1 + 48) = v7;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Alert.Action(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a1 + 40);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  if (!v7)
  {
    if (v6)
    {
      uint64_t v9 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v6;
      *(void *)(a1 + 48) = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v8;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for Alert.Action()
{
  return &type metadata for Alert.Action;
}

unsigned char *_s9MusicCore5AlertV5StyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C5BE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Alert.Action.Role()
{
  return &type metadata for Alert.Action.Role;
}

uint64_t ArtworkVideoReportingController.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  ArtworkVideoReportingController.init()();
  return v0;
}

uint64_t ArtworkVideoReportingController.init()()
{
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = 0;
  swift_getTupleTypeMetadata2();
  sub_100461120();
  *(void *)(v0 + 40) = sub_100460AC0();
  return v0;
}

uint64_t ArtworkVideoReportingController.isEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ArtworkVideoReportingController.isEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t (*CompoundRequestResponseInvalidation.onInvalidation.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t BindingRequestResponseInvalidation.onInvalidation.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 24);
  sub_10004C8E8(v1);
  return v1;
}

uint64_t BindingRequestResponseInvalidation.onInvalidation.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 24);
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return sub_10004CAE0(v5);
}

uint64_t (*BindingRequestResponseInvalidation.onInvalidation.modify())()
{
  return j__swift_endAccess;
}

void ArtworkVideoReportingController.componentWillAppear(at:)(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)v30 - v6;
  uint64_t v8 = sub_10045C190();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v1 + 5;
  swift_beginAccess();
  uint64_t v12 = *(void *)(v3 + 88);
  swift_bridgeObjectRetain();
  id v36 = a1;
  sub_100460AF0();
  swift_bridgeObjectRelease();
  id v13 = v38;
  if (v38 == (id)1)
  {
    uint64_t v35 = v12;
    uint64_t v14 = 0;
    id v31 = 0;
    id v32 = 0;
    id v33 = 0;
    uint64_t v15 = 0;
    int v34 = 4;
LABEL_6:
    uint64_t v20 = self;
    sub_10045C180();
    Class isa = sub_10045C0F0().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v22 = [v20 serverTimeFromDate:isa];

    uint64_t v23 = *(void (**)(char *, id, uint64_t))(v5 + 16);
    id v13 = v22;
    v30[2] = v7;
    v23(v7, v36, v4);
    id v36 = v15;
    id v19 = v14;
    char v24 = v14;
    id v25 = v31;
    id v26 = v15;
    id v18 = v31;
    v30[1] = v4;
    id v27 = v32;
    id v17 = v32;
    id v28 = v33;
    id v29 = v33;
    id v38 = v22;
    uint64_t v39 = v24;
    uint64_t v40 = v25;
    uint64_t v41 = v27;
    id v16 = v29;
    uint64_t v42 = v28;
    uint64_t v43 = v26;
    unsigned __int8 v44 = v34;
    swift_beginAccess();
    sub_100460AD0();
    sub_100460B00();
    swift_endAccess();
    uint64_t v15 = v36;
    goto LABEL_7;
  }
  uint64_t v15 = v43;
  if (!v38)
  {
    uint64_t v35 = v12;
    int v34 = v44;
    id v32 = v41;
    id v33 = v42;
    id v31 = v40;
    uint64_t v14 = v39;
    goto LABEL_6;
  }
  id v16 = v42;
  id v17 = v41;
  id v18 = v40;
  id v19 = v39;
LABEL_7:
}

void ArtworkVideoReportingController.placeholderDidAppear(at:)(void *a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = sub_10045C190();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (v1[16] == 1)
  {
    swift_beginAccess();
    uint64_t v12 = *(void *)(v3 + 88);
    swift_bridgeObjectRetain();
    uint64_t v33 = v12;
    id v34 = a1;
    sub_100460AF0();
    swift_bridgeObjectRelease();
    id v13 = v35;
    if (v35 == (void *)1)
    {
      id v32 = v1 + 40;
      id v13 = 0;
      id v28 = 0;
      id v29 = 0;
      id v30 = 0;
      uint64_t v14 = 0;
      int v31 = 4;
    }
    else
    {
      uint64_t v14 = v40;
      if (v36)
      {
        sub_1000C7FB4(v35, v36, v37, v38, v39, v40);
        return;
      }
      id v32 = v1 + 40;
      id v28 = v37;
      id v29 = v38;
      id v30 = v39;
      int v31 = v41;
    }
    uint64_t v15 = self;
    sub_10045C180();
    Class isa = sub_10045C0F0().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v17 = [v15 serverTimeFromDate:isa];

    id v18 = *(void (**)(char *, id, uint64_t))(v5 + 16);
    id v27 = v17;
    v18(v7, v34, v4);
    id v25 = v14;
    id v34 = v13;
    id v19 = v28;
    id v26 = v28;
    id v20 = v29;
    id v21 = v29;
    id v22 = v30;
    id v23 = v30;
    uint64_t v35 = v13;
    id v36 = v17;
    uint64_t v37 = v19;
    id v38 = v20;
    uint64_t v39 = v22;
    uint64_t v40 = v14;
    unsigned __int8 v41 = v31;
    swift_beginAccess();
    sub_100460AD0();
    sub_100460B00();
    swift_endAccess();
  }
}

void ArtworkVideoReportingController.videoArtworkWasSelectedForPlayback(at:isReadyForDisplay:)(uint64_t a1, char a2)
{
  uint64_t v5 = *(void *)v2;
  uint64_t v6 = *(void *)(*(void *)v2 + 80);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)v33 - v8;
  uint64_t v10 = sub_10045C190();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (v2[16] == 1)
  {
    v33[1] = v2 + 40;
    swift_beginAccess();
    uint64_t v14 = *(void **)(v5 + 88);
    swift_bridgeObjectRetain();
    v33[0] = v14;
    sub_100460AF0();
    swift_bridgeObjectRelease();
    uint64_t v15 = v34;
    char v16 = a2;
    if (v34 == (void *)1)
    {
      uint64_t v15 = 0;
      id v17 = 0;
      long long v18 = 0uLL;
      char v19 = 4;
      long long v20 = 0uLL;
    }
    else
    {
      char v19 = v38;
      id v17 = v37;
      long long v18 = v35;
      long long v20 = v36;
    }
    uint64_t v39 = v15;
    long long v40 = v18;
    long long v41 = v20;
    uint64_t v42 = v17;
    char v43 = v19;
    id v21 = self;
    sub_10045C180();
    Class isa = sub_10045C0F0().super.isa;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    id v23 = [v21 serverTimeFromDate:isa];

    *((void *)&v40 + 1) = v23;
    sub_1000C6950(v16 & 1);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    uint64_t v24 = v39;
    long long v25 = v40;
    long long v27 = v41;
    id v26 = v42;
    id v34 = v39;
    long long v35 = v40;
    long long v36 = v41;
    uint64_t v37 = v42;
    char v38 = v43;
    swift_beginAccess();
    sub_100460AD0();
    v33[0] = v24;
    id v28 = (id)v25;
    id v29 = *((id *)&v25 + 1);
    id v30 = (id)v27;
    id v31 = *((id *)&v27 + 1);
    id v32 = v26;
    sub_100460B00();
    swift_endAccess();
  }
}

uint64_t sub_1000C6950(char a1)
{
  uint64_t result = 1819047270;
  switch(*(unsigned char *)(v1 + 48))
  {
    case 3:
      return swift_bridgeObjectRelease();
    case 4:
      goto LABEL_3;
    default:
      char v4 = sub_1004626E0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v4) {
        return result;
      }
LABEL_3:
      if (a1)
      {
        *(unsigned char *)(v1 + 48) = 0;
        return result;
      }
      if (*(void *)(v1 + 24))
      {
        char v5 = 1;
      }
      else
      {
        if (!*(void *)(v1 + 8)) {
          return result;
        }
        char v5 = 2;
      }
      *(unsigned char *)(v1 + 48) = v5;
      return result;
  }
}

void ArtworkVideoReportingController.videoArtworkWillBeginLoading(at:)(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v27 - v6;
  uint64_t v8 = sub_10045C190();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (v1[16] == 1)
  {
    long long v35 = v1 + 40;
    swift_beginAccess();
    uint64_t v12 = *(void *)(v3 + 88);
    swift_bridgeObjectRetain();
    uint64_t v32 = v12;
    sub_100460AF0();
    swift_bridgeObjectRelease();
    id v13 = v36;
    uint64_t v34 = a1;
    if (v36 == (void *)1)
    {
      uint64_t v33 = 0;
      id v31 = 0;
      id v28 = 0;
      id v30 = 0;
      id v29 = 0;
      id v13 = 0;
    }
    else
    {
      uint64_t v33 = v41;
      id v31 = v40;
      id v28 = v39;
      id v30 = v38;
      id v29 = v37;
    }
    uint64_t v14 = self;
    sub_10045C180();
    Class isa = sub_10045C0F0().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    id v16 = [v14 serverTimeFromDate:isa];

    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v34, v4);
    id v17 = v29;
    long long v36 = v13;
    uint64_t v37 = v29;
    long long v18 = v30;
    char v38 = v30;
    uint64_t v39 = v16;
    char v19 = v31;
    long long v20 = v33;
    long long v40 = v31;
    long long v41 = v33;
    char v42 = 4;
    swift_beginAccess();
    sub_100460AD0();
    id v21 = v13;
    id v22 = v17;
    id v23 = v18;
    id v24 = v16;
    id v25 = v19;
    id v26 = v20;
    sub_100460B00();
    swift_endAccess();
  }
}

void ArtworkVideoReportingController.videoArtworkDidCancelLoading(at:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = sub_10045C190();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*((unsigned char *)v2 + 16) == 1)
  {
    uint64_t v37 = v2 + 5;
    swift_beginAccess();
    uint64_t v13 = *(void *)(v4 + 88);
    swift_bridgeObjectRetain();
    uint64_t v36 = v13;
    sub_100460AF0();
    swift_bridgeObjectRelease();
    uint64_t v14 = v38;
    if (v38 != (void *)1)
    {
      int v30 = v44;
      uint64_t v15 = v42;
      id v26 = v43;
      id v25 = v42;
      uint64_t v29 = a1;
      uint64_t v27 = v6;
      id v16 = v40;
      id v17 = v41;
      id v24 = v40;
      id v28 = v8;
      long long v18 = v39;
      id v23 = self;
      id v33 = v15;
      id v35 = v14;
      id v34 = v18;
      id v32 = v16;
      id v31 = v17;
      sub_10045C180();
      Class isa = sub_10045C0F0().super.isa;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      id v20 = [v23 serverTimeFromDate:isa];

      id v21 = v20;
      uint64_t v22 = v29;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v28, v29, v5);
      char v38 = v14;
      uint64_t v39 = v18;
      long long v40 = v24;
      long long v41 = v17;
      char v42 = v25;
      char v43 = v20;
      unsigned __int8 v44 = v30;
      swift_beginAccess();
      sub_100460AD0();
      sub_100460B00();
      swift_endAccess();
      sub_1000C75A8(v22);
      _s9MusicCore31ArtworkVideoReportingControllerC05videoC15DidStopPlayback2atyx_tF_0(v22);
    }
  }
}

void ArtworkVideoReportingController.videoArtworkDidStartPlayback(at:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v36 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = sub_10045C190();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*((unsigned char *)v2 + 16) == 1)
  {
    id v35 = v2 + 5;
    swift_beginAccess();
    uint64_t v12 = *(void *)(v3 + 88);
    swift_bridgeObjectRetain();
    uint64_t v34 = v12;
    sub_100460AF0();
    swift_bridgeObjectRelease();
    uint64_t v13 = v37;
    if (v37 != (void *)1)
    {
      int v28 = v43;
      uint64_t v14 = v42;
      id v25 = v42;
      id v24 = v41;
      uint64_t v26 = v5;
      id v16 = v39;
      uint64_t v15 = v40;
      id v23 = v40;
      uint64_t v27 = v7;
      id v17 = v38;
      id v22 = self;
      id v31 = v14;
      id v33 = v13;
      id v32 = v17;
      id v30 = v16;
      id v29 = v15;
      sub_10045C180();
      Class isa = sub_10045C0F0().super.isa;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      id v19 = [v22 serverTimeFromDate:isa];

      id v20 = v19;
      uint64_t v21 = v36;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v27, v36, v4);
      uint64_t v37 = v13;
      char v38 = v17;
      uint64_t v39 = v16;
      long long v40 = v23;
      long long v41 = v19;
      char v42 = v25;
      unsigned __int8 v43 = v28;
      swift_beginAccess();
      sub_100460AD0();
      sub_100460B00();
      swift_endAccess();
      sub_1000C75A8(v21);
    }
  }
}

void sub_1000C75A8(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(a1);
  uint64_t v7 = (char *)v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v64 - v8;
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_100460AF0();
    swift_bridgeObjectRelease();
    uint64_t v10 = v83;
    if (v83 != (void *)1)
    {
      long long v74 = v7;
      v75 = v9;
      uint64_t v12 = v84;
      uint64_t v11 = v85;
      uint64_t v13 = v86;
      v77 = v87;
      id v78 = v88;
      int v79 = v89;
      swift_beginAccess();
      uint64_t v14 = *(uint64_t (**)(uint64_t))(v1 + 24);
      if (v14)
      {
        uint64_t v73 = v4;
        uint64_t v15 = v10;
        v76 = v11;
        swift_retain();
        uint64_t v16 = v14(a1);
        long long v18 = v17;
        char v20 = v19;
        sub_10004CAE0((uint64_t)v14);
        if (v13)
        {
          unint64_t v83 = (void *)v16;
          uint64_t v84 = v18;
          uint64_t v72 = (uint64_t)v18;
          LOBYTE(v85) = v20;
          uint64_t v10 = v15;
          unint64_t v86 = v15;
          Swift::String v87 = v12;
          uint64_t v11 = v76;
          Swift::String v88 = v76;
          uint64_t v89 = v13;
          uint64_t v21 = v77;
          unint64_t v90 = v77;
          id v91 = v78;
          char v92 = v79;
          if (v77)
          {
            uint64_t v65 = v16;
            id v69 = v78;
            id v22 = v12;
            id v23 = v21;
            uint64_t v70 = v13;
            id v24 = v13;
            id v25 = v15;
            uint64_t v71 = v22;
            id v26 = v22;
            id v27 = v11;
            [v23 doubleValue];
            double v29 = v28;
            [v24 doubleValue];
            double v31 = v30;
            if (qword_100570930 != -1) {
              swift_once();
            }
            uint64_t v32 = sub_10045D310();
            uint64_t v66 = sub_100009688(v32, (uint64_t)static Logger.motion);
            id v33 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
            v64[1] = v73 + 16;
            v64[0] = v33;
            v33(v75, a1, v3);
            swift_bridgeObjectRetain_n();
            id v34 = v25;
            id v35 = v26;
            id v36 = v27;
            id v37 = v24;
            id v38 = v23;
            id v39 = v69;
            id v69 = v34;
            id v68 = v35;
            id v67 = v36;
            id v40 = v37;
            id v41 = v38;
            id v42 = v39;
            unsigned __int8 v43 = sub_10045D2F0();
            os_log_type_t v44 = sub_100461740();
            if (os_log_type_enabled(v43, v44))
            {
              uint64_t v45 = swift_slowAlloc();
              uint64_t v66 = swift_slowAlloc();
              uint64_t v82 = v66;
              *(_DWORD *)uint64_t v45 = 136315650;
              uint64_t v80 = v65;
              uint64_t v81 = v72;
              swift_bridgeObjectRetain();
              sub_100005BFC((uint64_t *)&unk_100577400);
              uint64_t v46 = sub_100460D40();
              *(void *)(v45 + 4) = sub_10001FCAC(v46, v47, &v82);

              id v48 = v67;
              id v49 = v68;

              id v50 = v69;
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v45 + 12) = 2080;
              unint64_t v51 = v75;
              ((void (*)(char *, char *, uint64_t))v64[0])(v74, v75, v3);
              uint64_t v52 = sub_100460D40();
              *(void *)(v45 + 14) = sub_10001FCAC(v52, v53, &v82);
              swift_bridgeObjectRelease();
              (*(void (**)(char *, uint64_t))(v73 + 8))(v51, v3);
              *(_WORD *)(v45 + 22) = 2048;
              *(double *)(v45 + 24) = v29 - v31;
              _os_log_impl((void *)&_mh_execute_header, v43, v44, "Item with id: %s at index: %s loaded enough data to start playback in %f ms.", (uint8_t *)v45, 0x20u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              id v61 = v67;
              id v62 = v68;

              id v63 = v69;
              swift_bridgeObjectRelease_n();
              (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v3);
            }

            uint64_t v12 = v71;
            uint64_t v11 = v76;
            uint64_t v21 = v77;
            char v55 = v70;
          }
          else
          {
            id v56 = v78;
            id v57 = v13;
            id v58 = v15;
            id v59 = v12;
            id v60 = v11;
            char v55 = v13;
          }
          if (qword_1005707F8 != -1) {
            swift_once();
          }
          MetricsReportingController.recordComponentRenderEvent(_:)((uint64_t)&v83);

          swift_bridgeObjectRelease();
          id v54 = v78;
        }
        else
        {
          swift_bridgeObjectRelease();
          char v55 = 0;
          uint64_t v11 = v76;
          uint64_t v21 = v77;
          id v54 = v78;
          uint64_t v10 = v15;
        }
      }
      else
      {
        uint64_t v21 = v77;
        id v54 = v78;
        char v55 = v13;
      }
      sub_1000C7FB4(v10, v12, v11, v55, v21, v54);
    }
  }
}

void _s9MusicCore31ArtworkVideoReportingControllerC05videoC15DidStopPlayback2atyx_tF_0(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v16 - v5;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_100460AF0();
  swift_bridgeObjectRelease();
  uint64_t v7 = v19;
  if (v19 != (void *)1)
  {
    id v17 = v20;
    long long v18 = v22;
    uint64_t v9 = v23;
    uint64_t v8 = v24;
    char v10 = v25;

    if (v9)
    {

      char v10 = 3;
    }

    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    uint64_t v11 = v17;
    uint64_t v12 = v18;
    char v19 = v7;
    char v20 = v17;
    id v21 = 0;
    id v22 = v18;
    id v23 = 0;
    id v24 = 0;
    char v25 = v10;
    swift_beginAccess();
    sub_100460AD0();
    id v13 = v7;
    id v14 = v11;
    id v15 = v12;
    sub_100460B00();
    swift_endAccess();
  }
}

uint64_t ArtworkVideoReportingController.deinit()
{
  sub_10004CAE0(*(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ArtworkVideoReportingController.__deallocating_deinit()
{
  sub_10004CAE0(*(void *)(v0 + 24));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_1000C7FB4(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  if (a1 != (void *)1)
  {
  }
}

uint64_t sub_1000C8028()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ArtworkVideoReportingController()
{
  return sub_100041DA8();
}

void destroy for ComponentRenderEventSignposts(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for ComponentRenderEventSignposts(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  id v9 = v3;
  id v10 = v4;
  id v11 = v5;
  id v12 = v6;
  id v13 = v7;
  id v14 = v8;
  return a1;
}

uint64_t assignWithCopy for ComponentRenderEventSignposts(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 16);
  id v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  id v13 = *(void **)(a1 + 24);
  id v14 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v14;
  id v15 = v14;

  uint64_t v16 = *(void **)(a1 + 32);
  id v17 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v17;
  id v18 = v17;

  char v19 = *(void **)(a1 + 40);
  char v20 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v20;
  id v21 = v20;

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for ComponentRenderEventSignposts(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ComponentRenderEventSignposts(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  id v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ComponentRenderEventSignposts(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ComponentRenderEventSignposts(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentRenderEventSignposts()
{
  return &type metadata for ComponentRenderEventSignposts;
}

double CarNowPlayingMetrics.Data.timePlayed.getter()
{
  return *(double *)v0;
}

void CarNowPlayingMetrics.Data.timePlayed.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t ApplicationCapabilities.subscriptionCapabilities.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t CarNowPlayingMetrics.Data.tracksPlayed.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

CFRange (__swiftcall *UIView.Shadow.opacity.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

double UIView.Shadow.radius.getter()
{
  return *(double *)(v0 + 16);
}

void UIView.Shadow.radius.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t ApplicationCapabilities.allowedServices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Library.Menu.Revision.selected.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

CFRange (__swiftcall *UIView.Shadow.offset.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t QRCode.errorCorrectionLevel.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t CarNowPlayingMetrics.Data.sharedSessionMaxParticipants.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

CFRange (__swiftcall *Library.Menu.Request.excludedIdentifiers.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t CarNowPlayingMetrics.Data.init(timePlayed:tracksPlayed:rangeStartTime:sharedSessionIds:sharedSessionMaxParticipants:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  *(double *)a4 = a5;
  *(void *)(a4 + 8) = result;
  *(double *)(a4 + 16) = a6;
  *(void *)(a4 + 24) = a2;
  *(void *)(a4 + 32) = a3;
  return result;
}

unint64_t sub_1000C8464(char a1)
{
  unint64_t result = 0x79616C50656D6974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C50736B63617274;
      break;
    case 2:
      unint64_t result = 0x61745365676E6172;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000C8538()
{
  return sub_1000C8464(*v0);
}

uint64_t sub_1000C8540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000C9E30(a1, a2);
  *a3 = result;
  return result;
}

void sub_1000C8568(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1000C8574(uint64_t a1)
{
  unint64_t v2 = sub_1000C880C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000C85B0(uint64_t a1)
{
  unint64_t v2 = sub_1000C880C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CarNowPlayingMetrics.Data.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100005BFC(&qword_100574470);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10000C300(a1, a1[3]);
  sub_1000C880C();
  sub_100462950();
  char v14 = 0;
  sub_1004625A0();
  if (!v2)
  {
    char v13 = 1;
    sub_1004625B0();
    char v12 = 2;
    sub_1004625A0();
    uint64_t v11 = *(void *)(v3 + 24);
    v10[15] = 3;
    sub_100005BFC(&qword_100574480);
    sub_1000CAE98(&qword_100574488);
    sub_1004625C0();
    v10[14] = 4;
    sub_1004625B0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1000C880C()
{
  unint64_t result = qword_100574478;
  if (!qword_100574478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574478);
  }
  return result;
}

double CarNowPlayingMetrics.Data.init(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000CA08C(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1000C88A8(void *a1)
{
  return CarNowPlayingMetrics.Data.encode(to:)(a1);
}

uint64_t static CarNowPlayingMetrics.persistedMetricsData(for:)@<X0>(uint64_t a1@<X8>)
{
  sub_1000CA334((uint64_t)v3);
  return sub_100019960((uint64_t)v3, a1, &qword_100574490);
}

uint64_t Logger.carMetrics.unsafeMutableAddressor()
{
  if (qword_100570750 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10045D310();

  return sub_100009688(v0, (uint64_t)static Logger.carMetrics);
}

void static CarNowPlayingMetrics.storeMetricsData(_:for:)(uint64_t a1)
{
  sub_100019960(a1, (uint64_t)&v9, &qword_100574490);
  if (*((void *)&v10 + 1))
  {
    long long v12 = v9;
    long long v13 = v10;
    uint64_t v14 = v11;
    sub_10045B940();
    swift_allocObject();
    sub_10045B930();
    sub_1000CA6E4();
    uint64_t v3 = sub_10045B920();
    unint64_t v5 = v4;
    swift_release();
    id v6 = [self standardUserDefaults];
    Class isa = sub_10045BE40().super.isa;
    NSString v8 = sub_100460C70();
    swift_bridgeObjectRelease();
    [v6 setValue:isa forKey:v8];

    sub_1000070C0(v3, v5);
  }
  else
  {
    id v1 = [self standardUserDefaults];
    NSString v2 = sub_100460C70();
    swift_bridgeObjectRelease();
    [v1 setValue:0 forKey:v2];
  }
}

void sub_1000C8D34(char a1)
{
  uint64_t v55 = *v1;
  char v2 = a1 & 1;
  uint64_t v3 = sub_100005BFC(&qword_100574B80);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10045C370();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v54 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10045C190();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v53 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v50 - v13;
  if (qword_100570750 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_10045D310();
  uint64_t v16 = sub_100009688(v15, (uint64_t)static Logger.carMetrics);
  id v17 = sub_10045D2F0();
  os_log_type_t v18 = sub_100461770();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v52 = v6;
    uint64_t v50 = v16;
    uint64_t v20 = v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v51 = v10;
    *(void *)&long long v59 = v21;
    *(_DWORD *)uint64_t v20 = 136446210;
    v58[0] = v2;
    uint64_t v22 = sub_100460D40();
    *(void *)(v20 + 4) = sub_10001FCAC(v22, v23, (uint64_t *)&v59);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Reporting %{public}s playsSummary event if needed", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy();
    uint64_t v10 = v51;
    swift_slowDealloc();
    uint64_t v6 = v52;
    swift_slowDealloc();
  }

  if (qword_1005707F8 != -1) {
    swift_once();
  }
  *(double *)&uint64_t v24 = COERCE_DOUBLE(sub_1000D80C0());
  if (v25)
  {
    if (qword_100570748 != -1) {
      swift_once();
    }
    double v26 = *(double *)&qword_100574468;
  }
  else
  {
    double v26 = *(double *)&v24;
  }
  sub_1000CA334((uint64_t)v58);
  sub_100019960((uint64_t)v58, (uint64_t)&v59, &qword_100574490);
  if ((void)v61)
  {
    double v27 = v60;
    long long v62 = v61;
    long long v63 = v59;
    sub_10045C160();
    sub_10045C130();
    double v29 = v28;
    double v30 = *(void (**)(char *, uint64_t))(v10 + 8);
    v30(v14, v9);
    double v31 = (v29 - v27) * 1000.0;
    if (v26 < v31)
    {
      sub_10045C160();
      sub_10045C130();
      uint64_t v33 = v32;
      v30(v14, v9);
      id v34 = v54;
      sub_10045C330();
      id v35 = v53;
      sub_10045C160();
      sub_10045C2D0();
      v30(v35, v9);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v34, v6);
      sub_10045C130();
      uint64_t v37 = v36;
      v30(v14, v9);
      uint64_t v38 = sub_1004612C0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v5, 1, 1, v38);
      sub_100461280();
      uint64_t v39 = sub_100461270();
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v39;
      *(void *)(v40 + 24) = &protocol witness table for MainActor;
      *(_OWORD *)(v40 + 32) = v63;
      *(double *)(v40 + 48) = v27;
      *(_OWORD *)(v40 + 56) = v62;
      *(void *)(v40 + 72) = v37;
      *(unsigned char *)(v40 + 80) = v2;
      *(void *)(v40 + 88) = v33;
      *(void *)(v40 + 96) = v55;
      sub_1000FFB78((uint64_t)v5, (uint64_t)&unk_100574568, v40);
      swift_release();
      return;
    }
    sub_1000CAC7C((uint64_t)v58);
    id v41 = sub_10045D2F0();
    os_log_type_t v46 = sub_100461770();
    if (os_log_type_enabled(v41, v46))
    {
      uint64_t v47 = swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136446722;
      char v56 = v2;
      uint64_t v48 = sub_100460D40();
      *(void *)(v47 + 4) = sub_10001FCAC(v48, v49, &v57);
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2050;
      *(double *)(v47 + 14) = v31;
      *(_WORD *)(v47 + 22) = 2050;
      *(double *)(v47 + 24) = v26;
      _os_log_impl((void *)&_mh_execute_header, v41, v46, "❌ Failed to configure %{public}s playsSummary event: range=%{public}f ms isn't greater than post frequency=%{public}f ms", (uint8_t *)v47, 0x20u);
      swift_arrayDestroy();
      goto LABEL_19;
    }
  }
  else
  {
    id v41 = sub_10045D2F0();
    os_log_type_t v42 = sub_100461770();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      *(void *)&long long v63 = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136446210;
      LOBYTE(v62) = v2;
      uint64_t v44 = sub_100460D40();
      *(void *)(v43 + 4) = sub_10001FCAC(v44, v45, (uint64_t *)&v63);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "❌ Failed to configure %{public}s playsSummary event: no persisted metrics data", (uint8_t *)v43, 0xCu);
      swift_arrayDestroy();
LABEL_19:
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1000C94CC(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 512) = a7;
  *(double *)(v7 + 488) = a1;
  *(double *)(v7 + 496) = a2;
  *(void *)(v7 + 480) = a6;
  sub_100461280();
  *(void *)(v7 + 504) = sub_100461270();
  uint64_t v9 = sub_100461200();
  return _swift_task_switch(sub_1000C956C, v9, v8);
}

uint64_t sub_1000C956C()
{
  swift_release();
  if (qword_1005707F8 != -1) {
    swift_once();
  }
  char v1 = *(unsigned char *)(v0 + 512);
  double v3 = *(double *)(v0 + 488);
  double v2 = *(double *)(v0 + 496);
  uint64_t v4 = *(void *)(v0 + 480);
  sub_100005BFC(&qword_100574E40);
  uint64_t inited = swift_initStackObject();
  uint64_t v6 = (void *)inited;
  *(_OWORD *)(inited + 16) = xmmword_100466930;
  strcpy((char *)(inited + 32), "totalDuration");
  *(_WORD *)(inited + 46) = -4864;
  *(double *)(inited + 48) = round(*(double *)v4 * 1000.0);
  *(void *)(inited + 72) = &type metadata for Double;
  *(void *)(inited + 80) = 0x6E756F4379616C70;
  *(void *)(inited + 88) = 0xE900000000000074;
  *(void *)(inited + 96) = *(void *)(v4 + 8);
  *(void *)(inited + 120) = &type metadata for Int;
  *(void *)(inited + 128) = 0x6D6954746E657665;
  *(void *)(inited + 136) = 0xE900000000000065;
  *(double *)(inited + 144) = round(v3 * 1000.0);
  *(void *)(inited + 168) = &type metadata for Double;
  *(void *)(inited + 176) = 0x707954746E657665;
  *(void *)(inited + 184) = 0xE900000000000065;
  strcpy((char *)(inited + 192), "playsSummary");
  *(unsigned char *)(inited + 205) = 0;
  *(_WORD *)(inited + 206) = -5120;
  *(void *)(inited + 216) = &type metadata for String;
  *(void *)(inited + 224) = 0x6F436E6F69746361;
  int v7 = v1 & 1;
  uint64_t v8 = 0x746F6F7465756C62;
  if (!v7) {
    uint64_t v8 = 0x79616C50726143;
  }
  unint64_t v9 = 0xE900000000000068;
  if (!v7) {
    unint64_t v9 = 0xE700000000000000;
  }
  *(void *)(inited + 232) = 0xED0000747865746ELL;
  *(void *)(inited + 240) = v8;
  *(void *)(inited + 248) = v9;
  *(void *)(inited + 264) = &type metadata for String;
  strcpy((char *)(inited + 272), "rangeStartTime");
  *(unsigned char *)(inited + 287) = -18;
  *(double *)(inited + 288) = round(*(double *)(v4 + 16) * 1000.0);
  *(void *)(inited + 312) = &type metadata for Double;
  strcpy((char *)(inited + 320), "rangeEndTime");
  *(unsigned char *)(inited + 333) = 0;
  *(_WORD *)(inited + 334) = -5120;
  *(double *)(inited + 336) = round(v2 * 1000.0);
  *(void *)(inited + 360) = &type metadata for Double;
  *(void *)(inited + 368) = 0xD000000000000013;
  *(void *)(inited + 376) = 0x800000010048FB60;
  *(void *)(inited + 384) = *(void *)(*(void *)(v4 + 24) + 16);
  *(void *)(inited + 408) = &type metadata for Int;
  *(void *)(inited + 416) = 0xD000000000000018;
  *(void *)(inited + 424) = 0x800000010048FB80;
  uint64_t v10 = sub_1000DA61C(*(void *)(v4 + 32));
  v6[57] = &type metadata for String;
  v6[54] = v10;
  v6[55] = v11;
  unint64_t v12 = sub_1000CB020((uint64_t)v6);
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = v7;
  MetricsReportingController.recordCarPlayCustomEvent(with:properties:shouldSuppressUserInfo:completionHandler:)(0xD000000000000014, 0x800000010048FB40, v12, 0, (uint64_t)sub_1000CADDC, v13);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

void sub_1000C98C4(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_100570750 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_10045D310();
    sub_100009688(v1, (uint64_t)static Logger.carMetrics);
    swift_errorRetain();
    swift_errorRetain();
    oslog = sub_10045D2F0();
    os_log_type_t v2 = sub_100461750();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 136446466;
      uint64_t v4 = sub_100460D40();
      *(void *)(v3 + 4) = sub_10001FCAC(v4, v5, &v17);
      swift_bridgeObjectRelease();
      *(_WORD *)(v3 + 12) = 2082;
      swift_errorRetain();
      sub_100005BFC((uint64_t *)&unk_100575460);
      uint64_t v6 = sub_100460D40();
      *(void *)(v3 + 14) = sub_10001FCAC(v6, v7, &v17);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "❌ Failed to report %{public}s playsSummary event with error=%{public}s", (uint8_t *)v3, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (qword_100570750 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_10045D310();
    sub_100009688(v8, (uint64_t)static Logger.carMetrics);
    unint64_t v9 = sub_10045D2F0();
    os_log_type_t v10 = sub_100461770();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446210;
      uint64_t v12 = sub_100460D40();
      *(void *)(v11 + 4) = sub_10001FCAC(v12, v13, &v17);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "✅ Reported %{public}s playsSummary event", (uint8_t *)v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    id v14 = [self standardUserDefaults];
    NSString v15 = sub_100460C70();
    swift_bridgeObjectRelease();
    [v14 setValue:0 forKey:v15];
  }
}

void sub_1000C9C98()
{
  qword_100574468 = 0x4194997000000000;
}

uint64_t sub_1000C9CAC()
{
  uint64_t v0 = sub_10045D310();
  sub_1000096D0(v0, static Logger.carMetrics);
  sub_100009688(v0, (uint64_t)static Logger.carMetrics);
  return sub_10045D300();
}

uint64_t static Logger.carMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100570750 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10045D310();
  uint64_t v3 = sub_100009688(v2, (uint64_t)static Logger.carMetrics);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1000C9DD0(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1000C9DF8(double **a1, uint64_t a2, uint64_t a3, double (*a4)(void))
{
  double v5 = a4();
  uint64_t v6 = *a1;
  *uint64_t v6 = v5;
  *a1 = v6 + 1;
}

uint64_t sub_1000C9E30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79616C50656D6974 && a2 == 0xEA00000000006465;
  if (v2 || (sub_1004626E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C50736B63617274 && a2 == 0xEC00000064657961 || (sub_1004626E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61745365676E6172 && a2 == 0xEE00656D69547472 || (sub_1004626E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010048FB00 || (sub_1004626E0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000010048FB20)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1004626E0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_1000CA08C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_100005BFC(&qword_100574578);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000C300(a1, a1[3]);
  sub_1000C880C();
  sub_100462940();
  if (v2) {
    return sub_100007118((uint64_t)a1);
  }
  char v22 = 0;
  sub_100462510();
  uint64_t v10 = v9;
  char v21 = 1;
  uint64_t v11 = sub_100462520();
  char v20 = 2;
  sub_100462510();
  uint64_t v13 = v12;
  sub_100005BFC(&qword_100574480);
  char v19 = 3;
  sub_1000CAE98((unint64_t *)&unk_100574580);
  sub_100462530();
  uint64_t v14 = v17[1];
  char v18 = 4;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_100462520();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100007118((uint64_t)a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v10;
  a2[1] = v11;
  a2[2] = v13;
  a2[3] = v14;
  a2[4] = v15;
  return result;
}

uint64_t sub_1000CA334@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self standardUserDefaults];
  NSString v3 = sub_100460C70();
  swift_bridgeObjectRelease();
  id v4 = [v2 valueForKey:v3];

  if (v4)
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_100019960((uint64_t)v18, (uint64_t)&v12, (uint64_t *)&unk_100574DB0);
  if (!v14)
  {
    uint64_t result = sub_1000CADE4((uint64_t)&v12);
    goto LABEL_8;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_8:
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    long long v8 = 0uLL;
    goto LABEL_9;
  }
  uint64_t v7 = v16;
  unint64_t v6 = v17;
  sub_10045B910();
  swift_allocObject();
  sub_10045B900();
  sub_1000CAE44();
  sub_10045B8F0();
  sub_1000070C0(v7, v6);
  uint64_t result = swift_release();
  long long v8 = v12;
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  uint64_t v11 = v15;
LABEL_9:
  *(_OWORD *)a1 = v8;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  return result;
}

unint64_t sub_1000CA6E4()
{
  unint64_t result = qword_100574498;
  if (!qword_100574498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574498);
  }
  return result;
}

unint64_t sub_1000CA73C()
{
  unint64_t result = qword_1005744A0;
  if (!qword_1005744A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005744A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics()
{
  return &type metadata for CarNowPlayingMetrics;
}

unsigned char *storeEnumTagSinglePayload for CarNowPlayingMetrics.EventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000CA86CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics.EventType()
{
  return &type metadata for CarNowPlayingMetrics.EventType;
}

uint64_t destroy for CarNowPlayingMetrics.Data()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CarNowPlayingMetrics.Data(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CarNowPlayingMetrics.Data(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

void *assignWithTake for CarNowPlayingMetrics.Data(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for CarNowPlayingMetrics.Data(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CarNowPlayingMetrics.Data(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics.Data()
{
  return &type metadata for CarNowPlayingMetrics.Data;
}

uint64_t type metadata accessor for CarNowPlayingMetrics.Reporter()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CarNowPlayingMetrics.Data.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000CAB3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CarNowPlayingMetrics.Data.CodingKeys()
{
  return &type metadata for CarNowPlayingMetrics.Data.CodingKeys;
}

unint64_t sub_1000CAB78()
{
  unint64_t result = qword_100574548;
  if (!qword_100574548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574548);
  }
  return result;
}

unint64_t sub_1000CABD0()
{
  unint64_t result = qword_100574550;
  if (!qword_100574550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574550);
  }
  return result;
}

unint64_t sub_1000CAC28()
{
  unint64_t result = qword_100574558;
  if (!qword_100574558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100574558);
  }
  return result;
}

uint64_t sub_1000CAC7C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000CACA8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1000CACE8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  double v6 = *(double *)(v1 + 72);
  char v7 = *(unsigned char *)(v1 + 80);
  double v8 = *(double *)(v1 + 88);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_1000117C8;
  return sub_1000C94CC(v6, v8, a1, v4, v5, v1 + 32, v7);
}

uint64_t sub_1000CADCC()
{
  return swift_deallocObject();
}

void sub_1000CADDC(uint64_t a1)
{
}

uint64_t sub_1000CADE4(uint64_t a1)
{
  uint64_t v2 = sub_100005BFC((uint64_t *)&unk_100574DB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000CAE44()
{
  unint64_t result = qword_100574570;
  if (!qword_100574570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574570);
  }
  return result;
}

uint64_t sub_1000CAE98(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005C9C(&qword_100574480);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000CAEFC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005BFC((uint64_t *)&unk_100574640);
  uint64_t v2 = (void *)sub_100462420();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000CD178(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    long long v12 = (void *)(v2[7] + 16 * result);
    *long long v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000CB020(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005BFC(&qword_100574630);
  uint64_t v2 = sub_100462420();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100019ABC(v6, (uint64_t)&v15, &qword_100574638);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1000CD178(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1000CD75C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000CB158(uint64_t a1)
{
  return sub_1000CBCB8(a1, &qword_1005745F0, &qword_1005745F8, (uint64_t (*)(uint64_t))sub_1000D9ABC);
}

unint64_t sub_1000CB180(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005BFC(&qword_1005745A8);
  uint64_t v2 = (void *)sub_100462420();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1000CD178(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000CB29C(uint64_t a1)
{
  return sub_1000CB2B4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1000CD178);
}

unint64_t sub_1000CB2B4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v4 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005BFC(&qword_100574618);
  uint64_t v4 = (void *)sub_100462420();
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain();
  uint64_t v6 = (unint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v7 = *(v6 - 3);
    uint64_t v8 = *(v6 - 2);
    uint64_t v9 = *(v6 - 1);
    unint64_t v10 = *v6;
    swift_bridgeObjectRetain();
    sub_10006922C(v9, v10);
    unint64_t result = a2(v7, v8);
    if (v12) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v13 = (void *)(v4[6] + 16 * result);
    *BOOL v13 = v7;
    v13[1] = v8;
    uint64_t v14 = (uint64_t *)(v4[7] + 16 * result);
    *uint64_t v14 = v9;
    v14[1] = v10;
    uint64_t v15 = v4[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v6 += 4;
    v4[2] = v17;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000CB3F4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005BFC((uint64_t *)&unk_100576380);
  uint64_t v2 = sub_100462420();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100019ABC(v6, (uint64_t)v15, &qword_100574650);
    unint64_t result = sub_1000D9AC0((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1000CD75C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000CB538(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005BFC(&qword_100574620);
  uint64_t v2 = (void *)sub_100462420();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000CD178(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000CB654(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005BFC(&qword_100574610);
  uint64_t v2 = (void *)sub_100462420();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000CD178(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000CB768(uint64_t a1)
{
  uint64_t v2 = sub_100005BFC(&qword_100574600);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005BFC(&qword_100574608);
  uint64_t v6 = sub_100462420();
  char v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100019ABC(v12, (uint64_t)v5, &qword_100574600);
    unint64_t result = sub_1000D9B70((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_10045C1E0();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = type metadata accessor for PushNotificationObserver.RegisteredHandler();
    unint64_t result = sub_1000CD9A8(v9, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000CB984(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005BFC(&qword_100578250);
  uint64_t v2 = (void *)sub_100462420();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_unknownObjectRetain();
    unint64_t result = sub_1000D9BF4((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000CBA90(uint64_t a1)
{
  uint64_t v2 = sub_100005BFC(&qword_1005745B0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    char v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005BFC(&qword_1005745B8);
  uint64_t v6 = sub_100462420();
  char v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100019ABC(v12, (uint64_t)v5, &qword_1005745B0);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_1000CD178(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = sub_10045CDD0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000CBC90(uint64_t a1)
{
  return sub_1000CBCB8(a1, &qword_1005745D0, &qword_1005745D8, (uint64_t (*)(uint64_t))sub_1000D9ABC);
}

unint64_t sub_1000CBCB8(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005BFC(a2);
  uint64_t v7 = sub_100462420();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100019ABC(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_1000CD75C(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000CBDE8(uint64_t a1)
{
  return sub_1000CBCB8(a1, &qword_1005745C0, &qword_1005745C8, (uint64_t (*)(uint64_t))sub_1000D9CB8);
}

void *MPModelObject.metricsDictionary.getter()
{
  objc_allocWithZone((Class)type metadata accessor for ModelObjectBackedStoreItemMetadata());
  id v1 = v0;
  uint64_t v2 = ModelObjectBackedStoreItemMetadata.init(modelObject:)(v1);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [v2 effectiveStorePlatformDictionary];

    if (v4)
    {
      uint64_t v5 = (void *)sub_100460A90();
      swift_bridgeObjectRelease();

      return v5;
    }
  }
  self;
  uint64_t v6 = (void *)swift_dynamicCastObjCClass();
  if (v6)
  {
    id v7 = [v6 anyObject];
    goto LABEL_8;
  }
  self;
  uint64_t v8 = (void *)swift_dynamicCastObjCClass();
  if (v8)
  {
    id v7 = [v8 innerObject];
LABEL_8:
    id v9 = v7;
    if (v9) {
      goto LABEL_10;
    }
  }
  id v9 = v1;
LABEL_10:
  int ObjectType = swift_getObjectType();
  id v11 = [v9 identifiers];
  uint64_t v12 = sub_1000CD2D4(ObjectType, 2, 0, v11);
  uint64_t v14 = v13;

  if (v14)
  {
    sub_100005BFC(&qword_100574590);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100466900;
    uint64_t v29 = sub_100460CB0();
    uint64_t v30 = v16;
    sub_1004620C0();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 72) = v12;
    *(void *)(inited + 80) = v14;
    uint64_t v5 = (void *)sub_1000CB3F4(inited);
    swift_bridgeObjectRelease();
    self;
    if (swift_dynamicCastObjCClass() && v5)
    {
      sub_100460CB0();
      sub_1004620C0();
      double v28 = &type metadata for String;
      *(void *)&long long v27 = sub_100460CB0();
      *((void *)&v27 + 1) = v17;
      sub_1000CD75C(&v27, v26);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1000CC3BC(v26, (uint64_t)&v29, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_1000CD76C((uint64_t)&v29);
    }
  }
  else
  {
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
    if (v5)
    {
      uint64_t v19 = MPModelPropertyPlaylistType;
      id v20 = v1;
      if ([v5 hasLoadedValueForKey:v19] && objc_msgSend(v5, "type") == (id)9)
      {
        sub_100005BFC(&qword_100574590);
        uint64_t v21 = swift_initStackObject();
        *(_OWORD *)(v21 + 16) = xmmword_1004668E0;
        sub_100460CB0();
        sub_1004620C0();
        *(void *)(v21 + 96) = &type metadata for String;
        strcpy((char *)(v21 + 72), "FavoriteSongs");
        *(_WORD *)(v21 + 86) = -4864;
        uint64_t v29 = sub_100460CB0();
        uint64_t v30 = v22;
        sub_1004620C0();
        uint64_t v23 = sub_100460CB0();
        *(void *)(v21 + 168) = &type metadata for String;
        *(void *)(v21 + 144) = v23;
        *(void *)(v21 + 152) = v24;
        uint64_t v5 = (void *)sub_1000CB3F4(v21);
        swift_bridgeObjectRelease();
      }
      else
      {

        return 0;
      }
    }
  }
  return v5;
}

void *sub_1000CC204()
{
  return MPModelObject.metricsDictionary.getter();
}

uint64_t sub_1000CC228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1000CD178(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_100221974();
LABEL_7:
    id v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (void *)(v20[7] + 16 * v14);
      void *v21 = a1;
      v21[1] = a2;
      return swift_bridgeObjectRelease();
    }
    goto LABEL_13;
  }
  sub_10021F360(v17, a5 & 1);
  unint64_t v23 = sub_1000CD178(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_19:
    uint64_t result = sub_1004627C0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  id v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_13:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  char v25 = (uint64_t *)(v20[6] + 16 * v14);
  uint64_t *v25 = a3;
  v25[1] = a4;
  double v26 = (void *)(v20[7] + 16 * v14);
  *double v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v20[2] = v29;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_1000CC3BC(_OWORD *a1, uint64_t a2, char a3)
{
  id v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_1000D9AC0(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_100221B18();
      goto LABEL_7;
    }
    sub_10021F670(v13, a3 & 1);
    unint64_t v19 = sub_1000D9AC0(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_1000CDA70(a2, (uint64_t)v21);
      return sub_1000CCEBC(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_1004627C0();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  sub_100007118((uint64_t)v17);

  return sub_1000CD75C(a1, v17);
}

uint64_t sub_1000CC508(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1000CD178(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100221E90();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_10021FC50(v15, a4 & 1);
  unint64_t v21 = sub_1000CD178(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_1004627C0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1000CC678(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = (void **)v3;
  uint64_t v8 = sub_10045C1E0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1000D9B70(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_100222048();
      goto LABEL_7;
    }
    sub_10021FF68(v17, a3 & 1);
    unint64_t v24 = sub_1000D9B70(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      unint64_t v14 = v24;
      char v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1000CCF38(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_1004627C0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7];
  uint64_t v22 = v21
      + *(void *)(*(void *)(type metadata accessor for PushNotificationObserver.RegisteredHandler() - 8) + 72)
      * v14;

  return sub_1000CDA0C(a1, v22);
}

_OWORD *sub_1000CC860(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1000CD178(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1002223BC();
      goto LABEL_7;
    }
    sub_100220480(v15, a4 & 1);
    unint64_t v21 = sub_1000CD178(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1004627C0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_100007118((uint64_t)v19);
    return sub_1000CD75C(a1, v19);
  }
LABEL_13:
  sub_1000CD014(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1000CC9B4(uint64_t a1, Swift::UInt a2, Swift::UInt a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1000D9C38(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1002225A4();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    char v20 = (Swift::UInt *)(v18[6] + 16 * v12);
    *char v20 = a2;
    v20[1] = a3;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v21 = v18[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      _OWORD v18[2] = v23;
      return result;
    }
    goto LABEL_14;
  }
  sub_100220780(result, a4 & 1);
  uint64_t result = sub_1000D9C38(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    unint64_t v12 = result;
    char v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for MPCPlayerRequestTracklistRange(0);
  uint64_t result = sub_1004627C0();
  __break(1u);
  return result;
}

id sub_1000CCAF0(uint64_t a1, void *a2, char a3)
{
  id v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1000D9BF4((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_100222738();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_unknownObjectRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100220A60(v12, a3 & 1);
  unint64_t v18 = sub_1000D9BF4((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    sub_100009854(0, &qword_100574598);
    id result = (id)sub_1004627C0();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v15[2] = v23;

  return a2;
}

uint64_t sub_1000CCC64(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = (void **)v3;
  uint64_t v8 = sub_10045C1E0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  BOOL v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1000D9B70(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1002228E4();
      goto LABEL_7;
    }
    sub_100220D38(v17, a3 & 1);
    unint64_t v28 = sub_1000D9B70(a2);
    if ((v18 & 1) == (v29 & 1))
    {
      unint64_t v14 = v28;
      uint64_t v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1000CD080(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_1004627C0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7];
  uint64_t v22 = sub_100005BFC((uint64_t *)&unk_1005745E0);
  uint64_t v23 = *(void *)(v22 - 8);
  unint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 40);
  uint64_t v25 = v22;
  uint64_t v26 = v21 + *(void *)(v23 + 72) * v14;

  return v24(v26, a1, v25);
}

unint64_t sub_1000CCE6C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t v7 = (void *)(a6[7] + 16 * result);
  void *v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

_OWORD *sub_1000CCEBC(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_1000CD75C(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

uint64_t sub_1000CCF38(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_10045C1E0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for PushNotificationObserver.RegisteredHandler();
  uint64_t result = sub_1000CD9A8(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

_OWORD *sub_1000CD014(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  long long v6 = (void *)(a5[6] + 16 * a1);
  *long long v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1000CD75C(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1000CD080(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_10045C1E0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = sub_100005BFC((uint64_t *)&unk_1005745E0);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3, v11);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

unint64_t sub_1000CD178(uint64_t a1, uint64_t a2)
{
  sub_1004628B0();
  sub_100460DA0();
  Swift::Int v4 = sub_100462900();

  return sub_1000CD1F0(a1, a2, v4);
}

unint64_t sub_1000CD1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1004626E0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1004626E0() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1000CD2D4(int a1, uint64_t a2, unsigned __int8 a3, id a4)
{
  char v5 = a2;
  if (a3 > 1u)
  {
    switch(a2)
    {
      case 1:
        id v10 = [a4 personalizedStore];
        if (!v10) {
          return 0;
        }
        BOOL v11 = v10;
        if (![v10 cloudID]) {
          goto LABEL_58;
        }
        [v11 cloudID];
        v12.super.super.Class isa = sub_100462920().super.super.isa;
        uint64_t v13 = (void *)MPStoreItemMetadataStringNormalizeStoreIDValue();
        goto LABEL_55;
      case 2:
        id v14 = [a4 library];
        if (!v14) {
          return 0;
        }
        uint64_t v15 = v14;
        if (![v14 persistentID]) {
          goto LABEL_58;
        }
        [v15 persistentID];
        v12.super.super.Class isa = sub_100462870().super.super.isa;
        uint64_t v13 = (void *)MPStoreItemMetadataStringNormalizeStoreIDValue();
        goto LABEL_55;
      case 3:
        sub_100009854(0, &qword_100574658);
        if (swift_dynamicCastMetatype()) {
          goto LABEL_25;
        }
        sub_100009854(0, &qword_100574660);
        uint64_t v8 = swift_dynamicCastMetatype();
        if (v8) {
          goto LABEL_32;
        }
        break;
      default:
        sub_100009854(0, &qword_100574658);
        uint64_t v8 = swift_dynamicCastMetatype();
        if (v8) {
          goto LABEL_25;
        }
        break;
    }
    sub_100009854(v8, qword_100574668);
    if (!swift_dynamicCastMetatype())
    {
      id v32 = [a4 universalStore];
      if (v32)
      {
        uint64_t v33 = v32;
        id v34 = [v32 subscriptionAdamID];
        id v35 = [v33 purchasedAdamID];
        id v36 = [v33 adamID];
        if (!v34 && !v35)
        {
          uint64_t v21 = (uint64_t)v36;
          if (!v36) {
            goto LABEL_57;
          }
        }
        v12.super.super.Class isa = sub_100462870().super.super.isa;
        uint64_t v13 = (void *)MPStoreItemMetadataStringNormalizeStoreIDValue();
        goto LABEL_55;
      }
      return 0;
    }
LABEL_42:
    id v25 = [a4 radio];
    if (v25)
    {
      uint64_t v26 = v25;
      id v27 = [v25 stationStringID];
      if (v27)
      {
        unint64_t v28 = v27;
        uint64_t v21 = sub_100460CB0();
        unint64_t v30 = v29;

        uint64_t v31 = HIBYTE(v30) & 0xF;
        if ((v30 & 0x2000000000000000) == 0) {
          uint64_t v31 = v21 & 0xFFFFFFFFFFFFLL;
        }
        if (v31) {
          goto LABEL_57;
        }
        swift_bridgeObjectRelease();
      }
      if (![v26 stationID])
      {
LABEL_58:
        swift_unknownObjectRelease();
        return 0;
      }
      [v26 stationID];
      v12.super.super.Class isa = sub_100462870().super.super.isa;
      uint64_t v13 = (void *)MPStoreItemMetadataStringNormalizeStoreIDValue();
LABEL_55:
      id v37 = v13;

      if (v37)
      {
        uint64_t v21 = sub_100460CB0();

LABEL_57:
        swift_unknownObjectRelease();
        return v21;
      }
      goto LABEL_58;
    }
    return 0;
  }
  sub_100009854(0, &qword_100574658);
  if (!swift_dynamicCastMetatype())
  {
    sub_100009854(0, &qword_100574660);
    if (swift_dynamicCastMetatype())
    {
      if (v5)
      {
        uint64_t v6 = MPIdentifierSet.bestLibraryIdentifier.getter();
        if (v9) {
          return v6;
        }
      }
      if ((v5 & 2) == 0) {
        return 0;
      }
LABEL_32:
      id v19 = [a4 universalStore];
      if (!v19) {
        return MPIdentifierSet.bestStoreIdentifier.getter();
      }
      id v17 = [v19 socialProfileID];
      goto LABEL_34;
    }
    sub_100009854(0, qword_100574668);
    if (!swift_dynamicCastMetatype())
    {
      if (v5)
      {
        uint64_t v6 = MPIdentifierSet.bestLibraryIdentifier.getter();
        if (v18) {
          return v6;
        }
      }
      if ((v5 & 2) == 0) {
        return 0;
      }
      return MPIdentifierSet.bestStoreIdentifier.getter();
    }
    if ((v5 & 2) == 0) {
      return 0;
    }
    goto LABEL_42;
  }
  if (v5)
  {
    uint64_t v6 = MPIdentifierSet.bestLibraryIdentifier.getter();
    if (v7) {
      return v6;
    }
  }
  if ((v5 & 2) == 0) {
    return 0;
  }
LABEL_25:
  id v16 = [a4 universalStore];
  if (!v16) {
    return MPIdentifierSet.bestStoreIdentifier.getter();
  }
  id v17 = [v16 globalPlaylistID];
LABEL_34:
  id v20 = v17;
  swift_unknownObjectRelease();
  if (!v20) {
    return MPIdentifierSet.bestStoreIdentifier.getter();
  }
  uint64_t v21 = sub_100460CB0();
  unint64_t v23 = v22;

  uint64_t v24 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0) {
    uint64_t v24 = v21 & 0xFFFFFFFFFFFFLL;
  }
  if (!v24)
  {
    swift_bridgeObjectRelease();
    return MPIdentifierSet.bestStoreIdentifier.getter();
  }
  return v21;
}

_OWORD *sub_1000CD75C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1000CD76C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000CD7C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100005BFC(&qword_100574628);
    uint64_t v3 = (void *)sub_100462420();
    for (i = (void *)(a1 + 40); ; i += 2)
    {
      unsigned __int8 v5 = *((unsigned char *)i - 8);
      uint64_t v6 = *i;
      unint64_t result = sub_1000D9B04(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_1000CD898(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_100005BFC(&qword_1005745A0);
  uint64_t v3 = (void *)sub_100462420();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  unint64_t result = sub_1000D9B04(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = (void *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    BOOL v10 = (void *)(v3[7] + 16 * result);
    void *v10 = v6;
    v10[1] = v5;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    id v14 = v9 + 3;
    unsigned __int8 v4 = *((unsigned char *)v9 - 16);
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000D9B04(v4);
    uint64_t v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000CD9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PushNotificationObserver.RegisteredHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CDA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PushNotificationObserver.RegisteredHandler();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CDA70(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000CDACC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000CDB14()
{
  return v0;
}

uint64_t sub_1000CDB34()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetricsEventSampler()
{
  return sub_100041DA8();
}

uint64_t MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:page:snapshotImpressions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, unsigned __int16 a12, uint64_t a13, uint64_t a14)
{
  uint64_t v76 = a8;
  uint64_t v71 = a6;
  uint64_t v72 = a7;
  uint64_t v68 = a5;
  int v67 = a4;
  int v70 = a12;
  long long v69 = a10;
  uint64_t v18 = sub_100005BFC(&qword_100571720);
  __chkstk_darwin(v18 - 8);
  long long v74 = &v66[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = sub_100005BFC(&qword_1005724C8);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  id v78 = (uint64_t *)&v66[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = __chkstk_darwin(v21);
  v77 = &v66[-v24];
  uint64_t v25 = __chkstk_darwin(v23);
  v75 = &v66[-v26];
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v73 = (uint64_t *)&v66[-v28];
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (uint64_t *)&v66[-v30];
  uint64_t v32 = __chkstk_darwin(v29);
  id v34 = &v66[-v33];
  __chkstk_darwin(v32);
  id v36 = (uint64_t *)&v66[-v35];
  id v37 = (int *)type metadata accessor for MetricsEvent.Click(0);
  *(unsigned char *)(a9 + v37[19]) = 0;
  uint64_t v38 = (void *)(a9 + v37[20]);
  *uint64_t v38 = 0;
  v38[1] = 0;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 17) = v67;
  sub_100019960(v68, a9 + v37[7], &qword_100571720);
  *(void *)(a9 + v37[8]) = v71;
  uint64_t v39 = (void *)(a9 + v37[9]);
  uint64_t v40 = v76;
  void *v39 = v72;
  v39[1] = v40;
  uint64_t v41 = a9 + v37[10];
  *(_OWORD *)uint64_t v41 = v69;
  *(void *)(v41 + 16) = a11;
  *(_WORD *)(v41 + 24) = v70;
  uint64_t v76 = a13;
  sub_100019ABC(a13, (uint64_t)v36, &qword_1005724C8);
  os_log_type_t v42 = (int *)type metadata accessor for MetricsEvent.Page(0);
  uint64_t v43 = *(unsigned int (**)(uint64_t *, uint64_t, int *))(*((void *)v42 - 1) + 48);
  if (v43(v36, 1, v42) == 1)
  {
    sub_100009790((uint64_t)v36, &qword_1005724C8);
    uint64_t v44 = 0;
    uint64_t v45 = 0;
  }
  else
  {
    uint64_t v44 = *v36;
    uint64_t v45 = v36[1];
    swift_bridgeObjectRetain();
    sub_1000DA97C((uint64_t)v36, type metadata accessor for MetricsEvent.Page);
  }
  os_log_type_t v46 = (void *)(a9 + v37[12]);
  void *v46 = v44;
  v46[1] = v45;
  uint64_t v47 = v76;
  sub_100019ABC(v76, (uint64_t)v34, &qword_1005724C8);
  if (v43((uint64_t *)v34, 1, v42) == 1)
  {
    sub_100009790((uint64_t)v34, &qword_1005724C8);
    uint64_t v48 = 0;
    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v48 = *((void *)v34 + 2);
    uint64_t v49 = *((void *)v34 + 3);
    swift_bridgeObjectRetain();
    sub_1000DA97C((uint64_t)v34, type metadata accessor for MetricsEvent.Page);
  }
  uint64_t v50 = (void *)(a9 + v37[13]);
  *uint64_t v50 = v48;
  v50[1] = v49;
  sub_100019ABC(v47, (uint64_t)v31, &qword_1005724C8);
  unsigned int v51 = v43(v31, 1, v42);
  uint64_t v52 = v74;
  if (v51 == 1)
  {
    sub_100009790((uint64_t)v31, &qword_1005724C8);
    uint64_t v53 = sub_10045BDE0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v52, 1, 1, v53);
  }
  else
  {
    sub_100019ABC((uint64_t)v31 + v42[6], (uint64_t)v74, &qword_100571720);
    sub_1000DA97C((uint64_t)v31, type metadata accessor for MetricsEvent.Page);
  }
  uint64_t v54 = (uint64_t)v77;
  uint64_t v55 = (uint64_t)v75;
  sub_100019960((uint64_t)v52, a9 + v37[14], &qword_100571720);
  char v56 = v73;
  sub_100019ABC(v47, (uint64_t)v73, &qword_1005724C8);
  if (v43(v56, 1, v42) == 1)
  {
    sub_100009790((uint64_t)v56, &qword_1005724C8);
    uint64_t v57 = 0;
  }
  else
  {
    uint64_t v57 = *(uint64_t *)((char *)v56 + v42[7]);
    swift_bridgeObjectRetain();
    sub_1000DA97C((uint64_t)v56, type metadata accessor for MetricsEvent.Page);
  }
  *(void *)(a9 + v37[15]) = v57;
  sub_100019ABC(v47, v55, &qword_1005724C8);
  if (v43((uint64_t *)v55, 1, v42) == 1)
  {
    sub_100009790(v55, &qword_1005724C8);
    char v58 = 1;
  }
  else
  {
    char v58 = *(unsigned char *)(v55 + v42[9]);
    sub_1000DA97C(v55, type metadata accessor for MetricsEvent.Page);
  }
  *(unsigned char *)(a9 + v37[16]) = v58;
  sub_100019ABC(v47, v54, &qword_1005724C8);
  if (v43((uint64_t *)v54, 1, v42) == 1)
  {
    sub_100009790(v54, &qword_1005724C8);
    uint64_t v59 = 0;
    uint64_t v60 = 0;
  }
  else
  {
    long long v61 = (uint64_t *)(v54 + v42[8]);
    uint64_t v59 = *v61;
    uint64_t v60 = v61[1];
    swift_bridgeObjectRetain();
    sub_1000DA97C(v54, type metadata accessor for MetricsEvent.Page);
  }
  long long v62 = (void *)(a9 + v37[18]);
  *long long v62 = v59;
  v62[1] = v60;
  long long v63 = v78;
  sub_100019960(v47, (uint64_t)v78, &qword_1005724C8);
  if (v43(v63, 1, v42) == 1)
  {
    uint64_t result = sub_100009790((uint64_t)v63, &qword_1005724C8);
    char v65 = 2;
  }
  else
  {
    char v65 = *((unsigned char *)v63 + v42[11]);
    uint64_t result = sub_1000DA97C((uint64_t)v63, type metadata accessor for MetricsEvent.Page);
  }
  *(unsigned char *)(a9 + v37[17]) = v65;
  *(void *)(a9 + v37[11]) = a14;
  return result;
}

uint64_t type metadata accessor for MetricsEvent.Click(uint64_t a1)
{
  return sub_10000A4F0(a1, qword_100574890);
}

uint64_t type metadata accessor for MetricsEvent.Page(uint64_t a1)
{
  return sub_10000A4F0(a1, qword_1005747E8);
}

uint64_t *MetricsReportingController.shared.unsafeMutableAddressor()
{
  if (qword_1005707F8 != -1) {
    swift_once();
  }
  return &static MetricsReportingController.shared;
}

uint64_t MetricsEvent.ComponentRender.init(componentIdentifier:componentType:componentAppearTime:componentPlaceholderAppearTime:componentMotionActivationTime:componentRequestTime:componentEndTime:componentInterruptTime:preloadStatus:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  *(unsigned char *)(a9 + 72) = a11;
  return result;
}

uint64_t sub_1000CE2C8(uint64_t a1)
{
  uint64_t v61 = a1;
  uint64_t v2 = sub_100005BFC(&qword_100574980);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v59 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v52 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  BOOL v10 = (char *)&v52 - v9;
  __chkstk_darwin(v8);
  BOOL v12 = (char *)&v52 - v11;
  uint64_t v13 = sub_10045C190();
  uint64_t v60 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  char v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v52 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v52 - v20;
  uint64_t v22 = (id *)(v1 + 16);
  swift_beginAccess();
  id v23 = *(id *)(v1 + 16);
  char v24 = sub_1000E2150();

  if (v24) {
    return 1;
  }
  uint64_t v53 = v19;
  uint64_t v54 = v16;
  char v56 = v12;
  uint64_t v57 = v10;
  char v58 = v21;
  uint64_t v55 = v7;
  uint64_t v26 = sub_1000E222C();
  uint64_t v25 = 1;
  if (v26)
  {
    uint64_t v27 = (void *)v26;
    double v62 = 0.0;
    char v63 = 1;
    sub_1004613B0();

    if (v63 != 1)
    {
      double v28 = v62;
      uint64_t v29 = sub_1000E206C();
      if (v29)
      {
        uint64_t v30 = (void *)v29;
        double v62 = 0.0;
        char v63 = 1;
        sub_1004613B0();

        if ((v63 & 1) == 0)
        {
          uint64_t v31 = v58;
          sub_10045C180();
          id v32 = *v22;
          uint64_t v33 = (uint64_t)v57;
          sub_1000E21F4((uint64_t)v57);

          uint64_t v34 = v60;
          uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
          uint64_t v36 = v13;
          if (v35(v33, 1, v13))
          {
            sub_100009790(v33, &qword_100574980);
            id v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
            uint64_t v38 = (uint64_t)v56;
            v37(v56, 1, 1, v13);
          }
          else
          {
            uint64_t v39 = v54;
            (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v54, v33, v13);
            sub_100009790(v33, &qword_100574980);
            uint64_t v38 = (uint64_t)v56;
            sub_10045C0E0();
            uint64_t v40 = *(void (**)(char *, uint64_t))(v34 + 8);
            v40(v39, v13);
            id v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
            v37((char *)v38, 0, 1, v13);
            if (v35(v38, 1, v13) != 1)
            {
              uint64_t v48 = v53;
              (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v53, v38, v13);
              char v49 = sub_10045C110();
              uint64_t v50 = v48;
              unsigned int v51 = v40;
              v40(v50, v13);
              uint64_t v41 = (uint64_t)v55;
              uint64_t v42 = (uint64_t)v59;
              if (v49)
              {
                v51(v31, v13);
                return 1;
              }
LABEL_11:
              unint64_t v43 = sub_1000DA470(0x20000000000001uLL);
              if (v43 == 0x20000000000000)
              {
                if (v28 >= 1.0)
                {
LABEL_13:
                  uint64_t v44 = v60;
                  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 16))(v41, v31, v36);
                  uint64_t v25 = 1;
                  v37((char *)v41, 0, 1, v36);
                  swift_beginAccess();
                  sub_100019ABC(v41, v42, &qword_100574980);
                  sub_1000E2210(v42);
                  swift_endAccess();
                  sub_100009790(v41, &qword_100574980);
                  (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v36);
                  return v25;
                }
              }
              else
              {
                double v45 = (double)v43 * 1.11022302e-16 + 0.0;
                if (v45 > 0.0 && v45 <= v28) {
                  goto LABEL_13;
                }
              }
              (*(void (**)(char *, uint64_t))(v60 + 8))(v31, v13);
              return 0;
            }
          }
          uint64_t v41 = (uint64_t)v55;
          uint64_t v42 = (uint64_t)v59;
          sub_100009790(v38, &qword_100574980);
          goto LABEL_11;
        }
      }
    }
  }
  return v25;
}

uint64_t sub_1000CE81C(uint64_t a1)
{
  uint64_t v60 = a1;
  uint64_t v2 = sub_100005BFC(&qword_100574980);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  char v58 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v51 - v6;
  uint64_t v8 = __chkstk_darwin(v5);
  BOOL v10 = (char *)&v51 - v9;
  __chkstk_darwin(v8);
  BOOL v12 = (char *)&v51 - v11;
  uint64_t v13 = sub_10045C190();
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v14 = __chkstk_darwin(v13);
  char v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v51 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v51 - v20;
  uint64_t v22 = (id *)(v1 + 16);
  swift_beginAccess();
  id v23 = *(id *)(v1 + 16);
  char v24 = sub_1000E2658();

  if (v24) {
    return 1;
  }
  uint64_t v52 = v19;
  uint64_t v53 = v16;
  uint64_t v55 = v12;
  char v56 = v10;
  uint64_t v57 = v21;
  uint64_t v54 = v7;
  uint64_t v26 = sub_1000D99E8();
  uint64_t v25 = 1;
  if (v26)
  {
    uint64_t v27 = (void *)v26;
    double v61 = 0.0;
    char v62 = 1;
    sub_1004613B0();

    if (v62 != 1)
    {
      double v28 = v61;
      uint64_t v29 = sub_1000D99E8();
      if (v29)
      {
        uint64_t v30 = (void *)v29;
        double v61 = 0.0;
        char v62 = 1;
        sub_1004613B0();

        if ((v62 & 1) == 0)
        {
          uint64_t v31 = v57;
          sub_10045C180();
          id v32 = *v22;
          uint64_t v33 = (uint64_t)v56;
          sub_1000E2674((uint64_t)v56);

          uint64_t v34 = v59;
          uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
          uint64_t v36 = v13;
          if (v35(v33, 1, v13))
          {
            sub_100009790(v33, &qword_100574980);
            id v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
            uint64_t v38 = (uint64_t)v55;
            v37(v55, 1, 1, v13);
          }
          else
          {
            uint64_t v39 = v53;
            (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v53, v33, v13);
            sub_100009790(v33, &qword_100574980);
            uint64_t v38 = (uint64_t)v55;
            sub_10045C0E0();
            uint64_t v40 = *(void (**)(char *, uint64_t))(v34 + 8);
            v40(v39, v13);
            id v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
            v37((char *)v38, 0, 1, v13);
            if (v35(v38, 1, v13) != 1)
            {
              uint64_t v47 = v52;
              (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v52, v38, v13);
              char v48 = sub_10045C110();
              char v49 = v47;
              uint64_t v50 = v40;
              v40(v49, v13);
              uint64_t v41 = (uint64_t)v54;
              uint64_t v42 = (uint64_t)v58;
              if (v48)
              {
                v50(v31, v13);
                return 1;
              }
LABEL_11:
              unint64_t v43 = sub_1000DA470(0x20000000000001uLL);
              if (v43 == 0x20000000000000)
              {
                if (v28 < 1.0)
                {
LABEL_17:
                  (*(void (**)(char *, uint64_t))(v59 + 8))(v31, v13);
                  return 0;
                }
              }
              else
              {
                double v44 = (double)v43 * 1.11022302e-16 + 0.0;
                if (v44 <= 0.0 || v44 > v28) {
                  goto LABEL_17;
                }
              }
              uint64_t v45 = v59;
              (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v41, v31, v36);
              uint64_t v25 = 1;
              v37((char *)v41, 0, 1, v36);
              swift_beginAccess();
              sub_100019ABC(v41, v42, &qword_100574980);
              sub_1000E278C(v42);
              swift_endAccess();
              sub_100009790(v41, &qword_100574980);
              (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v36);
              return v25;
            }
          }
          uint64_t v41 = (uint64_t)v54;
          uint64_t v42 = (uint64_t)v58;
          sub_100009790(v38, &qword_100574980);
          goto LABEL_11;
        }
      }
    }
  }
  return v25;
}

uint64_t MetricsEvent.TargetType.init(contentItem:)(void *a1)
{
  switch((unint64_t)[a1 itemType])
  {
    case 1uLL:

      uint64_t result = 0;
      break;
    case 2uLL:

      uint64_t result = 3;
      break;
    case 4uLL:

      uint64_t result = 16;
      break;
    case 7uLL:

      uint64_t result = 20;
      break;
    default:
      sub_100461750();
      sub_100005BFC(&qword_1005746F0);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_100466900;
      [a1 itemType];
      type metadata accessor for MPModelStoreBrowseContentItemType(0);
      uint64_t v4 = sub_100460D40();
      uint64_t v6 = v5;
      *(void *)(v3 + 56) = &type metadata for String;
      *(void *)(v3 + 64) = sub_1000D2EC0();
      *(void *)(v3 + 32) = v4;
      *(void *)(v3 + 40) = v6;
      sub_100009854(0, (unint64_t *)&qword_100574700);
      uint64_t v7 = (void *)sub_100461E70();
      sub_10045D1E0();

      swift_bridgeObjectRelease();
      uint64_t result = 24;
      break;
  }
  return result;
}

unint64_t MetricsEvent.TargetType.rawValue.getter(char a1)
{
  unint64_t result = 0x6D75626C41;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7465446D75626C41;
      break;
    case 2:
      unint64_t result = 7368801;
      break;
    case 3:
      unint64_t result = 0x747369747241;
      break;
    case 4:
      unint64_t result = 0x72656E6E6162;
      break;
    case 5:
      unint64_t result = 0x6E6F74747562;
      break;
    case 6:
      unint64_t result = 0x6954656C62627562;
      break;
    case 7:
      unint64_t result = 1685217603;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0x7265746C6966;
      break;
    case 10:
      unint64_t result = 0x7449726564616548;
      break;
    case 11:
      unint64_t result = 0x7473694C746E6948;
      break;
    case 12:
      unint64_t result = 7955819;
      break;
    case 13:
      unint64_t result = 1802398060;
      break;
    case 14:
      unint64_t result = 0x6E694C636972796CLL;
      break;
    case 15:
      unint64_t result = 0x6D6574497473694CLL;
      break;
    case 16:
    case 17:
      unint64_t result = 0x7473696C79616C50;
      break;
    case 18:
      unint64_t result = 0x4C746E65746E6F43;
      break;
    case 19:
      unint64_t result = 0x726564696C73;
      break;
    case 20:
      unint64_t result = 1735290707;
      break;
    case 21:
      unint64_t result = 0x6C6C65737055;
      break;
    case 22:
      unint64_t result = 0x657449666C656853;
      break;
    case 23:
      unint64_t result = 0x6D65744964697247;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000CF1F4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1000D1CFC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MetricsEvent.TargetType.rawValue.getter);
}

Swift::Int sub_1000CF20C(uint64_t a1, uint64_t a2)
{
  return sub_1000D1DAC(a1, a2, (void (*)(uint64_t))MetricsEvent.TargetType.rawValue.getter);
}

uint64_t sub_1000CF224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D1E30(a1, a2, a3, (void (*)(void))MetricsEvent.TargetType.rawValue.getter);
}

Swift::Int sub_1000CF23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D1EA0(a1, a2, a3, (void (*)(uint64_t))MetricsEvent.TargetType.rawValue.getter);
}

uint64_t sub_1000CF254@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s9MusicCore12MetricsEventV10TargetTypeO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_1000CF284@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = MetricsEvent.TargetType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t MetricsEvent.Page.init(pageIdentifier:pageType:pageURL:pageDetails:searchTerm:pageDisplayType:extRefUrl:attenuationAvailable:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, char a10, uint64_t a11, uint64_t a12, char a13)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  uint64_t v18 = (int *)type metadata accessor for MetricsEvent.Page(0);
  uint64_t result = sub_100019960(a5, (uint64_t)a9 + v18[6], &qword_100571720);
  *(void *)((char *)a9 + v18[7]) = a6;
  uint64_t v20 = (void *)((char *)a9 + v18[8]);
  *uint64_t v20 = a7;
  v20[1] = a8;
  *((unsigned char *)a9 + v18[9]) = a10 & 1;
  uint64_t v21 = (void *)((char *)a9 + v18[10]);
  void *v21 = a11;
  v21[1] = a12;
  *((unsigned char *)a9 + v18[11]) = a13;
  return result;
}

uint64_t static MetricsEvent.Page.contextualActionMenu(storeID:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  if (a2) {
    unint64_t v4 = a1;
  }
  else {
    unint64_t v4 = 0xD000000000000014;
  }
  if (a2) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = 0x800000010048FC30;
  }
  uint64_t v6 = (int *)type metadata accessor for MetricsEvent.Page(0);
  uint64_t v7 = (char *)a3 + v6[6];
  uint64_t v8 = sub_10045BDE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *a3 = v4;
  a3[1] = v5;
  a3[2] = 0xD000000000000014;
  a3[3] = 0x800000010048FC30;
  *(unint64_t *)((char *)a3 + v6[7]) = 0;
  uint64_t v9 = (unint64_t *)((char *)a3 + v6[8]);
  *uint64_t v9 = 0;
  v9[1] = 0;
  *((unsigned char *)a3 + v6[9]) = 1;
  BOOL v10 = (unint64_t *)((char *)a3 + v6[10]);
  void *v10 = 0;
  v10[1] = 0;
  *((unsigned char *)a3 + v6[11]) = 2;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1000CF47C()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryMenuSelection);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryMenuSelection);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000014;
  v1[1] = 0x8000000100490210;
  v1[2] = 0x7972617262694CLL;
  v1[3] = 0xE700000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  unint64_t v5 = (void *)((char *)v1 + v0[8]);
  *unint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryMenuSelection.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_100570758, (uint64_t)static MetricsEvent.Page.libraryMenuSelection);
}

uint64_t static MetricsEvent.Page.libraryMenuSelection.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_100570758, (uint64_t)static MetricsEvent.Page.libraryMenuSelection, a1);
}

uint64_t sub_1000CF5C8()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryMenuEdit);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryMenuEdit);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0x4D7972617262694CLL;
  v1[1] = 0xEF74696445756E65;
  v1[2] = 0x72656B636950;
  v1[3] = 0xE600000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  unint64_t v5 = (void *)((char *)v1 + v0[8]);
  *unint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryMenuEdit.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_100570760, (uint64_t)static MetricsEvent.Page.libraryMenuEdit);
}

uint64_t sub_1000CF6F4(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for MetricsEvent.Page(0);

  return sub_100009688(v3, a2);
}

uint64_t static MetricsEvent.Page.libraryMenuEdit.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_100570760, (uint64_t)static MetricsEvent.Page.libraryMenuEdit, a1);
}

uint64_t sub_1000CF76C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for MetricsEvent.Page(0);
  uint64_t v6 = sub_100009688(v5, a2);

  return sub_1000DA8B0(v6, a3);
}

uint64_t sub_1000CF7CC()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryMadeForYou);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryMadeForYou);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0x59726F466564614DLL;
  v1[1] = 0xEA0000000000756FLL;
  v1[2] = 0x7972617262694CLL;
  v1[3] = 0xE700000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryMadeForYou.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_100570768, (uint64_t)static MetricsEvent.Page.libraryMadeForYou);
}

uint64_t static MetricsEvent.Page.libraryMadeForYou.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_100570768, (uint64_t)static MetricsEvent.Page.libraryMadeForYou, a1);
}

uint64_t sub_1000CF918()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryAlbumsList);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryAlbumsList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000011;
  v1[1] = 0x80000001004901F0;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryAlbumsList.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_100570770, (uint64_t)static MetricsEvent.Page.libraryAlbumsList);
}

uint64_t static MetricsEvent.Page.libraryAlbumsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_100570770, (uint64_t)static MetricsEvent.Page.libraryAlbumsList, a1);
}

uint64_t sub_1000CFA5C()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryArtistsList);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryArtistsList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000012;
  v1[1] = 0x80000001004901D0;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryArtistsList.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_100570778, (uint64_t)static MetricsEvent.Page.libraryArtistsList);
}

uint64_t static MetricsEvent.Page.libraryArtistsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_100570778, (uint64_t)static MetricsEvent.Page.libraryArtistsList, a1);
}

uint64_t sub_1000CFBA0()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryCompilationsList);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryCompilationsList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000017;
  v1[1] = 0x80000001004901B0;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryCompilationsList.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_100570780, (uint64_t)static MetricsEvent.Page.libraryCompilationsList);
}

uint64_t static MetricsEvent.Page.libraryCompilationsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_100570780, (uint64_t)static MetricsEvent.Page.libraryCompilationsList, a1);
}

uint64_t sub_1000CFCE4()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryComposersList);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryComposersList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000014;
  v1[1] = 0x8000000100490190;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryComposersList.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_100570788, (uint64_t)static MetricsEvent.Page.libraryComposersList);
}

uint64_t static MetricsEvent.Page.libraryComposersList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_100570788, (uint64_t)static MetricsEvent.Page.libraryComposersList, a1);
}

uint64_t sub_1000CFE28()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryGenresList);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryGenresList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000011;
  v1[1] = 0x8000000100490170;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryGenresList.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_100570790, (uint64_t)static MetricsEvent.Page.libraryGenresList);
}

uint64_t static MetricsEvent.Page.libraryGenresList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_100570790, (uint64_t)static MetricsEvent.Page.libraryGenresList, a1);
}

uint64_t sub_1000CFF6C()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryMusicVideosList);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryMusicVideosList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000016;
  v1[1] = 0x8000000100490150;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryMusicVideosList.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_100570798, (uint64_t)static MetricsEvent.Page.libraryMusicVideosList);
}

uint64_t static MetricsEvent.Page.libraryMusicVideosList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_100570798, (uint64_t)static MetricsEvent.Page.libraryMusicVideosList, a1);
}

uint64_t sub_1000D00B0()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryPlaylistsList);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryPlaylistsList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000014;
  v1[1] = 0x8000000100490130;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryPlaylistsList.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_1005707A0, (uint64_t)static MetricsEvent.Page.libraryPlaylistsList);
}

uint64_t static MetricsEvent.Page.libraryPlaylistsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_1005707A0, (uint64_t)static MetricsEvent.Page.libraryPlaylistsList, a1);
}

uint64_t sub_1000D01F4()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.librarySongsList);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.librarySongsList);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000010;
  v1[1] = 0x8000000100490110;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.librarySongsList.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_1005707A8, (uint64_t)static MetricsEvent.Page.librarySongsList);
}

uint64_t static MetricsEvent.Page.librarySongsList.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_1005707A8, (uint64_t)static MetricsEvent.Page.librarySongsList, a1);
}

uint64_t sub_1000D0338()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryRecentlyAdded);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryRecentlyAdded);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000018;
  v1[1] = 0x80000001004900F0;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryRecentlyAdded.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_1005707B0, (uint64_t)static MetricsEvent.Page.libraryRecentlyAdded);
}

uint64_t static MetricsEvent.Page.libraryRecentlyAdded.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_1005707B0, (uint64_t)static MetricsEvent.Page.libraryRecentlyAdded, a1);
}

uint64_t sub_1000D047C()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryRecentlyDownloaded);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryRecentlyDownloaded);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD00000000000001DLL;
  v1[1] = 0x80000001004900D0;
  v1[2] = 1836019538;
  v1[3] = 0xE400000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryRecentlyDownloaded.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_1005707B8, (uint64_t)static MetricsEvent.Page.libraryRecentlyDownloaded);
}

uint64_t static MetricsEvent.Page.libraryRecentlyDownloaded.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_1005707B8, (uint64_t)static MetricsEvent.Page.libraryRecentlyDownloaded, a1);
}

uint64_t sub_1000D05C0()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryAlbumDetail);
  uint64_t v1 = sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryAlbumDetail);
  uint64_t v2 = v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  strcpy((char *)v1, "LibraryAlbum");
  *(unsigned char *)(v1 + 13) = 0;
  *(_WORD *)(v1 + 14) = -5120;
  *(void *)(v1 + 16) = 0x6D75626C41;
  *(void *)(v1 + 24) = 0xE500000000000000;
  *(void *)(v1 + v0[7]) = 0;
  uint64_t v5 = (void *)(v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(unsigned char *)(v1 + v0[9]) = 1;
  uint64_t v6 = (void *)(v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(unsigned char *)(v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryAlbumDetail.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_1005707C0, (uint64_t)static MetricsEvent.Page.libraryAlbumDetail);
}

uint64_t static MetricsEvent.Page.libraryAlbumDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_1005707C0, (uint64_t)static MetricsEvent.Page.libraryAlbumDetail, a1);
}

uint64_t sub_1000D070C()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryArtistDetail);
  uint64_t v1 = sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryArtistDetail);
  uint64_t v2 = v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  strcpy((char *)v1, "LibraryArtist");
  *(_WORD *)(v1 + 14) = -4864;
  *(void *)(v1 + 16) = 0x747369747241;
  *(void *)(v1 + 24) = 0xE600000000000000;
  *(void *)(v1 + v0[7]) = 0;
  uint64_t v5 = (void *)(v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(unsigned char *)(v1 + v0[9]) = 1;
  uint64_t v6 = (void *)(v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(unsigned char *)(v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryArtistDetail.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_1005707C8, (uint64_t)static MetricsEvent.Page.libraryArtistDetail);
}

uint64_t static MetricsEvent.Page.libraryArtistDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_1005707C8, (uint64_t)static MetricsEvent.Page.libraryArtistDetail, a1);
}

uint64_t sub_1000D085C()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryPlaylistDetail);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryPlaylistDetail);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0x507972617262694CLL;
  v1[1] = 0xEF7473696C79616CLL;
  v1[2] = 0x7473696C79616C50;
  v1[3] = 0xE800000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryPlaylistDetail.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_1005707D0, (uint64_t)static MetricsEvent.Page.libraryPlaylistDetail);
}

uint64_t static MetricsEvent.Page.libraryPlaylistDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_1005707D0, (uint64_t)static MetricsEvent.Page.libraryPlaylistDetail, a1);
}

uint64_t sub_1000D09B0()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryComposerDetail);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryComposerDetail);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0x437972617262694CLL;
  v1[1] = 0xEF7265736F706D6FLL;
  v1[2] = 0x747369747241;
  v1[3] = 0xE600000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryComposerDetail.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_1005707D8, (uint64_t)static MetricsEvent.Page.libraryComposerDetail);
}

uint64_t static MetricsEvent.Page.libraryComposerDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_1005707D8, (uint64_t)static MetricsEvent.Page.libraryComposerDetail, a1);
}

uint64_t sub_1000D0B00()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.libraryGenreDetail);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.libraryGenreDetail);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0xD000000000000012;
  v1[1] = 0x80000001004900B0;
  v1[2] = 0x65726E6547;
  v1[3] = 0xE500000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 1;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.libraryGenreDetail.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_1005707E0, (uint64_t)static MetricsEvent.Page.libraryGenreDetail);
}

uint64_t static MetricsEvent.Page.libraryGenreDetail.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_1005707E0, (uint64_t)static MetricsEvent.Page.libraryGenreDetail, a1);
}

uint64_t sub_1000D0C48()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.playlistCreation);
  uint64_t v1 = (void *)sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.playlistCreation);
  uint64_t v2 = (char *)v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *uint64_t v1 = 0x6C79616C5077654ELL;
  v1[1] = 0xEB00000000747369;
  v1[2] = 0x7473696C79616C50;
  v1[3] = 0xE800000000000000;
  *(void *)((char *)v1 + v0[7]) = 0;
  uint64_t v5 = (void *)((char *)v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *((unsigned char *)v1 + v0[9]) = 0;
  uint64_t v6 = (void *)((char *)v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.playlistCreation.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_1005707E8, (uint64_t)static MetricsEvent.Page.playlistCreation);
}

uint64_t static MetricsEvent.Page.playlistCreation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_1005707E8, (uint64_t)static MetricsEvent.Page.playlistCreation, a1);
}

uint64_t sub_1000D0D94()
{
  uint64_t v0 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_1000096D0((uint64_t)v0, static MetricsEvent.Page.playlistPicker);
  uint64_t v1 = sub_100009688((uint64_t)v0, (uint64_t)static MetricsEvent.Page.playlistPicker);
  uint64_t v2 = v1 + v0[6];
  uint64_t v3 = sub_10045BDE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  strcpy((char *)v1, "PlaylistPicker");
  *(unsigned char *)(v1 + 15) = -18;
  *(void *)(v1 + 16) = 0x72656B636950;
  *(void *)(v1 + 24) = 0xE600000000000000;
  *(void *)(v1 + v0[7]) = 0;
  uint64_t v5 = (void *)(v1 + v0[8]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(unsigned char *)(v1 + v0[9]) = 0;
  uint64_t v6 = (void *)(v1 + v0[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(unsigned char *)(v1 + v0[11]) = 2;
  return result;
}

uint64_t MetricsEvent.Page.playlistPicker.unsafeMutableAddressor()
{
  return sub_1000CF6F4(&qword_1005707F0, (uint64_t)static MetricsEvent.Page.playlistPicker);
}

uint64_t static MetricsEvent.Page.playlistPicker.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000CF76C(&qword_1005707F0, (uint64_t)static MetricsEvent.Page.playlistPicker, a1);
}

uint64_t MetricsEvent.Page.metricsPageProperties.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = sub_100005BFC(&qword_100571720);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v6 = v1[1];
  uint64_t v8 = v1[3];
  uint64_t v19 = v1[2];
  uint64_t v9 = (int *)type metadata accessor for MetricsEvent.Page(0);
  sub_100019ABC((uint64_t)v1 + v9[6], (uint64_t)v5, &qword_100571720);
  uint64_t v10 = *(uint64_t *)((char *)v1 + v9[7]);
  uint64_t v11 = (uint64_t *)((char *)v1 + v9[10]);
  uint64_t v12 = v11[1];
  uint64_t v20 = *v11;
  uint64_t v13 = (int *)type metadata accessor for MetricsPageProperties();
  uint64_t v14 = (uint64_t)a1 + v13[6];
  uint64_t v15 = sub_10045BDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = v13[7];
  *(void *)((char *)a1 + v16) = 0;
  uint64_t v17 = (void *)((char *)a1 + v13[8]);
  *uint64_t v17 = 0;
  v17[1] = 0;
  *a1 = v7;
  a1[1] = v6;
  a1[2] = v19;
  a1[3] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000DA914((uint64_t)v5, v14);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v16) = v10;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v17 = v20;
  v17[1] = v12;
  return result;
}

BOOL MetricsEvent.Page.DisplayType.init(rawValue:)(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100523750;
  v6._object = a2;
  Swift::Int v4 = sub_100462490(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

uint64_t MetricsEvent.Page.DisplayType.rawValue.getter()
{
  return 0x7765695664726163;
}

Swift::Int sub_1000D10D4()
{
  return sub_100462900();
}

uint64_t sub_1000D1128()
{
  return sub_100460DA0();
}

Swift::Int sub_1000D1140()
{
  return sub_100462900();
}

uint64_t sub_1000D1190@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._countAndFlagsBits = *a1;
  Swift::OpaquePointer v3 = (void *)a1[1];
  v4._rawValue = &off_100523788;
  v7._object = v3;
  Swift::Int v5 = sub_100462490(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_1000D11E4(void *a1@<X8>)
{
  *a1 = 0x7765695664726163;
  a1[1] = 0xE800000000000000;
}

uint64_t MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:pageIdentifier:pageType:pageURL:pageDetails:pageDisplayType:attenuationAvailable:snapshotImpressions:searchTerm:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, __int16 a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v29 = (int *)type metadata accessor for MetricsEvent.Click(0);
  *(unsigned char *)(a9 + v29[19]) = 0;
  uint64_t v30 = (void *)(a9 + v29[20]);
  void *v30 = 0;
  v30[1] = 0;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 17) = a4;
  sub_100019960(a5, a9 + v29[7], &qword_100571720);
  *(void *)(a9 + v29[8]) = a6;
  uint64_t v31 = (void *)(a9 + v29[9]);
  *uint64_t v31 = a7;
  v31[1] = a8;
  uint64_t v32 = a9 + v29[10];
  *(_OWORD *)uint64_t v32 = a10;
  *(void *)(v32 + 16) = a11;
  *(_WORD *)(v32 + 24) = a12;
  uint64_t v33 = (void *)(a9 + v29[12]);
  *uint64_t v33 = a13;
  v33[1] = a14;
  uint64_t v34 = (void *)(a9 + v29[13]);
  void *v34 = a15;
  v34[1] = a16;
  uint64_t result = sub_100019960(a17, a9 + v29[14], &qword_100571720);
  *(void *)(a9 + v29[15]) = a18;
  *(unsigned char *)(a9 + v29[16]) = a19 & 1;
  *(unsigned char *)(a9 + v29[17]) = a20;
  *(void *)(a9 + v29[11]) = a21;
  uint64_t v36 = (void *)(a9 + v29[18]);
  *uint64_t v36 = a22;
  v36[1] = a23;
  return result;
}

uint64_t MetricsEvent.Click.init(targetIdentifier:targetType:actionType:actionURL:locations:actionContext:actionDetails:metricsPageProperties:snapshotImpressions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, uint64_t a11, unsigned __int16 a12, uint64_t *a13, uint64_t a14)
{
  uint64_t v43 = a7;
  uint64_t v44 = a8;
  uint64_t v38 = a5;
  int v36 = a3;
  int v37 = a4;
  int v42 = a12;
  uint64_t v40 = a11;
  uint64_t v41 = a6;
  long long v39 = a10;
  uint64_t v45 = a14;
  uint64_t v17 = sub_100005BFC(&qword_100571720);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a13;
  uint64_t v20 = a13[1];
  uint64_t v22 = a13[3];
  uint64_t v35 = a13[2];
  uint64_t v23 = type metadata accessor for MetricsPageProperties();
  sub_100019ABC((uint64_t)a13 + *(int *)(v23 + 24), (uint64_t)v19, &qword_100571720);
  uint64_t v24 = *(uint64_t *)((char *)a13 + *(int *)(v23 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000DA97C((uint64_t)a13, (uint64_t (*)(void))type metadata accessor for MetricsPageProperties);
  uint64_t v25 = (int *)type metadata accessor for MetricsEvent.Click(0);
  *(unsigned char *)(a9 + v25[19]) = 0;
  uint64_t v26 = (void *)(a9 + v25[20]);
  *uint64_t v26 = 0;
  v26[1] = 0;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = v36;
  *(unsigned char *)(a9 + 17) = v37;
  sub_100019960(v38, a9 + v25[7], &qword_100571720);
  *(void *)(a9 + v25[8]) = v41;
  uint64_t v27 = (void *)(a9 + v25[9]);
  uint64_t v28 = v44;
  *uint64_t v27 = v43;
  v27[1] = v28;
  uint64_t v29 = a9 + v25[10];
  *(_OWORD *)uint64_t v29 = v39;
  *(void *)(v29 + 16) = v40;
  *(_WORD *)(v29 + 24) = v42;
  uint64_t v30 = (void *)(a9 + v25[12]);
  void *v30 = v21;
  v30[1] = v20;
  uint64_t v31 = (void *)(a9 + v25[13]);
  *uint64_t v31 = v35;
  v31[1] = v22;
  uint64_t result = sub_100019960((uint64_t)v19, a9 + v25[14], &qword_100571720);
  *(void *)(a9 + v25[15]) = v24;
  *(unsigned char *)(a9 + v25[16]) = 1;
  *(unsigned char *)(a9 + v25[17]) = 2;
  *(void *)(a9 + v25[11]) = v45;
  uint64_t v33 = (void *)(a9 + v25[18]);
  *uint64_t v33 = 0;
  v33[1] = 0;
  return result;
}

uint64_t MetricsEvent.Click.isSharedContent.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MetricsEvent.Click(0) + 76));
}

uint64_t MetricsEvent.Click.isSharedContent.setter(char a1)
{
  uint64_t result = type metadata accessor for MetricsEvent.Click(0);
  *(unsigned char *)(v1 + *(int *)(result + 76)) = a1;
  return result;
}

CFRange (__swiftcall *MetricsEvent.Click.isSharedContent.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t MetricsEvent.Click.dataRecoDataSetId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MetricsEvent.Click(0) + 80));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsEvent.Click.dataRecoDataSetId.setter(uint64_t a1, uint64_t a2)
{
  Swift::Int v5 = (void *)(v2 + *(int *)(type metadata accessor for MetricsEvent.Click(0) + 80));
  uint64_t result = swift_bridgeObjectRelease();
  *Swift::Int v5 = a1;
  v5[1] = a2;
  return result;
}

CFRange (__swiftcall *MetricsEvent.Click.dataRecoDataSetId.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t MetricsEvent.Click.ActionType.rawValue.getter(char a1)
{
  uint64_t result = 0x6E6F69746361;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6574617669746361;
      break;
    case 2:
      uint64_t result = 6579297;
      break;
    case 3:
      uint64_t result = 0x62694C6F54646461;
      break;
    case 4:
      uint64_t result = 0x6575516F54646461;
      break;
    case 5:
      uint64_t result = 0x7473756A6461;
      break;
    case 6:
      uint64_t result = 0x616C506E69676562;
      break;
    case 7:
      uint64_t result = 0x6C65636E6163;
      break;
    case 8:
      uint64_t result = 0x726F62616C6C6F63;
      break;
    case 9:
      uint64_t result = 0x657461657263;
      break;
    case 10:
      uint64_t result = 0x7453657461657263;
      break;
    case 11:
      uint64_t result = 0xD000000000000015;
      break;
    case 12:
      uint64_t result = 0x64616F6C6E776F64;
      break;
    case 13:
      uint64_t result = 0x6176697463616564;
      break;
    case 14:
      uint64_t result = 0x6574656C6564;
      break;
    case 15:
      uint64_t result = 0x7463656C65736564;
      break;
    case 16:
      uint64_t result = 0x7373696D736964;
      break;
    case 17:
      uint64_t result = 0x657469726F766166;
      break;
    case 18:
      uint64_t result = 0x69726F7661666E75;
      break;
    case 19:
      uint64_t result = 1702125928;
      break;
    case 20:
      uint64_t result = 0x657461686E75;
      break;
    case 21:
      uint64_t result = 1953393000;
      break;
    case 22:
      uint64_t result = 0x7475706E69;
      break;
    case 23:
      uint64_t result = 0x657461676976616ELL;
      break;
    case 24:
      uint64_t result = 2036427888;
      break;
    case 25:
      uint64_t v3 = 0x664179616C70;
      goto LABEL_29;
    case 26:
      uint64_t v3 = 0x614C79616C70;
LABEL_29:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6574000000000000;
      break;
    case 27:
      uint64_t result = 0x7478654E79616C70;
      break;
    case 28:
      uint64_t result = 0x7463616572;
      break;
    case 29:
      uint64_t result = 0x6F4465766F6D6572;
      break;
    case 30:
      uint64_t result = 0xD00000000000001BLL;
      break;
    case 31:
      uint64_t result = 0xD000000000000012;
      break;
    case 32:
      uint64_t result = 0x6F4374726F706572;
      break;
    case 33:
      uint64_t result = 0x686372616573;
      break;
    case 34:
      uint64_t result = 1801807219;
      break;
    case 35:
      uint64_t result = 0x7463656C6573;
      break;
    case 36:
      uint64_t result = 0x6572616873;
      break;
    case 37:
      uint64_t result = 0x694C646572616873;
      break;
    case 38:
      uint64_t result = 0x72794C6572616873;
      break;
    case 39:
      uint64_t result = 0x6972794C776F6873;
      break;
    case 40:
      uint64_t result = 0x74696D627573;
      break;
    case 41:
      uint64_t result = 0x656C67676F74;
      break;
    case 42:
      uint64_t result = 0x75626C4177656976;
      break;
    case 43:
      uint64_t result = 0x6974724177656976;
      break;
    case 44:
      uint64_t result = 0x6465724377656976;
      break;
    case 45:
      uint64_t result = 0x79616C5077656976;
      break;
    case 46:
      uint64_t result = 0x77656976657270;
      break;
    case 47:
      uint64_t result = 0x6573756170;
      break;
    case 48:
      uint64_t result = 0x68736572666572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000D1CE4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1000D1CFC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MetricsEvent.Click.ActionType.rawValue.getter);
}

uint64_t sub_1000D1CFC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1004626E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

Swift::Int sub_1000D1D94(uint64_t a1, uint64_t a2)
{
  return sub_1000D1DAC(a1, a2, (void (*)(uint64_t))MetricsEvent.Click.ActionType.rawValue.getter);
}

Swift::Int sub_1000D1DAC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_1004628B0();
  a3(v5);
  sub_100460DA0();
  swift_bridgeObjectRelease();
  return sub_100462900();
}

uint64_t sub_1000D1E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D1E30(a1, a2, a3, (void (*)(void))MetricsEvent.Click.ActionType.rawValue.getter);
}

uint64_t sub_1000D1E30(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  sub_100460DA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000D1E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D1EA0(a1, a2, a3, (void (*)(uint64_t))MetricsEvent.Click.ActionType.rawValue.getter);
}

Swift::Int sub_1000D1EA0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_1004628B0();
  a4(v6);
  sub_100460DA0();
  swift_bridgeObjectRelease();
  return sub_100462900();
}

uint64_t sub_1000D1F08@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s9MusicCore12MetricsEventV5ClickV10ActionTypeO8rawValueAGSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1000D1F38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MetricsEvent.Click.ActionType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t MetricsEvent.Click.ActionContext.rawValue.getter(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = 0x6E6F74747562;
  switch(a2)
  {
    case 0uLL:
      break;
    case 1uLL:
      unint64_t v2 = 0x6472616F6279656BLL;
      break;
    case 2uLL:
      unint64_t v2 = 0x79726F7473;
      break;
    case 3uLL:
      unint64_t v2 = 1701998445;
      break;
    case 4uLL:
      unint64_t v2 = 0x636972796CLL;
      break;
    case 5uLL:
      unint64_t v2 = 0x6B63617274;
      break;
    case 6uLL:
    case 9uLL:
      unint64_t v2 = 0xD000000000000010;
      break;
    case 7uLL:
      unint64_t v2 = 0xD000000000000015;
      break;
    case 8uLL:
      unint64_t v2 = 0x6E654D6570697773;
      break;
    default:
      unint64_t v2 = a1;
      break;
  }
  sub_1000442C8(a1, a2);
  return v2;
}

void MetricsEvent.Click.ActionContext.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(a3)
  {
    case 0:
      Swift::UInt v3 = 0;
      goto LABEL_15;
    case 1:
      Swift::UInt v3 = 1;
      goto LABEL_15;
    case 2:
      Swift::UInt v3 = 2;
      goto LABEL_15;
    case 3:
      Swift::UInt v3 = 3;
      goto LABEL_15;
    case 4:
      Swift::UInt v3 = 4;
      goto LABEL_15;
    case 5:
      Swift::UInt v3 = 5;
      goto LABEL_15;
    case 6:
      Swift::UInt v3 = 6;
      goto LABEL_15;
    case 7:
      Swift::UInt v3 = 7;
      goto LABEL_15;
    case 8:
      Swift::UInt v3 = 8;
      goto LABEL_15;
    case 9:
      Swift::UInt v3 = 10;
LABEL_15:
      sub_1004628C0(v3);
      break;
    default:
      sub_1004628C0(9uLL);
      sub_100460DA0();
      break;
  }
}

Swift::Int MetricsEvent.Click.ActionContext.hashValue.getter(uint64_t a1, uint64_t a2)
{
  sub_1004628B0();
  MetricsEvent.Click.ActionContext.hash(into:)((uint64_t)v5, a1, a2);
  return sub_100462900();
}

Swift::Int sub_1000D2220()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1004628B0();
  MetricsEvent.Click.ActionContext.hash(into:)((uint64_t)v4, v1, v2);
  return sub_100462900();
}

void sub_1000D226C(uint64_t a1)
{
  MetricsEvent.Click.ActionContext.hash(into:)(a1, *v1, v1[1]);
}

Swift::Int sub_1000D2274()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_1004628B0();
  MetricsEvent.Click.ActionContext.hash(into:)((uint64_t)v4, v1, v2);
  return sub_100462900();
}

uint64_t sub_1000D22BC(uint64_t *a1, uint64_t a2)
{
  return _s9MusicCore12MetricsEventV5ClickV13ActionContextO21__derived_enum_equalsySbAG_AGtFZ_0(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

unint64_t MetricsEvent.Click.ActionDetails.dictionary.getter(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1;
  switch(BYTE1(a4))
  {
    case 1:
      if (!a1)
      {
        unint64_t v19 = sub_1000CAEFC((uint64_t)&off_100522610);
        goto LABEL_37;
      }
      self;
      uint64_t v10 = swift_dynamicCastObjCClass();
      if (v10)
      {
        uint64_t v11 = (void *)v10;
        id v12 = v5;
        sub_100046400(v5, a2, a3, a4, 1);
        swift_bridgeObjectRetain();
        id v13 = [v11 name];
        if (v13)
        {
          uint64_t v14 = v13;
          uint64_t v15 = (void *)sub_100460CB0();
          unint64_t v17 = v16;

          goto LABEL_27;
        }
        uint64_t v15 = 0;
        goto LABEL_26;
      }
      self;
      uint64_t v20 = swift_dynamicCastObjCClass();
      if (v20)
      {
        uint64_t v21 = (void *)v20;
        id v22 = v5;
        sub_100046400(v5, a2, a3, a4, 1);
        swift_bridgeObjectRetain();
        id v23 = [v21 artist];
        uint64_t v15 = v23;
        if (v23) {
          goto LABEL_21;
        }
LABEL_23:

        goto LABEL_26;
      }
      self;
      uint64_t v15 = (void *)swift_dynamicCastObjCClass();
      id v24 = v5;
      if (!v15)
      {
        sub_100046400(v5, a2, a3, a4, 1);
        swift_bridgeObjectRetain();
        goto LABEL_26;
      }
      id v22 = v24;
      sub_100046400(v5, a2, a3, a4, 1);
      swift_bridgeObjectRetain();
      id v23 = [v15 artist];
      uint64_t v15 = v23;
      if (!v23) {
        goto LABEL_23;
      }
LABEL_21:
      id v25 = [v23 name];

      if (v25)
      {
        uint64_t v15 = (void *)sub_100460CB0();
        unint64_t v17 = v26;

        goto LABEL_27;
      }

      uint64_t v15 = 0;
LABEL_26:
      unint64_t v17 = 0;
LABEL_27:
      sub_100005BFC(&qword_100574708);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1004668C0;
      *(void *)(inited + 32) = 1684957547;
      *(void *)(inited + 40) = 0xE400000000000000;
      id v28 = v5;
      char v29 = sub_1000DF944(v28);
      *(void *)(inited + 48) = MetricsContentType.rawValue.getter(v29);
      *(void *)(inited + 56) = v30;
      *(void *)(inited + 64) = 0x614E747369747261;
      *(void *)(inited + 72) = 0xEA0000000000656DLL;
      uint64_t v31 = 16718;
      if (v17) {
        uint64_t v31 = (uint64_t)v15;
      }
      unint64_t v32 = 0xE200000000000000;
      if (v17) {
        unint64_t v32 = v17;
      }
      *(void *)(inited + 80) = v31;
      *(void *)(inited + 88) = v32;
      strcpy((char *)(inited + 96), "lyricSnippet");
      *(unsigned char *)(inited + 109) = 0;
      *(_WORD *)(inited + 110) = -5120;
      if (a3) {
        uint64_t v33 = a2;
      }
      else {
        uint64_t v33 = 0;
      }
      unint64_t v34 = 0xE000000000000000;
      if (a3) {
        unint64_t v34 = a3;
      }
      *(void *)(inited + 112) = v33;
      *(void *)(inited + 120) = v34;
      unint64_t v19 = sub_1000CAEFC(inited);

LABEL_37:
      if (a4 != 49)
      {
        uint64_t v40 = MetricsEvent.Click.ActionType.rawValue.getter(a4);
        uint64_t v41 = v39;
        if (v40 == 0xD000000000000015 && v39 == 0x800000010048DB30)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v42 = sub_1004626E0();
          swift_bridgeObjectRelease();
          if ((v42 & 1) == 0)
          {
LABEL_44:
            uint64_t v35 = v5;
            uint64_t v36 = a2;
            uint64_t v37 = a3;
            uint64_t v38 = a4;
            goto LABEL_45;
          }
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_1000CC228(v40, v41, 0x6E6F69746361, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
      uint64_t v35 = v5;
      uint64_t v36 = a2;
      uint64_t v37 = a3;
      uint64_t v38 = 49;
LABEL_45:
      sub_100012A68(v35, v36, v37, v38, 1);
      return v19;
    case 2:
      if (a2)
      {
        sub_100005BFC(&qword_100574708);
        uint64_t v6 = swift_initStackObject();
        *(_OWORD *)(v6 + 16) = xmmword_100466900;
        strcpy((char *)(v6 + 32), "searchPrefix");
        *(unsigned char *)(v6 + 45) = 0;
        *(_WORD *)(v6 + 46) = -5120;
        *(void *)(v6 + 48) = v5;
        *(void *)(v6 + 56) = a2;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      }
      return 0;
    case 3:
      swift_bridgeObjectRetain();
      return (unint64_t)v5;
    case 4:
      uint64_t v18 = &off_100522670;
      return sub_1000CAEFC((uint64_t)v18);
    default:
      sub_100005BFC(&qword_100574708);
      uint64_t v6 = swift_initStackObject();
      *(_OWORD *)(v6 + 16) = xmmword_100466900;
      strcpy((char *)(v6 + 32), "actionSubType");
      *(_WORD *)(v6 + 46) = -4864;
      *(void *)(v6 + 48) = MetricsEvent.Click.ActionType.rawValue.getter((char)v5);
      *(void *)(v6 + 56) = v7;
LABEL_9:
      uint64_t v18 = (_UNKNOWN **)v6;
      return sub_1000CAEFC((uint64_t)v18);
  }
}

uint64_t MetricsEvent.ComponentRender.PreloadStatus.rawValue.getter(char a1)
{
  uint64_t result = 1819047270;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C616974726170;
      break;
    case 2:
      uint64_t result = 0x6C6F686563616C70;
      break;
    case 3:
      uint64_t result = 0x73756F6976657270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000D2888(unsigned __int8 *a1, char *a2)
{
  return sub_100035BD0(*a1, *a2);
}

Swift::Int sub_1000D2894()
{
  return sub_100462900();
}

uint64_t sub_1000D297C()
{
  sub_100460DA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000D2A4C()
{
  return sub_100462900();
}

uint64_t sub_1000D2B30@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s9MusicCore12MetricsEventV15ComponentRenderV13PreloadStatusO8rawValueAGSgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1000D2B60(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1819047270;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6C616974726170;
      goto LABEL_3;
    case 2:
      *a1 = 0x6C6F686563616C70;
      a1[1] = 0xEB00000000726564;
      break;
    case 3:
      *a1 = 0x73756F6976657270;
      a1[1] = 0xEF6E776F6853796CLL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t SharePlayTogetherSession.Participant.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t MetricsEvent.ComponentRender.componentType.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MetricsEvent.ComponentRender.componentType.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

void *Library.Menu.Request.mediaPickerConfiguration.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

void MPCPlaybackEngine.Configuration.fallbackPlaybackIntent.setter(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
}

void GroupActivitiesManager.Activity.Metadata.previewImage.setter(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
}

void *MetricsEvent.ComponentRender.componentMotionActivationTime.getter()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

void MetricsEvent.ComponentRender.componentMotionActivationTime.setter(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
}

CFRange (__swiftcall *Library.Menu.Request.filtersToSelectedIdentifiers.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id PlaylistCovers.Cover.Representation.textColor.getter()
{
  return *(id *)(v0 + 48);
}

void MetricsEvent.ComponentRender.componentRequestTime.setter(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
}

void *MetricsEvent.ComponentRender.componentEndTime.getter()
{
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

void MetricsEvent.ComponentRender.componentEndTime.setter(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
}

CFRange (__swiftcall *PresentationSource.configurationHandler.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

void *MetricsEvent.ComponentRender.componentInterruptTime.getter()
{
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = v1;
  return v1;
}

void MetricsEvent.ComponentRender.componentInterruptTime.setter(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
}

CFRange (__swiftcall *MetricsEvent.ComponentRender.componentInterruptTime.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t MetricsEvent.ComponentRender.preloadStatus.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t MetricsEvent.ComponentRender.preloadStatus.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 72) = result;
  return result;
}

CFRange (__swiftcall *LibraryModelRequest.scopedContainers.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

id sub_1000D2E90()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for MetricsReportingController()) init];
  static MetricsReportingController.shared = (uint64_t)result;
  return result;
}

unint64_t sub_1000D2EC0()
{
  unint64_t result = qword_1005746F8;
  if (!qword_1005746F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005746F8);
  }
  return result;
}

id static MetricsReportingController.shared.getter()
{
  if (qword_1005707F8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static MetricsReportingController.shared;

  return v0;
}

void MetricsReportingController.recordPerformanceMetrics(for:)(void *a1)
{
  if (a1)
  {
    id v1 = [a1 performanceMetrics];
    if (v1)
    {
      id v2 = v1;
      sub_1000DAA30(v2, (uint64_t)&v3);
      MetricsReportingController.recordLoadUrlEvent(_:)(&v3);
      sub_1000DAE84((uint64_t)&v3);
    }
  }
}

void MetricsReportingController.recordPageEvent(_:pageContext:sharedListeningContext:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6)
{
  unint64_t v81 = a5;
  uint64_t v84 = a4;
  uint64_t v9 = sub_100005BFC(&qword_100571720);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10045F9F0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009854(0, (unint64_t *)&qword_100576320);
  uint64_t *v15 = sub_1004618F0();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  char v16 = sub_10045FA20();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    id v17 = [objc_allocWithZone((Class)SSMetricsPageEvent) init];
    unint64_t v80 = a6;
    uint64_t v82 = v11;
    id v18 = v17;
    if (a3) {
      NSString v19 = sub_100460C70();
    }
    else {
      NSString v19 = 0;
    }
    [v17 setPageContext:v19, v80];

    uint64_t v21 = *a1;
    uint64_t v20 = a1[1];
    id v22 = v17;
    swift_bridgeObjectRetain();
    NSString v23 = sub_100460C70();
    swift_bridgeObjectRelease();
    NSString v24 = sub_100460C70();
    [v22 setProperty:v23 forBodyKey:v24];

    uint64_t v26 = a1[2];
    uint64_t v25 = a1[3];
    Swift::String v85 = a1;
    id v27 = v22;
    NSString v28 = sub_100460C70();
    [v27 setPageType:v28];

    uint64_t v83 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration;
    char v29 = *(void **)&v86[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    if (v29)
    {
      sub_100005BFC(&qword_100574718);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1004668E0;
      *(void *)(v30 + 32) = v26;
      *(void *)(v30 + 40) = v25;
      *(void *)(v30 + 88) = &type metadata for String;
      *(void *)(v30 + 56) = &type metadata for String;
      *(void *)(v30 + 64) = v21;
      *(void *)(v30 + 72) = v20;
      id v31 = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v32 = v29;
      Class isa = sub_100461080().super.isa;
      swift_bridgeObjectRelease();
      NSString v34 = [v32 compoundStringWithElements:isa];

      if (v34)
      {
        sub_100460CB0();

        NSString v34 = sub_100460C70();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      id v35 = v27;
      NSString v34 = 0;
    }
    uint64_t v36 = v85;
    uint64_t v37 = (uint64_t)v82;
    [v27 setPageDescription:v34];

    uint64_t v38 = (int *)type metadata accessor for MetricsEvent.Page(0);
    sub_100019ABC((uint64_t)v36 + v38[6], v37, &qword_100571720);
    uint64_t v39 = sub_10045BDE0();
    uint64_t v40 = *(void *)(v39 - 8);
    int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v37, 1, v39);
    id v42 = v27;
    if (v41 == 1)
    {
      sub_100009790(v37, &qword_100571720);
      NSString v43 = 0;
    }
    else
    {
      sub_10045BCF0();
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v37, v39);
      NSString v43 = sub_100460C70();
      swift_bridgeObjectRelease();
    }
    [v42 setPageURL:v43];

    uint64_t v44 = *(void *)((char *)v36 + v38[7]);
    id v45 = v42;
    if (v44)
    {
      swift_bridgeObjectRetain();
      v46.super.Class isa = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      v46.super.Class isa = 0;
    }
    NSString v47 = sub_100460C70();
    [v42 setProperty:v46.super.isa forBodyKey:v47];

    swift_unknownObjectRelease();
    char v48 = (void *)((char *)v36 + v38[8]);
    uint64_t v49 = v48[1];
    p_type = (char **)(&stru_100565FF0 + 16);
    if (v49)
    {
      uint64_t v51 = *v48;
      sub_100005BFC(&qword_100574E40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100466900;
      *(void *)(inited + 32) = 0x6554686372616573;
      *(void *)(inited + 40) = 0xEA00000000006D72;
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 48) = v51;
      *(void *)(inited + 56) = v49;
      p_type = &stru_100565FF0.type;
      swift_bridgeObjectRetain();
      sub_1000CB020(inited);
      Class v53 = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
      [v42 addPropertiesWithDictionary:v53];
    }
    if ((*((unsigned char *)v36 + v38[9]) & 1) == 0)
    {
      sub_100005BFC(&qword_100574E40);
      uint64_t v54 = swift_initStackObject();
      *(_OWORD *)(v54 + 16) = xmmword_100466900;
      *(void *)(v54 + 32) = 0x7073694465676170;
      *(void *)(v54 + 40) = 0xEF6570795479616CLL;
      *(void *)(v54 + 72) = &type metadata for String;
      *(void *)(v54 + 48) = 0x7765695664726163;
      *(void *)(v54 + 56) = 0xE800000000000000;
      sub_1000CB020(v54);
      Class v55 = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
      [v42 p_type[260]:v55];
    }
    int v56 = *((unsigned __int8 *)v36 + v38[11]);
    if (v56 != 2)
    {
      char v57 = v56 & 1;
      sub_100005BFC(&qword_100574E40);
      uint64_t v58 = swift_initStackObject();
      *(_OWORD *)(v58 + 16) = xmmword_100466900;
      *(void *)(v58 + 32) = 0xD000000000000014;
      *(void *)(v58 + 40) = 0x800000010048FCB0;
      *(void *)(v58 + 72) = &type metadata for Bool;
      *(unsigned char *)(v58 + 48) = v57;
      sub_1000CB020(v58);
      Class v59 = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
      [v42 addPropertiesWithDictionary:v59];
    }
    if (v44)
    {
      if (*(void *)(v44 + 16))
      {
        unint64_t v60 = sub_1000CD178(0x4974655361746164, 0xE900000000000064);
        if (v61)
        {
          char v62 = (uint64_t *)(*(void *)(v44 + 56) + 16 * v60);
          uint64_t v64 = *v62;
          uint64_t v63 = v62[1];
          sub_100005BFC(&qword_100574E40);
          uint64_t v65 = swift_initStackObject();
          *(_OWORD *)(v65 + 16) = xmmword_100466900;
          *(void *)(v65 + 32) = 0x4974655361746164;
          *(void *)(v65 + 40) = 0xE900000000000064;
          *(void *)(v65 + 72) = &type metadata for String;
          *(void *)(v65 + 48) = v64;
          *(void *)(v65 + 56) = v63;
          uint64_t v36 = v85;
          swift_bridgeObjectRetain();
          sub_1000CB020(v65);
          Class v66 = sub_100460A70().super.isa;
          swift_bridgeObjectRelease();
          [v42 addPropertiesWithDictionary:v66];
        }
      }
    }
    if (v84 != 2 && sub_1000DA728(v84 & 1, v81, v80))
    {
      Class v67 = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
      [v42 addPropertiesWithDictionary:v67];
    }
    uint64_t v68 = (void *)((char *)v36 + v38[10]);
    uint64_t v69 = v68[1];
    if (v69)
    {
      uint64_t v70 = *v68;
      sub_100005BFC(&qword_100574E40);
      uint64_t v71 = swift_initStackObject();
      *(_OWORD *)(v71 + 16) = xmmword_100466900;
      *(void *)(v71 + 32) = 0x7255666552747865;
      *(void *)(v71 + 40) = 0xE90000000000006CLL;
      *(void *)(v71 + 72) = &type metadata for String;
      *(void *)(v71 + 48) = v70;
      *(void *)(v71 + 56) = v69;
      swift_bridgeObjectRetain();
      sub_1000CB020(v71);
      Class v72 = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
      [v42 addPropertiesWithDictionary:v72];
    }
    uint64_t v73 = v86;
    long long v74 = *(void **)&v86[v83];
    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = v73;
    *(void *)(v75 + 24) = v42;
    aBlock[4] = sub_1000DAF50;
    aBlock[5] = v75;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1000F6CC0;
    aBlock[3] = &unk_10052C5B0;
    uint64_t v76 = _Block_copy(aBlock);
    id v77 = v74;
    id v78 = v73;
    id v79 = v42;
    swift_release();
    [v79 setStandardPropertiesWith:v77 completionHandler:v76];
    _Block_release(v76);
  }
  else
  {
    __break(1u);
  }
}

void MetricsReportingController.recordImpressionsEvent(_:with:pageContext:sharedListeningContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v41 = a5;
  unint64_t v39 = a6;
  unint64_t v40 = a7;
  uint64_t v10 = sub_100005BFC(&qword_100574720);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v38 - v14;
  uint64_t v16 = sub_10045F9F0();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  NSString v19 = (uint64_t *)((char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009854(0, (unint64_t *)&qword_100576320);
  *NSString v19 = sub_1004618F0();
  (*(void (**)(uint64_t *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  char v20 = sub_10045FA20();
  (*(void (**)(uint64_t *, uint64_t))(v17 + 8))(v19, v16);
  if (v20)
  {
    id v21 = [objc_allocWithZone((Class)SSMetricsBaseEvent) init];
    if (a4) {
      NSString v22 = sub_100460C70();
    }
    else {
      NSString v22 = 0;
    }
    [v21 setPageContext:v22];

    sub_100019ABC(a2, (uint64_t)v15, &qword_100574720);
    uint64_t v23 = type metadata accessor for MetricsPageProperties();
    NSString v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
    if (v24(v15, 1, v23) == 1)
    {
      sub_100009790((uint64_t)v15, &qword_100574720);
      NSString v25 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1000DA97C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MetricsPageProperties);
      NSString v25 = sub_100460C70();
      swift_bridgeObjectRelease();
    }
    NSString v26 = sub_100460C70();
    [v21 setProperty:v25 forBodyKey:v26];
    swift_unknownObjectRelease();

    sub_100019ABC(a2, (uint64_t)v13, &qword_100574720);
    if (v24(v13, 1, v23) == 1)
    {
      sub_100009790((uint64_t)v13, &qword_100574720);
      NSString v27 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1000DA97C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for MetricsPageProperties);
      NSString v27 = sub_100460C70();
      swift_bridgeObjectRelease();
    }
    [v21 setPageType:v27];

    [v21 setEventType:SSMetricsEventTypeImpressions];
    sub_100005BFC(&qword_100574E40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100466900;
    *(void *)(inited + 32) = 0x6973736572706D69;
    *(void *)(inited + 40) = 0xEB00000000736E6FLL;
    *(void *)(inited + 72) = sub_100005BFC(&qword_100574728);
    *(void *)(inited + 48) = a1;
    swift_bridgeObjectRetain();
    sub_1000CB020(inited);
    Class isa = sub_100460A70().super.isa;
    swift_bridgeObjectRelease();
    [v21 addPropertiesWithDictionary:isa];

    if (v41 != 2)
    {
      if (sub_1000DA728(v41 & 1, v39, v40))
      {
        Class v30 = sub_100460A70().super.isa;
        swift_bridgeObjectRelease();
        [v21 addPropertiesWithDictionary:v30];
      }
    }
    id v31 = v42;
    id v32 = *(void **)&v42[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v31;
    *(void *)(v33 + 24) = v21;
    aBlock[4] = sub_1000DAFA0;
    aBlock[5] = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1000F6CC0;
    aBlock[3] = &unk_10052C600;
    NSString v34 = _Block_copy(aBlock);
    id v35 = v32;
    id v36 = v31;
    id v37 = v21;
    swift_release();
    [v37 setStandardPropertiesWith:v35 completionHandler:v34];
    _Block_release(v34);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000D3F94(void *a1, void *a2, uint64_t a3, uint64_t (*a4)(void))
{
  sub_100009854(0, (unint64_t *)&qword_100576320);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  id v8 = a1;
  id v9 = a2;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(a4, v7);

  return swift_release();
}

void MetricsReportingController.recordSearchEvent(_:pageContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_100005BFC(&qword_100571720);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10045F9F0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (void *)((char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009854(0, (unint64_t *)&qword_100576320);
  *uint64_t v13 = sub_1004618F0();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  char v14 = sub_10045FA20();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    id v15 = [objc_allocWithZone((Class)SSMetricsSearchEvent) init];
    id v16 = v15;
    if (a3) {
      NSString v17 = sub_100460C70();
    }
    else {
      NSString v17 = 0;
    }
    [v15 setPageContext:v17];

    uint64_t v18 = (int *)type metadata accessor for MetricsEvent.Click(0);
    uint64_t v19 = 0;
    uint64_t v20 = a1 + v18[10];
    uint64_t v21 = *(unsigned __int16 *)(v20 + 24);
    if (v21 >> 8 <= 0xFE)
    {
      unint64_t v22 = MetricsEvent.Click.ActionDetails.dictionary.getter(*(void **)v20, *(void *)(v20 + 8), *(void *)(v20 + 16), v21);
      if (v22)
      {
        aBlock[0] = v22;
        sub_100005BFC(&qword_100574730);
        uint64_t v19 = sub_1004626D0();
        sub_100009790((uint64_t)aBlock, &qword_100574730);
      }
      else
      {
        uint64_t v19 = 0;
      }
    }
    [v15 setActionDetails:v19];
    swift_unknownObjectRelease();
    MetricsEvent.Click.ActionType.rawValue.getter(*(unsigned char *)(a1 + 17));
    NSString v23 = sub_100460C70();
    swift_bridgeObjectRelease();
    [v15 setActionType:v23];

    NSString v24 = sub_100460C70();
    [v15 setTargetIdentifier:v24];

    sub_100019ABC(a1 + v18[7], (uint64_t)v9, &qword_100571720);
    uint64_t v25 = sub_10045BDE0();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v9, 1, v25) == 1)
    {
      sub_100009790((uint64_t)v9, &qword_100571720);
      NSString v27 = 0;
    }
    else
    {
      sub_10045BCF0();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v25);
      NSString v27 = sub_100460C70();
      swift_bridgeObjectRelease();
    }
    [v15 setTargetURL:v27];

    MetricsEvent.TargetType.rawValue.getter(*(unsigned char *)(a1 + 16));
    NSString v28 = sub_100460C70();
    swift_bridgeObjectRelease();
    [v15 setTargetType:v28];

    NSString v29 = *(NSString *)(a1 + v18[13] + 8);
    id v30 = v15;
    if (v29) {
      NSString v29 = sub_100460C70();
    }
    [v15 setPageType:v29];

    id v31 = (uint64_t *)(a1 + v18[9]);
    unint64_t v32 = v31[1];
    if (v32 == 10)
    {
      id v33 = v15;
      NSString v34 = 0;
    }
    else
    {
      MetricsEvent.Click.ActionContext.rawValue.getter(*v31, v32);
      id v35 = v15;
      NSString v34 = sub_100460C70();
      swift_bridgeObjectRelease();
    }
    NSString v36 = sub_100460C70();
    [v15 setProperty:v34 forBodyKey:v36];

    swift_unknownObjectRelease();
    if (*(void *)(a1 + v18[15]))
    {
      id v37 = v15;
      swift_bridgeObjectRetain();
      v38.super.Class isa = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      id v39 = v15;
      v38.super.Class isa = 0;
    }
    NSString v40 = sub_100460C70();
    [v15 setProperty:v38.super.isa forBodyKey:v40];

    swift_unknownObjectRelease();
    if (*(void *)(a1 + v18[12] + 8))
    {
      id v41 = v15;
      swift_bridgeObjectRetain();
      NSString v42 = sub_100460C70();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v43 = v15;
      NSString v42 = 0;
    }
    NSString v44 = sub_100460C70();
    [v15 setProperty:v42 forBodyKey:v44];

    swift_unknownObjectRelease();
    if (*(void *)(a1 + v18[8]))
    {
      id v45 = v15;
      swift_bridgeObjectRetain();
      sub_100005BFC(&qword_10057A900);
      v46.super.Class isa = sub_100461080().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      id v47 = v15;
      v46.super.Class isa = 0;
    }
    NSString v48 = sub_100460C70();
    [v15 setProperty:v46.super.isa forBodyKey:v48];

    swift_unknownObjectRelease();
    if (*(void *)(a1 + v18[18] + 8)) {
      NSString v49 = sub_100460C70();
    }
    else {
      NSString v49 = 0;
    }
    [v15 setSearchTerm:v49];

    uint64_t v50 = *(void **)&v4[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = v4;
    *(void *)(v51 + 24) = v15;
    aBlock[4] = sub_1000DAFD8;
    aBlock[5] = v51;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1000F6CC0;
    aBlock[3] = &unk_10052C650;
    uint64_t v52 = _Block_copy(aBlock);
    id v53 = v50;
    uint64_t v54 = v4;
    id v55 = v15;
    swift_release();
    [v55 setStandardPropertiesWith:v53 completionHandler:v52];
    _Block_release(v52);
  }
  else
  {
    __break(1u);
  }
}

void MetricsReportingController.recordClickEvent(_:pageContext:sharedListeningContext:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, unint64_t a6)
{
  uint64_t v110 = a3;
  unint64_t v103 = a5;
  unint64_t v104 = a6;
  uint64_t v9 = sub_100005BFC(&qword_100571720);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v14 = (char *)&v101 - v13;
  uint64_t v15 = sub_10045F9F0();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t *)((char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009854(0, (unint64_t *)&qword_100576320);
  *uint64_t v18 = sub_1004618F0();
  (*(void (**)(uint64_t *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  char v19 = sub_10045FA20();
  (*(void (**)(uint64_t *, uint64_t))(v16 + 8))(v18, v15);
  if (v19)
  {
    uint64_t v105 = a2;
    id v20 = [objc_allocWithZone((Class)SSMetricsClickEvent) init];
    NSString v21 = sub_100460C70();
    [v20 setTargetIdentifier:v21];

    MetricsEvent.TargetType.rawValue.getter(*(unsigned char *)(a1 + 16));
    NSString v22 = sub_100460C70();
    swift_bridgeObjectRelease();
    [v20 setTargetType:v22];

    MetricsEvent.Click.ActionType.rawValue.getter(*(unsigned char *)(a1 + 17));
    NSString v23 = sub_100460C70();
    swift_bridgeObjectRelease();
    [v20 setActionType:v23];

    NSString v24 = (int *)type metadata accessor for MetricsEvent.Click(0);
    sub_100019ABC(a1 + v24[7], (uint64_t)v14, &qword_100571720);
    uint64_t v25 = sub_10045BDE0();
    uint64_t v26 = *(void *)(v25 - 8);
    v106 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    uint64_t v107 = v26 + 48;
    int v27 = v106(v14, 1, v25);
    uint64_t v108 = v25;
    uint64_t v102 = v26;
    if (v27 == 1)
    {
      sub_100009790((uint64_t)v14, &qword_100571720);
      NSString v28 = 0;
    }
    else
    {
      sub_10045BCF0();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v25);
      NSString v28 = sub_100460C70();
      swift_bridgeObjectRelease();
    }
    [v20 setTargetURL:v28];

    if (*(void *)(a1 + v24[8]))
    {
      id v29 = v20;
      swift_bridgeObjectRetain();
      sub_100005BFC(&qword_10057A900);
      v30.super.Class isa = sub_100461080().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      id v31 = v20;
      v30.super.Class isa = 0;
    }
    NSString v32 = sub_100460C70();
    [v20 setProperty:v30.super.isa forBodyKey:v32];

    swift_unknownObjectRelease();
    id v33 = (uint64_t *)(a1 + v24[9]);
    unint64_t v34 = v33[1];
    if (v34 == 10)
    {
      id v35 = v20;
      NSString v36 = 0;
    }
    else
    {
      MetricsEvent.Click.ActionContext.rawValue.getter(*v33, v34);
      id v37 = v20;
      NSString v36 = sub_100460C70();
      swift_bridgeObjectRelease();
    }
    NSString v38 = sub_100460C70();
    [v20 setProperty:v36 forBodyKey:v38];

    swift_unknownObjectRelease();
    uint64_t v39 = a1 + v24[10];
    uint64_t v40 = *(unsigned __int16 *)(v39 + 24);
    if (v40 >> 8 <= 0xFE
      && (unint64_t v41 = MetricsEvent.Click.ActionDetails.dictionary.getter(*(void **)v39, *(void *)(v39 + 8), *(void *)(v39 + 16), v40)) != 0)
    {
      aBlock[0] = v41;
      sub_100005BFC(&qword_100574730);
      uint64_t v42 = sub_1004626D0();
      sub_100009790((uint64_t)aBlock, &qword_100574730);
    }
    else
    {
      uint64_t v42 = 0;
    }
    [v20 setActionDetails:v42];
    swift_unknownObjectRelease();
    Class isa = *(Class *)(a1 + v24[11]);
    v109 = v12;
    if (isa)
    {
      sub_100005BFC(&qword_100577470);
      Class isa = sub_100461080().super.isa;
    }
    [v20 setImpressions:isa];
    swift_unknownObjectRelease();
    if (*(unsigned char *)(a1 + v24[19]) == 1)
    {
      sub_100005BFC(&qword_100574E40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100466900;
      strcpy((char *)(inited + 32), "sharedContent");
      *(_WORD *)(inited + 46) = -4864;
      *(void *)(inited + 72) = &type metadata for Bool;
      *(unsigned char *)(inited + 48) = 1;
      sub_1000CB020(inited);
      Class v45 = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
      [v20 addPropertiesWithDictionary:v45];
    }
    NSArray v46 = (uint64_t *)(a1 + v24[20]);
    uint64_t v47 = v46[1];
    if (v47)
    {
      uint64_t v48 = *v46;
      sub_100005BFC(&qword_100574E40);
      uint64_t v49 = swift_initStackObject();
      *(_OWORD *)(v49 + 16) = xmmword_100466900;
      *(void *)(v49 + 32) = 0xD000000000000013;
      *(void *)(v49 + 40) = 0x800000010048FCD0;
      *(void *)(v49 + 72) = &type metadata for String;
      *(void *)(v49 + 48) = v48;
      *(void *)(v49 + 56) = v47;
      swift_bridgeObjectRetain();
      sub_1000CB020(v49);
      Class v50 = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
      [v20 addPropertiesWithDictionary:v50];
    }
    uint64_t v51 = (uint64_t *)(a1 + v24[18]);
    uint64_t v52 = v51[1];
    if (v52)
    {
      uint64_t v53 = *v51;
      sub_100005BFC(&qword_100574E40);
      uint64_t v54 = swift_initStackObject();
      *(_OWORD *)(v54 + 16) = xmmword_100466900;
      *(void *)(v54 + 32) = 0x6554686372616573;
      *(void *)(v54 + 40) = 0xEA00000000006D72;
      *(void *)(v54 + 72) = &type metadata for String;
      *(void *)(v54 + 48) = v53;
      *(void *)(v54 + 56) = v52;
      swift_bridgeObjectRetain();
      sub_1000CB020(v54);
      Class v55 = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
      [v20 addPropertiesWithDictionary:v55];
    }
    if (a4 != 2 && sub_1000DA728(a4 & 1, v103, v104))
    {
      Class v56 = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
      [v20 addPropertiesWithDictionary:v56];
    }
    NSString v57 = (NSString)v110;
    if (v110)
    {
      id v58 = v20;
      NSString v57 = sub_100460C70();
    }
    else
    {
      id v59 = v20;
    }
    [v20 setPageContext:v57];

    unint64_t v60 = (uint64_t *)(a1 + v24[12]);
    uint64_t v62 = *v60;
    uint64_t v61 = v60[1];
    if (v61)
    {
      id v63 = v20;
      swift_bridgeObjectRetain();
      NSString v64 = sub_100460C70();
      swift_bridgeObjectRelease();
      NSString v65 = sub_100460C70();
      [v63 setProperty:v64 forBodyKey:v65];
    }
    Class v66 = (uint64_t *)(a1 + v24[13]);
    uint64_t v67 = *v66;
    uint64_t v68 = v66[1];
    if (v68)
    {
      id v69 = v20;
      NSString v70 = sub_100460C70();
      [v69 setPageType:v70];
    }
    uint64_t v110 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration;
    uint64_t v71 = *(void **)&v111[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    if (v71)
    {
      sub_100005BFC(&qword_100574718);
      uint64_t v72 = swift_allocObject();
      *(_OWORD *)(v72 + 16) = xmmword_1004668E0;
      uint64_t v73 = sub_100005BFC((uint64_t *)&unk_100577400);
      *(void *)(v72 + 32) = v67;
      *(void *)(v72 + 40) = v68;
      *(void *)(v72 + 88) = v73;
      *(void *)(v72 + 56) = v73;
      *(void *)(v72 + 64) = v62;
      *(void *)(v72 + 72) = v61;
      swift_bridgeObjectRetain();
      id v74 = v20;
      swift_bridgeObjectRetain();
      id v75 = v71;
      Class v76 = sub_100461080().super.isa;
      swift_bridgeObjectRelease();
      NSString v77 = [v75 compoundStringWithElements:v76];

      if (v77)
      {
        sub_100460CB0();

        NSString v77 = sub_100460C70();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      id v78 = v20;
      NSString v77 = 0;
    }
    uint64_t v80 = v108;
    uint64_t v79 = (uint64_t)v109;
    [v20 setPageDescription:v77];

    sub_100019ABC(a1 + v24[14], v79, &qword_100571720);
    int v81 = v106((char *)v79, 1, v80);
    id v82 = v20;
    if (v81 == 1)
    {
      sub_100009790(v79, &qword_100571720);
      NSString v83 = 0;
    }
    else
    {
      sub_10045BCF0();
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v79, v80);
      NSString v83 = sub_100460C70();
      swift_bridgeObjectRelease();
    }
    [v82 setPageURL:v83];

    if (*(void *)(a1 + v24[15]))
    {
      id v84 = v82;
      swift_bridgeObjectRetain();
      v85.super.Class isa = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      id v86 = v82;
      v85.super.Class isa = 0;
    }
    NSString v87 = sub_100460C70();
    [v82 setProperty:v85.super.isa forBodyKey:v87];

    swift_unknownObjectRelease();
    if ((*(unsigned char *)(a1 + v24[16]) & 1) == 0)
    {
      sub_100005BFC(&qword_100574E40);
      uint64_t v88 = swift_initStackObject();
      *(_OWORD *)(v88 + 16) = xmmword_100466900;
      *(void *)(v88 + 32) = 0x7073694465676170;
      *(void *)(v88 + 40) = 0xEF6570795479616CLL;
      *(void *)(v88 + 72) = &type metadata for String;
      *(void *)(v88 + 48) = 0x7765695664726163;
      *(void *)(v88 + 56) = 0xE800000000000000;
      sub_1000CB020(v88);
      Class v89 = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
      [v82 addPropertiesWithDictionary:v89];
    }
    int v90 = *(unsigned __int8 *)(a1 + v24[17]);
    if (v90 != 2)
    {
      char v91 = v90 & 1;
      sub_100005BFC(&qword_100574E40);
      uint64_t v92 = swift_initStackObject();
      *(_OWORD *)(v92 + 16) = xmmword_100466900;
      *(void *)(v92 + 32) = 0xD000000000000014;
      *(void *)(v92 + 40) = 0x800000010048FCB0;
      *(void *)(v92 + 72) = &type metadata for Bool;
      *(unsigned char *)(v92 + 48) = v91;
      sub_1000CB020(v92);
      Class v93 = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
      [v82 addPropertiesWithDictionary:v93];
    }
    uint64_t v94 = v111;
    uint64_t v95 = *(void **)&v111[v110];
    uint64_t v96 = swift_allocObject();
    *(void *)(v96 + 16) = v94;
    *(void *)(v96 + 24) = v82;
    aBlock[4] = sub_1000DB010;
    aBlock[5] = v96;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1000F6CC0;
    aBlock[3] = &unk_10052C6A0;
    uint64_t v97 = _Block_copy(aBlock);
    id v98 = v95;
    id v99 = v94;
    id v100 = v82;
    swift_release();
    [v100 setStandardPropertiesWith:v98 completionHandler:v97];
    _Block_release(v97);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall MetricsReportingController.recordLoadUrlEvent(_:)(MusicCore::MetricsEvent::LoadUrl *a1)
{
  id v3 = [objc_allocWithZone((Class)SSMetricsLoadURLEvent) init];
  BOOL cachedResponse = a1->cachedResponse;
  [v3 setCachedResponse:cachedResponse];
  id v5 = [self mainBundle];
  id v6 = [v5 bundleIdentifier];

  [v3 setOriginalApp:v6];
  sub_100019960((uint64_t)a1, (uint64_t)v39, &qword_100574738);
  sub_100019960((uint64_t)v39, (uint64_t)&v40, &qword_100574738);
  if ((v41 & 1) == 0) {
    [v3 setDomainLookupStartTime:v40];
  }
  sub_100019960((uint64_t)&a1->domainLookupEndTime, (uint64_t)v38, &qword_100574738);
  sub_100019960((uint64_t)v38, (uint64_t)&v42, &qword_100574738);
  if ((v43 & 1) == 0) {
    [v3 setDomainLookupEndTime:v42];
  }
  sub_100019960((uint64_t)&a1->connectionStartTime, (uint64_t)v37, &qword_100574738);
  sub_100019960((uint64_t)v37, (uint64_t)&v44, &qword_100574738);
  if ((v45 & 1) == 0) {
    [v3 setConnectionStartTime:v44];
  }
  sub_100019960((uint64_t)&a1->secureConnectionStartTime, (uint64_t)v36, &qword_100574738);
  sub_100019960((uint64_t)v36, (uint64_t)&v46, &qword_100574738);
  if ((v47 & 1) == 0) {
    [v3 setSecureConnectionStartTime:v46];
  }
  sub_100019960((uint64_t)&a1->connectionEndTime, (uint64_t)v35, &qword_100574738);
  sub_100019960((uint64_t)v35, (uint64_t)&v48, &qword_100574738);
  if ((v49 & 1) == 0) {
    [v3 setConnectionEndTime:v48];
  }
  sub_100019960((uint64_t)&a1->requestStartTime, (uint64_t)v34, &qword_100574738);
  sub_100019960((uint64_t)v34, (uint64_t)&v50, &qword_100574738);
  if ((v51 & 1) == 0) {
    [v3 setRequestStartTime:v50];
  }
  sub_100019960((uint64_t)&a1->responseStartTime, (uint64_t)v33, &qword_100574738);
  sub_100019960((uint64_t)v33, (uint64_t)&v52, &qword_100574738);
  if ((v53 & 1) == 0) {
    [v3 setResponseStartTime:v52];
  }
  sub_100019960((uint64_t)&a1->responseEndTime, (uint64_t)v32, &qword_100574738);
  sub_100019960((uint64_t)v32, (uint64_t)&v54, &qword_100574738);
  if ((v55 & 1) == 0) {
    [v3 setResponseEndTime:v54];
  }
  sub_100019960((uint64_t)&a1->fetchStartTime, (uint64_t)v31, &qword_100574738);
  sub_100019960((uint64_t)v31, (uint64_t)&v56, &qword_100574738);
  if ((v57 & 1) == 0) {
    [v3 setFetchStartTime:v56];
  }
  sub_100019960((uint64_t)&a1->requestUrl, (uint64_t)v30, (uint64_t *)&unk_100577400);
  sub_100019960((uint64_t)v30, (uint64_t)v58, (uint64_t *)&unk_100577400);
  if (v58[1])
  {
    NSString v7 = sub_100460C70();
    [v3 setRequestURL:v7];
  }
  sub_100019960((uint64_t)&a1->redirectCount, (uint64_t)v29, &qword_100574740);
  sub_100019960((uint64_t)v29, (uint64_t)&v59, &qword_100574740);
  if ((v60 & 1) == 0)
  {
    if (v59 < 0) {
      goto LABEL_41;
    }
    [v3 setRedirectCount:];
  }
  sub_100019960((uint64_t)&a1->appleTimingApp, (uint64_t)v28, (uint64_t *)&unk_100577400);
  sub_100019960((uint64_t)v28, (uint64_t)v61, (uint64_t *)&unk_100577400);
  if (v61[1])
  {
    NSString v8 = sub_100460C70();
    [v3 setAppleTimingApp:v8];
  }
  sub_100019960((uint64_t)&a1->connectionType, (uint64_t)v27, (uint64_t *)&unk_100577400);
  sub_100019960((uint64_t)v27, (uint64_t)v62, (uint64_t *)&unk_100577400);
  if (v62[1])
  {
    NSString v9 = sub_100460C70();
    [v3 setConnectionType:v9];
  }
  sub_100019960((uint64_t)&a1->edgeNodeCacheStatus, (uint64_t)v26, (uint64_t *)&unk_100577400);
  sub_100019960((uint64_t)v26, (uint64_t)v63, (uint64_t *)&unk_100577400);
  if (v63[1])
  {
    NSString v10 = sub_100460C70();
    [v3 setEdgeNodeCacheStatus:v10];
  }
  sub_100019960((uint64_t)&a1->responseDate, (uint64_t)v25, (uint64_t *)&unk_100577400);
  sub_100019960((uint64_t)v25, (uint64_t)v64, (uint64_t *)&unk_100577400);
  if (v64[1])
  {
    NSString v11 = sub_100460C70();
    [v3 setResponseDate:v11];
  }
  sub_100019960((uint64_t)&a1->resolvedIPAddress, (uint64_t)v24, (uint64_t *)&unk_100577400);
  sub_100019960((uint64_t)v24, (uint64_t)v65, (uint64_t *)&unk_100577400);
  if (v65[1])
  {
    NSString v12 = sub_100460C70();
    [v3 setResolvedIPAddress:v12];
  }
  object = a1->environmentDataCenter.value._object;
  if (object)
  {
    uint64_t countAndFlagsBits = a1->environmentDataCenter.value._countAndFlagsBits;
    sub_100005BFC(&qword_100574E40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100466900;
    *(void *)(inited + 32) = 0xD000000000000015;
    *(void *)(inited + 40) = 0x800000010048FCF0;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = countAndFlagsBits;
    *(void *)(inited + 56) = object;
    swift_bridgeObjectRetain();
    sub_1000CB020(inited);
    Class isa = sub_100460A70().super.isa;
    swift_bridgeObjectRelease();
    [v3 addPropertiesWithDictionary:isa];
  }
  [v3 setCachedResponse:cachedResponse];
  [v3 setConnectionReused:a1->connectionReused];
  [v3 setStatusCode:a1->statusCode];
  if (a1->requestMessageSize < 0)
  {
    __break(1u);
  }
  else
  {
    [v3 setRequestMessageSize:];
    if ((a1->responseMessageSize & 0x8000000000000000) == 0)
    {
      [v3 setResponseMessageSize:];
      uint64_t v17 = *(void **)&v1[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v3;
      *(void *)(v18 + 24) = v1;
      aBlock[4] = sub_1000DB048;
      aBlock[5] = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_1000F6CC0;
      aBlock[3] = &unk_10052C6F0;
      char v19 = _Block_copy(aBlock);
      id v20 = v17;
      id v21 = v3;
      NSString v22 = v1;
      swift_release();
      [v21 setStandardPropertiesWith:v20 completionHandler:v19];
      _Block_release(v19);

      return;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
}

void sub_1000D5C3C(void *a1)
{
  if (sub_1000E0130()) {
    sub_1000D9068(a1, (uint64_t)CFRange.init(_:), 0);
  }
}

void MetricsReportingController.recordComponentRenderEvent(_:)(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_10045F9F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v7 = (void *)((char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009854(0, (unint64_t *)&qword_100576320);
  uint64_t *v7 = sub_1004618F0();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = sub_10045FA20();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    JUMPOUT(0x1000D627CLL);
  }
  id v9 = [objc_allocWithZone((Class)type metadata accessor for Music_SSMetricsComponentRenderEvent()) init];
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRetain();
    NSString v10 = sub_100460C70();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  NSString v11 = sub_100460C70();
  [v9 setProperty:v10 forBodyKey:v11];
  swift_unknownObjectRelease();

  sub_100019960(a1 + 16, (uint64_t)&v37, &qword_100574748);
  sub_100019960((uint64_t)&v37, (uint64_t)&v38, &qword_100574748);
  if (v38 == 24)
  {
    NSString v12 = 0;
  }
  else
  {
    MetricsEvent.TargetType.rawValue.getter(v38);
    NSString v12 = sub_100460C70();
    swift_bridgeObjectRelease();
  }
  NSString v13 = sub_100460C70();
  [v9 setProperty:v12 forBodyKey:v13];
  swift_unknownObjectRelease();

  id v14 = *(id *)(a1 + 24);
  NSString v15 = sub_100460C70();
  [v9 setProperty:v14 forBodyKey:v15];

  id v16 = *(id *)(a1 + 32);
  NSString v17 = sub_100460C70();
  [v9 setProperty:v16 forBodyKey:v17];

  id v18 = *(id *)(a1 + 40);
  NSString v19 = sub_100460C70();
  [v9 setProperty:v18 forBodyKey:v19];

  id v20 = *(id *)(a1 + 48);
  NSString v21 = sub_100460C70();
  [v9 setProperty:v20 forBodyKey:v21];

  id v22 = *(id *)(a1 + 56);
  NSString v23 = sub_100460C70();
  [v9 setProperty:v22 forBodyKey:v23];

  id v24 = *(id *)(a1 + 64);
  NSString v25 = sub_100460C70();
  [v9 setProperty:v24 forBodyKey:v25];

  sub_100019960(a1 + 72, (uint64_t)&v36, &qword_100574750);
  sub_100019960((uint64_t)&v36, (uint64_t)&v39, &qword_100574750);
  NSString v26 = 0;
  switch(v39)
  {
    case 4:
      break;
    default:
      NSString v26 = sub_100460C70();
      swift_bridgeObjectRelease();
      break;
  }
  NSString v27 = sub_100460C70();
  [v9 setProperty:v26 forBodyKey:v27];
  swift_unknownObjectRelease();

  NSString v28 = *(void **)&v2[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v2;
  *(void *)(v29 + 24) = v9;
  aBlock[4] = sub_1000DB080;
  aBlock[5] = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1000F6CC0;
  aBlock[3] = &unk_10052C740;
  NSArray v30 = _Block_copy(aBlock);
  id v31 = v28;
  NSString v32 = v2;
  id v33 = v9;
  swift_release();
  [v33 setStandardPropertiesWith:v31 completionHandler:v30];
  _Block_release(v30);
}

void MetricsReportingController.recordPageRenderEvent<A>(_:pageContext:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v101 = a2;
  uint64_t v7 = sub_100005BFC(&qword_100571720);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10045F9F0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  NSString v13 = (uint64_t *)((char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009854(0, (unint64_t *)&qword_100576320);
  *NSString v13 = sub_1004618F0();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  char v14 = sub_10045FA20();
  (*(void (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if (v14)
  {
    uint64_t v102 = v9;
    unint64_t v104 = v4;
    id v15 = [objc_allocWithZone((Class)type metadata accessor for Music_SSMetricsPageRenderEvent()) init];
    swift_beginAccess();
    id v16 = *(void **)(a1 + 16);
    swift_beginAccess();
    char v17 = *(unsigned char *)(a1 + 32);
    unint64_t v103 = a3;
    if (v17)
    {
      id v18 = v16;
      uint64_t v19 = 0;
    }
    else
    {
      double v20 = *(double *)(a1 + 24);
      NSString v21 = self;
      id v22 = v16;
      id v23 = [v21 serverTimeFromTimeInterval:v20];
      id v24 = [v23 unsignedLongLongValue];

      id v112 = v24;
      uint64_t v19 = sub_100462770();
    }
    NSString v25 = sub_100460C70();
    [v15 setProperty:v19 forBodyKey:v25];
    swift_unknownObjectRelease();

    swift_beginAccess();
    uint64_t v26 = 0;
    if ((*(unsigned char *)(a1 + 48) & 1) == 0)
    {
      id v27 = [self serverTimeFromTimeInterval:*(double *)(a1 + 40)];
      id v28 = [v27 unsignedLongLongValue];

      id v111 = v28;
      uint64_t v26 = sub_100462770();
    }
    NSString v29 = sub_100460C70();
    [v15 setProperty:v26 forBodyKey:v29];
    swift_unknownObjectRelease();

    swift_beginAccess();
    uint64_t v30 = 0;
    if ((*(unsigned char *)(a1 + 64) & 1) == 0)
    {
      id v31 = [self serverTimeFromTimeInterval:*(double *)(a1 + 56)];
      id v32 = [v31 unsignedLongLongValue];

      id v110 = v32;
      uint64_t v30 = sub_100462770();
    }
    NSString v33 = sub_100460C70();
    [v15 setProperty:v30 forBodyKey:v33];
    swift_unknownObjectRelease();

    swift_beginAccess();
    uint64_t v34 = 0;
    if ((*(unsigned char *)(a1 + 80) & 1) == 0)
    {
      id v35 = [self serverTimeFromTimeInterval:*(double *)(a1 + 72)];
      id v36 = [v35 unsignedLongLongValue];

      id v109 = v36;
      uint64_t v34 = sub_100462770();
    }
    NSString v37 = sub_100460C70();
    [v15 setProperty:v34 forBodyKey:v37];
    swift_unknownObjectRelease();

    swift_beginAccess();
    uint64_t v38 = 0;
    if ((*(unsigned char *)(a1 + 96) & 1) == 0)
    {
      id v39 = [self serverTimeFromTimeInterval:*(double *)(a1 + 88)];
      id v40 = [v39 unsignedLongLongValue];

      id v108 = v40;
      uint64_t v38 = sub_100462770();
    }
    NSString v41 = sub_100460C70();
    [v15 setProperty:v38 forBodyKey:v41];
    swift_unknownObjectRelease();

    swift_beginAccess();
    uint64_t v42 = 0;
    if ((*(unsigned char *)(a1 + 112) & 1) == 0)
    {
      id v43 = [self serverTimeFromTimeInterval:*(double *)(a1 + 104)];
      id v44 = [v43 unsignedLongLongValue];

      id v107 = v44;
      uint64_t v42 = sub_100462770();
    }
    NSString v45 = sub_100460C70();
    [v15 setProperty:v42 forBodyKey:v45];
    swift_unknownObjectRelease();

    swift_beginAccess();
    uint64_t v46 = 0;
    if ((*(unsigned char *)(a1 + 128) & 1) == 0)
    {
      id v47 = [self serverTimeFromTimeInterval:*(double *)(a1 + 120)];
      id v48 = [v47 unsignedLongLongValue];

      uint64_t v105 = (uint64_t)v48;
      uint64_t v46 = sub_100462770();
    }
    NSString v49 = sub_100460C70();
    [v15 setProperty:v46 forBodyKey:v49];
    swift_unknownObjectRelease();

    if (v16)
    {
      [v16 requestStartTime];
      id v51 = [self serverTimeFromTimeInterval:v50];
      id v52 = [v51 unsignedLongLongValue];

      uint64_t v105 = (uint64_t)v52;
      uint64_t v53 = sub_100462770();
      NSString v54 = sub_100460C70();
      [v15 setProperty:v53 forBodyKey:v54];
      swift_unknownObjectRelease();

      [v16 responseStartTime];
      id v56 = [self serverTimeFromTimeInterval:v55];
      id v57 = [v56 unsignedLongLongValue];

      uint64_t v105 = (uint64_t)v57;
      uint64_t v58 = sub_100462770();
    }
    else
    {
      NSString v59 = sub_100460C70();
      [v15 setProperty:0 forBodyKey:v59];

      uint64_t v58 = 0;
    }
    NSString v60 = sub_100460C70();
    [v15 setProperty:v58 forBodyKey:v60];
    swift_unknownObjectRelease();

    if (v16)
    {
      [v16 responseEndTime];
      id v62 = [self serverTimeFromTimeInterval:v61];
      id v63 = [v62 unsignedLongLongValue];

      uint64_t v105 = (uint64_t)v63;
      uint64_t v64 = sub_100462770();
      NSString v65 = sub_100460C70();
      [v15 setProperty:v64 forBodyKey:v65];
      swift_unknownObjectRelease();

      unsigned __int8 v66 = [v16 cachedResponse];
    }
    else
    {
      NSString v67 = sub_100460C70();
      [v15 setProperty:0 forBodyKey:v67];

      unsigned __int8 v66 = 0;
    }
    LOBYTE(v105) = v66;
    uint64_t v68 = sub_100462770();
    NSString v69 = sub_100460C70();
    [v15 setProperty:v68 forBodyKey:v69];
    swift_unknownObjectRelease();

    NSString v70 = (id *)(a1 + *(void *)(*(void *)a1 + 160));
    id v71 = v70[1];
    uint64_t v105 = (uint64_t)*v70;
    id v106 = v71;
    swift_bridgeObjectRetain_n();
    uint64_t v72 = sub_100462770();
    NSString v73 = sub_100460C70();
    [v15 setProperty:v72 forBodyKey:v73];
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    id v74 = v70[3];
    uint64_t v105 = (uint64_t)v70[2];
    id v106 = v74;
    swift_bridgeObjectRetain_n();
    uint64_t v75 = sub_100462770();
    NSString v76 = sub_100460C70();
    [v15 setProperty:v75 forBodyKey:v76];
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    uint64_t v77 = type metadata accessor for MetricsPageProperties();
    uint64_t v78 = (uint64_t)v102;
    sub_100019ABC((uint64_t)v70 + *(int *)(v77 + 24), (uint64_t)v102, &qword_100571720);
    uint64_t v79 = sub_10045BDE0();
    uint64_t v80 = *(void *)(v79 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79) == 1)
    {
      sub_100009790(v78, &qword_100571720);
      uint64_t v81 = 0;
    }
    else
    {
      uint64_t v82 = sub_10045BCF0();
      id v84 = v83;
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v78, v79);
      uint64_t v105 = v82;
      id v106 = v84;
      swift_bridgeObjectRetain();
      uint64_t v81 = sub_100462770();
    }
    NSString v85 = sub_100460C70();
    [v15 setProperty:v81 forBodyKey:v85];
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    if (*(id *)((char *)v70 + *(int *)(v77 + 28)))
    {
      uint64_t v105 = *(uint64_t *)((char *)v70 + *(int *)(v77 + 28));
      swift_bridgeObjectRetain_n();
      sub_100005BFC(&qword_100574730);
      uint64_t v86 = sub_100462770();
    }
    else
    {
      uint64_t v86 = 0;
    }
    NSString v87 = v103;
    NSString v88 = sub_100460C70();
    [v15 setProperty:v86 forBodyKey:v88];
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    if (v87)
    {
      uint64_t v105 = v101;
      id v106 = v87;
      swift_bridgeObjectRetain_n();
      uint64_t v89 = sub_100462770();
    }
    else
    {
      uint64_t v89 = 0;
    }
    NSString v90 = sub_100460C70();
    [v15 setProperty:v89 forBodyKey:v90];
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    char v91 = v104;
    uint64_t v92 = *(void **)&v104[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    uint64_t v93 = swift_allocObject();
    *(void *)(v93 + 16) = v91;
    *(void *)(v93 + 24) = v15;
    id v94 = v92;
    id v95 = v15;
    id v96 = v94;
    id v97 = v95;
    swift_retain();
    id v98 = v91;
    id v99 = v97;
    sub_1000E3340(v92, v99, v99, (uint64_t)v92, (uint64_t)sub_1000DB0B8, v93);

    swift_release_n();
  }
  else
  {
    __break(1u);
  }
}

void sub_1000D70A0(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(void *))
{
  if (a4(a2)) {
    sub_1000D9068(a2, (uint64_t)CFRange.init(_:), 0);
  }
}

void MetricsReportingController.recordCustomEvent(with:properties:sharedListeningContext:shouldSuppressUserInfo:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, unint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  unint64_t v23 = a6;
  unint64_t v22 = a5;
  uint64_t v12 = sub_10045F9F0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (uint64_t *)((char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009854(0, (unint64_t *)&qword_100576320);
  uint64_t *v15 = sub_1004618F0();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  char v16 = sub_10045FA20();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    id v17 = [objc_allocWithZone((Class)SSMetricsCustomEvent) init];
    NSString v18 = sub_100460C70();
    [v17 setTopic:v18];

    Class isa = sub_100460A70().super.isa;
    [v17 addPropertiesWithDictionary:isa];

    [v17 setShouldSuppressUserInfo:a7 & 1];
    [v17 setShouldSuppressDSIDHeader:a7 & 1];
    if (a4 != 2)
    {
      if (sub_1000DA728(a4 & 1, v22, v23))
      {
        Class v20 = sub_100460A70().super.isa;
        swift_bridgeObjectRelease();
        [v17 addPropertiesWithDictionary:v20];
      }
    }
    sub_1000D9068(v17, a8, a9);
  }
  else
  {
    __break(1u);
  }
}

void MetricsReportingController.recordCarPlayCustomEvent(with:properties:shouldSuppressUserInfo:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a2;
  uint64_t v36 = a1;
  uint64_t v37 = a5;
  uint64_t v8 = sub_10045C1E0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10045F9F0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (uint64_t *)((char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009854(0, (unint64_t *)&qword_100576320);
  uint64_t *v15 = sub_1004618F0();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  char v16 = sub_10045FA20();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    id v17 = [objc_allocWithZone((Class)SSMetricsCustomEvent) init];
    uint64_t v35 = a6;
    NSString v18 = v17;
    Class isa = sub_100460A70().super.isa;
    [v18 addPropertiesWithDictionary:isa];

    [v18 setShouldSuppressUserInfo:a4 & 1];
    [v18 setShouldSuppressDSIDHeader:a4 & 1];
    sub_100005BFC(&qword_100574E40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100466900;
    strcpy((char *)(inited + 32), "clientEventId");
    *(_WORD *)(inited + 46) = -4864;
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    uint64_t v21 = sub_10045C1B0();
    uint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v21;
    *(void *)(inited + 56) = v23;
    sub_1000CB020(inited);
    Class v24 = sub_100460A70().super.isa;
    swift_bridgeObjectRelease();
    [v18 addPropertiesWithDictionary:v24];

    NSString v25 = v39;
    uint64_t v26 = *(void **)&v39[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration];
    id v27 = (void *)swift_allocObject();
    uint64_t v29 = v35;
    uint64_t v28 = v36;
    v27[2] = v18;
    v27[3] = v28;
    uint64_t v30 = v37;
    v27[4] = v38;
    v27[5] = v25;
    v27[6] = v30;
    v27[7] = v29;
    aBlock[4] = sub_1000DB240;
    aBlock[5] = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1000F6CC0;
    aBlock[3] = &unk_10052C7B8;
    id v31 = _Block_copy(aBlock);
    id v32 = v26;
    id v33 = v18;
    swift_bridgeObjectRetain();
    id v34 = v25;
    swift_retain();
    swift_release();
    [v33 setStandardPropertiesWith:v32 completionHandler:v31];
    _Block_release(v31);
  }
  else
  {
    __break(1u);
  }
}

void sub_1000D7794(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v12 = sub_100460C70();
  [a1 setTopic:v12];

  if (qword_100570750 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_10045D310();
  sub_100009688(v13, (uint64_t)static Logger.carMetrics);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_10045D2F0();
  os_log_type_t v15 = sub_100461770();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    v19[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v16 + 4) = sub_10001FCAC(a2, a3, v19);
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Inserting carPlay custom event with topic=%{public}s in metrics controller", (uint8_t *)v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v17 = *(void **)(a4 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carFocusedMetricsController);
  v19[4] = a5;
  v19[5] = a6;
  v19[0] = (uint64_t)_NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = (uint64_t)sub_1001377CC;
  v19[3] = (uint64_t)&unk_10052CE18;
  NSString v18 = _Block_copy(v19);
  swift_retain();
  swift_release();
  [v17 insertEvent:a1 withCompletionHandler:v18];
  _Block_release(v18);
}

Swift::Void __swiftcall MetricsReportingController.reportEventForLocalEvaluation(with:)(Swift::OpaquePointer with)
{
  uint64_t v1 = sub_10045F9F0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009854(0, (unint64_t *)&qword_100576320);
  *uint64_t v4 = sub_1004618F0();
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchPredicate.onQueue(_:), v1);
  char v5 = sub_10045FA20();
  (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v4, v1);
  if (v5)
  {
    id v6 = [objc_allocWithZone((Class)SSMetricsCustomEvent) init];
    Class isa = sub_100460A70().super.isa;
    [v6 addPropertiesWithDictionary:isa];
  }
  else
  {
    __break(1u);
  }
}

uint64_t MetricsReportingController.flushUnreportedEvents()()
{
  *(void *)(v1 + 120) = v0;
  return _swift_task_switch(sub_1000D7B90, 0, 0);
}

uint64_t sub_1000D7B90()
{
  if (qword_100570800 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10045D310();
  v0[16] = sub_100009688(v1, (uint64_t)qword_100586330);
  uint64_t v2 = sub_10045D2F0();
  os_log_type_t v3 = sub_100461770();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[MetricsReportingController] Attempting to flush unreported events", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[15];

  id v6 = *(void **)(v5 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController);
  v0[2] = v0;
  v0[3] = sub_1000D7D48;
  uint64_t v7 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1000D8028;
  v0[13] = &unk_10052C7E0;
  v0[14] = v7;
  [v6 flushUnreportedEventsWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1000D7D48()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    uint64_t v2 = sub_1000D7E6C;
  }
  else {
    uint64_t v2 = sub_1000D7E58;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000D7E58()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000D7E6C()
{
  uint64_t v10 = v0;
  swift_willThrow();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_10045D2F0();
  os_log_type_t v2 = sub_100461750();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[17];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[10] = v3;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v5 = sub_100460D40();
    *(void *)(v4 + 4) = sub_10001FCAC(v5, v6, &v9);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[MetricsReportingController] Failed to flush unreported events with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1000D8028(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100005BFC((uint64_t *)&unk_100575460);
    swift_allocError();
    *uint64_t v3 = a2;
    id v4 = a2;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1000D80C0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration);
  if (!v1)
  {
    long long v7 = 0u;
    long long v8 = 0u;
LABEL_11:
    sub_100009790((uint64_t)&v7, (uint64_t *)&unk_100574DB0);
    return 0;
  }
  id v2 = v1;
  NSString v3 = sub_100460C70();
  id v4 = [v2 valueForConfigurationKey:v3];

  if (v4)
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100019960((uint64_t)v6, (uint64_t)&v7, (uint64_t *)&unk_100574DB0);
  if (!*((void *)&v8 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    return *(void *)&v6[0];
  }
  else {
    return 0;
  }
}

char *sub_1000D81F4()
{
  uint64_t v1 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_componentRenderEventSampler;
  sub_100005BFC(&qword_100571198);
  uint64_t v2 = swift_allocObject();
  NSString v3 = self;
  id v4 = v0;
  *(void *)(v2 + 16) = [v3 standardUserDefaults];
  *(void *)&v0[v1] = v2;
  uint64_t v5 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageRenderEventSampler;
  sub_100005BFC((uint64_t *)&unk_1005711A0);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = [v3 standardUserDefaults];
  *(void *)&v4[v5] = v6;
  *(void *)&v4[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration] = 0;
  uint64_t v7 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController;
  *(void *)&v4[v7] = [objc_allocWithZone((Class)SSMetricsController) init];
  uint64_t v8 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carFocusedMetricsController;
  *(void *)&v4[v8] = [objc_allocWithZone((Class)SSMetricsController) init];
  uint64_t v9 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carMetricsReporter;
  type metadata accessor for CarNowPlayingMetrics.Reporter();
  *(void *)&v4[v9] = swift_allocObject();
  *(void *)&v4[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_backgroundObserver] = 0;
  *(void *)&v4[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_urlBagObserver] = 0;
  *(void *)&v4[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageHistory] = _swiftEmptyArrayStorage;

  v21.receiver = v4;
  v21.super_class = (Class)type metadata accessor for MetricsReportingController();
  id v10 = [super init];
  uint64_t v11 = qword_1005708D0;
  NSString v12 = (char *)v10;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for BagProvider.Observer();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  *(void *)(v14 + 24) = 0;
  *(void *)(v14 + 32) = 0;
  swift_weakAssign();
  uint64_t v15 = *(void *)(v14 + 24);
  *(void *)(v14 + 24) = sub_1000DEE58;
  *(void *)(v14 + 32) = v13;
  swift_retain_n();
  uint64_t v16 = sub_10004CAE0(v15);
  __chkstk_darwin(v16);
  UnfairLock.locked<A>(_:)(sub_1000DEE60);
  sub_1000FC9B4(0);
  swift_release();
  swift_release_n();
  *(void *)&v12[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_urlBagObserver] = v14;
  swift_release();
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for NotificationObserver();
  swift_allocObject();
  NSString v18 = UISceneDidEnterBackgroundNotification;
  swift_retain();
  uint64_t v19 = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v18, 0, 1, 1, (uint64_t)sub_1000DEE80, v17);
  swift_release();

  *(void *)&v12[OBJC_IVAR____TtC9MusicCore26MetricsReportingController_backgroundObserver] = v19;
  swift_release();
  return v12;
}

uint64_t sub_1000D861C(void *a1, uint64_t a2)
{
  sub_100009854(0, (unint64_t *)&qword_100576320);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  swift_retain();
  id v5 = a1;
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_1000DF120, v4);

  return swift_release();
}

void sub_1000D86C0(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_1000D8C5C(a2);
  }
}

uint64_t sub_1000D871C()
{
  uint64_t v0 = sub_100005BFC(&qword_100574B80);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100570800 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_10045D310();
  sub_100009688(v3, (uint64_t)qword_100586330);
  uint64_t v4 = sub_10045D2F0();
  os_log_type_t v5 = sub_100461770();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    swift_slowDealloc();
  }

  sub_1004612A0();
  uint64_t v7 = sub_1004612C0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 0, 1, v7);
  uint64_t v8 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  id v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v8;
  sub_100039C5C((uint64_t)v2, (uint64_t)&unk_100574970, (uint64_t)v10);
  swift_release();
  return sub_100009790((uint64_t)v2, &qword_100574B80);
}

uint64_t sub_1000D8938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 88) = a4;
  return _swift_task_switch(sub_1000D8958, 0, 0);
}

uint64_t sub_1000D8958()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    swift_retain();

    sub_1000C8D34(0);
    swift_release();
  }
  swift_beginAccess();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    swift_retain();

    sub_1000C8D34(1);
    swift_release();
  }
  swift_beginAccess();
  uint64_t v5 = swift_unknownObjectWeakLoadStrong();
  v0[12] = v5;
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[13] = v7;
    void *v7 = v0;
    v7[1] = sub_1000D8B2C;
    v7[15] = v6;
    return _swift_task_switch(sub_1000D7B90, 0, 0);
  }
  else
  {
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_1000D8B2C()
{
  uint64_t v1 = *(void **)(*v0 + 96);
  uint64_t v4 = *v0;
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

void sub_1000D8C5C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10045F9F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009854(0, (unint64_t *)&qword_100576320);
  uint64_t *v7 = sub_1004618F0();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = sub_10045FA20();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
    return;
  }
  id v9 = [a1 dictionaryForBagKey:SSMetricsURLBagKey];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = sub_100460A90();

    if (!*(void *)(v11 + 16))
    {
      swift_bridgeObjectRelease();
      return;
    }
    id v12 = [a1 dictionaryForBagKey:SSVURLBagKeyMusicCommon];
    if (v12)
    {
      uint64_t v13 = v12;
      uint64_t v14 = sub_100460A90();

      *(void *)&long long v27 = 0xD000000000000023;
      *((void *)&v27 + 1) = 0x8000000100490010;
      sub_1004620C0();
      if (*(void *)(v14 + 16) && (unint64_t v15 = sub_1000D9AC0((uint64_t)v29), (v16 & 1) != 0))
      {
        sub_100007168(*(void *)(v14 + 56) + 32 * v15, (uint64_t)&v27);
      }
      else
      {
        long long v27 = 0u;
        long long v28 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_1000CD76C((uint64_t)v29);
      if (*((void *)&v28 + 1))
      {
        sub_1000CD75C(&v27, v30);
        strcpy((char *)&v27, "postFrequency");
        HIWORD(v27) = -4864;
        sub_1004620C0();
        sub_100007168((uint64_t)v30, (uint64_t)&v27);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v26[1] = v11;
        sub_1000CC3BC(&v27, (uint64_t)v29, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        sub_1000CD76C((uint64_t)v29);
        sub_100007118((uint64_t)v30);
        int v18 = 1;
        goto LABEL_14;
      }
      sub_100009790((uint64_t)&v27, (uint64_t *)&unk_100574DB0);
    }
    int v18 = 0;
LABEL_14:
    id v19 = objc_allocWithZone((Class)SSMetricsConfiguration);
    Class isa = sub_100460A70().super.isa;
    swift_bridgeObjectRelease();
    id v21 = [v19 initWithGlobalConfiguration:isa];

    if (v21)
    {
      uint64_t v22 = *(void **)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration);
      *(void *)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsConfiguration) = v21;
      id v23 = v21;

      [v23 setDisableEventDecoration:[v23 _decorateITMLEvents] ^ 1];
      Class v24 = *(void **)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController);
      [v24 setGlobalConfiguration:v23];
      [v24 setFlushTimerEnabled:1];
      if (v18)
      {
        NSString v25 = *(void **)(v2 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_carFocusedMetricsController);
        [v25 setGlobalConfiguration:v23];
        [v25 setFlushTimerEnabled:1];
      }
    }
  }
}

void sub_1000D9068(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v25 = a2;
  uint64_t v7 = sub_10045C1E0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10045F9F0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100009854(0, (unint64_t *)&qword_100576320);
  *uint64_t v14 = sub_1004618F0();
  (*(void (**)(uint64_t *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  char v15 = sub_10045FA20();
  (*(void (**)(uint64_t *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    sub_1000D93C4(a1);
    sub_100005BFC(&qword_100574E40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100466900;
    strcpy((char *)(inited + 32), "clientEventId");
    *(_WORD *)(inited + 46) = -4864;
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    uint64_t v17 = sub_10045C1B0();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v17;
    *(void *)(inited + 56) = v19;
    sub_1000CB020(inited);
    Class isa = sub_100460A70().super.isa;
    swift_bridgeObjectRelease();
    [a1 addPropertiesWithDictionary:isa];

    id v21 = *(void **)(v4 + OBJC_IVAR____TtC9MusicCore26MetricsReportingController_metricsController);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v25;
    *(void *)(v22 + 24) = a3;
    aBlock[4] = sub_1000DF040;
    aBlock[5] = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1001377CC;
    aBlock[3] = &unk_10052CE68;
    id v23 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v21 insertEvent:a1 withCompletionHandler:v23];
    _Block_release(v23);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000D93C4(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 eventType];
  if (!v4)
  {
    sub_100460CB0();
    goto LABEL_10;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_100460CB0();
  uint64_t v8 = v7;

  uint64_t v9 = sub_100460CB0();
  if (!v8)
  {
LABEL_10:
    return swift_bridgeObjectRelease();
  }
  if (v6 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = sub_1004626E0();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  uint64_t v14 = OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageHistory;
  swift_bridgeObjectRetain();
  Class isa = sub_100461080().super.isa;
  swift_bridgeObjectRelease();
  NSString v16 = sub_100460C70();
  [a1 setProperty:isa forBodyKey:v16];

  uint64_t result = sub_1000E02B0();
  if (v17)
  {
    uint64_t v18 = result;
    uint64_t v19 = v17;
    uint64_t v20 = *(void *)(v2 + v14);
    if (*(void *)(v20 + 16) >= 5uLL)
    {
      swift_bridgeObjectRetain();
      *(void *)(v2 + v14) = sub_1000D95F8(4, v20);
      swift_bridgeObjectRelease();
      uint64_t v20 = *(void *)(v2 + v14);
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + v14) = v20;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1000511A8(0, *(void *)(v20 + 16) + 1, 1, (char *)v20);
      uint64_t v20 = result;
      *(void *)(v2 + v14) = result;
    }
    unint64_t v21 = *(void *)(v20 + 16);
    unint64_t v22 = *(void *)(v20 + 24);
    unint64_t v23 = v21 + 1;
    if (v21 >= v22 >> 1)
    {
      uint64_t v25 = (char *)v20;
      unint64_t v26 = *(void *)(v20 + 16);
      uint64_t result = (uint64_t)sub_1000511A8((char *)(v22 > 1), v21 + 1, 1, v25);
      unint64_t v21 = v26;
      uint64_t v20 = result;
      *(void *)(v2 + v14) = result;
    }
    *(void *)(v20 + 16) = v23;
    uint64_t v24 = v20 + 16 * v21;
    *(void *)(v24 + 32) = v18;
    *(void *)(v24 + 40) = v19;
  }
  return result;
}

uint64_t sub_1000D95F8(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v3 = result;
  if (result)
  {
    int64_t v4 = *(void *)(a2 + 16) >= result ? result : *(void *)(a2 + 16);
    sub_1000A01EC(0, v4, 0);
    uint64_t v5 = *(void *)(a2 + 16);
    if (v5)
    {
      uint64_t result = swift_bridgeObjectRetain();
      unint64_t v6 = 0;
      unint64_t v7 = 0;
      uint64_t v8 = -v5;
      uint64_t v20 = v5;
      do
      {
LABEL_8:
        if (v7 >= *(void *)(a2 + 16)) {
          goto LABEL_39;
        }
        uint64_t v9 = (uint64_t *)(a2 + 32 + 16 * v7);
        uint64_t v11 = *v9;
        uint64_t v10 = v9[1];
        unint64_t v12 = _swiftEmptyArrayStorage[2];
        if ((uint64_t)v12 < v3)
        {
          ++v7;
LABEL_22:
          unint64_t v15 = _swiftEmptyArrayStorage[3];
          int64_t v21 = v12 + 1;
          uint64_t result = swift_bridgeObjectRetain();
          if (v12 >= v15 >> 1) {
            uint64_t result = (uint64_t)sub_1000A01EC((char *)(v15 > 1), v21, 1);
          }
          _swiftEmptyArrayStorage[2] = v21;
          NSString v16 = &_swiftEmptyArrayStorage[2 * v12];
          v16[4] = v11;
          v16[5] = v10;
        }
        else
        {
          uint64_t result = swift_bridgeObjectRetain();
          if (v6 >= v12) {
            goto LABEL_40;
          }
          uint64_t v13 = &_swiftEmptyArrayStorage[2 * v6 + 4];
          uint64_t result = swift_bridgeObjectRelease();
          *uint64_t v13 = v11;
          v13[1] = v10;
          if ((uint64_t)++v6 >= v3)
          {
            if (v7 + 1 == v20)
            {
LABEL_30:
              swift_bridgeObjectRelease();
              goto LABEL_31;
            }
            uint64_t v14 = (uint64_t *)(a2 + 56 + 16 * v7);
            v7 += 2;
            while (v7 - 1 < *(void *)(a2 + 16))
            {
              uint64_t v11 = *(v14 - 1);
              uint64_t v10 = *v14;
              unint64_t v12 = _swiftEmptyArrayStorage[2];
              if ((uint64_t)v12 < v3)
              {
                unint64_t v6 = 0;
                goto LABEL_22;
              }
              swift_bridgeObjectRetain();
              uint64_t result = swift_bridgeObjectRelease();
              _swiftEmptyArrayStorage[4] = v11;
              _swiftEmptyArrayStorage[5] = v10;
              if (v3 > 1)
              {
                unint64_t v6 = 1;
                if (v8 + v7) {
                  goto LABEL_8;
                }
                swift_bridgeObjectRelease();
                unint64_t v6 = 1;
                goto LABEL_34;
              }
              ++v7;
              v14 += 2;
              if (v8 + v7 == 1) {
                goto LABEL_30;
              }
            }
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          ++v7;
        }
      }
      while (v7 != v20);
      swift_bridgeObjectRelease();
      if (v6)
      {
LABEL_34:
        int64_t v17 = _swiftEmptyArrayStorage[2];
        uint64_t result = (uint64_t)sub_1000A01EC(0, v17, 0);
        if (v17 < (uint64_t)v6) {
          goto LABEL_42;
        }
        if ((v6 & 0x8000000000000000) == 0)
        {
          unint64_t v18 = _swiftEmptyArrayStorage[2];
          if (v18 >= v6 && v18 >= v17)
          {
            uint64_t v19 = swift_retain();
            sub_1000DB0F0(v19, (uint64_t)&_swiftEmptyArrayStorage[4], v6, (2 * v17) | 1);
            swift_bridgeObjectRelease();
            swift_release();
            sub_1000DB0F0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&_swiftEmptyArrayStorage[4], 0, (2 * v6) | 1);
            swift_release();
            return (uint64_t)_swiftEmptyArrayStorage;
          }
          goto LABEL_44;
        }
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        return result;
      }
    }
  }
LABEL_31:
  swift_bridgeObjectRelease();
  return (uint64_t)_swiftEmptyArrayStorage;
}

id MetricsReportingController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MetricsReportingController();
  return [super dealloc];
}

uint64_t sub_1000D99E8()
{
  NSString v1 = sub_100460C70();
  id v2 = [v0 propertyForBodyKey:v1];

  if (v2)
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
    sub_1000CD75C(&v4, v5);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_100005BFC((uint64_t *)&unk_100574DB0);
  sub_100009854(0, &qword_100574988);
  if (swift_dynamicCast()) {
    return v4;
  }
  else {
    return 0;
  }
}

unint64_t sub_1000D9AC0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1004620A0(*(void *)(v2 + 40));

  return sub_1000D9E4C(a1, v4);
}

unint64_t sub_1000D9B04(unsigned __int8 a1)
{
  sub_1004628B0();
  sub_1004628C0(a1);
  Swift::Int v2 = sub_100462900();

  return sub_1000D9F14(a1, v2);
}

unint64_t sub_1000D9B70(uint64_t a1)
{
  sub_10045C1E0();
  sub_1000DEFC4(&qword_1005782A0);
  uint64_t v2 = sub_100460B20();

  return sub_1000D9FB4(a1, v2);
}

unint64_t sub_1000D9BF4(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_100461D00(*(void *)(v2 + 40));

  return sub_1000DA160(a1, v4);
}

unint64_t sub_1000D9C38(Swift::UInt a1, Swift::UInt a2)
{
  sub_1004628B0();
  sub_1004628C0(a1);
  sub_1004628C0(a2);
  Swift::Int v4 = sub_100462900();

  return sub_1000DA27C(a1, a2, v4);
}

unint64_t sub_1000D9CB8(uint64_t a1)
{
  sub_100460CB0();
  sub_1004628B0();
  sub_100460DA0();
  Swift::Int v2 = sub_100462900();
  swift_bridgeObjectRelease();

  return sub_1000DA2F8(a1, v2);
}

unint64_t sub_1000D9D4C(uint64_t a1)
{
  sub_100460CB0();
  sub_1004628B0();
  sub_100460DA0();
  Swift::Int v2 = sub_100462900();
  swift_bridgeObjectRelease();
  return sub_1000DA2F8(a1, v2);
}

unint64_t sub_1000D9DDC(unsigned __int8 a1)
{
  sub_1004628B0();
  sub_1004628C0(a1 + 1);
  Swift::Int v2 = sub_100462900();

  return sub_1000D9F14(a1, v2);
}

unint64_t sub_1000D9E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_1000CDA70(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_1004620B0();
      sub_1000CD76C((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1000D9F14(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1000D9FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_10045C1E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_1000DEFC4(&qword_100574978);
      char v15 = sub_100460BD0();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_1000DA160(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_100009854(0, &qword_100574598);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_100461D10();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_100461D10();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1000DA27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    do
    {
      uint64_t v8 = (uint64_t *)(*(void *)(v3 + 48) + 16 * result);
      uint64_t v10 = *v8;
      uint64_t v9 = v8[1];
      if (v10 == a1 && v9 == a2) {
        break;
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1000DA2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_100460CB0();
    uint64_t v8 = v7;
    if (v6 == sub_100460CB0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1004626E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_100460CB0();
          uint64_t v15 = v14;
          if (v13 == sub_100460CB0() && v15 == v16) {
            break;
          }
          char v18 = sub_1004626E0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1000DA470(unint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    swift_stdlib_random();
    unint64_t result = (0 * (unsigned __int128)v1) >> 64;
    if (-(uint64_t)v1 % v1)
    {
      while (1)
        swift_stdlib_random();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t _s9MusicCore12MetricsEventV5ClickV13ActionContextO21__derived_enum_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2)
  {
    case 0:
      if (a4) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 1:
      if (a4 != 1) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a4 != 2) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a4 != 3) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 4:
      if (a4 != 4) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 5:
      if (a4 != 5) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 6:
      if (a4 != 6) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 7:
      if (a4 != 7) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 8:
      if (a4 != 8) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    case 9:
      if (a4 != 9) {
        goto LABEL_26;
      }
      uint64_t result = 1;
      break;
    default:
      if (a4 < 0xA)
      {
LABEL_26:
        uint64_t result = 0;
      }
      else if (a1 == a3 && a2 == a4)
      {
        uint64_t result = 1;
      }
      else
      {
        uint64_t result = sub_1004626E0();
      }
      break;
  }
  return result;
}

uint64_t sub_1000DA61C(unint64_t a1)
{
  if (a1 <= 1) {
    return sub_100462660();
  }
  if (a1 - 5 > 0xFFFFFFFFFFFFFFFCLL) {
    return 3419442;
  }
  if (a1 - 8 > 0xFFFFFFFFFFFFFFFCLL) {
    return 3616053;
  }
  if (a1 - 11 > 0xFFFFFFFFFFFFFFFCLL) {
    return 808529208;
  }
  if (a1 - 16 > 0xFFFFFFFFFFFFFFFALL) {
    return 0x35312D3131;
  }
  if (a1 - 21 > 0xFFFFFFFFFFFFFFFALL) {
    return 0x30322D3631;
  }
  if (a1 - 26 >= 0xFFFFFFFFFFFFFFFBLL) {
    return 0x35322D3132;
  }
  return 2831922;
}

unint64_t sub_1000DA728(char a1, unint64_t a2, unint64_t a3)
{
  sub_100005BFC(&qword_100574E40);
  if (a1)
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1004668C0;
    strcpy((char *)(inited + 32), "sharedActivity");
    *(unsigned char *)(inited + 47) = -18;
    *(unsigned char *)(inited + 48) = 1;
    *(void *)(inited + 72) = &type metadata for Bool;
    *(void *)(inited + 80) = 0xD00000000000001CLL;
    *(void *)(inited + 88) = 0x8000000100490090;
    *(void *)(inited + 96) = sub_1000DA61C(a2);
    *(void *)(inited + 104) = v7;
    *(void *)(inited + 120) = &type metadata for String;
    *(void *)(inited + 128) = 0xD000000000000018;
    *(void *)(inited + 136) = 0x800000010048FB80;
    uint64_t v8 = sub_1000DA61C(a3);
    *(void *)(inited + 168) = &type metadata for String;
    *(void *)(inited + 144) = v8;
    *(void *)(inited + 152) = v9;
  }
  else
  {
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100466900;
    strcpy((char *)(inited + 32), "sharedActivity");
    *(unsigned char *)(inited + 47) = -18;
    *(void *)(inited + 72) = &type metadata for Bool;
    *(unsigned char *)(inited + 48) = 0;
  }
  return sub_1000CB020(inited);
}

uint64_t _s9MusicCore12MetricsEventV10TargetTypeO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0 = sub_100462730();
  swift_bridgeObjectRelease();
  if (v0 >= 0x18) {
    return 24;
  }
  else {
    return v0;
  }
}

uint64_t sub_1000DA8B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetricsEvent.Page(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000DA914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005BFC(&qword_100571720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000DA97C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s9MusicCore12MetricsEventV5ClickV10ActionTypeO8rawValueAGSgSS_tcfC_0()
{
  unint64_t v0 = sub_100462730();
  swift_bridgeObjectRelease();
  if (v0 >= 0x31) {
    return 49;
  }
  else {
    return v0;
  }
}

double sub_1000DAA30@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  [a1 domainLookupStartTime];
  double v70 = v4;
  [a1 domainLookupEndTime];
  uint64_t v6 = v5;
  [a1 connectionStartTime];
  uint64_t v8 = v7;
  [a1 secureConnectionStartTime];
  uint64_t v10 = v9;
  [a1 connectionEndTime];
  uint64_t v12 = v11;
  [a1 requestStartTime];
  uint64_t v14 = v13;
  [a1 responseStartTime];
  uint64_t v16 = v15;
  [a1 responseEndTime];
  uint64_t v18 = v17;
  [a1 fetchStartTime];
  uint64_t v20 = v19;
  id v69 = [a1 redirectCount];
  id v21 = [a1 requestUrl];
  if (v21)
  {
    unint64_t v22 = v21;
    uint64_t v23 = sub_100460CB0();
    uint64_t v67 = v24;
    uint64_t v68 = v23;
  }
  else
  {
    uint64_t v67 = 0;
    uint64_t v68 = 0;
  }
  unsigned __int8 v66 = [a1 cachedResponse];
  unsigned __int8 v65 = [a1 connectionReused];
  id v25 = [a1 appleTimingApp];
  if (v25)
  {
    unint64_t v26 = v25;
    uint64_t v27 = sub_100460CB0();
    uint64_t v63 = v28;
    uint64_t v64 = v27;
  }
  else
  {
    uint64_t v63 = 0;
    uint64_t v64 = 0;
  }
  id v29 = [a1 connectionType];
  if (v29)
  {
    uint64_t v30 = v29;
    uint64_t v31 = sub_100460CB0();
    uint64_t v61 = v32;
    uint64_t v62 = v31;
  }
  else
  {
    uint64_t v61 = 0;
    uint64_t v62 = 0;
  }
  id v33 = [a1 edgeNodeCacheStatus];
  if (v33)
  {
    id v34 = v33;
    uint64_t v35 = sub_100460CB0();
    uint64_t v59 = v36;
    uint64_t v60 = v35;
  }
  else
  {
    uint64_t v59 = 0;
    uint64_t v60 = 0;
  }
  id v37 = [a1 environmentDataCenter];
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = sub_100460CB0();
    uint64_t v55 = v40;
    uint64_t v57 = v39;
  }
  else
  {
    uint64_t v55 = 0;
    uint64_t v57 = 0;
  }
  id v41 = [a1 responseDate:v55, v57];
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v43 = sub_100460CB0();
    uint64_t v45 = v44;
  }
  else
  {
    uint64_t v43 = 0;
    uint64_t v45 = 0;
  }
  id v46 = [a1 statusCode];
  id v47 = [a1 requestMessageSize];
  id v48 = [a1 responseMessageSize];
  id v49 = [a1 resolvedIPAddress];
  if (v49)
  {
    double v50 = v49;
    uint64_t v51 = sub_100460CB0();
    uint64_t v53 = v52;
  }
  else
  {

    uint64_t v51 = 0;
    uint64_t v53 = 0;
  }
  double result = v70;
  *(double *)a2 = v70;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v6;
  *(unsigned char *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v8;
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = v10;
  *(unsigned char *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = v12;
  *(unsigned char *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = v14;
  *(unsigned char *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = v16;
  *(unsigned char *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = v18;
  *(unsigned char *)(a2 + 120) = 0;
  *(void *)(a2 + 128) = v20;
  *(unsigned char *)(a2 + 136) = 0;
  *(void *)(a2 + 144) = v69;
  *(unsigned char *)(a2 + 152) = 0;
  *(void *)(a2 + 160) = v68;
  *(void *)(a2 + 168) = v67;
  *(unsigned char *)(a2 + 176) = v66;
  *(unsigned char *)(a2 + 177) = v65;
  *(void *)(a2 + 184) = v64;
  *(void *)(a2 + 192) = v63;
  *(void *)(a2 + 200) = v62;
  *(void *)(a2 + 208) = v61;
  *(void *)(a2 + 216) = v60;
  *(void *)(a2 + 224) = v59;
  *(void *)(a2 + 232) = v58;
  *(void *)(a2 + 240) = v56;
  *(void *)(a2 + 248) = v43;
  *(void *)(a2 + 256) = v45;
  *(void *)(a2 + 264) = v46;
  *(void *)(a2 + 272) = v47;
  *(void *)(a2 + 280) = v48;
  *(void *)(a2 + 288) = v51;
  *(void *)(a2 + 296) = v53;
  return result;
}

uint64_t _s9MusicCore12MetricsEventV15ComponentRenderV13PreloadStatusO8rawValueAGSgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_100523C78;
  v6._object = a2;
  unint64_t v4 = sub_100462490(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_1000DAE84(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000DAF10()
{
  return swift_deallocObject();
}

uint64_t sub_1000DAF50()
{
  return sub_1000D3F94(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_10052CF90, (uint64_t (*)(void))sub_1000DF0E0);
}

uint64_t sub_1000DAF88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000DAF98()
{
  return swift_release();
}

uint64_t sub_1000DAFA0()
{
  return sub_1000D3F94(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_10052CF68, sub_1000DF198);
}

uint64_t sub_1000DAFD8()
{
  return sub_1000D3F94(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_10052CF40, sub_1000DF198);
}

uint64_t sub_1000DB010()
{
  return sub_1000D3F94(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_10052CF18, sub_1000DF198);
}

uint64_t sub_1000DB048()
{
  return sub_1000D3F94(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_10052CEF0, (uint64_t (*)(void))sub_1000DF0D8);
}

uint64_t sub_1000DB080()
{
  return sub_1000D3F94(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_10052CEC8, (uint64_t (*)(void))sub_1000DF0A0);
}

uint64_t sub_1000DB0B8()
{
  return sub_1000D3F94(*(void **)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&unk_10052CEA0, (uint64_t (*)(void))sub_1000DF068);
}

void sub_1000DB0F0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v7 = *v4;
  int64_t v8 = *(void *)(*v4 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v4 = v7;
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v7 + 24) >> 1) {
    goto LABEL_8;
  }
  if (v5 == a3)
  {
    while (v6 > 0)
    {
      __break(1u);
LABEL_8:
      if (v8 <= v9) {
        int64_t v12 = v8 + v6;
      }
      else {
        int64_t v12 = v8;
      }
      char isUniquelyReferenced_nonNull_native = sub_1000A01EC(isUniquelyReferenced_nonNull_native, v12, 1);
      uint64_t v7 = *v4;
      if (v5 != a3) {
        goto LABEL_12;
      }
    }
    goto LABEL_16;
  }
LABEL_12:
  if ((*(void *)(v7 + 24) >> 1) - *(void *)(v7 + 16) < v6) {
    goto LABEL_19;
  }
  swift_arrayInitWithCopy();
  if (v6 <= 0)
  {
LABEL_16:
    *unint64_t v4 = v7;
    return;
  }
  uint64_t v13 = *(void *)(v7 + 16);
  BOOL v14 = __OFADD__(v13, v6);
  uint64_t v15 = v13 + v6;
  if (!v14)
  {
    *(void *)(v7 + 16) = v15;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_1000DB1F0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1000DB240()
{
  sub_1000D7794(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t type metadata accessor for MetricsReportingController()
{
  return self;
}

unint64_t sub_1000DB278()
{
  unint64_t result = qword_100574768;
  if (!qword_100574768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574768);
  }
  return result;
}

unint64_t sub_1000DB2D0()
{
  unint64_t result = qword_100574770;
  if (!qword_100574770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574770);
  }
  return result;
}

unint64_t sub_1000DB328()
{
  unint64_t result = qword_100574778;
  if (!qword_100574778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574778);
  }
  return result;
}

unint64_t sub_1000DB380()
{
  unint64_t result = qword_100574780;
  if (!qword_100574780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574780);
  }
  return result;
}

unint64_t sub_1000DB3D8()
{
  unint64_t result = qword_100574788;
  if (!qword_100574788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574788);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent()
{
  return &type metadata for MetricsEvent;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.TargetType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE9) {
    goto LABEL_17;
  }
  if (a2 + 23 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 23) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 23;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x18;
  int v8 = v6 - 24;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MetricsEvent.TargetType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE8)
  {
    unsigned int v6 = ((a2 - 233) >> 8) + 1;
    *unint64_t result = a2 + 23;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000DB598);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 23;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.TargetType()
{
  return &type metadata for MetricsEvent.TargetType;
}

void *initializeBufferWithCopyOfBuffer for MetricsEvent.Page(void *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_10045BDE0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100005BFC(&qword_100571720);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    uint64_t v17 = (void *)((char *)v4 + v16);
    uint64_t v18 = (void *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    id v21 = (void *)((char *)v4 + v20);
    unint64_t v22 = (void *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MetricsEvent.Page(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_10045BDE0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MetricsEvent.Page(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_10045BDE0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100005BFC(&qword_100571720);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  void *v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MetricsEvent.Page(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10045BDE0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100005BFC(&qword_100571720);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

_OWORD *initializeWithTake for MetricsEvent.Page(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10045BDE0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100005BFC(&qword_100571720);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  uint64_t v14 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

void *assignWithTake for MetricsEvent.Page(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_10045BDE0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_100005BFC(&qword_100571720);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Page(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000DC028);
}

uint64_t sub_1000DC028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100005BFC(&qword_100571720);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Page(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000DC0F0);
}

uint64_t sub_1000DC0F0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100005BFC(&qword_100571720);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000DC19C()
{
  sub_1000DC260();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000DC260()
{
  if (!qword_10057A060)
  {
    sub_10045BDE0();
    unint64_t v0 = sub_100461EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10057A060);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for MetricsEvent.Page.DisplayType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000DC354);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Page.DisplayType()
{
  return &type metadata for MetricsEvent.Page.DisplayType;
}

void *initializeBufferWithCopyOfBuffer for MetricsEvent.Click(uint64_t a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    uint64_t v8 = a3[7];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_10045BDE0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    uint64_t v51 = v13;
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100005BFC(&qword_100571720);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = a3[9];
    *(void *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    uint64_t v17 = (void *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    unint64_t v19 = *(uint64_t *)((char *)a2 + v16 + 8);
    swift_bridgeObjectRetain();
    if (v19 > 0xA)
    {
      *uint64_t v17 = *v18;
      v17[1] = v19;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    }
    uint64_t v20 = a3[10];
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    uint64_t v23 = *(unsigned __int16 *)(v22 + 24);
    if (v23 >> 8 <= 0xFE)
    {
      id v24 = *(id *)v22;
      uint64_t v25 = *(void *)(v22 + 8);
      uint64_t v50 = v12;
      uint64_t v26 = v11;
      uint64_t v27 = *(void *)(v22 + 16);
      sub_100046400(*(id *)v22, v25, v27, v23, SBYTE1(v23));
      *(void *)uint64_t v21 = v24;
      *((void *)v21 + 1) = v25;
      *((void *)v21 + 2) = v27;
      uint64_t v11 = v26;
      uint64_t v12 = v50;
      *((_WORD *)v21 + 12) = v23;
    }
    else
    {
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      *(_OWORD *)(v21 + 10) = *(_OWORD *)(v22 + 10);
    }
    uint64_t v28 = a3[12];
    *(void *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    id v29 = (void *)((char *)v4 + v28);
    uint64_t v30 = (uint64_t *)((char *)a2 + v28);
    uint64_t v31 = v30[1];
    void *v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = a3[13];
    uint64_t v33 = a3[14];
    id v34 = (void *)((char *)v4 + v32);
    uint64_t v35 = (uint64_t *)((char *)a2 + v32);
    uint64_t v36 = v35[1];
    void *v34 = *v35;
    v34[1] = v36;
    id v37 = (char *)v4 + v33;
    uint64_t v38 = (char *)a2 + v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v51(v38, 1, v11))
    {
      uint64_t v39 = sub_100005BFC(&qword_100571720);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v37, v38, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v37, 0, 1, v11);
    }
    uint64_t v40 = a3[16];
    *(void *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *((unsigned char *)v4 + v40) = *((unsigned char *)a2 + v40);
    uint64_t v41 = a3[18];
    *((unsigned char *)v4 + a3[17]) = *((unsigned char *)a2 + a3[17]);
    uint64_t v42 = (void *)((char *)v4 + v41);
    uint64_t v43 = (uint64_t *)((char *)a2 + v41);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = a3[20];
    *((unsigned char *)v4 + a3[19]) = *((unsigned char *)a2 + a3[19]);
    id v46 = (void *)((char *)v4 + v45);
    id v47 = (uint64_t *)((char *)a2 + v45);
    uint64_t v48 = v47[1];
    void *v46 = *v47;
    v46[1] = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MetricsEvent.Click(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_10045BDE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[9] + 8) >= 0xBuLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = a1 + a2[10];
  uint64_t v9 = *(unsigned __int16 *)(v8 + 24);
  if (v9 >> 8 <= 0xFE) {
    sub_100012A68(*(void **)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), v9, SBYTE1(v9));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[14];
  if (!v7(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10045BDE0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  id v49 = v12;
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100005BFC(&qword_100571720);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  unint64_t v17 = *(void *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  if (v17 > 0xA)
  {
    void *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  uint64_t v18 = a3[10];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(unsigned __int16 *)(v20 + 24);
  if (v21 >> 8 <= 0xFE)
  {
    id v22 = *(id *)v20;
    uint64_t v23 = *(void *)(v20 + 8);
    uint64_t v48 = v11;
    uint64_t v24 = v10;
    uint64_t v25 = *(void *)(v20 + 16);
    sub_100046400(*(id *)v20, v23, v25, v21, SBYTE1(v21));
    *(void *)uint64_t v19 = v22;
    *(void *)(v19 + 8) = v23;
    *(void *)(v19 + 16) = v25;
    uint64_t v10 = v24;
    uint64_t v11 = v48;
    *(_WORD *)(v19 + 24) = v21;
  }
  else
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *(_OWORD *)(v19 + 10) = *(_OWORD *)(v20 + 10);
  }
  uint64_t v26 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = a3[13];
  uint64_t v31 = a3[14];
  uint64_t v32 = (void *)(a1 + v30);
  uint64_t v33 = (void *)(a2 + v30);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = (void *)(a1 + v31);
  uint64_t v36 = (const void *)(a2 + v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v49(v36, 1, v10))
  {
    uint64_t v37 = sub_100005BFC(&qword_100571720);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v35, v36, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v35, 0, 1, v10);
  }
  uint64_t v38 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v38) = *(unsigned char *)(a2 + v38);
  uint64_t v39 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (void *)(a2 + v39);
  uint64_t v42 = v41[1];
  void *v40 = *v41;
  v40[1] = v42;
  uint64_t v43 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (void *)(a2 + v43);
  uint64_t v46 = v45[1];
  *uint64_t v44 = *v45;
  v44[1] = v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_10045BDE0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  uint64_t v61 = v11;
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100005BFC(&qword_100571720);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  unint64_t v18 = *(void *)(a1 + v15 + 8);
  unint64_t v19 = *(void *)(a2 + v15 + 8);
  if (v18 == 10)
  {
    if (v19 > 0xA) {
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  if (v19 == 10)
  {
    sub_100045358(v16);
LABEL_18:
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    goto LABEL_19;
  }
  if (v18 < 0xA)
  {
    if (v19 >= 0xA)
    {
LABEL_14:
      *(void *)uint64_t v16 = *(void *)v17;
      *(void *)(v16 + 8) = *(void *)(v17 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v19 < 0xA)
  {
    sub_100009790(v16, &qword_1005724E8);
    goto LABEL_18;
  }
  *(void *)uint64_t v16 = *(void *)v17;
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v20 = a3[10];
  uint64_t v21 = a1 + v20;
  id v22 = (long long *)(a2 + v20);
  uint64_t v23 = *(unsigned __int16 *)(a2 + v20 + 24);
  unsigned int v24 = v23 >> 8;
  if (*(unsigned __int8 *)(a1 + v20 + 25) == 255)
  {
    if (v24 <= 0xFE)
    {
      uint64_t v57 = v10;
      uint64_t v59 = v9;
      uint64_t v27 = *(void **)v22;
      uint64_t v28 = *((void *)v22 + 1);
      uint64_t v29 = *((void *)v22 + 2);
      sub_100046400(v27, v28, v29, v23, SBYTE1(v23));
      *(void *)uint64_t v21 = v27;
      *(void *)(v21 + 8) = v28;
      uint64_t v10 = v57;
      uint64_t v9 = v59;
      *(void *)(v21 + 16) = v29;
      *(_WORD *)(v21 + 24) = v23;
    }
    else
    {
      long long v25 = *v22;
      *(_OWORD *)(v21 + 10) = *(long long *)((char *)v22 + 10);
      *(_OWORD *)uint64_t v21 = v25;
    }
  }
  else if (v24 <= 0xFE)
  {
    uint64_t v58 = v10;
    uint64_t v60 = v9;
    uint64_t v30 = *(void **)v22;
    uint64_t v31 = *((void *)v22 + 1);
    uint64_t v32 = *((void *)v22 + 2);
    sub_100046400(v30, v31, v32, v23, SBYTE1(v23));
    uint64_t v33 = *(void **)v21;
    uint64_t v34 = *(void *)(v21 + 8);
    uint64_t v35 = *(void *)(v21 + 16);
    *(void *)uint64_t v21 = v30;
    *(void *)(v21 + 8) = v31;
    uint64_t v10 = v58;
    uint64_t v9 = v60;
    *(void *)(v21 + 16) = v32;
    uint64_t v36 = *(unsigned __int8 *)(v21 + 24);
    *(unsigned char *)(v21 + 24) = v23;
    char v37 = *(unsigned char *)(v21 + 25);
    *(unsigned char *)(v21 + 25) = BYTE1(v23);
    sub_100012A68(v33, v34, v35, v36, v37);
  }
  else
  {
    sub_1000DD174(v21);
    long long v26 = *(long long *)((char *)v22 + 10);
    *(_OWORD *)uint64_t v21 = *v22;
    *(_OWORD *)(v21 + 10) = v26;
  }
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[12];
  uint64_t v39 = (void *)(a1 + v38);
  uint64_t v40 = (void *)(a2 + v38);
  void *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[13];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[14];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  int v47 = v61((void *)(a1 + v44), 1, v9);
  int v48 = v61(v46, 1, v9);
  if (!v47)
  {
    if (!v48)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v45, v46, v9);
      goto LABEL_32;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v45, v9);
    goto LABEL_31;
  }
  if (v48)
  {
LABEL_31:
    uint64_t v49 = sub_100005BFC(&qword_100571720);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v45, v46, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v45, 0, 1, v9);
LABEL_32:
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  uint64_t v50 = a3[18];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (void *)(a2 + v50);
  void *v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v53 = a3[20];
  NSString v54 = (void *)(a1 + v53);
  uint64_t v55 = (void *)(a2 + v53);
  void *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000DD174(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10045BDE0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100005BFC(&qword_100571720);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  uint64_t v14 = a3[10];
  uint64_t v15 = a3[11];
  uint64_t v16 = (_OWORD *)(a1 + v14);
  uint64_t v17 = (_OWORD *)(a2 + v14);
  *uint64_t v16 = *v17;
  *(_OWORD *)((char *)v16 + 10) = *(_OWORD *)((char *)v17 + 10);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v18 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  uint64_t v19 = a3[14];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  if (v11((const void *)(a2 + v19), 1, v9))
  {
    uint64_t v22 = sub_100005BFC(&qword_100571720);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v20, v21, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
  }
  uint64_t v23 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  uint64_t v25 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  return a1;
}

uint64_t assignWithTake for MetricsEvent.Click(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_10045BDE0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100005BFC(&qword_100571720);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (_OWORD *)(a2 + v16);
  unint64_t v19 = *(void *)(a1 + v16 + 8);
  unint64_t v20 = *(void *)(a2 + v16 + 8);
  if (v19 == 10)
  {
LABEL_13:
    *(_OWORD *)uint64_t v17 = *v18;
    goto LABEL_14;
  }
  if (v20 == 10)
  {
    sub_100045358(v17);
    goto LABEL_13;
  }
  if (v19 < 0xA) {
    goto LABEL_13;
  }
  if (v20 < 0xA)
  {
    sub_100009790(v17, &qword_1005724E8);
    goto LABEL_13;
  }
  *(void *)uint64_t v17 = *(void *)v18;
  *(void *)(v17 + 8) = v20;
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(unsigned __int16 *)(a1 + v21 + 24);
  if (v24 >> 8 > 0xFE)
  {
LABEL_17:
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 10) = *(_OWORD *)(v23 + 10);
    goto LABEL_19;
  }
  unsigned int v25 = *(unsigned __int16 *)(v23 + 24);
  if (v25 >> 8 > 0xFE)
  {
    sub_1000DD174(v22);
    goto LABEL_17;
  }
  uint64_t v26 = *(void *)(v23 + 16);
  uint64_t v27 = *(void **)v22;
  uint64_t v28 = *(void *)(v22 + 8);
  uint64_t v29 = *(void *)(v22 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(void *)(v22 + 16) = v26;
  *(_WORD *)(v22 + 24) = v25;
  sub_100012A68(v27, v28, v29, v24, SBYTE1(v24));
LABEL_19:
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[12];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  *uint64_t v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v35 = a3[13];
  uint64_t v36 = (void *)(a1 + v35);
  char v37 = (uint64_t *)(a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[14];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  int v43 = v12((void *)(a1 + v40), 1, v10);
  int v44 = v12(v42, 1, v10);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v41, v42, v10);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v41, v10);
    goto LABEL_24;
  }
  if (v44)
  {
LABEL_24:
    uint64_t v45 = sub_100005BFC(&qword_100571720);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v41, v42, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v41, 0, 1, v10);
LABEL_25:
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v46 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v46) = *(unsigned char *)(a2 + v46);
  uint64_t v47 = a3[18];
  int v48 = (void *)(a1 + v47);
  uint64_t v49 = (uint64_t *)(a2 + v47);
  uint64_t v51 = *v49;
  uint64_t v50 = v49[1];
  *int v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease();
  uint64_t v52 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v53 = (void *)(a1 + v52);
  NSString v54 = (uint64_t *)(a2 + v52);
  uint64_t v56 = *v54;
  uint64_t v55 = v54[1];
  *uint64_t v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000DD850);
}

uint64_t sub_1000DD850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100005BFC(&qword_100571720);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000DD918);
}

uint64_t sub_1000DD918(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100005BFC(&qword_100571720);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000DD9C4()
{
  sub_1000DC260();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD0) {
    goto LABEL_17;
  }
  if (a2 + 48 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 48) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 48;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 48;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 48;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x31;
  int v8 = v6 - 49;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MetricsEvent.Click.ActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 48 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 48) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xCF)
  {
    unsigned int v6 = ((a2 - 208) >> 8) + 1;
    *unint64_t result = a2 + 48;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000DDC20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 48;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionType()
{
  return &type metadata for MetricsEvent.Click.ActionType;
}

unint64_t destroy for MetricsEvent.Click.ActionContext(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9MusicCore12MetricsEventV5ClickV13ActionContextOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for MetricsEvent.Click.ActionContext(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MetricsEvent.Click.ActionContext(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF5 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483638);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 9;
  if (v4 >= 0xB) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click.ActionContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF6)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483638;
    if (a3 >= 0x7FFFFFF6) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF6) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 9;
    }
  }
  return result;
}

uint64_t sub_1000DDE70(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1000DDE88(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionContext()
{
  return &type metadata for MetricsEvent.Click.ActionContext;
}

void *destroy for MetricsEvent.Click.ActionDetails(uint64_t a1)
{
  return sub_100012A68(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(unsigned char *)(a1 + 25));
}

uint64_t initializeWithCopy for MetricsEvent.Click.ActionDetails(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 25);
  uint64_t v7 = *(unsigned __int8 *)(a2 + 24);
  sub_100046400(*(id *)a2, v4, v5, v7, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 25) = v6;
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.Click.ActionDetails(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 25);
  uint64_t v7 = *(unsigned __int8 *)(a2 + 24);
  sub_100046400(*(id *)a2, v4, v5, v7, v6);
  int v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  uint64_t v11 = *(unsigned __int8 *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  char v12 = *(unsigned char *)(a1 + 25);
  *(unsigned char *)(a1 + 25) = v6;
  sub_100012A68(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for MetricsEvent.Click.ActionDetails(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MetricsEvent.Click.ActionDetails(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  __int16 v4 = *(_WORD *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 25);
  uint64_t v9 = *(unsigned __int8 *)(a1 + 24);
  *(_WORD *)(a1 + 24) = v4;
  sub_100012A68(v5, v7, v6, v9, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionDetails(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 26)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 25);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click.ActionDetails(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 26) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 25) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000DE0B4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 25) <= 3u) {
    return *(unsigned __int8 *)(a1 + 25);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1000DE0CC(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 4;
    LOBYTE(a2) = 4;
    *(unsigned char *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 25) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails()
{
  return &type metadata for MetricsEvent.Click.ActionDetails;
}

id *destroy for MetricsEvent.Click.ActionDetails.SearchSource(id *result)
{
  if ((unint64_t)*result >= 0xFFFFFFFF)
  {

    return (id *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9MusicCore12MetricsEventV5ClickV13ActionDetailsO12SearchSourceOwCP_0(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 8);
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    id v6 = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t a1, long long *a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1 < 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      id v7 = v5;
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v8 = *a2;
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(_OWORD *)a1 = v8;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(void *)a1 = v5;
  id v6 = v5;

  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for MetricsEvent.Click.ActionDetails.SearchSource(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {

    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    return a1;
  }
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.Click.ActionDetails.SearchSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

void *sub_1000DE3BC(void *result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    result[1] = 0;
    result[2] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *__n128 result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.Click.ActionDetails.SearchSource()
{
  return &type metadata for MetricsEvent.Click.ActionDetails.SearchSource;
}

uint64_t destroy for MetricsEvent.LoadUrl()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MetricsEvent.LoadUrl(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v3 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  uint64_t v4 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v4;
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  uint64_t v5 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v5;
  uint64_t v6 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v6;
  uint64_t v7 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v7;
  uint64_t v8 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v8;
  uint64_t v9 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v9;
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  uint64_t v10 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.LoadUrl(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = a2[2];
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 32) = v6;
  uint64_t v7 = a2[6];
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = a2[8];
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = a2[10];
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = a2[12];
  *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
  *(void *)(a1 + 96) = v10;
  uint64_t v11 = a2[14];
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  *(void *)(a1 + 112) = v11;
  uint64_t v12 = a2[16];
  *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
  *(void *)(a1 + 128) = v12;
  uint64_t v13 = a2[18];
  *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
  *(void *)(a1 + 144) = v13;
  *(void *)(a1 + 160) = a2[20];
  *(void *)(a1 + 168) = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
  *(unsigned char *)(a1 + 177) = *((unsigned char *)a2 + 177);
  *(void *)(a1 + 184) = a2[23];
  *(void *)(a1 + 192) = a2[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = a2[25];
  *(void *)(a1 + 208) = a2[26];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 216) = a2[27];
  *(void *)(a1 + 224) = a2[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = a2[29];
  *(void *)(a1 + 240) = a2[30];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 248) = a2[31];
  *(void *)(a1 + 256) = a2[32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = a2[33];
  *(void *)(a1 + 272) = a2[34];
  *(void *)(a1 + 280) = a2[35];
  *(void *)(a1 + 288) = a2[36];
  *(void *)(a1 + 296) = a2[37];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for MetricsEvent.LoadUrl(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x130uLL);
}

uint64_t assignWithTake for MetricsEvent.LoadUrl(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  uint64_t v5 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
  uint64_t v6 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  uint64_t v11 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.LoadUrl(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 304)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 168);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.LoadUrl(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 296) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 304) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 304) = 0;
    }
    if (a2) {
      *(void *)(result + 168) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.LoadUrl()
{
  return &type metadata for MetricsEvent.LoadUrl;
}

void destroy for MetricsEvent.ComponentRender(uint64_t a1)
{
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 64);
}

uint64_t initializeWithCopy for MetricsEvent.ComponentRender(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  int v4 = *(void **)(a2 + 24);
  uint64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  uint64_t v6 = *(void **)(a2 + 40);
  uint64_t v7 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void **)(a2 + 56);
  uint64_t v9 = *(void **)(a2 + 64);
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  id v10 = v4;
  id v11 = v5;
  id v12 = v6;
  id v13 = v7;
  id v14 = v8;
  id v15 = v9;
  return a1;
}

uint64_t assignWithCopy for MetricsEvent.ComponentRender(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  int v4 = *(void **)(a1 + 24);
  uint64_t v5 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v5;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 32);
  uint64_t v8 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 40);
  id v11 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v11;
  id v12 = v11;

  id v13 = *(void **)(a2 + 48);
  id v14 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v13;
  id v15 = v13;

  uint64_t v16 = *(void **)(a1 + 56);
  uint64_t v17 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v17;
  id v18 = v17;

  unint64_t v19 = *(void **)(a1 + 64);
  unint64_t v20 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v20;
  id v21 = v20;

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

__n128 initializeWithTake for MetricsEvent.ComponentRender(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for MetricsEvent.ComponentRender(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);

  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  id v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  uint64_t v7 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsEvent.ComponentRender(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsEvent.ComponentRender(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.ComponentRender()
{
  return &type metadata for MetricsEvent.ComponentRender;
}

unsigned char *storeEnumTagSinglePayload for MetricsEvent.ComponentRender.PreloadStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000DEDE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsEvent.ComponentRender.PreloadStatus()
{
  return &type metadata for MetricsEvent.ComponentRender.PreloadStatus;
}

uint64_t sub_1000DEE20()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1000DEE58(void *a1)
{
  return sub_1000D861C(a1, v1);
}

void sub_1000DEE60()
{
  sub_1000FCB74(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void ***)(v0 + 32));
}

uint64_t sub_1000DEE80()
{
  return sub_1000D871C();
}

void sub_1000DEE8C()
{
  sub_1000D86C0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000DEE94()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000DEED4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_1000117C8;
  v3[11] = v2;
  return _swift_task_switch(sub_1000D8958, 0, 0);
}

uint64_t sub_1000DEF84()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000DEFC4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10045C1E0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000DF008()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000DF040()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1000DF068()
{
  sub_1000D70A0(*(void *)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&OBJC_IVAR____TtC9MusicCore26MetricsReportingController_pageRenderEventSampler, (uint64_t (*)(void *))sub_1000CE81C);
}

void sub_1000DF0A0()
{
  sub_1000D70A0(*(void *)(v0 + 16), *(void **)(v0 + 24), (uint64_t)&OBJC_IVAR____TtC9MusicCore26MetricsReportingController_componentRenderEventSampler, (uint64_t (*)(void *))sub_1000CE2C8);
}

void sub_1000DF0D8()
{
  sub_1000D5C3C(*(void **)(v0 + 16));
}

void sub_1000DF0E0()
{
  sub_1000D9068(*(void **)(v0 + 24), (uint64_t)CFRange.init(_:), 0);
}

uint64_t sub_1000DF19C(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v5 = ActionType.rawValue.getter(*(unsigned char *)(a2 + 32));
  uint64_t v7 = v6;
  if (v5 == ActionType.rawValue.getter(a1) && v7 == v8)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v10 = sub_1004626E0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v12 = 33;
  while (1)
  {
    uint64_t v13 = v12 - 31;
    if (__OFADD__(v12 - 32, 1)) {
      break;
    }
    uint64_t v14 = ActionType.rawValue.getter(*(unsigned char *)(a2 + v12));
    uint64_t v16 = v15;
    if (v14 == ActionType.rawValue.getter(a1) && v16 == v17)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v19 = sub_1004626E0();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_7;
    }
    ++v12;
    if (v13 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000DF2F4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = sub_1004626E0();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  id v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1004626E0() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000DF3BC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000DF420(char a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (2)
  {
    uint64_t v6 = a2 + v5++;
    unint64_t v7 = 0xD000000000000029;
    unint64_t v8 = 0x800000010048D3C0;
    switch(*(unsigned char *)(v6 + 32))
    {
      case 1:
        unint64_t v7 = 0xD000000000000025;
        unint64_t v8 = 0x800000010048D3F0;
        break;
      case 2:
        unint64_t v7 = 0xD000000000000023;
        unint64_t v8 = 0x800000010048D420;
        break;
      case 3:
        unint64_t v7 = 0xD000000000000022;
        unint64_t v8 = 0x800000010048D450;
        break;
      case 4:
        id v9 = "LibraryView.Albums";
        goto LABEL_14;
      case 5:
        unint64_t v7 = 0xD000000000000026;
        unint64_t v8 = 0x800000010048D4B0;
        break;
      case 6:
        unint64_t v7 = 0xD000000000000027;
        unint64_t v8 = 0x800000010048D4E0;
        break;
      case 7:
        unint64_t v7 = 0xD000000000000022;
        unint64_t v8 = 0x800000010048D510;
        break;
      case 8:
        unint64_t v7 = 0xD000000000000028;
        unint64_t v8 = 0x800000010048D540;
        break;
      case 9:
        unint64_t v7 = 0xD000000000000025;
        unint64_t v8 = 0x800000010048D570;
        break;
      case 0xA:
        id v9 = "LibraryView.Composers";
LABEL_14:
        unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
        unint64_t v7 = 0xD000000000000021;
        break;
      case 0xB:
        unint64_t v7 = 0xD000000000000026;
        unint64_t v8 = 0x800000010048D5D0;
        break;
      case 0xC:
        unint64_t v7 = 0xD000000000000027;
        unint64_t v8 = 0x800000010048D600;
        break;
      default:
        break;
    }
    unint64_t v10 = 0xD000000000000029;
    unint64_t v11 = 0x800000010048D3C0;
    switch(a1)
    {
      case 1:
        unint64_t v12 = 0xD000000000000025;
        uint64_t v13 = "LibraryView.RecentlyAdded";
        goto LABEL_27;
      case 2:
        unint64_t v12 = 0xD000000000000023;
        uint64_t v13 = "LibraryView.Playlists";
        goto LABEL_27;
      case 3:
        unint64_t v12 = 0xD000000000000022;
        uint64_t v13 = "LibraryView.Artists";
        goto LABEL_27;
      case 4:
        uint64_t v14 = "LibraryView.Albums";
        goto LABEL_30;
      case 5:
        unint64_t v12 = 0xD000000000000026;
        uint64_t v13 = "LibraryView.Songs";
        goto LABEL_27;
      case 6:
        unint64_t v12 = 0xD000000000000027;
        uint64_t v13 = "LibraryView.MadeForYou";
        goto LABEL_27;
      case 7:
        unint64_t v12 = 0xD000000000000022;
        uint64_t v13 = "LibraryView.MusicVideos";
        goto LABEL_27;
      case 8:
        unint64_t v12 = 0xD000000000000028;
        uint64_t v13 = "LibraryView.Genres";
        goto LABEL_27;
      case 9:
        unint64_t v12 = 0xD000000000000025;
        uint64_t v13 = "LibraryView.Compilations";
LABEL_27:
        unint64_t v11 = (unint64_t)v13 | 0x8000000000000000;
        if (v7 != v12) {
          goto LABEL_35;
        }
        goto LABEL_34;
      case 10:
        uint64_t v14 = "LibraryView.Composers";
LABEL_30:
        unint64_t v11 = (unint64_t)v14 | 0x8000000000000000;
        if (v7 != 0xD000000000000021) {
          goto LABEL_35;
        }
        goto LABEL_34;
      case 11:
        unint64_t v10 = 0xD000000000000026;
        unint64_t v11 = 0x800000010048D5D0;
        goto LABEL_33;
      case 12:
        unint64_t v11 = 0x800000010048D600;
        if (v7 != 0xD000000000000027) {
          goto LABEL_35;
        }
        goto LABEL_34;
      default:
LABEL_33:
        if (v7 != v10) {
          goto LABEL_35;
        }
LABEL_34:
        if (v8 == v11)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 1;
        }
LABEL_35:
        char v15 = sub_1004626E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {
          if (v2 == v5)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        return 1;
    }
  }
}

double Double.toMilliseconds.getter(double a1)
{
  return a1 * 1000.0;
}

uint64_t MetricsPageProperties.init(pageIdentifier:pageType:pageURL:pageDetails:extRefUrl:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v16 = (int *)type metadata accessor for MetricsPageProperties();
  uint64_t v17 = (uint64_t)a9 + v16[6];
  uint64_t v18 = sub_10045BDE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = v16[7];
  *(void *)((char *)a9 + v19) = 0;
  unint64_t v20 = (void *)((char *)a9 + v16[8]);
  *unint64_t v20 = 0;
  v20[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  sub_1000DA914(a5, v17);
  swift_bridgeObjectRelease();
  *(void *)((char *)a9 + v19) = a6;
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v20 = a7;
  v20[1] = a8;
  return result;
}

uint64_t type metadata accessor for MetricsPageProperties()
{
  uint64_t result = qword_1005749F0;
  if (!qword_1005749F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000DF944(void *a1)
{
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (v2)
  {
    id v3 = [v2 innermostModelObject];
LABEL_3:
    uint64_t v4 = sub_1000DF944(v3);

    uint64_t v5 = 0;
LABEL_8:
    unsigned __int8 v26 = v4;
LABEL_9:
    sub_10004CAE0((uint64_t)v5);
    return v4;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v5 = 0;
    uint64_t v4 = 3;
    goto LABEL_8;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v5 = 0;
    uint64_t v4 = 4;
    goto LABEL_8;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v4 = 0;
    uint64_t v5 = 0;
    unsigned __int8 v26 = 0;
    goto LABEL_9;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v5 = 0;
    uint64_t v4 = 8;
    goto LABEL_8;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v5 = 0;
    uint64_t v4 = 10;
    goto LABEL_8;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v5 = 0;
    uint64_t v4 = 11;
    goto LABEL_8;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v5 = 0;
    uint64_t v4 = 1;
    goto LABEL_8;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {

    uint64_t v5 = 0;
    uint64_t v4 = 12;
    goto LABEL_8;
  }
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (v7)
  {
    uint64_t v8 = v7;
    unsigned __int8 v26 = 2;
    id v9 = self;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = &v26;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_1000E6248;
    *(void *)(v11 + 24) = v10;
    uint64_t v24 = sub_1000E6058;
    uint64_t v25 = v11;
    aBlock = _NSConcreteStackBlock;
    unint64_t v21 = 1107296256;
    uint64_t v22 = sub_10000B0B8;
    uint64_t v23 = &unk_10052D6C8;
    unint64_t v12 = _Block_copy(&aBlock);
    id v13 = a1;
    swift_retain();
    swift_release();
    [v9 performWithoutEnforcement:v12];

    _Block_release(v12);
    LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v13 & 1) == 0)
    {
      uint64_t v5 = sub_1000E6248;
      uint64_t v4 = v26;
      goto LABEL_9;
    }
    __break(1u);
  }
  else
  {
    self;
    if (swift_dynamicCastObjCClass())
    {

      uint64_t v5 = 0;
      uint64_t v4 = 6;
      goto LABEL_8;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {

      uint64_t v5 = 0;
      uint64_t v4 = 7;
      goto LABEL_8;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {

      uint64_t v5 = 0;
      uint64_t v4 = 5;
      goto LABEL_8;
    }
    self;
    uint64_t v14 = (void *)swift_dynamicCastObjCClass();
    if (v14)
    {
      id v15 = [v14 innermostModelObject];
      self;
      if (swift_dynamicCastObjCClass())
      {

        uint64_t v5 = 0;
        uint64_t v4 = 17;
        goto LABEL_8;
      }
      id v3 = v15;
      goto LABEL_3;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {

      uint64_t v5 = 0;
      uint64_t v4 = 19;
      goto LABEL_8;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {

      uint64_t v5 = 0;
      uint64_t v4 = 9;
      goto LABEL_8;
    }
  }
  aBlock = 0;
  unint64_t v21 = 0xE000000000000000;
  sub_100462120(45);
  swift_bridgeObjectRelease();
  aBlock = (void **)0xD00000000000002BLL;
  unint64_t v21 = 0x80000001004906A0;
  Swift::Int v16 = sub_100240044((uint64_t)&off_1005225E8);
  uint64_t v17 = MPModelObject.humanDescription(including:)(v16);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = v17;
  v27._object = v19;
  sub_100460E50(v27);
  swift_bridgeObjectRelease();
  uint64_t result = sub_100462350();
  __break(1u);
  return result;
}

unint64_t MetricsContentType.rawValue.getter(char a1)
{
  unint64_t result = 0x6D75626C61;
  switch(a1)
  {
    case 1:
    case 17:
      unint64_t result = 0x7473696C79616C70;
      break;
    case 2:
      unint64_t result = 1735290739;
      break;
    case 3:
      unint64_t result = 0x747369747261;
      break;
    case 4:
      unint64_t result = 0x65506C6169636F73;
      break;
    case 5:
      unint64_t result = 0x6569766F6DLL;
      break;
    case 6:
      unint64_t result = 0x776F68537674;
      break;
    case 7:
      unint64_t result = 0x646F736970457674;
      break;
    case 8:
      unint64_t result = 0x7265736F706D6F63;
      break;
    case 9:
      unint64_t result = 0x4173746964657263;
      break;
    case 10:
      unint64_t result = 0x726F7461727563;
      break;
    case 11:
      unint64_t result = 0x65726E6567;
      break;
    case 12:
      unint64_t result = 0x6174536F69646172;
      break;
    case 13:
      unint64_t result = 0x686372616573;
      break;
    case 14:
    case 15:
      unint64_t result = 0xD000000000000013;
      break;
    case 16:
      unint64_t result = 0x6E6F736165537674;
      break;
    case 18:
      unint64_t result = 0x497972617262696CLL;
      break;
    case 19:
      unint64_t result = 0x614C64726F636572;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1000E0130()
{
  swift_getObjectType();
  BOOL result = 1;
  if (![v0 cachedResponse]
    || (uint64_t v1 = (void *)swift_getObjCClassFromMetadata(),
        [v0 xpSamplingPercentageCachedResponses],
        (objc_msgSend(v1, "shouldReportCachedEventWithSamplingPercentage:") & 1) == 0))
  {
    if ([v0 cachedResponse]) {
      return 0;
    }
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    [v0 xpSessionDuration];
    double v4 = v3;
    [v0 xpSamplingPercentageUsers];
    if (([ObjCClassFromMetadata shouldCollectTimingDataWithSessionDuration:v4 samplingPercentage:v5] & 1) == 0)return 0; {
  }
    }
  return result;
}

id ModelObjectBackedStoreItemMetadata.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id Double.toMillisecondsInServerTime.getter(double a1)
{
  id v1 = [self serverTimeFromTimeInterval:a1];
  id v2 = [v1 unsignedLongLongValue];

  return v2;
}

uint64_t sub_1000E02B0()
{
  NSString v1 = sub_100460C70();
  id v2 = [v0 propertyForBodyKey:v1];

  if (v2)
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1000E4750((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast()) {
      return v4;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_100009790((uint64_t)v6, (uint64_t *)&unk_100574DB0);
    return 0;
  }
}

uint64_t SharePlayTogetherSession.Participant.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t MetricsPageProperties.pageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MetricsPageProperties();
  return sub_100019ABC(v1 + *(int *)(v3 + 24), a1, &qword_100571720);
}

uint64_t MetricsPageProperties.pageURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MetricsPageProperties() + 24);

  return sub_1000DA914(a1, v3);
}

CFRange (__swiftcall *MetricsPageProperties.pageURL.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t MetricsPageProperties.pageDetails.getter()
{
  type metadata accessor for MetricsPageProperties();

  return swift_bridgeObjectRetain();
}

uint64_t MetricsPageProperties.pageDetails.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for MetricsPageProperties() + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

CFRange (__swiftcall *MetricsPageProperties.pageDetails.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t MetricsPageProperties.extRefUrl.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for MetricsPageProperties() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsPageProperties.extRefUrl.setter(uint64_t a1, uint64_t a2)
{
  double v5 = (void *)(v2 + *(int *)(type metadata accessor for MetricsPageProperties() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *double v5 = a1;
  v5[1] = a2;
  return result;
}

CFRange (__swiftcall *MetricsPageProperties.extRefUrl.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t sub_1000E0634(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = MetricsContentType.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == MetricsContentType.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1004626E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1000E06C0()
{
  char v1 = *v0;
  sub_1004628B0();
  MetricsContentType.rawValue.getter(v1);
  sub_100460DA0();
  swift_bridgeObjectRelease();
  return sub_100462900();
}

uint64_t sub_1000E0724()
{
  MetricsContentType.rawValue.getter(*v0);
  sub_100460DA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000E0778()
{
  char v1 = *v0;
  sub_1004628B0();
  MetricsContentType.rawValue.getter(v1);
  sub_100460DA0();
  swift_bridgeObjectRelease();
  return sub_100462900();
}

uint64_t sub_1000E07D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s9MusicCore18MetricsContentTypeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_1000E0808@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = MetricsContentType.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

char *sub_1000E0834()
{
  NSString v1 = sub_100460C70();
  id v2 = [v0 valueForConfigurationKey:v1];

  if (v2)
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  sub_1000E4750((uint64_t)&v16, (uint64_t)v14);
  if (!v15)
  {
    sub_100009790((uint64_t)v14, (uint64_t *)&unk_100574DB0);
    return 0;
  }
  sub_100005BFC(&qword_100574A98);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(v13 + 16);
  if (v3)
  {
    uint64_t v4 = v13 + 32;
    uint64_t v5 = (char *)_swiftEmptyArrayStorage;
    do
    {
      sub_100007168(v4, (uint64_t)v14);
      sub_100005BFC(&qword_100577470);
      if (swift_dynamicCast())
      {
        uint64_t v6 = v16;
        sub_1004620C0();
        if (*(void *)(v6 + 16) && (unint64_t v7 = sub_1000D9AC0((uint64_t)v14), (v8 & 1) != 0))
        {
          sub_100007168(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v16);
        }
        else
        {
          long long v16 = 0u;
          long long v17 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_1000CD76C((uint64_t)v14);
        if (*((void *)&v17 + 1))
        {
          if (swift_dynamicCast())
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v5 = sub_1000511A8(0, *((void *)v5 + 2) + 1, 1, v5);
            }
            unint64_t v10 = *((void *)v5 + 2);
            unint64_t v9 = *((void *)v5 + 3);
            if (v10 >= v9 >> 1) {
              uint64_t v5 = sub_1000511A8((char *)(v9 > 1), v10 + 1, 1, v5);
            }
            *((void *)v5 + 2) = v10 + 1;
            uint64_t v11 = &v5[16 * v10];
            *((void *)v11 + 4) = 0x6D614E646C656966;
            *((void *)v11 + 5) = 0xE900000000000065;
          }
        }
        else
        {
          sub_100009790((uint64_t)&v16, (uint64_t *)&unk_100574DB0);
        }
      }
      v4 += 32;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (char *)_swiftEmptyArrayStorage;
  }
  return v5;
}

uint64_t SSMetricsMutableEvent.dictionaryRepresentation.getter()
{
  id v1 = [objc_allocWithZone((Class)NSMutableDictionary) init];
  [v0 appendPropertiesToBody:v1];
  id v2 = v1;
  sub_100460A80();

  return 0;
}

uint64_t sub_1000E0B98(void *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  NSString v5 = sub_100460C70();
  NSString v6 = sub_100460C70();
  [v2 setProperty:v5 forBodyKey:v6];

  if (!a1) {
    goto LABEL_7;
  }
  NSString v7 = sub_100460C70();
  id v8 = [a1 valueForConfigurationKey:v7];

  if (v8)
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v21, 0, sizeof(v21));
  }
  sub_1000E4750((uint64_t)v21, (uint64_t)v22);
  uint64_t v9 = v23;
  if (v23)
  {
    unint64_t v10 = sub_10000C300(v22, v23);
    uint64_t v11 = *(void *)(v9 - 8);
    __chkstk_darwin(v10);
    uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v11 + 16))(v13);
    uint64_t v14 = sub_1004626D0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
    sub_100007118((uint64_t)v22);
  }
  else
  {
LABEL_7:
    uint64_t v14 = 0;
  }
  NSString v15 = sub_100460C70();
  [v2 setProperty:v14 forBodyKey:v15];
  swift_unknownObjectRelease();

  return a2(v16, v17, v18, v19);
}

uint64_t sub_1000E0DF8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a3;
  v23[0] = a2;
  uint64_t v4 = sub_10045F950();
  uint64_t v26 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10045F980();
  uint64_t v7 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10045F960();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009854(0, (unint64_t *)&qword_100576320);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchQoS.QoSClass.userInitiated(_:), v10);
  uint64_t v14 = (void *)sub_100461930();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  NSString v15 = (void *)swift_allocObject();
  uint64_t v16 = v23[0];
  uint64_t v17 = (void *)v23[1];
  _OWORD v15[2] = a1;
  v15[3] = v17;
  uint64_t v18 = v24;
  v15[4] = v16;
  v15[5] = v18;
  aBlock[4] = sub_1000E6130;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1000F6CC0;
  aBlock[3] = &unk_10052D588;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = a1;
  id v21 = v17;
  swift_retain();
  sub_10045F970();
  Swift::String v27 = _swiftEmptyArrayStorage;
  sub_1000E61C8((unint64_t *)&qword_100576340, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100005BFC(&qword_100574A88);
  sub_1000E613C();
  sub_100462020();
  sub_100461900();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v25);
  return swift_release();
}

void sub_1000E1190(uint64_t a1, void *a2, void (*a3)(uint64_t))
{
  uint64_t v5 = _s9MusicCore18DeviceCapabilitiesO9diskUsageSDyAC04DiskF8CategoryOs5Int64VGvgZ_0();
  unint64_t v6 = sub_1000CD898((uint64_t)&off_100523EF8);
  sub_100005BFC(&qword_100574A90);
  swift_arrayDestroy();
  uint64_t v39 = a3;
  if (a1 && (uint64_t v7 = sub_1000E0834()) != 0)
  {
    uint64_t v8 = v7;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v9 = 0;
  unint64_t v10 = v6 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v6 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v38 = v8 + 72;
  int64_t v41 = v14;
  unint64_t v42 = v6;
  while (1)
  {
    do
    {
      do
      {
        while (v13)
        {
          unint64_t v19 = __clz(__rbit64(v13));
          v13 &= v13 - 1;
          unint64_t v20 = v19 | (v9 << 6);
          if (*(void *)(v5 + 16)) {
            goto LABEL_28;
          }
        }
        int64_t v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        if (v21 >= v14) {
          goto LABEL_51;
        }
        unint64_t v22 = *(void *)(v10 + 8 * v21);
        ++v9;
        if (!v22)
        {
          int64_t v9 = v21 + 1;
          if (v21 + 1 >= v14) {
            goto LABEL_51;
          }
          unint64_t v22 = *(void *)(v10 + 8 * v9);
          if (!v22)
          {
            int64_t v9 = v21 + 2;
            if (v21 + 2 >= v14) {
              goto LABEL_51;
            }
            unint64_t v22 = *(void *)(v10 + 8 * v9);
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_51:
                swift_bridgeObjectRelease();
                swift_release();
                uint64_t v37 = swift_bridgeObjectRelease();
                v39(v37);
                return;
              }
              unint64_t v22 = *(void *)(v10 + 8 * v23);
              if (!v22)
              {
                while (1)
                {
                  int64_t v9 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_53;
                  }
                  if (v9 >= v14) {
                    goto LABEL_51;
                  }
                  unint64_t v22 = *(void *)(v10 + 8 * v9);
                  ++v23;
                  if (v22) {
                    goto LABEL_27;
                  }
                }
              }
              int64_t v9 = v23;
            }
          }
        }
LABEL_27:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      while (!*(void *)(v5 + 16));
LABEL_28:
      uint64_t v24 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v20);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      unint64_t v27 = sub_1000D9B04(*(unsigned char *)(*(void *)(v6 + 48) + v20));
    }
    while ((v28 & 1) == 0);
    double v15 = (double)(*(void *)(*(void *)(v5 + 56) + 8 * v27) / 0x100000);
    uint64_t v29 = *((void *)v8 + 2);
    if (v29) {
      break;
    }
LABEL_10:
    id v16 = objc_allocWithZone((Class)NSNumber);
    swift_bridgeObjectRetain();
    id v17 = [v16 initWithDouble:v15];
    NSString v18 = sub_100460C70();
    swift_bridgeObjectRelease();
    [a2 setProperty:v17 forBodyKey:v18];
  }
  unint64_t v30 = v10;
  uint64_t v31 = v8;
  BOOL v32 = *((void *)v8 + 4) == v26 && *((void *)v8 + 5) == v25;
  if (v32 || (sub_1004626E0() & 1) != 0) {
    goto LABEL_8;
  }
  if (v29 == 1) {
    goto LABEL_9;
  }
  BOOL v33 = *((void *)v8 + 6) == v26 && *((void *)v8 + 7) == v25;
  if (v33 || (sub_1004626E0() & 1) != 0)
  {
LABEL_8:
    double v15 = floor(v15 / 100.0) * 100.0;
LABEL_9:
    uint64_t v8 = v31;
    unint64_t v10 = v30;
    int64_t v14 = v41;
    unint64_t v6 = v42;
    goto LABEL_10;
  }
  if (v29 == 2) {
    goto LABEL_9;
  }
  uint64_t v34 = v38;
  uint64_t v35 = 2;
  while (!__OFADD__(v35, 1))
  {
    if (*(v34 - 1) == v26 && *v34 == v25) {
      goto LABEL_8;
    }
    uint64_t v40 = v35 + 1;
    if (sub_1004626E0()) {
      goto LABEL_8;
    }
    v34 += 2;
    ++v35;
    if (v40 == v29) {
      goto LABEL_9;
    }
  }
LABEL_54:
  __break(1u);
}

uint64_t sub_1000E1504(void *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v18 = a2;
  if (!*(void *)(a2 + 16)) {
    return a3();
  }
  uint64_t v7 = v4;
  int64_t v9 = *(void (**)(void **, void *))(a2 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100053C60(0, 1);
  uint64_t v10 = v18;
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v7;
  v11[3] = a1;
  v11[4] = v10;
  v11[5] = a3;
  v11[6] = a4;
  id v17 = a1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1000E6054;
  *(void *)(v12 + 24) = v11;
  v16[0] = sub_1000E6348;
  v16[1] = v12;
  id v13 = a1;
  swift_retain();
  swift_retain();
  id v14 = v7;
  v9(&v17, v16);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1000E1664(void *a1, uint64_t (*a2)(void), uint64_t a3, void *a4)
{
  if (a1)
  {
    id v6 = [a1 eventFields];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = sub_100460A90();

      unint64_t v9 = sub_10027241C(v8);
      swift_bridgeObjectRelease();
      if (v9)
      {
        Class isa = sub_100460A70().super.isa;
        swift_bridgeObjectRelease();
        [a4 addPropertiesWithDictionary:isa];
      }
    }
  }
  return a2();
}

uint64_t sub_1000E1748(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t (*)(), uint64_t))
{
  uint64_t v4 = *a1;
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v5;
  swift_retain();
  a3(v4, sub_1000E6198, v7);

  return swift_release();
}

uint64_t sub_1000E17E0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000E1808(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, void *a4)
{
  id v6 = [self currentDeviceInfo];
  id v7 = [v6 buildVersion];

  NSString v8 = sub_100460C70();
  [a4 setProperty:v7 forBodyKey:v8];

  return a2();
}

void sub_1000E199C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  aBlock[4] = a3;
  aBlock[5] = a4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1000F6CC0;
  aBlock[3] = &unk_10052D218;
  id v6 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v7.receiver = a1;
  v7.super_class = (Class)SSMetricsBaseEvent;
  [super setStandardPropertiesWith:a2 completionHandler:v6];
  _Block_release(v6);
}

void ICURLSession.enqueueDataRequestRecordingPerformanceMetrics(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  v9[4] = sub_1000E3980;
  v9[5] = v7;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  long long v9[2] = sub_1000E1FE0;
  v9[3] = &unk_10052CFD0;
  NSString v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  [v3 enqueueDataRequest:a1 withCompletionHandler:v8];
  _Block_release(v8);
}

uint64_t sub_1000E1C54(void *a1, uint64_t a2, uint64_t (*a3)(void *, uint64_t), uint64_t a4)
{
  uint64_t v19 = a4;
  unint64_t v20 = a3;
  uint64_t v18 = a2;
  uint64_t v5 = sub_10045F950();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  NSString v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10045F980();
  uint64_t v9 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009854(0, (unint64_t *)&qword_100576320);
  uint64_t v12 = (void *)sub_1004618F0();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  aBlock[4] = sub_1000E61C0;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1000F6CC0;
  aBlock[3] = &unk_10052D600;
  id v14 = _Block_copy(aBlock);
  id v15 = a1;
  swift_release();
  sub_10045F970();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000E61C8((unint64_t *)&qword_100576340, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100005BFC(&qword_100574A88);
  sub_1000E613C();
  sub_100462020();
  sub_100461900();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v17);
  return v20(a1, v18);
}

void sub_1000E1F2C(id a1)
{
  if (qword_1005707F8 == -1)
  {
    if (!a1) {
      return;
    }
  }
  else
  {
    swift_once();
    if (!a1) {
      return;
    }
  }
  id v2 = [a1 performanceMetrics];
  if (v2)
  {
    id v3 = v2;
    sub_1000DAA30(v3, (uint64_t)&v4);
    MetricsReportingController.recordLoadUrlEvent(_:)(&v4);
    sub_1000DAE84((uint64_t)&v4);
  }
}

void sub_1000E1FE0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1000E206C()
{
  return sub_1000E2248();
}

uint64_t sub_1000E2088()
{
  return sub_1000E216C(0xD000000000000017, 0x8000000100490470);
}

uint64_t sub_1000E2150()
{
  return sub_1000E216C(0xD00000000000001CLL, 0x80000001004903E0);
}

uint64_t sub_1000E216C(uint64_t a1, uint64_t a2)
{
  v3[0] = a1;
  v3[1] = a2;
  sub_10000F810();
  NSUserDefaults.subscript.getter((uint64_t)v3, &v4);
  if (v5)
  {
    if (swift_dynamicCast()) {
      return LOBYTE(v3[0]);
    }
  }
  else
  {
    sub_100009790((uint64_t)&v4, (uint64_t *)&unk_100574DB0);
  }
  return 0;
}

uint64_t sub_1000E21F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000E2690(0xD00000000000001CLL, 0x8000000100490680, a1);
}

uint64_t sub_1000E2210(uint64_t a1)
{
  return sub_1000E27A8(a1, 0xD00000000000001CLL, 0x8000000100490680);
}

uint64_t sub_1000E222C()
{
  return sub_1000E2248();
}

uint64_t sub_1000E2248()
{
  NSString v1 = sub_100460C70();
  id v2 = [v0 propertyForBodyKey:v1];

  if (v2)
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1000E4750((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    sub_100009854(0, &qword_100574988);
    if (swift_dynamicCast()) {
      return v4;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_100009790((uint64_t)v6, (uint64_t *)&unk_100574DB0);
    return 0;
  }
}

uint64_t sub_1000E2374(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = a1;
  swift_retain();
  id v8 = v3;
  NSString v9 = sub_100460C70();
  [v8 setEventType:v9];

  id v10 = v8;
  id v11 = v7;
  swift_retain();
  sub_1000E5A84(a1, v10, v10, (uint64_t)a1, a2, a3);

  return swift_release_n();
}

id sub_1000E25E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Music_SSMetricsComponentRenderEvent();
  return [super dealloc];
}

uint64_t sub_1000E2658()
{
  return sub_1000E216C(0xD000000000000017, 0x8000000100490630);
}

uint64_t sub_1000E2674@<X0>(uint64_t a1@<X8>)
{
  return sub_1000E2690(0xD000000000000026, 0x8000000100490650, a1);
}

uint64_t sub_1000E2690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v8[0] = a1;
  v8[1] = a2;
  sub_10000F810();
  NSUserDefaults.subscript.getter((uint64_t)v8, &v9);
  if (v10)
  {
    uint64_t v4 = sub_10045C190();
    int v5 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a3, v5 ^ 1u, 1, v4);
  }
  else
  {
    sub_100009790((uint64_t)&v9, (uint64_t *)&unk_100574DB0);
    uint64_t v7 = sub_10045C190();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a3, 1, 1, v7);
  }
}

uint64_t sub_1000E278C(uint64_t a1)
{
  return sub_1000E27A8(a1, 0xD000000000000026, 0x8000000100490650);
}

uint64_t sub_1000E27A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100005BFC(&qword_100574980);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100019ABC(a1, (uint64_t)v8, &qword_100574980);
  uint64_t v9 = sub_10045C190();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100009790((uint64_t)v8, &qword_100574980);
    long long v14 = 0u;
    long long v15 = 0u;
  }
  else
  {
    *((void *)&v15 + 1) = v9;
    id v11 = sub_10002A270((uint64_t *)&v14);
    (*(void (**)(uint64_t *, char *, uint64_t))(v10 + 32))(v11, v8, v9);
  }
  v13[0] = a2;
  v13[1] = a3;
  sub_10000F810();
  NSUserDefaults.subscript.setter((uint64_t)&v14, (uint64_t)v13, (uint64_t)&type metadata for String);
  return sub_100009790(a1, &qword_100574980);
}

id DeviceCapabilitiesObjC.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super init];
}

id Music_SSMetricsPageRenderEvent.__allocating_init(bodyDictionary:)()
{
  id v1 = objc_allocWithZone(v0);
  Class isa = sub_100460A70().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithBodyDictionary:isa];

  return v3;
}

id Music_SSMetricsPageRenderEvent.init(bodyDictionary:)()
{
  int ObjectType = (objc_class *)swift_getObjectType();
  Class isa = sub_100460A70().super.isa;
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  id v3 = [super initWithBodyDictionary:isa];

  return v3;
}

id DeviceCapabilitiesObjC.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t sub_1000E2C44(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12)
        {
          int64_t v4 = v11 + 3;
          if (v11 + 3 >= v27) {
            return 1;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v4);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_25:
    uint64_t v14 = 16 * v10;
    long long v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1000CD178(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      unint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_1004626E0();
      unint64_t result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t _s9MusicCore21MetricsPagePropertiesV23__derived_struct_equalsySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_10045BDE0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100005BFC(&qword_100574AA0);
  __chkstk_darwin(v8);
  unint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_100005BFC(&qword_100571720);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = &v42[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = &v42[-v16];
  __chkstk_darwin(v15);
  uint64_t v19 = &v42[-v18];
  if (*a1 == *a2 && a1[1] == a2[1] || (char v20 = sub_1004626E0(), result = 0, (v20 & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (char v22 = sub_1004626E0(), result = 0, (v22 & 1) != 0))
    {
      uint64_t v46 = v14;
      int v44 = v7;
      uint64_t v23 = type metadata accessor for MetricsPageProperties();
      sub_100019ABC((uint64_t)a1 + *(int *)(v23 + 24), (uint64_t)v19, &qword_100571720);
      uint64_t v45 = v23;
      sub_100019ABC((uint64_t)a2 + *(int *)(v23 + 24), (uint64_t)v17, &qword_100571720);
      uint64_t v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
      sub_100019ABC((uint64_t)v19, (uint64_t)v10, &qword_100571720);
      sub_100019ABC((uint64_t)v17, v24, &qword_100571720);
      uint64_t v25 = v5;
      char v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      if (v26((uint64_t)v10, 1, v4) == 1)
      {
        sub_100009790((uint64_t)v17, &qword_100571720);
        sub_100009790((uint64_t)v19, &qword_100571720);
        if (v26(v24, 1, v4) == 1)
        {
          sub_100009790((uint64_t)v10, &qword_100571720);
LABEL_16:
          uint64_t v32 = v45;
          uint64_t v33 = *(int *)(v45 + 28);
          uint64_t v34 = *(void *)((char *)a2 + v33);
          if (*(void *)((char *)a1 + v33))
          {
            if (v34)
            {
              swift_bridgeObjectRetain();
              uint64_t v35 = swift_bridgeObjectRetain();
              char v36 = sub_1000E2C44(v35, v34);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v36)
              {
LABEL_21:
                uint64_t v37 = *(int *)(v32 + 32);
                uint64_t v38 = (void *)((char *)a1 + v37);
                uint64_t v39 = *(void *)((char *)a1 + v37 + 8);
                uint64_t v40 = (void *)((char *)a2 + v37);
                uint64_t v41 = v40[1];
                if (v39)
                {
                  if (v41 && (*v38 == *v40 && v39 == v41 || (sub_1004626E0() & 1) != 0)) {
                    return 1;
                  }
                }
                else if (!v41)
                {
                  return 1;
                }
              }
            }
          }
          else if (!v34)
          {
            goto LABEL_21;
          }
          return 0;
        }
      }
      else
      {
        sub_100019ABC((uint64_t)v10, (uint64_t)v46, &qword_100571720);
        if (v26(v24, 1, v4) != 1)
        {
          uint64_t v27 = v25;
          char v28 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v25 + 32);
          uint64_t v29 = v44;
          v28(v44, v24, v4);
          sub_1000E61C8(qword_100574AA8, (void (*)(uint64_t))&type metadata accessor for URL);
          uint64_t v30 = (uint64_t)v46;
          int v43 = sub_100460BD0();
          uint64_t v31 = *(void (**)(unsigned char *, uint64_t))(v27 + 8);
          v31(v29, v4);
          sub_100009790((uint64_t)v17, &qword_100571720);
          sub_100009790((uint64_t)v19, &qword_100571720);
          v31((unsigned char *)v30, v4);
          sub_100009790((uint64_t)v10, &qword_100571720);
          if ((v43 & 1) == 0) {
            return 0;
          }
          goto LABEL_16;
        }
        sub_100009790((uint64_t)v17, &qword_100571720);
        sub_100009790((uint64_t)v19, &qword_100571720);
        (*(void (**)(unsigned char *, uint64_t))(v25 + 8))(v46, v4);
      }
      sub_100009790((uint64_t)v10, &qword_100574AA0);
      return 0;
    }
  }
  return result;
}

void sub_1000E3340(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = [self standardUserDefaults];
  char v13 = sub_1000E216C(0xD000000000000017, 0x8000000100490630);

  uint64_t v14 = sub_100462770();
  NSString v15 = sub_100460C70();
  [a2 setProperty:v14 forBodyKey:v15];
  swift_unknownObjectRelease();

  *(void *)&long long aBlock = 0x646E655265676170;
  *((void *)&aBlock + 1) = 0xEA00000000007265;
  uint64_t v16 = sub_100462770();
  NSString v17 = sub_100460C70();
  [a2 setProperty:v16 forBodyKey:v17];
  swift_unknownObjectRelease();

  if (!a1)
  {
    long long aBlock = 0u;
    long long v41 = 0u;
LABEL_16:
    sub_100009790((uint64_t)&aBlock, (uint64_t *)&unk_100574DB0);
    goto LABEL_17;
  }
  NSString v18 = sub_100460C70();
  id v19 = [a1 valueForConfigurationKey:v18];

  if (v19)
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v38, 0, sizeof(v38));
  }
  sub_1000E4750((uint64_t)v38, (uint64_t)&aBlock);
  if (!*((void *)&v41 + 1)) {
    goto LABEL_16;
  }
  sub_100005BFC(&qword_10057A900);
  if (swift_dynamicCast())
  {
    receiver = v38[0].receiver;
    if (*((void *)v38[0].receiver + 2)
      && (unint64_t v21 = sub_1000CD178(0xD000000000000021, 0x80000001004905E0), (v22 & 1) != 0))
    {
      sub_100007168(receiver[7] + 32 * v21, (uint64_t)&aBlock);
      sub_100009854(0, &qword_100574988);
      if (swift_dynamicCast()) {
        id v23 = v38[0].receiver;
      }
      else {
        id v23 = 0;
      }
      if ((v13 & 1) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      id v23 = 0;
      if ((v13 & 1) == 0)
      {
LABEL_14:
        if (v23)
        {
          id v24 = v23;
          uint64_t v25 = v23;
          Class isa = (Class)v23;
        }
        else
        {
          uint64_t v25 = 0;
          Class isa = 0;
        }
        goto LABEL_22;
      }
    }
    uint64_t v25 = v23;
    sub_100009854(0, &qword_100574988);
    Class isa = sub_100461CE0(1.0).super.super.isa;
LABEL_22:
    uint64_t v29 = isa;
    NSString v30 = sub_100460C70();
    [a2 setProperty:v29 forBodyKey:v30];

    if (receiver[2])
    {
      unint64_t v31 = sub_1000CD178(0xD000000000000019, 0x8000000100490610);
      if (v32)
      {
        sub_100007168(receiver[7] + 32 * v31, (uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v41 = 0u;
      }
    }
    else
    {
      long long aBlock = 0u;
      long long v41 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((void *)&v41 + 1))
    {
      sub_100009854(0, &qword_100574988);
      if (swift_dynamicCast())
      {
        id v33 = v38[0].receiver;
LABEL_32:
        id v34 = v33;
        NSString v35 = sub_100460C70();
        [a2 setProperty:v34 forBodyKey:v35];

        uint64_t v42 = a5;
        uint64_t v43 = a6;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        *(void *)&long long v41 = sub_1000F6CC0;
        *((void *)&v41 + 1) = &unk_10052D650;
        char v36 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        v37.receiver = a3;
        v37.super_class = (Class)type metadata accessor for Music_SSMetricsPageRenderEvent();
        [super setStandardPropertiesWith:a4 completionHandler:v36];
        _Block_release(v36);

        return;
      }
    }
    else
    {
      sub_100009790((uint64_t)&aBlock, (uint64_t *)&unk_100574DB0);
    }
    id v33 = 0;
    goto LABEL_32;
  }
LABEL_17:
  uint64_t v42 = a5;
  uint64_t v43 = a6;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v41 = sub_1000F6CC0;
  *((void *)&v41 + 1) = &unk_10052D628;
  uint64_t v27 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  char v28 = (objc_class *)type metadata accessor for Music_SSMetricsPageRenderEvent();
  v39.receiver = a3;
  v39.super_class = v28;
  [super setStandardPropertiesWith:a4 completionHandler:v27];
  _Block_release(v27);
}

uint64_t _s9MusicCore18MetricsContentTypeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_100462730();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14) {
    return 20;
  }
  else {
    return v0;
  }
}

uint64_t sub_1000E3948()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000E3980(void *a1, uint64_t a2)
{
  return sub_1000E1C54(a1, a2, *(uint64_t (**)(void *, uint64_t))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1000E3988(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000E3998()
{
  return swift_release();
}

unint64_t sub_1000E39A4()
{
  unint64_t result = qword_100574990;
  if (!qword_100574990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574990);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for MetricsPageProperties(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    __dst = (char *)a1 + v9;
    unint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_10045BDE0();
    uint64_t v12 = *(void *)(v11 - 8);
    char v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100005BFC(&qword_100571720);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    NSString v17 = (uint64_t *)((char *)v4 + v16);
    NSString v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *NSString v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MetricsPageProperties(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_10045BDE0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MetricsPageProperties(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  uint64_t v10 = sub_10045BDE0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100005BFC(&qword_100571720);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  void *v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MetricsPageProperties(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10045BDE0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100005BFC(&qword_100571720);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for MetricsPageProperties(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10045BDE0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100005BFC(&qword_100571720);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  return a1;
}

void *assignWithTake for MetricsPageProperties(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_10045BDE0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    uint64_t v16 = sub_100005BFC(&qword_100571720);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  NSString v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *NSString v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsPageProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000E434C);
}

uint64_t sub_1000E434C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100005BFC(&qword_100571720);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MetricsPageProperties(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000E4414);
}

uint64_t sub_1000E4414(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100005BFC(&qword_100571720);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000E44C0()
{
  sub_1000DC260();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for MetricsContentType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MetricsContentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000E46C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsContentType()
{
  return &type metadata for MetricsContentType;
}

uint64_t type metadata accessor for Music_SSMetricsComponentRenderEvent()
{
  return self;
}

uint64_t type metadata accessor for Music_SSMetricsPageRenderEvent()
{
  return self;
}

uint64_t sub_1000E4748()
{
  return sub_1001CD410(*(void *)(v0 + 16));
}

uint64_t sub_1000E4750(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005BFC((uint64_t *)&unk_100574DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1000E47B8(void (*a1)(void))
{
  id v3 = [self defaultIdentityStore];
  id v4 = [self activeAccount];
  v15[0] = 0;
  id v5 = [v3 DSIDForUserIdentity:v4 outError:v15];

  if (v5)
  {
    id v6 = v15[0];
    [v1 setAccountIdentifier:v5];
    BOOL v7 = [v5 longLongValue] != 0;
  }
  else
  {
    id v8 = v15[0];
    sub_10045BC90();

    swift_willThrow();
    swift_errorRelease();
    [v1 setAccountIdentifier:0];
    BOOL v7 = 1;
  }
  id v9 = [objc_allocWithZone((Class)NSNumber) initWithBool:v7];
  NSString v10 = sub_100460C70();
  [v1 setProperty:v9 forBodyKey:v10];

  id v11 = [self sharedController];
  id v12 = [v11 musicSubscriptionStatus];

  if (v12)
  {
    switch((unint64_t)[v12 statusType])
    {
      case 0uLL:
      case 1uLL:
      case 3uLL:

        break;
      case 2uLL:
        [v12 reasonType];

        break;
      default:
        v15[0] = 0;
        v15[1] = (id)0xE000000000000000;
        sub_100462120(24);
        v16._object = (void *)0x8000000100490580;
        v16._uint64_t countAndFlagsBits = 0xD000000000000013;
        sub_100460E50(v16);
        [v12 statusType];
        v17._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
        v17._object = (void *)0x80000001004905A0;
        sub_100460E50(v17);
        v18._uint64_t countAndFlagsBits = 32;
        v18._object = (void *)0xE100000000000000;
        sub_100460E50(v18);
        [v12 statusType];
        type metadata accessor for ICMusicSubscriptionStatusType(0);
        sub_1004622D0();
        sub_100462350();
        __break(1u);
        JUMPOUT(0x1000E4BF0);
    }
  }
  NSString v13 = sub_100460C70();
  swift_bridgeObjectRelease();
  NSString v14 = sub_100460C70();
  [v1 setProperty:v13 forBodyKey:v14];

  a1();
}

uint64_t sub_1000E4C00(uint64_t (*a1)(void))
{
  int v2 = v1;
  swift_getObjectType();
  id v4 = [(id)swift_getObjCClassFromMetadata() Topic];
  [v2 setTopic:v4];

  id v5 = [self mainBundle];
  id v6 = [v5 infoDictionary];

  if (!v6 || (uint64_t v7 = sub_100460A90(), v6, !v7))
  {
    uint64_t v7 = 0;
    long long v17 = 0u;
    long long v18 = 0u;
    char v11 = 1;
LABEL_12:
    sub_100009790((uint64_t)&v17, (uint64_t *)&unk_100574DB0);
    goto LABEL_13;
  }
  if (!*(void *)(v7 + 16))
  {
    char v11 = 0;
    long long v17 = 0u;
    long long v18 = 0u;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1000CD178(0xD000000000000012, 0x8000000100490530);
  if ((v9 & 1) == 0)
  {
    long long v17 = 0u;
    long long v18 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_100007168(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v17);
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1))
  {
LABEL_11:
    char v11 = 0;
    goto LABEL_12;
  }
  if (swift_dynamicCast())
  {
    NSString v10 = sub_100460C70();
    swift_bridgeObjectRelease();
    char v11 = 0;
    goto LABEL_14;
  }
  char v11 = 0;
LABEL_13:
  NSString v10 = 0;
LABEL_14:
  [v2 setApplicationIdentifier:v10];

  if (v11)
  {
    long long v17 = 0u;
    long long v18 = 0u;
LABEL_23:
    sub_100009790((uint64_t)&v17, (uint64_t *)&unk_100574DB0);
    goto LABEL_24;
  }
  if (*(void *)(v7 + 16) && (unint64_t v12 = sub_1000CD178(0xD00000000000001ALL, 0x8000000100490510), (v13 & 1) != 0))
  {
    sub_100007168(*(void *)(v7 + 56) + 32 * v12, (uint64_t)&v17);
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v18 + 1)) {
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:
    NSString v14 = 0;
    goto LABEL_25;
  }
  NSString v14 = sub_100460C70();
  swift_bridgeObjectRelease();
LABEL_25:
  NSString v15 = sub_100460C70();
  [v2 setProperty:v14 forBodyKey:v15];
  swift_unknownObjectRelease();

  return a1();
}

void sub_1000E4EFC(void (*a1)(void))
{
  NSString v3 = [self currentConnectionTypeHeader];
  if (!v3)
  {
    sub_100460CB0();
    NSString v3 = sub_100460C70();
    swift_bridgeObjectRelease();
  }
  [v1 setConnection:v3];

  id v4 = objc_allocWithZone((Class)ICStoreRequestContext);
  v8[4] = CFRange.init(_:);
  v8[5] = 0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  void v8[2] = sub_100123BF8;
  v8[3] = &unk_10052D538;
  id v5 = _Block_copy(v8);
  id v6 = [v4 initWithBlock:v5];
  _Block_release(v5);
  swift_release();
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
  }
  else
  {
    NSString v7 = [v6 userAgent];
    if (!v7)
    {
      sub_100460CB0();
      NSString v7 = sub_100460C70();
      swift_bridgeObjectRelease();
    }
    [v1 setUserAgent:v7];

    a1();
  }
}

uint64_t sub_1000E50B4(void *a1, uint64_t a2, void *a3, void (**a4)(void))
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a4;
  uint64_t v18 = a2;
  if (*(void *)(a2 + 16))
  {
    char v9 = *(void (**)(void **, void *))(a2 + 32);
    _Block_copy(a4);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100053C60(0, 1);
    uint64_t v10 = v18;
    char v11 = (void *)swift_allocObject();
    v11[2] = a3;
    v11[3] = a1;
    v11[4] = v10;
    v11[5] = sub_1000E631C;
    v11[6] = v8;
    long long v17 = a1;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_1000E6054;
    *(void *)(v12 + 24) = v11;
    v16[0] = sub_1000E6058;
    v16[1] = v12;
    id v13 = a1;
    swift_retain();
    swift_retain();
    id v14 = a3;
    v9(&v17, v16);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    _Block_copy(a4);
    a4[2](a4);
  }

  return swift_release();
}

uint64_t sub_1000E5248(void *a1, void *a2, void (**a3)(void))
{
  sub_100005BFC(&qword_1005729D8);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100466940;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1000E5EFC;
  *(void *)(v8 + 24) = v7;
  *(void *)(v6 + 32) = sub_1000E5F04;
  *(void *)(v6 + 40) = v8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1000E5F0C;
  *(void *)(v10 + 24) = v9;
  *(void *)(v6 + 48) = sub_1000E6318;
  *(void *)(v6 + 56) = v10;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1000E5F30;
  *(void *)(v12 + 24) = v11;
  *(void *)(v6 + 64) = sub_1000E6318;
  *(void *)(v6 + 72) = v12;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1000E5F5C;
  *(void *)(v14 + 24) = v13;
  *(void *)(v6 + 80) = sub_1000E6318;
  *(void *)(v6 + 88) = v14;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1000E5FC0;
  *(void *)(v16 + 24) = v15;
  *(void *)(v6 + 96) = sub_1000E6318;
  *(void *)(v6 + 104) = v16;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1000E5FE4;
  *(void *)(v18 + 24) = v17;
  *(void *)(v6 + 112) = sub_1000E6318;
  *(void *)(v6 + 120) = v18;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000E5FEC;
  *(void *)(v20 + 24) = v19;
  *(void *)(v6 + 128) = sub_1000E6318;
  *(void *)(v6 + 136) = v20;
  sub_1000E50B4(a1, v6, a2, a3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E5554(uint64_t a1, uint64_t a2)
{
  NSString v3 = v2;
  id v6 = [v3 windowHeight];
  NSString v7 = sub_100460C70();
  [v3 setProperty:v6 forBodyKey:v7];

  id v8 = [v3 windowWidth];
  NSString v9 = sub_100460C70();
  [v3 setProperty:v8 forBodyKey:v9];

  sub_100009854(0, (unint64_t *)&qword_100576320);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  swift_retain();
  static OS_dispatch_queue.asyncOnMainIfNeeded(_:)(sub_10000B090, v10);

  return swift_release();
}

void sub_1000E56B8(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = [self standardUserDefaults];
  char v13 = sub_1000E216C(0xD000000000000017, 0x8000000100490470);

  [a2 setXPSamplingForced:v13 & 1];
  if (!a1)
  {
    long long aBlock = 0u;
    long long v28 = 0u;
LABEL_23:
    sub_100009790((uint64_t)&aBlock, (uint64_t *)&unk_100574DB0);
    goto LABEL_24;
  }
  NSString v14 = sub_100460C70();
  id v15 = [a1 valueForConfigurationKey:v14];

  if (v15)
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_1000E4750((uint64_t)&v24, (uint64_t)&aBlock);
  if (!*((void *)&v28 + 1)) {
    goto LABEL_23;
  }
  sub_100005BFC(&qword_10057A900);
  if (!swift_dynamicCast()) {
    goto LABEL_24;
  }
  uint64_t v16 = v24;
  if (*(void *)(v24 + 16))
  {
    unint64_t v17 = sub_1000CD178(0xD000000000000017, 0x8000000100490420);
    if (v18)
    {
      sub_100007168(*(void *)(v16 + 56) + 32 * v17, (uint64_t)&aBlock);
      if (swift_dynamicCast()) {
        [a2 setXPSamplingPercentageUsers:*(double *)&v24];
      }
    }
  }
  if (*(void *)(v16 + 16))
  {
    unint64_t v19 = sub_1000CD178(0x446E6F6973736573, 0xEF6E6F6974617275);
    if (v20)
    {
      sub_100007168(*(void *)(v16 + 56) + 32 * v19, (uint64_t)&aBlock);
      if (swift_dynamicCast()) {
        [a2 setXPSessionDuration:*(double *)&v24];
      }
    }
  }
  if (*(void *)(v16 + 16) && (unint64_t v21 = sub_1000CD178(0xD000000000000021, 0x8000000100490440), (v22 & 1) != 0))
  {
    sub_100007168(*(void *)(v16 + 56) + 32 * v21, (uint64_t)&aBlock);
  }
  else
  {
    long long aBlock = 0u;
    long long v28 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v28 + 1)) {
    goto LABEL_23;
  }
  if (swift_dynamicCast()) {
    [a2 setXPSamplingPercentageCachedResponses:*(double *)&v24];
  }
LABEL_24:
  if (objc_msgSend(a2, "xpSamplingForced", v24, v25))
  {
    [a2 setXPSamplingPercentageUsers:1.0];
    [a2 setXPSamplingPercentageCachedResponses:1.0];
  }
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v28 = sub_1000F6CC0;
  *((void *)&v28 + 1) = &unk_10052D178;
  id v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v26.receiver = a3;
  v26.super_class = (Class)SSMetricsLoadURLEvent;
  [super setStandardPropertiesWith:a4 completionHandler:v23];
  _Block_release(v23);
}

void sub_1000E5A84(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v12 = [self standardUserDefaults];
  char v13 = sub_1000E216C(0xD00000000000001CLL, 0x80000001004903E0);

  Class isa = sub_1004611F0().super.super.isa;
  NSString v15 = sub_100460C70();
  [a2 setProperty:isa forBodyKey:v15];

  if (!a1)
  {
    long long aBlock = 0u;
    long long v36 = 0u;
LABEL_10:
    sub_100009790((uint64_t)&aBlock, (uint64_t *)&unk_100574DB0);
    goto LABEL_29;
  }
  NSString v16 = sub_100460C70();
  id v17 = [a1 valueForConfigurationKey:v16];

  if (v17)
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v33, 0, sizeof(v33));
  }
  sub_1000E4750((uint64_t)v33, (uint64_t)&aBlock);
  if (!*((void *)&v36 + 1)) {
    goto LABEL_10;
  }
  sub_100005BFC(&qword_10057A900);
  if (!swift_dynamicCast()) {
    goto LABEL_29;
  }
  receiver = v33[0].receiver;
  if (v13)
  {
    *((void *)&v36 + 1) = &type metadata for Double;
    *(void *)&long long aBlock = 0x3FF0000000000000;
    goto LABEL_14;
  }
  if (*((void *)v33[0].receiver + 2))
  {
    unint64_t v19 = sub_1000CD178(0xD000000000000026, 0x8000000100490370);
    if (v20)
    {
      sub_100007168(receiver[7] + 32 * v19, (uint64_t)&aBlock);
LABEL_14:
      sub_100009854(0, &qword_100574988);
      int v21 = swift_dynamicCast();
      id v22 = v33[0].receiver;
      if (!v21) {
        id v22 = 0;
      }
      goto LABEL_18;
    }
  }
  long long aBlock = 0u;
  long long v36 = 0u;
  sub_100009790((uint64_t)&aBlock, (uint64_t *)&unk_100574DB0);
  id v22 = 0;
LABEL_18:
  id v23 = v22;
  NSString v24 = sub_100460C70();
  [a2 setProperty:v23 forBodyKey:v24];

  if (receiver[2])
  {
    unint64_t v25 = sub_1000CD178(0xD00000000000001ELL, 0x80000001004903A0);
    if (v26)
    {
      sub_100007168(receiver[7] + 32 * v25, (uint64_t)&aBlock);
    }
    else
    {
      long long aBlock = 0u;
      long long v36 = 0u;
    }
  }
  else
  {
    long long aBlock = 0u;
    long long v36 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v36 + 1))
  {
    sub_100009854(0, &qword_100574988);
    int v27 = swift_dynamicCast();
    id v28 = v33[0].receiver;
    if (!v27) {
      id v28 = 0;
    }
  }
  else
  {
    sub_100009790((uint64_t)&aBlock, (uint64_t *)&unk_100574DB0);
    id v28 = 0;
  }
  id v29 = v28;
  NSString v30 = sub_100460C70();
  [a2 setProperty:v29 forBodyKey:v30];

LABEL_29:
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v36 = sub_1000F6CC0;
  *((void *)&v36 + 1) = &unk_10052D128;
  unint64_t v31 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  char v32 = (objc_class *)type metadata accessor for Music_SSMetricsComponentRenderEvent();
  v34.receiver = a3;
  v34.super_class = v32;
  [super setStandardPropertiesWith:a4 completionHandler:v31];
  _Block_release(v31);
}

void sub_1000E5EF0()
{
  sub_1000E199C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1000E5EFC(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  return sub_1000E1664(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_1000E5F04(uint64_t *a1, uint64_t *a2)
{
  return sub_1000E1748(a1, a2, *(void (**)(uint64_t, uint64_t (*)(), uint64_t))(v2 + 16));
}

uint64_t sub_1000E5F0C(void *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  return sub_1000E0B98(a1, a2);
}

void sub_1000E5F30(uint64_t a1, void (*a2)(void))
{
}

uint64_t sub_1000E5F5C(uint64_t a1, uint64_t (*a2)(void))
{
  return sub_1000E4C00(a2);
}

uint64_t sub_1000E5F88()
{
  return swift_deallocObject();
}

uint64_t sub_1000E5FC0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000E0DF8(a1, a2, a3);
}

uint64_t sub_1000E5FE4(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  return sub_1000E1808(a1, a2, a3, *(void **)(v3 + 16));
}

void sub_1000E5FEC(uint64_t a1, void (*a2)(void))
{
}

uint64_t sub_1000E6018()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1000E6058()
{
  return sub_100121638(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1000E6064()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000E60B4()
{
  return sub_1000E1504(*(void **)(v0 + 24), *(void *)(v0 + 32), *(uint64_t (**)(void))(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1000E60E8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1000E6130()
{
  sub_1000E1190(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

unint64_t sub_1000E613C()
{
  unint64_t result = qword_100576350;
  if (!qword_100576350)
  {
    sub_100005C9C(&qword_100574A88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100576350);
  }
  return result;
}

uint64_t sub_1000E6198()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1000E61C0()
{
  sub_1000E1F2C(*(id *)(v0 + 16));
}

uint64_t sub_1000E61C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000E6210()
{
  return swift_deallocObject();
}

uint64_t sub_1000E6248()
{
  id v1 = *(unsigned char **)(v0 + 24);
  uint64_t result = sub_1000DF3BC((uint64_t)[*(id *)(v0 + 16) cloudStatus], (uint64_t)&off_100523F90);
  if (result) {
    *id v1 = 18;
  }
  return result;
}

uint64_t sub_1000E628C()
{
  return swift_deallocObject();
}

void static MusicCoreAnalytics.sendEvent<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  int v48 = &v39[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v39[-v10];
  uint64_t v46 = v12;
  __chkstk_darwin(v9);
  NSString v14 = &v39[-v13];
  if (qword_100570800 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_10045D310();
  sub_100009688(v15, (uint64_t)qword_100586330);
  NSString v16 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16);
  v16(v14, a1, a2);
  uint64_t v47 = a1;
  uint64_t v45 = v16;
  v16(v11, a1, a2);
  id v17 = sub_10045D2F0();
  os_log_type_t v18 = sub_100461770();
  int v19 = v18;
  char v20 = (void (**)(uint64_t, uint64_t))(a3 + 8);
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v21 = swift_slowAlloc();
    os_log_t v41 = v17;
    uint64_t v22 = a3;
    uint64_t v23 = v21;
    uint64_t v42 = swift_slowAlloc();
    aBlock[0] = v42;
    *(_DWORD *)uint64_t v23 = 136315395;
    uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);
    uint64_t v44 = (unint64_t)v20 & 0xFFFFFFFFFFFFLL | 0x60A1000000000000;
    int v40 = v19;
    uint64_t v24 = v43(a2, v22);
    *(void *)(v23 + 4) = sub_10001FCAC(v24, v25, aBlock);
    swift_bridgeObjectRelease();
    char v26 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
    v26(v14, a2);
    *(_WORD *)(v23 + 12) = 2081;
    (*(void (**)(uint64_t, uint64_t))(v22 + 16))(a2, v22);
    v26(v11, a2);
    sub_1000E6AD8();
    uint64_t v27 = sub_100460AA0();
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    *(void *)(v23 + 14) = sub_10001FCAC(v27, v29, aBlock);
    swift_bridgeObjectRelease();
    os_log_t v30 = v41;
    _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v40, "Send analytics event: %s, payload: %{private}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v22;
    swift_slowDealloc();

    unint64_t v31 = (void (*)(uint64_t, uint64_t))v43;
  }
  else
  {
    char v32 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
    v32(v11, a2);
    v32(v14, a2);

    unint64_t v31 = *v20;
  }
  uint64_t v33 = v47;
  v31(a2, a3);
  objc_super v34 = v48;
  v45(v48, v33, a2);
  unint64_t v35 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = a2;
  *(void *)(v36 + 24) = a3;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32))(v36 + v35, v34, a2);
  NSString v37 = sub_100460C70();
  aBlock[4] = (uint64_t)sub_1000E6A54;
  aBlock[5] = v36;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_1000E68C8;
  aBlock[3] = (uint64_t)&unk_10052D718;
  uint64_t v38 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v38);
  swift_release();
  swift_bridgeObjectRelease();
}

void static MusicCoreAnalytics.sendEvent(eventName:eventPayload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v6 = sub_100460C70();
  v8[4] = a3;
  v8[5] = a4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  void v8[2] = sub_1000E68C8;
  v8[3] = &unk_10052D740;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v7);
}

Class sub_1000E68C8(uint64_t a1)
{
  id v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1000E6AD8();
    v4.super.Class isa = sub_100460A70().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }

  return v4.super.isa;
}

uint64_t sub_1000E6954()
{
  uint64_t v0 = sub_10045D310();
  sub_1000096D0(v0, qword_100586330);
  sub_100009688(v0, (uint64_t)qword_100586330);
  return sub_10045D300();
}

uint64_t sub_1000E69CC()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_1000E6A54()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 16))();
}

uint64_t sub_1000E6AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000E6AD0()
{
  return swift_release();
}

unint64_t sub_1000E6AD8()
{
  unint64_t result = qword_100575A50;
  if (!qword_100575A50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100575A50);
  }
  return result;
}

ValueMetadata *type metadata accessor for MusicCoreAnalytics()
{
  return &type metadata for MusicCoreAnalytics;
}

void *MetricsEvent.PageRender.performanceMetrics.getter()
{
  swift_beginAccess();
  id v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t MetricsEvent.PageRender.onScreenResourcesAppearEndTime.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 24);
}

uint64_t MetricsEvent.PageRender.pageUserInteractiveTime.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 40);
}

uint64_t MetricsEvent.PageRender.resourceRequestStartTime.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 56);
}

uint64_t MetricsEvent.PageRender.pageEndTime.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 72);
}

uint64_t MetricsEvent.PageRender.pageInterruptTime.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 88);
}

uint64_t MetricsEvent.PageRender.pageAppearTime.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 104);
}

uint64_t MetricsEvent.PageRender.pageRequestTime.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 120);
}

uint64_t MetricsEvent.PageRender.request.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 152);
  swift_beginAccess();
  uint64_t v4 = sub_100461EA0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MetricsEvent.PageRender.request.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 152);
  swift_beginAccess();
  uint64_t v4 = sub_100461EA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*MetricsEvent.PageRender.request.modify())()
{
  return j__swift_endAccess;
}

uint64_t MetricsEvent.PageRender.pageProperties.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1000E6EEC(v1 + *(void *)(*(void *)v1 + 160), a1);
}

uint64_t sub_1000E6EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetricsPageProperties();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MetricsEvent.PageRender.__allocating_init(pageProperties:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  MetricsEvent.PageRender.init(pageProperties:)(a1);
  return v2;
}

uint64_t *MetricsEvent.PageRender.init(pageProperties:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  v1[2] = 0;
  v1[3] = 0;
  *((unsigned char *)v1 + 32) = 1;
  v1[5] = 0;
  *((unsigned char *)v1 + 48) = 1;
  v1[7] = 0;
  *((unsigned char *)v1 + 64) = 1;
  v1[9] = 0;
  *((unsigned char *)v1 + 80) = 1;
  v1[11] = 0;
  *((unsigned char *)v1 + 96) = 1;
  v1[13] = 0;
  *((unsigned char *)v1 + 112) = 1;
  v1[15] = 0;
  *((unsigned char *)v1 + 128) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 56))((uint64_t)v1 + *(void *)(v3 + 152), 1, 1);
  *((unsigned char *)v1 + *(void *)(*v1 + 168)) = 0;
  sub_1000E7088(a1, (uint64_t)v1 + *(void *)(*v1 + 160));
  return v1;
}

uint64_t sub_1000E7088(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MetricsPageProperties();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *MetricsEvent.PageRender.updatePerformanceMetrics(_:with:)(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v7 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = a1;
  id v8 = a1;

  unint64_t result = *(void **)(v3 + 16);
  if (result)
  {
    [result responseEndTime];
    uint64_t v11 = v10;
    unint64_t result = (void *)swift_beginAccess();
    if ((*(unsigned char *)(v3 + 32) & 1) == 0)
    {
      swift_beginAccess();
      *(void *)(v3 + 72) = v11;
      *(unsigned char *)(v3 + 80) = 0;
      return (void *)sub_1000E71B4(a2, a3);
    }
  }
  return result;
}

uint64_t sub_1000E71B4(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)v2 + 168);
  if ((*(unsigned char *)(v2 + v3) & 1) == 0)
  {
    uint64_t v5 = result;
    *(unsigned char *)(v2 + v3) = 1;
    sub_100085514();
    NSString v6 = (void *)swift_allocObject();
    _OWORD v6[2] = v2;
    v6[3] = v5;
    v6[4] = a2;
    swift_bridgeObjectRetain();
    swift_retain();
    static OS_dispatch_queue.asyncOnMainIfNeeded(_:)((uint64_t (*)(void))sub_1000E7C60, (uint64_t)v6);
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageAppear()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10045C190();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 112) == 1)
  {
    sub_10045C180();
    sub_10045C130();
    uint64_t v7 = v6;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v1 + 104) = v7;
    *(unsigned char *)(v1 + 112) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageRequest()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10045C190();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 128) == 1)
  {
    sub_10045C180();
    sub_10045C130();
    uint64_t v7 = v6;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v1 + 120) = v7;
    *(unsigned char *)(v1 + 128) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageAsUserInteractive()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10045C190();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 48) == 1)
  {
    sub_10045C180();
    sub_10045C130();
    uint64_t v7 = v6;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v1 + 40) = v7;
    *(unsigned char *)(v1 + 48) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markResourceRequestStartTime()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10045C190();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 64) == 1)
  {
    sub_10045C180();
    sub_10045C130();
    uint64_t v7 = v6;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v1 + 56) = v7;
    *(unsigned char *)(v1 + 64) = 0;
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markOnScreenResourcesAppearEndTime(with:)(Swift::String_optional with)
{
  uint64_t v2 = v1;
  object = with.value._object;
  uint64_t countAndFlagsBits = with.value._countAndFlagsBits;
  uint64_t v5 = sub_10045C190();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 32) == 1)
  {
    sub_10045C180();
    sub_10045C130();
    uint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)(v2 + 24) = v10;
    *(unsigned char *)(v2 + 32) = 0;
    swift_beginAccess();
    uint64_t v11 = *(void **)(v2 + 16);
    if (v11)
    {
      [v11 responseEndTime];
      swift_beginAccess();
      *(void *)(v2 + 72) = v10;
      *(unsigned char *)(v2 + 80) = 0;
      sub_1000E71B4(countAndFlagsBits, (uint64_t)object);
    }
  }
}

Swift::Void __swiftcall MetricsEvent.PageRender.markPageDisappearanceAndRecordIfNecessary(with:)(Swift::String_optional with)
{
  uint64_t v2 = v1;
  object = with.value._object;
  uint64_t countAndFlagsBits = with.value._countAndFlagsBits;
  uint64_t v5 = sub_10045C190();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 80) == 1)
  {
    swift_beginAccess();
    if (*(unsigned char *)(v2 + 96) == 1)
    {
      sub_10045C180();
      sub_10045C130();
      uint64_t v10 = v9;
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
      *(void *)(v2 + 88) = v10;
      *(unsigned char *)(v2 + 96) = 0;
    }
  }
  sub_1000E71B4(countAndFlagsBits, (uint64_t)object);
}

void sub_1000E7934(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_1005707F8 != -1) {
    swift_once();
  }
  MetricsReportingController.recordPageRenderEvent<A>(_:pageContext:)(a1, a2, a3);
}

id *MetricsEvent.PageRender.deinit()
{
  uint64_t v1 = (char *)v0 + *((void *)*v0 + 19);
  uint64_t v2 = sub_100461EA0();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1000E7A5C((uint64_t)v0 + *((void *)*v0 + 20));
  return v0;
}

uint64_t sub_1000E7A5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MetricsPageProperties();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MetricsEvent.PageRender.__deallocating_deinit()
{
  MetricsEvent.PageRender.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1000E7B10()
{
  uint64_t result = sub_100461EA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MetricsPageProperties();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for MetricsEvent.PageRender()
{
  return sub_100041DA8();
}

uint64_t sub_1000E7C20()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1000E7C60()
{
  sub_1000E7934(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

__n128 static ApplicationCapabilities.shared.getter@<Q0>(uint64_t a1@<X8>)
{
  if (qword_100570808 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  __n128 result = v7;
  *(unsigned char *)a1 = v3;
  *(unsigned char *)(a1 + 1) = v4;
  *(unsigned char *)(a1 + 2) = v5;
  *(_OWORD *)(a1 + 8) = v6;
  *(__n128 *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v9;
  *(_OWORD *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v12;
  *(unsigned char *)(a1 + 104) = v13;
  *(void *)(a1 + 112) = v14;
  return result;
}

uint64_t *ApplicationCapabilities.Controller.shared.unsafeMutableAddressor()
{
  if (qword_100570808 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.Controller.shared;
}

__n128 ApplicationCapabilities.Controller.capabilities.getter@<Q0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  __n128 result = v7;
  *(unsigned char *)a1 = v3;
  *(unsigned char *)(a1 + 1) = v4;
  *(unsigned char *)(a1 + 2) = v5;
  *(_OWORD *)(a1 + 8) = v6;
  *(__n128 *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v9;
  *(_OWORD *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v12;
  *(unsigned char *)(a1 + 104) = v13;
  *(void *)(a1 + 112) = v14;
  return result;
}

uint64_t ApplicationCapabilities.hasNetworkConnectivity.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ApplicationCapabilities.isCloudLibraryEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t Library.Menu.Request.filteringOptions.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t Library.Menu.Request.excludedIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t ApplicationCapabilities.Service.description.getter(char a1)
{
  unint64_t result = 0x636973756DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x646956636973756DLL;
      break;
    case 2:
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x6C6169636F73;
      break;
    case 4:
      unint64_t result = 0x6F69646172;
      break;
    case 5:
      unint64_t result = 0x73656E757469;
      break;
    case 6:
      unint64_t result = 0x74634170756F7267;
      break;
    case 7:
      unint64_t result = 0x746963696C707865;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0x6C62616E45696C6DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t ApplicationCapabilities.Service.rawValue.getter(char a1)
{
  unint64_t result = 0x636973756DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x646956636973756DLL;
      break;
    case 2:
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x6C6169636F73;
      break;
    case 4:
      unint64_t result = 0x6F69646172;
      break;
    case 5:
      unint64_t result = 0x73656E757469;
      break;
    case 6:
      unint64_t result = 0x74634170756F7267;
      break;
    case 7:
      unint64_t result = 0x746963696C707865;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0x6C62616E45696C6DLL;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Int sub_1000E817C()
{
  char v1 = *v0;
  sub_1004628B0();
  ApplicationCapabilities.Service.rawValue.getter(v1);
  sub_100460DA0();
  swift_bridgeObjectRelease();
  return sub_100462900();
}

uint64_t sub_1000E81E0()
{
  ApplicationCapabilities.Service.rawValue.getter(*v0);
  sub_100460DA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000E8234()
{
  char v1 = *v0;
  sub_1004628B0();
  ApplicationCapabilities.Service.rawValue.getter(v1);
  sub_100460DA0();
  swift_bridgeObjectRelease();
  return sub_100462900();
}

uint64_t sub_1000E8294@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s9MusicCore23ApplicationCapabilitiesV7ServiceO8rawValueAESgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1000E82C4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ApplicationCapabilities.Service.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000E82F0(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = ApplicationCapabilities.Service.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == ApplicationCapabilities.Service.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1004626E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_1000E837C()
{
  return ApplicationCapabilities.Service.rawValue.getter(*v0);
}

Swift::Void __swiftcall ApplicationCapabilities.setServiceEnabled(_:service:)(Swift::Bool _, MusicCore::ApplicationCapabilities::Service service)
{
  id v3 = [self sharedConnection];
  if (!v3)
  {
    __break(1u);
    JUMPOUT(0x1000E8498);
  }
  switch(service)
  {
    case MusicCore_ApplicationCapabilities_Service_subscriptionRelated:
    case MusicCore_ApplicationCapabilities_Service_radio:
    case MusicCore_ApplicationCapabilities_Service_sharePlayTogether:
    case MusicCore_ApplicationCapabilities_Service_mliEnabled:
      break;
    default:
      id v5 = v3;
      sub_100460CB0();
      NSString v4 = sub_100460C70();
      swift_bridgeObjectRelease();
      [v5 setBoolValue:1 forSetting:v4];

      id v3 = v4;
      break;
  }
}

uint64_t ApplicationCapabilities.ratingWarning.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  long long v3 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ApplicationCapabilities.RatingWarning.threshold.getter()
{
  return *(void *)v0;
}

uint64_t ApplicationCapabilities.RatingWarning.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ApplicationCapabilities.RatingWarning.description.getter()
{
  strcpy((char *)v4, "RatingWarning(");
  HIBYTE(v4[1]) = -18;
  v6[0] = 0x6C6F687365726874;
  v6[1] = 0xEA00000000003D64;
  v7._uint64_t countAndFlagsBits = sub_100462660();
  sub_100460E50(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 10;
  v8._object = (void *)0xE100000000000000;
  sub_100460E50(v8);
  v9._uint64_t countAndFlagsBits = 0x6C6F687365726874;
  v9._object = (void *)0xEA00000000003D64;
  sub_100460E50(v9);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 0x3D656C746974;
  v5._object = (void *)0xE600000000000000;
  sub_100019960(v0 + 8, (uint64_t)v6, (uint64_t *)&unk_100577400);
  sub_100019960((uint64_t)v6, (uint64_t)&v3, (uint64_t *)&unk_100577400);
  sub_100074F98((uint64_t)v6);
  sub_100005BFC((uint64_t *)&unk_100577400);
  v10._uint64_t countAndFlagsBits = sub_100460D40();
  sub_100460E50(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 10;
  v11._object = (void *)0xE100000000000000;
  sub_100460E50(v11);
  sub_100460E50(v5);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0x3D6567617373656DLL;
  v3._object = (void *)0xE800000000000000;
  sub_100019960(v0 + 24, (uint64_t)&v5, (uint64_t *)&unk_100577400);
  sub_100019960((uint64_t)&v5, (uint64_t)&v2, (uint64_t *)&unk_100577400);
  sub_100074F98((uint64_t)&v5);
  v12._uint64_t countAndFlagsBits = sub_100460D40();
  sub_100460E50(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 10;
  v13._object = (void *)0xE100000000000000;
  sub_100460E50(v13);
  sub_100460E50(v3);
  swift_bridgeObjectRelease();
  return v4[0];
}

uint64_t sub_1000E8748(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return _s9MusicCore23ApplicationCapabilitiesV13RatingWarningV23__derived_struct_equalsySbAE_AEtFZ_0(v5, v7) & 1;
}

uint64_t sub_1000E8794()
{
  return ApplicationCapabilities.RatingWarning.description.getter();
}

void *ApplicationCapabilities.subscriptionStatus.getter()
{
  uint64_t v1 = *(void **)(v0 + 80);
  id v2 = v1;
  return v1;
}

uint64_t ApplicationCapabilities.subscriptionState.getter()
{
  return *(unsigned __int8 *)(v0 + 88);
}

MusicCore::ApplicationCapabilities::SubscriptionState_optional __swiftcall ApplicationCapabilities.SubscriptionState.init(rawValue:)(Swift::String rawValue)
{
  v1._rawValue = &off_1005240E8;
  return (MusicCore::ApplicationCapabilities::SubscriptionState_optional)sub_1000F3EF4(rawValue._countAndFlagsBits, rawValue._object, v1);
}

uint64_t ApplicationCapabilities.SubscriptionState.rawValue.getter(char a1)
{
  uint64_t result = 0x6564696365646E75;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x63697373616C63;
      break;
    case 2:
      uint64_t result = 0x6269726373627573;
      break;
    case 3:
      uint64_t result = 0x6275536563696F76;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000E88C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100035030(*a1, *a2);
}

Swift::Int sub_1000E88D4()
{
  return sub_100462900();
}

uint64_t sub_1000E89C4()
{
  sub_100460DA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000E8A9C()
{
  return sub_100462900();
}

uint64_t sub_1000E8B88@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_1005240E8;
  uint64_t result = sub_1000F3EF4(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

void sub_1000E8BC0(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000064;
  uint64_t v3 = 0x6564696365646E75;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x63697373616C63;
      goto LABEL_3;
    case 2:
      *a1 = 0x6269726373627573;
      a1[1] = 0xEA00000000007265;
      break;
    case 3:
      *a1 = 0x6275536563696F76;
      a1[1] = 0xEF72656269726373;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t Player.ReplaceCommand.replaceIntent.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000E8C78(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = a1[1];
  int v3 = *(unsigned __int8 *)(a2 + 1);
  return sub_100035228(*a1, *(unsigned char *)a2) & ~(v2 ^ v3) & 1;
}

uint64_t ApplicationCapabilities.Tabs.description.getter()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1004610B0();
  int v2 = v1;
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 10;
  v7._object = (void *)0xE100000000000000;
  sub_100460E50(v7);
  v8._uint64_t countAndFlagsBits = v0;
  v8._object = v2;
  sub_100460E50(v8);
  swift_bridgeObjectRelease();
  sub_100462120(19);
  swift_bridgeObjectRelease();
  sub_100005BFC((uint64_t *)&unk_100574B70);
  v9._uint64_t countAndFlagsBits = sub_100460D40();
  sub_100460E50(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 10;
  v10._object = (void *)0xE100000000000000;
  sub_100460E50(v10);
  v11._uint64_t countAndFlagsBits = 0xD000000000000010;
  v11._object = (void *)0x8000000100490770;
  sub_100460E50(v11);
  swift_bridgeObjectRelease();
  sub_100462120(21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1004610B0();
  Swift::String v5 = v4;
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = v3;
  v12._object = v5;
  sub_100460E50(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 10;
  v13._object = (void *)0xE100000000000000;
  sub_100460E50(v13);
  v14._uint64_t countAndFlagsBits = 0xD000000000000012;
  v14._object = (void *)0x8000000100490790;
  sub_100460E50(v14);
  swift_bridgeObjectRelease();
  return 0x2873626154;
}

uint64_t static ApplicationCapabilities.Tabs.__derived_struct_equals(_:_:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  if ((sub_1000E9310(a1, a4) & 1) == 0) {
    return 0;
  }
  if (a2 == 6)
  {
    if (a5 != 6) {
      return 0;
    }
  }
  else if (a5 == 6 || (sub_100035034(a2, a5) & 1) == 0)
  {
    return 0;
  }

  return sub_1000E955C(a3, a6);
}

uint64_t sub_1000E8F20(uint64_t a1, uint64_t a2)
{
  return sub_1000E9B00(a1, a2, (uint64_t (*)(void))&type metadata accessor for Playlist.Variant, (unint64_t *)&qword_100572288, (void (*)(uint64_t))&type metadata accessor for Playlist.Variant, (uint64_t)&protocol conformance descriptor for Playlist.Variant);
}

uint64_t sub_1000E8F68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    NSString v4 = (unsigned __int8 *)(a2 + 32);
    while (1)
    {
      unsigned int v7 = *v3++;
      uint64_t v6 = v7;
      unsigned int v9 = *v4++;
      uint64_t v8 = v9;
      unint64_t v10 = 0xD000000000000029;
      unint64_t v11 = 0x800000010048D3C0;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xD000000000000025;
          unint64_t v11 = 0x800000010048D3F0;
          break;
        case 2:
          unint64_t v10 = 0xD000000000000023;
          unint64_t v11 = 0x800000010048D420;
          break;
        case 3:
          unint64_t v10 = 0xD000000000000022;
          unint64_t v11 = 0x800000010048D450;
          break;
        case 4:
          Swift::String v12 = "LibraryView.Albums";
          goto LABEL_18;
        case 5:
          unint64_t v10 = 0xD000000000000026;
          unint64_t v11 = 0x800000010048D4B0;
          break;
        case 6:
          unint64_t v10 = 0xD000000000000027;
          unint64_t v11 = 0x800000010048D4E0;
          break;
        case 7:
          unint64_t v10 = 0xD000000000000022;
          unint64_t v11 = 0x800000010048D510;
          break;
        case 8:
          unint64_t v10 = 0xD000000000000028;
          unint64_t v11 = 0x800000010048D540;
          break;
        case 9:
          unint64_t v10 = 0xD000000000000025;
          unint64_t v11 = 0x800000010048D570;
          break;
        case 10:
          Swift::String v12 = "LibraryView.Composers";
LABEL_18:
          unint64_t v11 = (unint64_t)v12 | 0x8000000000000000;
          unint64_t v10 = 0xD000000000000021;
          break;
        case 11:
          unint64_t v10 = 0xD000000000000026;
          unint64_t v11 = 0x800000010048D5D0;
          break;
        case 12:
          unint64_t v10 = 0xD000000000000027;
          unint64_t v11 = 0x800000010048D600;
          break;
        default:
          break;
      }
      unint64_t v13 = 0xD000000000000029;
      unint64_t v14 = 0x800000010048D3C0;
      switch(v8)
      {
        case 1:
          unint64_t v15 = 0xD000000000000025;
          NSString v16 = "LibraryView.RecentlyAdded";
          goto LABEL_31;
        case 2:
          unint64_t v15 = 0xD000000000000023;
          NSString v16 = "LibraryView.Playlists";
          goto LABEL_31;
        case 3:
          unint64_t v15 = 0xD000000000000022;
          NSString v16 = "LibraryView.Artists";
          goto LABEL_31;
        case 4:
          id v17 = "LibraryView.Albums";
          goto LABEL_34;
        case 5:
          unint64_t v15 = 0xD000000000000026;
          NSString v16 = "LibraryView.Songs";
          goto LABEL_31;
        case 6:
          unint64_t v15 = 0xD000000000000027;
          NSString v16 = "LibraryView.MadeForYou";
          goto LABEL_31;
        case 7:
          unint64_t v15 = 0xD000000000000022;
          NSString v16 = "LibraryView.MusicVideos";
          goto LABEL_31;
        case 8:
          unint64_t v15 = 0xD000000000000028;
          NSString v16 = "LibraryView.Genres";
          goto LABEL_31;
        case 9:
          unint64_t v15 = 0xD000000000000025;
          NSString v16 = "LibraryView.Compilations";
LABEL_31:
          unint64_t v14 = (unint64_t)v16 | 0x8000000000000000;
          if (v10 != v15) {
            goto LABEL_5;
          }
          goto LABEL_38;
        case 10:
          id v17 = "LibraryView.Composers";
LABEL_34:
          unint64_t v14 = (unint64_t)v17 | 0x8000000000000000;
          if (v10 != 0xD000000000000021) {
            goto LABEL_5;
          }
          goto LABEL_38;
        case 11:
          unint64_t v13 = 0xD000000000000026;
          unint64_t v14 = 0x800000010048D5D0;
          goto LABEL_37;
        case 12:
          unint64_t v14 = 0x800000010048D600;
          if (v10 != 0xD000000000000027) {
            goto LABEL_5;
          }
          goto LABEL_38;
        default:
LABEL_37:
          if (v10 != v13) {
            goto LABEL_5;
          }
LABEL_38:
          if (v11 == v14)
          {
            swift_bridgeObjectRelease_n();
            if (!--v2) {
              return 1;
            }
          }
          else
          {
LABEL_5:
            char v5 = sub_1004626E0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v5 & 1) == 0) {
              return 0;
            }
            if (!--v2) {
              return 1;
            }
          }
          break;
      }
    }
  }
  return 1;
}

uint64_t sub_1000E9310(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    NSString v4 = (unsigned __int8 *)(a2 + 32);
    while (1)
    {
      unsigned int v7 = *v3++;
      uint64_t v6 = v7;
      unsigned int v9 = *v4++;
      uint64_t v8 = v9;
      unint64_t v10 = 0xE700000000000000;
      uint64_t v11 = 0x7972617262696CLL;
      switch(v6)
      {
        case 1:
          uint64_t v11 = 0x6F4E6E657473696CLL;
          unint64_t v10 = 0xE900000000000077;
          break;
        case 2:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x6573776F7262;
          break;
        case 3:
          unint64_t v10 = 0xE500000000000000;
          uint64_t v11 = 0x6F69646172;
          break;
        case 4:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x686372616573;
          break;
        case 5:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x736F65646976;
          break;
        default:
          break;
      }
      unint64_t v12 = 0xE700000000000000;
      uint64_t v13 = 0x7972617262696CLL;
      switch(v8)
      {
        case 1:
          unint64_t v12 = 0xE900000000000077;
          if (v11 == 0x6F4E6E657473696CLL) {
            goto LABEL_22;
          }
          goto LABEL_5;
        case 2:
          unint64_t v12 = 0xE600000000000000;
          if (v11 != 0x6573776F7262) {
            goto LABEL_5;
          }
          goto LABEL_22;
        case 3:
          unint64_t v12 = 0xE500000000000000;
          if (v11 != 0x6F69646172) {
            goto LABEL_5;
          }
          goto LABEL_22;
        case 4:
          unint64_t v12 = 0xE600000000000000;
          uint64_t v13 = 0x686372616573;
          goto LABEL_21;
        case 5:
          unint64_t v12 = 0xE600000000000000;
          if (v11 != 0x736F65646976) {
            goto LABEL_5;
          }
          goto LABEL_22;
        default:
LABEL_21:
          if (v11 != v13) {
            goto LABEL_5;
          }
LABEL_22:
          if (v10 == v12)
          {
            swift_bridgeObjectRelease_n();
            if (!--v2) {
              return 1;
            }
          }
          else
          {
LABEL_5:
            char v5 = sub_1004626E0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v5 & 1) == 0) {
              return 0;
            }
            if (!--v2) {
              return 1;
            }
          }
          break;
      }
    }
  }
  return 1;
}

uint64_t sub_1000E955C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a2 + 33);
    NSString v4 = (unsigned __int8 *)(a1 + 33);
    while (1)
    {
      int v5 = *v4;
      unint64_t v6 = 0xE800000000000000;
      int v7 = *v3;
      unint64_t v8 = 0x636973756D5F796DLL;
      switch(*(v4 - 1))
      {
        case 1u:
          unint64_t v6 = 0xE700000000000000;
          unint64_t v8 = 0x756F795F726F66;
          break;
        case 2u:
          unint64_t v8 = 0x6E5F6E657473696CLL;
          unint64_t v6 = 0xEA0000000000776FLL;
          break;
        case 3u:
          unint64_t v6 = 0xE600000000000000;
          unint64_t v8 = 0x6573776F7262;
          break;
        case 4u:
          unint64_t v6 = 0xE500000000000000;
          uint64_t v9 = 1768186226;
          goto LABEL_14;
        case 5u:
          unint64_t v6 = 0xE600000000000000;
          unint64_t v8 = 0x686372616573;
          break;
        case 6u:
          unint64_t v6 = 0xE500000000000000;
          uint64_t v9 = 1701079414;
LABEL_14:
          unint64_t v8 = v9 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000;
          break;
        default:
          break;
      }
      unint64_t v10 = 0xE800000000000000;
      uint64_t v11 = 0x636973756D5F796DLL;
      switch(*(v3 - 1))
      {
        case 1u:
          unint64_t v10 = 0xE700000000000000;
          if (v8 == 0x756F795F726F66) {
            goto LABEL_28;
          }
          goto LABEL_29;
        case 2u:
          unint64_t v10 = 0xEA0000000000776FLL;
          if (v8 != 0x6E5F6E657473696CLL) {
            goto LABEL_29;
          }
          goto LABEL_28;
        case 3u:
          unint64_t v10 = 0xE600000000000000;
          if (v8 != 0x6573776F7262) {
            goto LABEL_29;
          }
          goto LABEL_28;
        case 4u:
          unint64_t v10 = 0xE500000000000000;
          uint64_t v12 = 1768186226;
          goto LABEL_27;
        case 5u:
          unint64_t v10 = 0xE600000000000000;
          uint64_t v11 = 0x686372616573;
          goto LABEL_24;
        case 6u:
          unint64_t v10 = 0xE500000000000000;
          uint64_t v12 = 1701079414;
LABEL_27:
          if (v8 == (v12 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
            goto LABEL_28;
          }
          goto LABEL_29;
        default:
LABEL_24:
          if (v8 != v11) {
            goto LABEL_29;
          }
LABEL_28:
          if (v6 == v10)
          {
            swift_bridgeObjectRelease_n();
            if (v5 != v7) {
              return 0;
            }
          }
          else
          {
LABEL_29:
            char v13 = sub_1004626E0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t result = 0;
            if (v13 & 1) == 0 || ((v5 ^ v7)) {
              return result;
            }
          }
          v3 += 2;
          v4 += 2;
          if (!--v2) {
            return 1;
          }
          break;
      }
    }
  }
  return 1;
}

uint64_t sub_1000E97FC(uint64_t a1, uint64_t a2)
{
  return sub_1000E9824(a1, a2, (uint64_t)&qword_100574DE8);
}

uint64_t sub_1000E9810(uint64_t a1, uint64_t a2)
{
  return sub_1000E9824(a1, a2, (uint64_t)&unk_100574DF0);
}

uint64_t sub_1000E9824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1004623D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v8 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_1004623D0();
    swift_bridgeObjectRelease();
    if ((void *)v7 == v9) {
      goto LABEL_5;
    }
    return 0;
  }
  uint64_t v9 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((void *)v7 != v9) {
    return 0;
  }
LABEL_5:
  if (!v7) {
    return 1;
  }
  uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v11 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v10 = a1;
  }
  if (v6) {
    uint64_t v11 = v10;
  }
  uint64_t v12 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v13 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v12 = a2;
  }
  if (v8) {
    uint64_t v13 = v12;
  }
  if (v11 == v13) {
    return 1;
  }
  if (v7 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = sub_100462170();
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  uint64_t v9 = (void *)result;
  unint64_t v8 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v15 = (id)sub_100462170();
LABEL_22:
    NSString v16 = v15;
    sub_100009854(0, (unint64_t *)a3);
    a3 = sub_100461D10();

    if (a3)
    {
      uint64_t v17 = 1 - v7;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v7 = v17 + i == 5;
        if (v17 + i == 5) {
          return v7;
        }
        unint64_t v22 = i - 4;
        if (v23)
        {
          a3 = sub_100462170();
          if (v8) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v22 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          a3 = (uint64_t)*(id *)(a1 + 8 * i);
          if (v8)
          {
LABEL_24:
            id v19 = (id)sub_100462170();
            goto LABEL_25;
          }
        }
        if (v22 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v19 = *(id *)(a2 + 8 * i);
LABEL_25:
        char v20 = v19;
        char v21 = sub_100461D10();

        if ((v21 & 1) == 0) {
          return v7;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v15 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E9AA4(uint64_t a1, uint64_t a2)
{
  return sub_1000E9824(a1, a2, (uint64_t)&qword_100575BB0);
}

uint64_t sub_1000E9AB8(uint64_t a1, uint64_t a2)
{
  return sub_1000E9B00(a1, a2, (uint64_t (*)(void))&type metadata accessor for Playlist.Entry, (unint64_t *)&unk_100574E00, (void (*)(uint64_t))&type metadata accessor for Playlist.Entry, (uint64_t)&protocol conformance descriptor for Playlist.Entry);
}

uint64_t sub_1000E9B00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v37 = a6;
  uint64_t v10 = a3(0);
  uint64_t v11 = __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  id v15 = (char *)&v30 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 == *(void *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      char v24 = 1;
    }
    else
    {
      unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      id v19 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
      uint64_t v18 = v12 + 16;
      objc_super v34 = v19;
      unint64_t v35 = v13;
      uint64_t v30 = *(void *)(v18 + 56);
      uint64_t v31 = a2;
      uint64_t v36 = v18;
      uint64_t v32 = a1;
      uint64_t v33 = (void (**)(char *, uint64_t))(v18 - 8);
      uint64_t v20 = v16 - 1;
      do
      {
        char v21 = v34;
        v34(v15, a1 + v17, v10);
        unint64_t v22 = v15;
        unint64_t v23 = v35;
        v21(v35, a2 + v17, v10);
        sub_1000F3884(a4, a5);
        char v24 = sub_100460BD0();
        unint64_t v25 = *v33;
        char v26 = v23;
        id v15 = v22;
        (*v33)(v26, v10);
        v25(v22, v10);
        BOOL v28 = v20-- != 0;
        if ((v24 & 1) == 0) {
          break;
        }
        v17 += v30;
        a2 = v31;
        a1 = v32;
      }
      while (v28);
    }
  }
  else
  {
    char v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_1000E9D18(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if ((sub_1000E9310(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  if (v2 == 6)
  {
    if (v4 != 6) {
      return 0;
    }
  }
  else if (v4 == 6 || (sub_100035034(v2, v4) & 1) == 0)
  {
    return 0;
  }

  return sub_1000E955C(v3, v5);
}

uint64_t sub_1000E9DBC()
{
  return ApplicationCapabilities.Tabs.description.getter();
}

uint64_t ApplicationCapabilities.tabs.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1000E9E18()
{
  uint64_t v1 = v0;
  sub_100005BFC(&qword_100574E40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100466950;
  *(void *)(inited + 32) = 0x64656E6769537369;
  *(void *)(inited + 40) = 0xEA00000000006E49;
  *(unsigned char *)(inited + 48) = *(unsigned char *)v0;
  *(void *)(inited + 72) = &type metadata for Bool;
  *(void *)(inited + 80) = 0xD000000000000016;
  *(void *)(inited + 88) = 0x8000000100490F70;
  *(unsigned char *)(inited + 96) = *(unsigned char *)(v0 + 1);
  *(void *)(inited + 120) = &type metadata for Bool;
  *(void *)(inited + 128) = 0xD000000000000015;
  *(void *)(inited + 136) = 0x8000000100490F90;
  *(unsigned char *)(inited + 144) = *(unsigned char *)(v0 + 2);
  *(void *)(inited + 168) = &type metadata for Bool;
  *(void *)(inited + 176) = 0xD000000000000018;
  *(void *)(inited + 184) = 0x8000000100490FB0;
  sub_1000EA314(v0, (uint64_t *)(inited + 192));
  *(void *)(inited + 224) = 0x536465776F6C6C61;
  *(void *)(inited + 232) = 0xEF73656369767265;
  sub_1000F3C58();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_100461470();
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  *(void *)(inited + 240) = v3;
  *(void *)(inited + 248) = v5;
  *(void *)(inited + 264) = &type metadata for String;
  *(void *)(inited + 272) = 0xD000000000000012;
  *(void *)(inited + 280) = 0x8000000100490FD0;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_100461470();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  *(void *)(inited + 288) = v6;
  *(void *)(inited + 296) = v8;
  *(void *)(inited + 312) = &type metadata for String;
  strcpy((char *)(inited + 320), "ratingWarning");
  *(_WORD *)(inited + 334) = -4864;
  long long v9 = *(_OWORD *)(v0 + 56);
  long long v28 = *(_OWORD *)(v0 + 40);
  long long v29 = v9;
  uint64_t v30 = *(void *)(v0 + 72);
  sub_100019960((uint64_t)&v28 + 8, (uint64_t)v32, (uint64_t *)&unk_100577400);
  sub_100019960((uint64_t)&v29 + 8, (uint64_t)v31, (uint64_t *)&unk_100577400);
  sub_100074F98((uint64_t)v32);
  sub_100074F98((uint64_t)v31);
  uint64_t v10 = ApplicationCapabilities.RatingWarning.description.getter();
  uint64_t v12 = v11;
  sub_10006A8BC((uint64_t)v32);
  sub_10006A8BC((uint64_t)v31);
  *(void *)(inited + 336) = v10;
  *(void *)(inited + 344) = v12;
  *(void *)(inited + 360) = &type metadata for String;
  *(void *)(inited + 368) = 0xD000000000000012;
  *(void *)(inited + 376) = 0x8000000100490FF0;
  sub_100019960(v1 + 80, (uint64_t)&v27, (uint64_t *)&unk_100574E50);
  sub_100019960((uint64_t)&v27, (uint64_t)&v26, (uint64_t *)&unk_100574E50);
  sub_1000F3CAC(&v27);
  sub_100005BFC((uint64_t *)&unk_100574E50);
  *(void *)(inited + 384) = sub_100460D40();
  *(void *)(inited + 392) = v13;
  *(void *)(inited + 408) = &type metadata for String;
  *(void *)(inited + 416) = 0xD000000000000011;
  *(void *)(inited + 424) = 0x8000000100491010;
  unint64_t v14 = 0xE900000000000064;
  uint64_t v15 = 0x6564696365646E75;
  switch(*(unsigned char *)(v1 + 88))
  {
    case 1:
      unint64_t v14 = 0xE700000000000000;
      uint64_t v15 = 0x63697373616C63;
      break;
    case 2:
      unint64_t v14 = 0xEA00000000007265;
      uint64_t v15 = 0x6269726373627573;
      break;
    case 3:
      unint64_t v14 = 0xEF72656269726373;
      uint64_t v15 = 0x6275536563696F76;
      break;
    default:
      break;
  }
  *(void *)(inited + 432) = v15;
  *(void *)(inited + 440) = v14;
  *(void *)(inited + 456) = &type metadata for String;
  *(void *)(inited + 464) = 1935827316;
  *(void *)(inited + 472) = 0xE400000000000000;
  uint64_t v16 = *(void *)(v1 + 96);
  uint64_t v26 = v16;
  int64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain();
    sub_1000A01EC(0, v17, 0);
    uint64_t v18 = (unsigned __int8 *)(v16 + 32);
    do
    {
      int v19 = *v18++;
      unint64_t v20 = 0xE700000000000000;
      uint64_t v21 = 0x7972617262696CLL;
      switch(v19)
      {
        case 1:
          unint64_t v20 = 0xE900000000000077;
          uint64_t v21 = 0x6F4E6E657473696CLL;
          break;
        case 2:
          unint64_t v20 = 0xE600000000000000;
          uint64_t v21 = 0x6573776F7262;
          break;
        case 3:
          unint64_t v20 = 0xE500000000000000;
          uint64_t v21 = 0x6F69646172;
          break;
        case 4:
          unint64_t v20 = 0xE600000000000000;
          uint64_t v21 = 0x686372616573;
          break;
        case 5:
          unint64_t v20 = 0xE600000000000000;
          uint64_t v21 = 0x736F65646976;
          break;
        default:
          break;
      }
      unint64_t v23 = _swiftEmptyArrayStorage[2];
      unint64_t v22 = _swiftEmptyArrayStorage[3];
      if (v23 >= v22 >> 1) {
        sub_1000A01EC((char *)(v22 > 1), v23 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v23 + 1;
      char v24 = (char *)&_swiftEmptyArrayStorage[2 * v23];
      *((void *)v24 + 4) = v21;
      *((void *)v24 + 5) = v20;
      --v17;
    }
    while (v17);
    sub_1000C52B8((uint64_t)&v26);
  }
  *(void *)(inited + 504) = sub_100005BFC(&qword_100577430);
  *(void *)(inited + 480) = _swiftEmptyArrayStorage;
  return sub_1000CB020(inited);
}

void sub_1000EA314(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = 0x6E776F6E6B6E75;
  switch(*(void *)(a1 + 16))
  {
    case 0:
      break;
    case 1:
      uint64_t v4 = 0x64656C62616E65;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v4 = 0x64656C6261736964;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x6564696C67;
      break;
    default:
      v5._uint64_t countAndFlagsBits = sub_100462660();
      sub_100460E50(v5);
      swift_bridgeObjectRelease();
      v6._uint64_t countAndFlagsBits = 62;
      v6._object = (void *)0xE100000000000000;
      sub_100460E50(v6);
      uint64_t v4 = 0x3C6E776F6E6B6E75;
      unint64_t v3 = 0xE800000000000000;
      break;
  }
  a2[3] = (uint64_t)&type metadata for String;
  *a2 = v4;
  a2[1] = v3;
}

BOOL sub_1000EA444(uint64_t a1, long long *a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  uint64_t v13 = *(void *)(a1 + 112);
  long long v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  long long v5 = *a2;
  long long v6 = a2[1];
  long long v7 = a2[3];
  v14[2] = a2[2];
  v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  long long v8 = a2[4];
  long long v9 = a2[5];
  long long v10 = a2[6];
  uint64_t v15 = *((void *)a2 + 14);
  v14[5] = v9;
  v14[6] = v10;
  v14[4] = v8;
  return _s9MusicCore23ApplicationCapabilitiesV23__derived_struct_equalsySbAC_ACtFZ_0((unsigned __int8 *)v12, (unsigned __int8 *)v14);
}

uint64_t sub_1000EA4C8()
{
  type metadata accessor for ApplicationCapabilities.Controller();
  swift_allocObject();
  uint64_t result = sub_1000EA564();
  static ApplicationCapabilities.Controller.shared = result;
  return result;
}

uint64_t static ApplicationCapabilities.Controller.shared.getter()
{
  if (qword_100570808 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_1000EA564()
{
  uint64_t v1 = v0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_needsNetworkReachabilityUpdate) = 0;
  uint64_t v2 = v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_stateHandler;
  *(void *)uint64_t v2 = 0;
  *(unsigned char *)(v2 + 8) = 1;
  uint64_t v3 = OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_lock;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  *(void *)(v0 + v3) = UnfairLock.init()();
  uint64_t v4 = OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag;
  if (qword_1005708D0 != -1) {
    swift_once();
  }
  sub_100005BFC(&qword_100575170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10000F7F4);
  *(void *)(v0 + v4) = *(void *)&v24[0];
  *(void *)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_profileObserver) = 0;
  *(void *)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bagObserver) = 0;
  *(void *)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bindings) = _swiftEmptyArrayStorage;
  uint64_t result = UIApp;
  if (UIApp)
  {
    *(unsigned char *)(v0 + 16) = [UIApp launchedToTest];
    type metadata accessor for MusicTabsDictionaryProvider();
    swift_allocObject();
    *(void *)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_musicTabsDictionaryProvider) = sub_1002730F0(0x626154636973756DLL, 0xE900000000000073, (uint64_t)sub_1000EA9D4, 0);
    swift_retain();
    UnfairLock.locked<A>(_:)((void (*)(void))sub_10000F7F4);
    char v6 = *(unsigned char *)(v0 + 16);
    swift_retain();
    sub_1000F1B14(*(void **)&v24[0], v6, (uint64_t)v24);
    uint64_t v7 = v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities;
    long long v8 = v27;
    *(_OWORD *)(v7 + 64) = v26;
    *(_OWORD *)(v7 + 80) = v8;
    *(_OWORD *)(v7 + 96) = v28;
    *(void *)(v7 + 112) = v29;
    long long v9 = v24[1];
    *(_OWORD *)uint64_t v7 = v24[0];
    *(_OWORD *)(v7 + 16) = v9;
    long long v10 = v25;
    *(_OWORD *)(v7 + 32) = v24[2];
    *(_OWORD *)(v7 + 48) = v10;
    swift_beginAccess();
    long long v20 = v26;
    long long v21 = v27;
    long long v22 = v28;
    uint64_t v23 = v29;
    long long v19 = v25;
    sub_1000F3570((uint64_t)v24);
    sub_10045D6D0();
    swift_endAccess();
    uint64_t v11 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_100272F50((uint64_t)sub_1000F3BF0, v11);
    swift_release_n();
    UnfairLock.locked<A>(_:)((void (*)(void))sub_1000F3554);
    sub_1000EABB8();
    sub_100009854(0, (unint64_t *)&qword_100576320);
    uint64_t v12 = (void *)sub_1004618F0();
    NSString v13 = sub_100460C70();
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    v18[4] = sub_1000F3BF8;
    v18[5] = v14;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    _OWORD v18[2] = sub_1000EB528;
    v18[3] = &unk_10052DD40;
    uint64_t v15 = _Block_copy(v18);
    swift_release();
    uint64_t v16 = MSVLogAddStateHandler();
    swift_release();
    _Block_release(v15);

    uint64_t v17 = v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_stateHandler;
    *(void *)uint64_t v17 = v16;
    *(unsigned char *)(v17 + 8) = 0;
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000EA9D4()
{
  id v0 = [self standardUserDefaults];
  uint64_t v1 = sub_1000EAA24();

  return v1;
}

uint64_t sub_1000EAA24()
{
  LOBYTE(v1) = 1;
  sub_1000F3830();
  sub_10000F810();
  NSUserDefaults.subscript.getter(&v2);
  if (v3)
  {
    sub_100005BFC(&qword_100574E68);
    if (swift_dynamicCast()) {
      return v1;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_100009790((uint64_t)&v2, (uint64_t *)&unk_100574DB0);
    return 0;
  }
}

uint64_t property wrapper backing initializer of ApplicationCapabilities.Controller.capabilities()
{
  return sub_10045D6D0();
}

uint64_t sub_1000EAB24()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    UnfairLock.locked<A>(_:)((void (*)(void))sub_1000F3554);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000EABB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Whitetail.Binding();
  uint64_t v3 = (void *)ICUserIdentityStoreDidChangeNotification;
  uint64_t v4 = self;
  id v5 = v3;
  v6.length = (Swift::Int)[v4 defaultIdentityStore];
  v6.location = (Swift::Int)v5;
  uint64_t v63 = &type metadata for NotificationTrigger;
  uint64_t v64 = &protocol witness table for NotificationTrigger;
  CFRange v62 = CFRange.init(_:)(v6);
  uint64_t v7 = swift_allocObject();
  uint64_t v61 = v1;
  swift_weakInit();
  Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)((uint64_t)&v62, 1, (uint64_t)sub_1000F3CD8, v7);
  id v8 = [self sharedController];
  long long v9 = (void *)MPCloudServiceStatusControllerSubscriptionStatusDidChangeNotification;
  v10.location = MPCloudServiceStatusControllerSubscriptionStatusDidChangeNotification;
  v10.length = (Swift::Int)v8;
  CFRange v11 = CFRange.init(_:)(v10);
  uint64_t v63 = &type metadata for NotificationTrigger;
  uint64_t v64 = &protocol witness table for NotificationTrigger;
  CFRange v62 = v11;
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  id v13 = v9;
  id v58 = v8;
  Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)((uint64_t)&v62, 1, (uint64_t)sub_1000F3CE0, v12);
  id v59 = [self standardUserDefaults];
  sub_100005BFC(&qword_100574E60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100466960;
  uint64_t v15 = (void *)MPPlaybackUserDefaultsPreferredResolutionsDidChangeNotification;
  v16.location = MPPlaybackUserDefaultsPreferredResolutionsDidChangeNotification;
  v16.length = (Swift::Int)v59;
  CFRange v17 = CFRange.init(_:)(v16);
  *(void *)(inited + 56) = &type metadata for NotificationTrigger;
  *(void *)(inited + 64) = &protocol witness table for NotificationTrigger;
  *(CFRange *)(inited + 32) = v17;
  uint64_t v18 = (void *)MPCloudControllerHasProperNetworkConditionsToShowCloudMediaDidChangeNotification;
  CFRange v19 = CFRange.init(_:)((__C::_NSRange)MPCloudControllerHasProperNetworkConditionsToShowCloudMediaDidChangeNotification);
  *(void *)(inited + 96) = &type metadata for NotificationTrigger;
  *(void *)(inited + 104) = &protocol witness table for NotificationTrigger;
  *(CFRange *)(inited + 72) = v19;
  long long v20 = (void *)RadioAvailabilityControllerRadioAvailableDidChangeNotification;
  CFRange v21 = CFRange.init(_:)((__C::_NSRange)RadioAvailabilityControllerRadioAvailableDidChangeNotification);
  *(void *)(inited + 136) = &type metadata for NotificationTrigger;
  *(void *)(inited + 144) = &protocol witness table for NotificationTrigger;
  *(CFRange *)(inited + 112) = v21;
  long long v22 = (void *)MPCloudServiceStatusControllerSubscriptionAvailabilityDidChangeNotification;
  CFRange v23 = CFRange.init(_:)((__C::_NSRange)MPCloudServiceStatusControllerSubscriptionAvailabilityDidChangeNotification);
  *(void *)(inited + 176) = &type metadata for NotificationTrigger;
  *(void *)(inited + 184) = &protocol witness table for NotificationTrigger;
  *(CFRange *)(inited + 152) = v23;
  char v24 = (void *)MPCloudServiceStatusControllerCloudLibraryEnabledDidChangeNotification;
  CFRange v25 = CFRange.init(_:)((__C::_NSRange)MPCloudServiceStatusControllerCloudLibraryEnabledDidChangeNotification);
  *(void *)(inited + 216) = &type metadata for NotificationTrigger;
  *(void *)(inited + 224) = &protocol witness table for NotificationTrigger;
  *(CFRange *)(inited + 192) = v25;
  uint64_t v26 = swift_allocObject();
  swift_weakInit();
  uint64_t v57 = v2;
  swift_allocObject();
  id v27 = v15;
  id v60 = v59;
  id v28 = v18;
  id v29 = v20;
  id v30 = v22;
  id v31 = v24;
  Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 1, (uint64_t)sub_1000F3CE0, v26);
  uint64_t v32 = (void *)(v61 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bindings);
  swift_beginAccess();
  if (*v32 >> 62)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_1004623D0();
    swift_bridgeObjectRelease();
    uint64_t v34 = v56 + 3;
    if (!__OFADD__(v56, 3))
    {
LABEL_3:
      sub_1000F0120(v34);
      sub_1004610C0();
      swift_retain();
      sub_100461070();
      if (*(void *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v33 = *(void *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v34 = v33 + 3;
    if (!__OFADD__(v33, 3)) {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_21:
  sub_1004610F0();
LABEL_4:
  sub_100461150();
  sub_1004610C0();
  swift_retain();
  sub_100461070();
  if (*(void *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1004610F0();
  }
  sub_100461150();
  sub_1004610C0();
  swift_retain();
  sub_100461070();
  if (*(void *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1004610F0();
  }
  sub_100461150();
  sub_1004610C0();
  swift_endAccess();
  swift_release();
  swift_release();
  swift_release();
  sub_1000F37C0();
  uint64_t v36 = UserDefaultsKeyValueTrigger.init<A>(suiteName:key:)(0xD000000000000014, 0x8000000100491030, v35, (uint64_t)&type metadata for NSUserDefaults.MobileiPod);
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v63 = &type metadata for UserDefaultsKeyValueTrigger;
  uint64_t v64 = &protocol witness table for UserDefaultsKeyValueTrigger;
  uint64_t v43 = (void *)swift_allocObject();
  v62.location = (CFIndex)v43;
  v43[2] = v36;
  v43[3] = v38;
  v43[4] = v40;
  v43[5] = v42;
  uint64_t v44 = swift_allocObject();
  swift_weakInit();
  Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)((uint64_t)&v62, 1, (uint64_t)sub_1000F3CE0, v44);
  swift_beginAccess();
  sub_100461070();
  if (*(void *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1004610F0();
  }
  sub_100461150();
  sub_1004610C0();
  swift_endAccess();
  id v45 = [objc_allocWithZone((Class)type metadata accessor for ApplicationCapabilities.Controller.ProfileObserver()) init];
  uint64_t v46 = OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_profileObserver;
  uint64_t v47 = *(void **)(v61 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_profileObserver);
  *(void *)(v61 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_profileObserver) = v45;

  if (*(void *)(v61 + v46)) {
    swift_weakAssign();
  }
  if (qword_1005708D0 != -1) {
    swift_once();
  }
  uint64_t v48 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for BagProvider.Observer();
  uint64_t v49 = swift_allocObject();
  swift_weakInit();
  *(void *)(v49 + 24) = 0;
  *(void *)(v49 + 32) = 0;
  swift_weakAssign();
  uint64_t v50 = *(void *)(v49 + 24);
  *(void *)(v49 + 24) = sub_1000F3D50;
  *(void *)(v49 + 32) = v48;
  swift_retain_n();
  uint64_t v51 = sub_10004CAE0(v50);
  v62.location = 0;
  __chkstk_darwin(v51);
  UnfairLock.locked<A>(_:)(sub_1000DEE60);
  if (v62.location)
  {
    id v52 = (id)v62.location;
    sub_1000ED8C8(v52);

    uint64_t v53 = v52;
    NSString v54 = v52;
  }
  else
  {
    sub_1000FC9B4(0);
    NSString v54 = v58;
    uint64_t v53 = v60;
  }

  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(void *)(v61 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_bagObserver) = v49;
  return swift_release();
}

uint64_t sub_1000EB3FC(char a1, uint64_t (*a2)(uint64_t))
{
  if ((a1 & 1) == 0) {
    return 0;
  }
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  v15[4] = v11;
  v15[5] = v12;
  v15[6] = v13;
  uint64_t v16 = v14;
  v15[0] = v7;
  v15[1] = v8;
  _OWORD v15[2] = v9;
  id v15[3] = v10;
  unint64_t v3 = sub_1000E9E18();
  sub_1000F35F4((uint64_t)v15);
  uint64_t v4 = sub_100137838(v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = a2(v4);
  swift_release();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1000EB528(uint64_t a1, char a2, void *aBlock)
{
  uint64_t v3 = a2 & 1;
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t))(a1 + 32);
  uint64_t v5 = _Block_copy(aBlock);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  swift_retain();
  uint64_t v7 = v4(v3, sub_1000F3C50, v6);
  swift_release();
  swift_release();
  return v7;
}

uint64_t sub_1000EB5C8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    v3.super.Class isa = sub_100460A70().super.isa;
  }
  else {
    v3.super.Class isa = 0;
  }
  uint64_t v4 = (*(uint64_t (**)(uint64_t, Class))(a2 + 16))(a2, v3.super.isa);

  return v4;
}

__n128 sub_1000EB638@<Q0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  __n128 result = v7;
  *(unsigned char *)a1 = v3;
  *(unsigned char *)(a1 + 1) = v4;
  *(unsigned char *)(a1 + 2) = v5;
  *(_OWORD *)(a1 + 8) = v6;
  *(__n128 *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v9;
  *(_OWORD *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v12;
  *(unsigned char *)(a1 + 104) = v13;
  *(void *)(a1 + 112) = v14;
  return result;
}

uint64_t sub_1000EB70C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 80);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_10045D720();
}

uint64_t ApplicationCapabilities.Controller.$capabilities.getter()
{
  return swift_endAccess();
}

uint64_t sub_1000EB8C0()
{
  return swift_endAccess();
}

uint64_t sub_1000EB928(uint64_t a1)
{
  uint64_t v2 = sub_100005BFC(&qword_100574DE0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  long long v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  long long v8 = (char *)&v11 - v7;
  long long v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  swift_beginAccess();
  sub_100005BFC(&qword_1005779A0);
  sub_10045D6F0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

Swift::Void __swiftcall ApplicationCapabilities.Controller.setNeedsNetworkReachabilityUpdate()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100005BFC(&qword_100574B80);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v7[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v10 = 0;
  uint64_t v8 = v0;
  long long v9 = &v10;
  UnfairLock.locked<A>(_:)(sub_1000F27A0);
  if (v10 == 1)
  {
    sub_100461290();
    uint64_t v5 = sub_1004612C0();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
    long long v6 = (void *)swift_allocObject();
    void v6[2] = 0;
    v6[3] = 0;
    v6[4] = v1;
    swift_retain();
    sub_100039C5C((uint64_t)v4, (uint64_t)&unk_100574B98, (uint64_t)v6);
    swift_release();
    sub_100009790((uint64_t)v4, &qword_100574B80);
  }
}

uint64_t sub_1000EBC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_1000EBC28, 0, 0);
}

uint64_t sub_1000EBC28()
{
  UnfairLock.locked<A>(_:)(sub_1000F3ADC);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1000EBCC0(char *a1)
{
  uint64_t v3 = sub_100005BFC(&qword_100574B80);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_needsNetworkReachabilityUpdate;
  if (a1[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_needsNetworkReachabilityUpdate] == 1)
  {
    uint64_t v48 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v54 = v1;
    if (qword_100570820 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_10045D310();
    sub_100009688(v6, (uint64_t)qword_100574B48);
    uint64_t v7 = sub_10045D2F0();
    os_log_type_t v8 = sub_100461770();
    if (os_log_type_enabled(v7, v8))
    {
      long long v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Needs Network Reachability Update", v9, 2u);
      swift_slowDealloc();
    }

    a1[v5] = 0;
    id v10 = [self sharedCloudController];
    if (v10)
    {
      uint64_t v11 = v10;
      if ([v10 shouldProhibitMusicActionForCurrentNetworkConditions]) {
        unsigned int v12 = 0;
      }
      else {
        unsigned int v12 = [v11 hasProperNetworkConditionsToShowCloudMedia];
      }
    }
    else
    {
      unsigned int v12 = 0;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v47 = a1;
    sub_10045D710();
    swift_release();
    swift_release();
    int v13 = v49[1];
    uint64_t v14 = (void *)v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v15 = sub_10045D2F0();
    os_log_type_t v16 = sub_100461770();
    BOOL v17 = os_log_type_enabled(v15, v16);
    if (v12 == v13)
    {
      if (v17)
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v40 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Network Reachability status does not differ from currently known capabilities.", v40, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      char v18 = v12;
      if (v17)
      {
        uint64_t v19 = swift_slowAlloc();
        *(void *)uint64_t v49 = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136315138;
        if (v12) {
          uint64_t v20 = 0x1000000000000012;
        }
        else {
          uint64_t v20 = 0x1000000000000016;
        }
        if (v12) {
          unint64_t v21 = 0x8000000100490F10;
        }
        else {
          unint64_t v21 = 0x8000000100490EF0;
        }
        *(void *)(v19 + 4) = sub_10001FCAC(v20, v21, (uint64_t *)v49);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Updating Network Reachability to: %s", (uint8_t *)v19, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      long long v22 = v47;
      CFRange v23 = &v47[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities];
      long long v24 = *(_OWORD *)&v47[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96];
      long long v25 = *(_OWORD *)&v47[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 64];
      long long v51 = *(_OWORD *)&v47[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80];
      long long v52 = v24;
      long long v27 = *(_OWORD *)&v47[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 16];
      long long v26 = *(_OWORD *)&v47[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32];
      *(_OWORD *)uint64_t v49 = *(_OWORD *)&v47[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities];
      *(_OWORD *)&v49[16] = v27;
      uint64_t v53 = *(void *)&v47[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 112];
      uint64_t v28 = v53;
      long long v29 = *(_OWORD *)&v47[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 48];
      *(_OWORD *)uint64_t v50 = v26;
      *(_OWORD *)&v50[16] = v29;
      *(_OWORD *)&v50[32] = v25;
      char v30 = BYTE8(v51);
      id v31 = (void *)v51;
      uint64_t v32 = *(void *)&v49[24];
      char v33 = v49[2];
      uint64_t v34 = *(void *)&v47[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 24];
      uint64_t v43 = *(void *)&v47[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32];
      uint64_t v44 = v34;
      uint64_t v35 = *(void *)&v47[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 72];
      uint64_t v45 = *(void *)&v47[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 56];
      uint64_t v46 = v35;
      uint64_t v47 = *(char **)&v47[OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80];
      v41[1] = *((void *)v23 + 12);
      *CFRange v23 = v49[0];
      v23[1] = v18;
      void v23[2] = v33;
      *(_OWORD *)(v23 + 8) = *(_OWORD *)&v49[8];
      *((void *)v23 + 3) = v32;
      *((void *)v23 + 4) = v26;
      *(_OWORD *)(v23 + 40) = *(_OWORD *)&v50[8];
      long long v42 = *(_OWORD *)&v50[24];
      *(_OWORD *)(v23 + 56) = *(_OWORD *)&v50[24];
      *((void *)v23 + 9) = *((void *)&v25 + 1);
      *((void *)v23 + 10) = v31;
      v23[88] = v30;
      *((void *)v23 + 12) = v24;
      v23[104] = BYTE8(v24);
      *((void *)v23 + 14) = v28;
      sub_1000F3570((uint64_t)v49);
      sub_1000F3570((uint64_t)v49);
      *(void *)&long long v42 = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1000EC490((uint64_t)v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000F35F4((uint64_t)v49);
      uint64_t v36 = sub_1004612C0();
      uint64_t v37 = (uint64_t)v48;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v48, 1, 1, v36);
      sub_100461280();
      swift_retain();
      uint64_t v38 = sub_100461270();
      uint64_t v39 = (void *)swift_allocObject();
      v39[2] = v38;
      v39[3] = &protocol witness table for MainActor;
      v39[4] = v22;
      sub_1000FFB78(v37, (uint64_t)&unk_100574E28, (uint64_t)v39);
      swift_release();
    }
  }
}

uint64_t sub_1000EC2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  sub_100461280();
  *(void *)(v4 + 24) = sub_100461270();
  uint64_t v6 = sub_100461200();
  return _swift_task_switch(sub_1000EC370, v6, v5);
}

uint64_t sub_1000EC370()
{
  swift_release();
  id v1 = [self defaultCenter];
  if (qword_100570878 != -1) {
    swift_once();
  }
  [v1 postNotificationName:static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange object:*(void *)(v0 + 16)];

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t *ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.unsafeMutableAddressor()
{
  if (qword_100570878 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange;
}

uint64_t sub_1000EC490(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100005BFC(&qword_100574B80);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v37 = &_swiftEmptySetSingleton;
  long long v7 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  long long v42 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 64);
  long long v43 = v7;
  long long v44 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96);
  uint64_t v45 = *(void *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 112);
  long long v8 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 16);
  long long v38 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities);
  long long v39 = v8;
  long long v9 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 48);
  long long v40 = *(_OWORD *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32);
  long long v41 = v9;
  sub_1000F3570((uint64_t)&v38);
  if (qword_100570958 != -1) {
    swift_once();
  }
  if (static NSUserDefaults.mobileiPod)
  {
    sub_1000F37C0();
    sub_10000F810();
    NSUserDefaults.subscript.getter(&v35);
    if (v36)
    {
      if (swift_dynamicCast() & 1) != 0 && (v34[7])
      {
        switch(BYTE8(v43))
        {
          case 2:
            swift_bridgeObjectRelease();
            goto LABEL_78;
          default:
            char v33 = sub_1004626E0();
            swift_bridgeObjectRelease();
            if (v33)
            {
LABEL_78:
              if (static NSUserDefaults.mobileiPod)
              {
                uint64_t v36 = &type metadata for Bool;
                LOBYTE(v35) = 0;
                NSUserDefaults.subscript.setter((uint64_t)&v35, v32, (uint64_t)&type metadata for NSUserDefaults.MobileiPod);
              }
            }
            break;
        }
      }
    }
    else
    {
      sub_100009790((uint64_t)&v35, (uint64_t *)&unk_100574DB0);
    }
  }
  if (!_s9MusicCore23ApplicationCapabilitiesV23__derived_struct_equalsySbAC_ACtFZ_0((unsigned __int8 *)&v38, (unsigned __int8 *)a1))
  {
    if ((v38 & 1) != (*(unsigned char *)a1 & 1))
    {
      if (qword_100570870 != -1) {
        swift_once();
      }
      sub_100183398(&v35, (id)static ApplicationCapabilities.NotificationNames.activeAccountDidChange);
    }
    uint64_t v10 = *((void *)&v39 + 1);
    int v11 = sub_1000FFF70(5u, *((uint64_t *)&v39 + 1)) & 1;
    uint64_t v12 = *(void *)(a1 + 24);
    if (v11 != (sub_1000FFF70(5u, v12) & 1))
    {
      if (qword_100570828 != -1) {
        swift_once();
      }
      sub_100183398(&v35, (id)static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange);
    }
    int v13 = sub_1000FFF70(0, v10) & 1;
    if (v13 != (sub_1000FFF70(0, v12) & 1))
    {
      if (qword_100570830 != -1) {
        swift_once();
      }
      sub_100183398(&v35, (id)static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange);
    }
    int v14 = sub_1000FFF70(3u, v10) & 1;
    if (v14 != (sub_1000FFF70(3u, v12) & 1))
    {
      if (qword_100570838 != -1) {
        swift_once();
      }
      sub_100183398(&v35, (id)static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange);
    }
    int v15 = sub_1000FFF70(9u, v10) & 1;
    if (v15 != (sub_1000FFF70(9u, v12) & 1))
    {
      if (qword_100570858 != -1) {
        swift_once();
      }
      sub_100183398(&v35, (id)static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange);
    }
    int v16 = sub_1000FFF70(4u, v10) & 1;
    if (v16 != (sub_1000FFF70(4u, v12) & 1))
    {
      if (qword_100570840 != -1) {
        swift_once();
      }
      sub_100183398(&v35, (id)static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange);
    }
    int v17 = sub_1000FFF70(2u, v10) & 1;
    if (v17 != (sub_1000FFF70(2u, v12) & 1))
    {
      if (qword_100570848 != -1) {
        swift_once();
      }
      sub_100183398(&v35, (id)static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange);
    }
    int v18 = sub_1000FFF70(0xAu, v10) & 1;
    if (v18 != (sub_1000FFF70(0xAu, v12) & 1))
    {
      if (qword_100570850 != -1) {
        swift_once();
      }
      sub_100183398(&v35, (id)static ApplicationCapabilities.NotificationNames.mliEnabledDidChange);
    }
    if ((BYTE1(v38) & 1) != (*(unsigned char *)(a1 + 1) & 1))
    {
      if (qword_100570878 != -1) {
        swift_once();
      }
      sub_100183398(&v35, (id)static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange);
    }
    if ((BYTE2(v38) & 1) != (*(unsigned char *)(a1 + 2) & 1))
    {
      if (qword_100570888 != -1) {
        swift_once();
      }
      sub_100183398(&v35, (id)static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange);
    }
    if (*((void *)&v40 + 1) != *(void *)(a1 + 40))
    {
      if (qword_100570880 != -1) {
        swift_once();
      }
      sub_100183398(&v35, (id)static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange);
    }
    if ((sub_100035030(BYTE8(v43), *(unsigned __int8 *)(a1 + 88)) & 1) == 0)
    {
      if (qword_100570868 != -1) {
        swift_once();
      }
      sub_100183398(&v35, (id)static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange);
    }
    int v19 = BYTE8(v44);
    uint64_t v20 = v45;
    int v21 = *(unsigned __int8 *)(a1 + 104);
    uint64_t v22 = *(void *)(a1 + 112);
    if ((sub_1000E9310(v44, *(void *)(a1 + 96)) & 1) == 0) {
      goto LABEL_65;
    }
    if (v19 == 6)
    {
      if (v21 != 6) {
        goto LABEL_65;
      }
    }
    else if (v21 == 6 || (sub_100035034(v19, v21) & 1) == 0)
    {
      goto LABEL_65;
    }
    if (sub_1000E955C(v20, v22))
    {
LABEL_68:
      if (*((void *)&v38 + 1) != *(void *)(a1 + 8))
      {
        if (qword_100570890 != -1) {
          swift_once();
        }
        sub_100183398(&v35, (id)static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange);
      }
      goto LABEL_72;
    }
LABEL_65:
    if (qword_100570860 != -1) {
      swift_once();
    }
    sub_100183398(&v35, (id)static ApplicationCapabilities.NotificationNames.supportedTabsDidChange);

    goto LABEL_68;
  }
LABEL_72:
  if (_s9MusicCore23ApplicationCapabilitiesV23__derived_struct_equalsySbAC_ACtFZ_0((unsigned __int8 *)&v38, (unsigned __int8 *)a1))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = sub_1004612C0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v6, 1, 1, v23);
    long long v24 = v37;
    sub_100461280();
    sub_1000F3570((uint64_t)&v38);
    swift_retain();
    uint64_t v25 = sub_100461270();
    uint64_t v26 = swift_allocObject();
    long long v27 = v43;
    *(_OWORD *)(v26 + 104) = v42;
    *(_OWORD *)(v26 + 120) = v27;
    *(_OWORD *)(v26 + 136) = v44;
    long long v28 = v39;
    *(_OWORD *)(v26 + 40) = v38;
    *(_OWORD *)(v26 + 56) = v28;
    long long v29 = v41;
    *(_OWORD *)(v26 + 72) = v40;
    *(void *)(v26 + 16) = v25;
    *(void *)(v26 + 24) = &protocol witness table for MainActor;
    *(void *)(v26 + 32) = v2;
    uint64_t v30 = v45;
    *(_OWORD *)(v26 + 88) = v29;
    *(void *)(v26 + 152) = v30;
    *(void *)(v26 + 160) = v24;
    sub_1000FFB78((uint64_t)v6, (uint64_t)&unk_100574D98, v26);
    swift_release();
  }
  return sub_1000F35F4((uint64_t)&v38);
}

uint64_t *ApplicationCapabilities.NotificationNames.activeAccountDidChange.unsafeMutableAddressor()
{
  if (qword_100570870 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.activeAccountDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange.unsafeMutableAddressor()
{
  if (qword_100570828 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange.unsafeMutableAddressor()
{
  if (qword_100570830 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange.unsafeMutableAddressor()
{
  if (qword_100570838 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange.unsafeMutableAddressor()
{
  if (qword_100570858 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange.unsafeMutableAddressor()
{
  if (qword_100570840 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange.unsafeMutableAddressor()
{
  if (qword_100570848 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.mliEnabledDidChange.unsafeMutableAddressor()
{
  if (qword_100570850 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.mliEnabledDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange.unsafeMutableAddressor()
{
  if (qword_100570888 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange.unsafeMutableAddressor()
{
  if (qword_100570880 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange.unsafeMutableAddressor()
{
  if (qword_100570868 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.supportedTabsDidChange.unsafeMutableAddressor()
{
  if (qword_100570860 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.supportedTabsDidChange;
}

uint64_t *ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange.unsafeMutableAddressor()
{
  if (qword_100570890 != -1) {
    swift_once();
  }
  return &static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange;
}

uint64_t sub_1000ED2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[18] = a5;
  v6[19] = a6;
  v6[17] = a4;
  sub_100461280();
  v6[20] = sub_100461270();
  uint64_t v8 = sub_100461200();
  return _swift_task_switch(sub_1000ED374, v8, v7);
}

uint64_t sub_1000ED374()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  long long v4 = *(_OWORD *)(v3 + 48);
  long long v6 = *(_OWORD *)v3;
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v0 + 64) = v4;
  *(_OWORD *)(v0 + 16) = v6;
  *(_OWORD *)(v0 + 32) = v5;
  long long v8 = *(_OWORD *)(v3 + 80);
  long long v7 = *(_OWORD *)(v3 + 96);
  long long v9 = *(_OWORD *)(v3 + 64);
  *(void *)(v0 + 128) = *(void *)(v3 + 112);
  *(_OWORD *)(v0 + 96) = v8;
  *(_OWORD *)(v0 + 112) = v7;
  *(_OWORD *)(v0 + 80) = v9;
  sub_1000F3570(v3);
  swift_retain();
  sub_10045D720();
  swift_retain();
  sub_1000F23D0(v1, v2);
  swift_release();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1000ED480(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag);
  char v3 = *(unsigned char *)(a1 + 16);
  id v4 = v2;
  swift_retain();
  sub_1000F1B14(v2, v3, (uint64_t)v16);
  uint64_t v5 = a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities;
  long long v6 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 64);
  long long v7 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96);
  v18[5] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  void v18[6] = v7;
  uint64_t v19 = *(void *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 112);
  long long v8 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 16);
  v18[0] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities);
  long long v9 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32);
  v18[1] = v8;
  _OWORD v18[2] = v9;
  v18[3] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 48);
  v18[4] = v6;
  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  long long v11 = v16[3];
  *(_OWORD *)(v5 + 32) = v16[2];
  *(_OWORD *)(v5 + 48) = v11;
  long long v12 = v16[1];
  *(_OWORD *)uint64_t v5 = v16[0];
  *(_OWORD *)(v5 + 16) = v12;
  *(void *)(v5 + 112) = v17;
  long long v13 = v16[6];
  long long v14 = v16[4];
  *(_OWORD *)(v5 + 80) = v16[5];
  *(_OWORD *)(v5 + 96) = v13;
  *(_OWORD *)(v5 + 64) = v14;
  sub_1000F3570((uint64_t)v18);
  sub_1000F3570((uint64_t)v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1000EC490((uint64_t)v18);
  sub_1000F35F4((uint64_t)v16);
  return sub_1000F35F4((uint64_t)v18);
}

uint64_t sub_1000ED5E8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v1 = [self defaultIdentityStore];
    id v2 = sub_1000ED734();
    char v4 = v3;

    id v5 = [self standardUserDefaults];
    if (v4)
    {
      id v2 = 0;
      v7[1] = 0;
      _OWORD v7[2] = 0;
      long long v8 = 0;
    }
    else
    {
      long long v8 = &type metadata for UInt64;
    }
    v7[0] = v2;
    char v6 = 2;
    sub_1000F3830();
    sub_10000F810();
    NSUserDefaults.subscript.setter((uint64_t)v7, (uint64_t)&v6, (uint64_t)&_s3KeyON);

    UnfairLock.locked<A>(_:)((void (*)(void))sub_1000F3554);
    return swift_release();
  }
  return result;
}

id sub_1000ED734()
{
  id v1 = [self activeAccount];
  id v7 = 0;
  id v2 = [v0 DSIDForUserIdentity:v1 outError:&v7];

  id v3 = v7;
  if (v2)
  {
    id v7 = 0;
    char v8 = 1;
    id v4 = v3;
    sub_100462930();

    return v7;
  }
  else
  {
    id v6 = v7;
    sub_10045BC90();

    swift_willThrow();
    swift_errorRelease();
    return 0;
  }
}

uint64_t sub_1000ED840(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    UnfairLock.locked<A>(_:)(a2);
    return swift_release();
  }
  return result;
}

void sub_1000ED8C8(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    __chkstk_darwin(Strong);
    swift_retain();
    UnfairLock.locked<A>(_:)((void (*)(void))sub_1000F3D58);
    swift_release();
    UnfairLock.locked<A>(_:)((void (*)(void))sub_1000F3554);
    id v3 = [self standardUserDefaults];
    NSString v4 = sub_100460C70();
    id v5 = [a1 dictionaryForBagKey:v4];

    if (v5 && (uint64_t v6 = sub_100460A90(), v5, v7 = sub_1002727F0(v6), swift_bridgeObjectRelease(), v7))
    {
      *((void *)&v10 + 1) = sub_100005BFC(&qword_100574E68);
      *(void *)&long long v9 = v7;
    }
    else
    {
      long long v9 = 0u;
      long long v10 = 0u;
    }
    char v8 = 1;
    sub_1000F3830();
    sub_10000F810();
    NSUserDefaults.subscript.setter((uint64_t)&v9, (uint64_t)&v8, (uint64_t)&_s3KeyON);
    swift_release();
  }
}

uint64_t ApplicationCapabilities.Controller.updated()(uint64_t a1)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = v1;
  return _swift_task_switch(sub_1000EDAF8, 0, 0);
}

uint64_t sub_1000EDAF8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000EDBD4;
  uint64_t v2 = *(void *)(v0 + 144);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0x2864657461647075, 0xE900000000000029, sub_1000F2874, v2, &type metadata for ApplicationCapabilities);
}

uint64_t sub_1000EDBD4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1000EDCD0, 0, 0);
}

uint64_t sub_1000EDCD0()
{
  char v1 = *(unsigned char *)(v0 + 17);
  char v2 = *(unsigned char *)(v0 + 18);
  char v3 = *(unsigned char *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  char v5 = *(unsigned char *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 136);
  long long v8 = *(_OWORD *)(v0 + 40);
  long long v9 = *(_OWORD *)(v0 + 24);
  long long v10 = *(_OWORD *)(v0 + 56);
  long long v11 = *(_OWORD *)(v0 + 72);
  long long v12 = *(_OWORD *)(v0 + 88);
  *(unsigned char *)uint64_t v6 = *(unsigned char *)(v0 + 16);
  *(unsigned char *)(v6 + 1) = v1;
  *(unsigned char *)(v6 + 2) = v2;
  *(_OWORD *)(v6 + 8) = v9;
  *(_OWORD *)(v6 + 24) = v8;
  *(_OWORD *)(v6 + 40) = v10;
  *(_OWORD *)(v6 + 56) = v11;
  *(_OWORD *)(v6 + 72) = v12;
  *(unsigned char *)(v6 + 88) = v3;
  *(void *)(v6 + 96) = v4;
  *(unsigned char *)(v6 + 104) = v5;
  *(void *)(v6 + 112) = v7;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1000EDD44(uint64_t a1)
{
  uint64_t v2 = sub_100005BFC((uint64_t *)&unk_100574E10);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  long long v8 = (char *)v21 - v7;
  if (qword_1005708D0 != -1) {
    swift_once();
  }
  uint64_t v9 = static BagProvider.shared;
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  long long v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v11(v8, a1, v2);
  v11(v6, (uint64_t)v8, v2);
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v10;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v13 + v12, v8, v2);
  swift_retain_n();
  sub_100005BFC(&qword_100575170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10000F7F4);
  long long v14 = v22;
  if (v22)
  {
    sub_1000EE0E0(v22);
    swift_release();
    swift_release();
  }
  else
  {
    type metadata accessor for BagProvider.Observer();
    uint64_t v15 = swift_allocObject();
    swift_weakInit();
    *(void *)(v15 + 24) = 0;
    *(void *)(v15 + 32) = 0;
    swift_weakAssign();
    uint64_t v16 = swift_allocObject();
    swift_weakInit();
    uint64_t v17 = (void *)swift_allocObject();
    void v17[2] = sub_1000F39D4;
    v17[3] = v13;
    v17[4] = v16;
    v17[5] = v15;
    v21[1] = 0;
    uint64_t v18 = *(void *)(v15 + 24);
    *(void *)(v15 + 24) = sub_1000F3A94;
    *(void *)(v15 + 32) = v17;
    swift_retain();
    swift_retain();
    uint64_t v19 = sub_10004CAE0(v18);
    __chkstk_darwin(v19);
    v21[-2] = v9;
    v21[-1] = v15;
    UnfairLock.locked<A>(_:)((void (*)(void))sub_1000F3AA0);
    sub_1000FC9B4(0);
    swift_release();
    swift_release();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return swift_release();
}

uint64_t sub_1000EE0E0(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v3 = *(unsigned char *)(result + 16);
    a1;
    swift_retain();
    id v4 = sub_1000F1B14(a1, v3, (uint64_t)&v5);
    __chkstk_darwin(v4);
    swift_retain();
    UnfairLock.locked<A>(_:)((void (*)(void))sub_1000F3ABC);
    swift_release();
    sub_100005BFC((uint64_t *)&unk_100574E10);
    sub_100461220();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000EE254(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag);
  *(void *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag) = a2;

  uint64_t v7 = a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities;
  long long v8 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  v18[4] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 64);
  v18[5] = v8;
  void v18[6] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 96);
  uint64_t v19 = *(void *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 112);
  long long v9 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 16);
  v18[0] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities);
  v18[1] = v9;
  long long v10 = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 48);
  _OWORD v18[2] = *(_OWORD *)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 32);
  v18[3] = v10;
  uint64_t v17 = *(void **)(a1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  long long v11 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v7 + 32) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v7 + 48) = v11;
  long long v12 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a3;
  *(_OWORD *)(v7 + 16) = v12;
  *(void *)(v7 + 112) = *(void *)(a3 + 112);
  long long v13 = *(_OWORD *)(a3 + 96);
  long long v14 = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v7 + 96) = v13;
  *(_OWORD *)(v7 + 64) = v14;
  sub_1000F3570(a3);
  sub_1000F3570(a3);
  id v15 = a2;
  sub_1000F3570((uint64_t)v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1000EC490((uint64_t)v18);
  sub_1000F35F4(a3);
  return sub_1000F35F4((uint64_t)v18);
}

uint64_t ApplicationCapabilities.Controller.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller__capabilities;
  uint64_t v2 = sub_100005BFC(&qword_1005779A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  char v3 = *(void **)(v0 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_safeCapabilities + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t ApplicationCapabilities.Controller.__deallocating_deinit()
{
  ApplicationCapabilities.Controller.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1000EE524@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10045D6A0();
  *a1 = result;
  return result;
}

Swift::Bool __swiftcall ApplicationCapabilities.Tabs.shouldShowLoadingUpsellBanner(for:)(MusicCore::TabIdentifier a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = (char *)(v3 + 33);
  uint64_t v6 = a1;
  while (2)
  {
    char v7 = *v5;
    unint64_t v8 = 0xE700000000000000;
    uint64_t v9 = 0x7972617262696CLL;
    switch(*(v5 - 1))
    {
      case 1:
      case 2:
        uint64_t v9 = 0x6F4E6E657473696CLL;
        unint64_t v8 = 0xE900000000000077;
        break;
      case 3:
        unint64_t v8 = 0xE600000000000000;
        uint64_t v9 = 0x6573776F7262;
        break;
      case 4:
        unint64_t v8 = 0xE500000000000000;
        uint64_t v9 = 0x6F69646172;
        break;
      case 5:
        unint64_t v8 = 0xE600000000000000;
        uint64_t v9 = 0x686372616573;
        break;
      case 6:
        unint64_t v8 = 0xE600000000000000;
        uint64_t v9 = 0x736F65646976;
        break;
      default:
        break;
    }
    unint64_t v10 = 0xE700000000000000;
    uint64_t v11 = 0x7972617262696CLL;
    switch(v6)
    {
      case 1:
        unint64_t v10 = 0xE900000000000077;
        if (v9 == 0x6F4E6E657473696CLL) {
          goto LABEL_18;
        }
        goto LABEL_19;
      case 2:
        unint64_t v10 = 0xE600000000000000;
        if (v9 != 0x6573776F7262) {
          goto LABEL_19;
        }
        goto LABEL_18;
      case 3:
        unint64_t v10 = 0xE500000000000000;
        if (v9 != 0x6F69646172) {
          goto LABEL_19;
        }
        goto LABEL_18;
      case 4:
        unint64_t v10 = 0xE600000000000000;
        uint64_t v11 = 0x686372616573;
        goto LABEL_17;
      case 5:
        unint64_t v10 = 0xE600000000000000;
        if (v9 != 0x736F65646976) {
          goto LABEL_19;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (v9 != v11) {
          goto LABEL_19;
        }
LABEL_18:
        if (v8 != v10)
        {
LABEL_19:
          char v12 = sub_1004626E0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v12)
          {
            swift_bridgeObjectRelease();
            return v7;
          }
          v5 += 2;
          if (!--v2)
          {
            swift_bridgeObjectRelease();
            return 0;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v7;
    }
  }
}

BOOL sub_1000EE7DC(BOOL a1, void *a2)
{
  uint64_t v4 = sub_100005BFC(&qword_100571720);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100570958 != -1) {
    swift_once();
  }
  if (!static NSUserDefaults.mobileiPod) {
    goto LABEL_10;
  }
  sub_1000F37C0();
  sub_10000F810();
  NSUserDefaults.subscript.getter(&v11);
  if (!v12)
  {
    sub_100009790((uint64_t)&v11, (uint64_t *)&unk_100574DB0);
LABEL_10:
    a1 = 1;
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0 || v10[15] != 1) {
    goto LABEL_10;
  }
  if (a1) {
    a1 = [(id)a1 statusType] == (id)1;
  }
LABEL_11:
  id v7 = [self standardUserDefaults];
  NSUserDefaults.applicationScriptURL.getter((uint64_t)v6);

  uint64_t v8 = sub_10045BDE0();
  LODWORD(v7) = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8);
  sub_100009790((uint64_t)v6, &qword_100571720);
  if (v7 == 1 && [a2 hasLoadedSubscriptionAvailability]) {
    return [a2 isSubscriptionAvailable] & a1;
  }
  return a1;
}

uint64_t sub_1000EE9E8(void *a1, void *a2)
{
  if (a1)
  {
    uint64_t v3 = a1;
    sub_100460CB0();
    NSString v4 = sub_100460C70();
    swift_bridgeObjectRelease();
    LODWORD(v3) = [v3 effectiveBoolValueForSetting:v4];

    BOOL v5 = v3 == 2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  else
  {
    BOOL v5 = 1;
    if (!a2) {
      goto LABEL_12;
    }
  }
  if (qword_100570810 != -1) {
    swift_once();
  }
  NSString v6 = sub_100460C70();
  id v7 = [a2 dictionaryForBagKey:v6];

  if (v7)
  {

    sub_100009854(0, (unint64_t *)&unk_100574DD0);
    id v8 = static ICUserIdentityStore.activeAccountDSID.getter();

    if (v8 && !v5) {
      return 1;
    }
  }
LABEL_12:
  if (qword_1005710B8 != -1) {
    swift_once();
  }
  if (static DeviceCapabilities.isInternalInstall != 1) {
    return 0;
  }
  id v10 = [self standardUserDefaults];
  sub_1000F3830();
  sub_10000F810();
  NSUserDefaults.subscript.getter(&v12);

  if (!v13)
  {
    sub_100009790((uint64_t)&v12, (uint64_t *)&unk_100574DB0);
    return 0;
  }
  uint64_t result = swift_dynamicCast();
  if (result) {
    return 3;
  }
  return result;
}

uint64_t sub_1000EEC10()
{
  NSString v1 = sub_100460C70();
  id v2 = [v0 dictionaryForBagKey:v1];

  if (!v2 || (uint64_t v3 = sub_100460A90(), v2, !v3))
  {
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_7:
    sub_100009790((uint64_t)&v11, (uint64_t *)&unk_100574DB0);
LABEL_8:
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_9:
    sub_100009790((uint64_t)&v11, (uint64_t *)&unk_100574DB0);
    return 2;
  }
  sub_1004620C0();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1000D9AC0((uint64_t)v10), (v5 & 1) != 0))
  {
    sub_100007168(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000CD76C((uint64_t)v10);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_7;
  }
  sub_100005BFC(&qword_100577470);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)v10;
  if (!*(void *)v10) {
    goto LABEL_8;
  }
  sub_1004620C0();
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1000D9AC0((uint64_t)v10), (v9 & 1) != 0))
  {
    sub_100007168(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000CD76C((uint64_t)v10);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_9;
  }
  if (swift_dynamicCast()) {
    return v10[0];
  }
  else {
    return 2;
  }
}

uint64_t sub_1000EEE40()
{
  NSString v1 = sub_100460C70();
  id v2 = [v0 dictionaryForBagKey:v1];

  if (!v2 || (uint64_t v3 = sub_100460A90(), v2, !v3))
  {
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_7:
    sub_100009790((uint64_t)&v11, (uint64_t *)&unk_100574DB0);
LABEL_8:
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_9:
    sub_100009790((uint64_t)&v11, (uint64_t *)&unk_100574DB0);
    return 0;
  }
  sub_1004620C0();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1000D9AC0((uint64_t)&v10), (v5 & 1) != 0))
  {
    sub_100007168(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000CD76C((uint64_t)&v10);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_7;
  }
  sub_100005BFC(&qword_100577470);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v7 = v10;
  if (!v10) {
    goto LABEL_8;
  }
  sub_1004620C0();
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_1000D9AC0((uint64_t)&v10), (v9 & 1) != 0))
  {
    sub_100007168(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000CD76C((uint64_t)&v10);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_9;
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  return result;
}

char *sub_1000EF06C(char a1)
{
  NSString v1 = (char *)&off_1005226B0;
  switch(a1)
  {
    case 1:
      return v1;
    case 2:
      sub_100005BFC(&qword_100574DC0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1004668E0;
      *(_DWORD *)(inited + 32) = 196610;
      NSString v1 = sub_100050F50((char *)1, 5, 1, (char *)inited);
      unint64_t v4 = *((void *)v1 + 2);
      unint64_t v3 = *((void *)v1 + 3);
      int64_t v5 = v3 >> 1;
      unint64_t v6 = v4 + 1;
      if (v3 >> 1 <= v4)
      {
        NSString v1 = sub_100050F50((char *)(v3 > 1), v4 + 1, 1, v1);
        unint64_t v3 = *((void *)v1 + 3);
        int64_t v5 = v3 >> 1;
      }
      *((void *)v1 + 2) = v6;
      *(_WORD *)&v1[2 * v4 + 32] = 4;
      unint64_t v7 = v4 + 2;
      if (v5 < (uint64_t)(v4 + 2)) {
        NSString v1 = sub_100050F50((char *)(v3 > 1), v4 + 2, 1, v1);
      }
      *((void *)v1 + 2) = v7;
      *(_WORD *)&v1[2 * v6 + 32] = 0;
      unint64_t v8 = *((void *)v1 + 3);
      if ((uint64_t)(v4 + 3) > (uint64_t)(v8 >> 1)) {
        NSString v1 = sub_100050F50((char *)(v8 > 1), v4 + 3, 1, v1);
      }
      *((void *)v1 + 2) = v4 + 3;
      *(_WORD *)&v1[2 * v7 + 32] = 5;
      break;
    case 3:
      NSString v1 = (char *)&off_100522700;
      break;
    default:
      NSString v1 = (char *)&off_1005226D8;
      break;
  }
  return v1;
}

uint64_t sub_1000EF218()
{
  uint64_t result = sub_100460CB0();
  qword_100574B30 = result;
  *(void *)algn_100574B38 = v1;
  return result;
}

uint64_t sub_1000EF248@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, __int16 *a3@<X8>)
{
  uint64_t v5 = *a1;
  sub_1004620C0();
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1000D9AC0((uint64_t)v27), (v7 & 1) != 0))
  {
    sub_100007168(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v28);
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  sub_1000CD76C((uint64_t)v27);
  if (!*((void *)&v29 + 1))
  {
    uint64_t result = sub_100009790((uint64_t)&v28, (uint64_t *)&unk_100574DB0);
    goto LABEL_11;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_11:
    __int16 v14 = 512;
    goto LABEL_12;
  }
  unsigned __int8 v9 = sub_1000FF3E4(25705, (void *)0xE200000000000000);
  int v10 = v9;
  unsigned __int8 v11 = v9;
  sub_1004620C0();
  if (*(void *)(v5 + 16) && (unint64_t v12 = sub_1000D9AC0((uint64_t)v27), (v13 & 1) != 0))
  {
    sub_100007168(*(void *)(v5 + 56) + 32 * v12, (uint64_t)&v28);
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  sub_1000CD76C((uint64_t)v27);
  if (*((void *)&v29 + 1))
  {
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      __int16 v15 = v11;
      goto LABEL_48;
    }
  }
  else
  {
    uint64_t result = sub_100009790((uint64_t)&v28, (uint64_t *)&unk_100574DB0);
  }
  uint64_t v17 = *(void *)(a2 + 16);
  if (!v17) {
    goto LABEL_46;
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = a2;
  uint64_t v18 = (unsigned __int8 *)(a2 + 33);
  unsigned __int8 v26 = v11;
  while (2)
  {
    int v19 = *v18;
    unint64_t v20 = 0xE800000000000000;
    uint64_t result = 0x636973756D5F796DLL;
    switch(*(v18 - 1))
    {
      case 1u:
        unint64_t v20 = 0xE700000000000000;
        uint64_t result = 0x756F795F726F66;
        break;
      case 2u:
        uint64_t result = 0x6E5F6E657473696CLL;
        unint64_t v20 = 0xEA0000000000776FLL;
        break;
      case 3u:
        unint64_t v20 = 0xE600000000000000;
        uint64_t result = 0x6573776F7262;
        break;
      case 4u:
        unint64_t v20 = 0xE500000000000000;
        uint64_t v21 = 1768186226;
        goto LABEL_28;
      case 5u:
        unint64_t v20 = 0xE600000000000000;
        uint64_t result = 0x686372616573;
        break;
      case 6u:
        unint64_t v20 = 0xE500000000000000;
        uint64_t v21 = 1701079414;
LABEL_28:
        uint64_t result = v21 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000;
        break;
      default:
        break;
    }
    unint64_t v22 = 0xE800000000000000;
    uint64_t v23 = 0x636973756D5F796DLL;
    switch(v10)
    {
      case 0:
        goto LABEL_38;
      case 1:
        unint64_t v22 = 0xE700000000000000;
        if (result != 0x756F795F726F66) {
          goto LABEL_43;
        }
        goto LABEL_42;
      case 2:
        unint64_t v22 = 0xEA0000000000776FLL;
        if (result != 0x6E5F6E657473696CLL) {
          goto LABEL_43;
        }
        goto LABEL_42;
      case 3:
        unint64_t v22 = 0xE600000000000000;
        if (result != 0x6573776F7262) {
          goto LABEL_43;
        }
        goto LABEL_42;
      case 4:
        unint64_t v22 = 0xE500000000000000;
        uint64_t v24 = 1768186226;
        goto LABEL_41;
      case 5:
        unint64_t v22 = 0xE600000000000000;
        uint64_t v23 = 0x686372616573;
LABEL_38:
        if (result != v23) {
          goto LABEL_43;
        }
        goto LABEL_42;
      case 6:
        unint64_t v22 = 0xE500000000000000;
        uint64_t v24 = 1701079414;
LABEL_41:
        if (result != (v24 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
          goto LABEL_43;
        }
LABEL_42:
        if (v20 != v22)
        {
LABEL_43:
          char v25 = sub_1004626E0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v25)
          {
            uint64_t result = swift_bridgeObjectRelease();
            __int16 v15 = v26;
            if (v19) {
              goto LABEL_17;
            }
LABEL_48:
            __int16 v16 = 0;
            goto LABEL_49;
          }
          v18 += 2;
          if (!--v17)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unsigned __int8 v11 = v26;
LABEL_46:
            __int16 v16 = 0;
            __int16 v15 = v11;
            goto LABEL_49;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease_n();
        __int16 v15 = v26;
        if ((v19 & 1) == 0) {
          goto LABEL_48;
        }
LABEL_17:
        __int16 v16 = 256;
LABEL_49:
        __int16 v14 = v16 | v15;
LABEL_12:
        *a3 = v14;
        return result;
      default:
        goto LABEL_11;
    }
  }
}

id sub_1000EF768()
{
  id result = [self sharedConnection];
  if (result)
  {
    id v2 = result;
    [result unregisterObserver:v0];

    v3.receiver = v0;
    v3.super_class = (Class)type metadata accessor for ApplicationCapabilities.Controller.ProfileObserver();
    return [super dealloc];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000EF8D4(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void))
{
  if (a4) {
    sub_100460A90();
  }
  if (swift_weakLoadStrong())
  {
    id v9 = a3;
    id v8 = a1;
    UnfairLock.locked<A>(_:)(a5);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

id sub_1000EF9F0()
{
  id result = [objc_allocWithZone((Class)RadioAvailabilityController) init];
  qword_100574B40 = (uint64_t)result;
  return result;
}

unint64_t sub_1000EFA24(char a1)
{
  unint64_t result = 0xD00000000000001FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000024;
      break;
    case 2:
      unint64_t result = 0xD000000000000025;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000EFAC0(char *a1, char *a2)
{
  return sub_10003435C(*a1, *a2);
}

Swift::Int sub_1000EFACC()
{
  return sub_1000F5E30();
}

uint64_t sub_1000EFAD4()
{
  return sub_1000F638C();
}

Swift::Int sub_1000EFADC()
{
  return sub_1000F6B54();
}

uint64_t sub_1000EFAE4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100524168;
  uint64_t result = sub_1000F3EF4(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

unint64_t sub_1000EFB1C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000EFA24(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000EFB48()
{
  uint64_t v0 = sub_10045D310();
  sub_1000096D0(v0, qword_100574B48);
  sub_100009688(v0, (uint64_t)qword_100574B48);
  return sub_10045D300();
}

NSString sub_1000EFBCC()
{
  NSString result = sub_100460C70();
  static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange.getter()
{
  return sub_1000F00D4(&qword_100570828, (void **)&static ApplicationCapabilities.NotificationNames.allowsiTunesContentDidChange);
}

NSString sub_1000EFC28()
{
  NSString result = sub_100460C70();
  static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange.getter()
{
  return sub_1000F00D4(&qword_100570830, (void **)&static ApplicationCapabilities.NotificationNames.allowsMusicServiceDidChange);
}

NSString sub_1000EFC84()
{
  NSString result = sub_100460C70();
  static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange.getter()
{
  return sub_1000F00D4(&qword_100570838, (void **)&static ApplicationCapabilities.NotificationNames.allowsSocialContentDidChange);
}

NSString sub_1000EFCE0()
{
  NSString result = sub_100460C70();
  static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange.getter()
{
  return sub_1000F00D4(&qword_100570840, (void **)&static ApplicationCapabilities.NotificationNames.allowsRadioContentDidChange);
}

NSString sub_1000EFD3C()
{
  NSString result = sub_100460C70();
  static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange.getter()
{
  return sub_1000F00D4(&qword_100570848, (void **)&static ApplicationCapabilities.NotificationNames.allowsSubscriptionContentDidChange);
}

NSString sub_1000EFD98()
{
  NSString result = sub_100460C70();
  static ApplicationCapabilities.NotificationNames.mliEnabledDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.mliEnabledDidChange.getter()
{
  return sub_1000F00D4(&qword_100570850, (void **)&static ApplicationCapabilities.NotificationNames.mliEnabledDidChange);
}

NSString sub_1000EFDF4()
{
  NSString result = sub_100460C70();
  static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange.getter()
{
  return sub_1000F00D4(&qword_100570858, (void **)&static ApplicationCapabilities.NotificationNames.allowsSharePlayTogetherDidChange);
}

NSString sub_1000EFE50()
{
  NSString result = sub_100460C70();
  static ApplicationCapabilities.NotificationNames.supportedTabsDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.supportedTabsDidChange.getter()
{
  return sub_1000F00D4(&qword_100570860, (void **)&static ApplicationCapabilities.NotificationNames.supportedTabsDidChange);
}

NSString sub_1000EFEAC()
{
  NSString result = sub_100460C70();
  static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange.getter()
{
  return sub_1000F00D4(&qword_100570868, (void **)&static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange);
}

NSString sub_1000EFF08()
{
  NSString result = sub_100460C70();
  static ApplicationCapabilities.NotificationNames.activeAccountDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.activeAccountDidChange.getter()
{
  return sub_1000F00D4(&qword_100570870, (void **)&static ApplicationCapabilities.NotificationNames.activeAccountDidChange);
}

NSString sub_1000EFF64()
{
  NSString result = sub_100460C70();
  static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange.getter()
{
  return sub_1000F00D4(&qword_100570878, (void **)&static ApplicationCapabilities.NotificationNames.hasNetworkConnectivityDidChange);
}

NSString sub_1000EFFC0()
{
  NSString result = sub_100460C70();
  static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange.getter()
{
  return sub_1000F00D4(&qword_100570880, (void **)&static ApplicationCapabilities.NotificationNames.ratingWarningThresholdDidChange);
}

NSString sub_1000F001C()
{
  NSString result = sub_100460C70();
  static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange.getter()
{
  return sub_1000F00D4(&qword_100570888, (void **)&static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange);
}

NSString sub_1000F0078()
{
  NSString result = sub_100460C70();
  static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange = (uint64_t)result;
  return result;
}

id static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange.getter()
{
  return sub_1000F00D4(&qword_100570890, (void **)&static ApplicationCapabilities.NotificationNames.subscriptionCapabilitiesDidChange);
}

id sub_1000F00D4(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  Swift::OpaquePointer v3 = *a2;

  return v3;
}

uint64_t sub_1000F0120(uint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if ((result & 1) == 0
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || a1 > *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1004623D0();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_100462180();
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t _s9MusicCore23ApplicationCapabilitiesV13RatingWarningV23__derived_struct_equalsySbAE_AEtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = a1[2];
  uint64_t v5 = a2[2];
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_11;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = a1[1] == a2[1] && v4 == v5;
  if (v6 || (char v7 = sub_1004626E0(), result = 0, (v7 & 1) != 0))
  {
LABEL_11:
    uint64_t v9 = a1[4];
    uint64_t v10 = a2[4];
    if (v9)
    {
      if (v10 && (a1[3] == a2[3] && v9 == v10 || (sub_1004626E0() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v10)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s9MusicCore23ApplicationCapabilitiesV23__derived_struct_equalsySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if ((*a1 ^ *a2)) {
    return 0;
  }
  if ((a1[1] ^ a2[1])) {
    return 0;
  }
  if ((a1[2] ^ a2[2])) {
    return 0;
  }
  if (*((void *)a1 + 1) != *((void *)a2 + 1)) {
    return 0;
  }
  if (*((void *)a1 + 2) != *((void *)a2 + 2)) {
    return 0;
  }
  if ((sub_10017CA3C(*((void *)a1 + 3), *((void *)a2 + 3)) & 1) == 0) {
    return 0;
  }
  if ((sub_10017CA3C(*((void *)a1 + 4), *((void *)a2 + 4)) & 1) == 0) {
    return 0;
  }
  long long v4 = *(_OWORD *)(a1 + 56);
  v20[0] = *(_OWORD *)(a1 + 40);
  v20[1] = v4;
  uint64_t v21 = *((void *)a1 + 9);
  long long v5 = *(_OWORD *)(a2 + 56);
  v18[0] = *(_OWORD *)(a2 + 40);
  v18[1] = v5;
  uint64_t v19 = *((void *)a2 + 9);
  if ((_s9MusicCore23ApplicationCapabilitiesV13RatingWarningV23__derived_struct_equalsySbAE_AEtFZ_0(v20, v18) & 1) == 0) {
    return 0;
  }
  BOOL v6 = (void *)*((void *)a1 + 10);
  char v7 = (void *)*((void *)a2 + 10);
  if (v6)
  {
    if (!v7) {
      return 0;
    }
    sub_100009854(0, (unint64_t *)&unk_100574E30);
    id v8 = v7;
    id v9 = v6;
    char v10 = sub_100461D10();

    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if ((sub_100035030(a1[88], a2[88]) & 1) == 0) {
    return 0;
  }
  uint64_t v11 = *((void *)a1 + 12);
  int v12 = a1[104];
  uint64_t v13 = *((void *)a1 + 14);
  uint64_t v14 = *((void *)a2 + 12);
  int v15 = a2[104];
  uint64_t v16 = *((void *)a2 + 14);
  if ((sub_1000E9310(v11, v14) & 1) == 0) {
    return 0;
  }
  if (v12 == 6)
  {
    if (v15 != 6) {
      return 0;
    }
  }
  else if (v15 == 6 || (sub_100035034(v12, v15) & 1) == 0)
  {
    return 0;
  }
  return (sub_1000E955C(v13, v16) & 1) != 0;
}

char *sub_1000F0450(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    unint64_t v3 = (char *)&_swiftEmptyArrayStorage;
    uint64_t v4 = 32;
    do
    {
      char v5 = *(unsigned char *)(a1 + v4);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v3 = sub_100050F44(0, *((void *)v3 + 2) + 1, 1, v3);
      }
      unint64_t v7 = *((void *)v3 + 2);
      unint64_t v6 = *((void *)v3 + 3);
      if (v7 >= v6 >> 1) {
        unint64_t v3 = sub_100050F44((char *)(v6 > 1), v7 + 1, 1, v3);
      }
      *((void *)v3 + 2) = v7 + 1;
      v3[v7 + 32] = 0x5040302010100uLL >> (8 * v5);
      v4 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v3 = (char *)&_swiftEmptyArrayStorage;
  }
  if (qword_100570958 != -1) {
    swift_once();
  }
  if (static NSUserDefaults.mobileiPod)
  {
    sub_1000F37C0();
    sub_10000F810();
    NSUserDefaults.subscript.getter(&v19);
    if (v20)
    {
      if (swift_dynamicCast())
      {
        char v8 = v18 ^ 1;
        uint64_t v9 = *((void *)v3 + 2);
        if (!v9) {
          return v3;
        }
        goto LABEL_19;
      }
    }
    else
    {
      sub_100009790((uint64_t)&v19, (uint64_t *)&unk_100574DB0);
    }
  }
  char v8 = 1;
  uint64_t v9 = *((void *)v3 + 2);
  if (!v9) {
    return v3;
  }
LABEL_19:
  if (v8) {
    uint64_t v10 = 0x6F4E6E657473696CLL;
  }
  else {
    uint64_t v10 = 0x7972617262696CLL;
  }
  if (v8) {
    unint64_t v11 = 0xE900000000000077;
  }
  else {
    unint64_t v11 = 0xE700000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  while (2)
  {
    uint64_t v13 = v3[v12++ + 32];
    unint64_t v14 = 0xE700000000000000;
    uint64_t v15 = 0x7972617262696CLL;
    switch(v13)
    {
      case 1:
        uint64_t v15 = 0x6F4E6E657473696CLL;
        unint64_t v14 = 0xE900000000000077;
        goto LABEL_28;
      case 2:
      case 3:
      case 4:
      case 5:
        goto LABEL_31;
      default:
LABEL_28:
        if (v15 != v10 || v14 != v11)
        {
LABEL_31:
          char v16 = sub_1004626E0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v16)
          {
            swift_bridgeObjectRelease();
            return v3;
          }
          if (v9 == v12)
          {
            swift_bridgeObjectRelease();
            return v3;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v3;
    }
  }
}

uint64_t sub_1000F07B0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16))
  {
    if (!*(void *)(a2 + 16)) {
      return 0;
    }
    uint64_t v3 = a2 + 56;
    uint64_t v4 = 1;
    uint64_t v19 = a1 + 32;
    uint64_t v20 = *(void *)(a1 + 16);
    char v5 = (unsigned __int8 *)(a1 + 32);
    while (1)
    {
      uint64_t v6 = *v5;
      sub_1004628B0();
      ApplicationCapabilities.Service.rawValue.getter(v6);
      sub_100460DA0();
      swift_bridgeObjectRelease();
      Swift::Int v7 = sub_100462900();
      uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v9 = v7 & ~v8;
      if (((*(void *)(v3 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        return 0;
      }
      uint64_t v10 = ~v8;
      while (2)
      {
        unint64_t v11 = 0xE500000000000000;
        unint64_t v12 = 0x636973756DLL;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v9))
        {
          case 1:
            unint64_t v12 = 0x646956636973756DLL;
            unint64_t v11 = 0xEB00000000736F65;
            break;
          case 2:
            uint64_t v13 = "lable";
            goto LABEL_15;
          case 3:
            unint64_t v11 = 0xE600000000000000;
            unint64_t v12 = 0x6C6169636F73;
            break;
          case 4:
            unint64_t v12 = 0x6F69646172;
            break;
          case 5:
            unint64_t v11 = 0xE600000000000000;
            unint64_t v12 = 0x73656E757469;
            break;
          case 6:
            unint64_t v12 = 0x74634170756F7267;
            unint64_t v11 = 0xED00007974697669;
            break;
          case 7:
            unint64_t v12 = 0x746963696C707865;
            unint64_t v11 = 0xEF746E65746E6F43;
            break;
          case 8:
            uint64_t v13 = "s";
LABEL_15:
            unint64_t v11 = (unint64_t)v13 | 0x8000000000000000;
            unint64_t v12 = 0xD000000000000013;
            break;
          case 9:
            unint64_t v12 = 0xD000000000000011;
            unint64_t v11 = 0x800000010048DE00;
            break;
          case 0xA:
            unint64_t v12 = 0x6C62616E45696C6DLL;
            unint64_t v11 = 0xEA00000000006465;
            break;
          default:
            break;
        }
        unint64_t v14 = 0xE500000000000000;
        unint64_t v15 = 0x636973756DLL;
        switch(v6)
        {
          case 1:
            unint64_t v14 = 0xEB00000000736F65;
            if (v12 == 0x646956636973756DLL) {
              goto LABEL_37;
            }
            goto LABEL_38;
          case 2:
            char v16 = "lable";
            goto LABEL_33;
          case 3:
            unint64_t v14 = 0xE600000000000000;
            if (v12 != 0x6C6169636F73) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 4:
            if (v12 != 0x6F69646172) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 5:
            unint64_t v14 = 0xE600000000000000;
            if (v12 != 0x73656E757469) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 6:
            unint64_t v14 = 0xED00007974697669;
            if (v12 != 0x74634170756F7267) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 7:
            unint64_t v14 = 0xEF746E65746E6F43;
            if (v12 != 0x746963696C707865) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 8:
            char v16 = "s";
LABEL_33:
            unint64_t v14 = (unint64_t)v16 | 0x8000000000000000;
            if (v12 != 0xD000000000000013) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 9:
            unint64_t v15 = 0xD000000000000011;
            unint64_t v14 = 0x800000010048DE00;
            goto LABEL_36;
          case 10:
            unint64_t v14 = 0xEA00000000006465;
            if (v12 != 0x6C62616E45696C6DLL) {
              goto LABEL_38;
            }
            goto LABEL_37;
          default:
LABEL_36:
            if (v12 != v15) {
              goto LABEL_38;
            }
LABEL_37:
            if (v11 != v14)
            {
LABEL_38:
              char v17 = sub_1004626E0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v17) {
                goto LABEL_44;
              }
              unint64_t v9 = (v9 + 1) & v10;
              if (((*(void *)(v3 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
                return 0;
              }
              continue;
            }
            swift_bridgeObjectRelease_n();
LABEL_44:
            if (v4 == v20) {
              return 1;
            }
            char v5 = (unsigned __int8 *)(v19 + v4++);
            if (!*(void *)(a2 + 16)) {
              return 0;
            }
            break;
        }
        break;
      }
    }
  }
  return 1;
}

void sub_1000F0C14(void *a1@<X0>, void *a2@<X8>)
{
  if (a1)
  {
    id v3 = a1;
    NSString v4 = sub_100460C70();
    id v5 = [v3 numberForBagKey:v4];

    if (v5)
    {
      sub_1004614F0();
    }
    else
    {
    }
    id v10 = v3;
    NSString v11 = sub_100460C70();
    id v12 = [v10 stringForBagKey:v11];

    if (v12)
    {
      uint64_t v8 = sub_100460CB0();
      uint64_t v9 = v13;
    }
    else
    {

      uint64_t v8 = 0;
      uint64_t v9 = 0;
    }
    id v14 = v10;
    NSString v15 = sub_100460C70();
    id v16 = [v14 stringForBagKey:v15];

    if (v16)
    {
      uint64_t v6 = sub_100460CB0();
      uint64_t v7 = v17;
    }
    else
    {

      uint64_t v6 = 0;
      uint64_t v7 = 0;
    }
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  *a2 = 0x7FFFFFFFFFFFFFFFLL;
  a2[1] = v8;
  a2[2] = v9;
  a2[3] = v6;
  a2[4] = v7;
}

char *sub_1000F0E00(unsigned __int8 a1, uint64_t a2)
{
  if (!a2)
  {
LABEL_51:
    return sub_1000EF06C(a1);
  }
  uint64_t v3 = a2;
  uint64_t v36 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v37 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v38 = a1;
  long long v39 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v34 = v3;
  unsigned __int8 v35 = a1;
  while (v6)
  {
    unint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v10 = v9 | (v7 << 6);
LABEL_20:
    id v14 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    id v16 = (void *)v14[1];
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18._rawValue = &off_1005227F0;
    v43._uint64_t countAndFlagsBits = v15;
    v43._object = v16;
    Swift::Int v19 = sub_100462490(v18, v43);
    swift_bridgeObjectRelease();
    uint64_t v20 = 0x6564696365646E75;
    unint64_t v21 = 0xE900000000000064;
    switch(v19)
    {
      case 0:
        goto LABEL_24;
      case 1:
        unint64_t v21 = 0xE700000000000000;
        uint64_t v20 = 0x63697373616C63;
        goto LABEL_24;
      case 2:
        uint64_t v20 = 0x6269726373627573;
        unint64_t v21 = 0xEA00000000007265;
        goto LABEL_24;
      case 3:
        uint64_t v20 = 0x6275536563696F76;
        unint64_t v21 = 0xEF72656269726373;
LABEL_24:
        uint64_t v22 = 0x6564696365646E75;
        unint64_t v23 = 0xE900000000000064;
        switch(v38)
        {
          case 1:
            unint64_t v23 = 0xE700000000000000;
            if (v20 == 0x63697373616C63) {
              goto LABEL_29;
            }
            goto LABEL_5;
          case 2:
            uint64_t v22 = 0x6269726373627573;
            unint64_t v23 = 0xEA00000000007265;
            goto LABEL_28;
          case 3:
            unint64_t v23 = 0xEF72656269726373;
            if (v20 != 0x6275536563696F76) {
              goto LABEL_5;
            }
            goto LABEL_29;
          default:
LABEL_28:
            if (v20 != v22) {
              goto LABEL_5;
            }
LABEL_29:
            if (v21 == v23)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
            }
            else
            {
LABEL_5:
              char v8 = sub_1004626E0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v8 & 1) == 0) {
                goto LABEL_6;
              }
              swift_bridgeObjectRelease();
            }
            uint64_t v24 = sub_1000EF06C(a1);
            uint64_t v25 = *(void *)(v17 + 16);
            if (v25)
            {
              swift_bridgeObjectRetain();
              uint64_t v26 = 0;
              long long v39 = (char *)&_swiftEmptyArrayStorage;
              do
              {
                uint64_t v41 = *(void *)(v17 + 8 * v26 + 32);
                swift_bridgeObjectRetain();
                sub_1000EF248(&v41, (uint64_t)v24, &v40);
                swift_bridgeObjectRelease();
                __int16 v28 = v40;
                if ((v40 & 0xFF00) != 0x200)
                {
                  long long v29 = v39;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    long long v29 = sub_100050F50(0, *((void *)v39 + 2) + 1, 1, v39);
                  }
                  uint64_t v30 = v29;
                  unint64_t v31 = *((void *)v29 + 2);
                  long long v39 = v30;
                  unint64_t v32 = *((void *)v30 + 3);
                  if (v31 >= v32 >> 1) {
                    long long v39 = sub_100050F50((char *)(v32 > 1), v31 + 1, 1, v39);
                  }
                  *((void *)v39 + 2) = v31 + 1;
                  long long v27 = &v39[2 * v31];
                  v27[32] = v28;
                  v27[33] = HIBYTE(v28) & 1;
                }
                ++v26;
              }
              while (v25 != v26);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              uint64_t v3 = v34;
              a1 = v35;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              long long v39 = (char *)&_swiftEmptyArrayStorage;
            }
            break;
        }
        break;
      default:
LABEL_6:
        swift_bridgeObjectRelease();
        break;
    }
  }
  if (__OFADD__(v7++, 1))
  {
    __break(1u);
    goto LABEL_55;
  }
  if (v7 >= v37) {
    goto LABEL_49;
  }
  unint64_t v12 = *(void *)(v36 + 8 * v7);
  if (v12)
  {
LABEL_19:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
    goto LABEL_20;
  }
  int64_t v13 = v7 + 1;
  if (v7 + 1 >= v37) {
    goto LABEL_49;
  }
  unint64_t v12 = *(void *)(v36 + 8 * v13);
  if (v12) {
    goto LABEL_18;
  }
  int64_t v13 = v7 + 2;
  if (v7 + 2 >= v37) {
    goto LABEL_49;
  }
  unint64_t v12 = *(void *)(v36 + 8 * v13);
  if (v12)
  {
LABEL_18:
    int64_t v7 = v13;
    goto LABEL_19;
  }
  int64_t v13 = v7 + 3;
  if (v7 + 3 < v37)
  {
    unint64_t v12 = *(void *)(v36 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v7 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (v7 >= v37) {
          goto LABEL_49;
        }
        unint64_t v12 = *(void *)(v36 + 8 * v7);
        ++v13;
        if (v12) {
          goto LABEL_19;
        }
      }
LABEL_55:
      __break(1u);
      JUMPOUT(0x1000F12F0);
    }
    goto LABEL_18;
  }
LABEL_49:
  swift_release();
  uint64_t result = v39;
  if (!*((void *)v39 + 2))
  {
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
  return result;
}

void *sub_1000F1310(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v3 = a2;
  unint64_t v4 = 0;
  uint64_t v5 = &_swiftEmptyArrayStorage;
  uint64_t v37 = a1 + 32;
  unint64_t v33 = *(void *)(a1 + 16);
LABEL_3:
  if (v4 <= v2) {
    unint64_t v6 = v2;
  }
  else {
    unint64_t v6 = v4;
  }
  unint64_t v34 = v6;
  unsigned __int8 v35 = v5;
  while (1)
  {
    if (v4 == v6)
    {
      __break(1u);
      JUMPOUT(0x1000F1A90);
    }
    int64_t v7 = (unsigned __int8 *)(v37 + 2 * v4);
    int v8 = *v7;
    ++v4;
    if (v8 == 2) {
      break;
    }
    if (v8 != 6)
    {
      if (v8 != 4)
      {
        unsigned __int8 v36 = v7[1];
        goto LABEL_44;
      }
      uint64_t v9 = *(void *)(v3 + 24);
      if (!*(void *)(v9 + 16)) {
        goto LABEL_10;
      }
      unsigned __int8 v36 = v7[1];
      sub_1004628B0();
      swift_bridgeObjectRetain();
      sub_100460DA0();
      Swift::Int v10 = sub_100462900();
      uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v12 = v10 & ~v11;
      if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
      {
        uint64_t v13 = ~v11;
        while (1)
        {
          switch(*(unsigned char *)(*(void *)(v9 + 48) + v12))
          {
            case 4:
              goto LABEL_42;
            default:
              char v14 = sub_1004626E0();
              swift_bridgeObjectRelease();
              if (v14)
              {
                LOBYTE(v8) = 4;
                goto LABEL_43;
              }
              unint64_t v12 = (v12 + 1) & v13;
              if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
                goto LABEL_7;
              }
              break;
          }
        }
      }
      uint64_t v3 = a2;
      goto LABEL_9;
    }
    uint64_t v21 = *(void *)(v3 + 24);
    if (!*(void *)(v21 + 16)) {
      goto LABEL_10;
    }
    unsigned __int8 v36 = v7[1];
    sub_1004628B0();
    swift_bridgeObjectRetain();
    sub_100460DA0();
    Swift::Int v22 = sub_100462900();
    uint64_t v23 = -1 << *(unsigned char *)(v21 + 32);
    unint64_t v24 = v22 & ~v23;
    if ((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24))
    {
      uint64_t v25 = ~v23;
      while (1)
      {
        switch(*(unsigned char *)(*(void *)(v21 + 48) + v24))
        {
          case 1:
            goto LABEL_42;
          default:
            char v26 = sub_1004626E0();
            swift_bridgeObjectRelease();
            if (v26)
            {
              LOBYTE(v8) = 6;
              goto LABEL_43;
            }
            unint64_t v24 = (v24 + 1) & v25;
            if (((*(void *)(v21 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
              goto LABEL_7;
            }
            break;
        }
      }
    }
LABEL_8:
    unint64_t v2 = v33;
    uint64_t v5 = v35;
LABEL_9:
    unint64_t v6 = v34;
    swift_bridgeObjectRelease();
LABEL_10:
    if (v4 == v2) {
      return v5;
    }
  }
  uint64_t v15 = *(void *)(v3 + 24);
  if (!*(void *)(v15 + 16)) {
    goto LABEL_10;
  }
  unsigned __int8 v36 = v7[1];
  sub_1004628B0();
  swift_bridgeObjectRetain();
  sub_100460DA0();
  Swift::Int v16 = sub_100462900();
  uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
  unint64_t v18 = v16 & ~v17;
  if (((*(void *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v19 = ~v17;
  while (2)
  {
    switch(*(unsigned char *)(*(void *)(v15 + 48) + v18))
    {
      case 2:
        goto LABEL_42;
      case 8:
        if (0x800000010048DDE0 != 0x800000010048DDA0) {
          goto LABEL_27;
        }
LABEL_42:
        swift_bridgeObjectRelease();
        goto LABEL_43;
      default:
LABEL_27:
        char v20 = sub_1004626E0();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0)
        {
          unint64_t v18 = (v18 + 1) & v19;
          if (((*(void *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
          {
LABEL_7:
            uint64_t v3 = a2;
            goto LABEL_8;
          }
          continue;
        }
        LOBYTE(v8) = 2;
LABEL_43:
        uint64_t v3 = a2;
        unint64_t v2 = v33;
        uint64_t v5 = v35;
        swift_bridgeObjectRelease();
LABEL_44:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000A018C(0, v5[2] + 1, 1);
        }
        unsigned __int8 v27 = v36;
        unint64_t v29 = v5[2];
        unint64_t v28 = v5[3];
        if (v29 >= v28 >> 1)
        {
          sub_1000A018C((char *)(v28 > 1), v29 + 1, 1);
          unsigned __int8 v27 = v36;
        }
        _OWORD v5[2] = v29 + 1;
        uint64_t v30 = (char *)v5 + 2 * v29;
        v30[32] = v8;
        v30[33] = v27;
        if (v4 != v2) {
          goto LABEL_3;
        }
        return v5;
    }
  }
}

id sub_1000F1B14@<X0>(void *a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  unint64_t v6 = self;
  id result = [v6 sharedCloudController];
  if (result)
  {
    int v8 = result;
    unsigned __int8 v9 = [result hasProperNetworkConditionsToShowCloudMedia];

    unsigned __int8 v74 = v9;
    unsigned __int8 v75 = 0;
    long long v76 = 0uLL;
    *(void *)&long long v77 = &_swiftEmptySetSingleton;
    *((void *)&v77 + 1) = &_swiftEmptySetSingleton;
    *(void *)uint64_t v78 = 0x7FFFFFFFFFFFFFFFLL;
    memset(&v78[8], 0, 32);
    Swift::Int v10 = self;
    id v11 = [v10 sharedController];
    id v69 = [v11 musicSubscriptionStatus];

    char v80 = 1;
    uint64_t v81 = sub_1000F0450((uint64_t)&_swiftEmptyArrayStorage);
    char v82 = v12;
    uint64_t v83 = v13;
    id v14 = [v10 sharedController];
    id v15 = [self sharedConnection];
    id v71 = [v6 sharedCloudController];
    id v16 = [v14 musicSubscriptionStatus];
    uint64_t v17 = v16;
    char v70 = a2;
    if (v16) {
      unsigned int v68 = [v16 capabilities] & 1;
    }
    else {
      unsigned int v68 = 0;
    }
    id v18 = [self defaultIdentityStore];
    sub_1000ED734();
    char v20 = v19;

    BOOL v73 = (v20 & 1) == 0;
    if (v17)
    {
      id v21 = v17;
      *((void *)&v76 + 1) = [v21 statusType];
      id v22 = [v21 capabilities];

      *(void *)&long long v76 = v22;
    }
    if (sub_1000EE7DC((BOOL)v17, v14)) {
      sub_100182BC8(v84, 2);
    }
    if (qword_100570818 != -1) {
      swift_once();
    }
    if ([(id)qword_100574B40 isRadioAvailable]) {
      sub_100182BC8(v84, 4);
    }
    if (sub_1000EE9E8(v15, a1)) {
      sub_100182BC8(v84, 3);
    }
    if (a1)
    {
      NSString v23 = sub_100460C70();
      unsigned int v24 = [a1 BOOLValueForBagKey:v23];

      if (v24) {
        sub_100182BC8(v84, 9);
      }
    }
    if (v15)
    {
      sub_100460CB0();
      NSString v25 = sub_100460C70();
      swift_bridgeObjectRelease();
      unsigned int v26 = [v15 effectiveBoolValueForSetting:v25];

      if (v26 != 2) {
        sub_100182BC8(v84, 6);
      }
      sub_100460CB0();
      NSString v27 = sub_100460C70();
      swift_bridgeObjectRelease();
      unsigned int v28 = [v15 effectiveBoolValueForSetting:v27];

      if (v28 != 2) {
        sub_100182BC8(v84, 0);
      }
      sub_100460CB0();
      NSString v29 = sub_100460C70();
      swift_bridgeObjectRelease();
      unsigned int v30 = [v15 effectiveBoolValueForSetting:v29];

      if (v30 != 2) {
        sub_100182BC8(v84, 1);
      }
      sub_100460CB0();
      NSString v31 = sub_100460C70();
      swift_bridgeObjectRelease();
      unsigned int v32 = [v15 effectiveBoolValueForSetting:v31];

      if (v32 != 2) {
        sub_100182BC8(v84, 5);
      }
      uint64_t v79 = v17;
      id v33 = v17;

      sub_100460CB0();
      NSString v34 = sub_100460C70();
      swift_bridgeObjectRelease();
      unsigned int v35 = [v15 effectiveBoolValueForSetting:v34];

      if (v35 != 2) {
        sub_100182BC8(v84, 8);
      }
      sub_100460CB0();
      NSString v36 = sub_100460C70();
      swift_bridgeObjectRelease();
      unsigned int v37 = [v15 isBoolSettingLockedDownByRestrictions:v36];

      if (v37) {
        sub_100182BC8(v84, 7);
      }
    }
    else
    {
      uint64_t v79 = v17;
      id v38 = v17;
    }
    swift_bridgeObjectRetain();
    char v39 = sub_1000F07B0((uint64_t)&off_100522870, v77);
    swift_bridgeObjectRelease();
    if (v39)
    {
      char v40 = v68 ? 2 : 0;
      char v80 = v40;
      if (v17)
      {
        id v41 = v17;
        if ([v41 statusType] == (id)3)
        {
          if (qword_100570820 != -1) {
            swift_once();
          }
          uint64_t v42 = sub_10045D310();
          sub_100009688(v42, (uint64_t)qword_100574B48);
          Swift::String v43 = sub_10045D2F0();
          os_log_type_t v44 = sub_100461760();
          if (os_log_type_enabled(v43, v44))
          {
            uint64_t v45 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v45 = 0;
            _os_log_impl((void *)&_mh_execute_header, v43, v44, "Unexpectedly found a Voice subscriber! 😡", v45, 2u);
            swift_slowDealloc();
          }
        }
      }
    }
    if (a1 && (v76 & 1) != 0 && (sub_1000EEC10() & 1) != 0 && (sub_1000EEE40() & 1) != 0) {
      sub_100182BC8(v84, 10);
    }
    if (v71)
    {
      id v46 = v71;
      if ([v46 shouldProhibitMusicActionForCurrentNetworkConditions]) {
        unsigned __int8 v47 = 0;
      }
      else {
        unsigned __int8 v47 = [v46 hasProperNetworkConditionsToShowCloudMedia];
      }
    }
    else
    {
      unsigned __int8 v47 = 0;
    }
    unsigned __int8 v74 = v47;
    unsigned __int8 v48 = [v14 isCloudLibraryEnabled];
    unsigned __int8 v75 = v48;
    id v49 = a1;
    sub_1000F0C14(a1, v84);
    swift_bridgeObjectRelease();
    uint64_t v50 = swift_bridgeObjectRelease();
    *(_OWORD *)uint64_t v78 = v84[0];
    *(_OWORD *)&v78[16] = v84[1];
    *(void *)&v78[32] = v85;
    if (v70)
    {
      long long v51 = sub_1000EF06C(2);
    }
    else
    {
      __chkstk_darwin(v50);
      uint64_t v53 = v52 + 4;
      uint64_t v54 = v52 + 11;
      os_unfair_lock_lock(v52 + 11);
      sub_1000F3814(v53, &v72);
      os_unfair_lock_unlock(v54);
      if (v72)
      {
        uint64_t v55 = sub_1000F0E00(v80, v72);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v55 = sub_1000EF06C(v80);
      }
      long long v51 = sub_1000F1310((uint64_t)v55, (uint64_t)&v73);
      swift_bridgeObjectRelease();
      unsigned __int8 v47 = v74;
      unsigned __int8 v48 = v75;
    }
    uint64_t v56 = sub_1000F0450((uint64_t)v51);
    char v58 = v57;
    uint64_t v60 = v59;

    swift_release();
    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    uint64_t v61 = *(void *)&v78[32];
    CFRange v62 = v79;
    unsigned __int8 v63 = v80;
    long long v65 = v76;
    long long v64 = v77;
    long long v66 = *(_OWORD *)v78;
    long long v67 = *(_OWORD *)&v78[16];
    *(unsigned char *)a3 = v73;
    *(unsigned char *)(a3 + 1) = v47;
    *(unsigned char *)(a3 + 2) = v48;
    *(_OWORD *)(a3 + 8) = v65;
    *(_OWORD *)(a3 + 24) = v64;
    *(_OWORD *)(a3 + 40) = v66;
    *(_OWORD *)(a3 + 56) = v67;
    *(void *)(a3 + 72) = v61;
    *(void *)(a3 + 80) = v62;
    *(unsigned char *)(a3 + 88) = v63;
    *(void *)(a3 + 96) = v56;
    *(unsigned char *)(a3 + 104) = v58;
    *(void *)(a3 + 112) = v60;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000F23D0(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v31 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  p_cb = &OBJC_PROTOCOL___NSObject.cb;
  uint64_t v29 = a2;
  unsigned __int8 v9 = &_ss15ContinuousClockVs0B0sMc_ptr;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      uint64_t v12 = (v6 - 1) & v6;
      int64_t v33 = v7;
      unint64_t v13 = v11 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v14 >= v31) {
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v14);
    int64_t v16 = v7 + 1;
    if (!v15)
    {
      int64_t v16 = v7 + 2;
      if (v7 + 2 >= v31) {
        goto LABEL_28;
      }
      unint64_t v15 = *(void *)(v30 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v7 + 3;
        if (v7 + 3 >= v31) {
          goto LABEL_28;
        }
        unint64_t v15 = *(void *)(v30 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v7 + 4;
          if (v7 + 4 >= v31) {
            goto LABEL_28;
          }
          unint64_t v15 = *(void *)(v30 + 8 * v16);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    uint64_t v12 = (v15 - 1) & v15;
    int64_t v33 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    unint64_t v32 = v12;
    uint64_t v18 = *((void *)p_cb + 260);
    id v19 = *(id *)(*(void *)(a1 + 48) + 8 * v13);
    if (v18 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_10045D310();
    sub_100009688(v20, (uint64_t)qword_100574B48);
    id v21 = v19;
    id v22 = sub_10045D2F0();
    os_log_type_t v23 = sub_100461770();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136446210;
      type metadata accessor for Name(0);
      NSString v25 = v9;
      id v26 = v21;
      uint64_t v27 = sub_100460D40();
      *(void *)(v24 + 4) = sub_10001FCAC(v27, v28, &v34);

      unsigned __int8 v9 = v25;
      a2 = v29;
      p_cb = (_DWORD *)(&OBJC_PROTOCOL___NSObject + 64);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Notifying changes for '%{public}s'", (uint8_t *)v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    unint64_t v6 = v32;
    int64_t v7 = v33;
    id v10 = [self defaultCenter];
    [v10 postNotificationName:v21 object:a2];
  }
  uint64_t v17 = v7 + 5;
  if (v7 + 5 >= v31)
  {
LABEL_28:
    swift_release();
    return;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v7 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v31) {
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v30 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_30:
  __break(1u);
}

uint64_t _s9MusicCore23ApplicationCapabilitiesV7ServiceO8rawValueAESgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_100523FC0;
  v6._object = a2;
  unint64_t v4 = sub_100462490(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xB) {
    return 11;
  }
  else {
    return v4;
  }
}

void sub_1000F27A0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_needsNetworkReachabilityUpdate;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_needsNetworkReachabilityUpdate) & 1) == 0)
  {
    **(unsigned char **)(v0 + 24) = 1;
    *(unsigned char *)(v1 + v2) = 1;
  }
}

uint64_t sub_1000F27CC()
{
  uint64_t v2 = *(void *)(v0 + 32);
  Swift::OpaquePointer v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *Swift::OpaquePointer v3 = v1;
  v3[1] = sub_100012B44;
  void v3[2] = v2;
  return _swift_task_switch(sub_1000EBC28, 0, 0);
}

uint64_t sub_1000F2874(uint64_t a1)
{
  return sub_1000EDD44(a1);
}

unint64_t sub_1000F2880()
{
  unint64_t result = qword_100574BD8;
  if (!qword_100574BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574BD8);
  }
  return result;
}

unint64_t sub_1000F28D8()
{
  unint64_t result = qword_100574BE0;
  if (!qword_100574BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574BE0);
  }
  return result;
}

uint64_t destroy for ApplicationCapabilities(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ApplicationCapabilities(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  uint64_t v5 = *(void **)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ApplicationCapabilities(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 80);
  uint64_t v5 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v5;
  id v6 = v5;

  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ApplicationCapabilities(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplicationCapabilities(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ApplicationCapabilities(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities()
{
  return &type metadata for ApplicationCapabilities;
}

uint64_t getEnumTagSinglePayload for ApplicationCapabilities.Service(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ApplicationCapabilities.Service(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F2E58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.Service()
{
  return &type metadata for ApplicationCapabilities.Service;
}

uint64_t destroy for ApplicationCapabilities.RatingWarning()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ApplicationCapabilities.RatingWarning(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ApplicationCapabilities.RatingWarning(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ApplicationCapabilities.RatingWarning(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplicationCapabilities.RatingWarning(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ApplicationCapabilities.RatingWarning(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.RatingWarning()
{
  return &type metadata for ApplicationCapabilities.RatingWarning;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.SubscriptionState()
{
  return &type metadata for ApplicationCapabilities.SubscriptionState;
}

uint64_t destroy for ApplicationCapabilities.Tabs()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s9MusicCore23ApplicationCapabilitiesV4TabsVwCP_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ApplicationCapabilities.Tabs(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ApplicationCapabilities.Tabs(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ApplicationCapabilities.Tabs(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ApplicationCapabilities.Tabs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.Tabs()
{
  return &type metadata for ApplicationCapabilities.Tabs;
}

uint64_t sub_1000F3294()
{
  return type metadata accessor for ApplicationCapabilities.Controller();
}

uint64_t type metadata accessor for ApplicationCapabilities.Controller()
{
  uint64_t result = qword_100574C20;
  if (!qword_100574C20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000F32E8()
{
  sub_1000F33C4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000F33C4()
{
  if (!qword_100574C30)
  {
    unint64_t v0 = sub_10045D740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100574C30);
    }
  }
}

uint64_t type metadata accessor for ApplicationCapabilities.Controller.ProfileObserver()
{
  return self;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.NotificationNames()
{
  return &type metadata for ApplicationCapabilities.NotificationNames;
}

uint64_t storeEnumTagSinglePayload for ApplicationCapabilities.Tabs.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F351CLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ApplicationCapabilities.Tabs.Configuration()
{
  return &type metadata for ApplicationCapabilities.Tabs.Configuration;
}

uint64_t sub_1000F3554()
{
  return sub_1000ED480(v0);
}

uint64_t sub_1000F3570(uint64_t a1)
{
  id v2 = *(id *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000F35F4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_1000F3674()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1000F36F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)(v1 + 5);
  uint64_t v8 = v1[20];
  unsigned __int8 v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *unsigned __int8 v9 = v2;
  v9[1] = sub_1000117C8;
  return sub_1000ED2D8(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_1000F37C0()
{
  unint64_t result = qword_100574DA0;
  if (!qword_100574DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574DA0);
  }
  return result;
}

uint64_t sub_1000F3814@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_100273F50(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_1000F3830()
{
  unint64_t result = qword_100574DC8;
  if (!qword_100574DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574DC8);
  }
  return result;
}

uint64_t sub_1000F3884(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F38CC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1000F3904()
{
  uint64_t v1 = sub_100005BFC((uint64_t *)&unk_100574E10);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1000F39D4(void *a1)
{
  sub_100005BFC((uint64_t *)&unk_100574E10);

  return sub_1000EE0E0(a1);
}

uint64_t sub_1000F3A4C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000F3A94(uint64_t a1)
{
  return sub_1000FC6E0(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1000F3AA0()
{
  return sub_1000FC90C(*(void *)(v0 + 16));
}

uint64_t sub_1000F3ABC()
{
  return sub_1000EE254(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

void sub_1000F3ADC()
{
  sub_1000EBCC0(v0);
}

uint64_t sub_1000F3AFC()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000F3B3C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100012B44;
  return sub_1000EC2D8(a1, v4, v5, v6);
}

uint64_t sub_1000F3BF0()
{
  return sub_1000EAB24();
}

uint64_t sub_1000F3BF8(char a1, uint64_t (*a2)(uint64_t))
{
  return sub_1000EB3FC(a1, a2);
}

uint64_t sub_1000F3C00(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000F3C10()
{
  return swift_release();
}

uint64_t sub_1000F3C18()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1000F3C50(uint64_t a1)
{
  return sub_1000EB5C8(a1, *(void *)(v1 + 16));
}

unint64_t sub_1000F3C58()
{
  unint64_t result = qword_100574E48;
  if (!qword_100574E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574E48);
  }
  return result;
}

id *sub_1000F3CAC(id *a1)
{
  id v2 = *a1;
  return a1;
}

uint64_t sub_1000F3CD8()
{
  return sub_1000ED5E8();
}

uint64_t sub_1000F3CE0()
{
  return sub_1000ED840(v0, (void (*)(void))sub_1000F3554);
}

uint64_t sub_1000F3D10()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1000F3D50(void *a1)
{
}

id sub_1000F3D58()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = *(void **)(v0 + 24);
  unint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag);
  *(void *)(v1 + OBJC_IVAR____TtCV9MusicCore23ApplicationCapabilities10Controller_storeBag) = v2;

  return v2;
}

unsigned char *_s9MusicCore23ApplicationCapabilitiesV17SubscriptionStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F3E64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s3KeyOMa()
{
  return &_s3KeyON;
}

unint64_t sub_1000F3EA0()
{
  unint64_t result = qword_100574E70;
  if (!qword_100574E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574E70);
  }
  return result;
}

uint64_t sub_1000F3EF4(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v7._uint64_t countAndFlagsBits = a1;
  v7._object = a2;
  unint64_t v5 = sub_100462490(a3, v7);
  swift_bridgeObjectRelease();
  if (v5 >= 4) {
    return 4;
  }
  else {
    return v5;
  }
}

void *BackgroundFetchManager.httpHeader.unsafeMutableAddressor()
{
  return &static BackgroundFetchManager.httpHeader;
}

unint64_t static BackgroundFetchManager.httpHeader.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1000F3F68()
{
  type metadata accessor for BackgroundFetchManager();
  uint64_t result = swift_initStaticObject();
  static BackgroundFetchManager.shared = result;
  return result;
}

uint64_t *BackgroundFetchManager.shared.unsafeMutableAddressor()
{
  if (qword_100570898 != -1) {
    swift_once();
  }
  return &static BackgroundFetchManager.shared;
}

uint64_t static BackgroundFetchManager.shared.getter()
{
  return swift_initStaticObject();
}

uint64_t BackgroundFetchManager.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1000F48B4();
  if (!*(void *)(v6 + 16) || (unint64_t v7 = sub_1000CD178(a1, a2), (v8 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v9 + 16) || (unint64_t v10 = sub_1000CD178(7107189, 0xE300000000000000), (v11 & 1) == 0))
  {
    long long v14 = 0u;
    long long v15 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_100007168(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v14);
  swift_bridgeObjectRelease();
  if (!*((void *)&v15 + 1))
  {
LABEL_10:
    sub_100009790((uint64_t)&v14, (uint64_t *)&unk_100574DB0);
    goto LABEL_11;
  }
  if (swift_dynamicCast())
  {
    sub_10045BDB0();
    return swift_bridgeObjectRelease();
  }
LABEL_11:
  uint64_t v13 = sub_10045BDE0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 1, 1, v13);
}

void (*BackgroundFetchManager.subscript.modify(uint64_t *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  *a1 = a2;
  a1[1] = a3;
  size_t v6 = *(void *)(*(void *)(sub_100005BFC(&qword_100571720) - 8) + 64);
  a1[2] = (uint64_t)malloc(v6);
  unint64_t v7 = malloc(v6);
  a1[3] = (uint64_t)v7;
  BackgroundFetchManager.subscript.getter(a2, a3, (uint64_t)v7);
  return sub_1000F4208;
}

void sub_1000F4208(uint64_t *a1, char a2)
{
  id v2 = (void *)a1[2];
  int v3 = (void *)a1[3];
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  if (a2)
  {
    sub_1000103C8(a1[3], (uint64_t)v2);
    swift_bridgeObjectRetain();
    _s9MusicCore22BackgroundFetchManagerCy10Foundation3URLVSgSScis_0((uint64_t)v2, v5, v4);
    sub_100009790((uint64_t)v3, &qword_100571720);
  }
  else
  {
    swift_bridgeObjectRetain();
    _s9MusicCore22BackgroundFetchManagerCy10Foundation3URLVSgSScis_0((uint64_t)v3, v5, v4);
  }
  free(v3);

  free(v2);
}

Swift::Void __swiftcall BackgroundFetchManager.removeAll()()
{
  id v0 = [self standardUserDefaults];
  id v1 = sub_100460C70();
  [v0 removeObjectForKey:v1];
}

void sub_1000F433C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), int a4, int a5, int a6, dispatch_group_t group)
{
  if (a3) {
    a1 = a3(a1, a2);
  }
  if (a2)
  {
    __chkstk_darwin(a1);
    swift_errorRetain();
    UnfairLock.locked<A>(_:)((void (*)(void))sub_1000F5E04);
    swift_errorRelease();
  }
  dispatch_group_leave(group);
}

uint64_t sub_1000F4410(uint64_t *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = (void *)*a1;
  swift_errorRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a1 = (uint64_t)v4;
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1000518D8(0, v4[2] + 1, 1, v4);
    uint64_t v4 = (void *)result;
    *a1 = result;
  }
  unint64_t v7 = v4[2];
  unint64_t v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    uint64_t result = (uint64_t)sub_1000518D8((void *)(v6 > 1), v7 + 1, 1, v4);
    uint64_t v4 = (void *)result;
    *a1 = result;
  }
  void v4[2] = v7 + 1;
  v4[v7 + 4] = a2;
  return result;
}

uint64_t sub_1000F44E4(uint64_t a1, uint64_t a2, void (*a3)())
{
  return swift_bridgeObjectRelease();
}

void sub_1000F4574()
{
  if (qword_1005708D0 != -1) {
    swift_once();
  }
  sub_100005BFC(&qword_100575170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10000F7F4);
  id v0 = v3;
  if (v3 && (sub_1000F4668(v3, (uint64_t)&v3), v0, (v4 & 1) == 0))
  {
    char v1 = 0;
    uint64_t v2 = (uint64_t)v3;
  }
  else
  {
    char v1 = 1;
    uint64_t v2 = 0x4122750000000000;
  }
  qword_100574E80 = v2;
  byte_100574E88 = v1;
}

uint64_t sub_1000F4668@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100460CB0();
  NSString v4 = sub_100460C70();
  swift_bridgeObjectRelease();
  id v5 = [a1 valueForBagKey:v4];

  if (v5)
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  sub_1000E4750((uint64_t)&v17, (uint64_t)&v15);
  if (!*((void *)&v16 + 1)) {
    goto LABEL_15;
  }
  sub_100005BFC(&qword_10057A900);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_17:
    *(void *)a2 = 0;
    char v14 = 1;
    goto LABEL_18;
  }
  uint64_t v7 = v17;
  if (*(void *)(v17 + 16) && (unint64_t v8 = sub_1000CD178(0xD00000000000001ELL, 0x80000001004910C0), (v9 & 1) != 0))
  {
    sub_100007168(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v16 + 1))
  {
LABEL_15:
    uint64_t v13 = &v15;
LABEL_16:
    uint64_t result = sub_100009790((uint64_t)v13, (uint64_t *)&unk_100574DB0);
    goto LABEL_17;
  }
  sub_100005BFC(&qword_100577470);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v10 = v17;
  sub_1004620C0();
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_1000D9AC0((uint64_t)&v15), (v12 & 1) != 0))
  {
    sub_100007168(*(void *)(v10 + 56) + 32 * v11, (uint64_t)&v17);
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1000CD76C((uint64_t)&v15);
  if (!*((void *)&v18 + 1))
  {
    uint64_t v13 = &v17;
    goto LABEL_16;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    *(void *)a2 = 0;
  }
  char v14 = result ^ 1;
LABEL_18:
  *(unsigned char *)(a2 + 8) = v14;
  return result;
}

uint64_t BackgroundFetchManager.deinit()
{
  return v0;
}

unint64_t sub_1000F48B4()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = sub_100460C70();
  id v2 = [v0 dictionaryForKey:v1];

  if (v2)
  {
    uint64_t v3 = sub_100460A90();

    unint64_t v4 = sub_100272BCC(v3);
    swift_bridgeObjectRelease();
    if (v4) {
      return v4;
    }
  }
  else
  {
  }
  unint64_t v6 = sub_1000CB538((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t _s9MusicCore22BackgroundFetchManagerCy10Foundation3URLVSgSScis_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100005BFC(&qword_100571720);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10045BDE0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000103C8(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100009790((uint64_t)v8, &qword_100571720);
    unint64_t v26 = sub_1000F48B4();
    sub_1001E2098(a2, a3);
    swift_bridgeObjectRelease();
    id v13 = [self standardUserDefaults];
    sub_100005BFC(&qword_10057A900);
    Class isa = sub_100460A70().super.isa;
    swift_bridgeObjectRelease();
    NSString v15 = sub_100460C70();
    [v13 setObject:isa forKey:v15];

    sub_100009790(a1, &qword_100571720);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_100005BFC(&qword_100574E40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1004668E0;
    *(void *)(inited + 32) = 7107189;
    *(void *)(inited + 40) = 0xE300000000000000;
    *(void *)(inited + 48) = sub_10045BCF0();
    *(void *)(inited + 56) = v18;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 80) = 1702125924;
    *(void *)(inited + 88) = 0xE400000000000000;
    *(void *)(inited + 120) = sub_10045C190();
    sub_10002A270((uint64_t *)(inited + 96));
    sub_10045C180();
    unint64_t v19 = sub_1000CB020(inited);
    unint64_t v20 = sub_1000F48B4();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v26 = v20;
    sub_1000CC508(v19, a2, a3, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v22 = [self standardUserDefaults];
    sub_100005BFC(&qword_10057A900);
    Class v23 = sub_100460A70().super.isa;
    swift_bridgeObjectRelease();
    NSString v24 = sub_100460C70();
    [v22 setObject:v23 forKey:v24];

    sub_100009790(a1, &qword_100571720);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t _s9MusicCore22BackgroundFetchManagerC14updateURLCache5queue20onDidReceiveResponse10completionySo012OS_dispatch_H0C_ySo13ICURLResponseCSg_s5Error_pSgtcSgySaysAM_pGctF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v93 = a5;
  uint64_t v92 = a4;
  uint64_t v86 = a3;
  uint64_t v85 = a2;
  uint64_t v97 = a1;
  uint64_t v100 = sub_10045F950();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  id v96 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_10045F980();
  uint64_t v95 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  id v94 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_10045B8D0();
  int64_t v7 = *(void *)(v107 - 8);
  uint64_t v8 = __chkstk_darwin(v107);
  char v91 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v117 = (char *)&v79 - v10;
  uint64_t v11 = sub_100005BFC(&qword_100574980);
  __chkstk_darwin(v11 - 8);
  v116 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_10045C190();
  uint64_t v13 = *(void *)(v118 - 8);
  uint64_t v14 = __chkstk_darwin(v118);
  unint64_t v103 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v109 = (char *)&v79 - v16;
  uint64_t v17 = sub_100005BFC(&qword_100571720);
  __chkstk_darwin(v17 - 8);
  id v110 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_10045BDE0();
  unint64_t v19 = *(long long **)(v121 - 8);
  uint64_t v20 = __chkstk_darwin(v121);
  NSString v90 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v120 = (char *)&v79 - v22;
  dispatch_group_t v106 = dispatch_group_create();
  type metadata accessor for UnfairLock();
  swift_allocObject();
  uint64_t v104 = UnfairLock.init()();
  uint64_t v105 = swift_allocObject();
  *(void *)(v105 + 16) = _swiftEmptyArrayStorage;
  if (qword_1005708A0 != -1) {
LABEL_46:
  }
    swift_once();
  double v23 = *(double *)&qword_100574E80;
  unint64_t v24 = sub_1000F48B4();
  unint64_t v25 = v24;
  int64_t v26 = 0;
  unint64_t v27 = v24 + 64;
  uint64_t v28 = 1 << *(unsigned char *)(v24 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v30 = v29 & *(void *)(v24 + 64);
  v119 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 3);
  v115 = (void (**)(char *, uint64_t, uint64_t))(v19 + 2);
  v114 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  id v111 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  uint64_t v102 = (void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  int64_t v31 = (void (**)(char *, uint64_t))(v13 + 8);
  v113 = (void (**)(char *, uint64_t))v19 + 1;
  uint64_t v89 = (void (**)(char *, char *, uint64_t))(v19 + 1);
  NSString v88 = (void (**)(char *, char *, uint64_t))(v7 + 16);
  unint64_t v19 = &v124;
  uint64_t v101 = (void (**)(char *, uint64_t))(v7 + 8);
  int64_t v7 = (unint64_t)(v28 + 63) >> 6;
  v122 = (char *)&type metadata for Any + 8;
  NSString v87 = (void *)0x8000000100491050;
  uint64_t v13 = (uint64_t)v110;
  id v108 = v31;
  for (i = v7; ; int64_t v7 = i)
  {
    while (1)
    {
      while (1)
      {
        do
        {
          if (v30)
          {
            unint64_t v32 = __clz(__rbit64(v30));
            v30 &= v30 - 1;
            unint64_t v33 = v32 | (v26 << 6);
          }
          else
          {
            int64_t v34 = v26 + 1;
            if (__OFADD__(v26, 1))
            {
              __break(1u);
LABEL_45:
              __break(1u);
              goto LABEL_46;
            }
            if (v34 >= v7) {
              goto LABEL_43;
            }
            unint64_t v35 = *(void *)(v27 + 8 * v34);
            ++v26;
            if (!v35)
            {
              int64_t v26 = v34 + 1;
              if (v34 + 1 >= v7) {
                goto LABEL_43;
              }
              unint64_t v35 = *(void *)(v27 + 8 * v26);
              if (!v35)
              {
                int64_t v26 = v34 + 2;
                if (v34 + 2 >= v7) {
                  goto LABEL_43;
                }
                unint64_t v35 = *(void *)(v27 + 8 * v26);
                if (!v35)
                {
                  int64_t v26 = v34 + 3;
                  if (v34 + 3 >= v7) {
                    goto LABEL_43;
                  }
                  unint64_t v35 = *(void *)(v27 + 8 * v26);
                  if (!v35)
                  {
                    int64_t v36 = v34 + 4;
                    if (v36 >= v7)
                    {
LABEL_43:
                      swift_release();
                      id v71 = (void *)swift_allocObject();
                      uint64_t v72 = v105;
                      v71[2] = v104;
                      v71[3] = v72;
                      uint64_t v73 = v93;
                      v71[4] = v92;
                      v71[5] = v73;
                      v125 = sub_1000F5D44;
                      v126 = v71;
                      *(void *)&long long aBlock = _NSConcreteStackBlock;
                      *((void *)&aBlock + 1) = 1107296256;
                      *(void *)&long long v124 = sub_1000F6CC0;
                      *((void *)&v124 + 1) = &unk_10052DF20;
                      unsigned __int8 v74 = _Block_copy(&aBlock);
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      unsigned __int8 v75 = v94;
                      sub_10045F970();
                      v127 = _swiftEmptyArrayStorage;
                      sub_1000F5D50();
                      sub_100005BFC(&qword_100574A88);
                      sub_1000E613C();
                      long long v76 = v96;
                      uint64_t v77 = v100;
                      sub_100462020();
                      dispatch_group_t v78 = v106;
                      sub_100461890();
                      _Block_release(v74);
                      swift_release();

                      (*(void (**)(char *, uint64_t))(v99 + 8))(v76, v77);
                      (*(void (**)(char *, uint64_t))(v95 + 8))(v75, v98);
                      swift_release();
                      return swift_release();
                    }
                    unint64_t v35 = *(void *)(v27 + 8 * v36);
                    if (!v35)
                    {
                      while (1)
                      {
                        int64_t v26 = v36 + 1;
                        if (__OFADD__(v36, 1)) {
                          goto LABEL_45;
                        }
                        if (v26 >= v7) {
                          goto LABEL_43;
                        }
                        unint64_t v35 = *(void *)(v27 + 8 * v26);
                        ++v36;
                        if (v35) {
                          goto LABEL_23;
                        }
                      }
                    }
                    int64_t v26 = v36;
                  }
                }
              }
            }
LABEL_23:
            unint64_t v30 = (v35 - 1) & v35;
            unint64_t v33 = __clz(__rbit64(v35)) + (v26 << 6);
          }
          uint64_t v37 = *(void *)(*(void *)(v25 + 56) + 8 * v33);
        }
        while (!*(void *)(v37 + 16));
        swift_bridgeObjectRetain();
        unint64_t v38 = sub_1000CD178(7107189, 0xE300000000000000);
        if (v39)
        {
          sub_100007168(*(void *)(v37 + 56) + 32 * v38, (uint64_t)&aBlock);
          if (swift_dynamicCast()) {
            break;
          }
        }
        swift_bridgeObjectRelease();
      }
      char v40 = v19;
      sub_10045BDB0();
      uint64_t v41 = v121;
      swift_bridgeObjectRelease();
      if ((*v119)(v13, 1, v41) != 1) {
        break;
      }
      swift_bridgeObjectRelease();
      sub_100009790(v13, &qword_100571720);
      unint64_t v19 = v40;
    }
    (*v115)(v120, v13, v41);
    uint64_t v42 = v117;
    if (*(void *)(v37 + 16) && (unint64_t v43 = sub_1000CD178(1702125924, 0xE400000000000000), (v44 & 1) != 0))
    {
      sub_100007168(*(void *)(v37 + 56) + 32 * v43, (uint64_t)&aBlock);
    }
    else
    {
      long long aBlock = 0u;
      long long v124 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v124 + 1))
    {
      sub_100009790((uint64_t)&aBlock, (uint64_t *)&unk_100574DB0);
      uint64_t v45 = (uint64_t)v116;
      (*v114)(v116, 1, 1, v118);
      goto LABEL_39;
    }
    uint64_t v45 = (uint64_t)v116;
    uint64_t v46 = v118;
    int v47 = swift_dynamicCast();
    (*v114)((char *)v45, v47 ^ 1u, 1, v46);
    if ((*v111)(v45, 1, v46) != 1) {
      break;
    }
LABEL_39:
    (*v113)(v120, v121);
    sub_100009790(v45, &qword_100574980);
LABEL_40:
    unint64_t v19 = v40;
LABEL_41:
    ;
  }
  unsigned __int8 v48 = v109;
  uint64_t v49 = v118;
  (*v102)(v109, v45, v118);
  uint64_t v50 = v103;
  sub_10045C180();
  sub_10045C040();
  double v52 = v51;
  uint64_t v53 = v49;
  uint64_t v54 = *v108;
  (*v108)(v50, v53);
  if (v52 >= v23)
  {
    v54(v48, v118);
    (*v113)(v120, v121);
    uint64_t v13 = (uint64_t)v110;
    goto LABEL_40;
  }
  id v84 = v54;
  (*v89)(v90, v120, v121);
  sub_10045B8B0();
  v128._uint64_t countAndFlagsBits = 1702195828;
  v128._object = (void *)0xE400000000000000;
  v129._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v129._object = v87;
  sub_10045B8C0(v128, v129);
  uint64_t v55 = v91;
  (*v88)(v91, v42, v107);
  id v56 = objc_allocWithZone((Class)ICMusicKitRequestContext);
  v125 = sub_100134348;
  v126 = 0;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v124 = sub_100123BF8;
  *((void *)&v124 + 1) = &unk_10052DE80;
  char v57 = _Block_copy(&aBlock);
  id v58 = [v56 initWithBlock:v57];
  _Block_release(v57);
  swift_release();
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0)
  {
    id v60 = objc_allocWithZone((Class)ICMusicKitURLRequest);
    Class v61 = sub_10045B8A0();
    id v82 = [v60 initWithURLRequest:v61 requestContext:v58];

    char v80 = v40;
    uint64_t v83 = *v101;
    v83(v55, v107);
    dispatch_group_t v62 = v106;
    dispatch_group_enter(v106);
    id v81 = [self highPrioritySession];
    unsigned __int8 v63 = (void *)swift_allocObject();
    uint64_t v64 = v85;
    uint64_t v65 = v86;
    void v63[2] = v85;
    v63[3] = v65;
    uint64_t v66 = v105;
    v63[4] = v104;
    v63[5] = v66;
    v63[6] = v62;
    v125 = (uint64_t (*)())sub_1000F5CEC;
    v126 = v63;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v124 = sub_1000E1FE0;
    *((void *)&v124 + 1) = &unk_10052DED0;
    long long v67 = _Block_copy(&aBlock);
    uint64_t v79 = v126;
    sub_10004C8E8(v64);
    swift_retain();
    swift_retain();
    unsigned int v68 = v62;
    swift_release();
    id v69 = v81;
    char v70 = v82;
    [v81 enqueueDataRequest:v82 withCompletionHandler:v67];
    _Block_release(v67);

    v83(v117, v107);
    v84(v109, v118);
    (*v113)(v120, v121);
    uint64_t v13 = (uint64_t)v110;
    unint64_t v19 = v80;
    goto LABEL_41;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for BackgroundFetchManager()
{
  return self;
}

uint64_t sub_1000F5C44()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1000F5C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000F5C8C()
{
  return swift_release();
}

uint64_t sub_1000F5C94()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1000F5CEC(uint64_t a1, uint64_t a2)
{
  sub_1000F433C(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(dispatch_group_t *)(v2 + 48));
}

uint64_t sub_1000F5CFC()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000F5D44()
{
  return sub_1000F44E4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)())(v0 + 32));
}

unint64_t sub_1000F5D50()
{
  unint64_t result = qword_100576340;
  if (!qword_100576340)
  {
    sub_10045F950();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100576340);
  }
  return result;
}

uint64_t sub_1000F5DA8@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  swift_beginAccess();
  *a1 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000F5E04()
{
  return sub_1000F4410(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24));
}

Swift::Int sub_1000F5E30()
{
  return sub_100462900();
}

Swift::Int sub_1000F5F1C()
{
  return sub_100462900();
}

Swift::Int sub_1000F5FA4()
{
  return sub_100462900();
}

Swift::Int sub_1000F608C()
{
  return sub_100462900();
}

Swift::Int sub_1000F6194()
{
  return sub_100462900();
}

Swift::Int sub_1000F621C()
{
  return sub_100462900();
}

Swift::Int sub_1000F6304()
{
  return sub_100462900();
}

uint64_t sub_1000F638C()
{
  sub_100460DA0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000F645C()
{
  sub_100460DA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000F6528()
{
  return sub_100462900();
}

Swift::Int sub_1000F662C()
{
  return sub_100462900();
}

Swift::Int sub_1000F66B0()
{
  return sub_100462900();
}

Swift::Int sub_1000F6794()
{
  return sub_100462900();
}

Swift::Int sub_1000F68B0()
{
  return sub_100462900();
}

Swift::Int sub_1000F6934()
{
  return sub_100462900();
}

Swift::Int sub_1000F6A18()
{
  return sub_100462900();
}

Swift::Int sub_1000F6B54()
{
  return sub_100462900();
}

Swift::Int sub_1000F6C3C()
{
  return sub_100462900();
}

uint64_t sub_1000F6CC0(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

id sub_1000F6D04()
{
  type metadata accessor for BackgroundRefreshController();
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = 0;
  v0[3] = 0;
  id result = [objc_allocWithZone((Class)ICCloudClient) init];
  v0[4] = result;
  static BackgroundRefreshController.shared = (uint64_t)v0;
  return result;
}

uint64_t *BackgroundRefreshController.shared.unsafeMutableAddressor()
{
  if (qword_1005708A8 != -1) {
    swift_once();
  }
  return &static BackgroundRefreshController.shared;
}

uint64_t static BackgroundRefreshController.shared.getter()
{
  if (qword_1005708A8 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t CompoundRequestResponseInvalidation.onInvalidation.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  sub_10004C8E8(v1);
  return v1;
}

uint64_t CompoundRequestResponseInvalidation.onInvalidation.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return sub_10004CAE0(v5);
}

uint64_t (*BackgroundRefreshController.performanceMetricsRecorder.modify())()
{
  return j__swift_endAccess;
}

Swift::Void __swiftcall BackgroundRefreshController.registerAllTasks()()
{
  sub_100461770();
  sub_100005BFC(&qword_1005746F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100466900;
  *(void *)(v0 + 56) = &type metadata for String;
  unint64_t v1 = sub_1000D2EC0();
  *(void *)(v0 + 64) = v1;
  *(void *)(v0 + 32) = 0xD00000000000002FLL;
  *(void *)(v0 + 40) = 0x8000000100491140;
  sub_100009854(0, (unint64_t *)&qword_100574700);
  uint64_t v2 = (void *)sub_100461E70();
  sub_10045D1E0();
  swift_bridgeObjectRelease();

  uint64_t v3 = self;
  id v4 = [v3 sharedScheduler];
  NSString v5 = sub_100460C70();
  aBlock[4] = sub_1000F7198;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1000C472C;
  aBlock[3] = &unk_10052DF48;
  uint64_t v6 = _Block_copy(aBlock);
  [v4 registerForTaskWithIdentifier:v5 usingQueue:0 launchHandler:v6];
  _Block_release(v6);

  sub_100461770();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100466900;
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = v1;
  *(void *)(v7 + 32) = 0xD000000000000041;
  *(void *)(v7 + 40) = 0x80000001004911D0;
  uint64_t v8 = (void *)sub_100461E70();
  sub_10045D1E0();
  swift_bridgeObjectRelease();

  id v9 = [v3 sharedScheduler];
  NSString v10 = sub_100460C70();
  [v9 cancelTaskRequestWithIdentifier:v10];
}

uint64_t sub_1000F7198()
{
  if (qword_1005708A8 != -1) {
    swift_once();
  }
  self;
  uint64_t v0 = (void *)swift_dynamicCastObjCClassUnconditional();
  return sub_1000F7218(v0);
}

uint64_t sub_1000F7218(void *a1)
{
  uint64_t v3 = *v1;
  sub_100461770();
  sub_100005BFC(&qword_1005746F0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100466900;
  *(void *)(v4 + 56) = &type metadata for String;
  *(void *)(v4 + 64) = sub_1000D2EC0();
  *(void *)(v4 + 32) = 0xD00000000000002FLL;
  *(void *)(v4 + 40) = 0x8000000100491140;
  sub_100009854(0, (unint64_t *)&qword_100574700);
  NSString v5 = (void *)sub_100461E70();
  sub_10045D1E0();
  swift_bridgeObjectRelease();

  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = v3;
  id v7 = a1;
  sub_1000F8940((uint64_t)sub_1000FB204, v6);

  return swift_release();
}

uint64_t sub_1000F7380(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000F7390()
{
  return swift_release();
}

Swift::Void __swiftcall BackgroundRefreshController.scheduleAllTasks()()
{
  uint64_t v79 = *v0;
  uint64_t v85 = sub_10045F950();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  id v82 = (char *)&v76 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_10045F980();
  uint64_t v81 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  char v80 = (char *)&v76 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100005BFC(&qword_100574980);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v98 = (uint64_t)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v97 = (char *)&v76 - v6;
  uint64_t v7 = sub_10045C190();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  NSString v87 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v89 = (char *)&v76 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v100 = (char *)&v76 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  id v96 = (char *)&v76 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v76 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v76 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v99 = (char *)&v76 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  unint64_t v27 = (char *)&v76 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (ValueMetadata *)((char *)&v76 - v28);
  if (qword_1005708B8 != -1) {
LABEL_46:
  }
    swift_once();
  unint64_t v30 = (char *)off_100574F38;
  sub_10045C030();
  uint64_t v101 = *(void (**)(char *, ValueMetadata *, uint64_t))(v8 + 16);
  uint64_t v102 = v8 + 16;
  v101(v27, v29, v7);
  int64_t v31 = (char *)*((void *)v30 + 2);
  NSString v88 = v31;
  uint64_t v86 = v8;
  if (v31)
  {
    char v91 = v19;
    uint64_t v77 = v29;
    unint64_t v32 = self;
    uint64_t v92 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    id v94 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    id v95 = v32;
    unint64_t v33 = (void (**)(char *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    dispatch_group_t v78 = v30;
    int64_t v34 = v30 + 49;
    unint64_t v103 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
    uint64_t v93 = (v8 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    NSString v90 = (char *)&type metadata for Any + 8;
    unint64_t v35 = v31;
    do
    {
      char v39 = *v34;
      id v40 = [v95 standardUserDefaults];
      LOBYTE(v104) = v39;
      sub_1000FA748();
      sub_10000F810();
      NSUserDefaults.subscript.getter(&aBlock);

      if (v107)
      {
        uint64_t v41 = (uint64_t)v97;
        int v42 = swift_dynamicCast();
        (*v92)(v41, v42 ^ 1u, 1, v7);
      }
      else
      {
        sub_100009790((uint64_t)&aBlock, (uint64_t *)&unk_100574DB0);
        uint64_t v41 = (uint64_t)v97;
        (*v92)((uint64_t)v97, 1, 1, v7);
      }
      uint64_t v43 = v98;
      char v44 = v96;
      uint64_t v45 = v91;
      sub_1000FA79C(v41, v98);
      if ((*v94)(v43, 1, v7) == 1)
      {
        sub_10045C180();
        sub_100009790(v43, &qword_100574980);
      }
      else
      {
        (*v103)(v44, v43, v7);
      }
      sub_100009790(v41, &qword_100574980);
      sub_10045C120();
      uint64_t v46 = v44;
      int v47 = *v33;
      (*v33)(v46, v7);
      unsigned __int8 v48 = v100;
      sub_10045C180();
      if (sub_10045C110())
      {
        uint64_t v49 = v89;
        sub_10045C120();
        v47(v48, v7);
        v47(v45, v7);
        int64_t v36 = *v103;
        (*v103)(v45, (uint64_t)v49, v7);
      }
      else
      {
        v47(v48, v7);
        int64_t v36 = *v103;
      }
      v34 += 24;
      v36(v22, (uint64_t)v45, v7);
      sub_1000FB134(&qword_100574F78, (void (*)(uint64_t))&type metadata accessor for Date);
      if (sub_100460BA0()) {
        uint64_t v37 = v22;
      }
      else {
        uint64_t v37 = v27;
      }
      unint64_t v38 = v99;
      v101(v99, (ValueMetadata *)v37, v7);
      v47(v22, v7);
      v47(v27, v7);
      v36(v27, (uint64_t)v38, v7);
      --v35;
    }
    while (v35);
    unint64_t v30 = v78;
    swift_bridgeObjectRelease();
    uint64_t v8 = v86;
    int64_t v31 = v88;
    uint64_t v29 = v77;
  }
  uint64_t v50 = swift_allocBox();
  double v51 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t v100 = v52;
  v51(v52, v27, v7);
  uint64_t v22 = (char *)(v8 + 8);
  unint64_t v103 = *(void (***)(char *, uint64_t, uint64_t))(v8 + 8);
  ((void (*)(ValueMetadata *, uint64_t))v103)(v29, v7);
  if (!v31)
  {
    char v59 = 0;
    id v60 = v89;
    goto LABEL_36;
  }
  unint64_t v27 = v31;
  uint64_t v99 = (char *)v50;
  uint64_t v53 = v30;
  swift_bridgeObjectRetain();
  LOBYTE(v30) = 0;
  uint64_t v8 = 50;
  uint64_t v29 = &type metadata for BackgroundTaskConfiguration.UserDefaultsKey;
  uint64_t v54 = 1;
  unint64_t v19 = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v30)
    {
      if (v27 == (char *)v54)
      {
        swift_bridgeObjectRelease();
LABEL_33:
        id v60 = v89;
        sub_10045C180();
        Class v61 = v100;
        (*(void (**)(char *, char *, uint64_t))(v86 + 40))(v100, v60, v7);
        char v59 = 1;
        uint64_t v50 = (uint64_t)v99;
        dispatch_group_t v62 = v103;
        goto LABEL_37;
      }
      LOBYTE(v30) = 1;
      goto LABEL_21;
    }
    char v56 = v53[v8];
    id v57 = [self standardUserDefaults];
    LOBYTE(v104) = v56;
    sub_1000FA748();
    sub_10000F810();
    NSUserDefaults.subscript.getter(&aBlock);

    if (!v107)
    {
      sub_100009790((uint64_t)&aBlock, (uint64_t *)&unk_100574DB0);
      unint64_t v27 = v88;
      if (v88 == (char *)v54)
      {
LABEL_34:
        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
      goto LABEL_30;
    }
    char v58 = swift_dynamicCast();
    unint64_t v27 = v88;
    if ((v58 & 1) == 0)
    {
      if (v88 == (char *)v54) {
        goto LABEL_34;
      }
LABEL_30:
      LOBYTE(v30) = 0;
      goto LABEL_21;
    }
    LODWORD(v30) = v104;
    if (v88 == (char *)v54) {
      break;
    }
LABEL_21:
    v8 += 24;
    if (__OFADD__(v54++, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
  }
  swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_33;
  }
LABEL_35:
  char v59 = 0;
  id v60 = v89;
  uint64_t v50 = (uint64_t)v99;
LABEL_36:
  dispatch_group_t v62 = v103;
  Class v61 = v100;
LABEL_37:
  v101(v60, (ValueMetadata *)v61, v7);
  unsigned __int8 v63 = v87;
  sub_10045C030();
  char v64 = sub_10045C110();
  ((void (*)(char *, uint64_t))v62)(v63, v7);
  ((void (*)(char *, uint64_t))v62)(v60, v7);
  if (v59 & 1) != 0 || (v64)
  {
    id v65 = objc_allocWithZone((Class)BGAppRefreshTaskRequest);
    NSString v66 = sub_100460C70();
    id v67 = [v65 initWithIdentifier:v66];

    v101(v60, (ValueMetadata *)v61, v7);
    id v68 = v67;
    Class isa = sub_10045C0F0().super.isa;
    ((void (*)(char *, uint64_t))v62)(v60, v7);
    [v68 setEarliestBeginDate:isa];

    if (qword_1005708B0 != -1) {
      swift_once();
    }
    uint64_t v70 = swift_allocObject();
    *(void *)(v70 + 16) = v68;
    *(void *)(v70 + 24) = v50;
    *(unsigned char *)(v70 + 32) = v59;
    *(void *)(v70 + 40) = v79;
    id v108 = sub_1000FA844;
    uint64_t v109 = v70;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    dispatch_group_t v106 = sub_1000F6CC0;
    uint64_t v107 = &unk_10052DF98;
    id v71 = _Block_copy(&aBlock);
    id v72 = v68;
    swift_retain();
    uint64_t v73 = v80;
    sub_10045F970();
    uint64_t v104 = _swiftEmptyArrayStorage;
    sub_1000FB134((unint64_t *)&qword_100576340, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100005BFC(&qword_100574A88);
    sub_1000FB17C((unint64_t *)&qword_100576350, &qword_100574A88);
    unsigned __int8 v74 = v82;
    uint64_t v75 = v85;
    sub_100462020();
    sub_100461900();
    _Block_release(v71);

    (*(void (**)(char *, uint64_t))(v84 + 8))(v74, v75);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v73, v83);
    swift_release();
  }
  swift_release();
}

void sub_1000F8054(void *a1, uint64_t a2, int a3)
{
  int v38 = a3;
  uint64_t v4 = sub_10045C190();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_projectBox();
  sub_100461770();
  uint64_t v37 = sub_100005BFC(&qword_1005746F0);
  uint64_t v9 = swift_allocObject();
  long long v36 = xmmword_1004668E0;
  *(_OWORD *)(v9 + 16) = xmmword_1004668E0;
  id v10 = [a1 identifier];
  uint64_t v11 = sub_100460CB0();
  uint64_t v13 = v12;

  *(void *)(v9 + 56) = &type metadata for String;
  unint64_t v14 = sub_1000D2EC0();
  *(void *)(v9 + 64) = v14;
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 40) = v13;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_10045C130();
  double v16 = v15;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((~*(void *)&v16 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
  if (v16 >= 9.22337204e18) {
    goto LABEL_12;
  }
  *(void *)(v9 + 96) = &type metadata for Int;
  *(void *)(v9 + 104) = &protocol witness table for Int;
  *(void *)(v9 + 72) = (uint64_t)v16;
  sub_100009854(0, (unint64_t *)&qword_100574700);
  uint64_t v17 = (void *)sub_100461E70();
  sub_10045D1E0();
  swift_bridgeObjectRelease();

  uint64_t v18 = self;
  id v19 = [v18 sharedScheduler];
  id v39 = 0;
  unsigned int v20 = [v19 submitTaskRequest:a1 error:&v39];

  if (v20)
  {
    id v21 = v39;
    if ((v38 & 1) == 0) {
      return;
    }
  }
  else
  {
    id v22 = v39;
    uint64_t v23 = (void *)sub_10045BC90();

    swift_willThrow();
    sub_100461750();
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = v36;
    id v25 = [a1 identifier];
    uint64_t v26 = sub_100460CB0();
    uint64_t v28 = v27;

    *(void *)(v24 + 56) = &type metadata for String;
    *(void *)(v24 + 64) = v14;
    *(void *)(v24 + 32) = v26;
    *(void *)(v24 + 40) = v28;
    id v39 = v23;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v29 = sub_100460D40();
    *(void *)(v24 + 96) = &type metadata for String;
    *(void *)(v24 + 104) = v14;
    *(void *)(v24 + 72) = v29;
    *(void *)(v24 + 80) = v30;
    int64_t v31 = (void *)sub_100461E70();
    sub_10045D1E0();
    swift_bridgeObjectRelease();

    swift_errorRelease();
    if ((v38 & 1) == 0) {
      return;
    }
  }
  sub_100461770();
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_100466900;
  *(void *)(v32 + 56) = &type metadata for String;
  *(void *)(v32 + 64) = v14;
  *(void *)(v32 + 32) = 0xD00000000000002FLL;
  *(void *)(v32 + 40) = 0x8000000100491140;
  unint64_t v33 = (void *)sub_100461E70();
  sub_10045D1E0();
  swift_bridgeObjectRelease();

  id v34 = [v18 sharedScheduler];
  NSString v35 = sub_100460C70();
  [v34 _simulateLaunchForTaskWithIdentifier:v35];
}

uint64_t sub_1000F8514(char a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10045F950();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10045F980();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005708B0 != -1) {
    swift_once();
  }
  v18[0] = qword_100574F30;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(unsigned char *)(v14 + 24) = a1 & 1;
  *(void *)(v14 + 32) = a3;
  aBlock[4] = sub_1000FB4A4;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1000F6CC0;
  aBlock[3] = &unk_10052E260;
  double v15 = _Block_copy(aBlock);
  id v16 = a2;
  sub_10045F970();
  v18[1] = _swiftEmptyArrayStorage;
  sub_1000FB134((unint64_t *)&qword_100576340, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100005BFC(&qword_100574A88);
  sub_1000FB17C((unint64_t *)&qword_100576350, &qword_100574A88);
  sub_100462020();
  sub_100461900();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void sub_1000F8804(void *a1, char a2)
{
  if (a2) {
    uint64_t v2 = 1702195828;
  }
  else {
    uint64_t v2 = 0x65736C6166;
  }
  if (a2) {
    unint64_t v3 = 0xE400000000000000;
  }
  else {
    unint64_t v3 = 0xE500000000000000;
  }
  [a1 setTaskCompletedWithSuccess:a2 & 1];
  sub_100461750();
  sub_100005BFC(&qword_1005746F0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1004668E0;
  *(void *)(v4 + 56) = &type metadata for String;
  unint64_t v5 = sub_1000D2EC0();
  *(void *)(v4 + 32) = 0xD00000000000002FLL;
  *(void *)(v4 + 40) = 0x8000000100491140;
  *(void *)(v4 + 96) = &type metadata for String;
  *(void *)(v4 + 104) = v5;
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 72) = v2;
  *(void *)(v4 + 80) = v3;
  sub_100009854(0, (unint64_t *)&qword_100574700);
  id v6 = (id)sub_100461E70();
  sub_10045D1E0();
  swift_bridgeObjectRelease();
}

uint64_t sub_1000F8940(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = a2;
  uint64_t v64 = a1;
  uint64_t v71 = sub_10045F950();
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  id v68 = (char *)v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10045F980();
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  NSString v66 = (char *)v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100005BFC(&qword_100574980);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v83 = (uint64_t)v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v82 = (char *)v63 - v7;
  uint64_t v8 = sub_10045C190();
  uint64_t v72 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v73 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v81 = (char *)v63 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  NSString v88 = (char *)v63 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  NSString v87 = (char *)v63 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  char v80 = (char *)v63 - v18;
  __chkstk_darwin(v17);
  uint64_t v84 = (char *)v63 - v19;
  if (qword_100570808 != -1) {
    swift_once();
  }
  id v91 = (id)0xEA00000000007265;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  unsigned int v20 = v98;
  uint64_t v21 = v99;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  int v85 = 1;
  id v22 = (void *)0xE900000000000064;
  switch(v21)
  {
    case 1:
      id v22 = (void *)0xE700000000000000;
      goto LABEL_6;
    case 2:
      goto LABEL_7;
    case 3:
      id v22 = (void *)0xEF72656269726373;
      goto LABEL_6;
    default:
LABEL_6:
      int v85 = sub_1004626E0();
      id v91 = v22;
LABEL_7:
      swift_bridgeObjectRelease();
      sub_10045C180();
      dispatch_group_t v23 = dispatch_group_create();
      uint64_t v76 = swift_allocObject();
      *(unsigned char *)(v76 + 16) = 1;
      type metadata accessor for UnfairLock();
      swift_allocObject();
      uint64_t v75 = UnfairLock.init()();
      uint64_t v24 = v88;
      id v25 = v87;
      if (qword_1005708B8 != -1) {
        swift_once();
      }
      uint64_t v26 = (char *)off_100574F38;
      uint64_t v27 = *((void *)off_100574F38 + 2);
      uint64_t v86 = v23;
      if (!v27) {
        goto LABEL_36;
      }
      id v91 = self;
      uint64_t v79 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56);
      dispatch_group_t v78 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
      unint64_t v28 = v72 + 32;
      uint64_t v29 = (void (**)(char *, uint64_t))(v72 + 8);
      swift_bridgeObjectRetain();
      v63[1] = v26;
      uint64_t v30 = v26 + 50;
      uint64_t v89 = (void (**)(char *, uint64_t, uint64_t))v28;
      uint64_t v77 = v28 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      unsigned __int8 v74 = (char *)&type metadata for Any + 8;
      break;
  }
  do
  {
    int v90 = *(v30 - 18);
    double v34 = *(double *)(v30 - 10);
    char v35 = *(v30 - 1);
    char v36 = *v30;
    if ((v85 & 1) != 0 || (*(v30 - 17) & 1) == 0)
    {
      id v38 = [v91 standardUserDefaults];
      LOBYTE(v92) = v35;
      sub_1000FA748();
      sub_10000F810();
      NSUserDefaults.subscript.getter(&aBlock);

      if (v95)
      {
        uint64_t v39 = (uint64_t)v82;
        int v40 = swift_dynamicCast();
        (*v79)(v39, v40 ^ 1u, 1, v8);
      }
      else
      {
        sub_100009790((uint64_t)&aBlock, (uint64_t *)&unk_100574DB0);
        uint64_t v39 = (uint64_t)v82;
        (*v79)((uint64_t)v82, 1, 1, v8);
      }
      uint64_t v41 = v83;
      sub_1000FA79C(v39, v83);
      if ((*v78)(v41, 1, v8) == 1)
      {
        sub_10045C180();
        sub_100009790(v41, &qword_100574980);
      }
      else
      {
        (*v89)(v24, v41, v8);
      }
      sub_100009790(v39, &qword_100574980);
      sub_10045C120();
      int v42 = *v29;
      (*v29)(v24, v8);
      uint64_t v43 = v81;
      sub_10045C180();
      if (sub_10045C110())
      {
        char v44 = v73;
        sub_10045C120();
        v42(v43, v8);
        v42(v25, v8);
        uint64_t v45 = *v89;
        (*v89)(v25, (uint64_t)v44, v8);
      }
      else
      {
        v42(v43, v8);
        uint64_t v45 = *v89;
      }
      uint64_t v46 = v80;
      v45(v80, (uint64_t)v25, v8);
      sub_1000FB134(&qword_100574F78, (void (*)(uint64_t))&type metadata accessor for Date);
      char v37 = sub_100460BA0();
      v42(v46, v8);
    }
    else
    {
      char v37 = 1;
    }
    id v47 = [v91 standardUserDefaults];
    LOBYTE(v92) = v36;
    sub_1000FA748();
    sub_10000F810();
    NSUserDefaults.subscript.getter(&aBlock);

    if (!v95)
    {
      sub_100009790((uint64_t)&aBlock, (uint64_t *)&unk_100574DB0);
LABEL_32:
      char v50 = v37 | (v34 <= 0.0);
      uint64_t v24 = v88;
      id v25 = v87;
      uint64_t v49 = v86;
      if (v50) {
        goto LABEL_13;
      }
      goto LABEL_33;
    }
    if ((swift_dynamicCast() & 1) == 0 || (v92 & 1) == 0) {
      goto LABEL_32;
    }
    id v48 = [v91 standardUserDefaults];
    id v95 = &type metadata for Bool;
    LOBYTE(aBlock) = 0;
    LOBYTE(v92) = v36;
    NSUserDefaults.subscript.setter((uint64_t)&aBlock, (uint64_t)&v92, (uint64_t)&type metadata for BackgroundTaskConfiguration.UserDefaultsKey);

    uint64_t v24 = v88;
    id v25 = v87;
    uint64_t v49 = v86;
LABEL_33:
    dispatch_group_enter(v49);
    if (v90)
    {
      int64_t v31 = (void *)swift_allocObject();
      uint64_t v32 = v76;
      v31[2] = v75;
      v31[3] = v32;
      v31[4] = v49;
      swift_retain();
      swift_retain();
      unint64_t v33 = v49;
      sub_1000F9AD4((uint64_t)sub_1000FB2EC, (uint64_t)v31);
    }
    else
    {
      double v51 = (void *)swift_allocObject();
      uint64_t v52 = v76;
      v51[2] = v75;
      v51[3] = v52;
      v51[4] = v49;
      swift_retain();
      swift_retain();
      uint64_t v53 = v49;
      sub_1000F976C((uint64_t)sub_1000FB6C0, (uint64_t)v51);
    }
    swift_release();
LABEL_13:
    v30 += 24;
    --v27;
  }
  while (v27);
  swift_bridgeObjectRelease();
LABEL_36:
  if (qword_1005708B0 != -1) {
    swift_once();
  }
  uint64_t v54 = (void *)swift_allocObject();
  uint64_t v55 = v76;
  v54[2] = v75;
  v54[3] = v55;
  uint64_t v56 = v65;
  v54[4] = v64;
  v54[5] = v56;
  id v96 = sub_1000FB26C;
  uint64_t v97 = v54;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  id v94 = sub_1000F6CC0;
  id v95 = &unk_10052E148;
  id v57 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  char v58 = v66;
  sub_10045F970();
  uint64_t v92 = _swiftEmptyArrayStorage;
  sub_1000FB134((unint64_t *)&qword_100576340, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100005BFC(&qword_100574A88);
  sub_1000FB17C((unint64_t *)&qword_100576350, &qword_100574A88);
  char v59 = v68;
  uint64_t v60 = v71;
  sub_100462020();
  Class v61 = v86;
  sub_100461890();
  _Block_release(v57);
  swift_release();

  (*(void (**)(char *, uint64_t))(v70 + 8))(v59, v60);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v58, v69);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v84, v8);
  swift_release();
  return swift_release();
}

void sub_1000F968C(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
}

uint64_t sub_1000F9700(unsigned char *a1, char a2)
{
  swift_beginAccess();
  char v4 = *a1 & a2;
  uint64_t result = swift_beginAccess();
  *a1 = v4;
  return result;
}

void sub_1000F976C(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a1;
  uint64_t v3 = sub_10045C190();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005708C0 != -1) {
    swift_once();
  }
  int v7 = word_100574F40;
  char v8 = HIBYTE(word_100574F40);
  uint64_t v9 = qword_100574F48;
  char v10 = word_100574F50;
  char v11 = HIBYTE(word_100574F50);
  HIDWORD(v22) = byte_100574F52;
  sub_10045C180();
  id v12 = [self standardUserDefaults];
  uint64_t v26 = (void *)v3;
  uint64_t v13 = sub_10002A270(aBlock);
  (*(void (**)(uint64_t *, char *, uint64_t))(v4 + 16))(v13, v6, v3);
  char v29 = v11;
  sub_1000FA748();
  sub_10000F810();
  NSUserDefaults.subscript.setter((uint64_t)aBlock, (uint64_t)&v29, (uint64_t)&type metadata for BackgroundTaskConfiguration.UserDefaultsKey);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100461770();
  sub_100005BFC(&qword_1005746F0);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = v14;
  *(_OWORD *)(v14 + 16) = xmmword_100466900;
  if (v7) {
    unint64_t v16 = 0xD000000000000018;
  }
  else {
    unint64_t v16 = 0xD000000000000019;
  }
  if (v7) {
    unint64_t v17 = 0x800000010048DEE0;
  }
  else {
    unint64_t v17 = 0x800000010048DEC0;
  }
  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 64) = sub_1000D2EC0();
  *(void *)(v15 + 32) = v16;
  *(void *)(v15 + 40) = v17;
  sub_100009854(0, (unint64_t *)&qword_100574700);
  uint64_t v18 = (void *)sub_100461E70();
  sub_10045D1E0();
  swift_bridgeObjectRelease();

  uint64_t v19 = *(void **)(v23 + 32);
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = v7;
  *(unsigned char *)(v20 + 17) = v8;
  *(void *)(v20 + 24) = v9;
  *(unsigned char *)(v20 + 32) = v10;
  *(unsigned char *)(v20 + 33) = v11;
  *(unsigned char *)(v20 + 34) = BYTE4(v22);
  *(void *)(v20 + 40) = v24;
  *(void *)(v20 + 48) = a2;
  uint64_t v27 = sub_1000FB37C;
  uint64_t v28 = v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_1001377CC;
  uint64_t v26 = &unk_10052E1E8;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v19 updatePinnedSubscribedPlaylistsWithCompletion:v21];
  _Block_release(v21);
}

uint64_t sub_1000F9AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v26 = a1;
  uint64_t v5 = sub_10045C190();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005708C8 != -1) {
    swift_once();
  }
  int v9 = word_100574F58;
  char v10 = HIBYTE(word_100574F58);
  uint64_t v11 = qword_100574F60;
  char v12 = byte_100574F69;
  int v24 = byte_100574F6A;
  int v25 = byte_100574F68;
  sub_10045C180();
  id v13 = [self standardUserDefaults];
  v28[3] = v5;
  uint64_t v14 = sub_10002A270(v28);
  (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 16))(v14, v8, v5);
  char v27 = v12;
  sub_1000FA748();
  sub_10000F810();
  NSUserDefaults.subscript.setter((uint64_t)v28, (uint64_t)&v27, (uint64_t)&type metadata for BackgroundTaskConfiguration.UserDefaultsKey);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_100461770();
  sub_100005BFC(&qword_1005746F0);
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = v15;
  *(_OWORD *)(v15 + 16) = xmmword_100466900;
  if (v9) {
    unint64_t v17 = 0xD000000000000018;
  }
  else {
    unint64_t v17 = 0xD000000000000019;
  }
  if (v9) {
    unint64_t v18 = 0x800000010048DEE0;
  }
  else {
    unint64_t v18 = 0x800000010048DEC0;
  }
  *(void *)(v15 + 56) = &type metadata for String;
  *(void *)(v15 + 64) = sub_1000D2EC0();
  *(void *)(v16 + 32) = v17;
  *(void *)(v16 + 40) = v18;
  sub_100009854(0, (unint64_t *)&qword_100574700);
  uint64_t v19 = (void *)sub_100461E70();
  sub_10045D1E0();
  swift_bridgeObjectRelease();

  if (qword_100570898 != -1) {
    swift_once();
  }
  if (qword_1005708B0 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_100574F30;
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = v9;
  *(unsigned char *)(v21 + 17) = v10;
  *(void *)(v21 + 24) = v11;
  *(unsigned char *)(v21 + 32) = v25;
  *(unsigned char *)(v21 + 33) = v12;
  *(unsigned char *)(v21 + 34) = v24;
  *(void *)(v21 + 40) = v26;
  *(void *)(v21 + 48) = a2;
  swift_retain();
  swift_retain();
  _s9MusicCore22BackgroundFetchManagerC14updateURLCache5queue20onDidReceiveResponse10completionySo012OS_dispatch_H0C_ySo13ICURLResponseCSg_s5Error_pSgtcSgySaysAM_pGctF_0(v20, (uint64_t)sub_1000FB394, v3, (uint64_t)sub_1000FB39C, v21);
  swift_release();
  return swift_release();
}

uint64_t sub_1000F9E6C(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(BOOL))
{
  unint64_t v7 = 0xD000000000000018;
  if (a1)
  {
    swift_errorRetain();
    sub_100461750();
    sub_100005BFC(&qword_1005746F0);
    uint64_t v8 = swift_allocObject();
    int v9 = (void *)v8;
    *(_OWORD *)(v8 + 16) = xmmword_1004668E0;
    if (a2)
    {
      unint64_t v10 = 0x800000010048DEE0;
    }
    else
    {
      unint64_t v7 = 0xD000000000000019;
      unint64_t v10 = 0x800000010048DEC0;
    }
    *(void *)(v8 + 56) = &type metadata for String;
    unint64_t v11 = sub_1000D2EC0();
    v9[8] = v11;
    v9[4] = v7;
    v9[5] = v10;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v12 = sub_100460D40();
    v9[12] = &type metadata for String;
    v9[13] = v11;
    v9[9] = v12;
    v9[10] = v13;
    sub_100009854(0, (unint64_t *)&qword_100574700);
    uint64_t v14 = (void *)sub_100461E70();
    sub_10045D1E0();
    swift_bridgeObjectRelease();

    swift_errorRelease();
  }
  else
  {
    sub_100461750();
    sub_100005BFC(&qword_1005746F0);
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = v15;
    *(_OWORD *)(v15 + 16) = xmmword_100466900;
    BOOL v17 = (a2 & 1) == 0;
    if (a2) {
      unint64_t v18 = 0xD000000000000018;
    }
    else {
      unint64_t v18 = 0xD000000000000019;
    }
    if (v17) {
      unint64_t v19 = 0x800000010048DEC0;
    }
    else {
      unint64_t v19 = 0x800000010048DEE0;
    }
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_1000D2EC0();
    *(void *)(v16 + 32) = v18;
    *(void *)(v16 + 40) = v19;
    sub_100009854(0, (unint64_t *)&qword_100574700);
    uint64_t v20 = (void *)sub_100461E70();
    sub_10045D1E0();
    swift_bridgeObjectRelease();
  }
  return a4(a1 == 0);
}

uint64_t sub_1000FA0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *(void (**)(uint64_t))(a3 + 16);
  if (v6)
  {
    swift_retain();
    v6(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000FA12C(uint64_t a1, char a2, uint64_t a3, uint64_t (*a4)(void))
{
  sub_100461770();
  sub_100005BFC(&qword_1005746F0);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = (void *)v7;
  *(_OWORD *)(v7 + 16) = xmmword_100466900;
  BOOL v9 = (a2 & 1) == 0;
  if (a2) {
    unint64_t v10 = 0xD000000000000018;
  }
  else {
    unint64_t v10 = 0xD000000000000019;
  }
  if (v9) {
    unint64_t v11 = 0x800000010048DEC0;
  }
  else {
    unint64_t v11 = 0x800000010048DEE0;
  }
  *(void *)(v7 + 56) = &type metadata for String;
  unint64_t v12 = sub_1000D2EC0();
  v8[8] = v12;
  v8[4] = v10;
  v8[5] = v11;
  unint64_t v13 = v11;
  sub_100009854(0, (unint64_t *)&qword_100574700);
  uint64_t v14 = (void *)sub_100461E70();
  sub_10045D1E0();
  swift_bridgeObjectRelease();

  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v22 = a4;
    swift_bridgeObjectRetain();
    uint64_t v16 = 0;
    do
    {
      ++v16;
      swift_errorRetain();
      sub_100461750();
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1004668E0;
      *(void *)(v17 + 56) = &type metadata for String;
      *(void *)(v17 + 64) = v12;
      *(void *)(v17 + 32) = v10;
      *(void *)(v17 + 40) = v13;
      swift_errorRetain();
      sub_100005BFC((uint64_t *)&unk_100575460);
      uint64_t v18 = sub_100460D40();
      *(void *)(v17 + 96) = &type metadata for String;
      *(void *)(v17 + 104) = v12;
      *(void *)(v17 + 72) = v18;
      *(void *)(v17 + 80) = v19;
      uint64_t v20 = (void *)sub_100461E70();
      sub_10045D1E0();
      swift_bridgeObjectRelease();

      swift_errorRelease();
    }
    while (v15 != v16);
    swift_bridgeObjectRelease();
    a4 = v22;
  }
  return a4(v15 == 0);
}

uint64_t sub_1000FA384()
{
  uint64_t v0 = sub_1004618E0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1004618A0();
  __chkstk_darwin(v4);
  uint64_t v5 = sub_10045F980();
  __chkstk_darwin(v5 - 8);
  sub_100009854(0, (unint64_t *)&qword_100576320);
  sub_10045F970();
  v7[1] = _swiftEmptyArrayStorage;
  sub_1000FB134(&qword_100575030, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100005BFC(&qword_100575038);
  sub_1000FB17C(&qword_100575040, &qword_100575038);
  sub_100462020();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = sub_100461920();
  qword_100574F30 = result;
  return result;
}

uint64_t BackgroundRefreshController.deinit()
{
  sub_10004CAE0(*(void *)(v0 + 16));

  return v0;
}

uint64_t BackgroundRefreshController.__deallocating_deinit()
{
  sub_10004CAE0(*(void *)(v0 + 16));

  return swift_deallocClassInstance();
}

double sub_1000FA63C()
{
  sub_100005BFC(&qword_100575048);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1004668E0;
  if (qword_1005708C0 != -1) {
    swift_once();
  }
  char v1 = HIBYTE(word_100574F40);
  uint64_t v2 = qword_100574F48;
  char v3 = word_100574F50;
  __int16 v4 = *(__int16 *)((char *)&word_100574F50 + 1);
  *(unsigned char *)(v0 + 32) = word_100574F40;
  *(unsigned char *)(v0 + 33) = v1;
  *(void *)(v0 + 40) = v2;
  *(unsigned char *)(v0 + 48) = v3;
  *(_WORD *)(v0 + 49) = v4;
  if (qword_1005708C8 != -1) {
    swift_once();
  }
  char v5 = HIBYTE(word_100574F58);
  double result = *(double *)&qword_100574F60;
  char v7 = byte_100574F68;
  __int16 v8 = *(_WORD *)&byte_100574F69;
  *(unsigned char *)(v0 + 56) = word_100574F58;
  *(unsigned char *)(v0 + 57) = v5;
  *(double *)(v0 + 64) = result;
  *(unsigned char *)(v0 + 72) = v7;
  *(_WORD *)(v0 + 73) = v8;
  off_100574F38 = (_UNKNOWN *)v0;
  return result;
}

unint64_t sub_1000FA748()
{
  unint64_t result = qword_100574F70;
  if (!qword_100574F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100574F70);
  }
  return result;
}

uint64_t sub_1000FA79C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005BFC(&qword_100574980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FA804()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1000FA844()
{
  sub_1000F8054(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t type metadata accessor for BackgroundRefreshController()
{
  return self;
}

void *assignWithCopy for BackgroundRefreshController.PerformanceMetricsRecorder(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for BackgroundRefreshController.PerformanceMetricsRecorder(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BackgroundRefreshController.PerformanceMetricsRecorder(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BackgroundRefreshController.PerformanceMetricsRecorder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundRefreshController.PerformanceMetricsRecorder()
{
  return &type metadata for BackgroundRefreshController.PerformanceMetricsRecorder;
}

unsigned char *storeEnumTagSinglePayload for BackgroundTaskConfiguration.UserDefaultsKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FAA48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundTaskConfiguration.UserDefaultsKey()
{
  return &type metadata for BackgroundTaskConfiguration.UserDefaultsKey;
}

unint64_t sub_1000FAA84()
{
  unint64_t result = qword_100575028;
  if (!qword_100575028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575028);
  }
  return result;
}

void sub_1000FAAD8()
{
  if (qword_1005708D0 != -1) {
    swift_once();
  }
  sub_100005BFC(&qword_100575170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10000F7F4);

  word_100574F40 = 256;
  qword_100574F48 = 0x40E5180000000000;
  word_100574F50 = 257;
  byte_100574F52 = 0;
}

void sub_1000FABB0()
{
  if (qword_1005708D0 != -1) {
    swift_once();
  }
  sub_100005BFC(&qword_100575170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10000F7F4);
  uint64_t v0 = v3;
  if (v3 && (sub_1000FACB4(v3, (uint64_t)&v3), v0, (v4 & 1) == 0))
  {
    char v1 = 0;
    uint64_t v2 = (uint64_t)v3;
  }
  else
  {
    char v1 = 1;
    uint64_t v2 = 0x40D5180000000000;
  }
  word_100574F58 = 257;
  qword_100574F60 = v2;
  byte_100574F68 = v1;
  *(_WORD *)&byte_100574F69 = 515;
}

void sub_1000FACB4(void *a1@<X0>, uint64_t a2@<X8>)
{
  NSString v4 = sub_100460C70();
  id v5 = [a1 dictionaryForBagKey:v4];

  if (!v5) {
    goto LABEL_12;
  }
  uint64_t v6 = sub_100460A90();

  unint64_t v7 = sub_10027241C(v6);
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_12;
  }
  if (!*(void *)(v7 + 16) || (unint64_t v8 = sub_1000CD178(0xD00000000000001ELL, 0x80000001004910C0), (v9 & 1) == 0))
  {
    long long v15 = 0u;
    long long v16 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  sub_100007168(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v15);
  swift_bridgeObjectRelease();
  if (!*((void *)&v16 + 1)) {
    goto LABEL_11;
  }
  sub_100005BFC(&qword_10057A900);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    *(void *)a2 = 0;
    char v12 = 1;
    goto LABEL_13;
  }
  if (*(void *)(v14 + 16) && (unint64_t v10 = sub_1000CD178(0xD00000000000001DLL, 0x8000000100491380), (v11 & 1) != 0))
  {
    sub_100007168(*(void *)(v14 + 56) + 32 * v10, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v16 + 1))
  {
LABEL_11:
    sub_100009790((uint64_t)&v15, (uint64_t *)&unk_100574DB0);
    goto LABEL_12;
  }
  char v13 = swift_dynamicCast();
  if ((v13 & 1) == 0) {
    *(void *)a2 = 0;
  }
  char v12 = v13 ^ 1;
LABEL_13:
  *(unsigned char *)(a2 + 8) = v12;
}

unint64_t sub_1000FAE9C(char a1)
{
  unint64_t result = 0xD00000000000002FLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000032;
      break;
    case 2:
      unint64_t result = 0xD000000000000028;
      break;
    case 3:
      unint64_t result = 0xD000000000000027;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000FAF34(char *a1, char *a2)
{
  return sub_100034F84(*a1, *a2);
}

Swift::Int sub_1000FAF40()
{
  return sub_1000F5F1C();
}

uint64_t sub_1000FAF48()
{
  sub_100460DA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000FAFBC()
{
  return sub_1000F68B0();
}

uint64_t sub_1000FAFC4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._uint64_t countAndFlagsBits = *a1;
  int v3 = (void *)a1[1];
  v4._rawValue = &off_1005241E8;
  v8._object = v3;
  Swift::Int v5 = sub_100462490(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_1000FB024(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000018;
  }
  else {
    unint64_t v2 = 0xD000000000000019;
  }
  unint64_t v3 = 0x800000010048DEC0;
  if (*v1) {
    unint64_t v3 = 0x800000010048DEE0;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1000FB068(char *a1, char *a2)
{
  return sub_100034E04(*a1, *a2);
}

Swift::Int sub_1000FB074()
{
  return sub_1000F5FA4();
}

uint64_t sub_1000FB07C()
{
  return sub_1000F645C();
}

Swift::Int sub_1000FB084()
{
  return sub_1000F6934();
}

uint64_t sub_1000FB08C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000FB0E8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1000FB0BC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000FAE9C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1000FB0E8(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_100524238;
  v6._object = a2;
  unint64_t v4 = sub_100462490(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_1000FB134(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000FB17C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005C9C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000FB1CC()
{
  return swift_deallocObject();
}

uint64_t sub_1000FB204(char a1)
{
  return sub_1000F8514(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000FB214()
{
  return swift_deallocObject();
}

uint64_t sub_1000FB224()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000FB26C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 32);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_1000FB414);
  return v1(v3);
}

void sub_1000FB2EC(uint64_t a1)
{
  sub_1000F968C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t sub_1000FB2FC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000FB344()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1000FB37C(uint64_t a1, __n128 a2)
{
  return sub_1000FB3B4(a1, (uint64_t (*)(uint64_t, void, void, void, void, __n128))sub_1000F9E6C, a2);
}

uint64_t sub_1000FB394(uint64_t a1, uint64_t a2)
{
  return sub_1000FA0BC(a1, a2, v2);
}

uint64_t sub_1000FB39C(uint64_t a1, __n128 a2)
{
  return sub_1000FB3B4(a1, (uint64_t (*)(uint64_t, void, void, void, void, __n128))sub_1000FA12C, a2);
}

uint64_t sub_1000FB3B4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, __n128), __n128 a3)
{
  if (*(unsigned char *)(v3 + 17)) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  a3.n128_u64[0] = *(void *)(v3 + 24);
  return a2(a1, v4 | *(unsigned __int8 *)(v3 + 16), *(unsigned __int8 *)(v3 + 32) | (*(unsigned __int8 *)(v3 + 33) << 8) | (*(unsigned __int8 *)(v3 + 34) << 16), *(void *)(v3 + 40), *(void *)(v3 + 48), a3);
}

uint64_t sub_1000FB3F4()
{
  return sub_1000F9700(*(unsigned char **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1000FB414@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(unsigned char **)(v1 + 16);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_1000FB46C()
{
  return swift_deallocObject();
}

void sub_1000FB4A4()
{
  sub_1000F8804(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

__n128 initializeBufferWithCopyOfBuffer for BackgroundTaskConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for BackgroundTaskConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[19]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BackgroundTaskConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 19) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 19) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundTaskConfiguration()
{
  return &type metadata for BackgroundTaskConfiguration;
}

unsigned char *storeEnumTagSinglePayload for BackgroundTaskConfiguration.Identifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FB630);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundTaskConfiguration.Identifier()
{
  return &type metadata for BackgroundTaskConfiguration.Identifier;
}

unint64_t sub_1000FB66C()
{
  unint64_t result = qword_100575050[0];
  if (!qword_100575050[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100575050);
  }
  return result;
}

uint64_t BagControlledValue.init(fallback:reader:)@<X0>(uint64_t a1@<X0>, void (*a2)(void *)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v18 = a1;
  uint64_t v6 = sub_100461EA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(void *)(a3 - 8);
  __chkstk_darwin(v8);
  char v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005708D0 != -1) {
    swift_once();
  }
  sub_100005BFC(&qword_100575170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_10000F7F4);
  uint64_t v14 = v19;
  if (!v19) {
    goto LABEL_6;
  }
  v17(v19);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    *(unsigned char *)(a4 + *(int *)(type metadata accessor for BagControlledValue() + 28)) = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(a4, v18, a3);
  }
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v18, a3);
  long long v16 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v16(v13, v10, a3);
  *(unsigned char *)(a4 + *(int *)(type metadata accessor for BagControlledValue() + 28)) = 0;
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(a4, v13, a3);
}

uint64_t BagControlledValue.source.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

uint64_t type metadata accessor for BagControlledValue()
{
  return sub_100041DA8();
}

uint64_t sub_1000FB9C0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1000FB9DC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1000FBA74(void *a1, void *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
  }
  else
  {
    uint64_t v10 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v4;
}

uint64_t sub_1000FBB48(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1000FBB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 48) + a1) = *(unsigned char *)(*(void *)(v5 + 48) + a2);
  return a1;
}

uint64_t sub_1000FBBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 40) + a1) = *(unsigned char *)(*(void *)(v5 + 40) + a2);
  return a1;
}

uint64_t sub_1000FBC44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 32) + a1) = *(unsigned char *)(*(void *)(v5 + 32) + a2);
  return a1;
}

uint64_t sub_1000FBCAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 24) + a1) = *(unsigned char *)(*(void *)(v5 + 24) + a2);
  return a1;
}

uint64_t sub_1000FBD14(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = v6 + 1;
  char v10 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v5 >= 0xFE) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      unsigned int v15 = *((unsigned __int8 *)a1 + v6);
      if (v15 >= 2) {
        return v15 - 1;
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1000FBE98(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = v9 + 1;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1000FC0D4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 < 0xFE)
        {
          a1[v9] = a2 + 1;
        }
        else
        {
          uint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return;
  }
}

uint64_t sub_1000FC0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

unsigned char *sub_1000FC104(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FC1D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for BagControlledValue.Source()
{
  return sub_100041DA8();
}

uint64_t *BagProvider.shared.unsafeMutableAddressor()
{
  if (qword_1005708D0 != -1) {
    swift_once();
  }
  return &static BagProvider.shared;
}

uint64_t BagProvider.createObserver(handler:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for BagProvider.Observer();
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 32) = 0;
  swift_weakAssign();
  uint64_t v5 = *(void *)(v4 + 24);
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = a2;
  swift_retain();
  sub_10004CAE0(v5);
  UnfairLock.locked<A>(_:)(sub_1000DEE60);
  sub_1000FC9B4(0);
  return v4;
}

uint64_t BagProvider.bag.getter()
{
  sub_100005BFC(&qword_100575170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_1000FCC30);
  return v1;
}

void BagProvider.getBag(completion:)(void (*a1)(), uint64_t a2)
{
  sub_100005BFC(&qword_100575170);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_1000FCC30);
  if (v9)
  {
    a1();
  }
  else
  {
    type metadata accessor for BagProvider.Observer();
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    *(void *)(v4 + 24) = 0;
    *(void *)(v4 + 32) = 0;
    swift_weakAssign();
    uint64_t v5 = swift_allocObject();
    swift_weakInit();
    unsigned int v6 = (void *)swift_allocObject();
    void v6[2] = a1;
    v6[3] = a2;
    v6[4] = v5;
    v6[5] = v4;
    uint64_t v7 = *(void *)(v4 + 24);
    *(void *)(v4 + 24) = sub_1000F3A94;
    *(void *)(v4 + 32) = v6;
    swift_retain();
    swift_retain();
    uint64_t v8 = sub_10004CAE0(v7);
    __chkstk_darwin(v8);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_1000F3AA0);
    sub_1000FC9B4(0);
    swift_release();
  }
}

uint64_t sub_1000FC584()
{
  if (qword_100570960 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static ICClientInfo.music;
  type metadata accessor for BagProvider();
  swift_allocObject();
  uint64_t result = sub_1000FCF38(v0);
  static BagProvider.shared = result;
  return result;
}

uint64_t type metadata accessor for BagProvider.Observer()
{
  return self;
}

uint64_t static BagProvider.shared.getter()
{
  if (qword_1005708D0 != -1) {
    swift_once();
  }

  return swift_retain();
}

unsigned char *sub_1000FC684@<X0>(unsigned char *result@<X0>, void *a2@<X8>)
{
  int v3 = (id *)&result[OBJC_IVAR____TtC9MusicCore11BagProvider_result];
  if (result[OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8] == 1)
  {
    id v4 = *v3;
    uint64_t result = *v3;
  }
  else
  {
    id v4 = 0;
  }
  *a2 = v4;
  return result;
}

uint64_t sub_1000FC6E0(uint64_t a1, void (*a2)(void))
{
  a2();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    uint64_t v3 = swift_release();
    __chkstk_darwin(v3);
    sub_100005BFC((uint64_t *)&unk_1005753F0);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_1000FE6F8);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000FC7D8@<X0>(uint64_t a1@<X1>, BOOL *a2@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_5;
  }
  unsigned int v6 = (unint64_t *)(result + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers);
  swift_beginAccess();
  swift_retain();
  uint64_t v7 = sub_1000FE83C(v6, a1);
  uint64_t result = swift_release();
  if (*v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1004623D0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v8 >= v7) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8 >= v7)
    {
LABEL_4:
      sub_100053D88(v7, v8);
      swift_endAccess();
      uint64_t result = swift_release();
LABEL_5:
      *a2 = v5 == 0;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000FC90C(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers);
  swift_beginAccess();
  swift_retain();
  sub_100461070();
  if (*(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1004610F0();
  }
  sub_100461150();
  sub_1004610C0();
  return swift_endAccess();
}

void sub_1000FC9B4(char a1)
{
  uint64_t v2 = v1;
  UnfairLock.locked<A>(_:)((void (*)(void))sub_1000FEB58);
  if (LOBYTE(aBlock[0]) == 1)
  {
    UnfairLock.locked<A>(_:)(sub_1000FEB90);
    id v4 = [self activeAccount];
    id v5 = [objc_allocWithZone((Class)ICStoreRequestContext) initWithIdentity:v4 clientInfo:*(void *)(v1 + 16)];

    id v6 = [self sharedBagProvider];
    aBlock[4] = sub_1000FEBA4;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1000E1FE0;
    uint64_t aBlock[3] = &unk_10052E548;
    uint64_t v7 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v6 getBagForRequestContext:v5 forceRefetch:a1 & 1 withCompletionHandler:v7];
    _Block_release(v7);
  }
}

void sub_1000FCB74(uint64_t a1, uint64_t a2, void **a3)
{
  swift_beginAccess();
  sub_100005BFC(&qword_1005753E8);
  WeakArray.append(_:)();
  swift_endAccess();
  id v5 = 0;
  id v6 = (id *)(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8) == 1)
  {
    id v5 = *v6;
    id v7 = *v6;
  }
  uint64_t v8 = *a3;
  *a3 = v5;
}

id sub_1000FCC30@<X0>(void *a1@<X8>)
{
  return sub_1000FCC48(a1);
}

id sub_1000FCC48@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (id *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8) == 1)
  {
    id v4 = *v3;
    id result = *v3;
  }
  else
  {
    id v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1000FCCA4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1000FCCDC()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

id BagProvider.clientInfo.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_1000FCD2C@<X0>(char *a1@<X8>)
{
  uint64_t v3 = sub_100005BFC(&qword_100575180);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v14[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC9MusicCore11BagProvider____lazy_storage___signpost;
  swift_beginAccess();
  sub_1000FEC5C(v9, (uint64_t)v8);
  uint64_t v10 = type metadata accessor for Signpost();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return sub_1000FED90((uint64_t)v8, (uint64_t)a1);
  }
  sub_1000FE2C8((uint64_t)v8);
  if (qword_100570918 != -1) {
    swift_once();
  }
  id v12 = (id)static OS_os_log.musicBag;
  swift_retain();
  Signpost.init(name:object:log:)((uint64_t)"Bag", 3, 2, v12, a1);
  sub_1000FECC4((uint64_t)a1, (uint64_t)v6);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1000FED28((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_1000FCF38(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Signpost();
  __chkstk_darwin(v4);
  id v6 = (char *)&v24[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 56))(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider____lazy_storage___signpost, 1, 1);
  *(void *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_bindings) = &_swiftEmptyArrayStorage;
  uint64_t v8 = OBJC_IVAR____TtC9MusicCore11BagProvider_lock;
  type metadata accessor for UnfairLock();
  swift_allocObject();
  *(void *)(v1 + v8) = UnfairLock.init()();
  *(void *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_singleFireObservers) = &_swiftEmptyArrayStorage;
  uint64_t v9 = OBJC_IVAR____TtC9MusicCore11BagProvider_durableObservers;
  uint64_t v10 = type metadata accessor for BagProvider.Observer();
  *(void *)(v2 + v9) = WeakArray.init(_:)((uint64_t)&_swiftEmptyArrayStorage, v10);
  if (qword_100570918 != -1) {
    swift_once();
  }
  id v11 = (id)static OS_os_log.musicBag;
  sub_10045D320();
  *(unsigned char *)(v2 + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching) = 0;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC9MusicCore11BagProvider_deferReload) = 0;
  uint64_t v12 = OBJC_IVAR____TtC9MusicCore11BagProvider_retry;
  *(void *)(v2 + v12) = [objc_allocWithZone((Class)type metadata accessor for BagProvider.Retry()) init];
  *(void *)(v2 + 16) = a1;
  uint64_t v13 = v2 + OBJC_IVAR____TtC9MusicCore11BagProvider_result;
  *(void *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 8) = 2;
  id v14 = a1;
  sub_1000FCD2C(v6);
  Signpost.begin(dso:)((uint64_t)&_mh_execute_header);
  sub_1000FEBF0((uint64_t)v6);
  sub_1000FC9B4(0);
  type metadata accessor for Whitetail.Binding();
  if (qword_1005708D8 != -1) {
    swift_once();
  }
  unsigned int v16 = (void *)qword_100575160;
  uint64_t v17 = qword_100575160;
  CFIndex location = CFRange.init(_:)(*(__C::_NSRange *)(&v15 - 1)).location;
  _OWORD v24[3] = &type metadata for DistributedNotificationTrigger;
  v24[4] = &protocol witness table for DistributedNotificationTrigger;
  v24[0] = location;
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  id v20 = v16;
  Whitetail.Binding.__allocating_init(_:needsInitialConfiguration:configurationBlock:)((uint64_t)v24, 0, (uint64_t)sub_1000FEDF4, v19);
  uint64_t v21 = (void *)(v2 + OBJC_IVAR____TtC9MusicCore11BagProvider_bindings);
  swift_beginAccess();
  swift_retain();
  sub_100461070();
  if (*(void *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1004610F0();
  }
  sub_100461150();
  sub_1004610C0();
  swift_endAccess();
  swift_release();

  return v2;
}

uint64_t sub_1000FD290()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000FD2E8();
    return swift_release();
  }
  return result;
}

void sub_1000FD2E8()
{
  UnfairLock.locked<A>(_:)((void (*)(void))sub_1000FEDFC);

  if (v5 == 1)
  {
    UnfairLock.locked<A>(_:)(sub_1000FEE40);
    __chkstk_darwin(v0);
    UnfairLock.locked<A>(_:)(sub_1000FEBD8);
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_10045D2F0();
    os_log_type_t v2 = sub_100461770();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Notification triggered to update bag: storefrontChanged", v3, 2u);
      swift_slowDealloc();
    }

    sub_1000FC9B4(1);
  }
}

void sub_1000FD488(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Signpost();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a3 + OBJC_IVAR____TtC9MusicCore11BagProvider_lock);
  UnfairLock.locked<A>(_:)((void (*)(void))sub_1000FEBC4);
  if (v27)
  {
    sub_1000FC9B4(1);
    id v11 = sub_1000FEE84;
LABEL_20:
    UnfairLock.locked<A>(_:)(v11);
    return;
  }
  uint64_t v12 = a1;
  if (!a1)
  {
    if (!a2) {
      goto LABEL_22;
    }
    swift_errorRetain();
    uint64_t v12 = (void *)sub_10045BC80();
    uint64_t v10 = swift_errorRelease();
  }
  unint64_t v27 = (unint64_t)&_swiftEmptyArrayStorage;
  __chkstk_darwin(v10);
  v24[-4] = a3;
  v24[-3] = v12;
  LOBYTE(v22) = v13;
  BYTE1(v22) = 1;
  uint64_t v23 = (void **)&v27;
  id v14 = a1;
  UnfairLock.locked<A>(_:)(sub_1000FEBD8);
  if (!a1)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    sub_1000FCD2C(v8);
    Signpost.end(dso:)((uint64_t)&_mh_execute_header);

    sub_1000FEBF0((uint64_t)v8);
    id v11 = sub_1000FEC4C;
    goto LABEL_20;
  }
  unint64_t v15 = v27;
  int v25 = v8;
  uint64_t v26 = v9;
  v24[1] = (char *)&type metadata for () + 8;
  if (v27 >> 62)
  {
    id v21 = v12;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1004623D0();
    if (v16) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
  uint64_t v16 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v17 = v12;
  swift_bridgeObjectRetain();
  if (!v16)
  {
LABEL_18:

    swift_bridgeObjectRelease();
    uint64_t v8 = v25;
    goto LABEL_19;
  }
LABEL_9:
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    while ((v15 & 0xC000000000000001) == 0)
    {
      uint64_t v20 = *(void *)(v15 + 8 * v18 + 32);
      swift_retain();
      uint64_t v19 = *(void (**)(void *))(v20 + 24);
      if (v19) {
        goto LABEL_16;
      }
LABEL_11:
      ++v18;
      swift_release();
      if (v16 == v18) {
        goto LABEL_18;
      }
    }
    uint64_t v19 = *(void (**)(void *))(sub_100462170() + 24);
    if (!v19) {
      goto LABEL_11;
    }
LABEL_16:
    swift_retain();
    v19(v12);
    sub_10004CAE0((uint64_t)v19);
    goto LABEL_11;
  }
  __break(1u);
LABEL_22:
  LODWORD(v23) = 0;
  uint64_t v22 = 149;
  sub_100462350();
  __break(1u);
}

uint64_t sub_1000FD7E4()
{
  return swift_endAccess();
}

void sub_1000FD860()
{
  uint64_t v1 = v0;
  os_log_type_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8))
  {
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8) != 1) {
      return;
    }
    id v3 = v2;
    uint64_t v4 = sub_10045D2F0();
    os_log_type_t v5 = sub_100461770();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Successfully loaded a bag from iTunesCloud", v6, 2u);
      swift_slowDealloc();
    }

    uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_retry);
    uint64_t Strong = swift_weakLoadStrong();
    swift_weakAssign();
    id v9 = v7;
    sub_1000FDD74(Strong);
  }
  else
  {
    id v10 = v2;
    id v11 = sub_10045D2F0();
    os_log_type_t v12 = sub_100461750();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 134217984;
      *(void *)(v13 + 4) = [v10 code];

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Error retrieving bag: %ld", (uint8_t *)v13, 0xCu);
      swift_slowDealloc();
    }
    else
    {
    }
    id v14 = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_retry);
    uint64_t v15 = swift_weakLoadStrong();
    swift_weakAssign();
    id v16 = v14;
    swift_retain();
    sub_1000FDD74(v15);

    swift_release();
  }

  swift_release();
}

void sub_1000FDAB4(uint64_t a1, void *a2, char a3, char a4, uint64_t *a5)
{
  uint64_t v7 = a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result;
  uint64_t v8 = *(void **)(a1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  *(void *)uint64_t v7 = a2;
  *(unsigned char *)(v7 + 8) = a3;
  id v9 = a2;

  sub_1000FD860();
  if (a4)
  {
    swift_beginAccess();
    type metadata accessor for BagProvider.Observer();
    swift_bridgeObjectRetain();
    uint64_t v10 = WeakArray.allElements.getter();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    unint64_t v11 = swift_bridgeObjectRetain();
    sub_1000B95C8(v11);
    *a5 = v10;
    swift_bridgeObjectRelease();
  }
}

uint64_t BagProvider.Observer.deinit()
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    __chkstk_darwin(Strong);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_1000FDC84);
    swift_release();
  }
  swift_weakDestroy();
  sub_10004CAE0(*(void *)(v0 + 24));
  return v0;
}

uint64_t sub_1000FDC84()
{
  return sub_1000FD7E4();
}

uint64_t BagProvider.Observer.__deallocating_deinit()
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    __chkstk_darwin(Strong);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_1000FEEA0);
    swift_release();
  }
  swift_weakDestroy();
  sub_10004CAE0(*(void *)(v0 + 24));
  return swift_deallocClassInstance();
}

void sub_1000FDD74(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10045D310();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v12 = Strong;
  if (!a1)
  {
    if (!Strong) {
      return;
    }
    swift_release();
LABEL_7:
    uint64_t v13 = swift_weakLoadStrong();
    swift_release();
    uint64_t v14 = swift_weakLoadStrong();
    if (v13)
    {
      if (v14)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v14 + OBJC_IVAR____TtC9MusicCore11BagProvider_logger, v4);
        swift_release();
        uint64_t v15 = sub_10045D2F0();
        os_log_type_t v16 = sub_100461770();
        if (!os_log_type_enabled(v15, v16))
        {
          uint64_t v18 = &selRef_registerObserver_;
          goto LABEL_19;
        }
        id v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Beginning observation to retry loading bag", v17, 2u);
        uint64_t v18 = &selRef_registerObserver_;
LABEL_14:
        swift_slowDealloc();
LABEL_19:

        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
        goto LABEL_20;
      }
      uint64_t v18 = &selRef_registerObserver_;
    }
    else
    {
      if (v14)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v14 + OBJC_IVAR____TtC9MusicCore11BagProvider_logger, v4);
        swift_release();
        uint64_t v15 = sub_10045D2F0();
        os_log_type_t v19 = sub_100461770();
        if (!os_log_type_enabled(v15, v19))
        {
          uint64_t v18 = &selRef_unregisterObserver_;
          uint64_t v10 = v8;
          goto LABEL_19;
        }
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v19, "Stopping observation to retry loading bag", v20, 2u);
        uint64_t v18 = &selRef_unregisterObserver_;
        uint64_t v10 = v8;
        goto LABEL_14;
      }
      uint64_t v18 = &selRef_unregisterObserver_;
    }
LABEL_20:
    id v21 = [self sharedMonitor];
    [v21 *v18 v2];

    return;
  }
  if (!Strong) {
    goto LABEL_7;
  }
  swift_release();
  if (v12 != a1) {
    goto LABEL_7;
  }
}

id sub_1000FE168()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BagProvider.Retry();
  return [super dealloc];
}

uint64_t BagProvider.deinit()
{
  sub_1000FE2C8(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider____lazy_storage___signpost);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_logger;
  uint64_t v2 = sub_10045D310();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_1000FE2C8(uint64_t a1)
{
  uint64_t v2 = sub_100005BFC(&qword_100575180);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t BagProvider.__deallocating_deinit()
{
  BagProvider.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1000FE380()
{
  return type metadata accessor for BagProvider();
}

uint64_t type metadata accessor for BagProvider()
{
  uint64_t result = qword_1005751F0;
  if (!qword_1005751F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000FE3D4()
{
  sub_1000FE4E8();
  if (v0 <= 0x3F)
  {
    sub_10045D310();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1000FE4E8()
{
  if (!qword_100575200)
  {
    type metadata accessor for Signpost();
    unint64_t v0 = sub_100461EA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100575200);
    }
  }
}

uint64_t type metadata accessor for BagProvider.Retry()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for BagProvider.Result(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for BagProvider.Result(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t initializeWithTake for BagProvider.Result(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for BagProvider.Result(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for BagProvider.Result(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BagProvider.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000FE6B8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1000FE6D0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BagProvider.Result()
{
  return &type metadata for BagProvider.Result;
}

uint64_t sub_1000FE6F8@<X0>(BOOL *a1@<X8>)
{
  return sub_1000FC7D8(*(void *)(v1 + 24), a1);
}

NSString sub_1000FE714()
{
  NSString result = sub_100460C70();
  qword_100575160 = (uint64_t)result;
  return result;
}

uint64_t sub_1000FE74C(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    uint64_t v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = sub_100462170();
        swift_unknownObjectRelease();
        if (v6 == a2) {
          return v5;
        }
      }
      else if (*(void *)(a1 + 8 * v5 + 32) == a2)
      {
        return v5;
      }
      if (__OFADD__(v5, 1)) {
        break;
      }
      if (++v5 == v4) {
        return 0;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1004623D0();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1000FE83C(unint64_t *a1, uint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_1000FE74C(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (v2) {
    return v6;
  }
  if ((v8 & 1) == 0)
  {
    unint64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_54;
    }
    if (*a1 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1004623D0();
      swift_bridgeObjectRelease();
      if (v9 != v22) {
        goto LABEL_6;
      }
    }
    else if (v9 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      for (unint64_t i = v6 + 5; ; ++i)
      {
        unint64_t v11 = i - 4;
        unint64_t v12 = *a1;
        if ((*a1 & 0xC000000000000001) != 0) {
          break;
        }
        if ((v11 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        if (v11 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_45;
        }
        if (*(void *)(v12 + 8 * i) != a2) {
          goto LABEL_11;
        }
LABEL_31:
        unint64_t v9 = i - 3;
        if (__OFADD__(v11, 1)) {
          goto LABEL_46;
        }
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v18 = sub_1004623D0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v18 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v18) {
          return v6;
        }
      }
      uint64_t v19 = sub_100462170();
      swift_unknownObjectRelease();
      if (v19 == a2) {
        goto LABEL_31;
      }
LABEL_11:
      if (v11 == v6)
      {
LABEL_30:
        if (__OFADD__(v6++, 1)) {
          goto LABEL_47;
        }
        goto LABEL_31;
      }
      unint64_t v9 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        uint64_t v13 = sub_100462170();
        unint64_t v9 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_16:
          if ((v11 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          uint64_t v14 = *(void *)(v9 + 8 * i);
          swift_retain();
          goto LABEL_19;
        }
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (v6 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_49;
        }
        uint64_t v13 = *(void *)(v9 + 8 * v6 + 32);
        swift_retain();
        if ((v9 & 0xC000000000000001) == 0) {
          goto LABEL_16;
        }
      }
      uint64_t v14 = sub_100462170();
      unint64_t v9 = *a1;
LABEL_19:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v9 & 0x8000000000000000) != 0
        || (v9 & 0x4000000000000000) != 0)
      {
        unint64_t v9 = sub_100223194(v9);
        *a1 = v9;
      }
      *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v14;
      swift_release();
      sub_1004610C0();
      unint64_t v9 = *a1;
      int v16 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v9;
      if (!v16 || (v9 & 0x8000000000000000) != 0 || (v9 & 0x4000000000000000) != 0)
      {
        unint64_t v9 = sub_100223194(v9);
        *a1 = v9;
      }
      if ((v11 & 0x8000000000000000) != 0) {
        goto LABEL_52;
      }
      if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_53;
      }
      *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v13;
      swift_release();
      sub_1004610C0();
      goto LABEL_30;
    }
    return v6;
  }
  unint64_t v20 = *a1;
  if (!(v20 >> 62)) {
    return *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1004623D0();
  swift_bridgeObjectRelease();
  return v23;
}

void sub_1000FEB58(BOOL *a1@<X8>)
{
  *a1 = (*(unsigned char *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching) & 1) == 0
     && *(unsigned char *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8) != 1;
}

void sub_1000FEB90()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching) = 1;
}

void sub_1000FEBA4(void *a1, uint64_t a2)
{
  sub_1000FD488(a1, a2, v2);
}

uint64_t sub_1000FEBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000FEBBC()
{
  return swift_release();
}

void sub_1000FEBC4(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_deferReload);
}

void sub_1000FEBD8()
{
}

uint64_t sub_1000FEBF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Signpost();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1000FEC4C()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching) = 0;
}

uint64_t sub_1000FEC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005BFC(&qword_100575180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FECC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Signpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FED28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005BFC(&qword_100575180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FED90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Signpost();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FEDF4()
{
  return sub_1000FD290();
}

id sub_1000FEDFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result);
  char v3 = *(unsigned char *)(v1 + OBJC_IVAR____TtC9MusicCore11BagProvider_result + 8);
  *(void *)a1 = v2;
  *(unsigned char *)(a1 + 8) = v3;
  return v2;
}

void sub_1000FEE40()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC9MusicCore11BagProvider_deferReload) = *(unsigned char *)(v0
                                                                                  + OBJC_IVAR____TtC9MusicCore11BagProvider_isFetching);
}

void sub_1000FEE5C()
{
  sub_1000FDAB4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32), *(unsigned char *)(v0 + 33), *(uint64_t **)(v0 + 40));
}

void sub_1000FEE84()
{
}

uint64_t sub_1000FEEA0()
{
  return sub_1000FDC84();
}

uint64_t TabIdentifier.rawValue.getter(char a1)
{
  uint64_t result = 0x7972617262696CLL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6F4E6E657473696CLL;
      break;
    case 2:
      uint64_t result = 0x6573776F7262;
      break;
    case 3:
      uint64_t result = 0x6F69646172;
      break;
    case 4:
      uint64_t result = 0x686372616573;
      break;
    case 5:
      uint64_t result = 0x736F65646976;
      break;
    default:
      return result;
  }
  return result;
}

_UNKNOWN **static TabIdentifier.allCases.getter()
{
  return &off_100524368;
}

uint64_t sub_1000FEF88(unsigned __int8 *a1, char *a2)
{
  return sub_100035034(*a1, *a2);
}

Swift::Int sub_1000FEF94()
{
  return sub_1000F608C();
}

uint64_t sub_1000FEF9C()
{
  sub_100460DA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000FF08C()
{
  return sub_1000F6528();
}

uint64_t sub_1000FF094@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s9MusicCore13TabIdentifierO8rawValueACSgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1000FF0C4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x7972617262696CLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000077;
      uint64_t v3 = 0x6F4E6E657473696CLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x6573776F7262;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x6F69646172;
      a1[1] = 0xE500000000000000;
      break;
    case 4:
      *a1 = 0x686372616573;
      a1[1] = 0xE600000000000000;
      break;
    case 5:
      *a1 = 0x736F65646976;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

void sub_1000FF194(void *a1@<X8>)
{
  *a1 = &off_100524368;
}

uint64_t sub_1000FF1A4(unsigned __int8 *a1, char *a2)
{
  return sub_100035228(*a1, *a2);
}

Swift::Int sub_1000FF1B0()
{
  return sub_1000F6794();
}

uint64_t sub_1000FF1BC()
{
  sub_100460DA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000FF2C4()
{
  return sub_1000F6794();
}

uint64_t sub_1000FF2CC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000FF3E4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1000FF2FC(void *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x636973756D5F796DLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x756F795F726F66;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E5F6E657473696CLL;
      a1[1] = 0xEA0000000000776FLL;
      return;
    case 3:
      *a1 = 0x6573776F7262;
      a1[1] = 0xE600000000000000;
      return;
    case 4:
      uint64_t v4 = 1768186226;
      goto LABEL_9;
    case 5:
      *a1 = 0x686372616573;
      a1[1] = 0xE600000000000000;
      return;
    case 6:
      uint64_t v4 = 1701079414;
LABEL_9:
      *a1 = v4 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1000FF3E4(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_100522728;
  v6._object = a2;
  unint64_t v4 = sub_100462490(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 7) {
    return 7;
  }
  else {
    return v4;
  }
}

uint64_t _s9MusicCore13TabIdentifierO8rawValueACSgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_1005242B8;
  v6._object = a2;
  unint64_t v4 = sub_100462490(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 6) {
    return 6;
  }
  else {
    return v4;
  }
}

unint64_t sub_1000FF480()
{
  unint64_t result = qword_100575400;
  if (!qword_100575400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575400);
  }
  return result;
}

unint64_t sub_1000FF4D8()
{
  unint64_t result = qword_100575408;
  if (!qword_100575408)
  {
    sub_100005C9C(&qword_100575410);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575408);
  }
  return result;
}

unint64_t sub_1000FF538()
{
  unint64_t result = qword_100575418;
  if (!qword_100575418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575418);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TabIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FF658);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TabIdentifier()
{
  return &type metadata for TabIdentifier;
}

uint64_t getEnumTagSinglePayload for BagTabIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BagTabIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000FF7ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BagTabIdentifier()
{
  return &type metadata for BagTabIdentifier;
}

unint64_t sub_1000FF828()
{
  unint64_t result = qword_100575420;
  if (!qword_100575420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575420);
  }
  return result;
}

uint64_t Playlist.hasActiveCollaboration.getter()
{
  uint64_t v0 = sub_100005BFC(&qword_100575450);
  __chkstk_darwin(v0 - 8);
  int v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100005BFC(&qword_100575458);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  unsigned int v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v8 = (char *)&v19 - v7;
  sub_100460700();
  uint64_t v9 = sub_1004606F0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v2, 1, v9) == 1)
  {
    sub_100009790((uint64_t)v2, &qword_100575450);
    uint64_t v11 = sub_100460650();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
LABEL_13:
    uint64_t v17 = 0;
    goto LABEL_14;
  }
  sub_1004606D0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v2, v9);
  uint64_t v12 = sub_100460650();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1) {
    goto LABEL_13;
  }
  sub_100019ABC((uint64_t)v8, (uint64_t)v6, &qword_100575458);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v6, v12);
  if (v14 != enum case for Playlist.Collaborator.Status.host(_:)
    && v14 != enum case for Playlist.Collaborator.Status.joined(_:)
    && v14 != enum case for Playlist.Collaborator.Status.pending(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v12);
    goto LABEL_13;
  }
  uint64_t v17 = 1;
LABEL_14:
  sub_100009790((uint64_t)v8, &qword_100575458);
  return v17;
}

uint64_t static Collaboration.Setup.contextualImageName(active:)(char a1)
{
  if (a1) {
    return 0x322E6E6F73726570;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_1000FFB78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000FFBF4(a1, a2, a3);
}

uint64_t sub_1000FFBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000FFDC0(a1, a2, a3, (uint64_t)&unk_10052EA20, (uint64_t *)&unk_1005753F0);
}

uint64_t sub_1000FFBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000FFBF4(a1, a2, a3);
}

uint64_t sub_1000FFBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1004612C0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1004612B0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100009790(a1, &qword_100574B80);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_100461200();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1000FFD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000FFDC0(a1, a2, a3, (uint64_t)&unk_10052E930, &qword_100575758);
}

uint64_t sub_1000FFDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = sub_1004612C0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    sub_1004612B0();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_100009790(a1, &qword_100574B80);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_100461200();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  sub_100005BFC(a5);
  return swift_task_create();
}

uint64_t sub_1000FFF70(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1004628B0();
    ApplicationCapabilities.Service.rawValue.getter(a1);
    sub_100460DA0();
    swift_bridgeObjectRelease();
    Swift::Int v4 = sub_100462900();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE500000000000000;
        unint64_t v10 = 0x636973756DLL;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v10 = 0x646956636973756DLL;
            unint64_t v9 = 0xEB00000000736F65;
            break;
          case 2:
            unint64_t v9 = 0x800000010048DDA0;
            goto LABEL_13;
          case 3:
            unint64_t v9 = 0xE600000000000000;
            unint64_t v10 = 0x6C6169636F73;
            break;
          case 4:
            unint64_t v10 = 0x6F69646172;
            break;
          case 5:
            unint64_t v9 = 0xE600000000000000;
            unint64_t v10 = 0x73656E757469;
            break;
          case 6:
            unint64_t v10 = 0x74634170756F7267;
            unint64_t v9 = 0xED00007974697669;
            break;
          case 7:
            unint64_t v10 = 0x746963696C707865;
            unint64_t v9 = 0xEF746E65746E6F43;
            break;
          case 8:
            unint64_t v9 = 0x800000010048DDE0;
LABEL_13:
            unint64_t v10 = 0xD000000000000013;
            break;
          case 9:
            unint64_t v10 = 0xD000000000000011;
            unint64_t v9 = 0x800000010048DE00;
            break;
          case 0xA:
            unint64_t v10 = 0x6C62616E45696C6DLL;
            unint64_t v9 = 0xEA00000000006465;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE500000000000000;
        unint64_t v12 = 0x636973756DLL;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xEB00000000736F65;
            if (v10 == 0x646956636973756DLL) {
              goto LABEL_35;
            }
            goto LABEL_36;
          case 2:
            unint64_t v11 = 0x800000010048DDA0;
            goto LABEL_31;
          case 3:
            unint64_t v11 = 0xE600000000000000;
            if (v10 != 0x6C6169636F73) {
              goto LABEL_36;
            }
            goto LABEL_35;
          case 4:
            if (v10 != 0x6F69646172) {
              goto LABEL_36;
            }
            goto LABEL_35;
          case 5:
            unint64_t v11 = 0xE600000000000000;
            if (v10 != 0x73656E757469) {
              goto LABEL_36;
            }
            goto LABEL_35;
          case 6:
            unint64_t v11 = 0xED00007974697669;
            if (v10 != 0x74634170756F7267) {
              goto LABEL_36;
            }
            goto LABEL_35;
          case 7:
            unint64_t v11 = 0xEF746E65746E6F43;
            if (v10 != 0x746963696C707865) {
              goto LABEL_36;
            }
            goto LABEL_35;
          case 8:
            unint64_t v11 = 0x800000010048DDE0;
LABEL_31:
            if (v10 != 0xD000000000000013) {
              goto LABEL_36;
            }
            goto LABEL_35;
          case 9:
            unint64_t v12 = 0xD000000000000011;
            unint64_t v11 = 0x800000010048DE00;
            goto LABEL_34;
          case 10:
            unint64_t v11 = 0xEA00000000006465;
            if (v10 != 0x6C62616E45696C6DLL) {
              goto LABEL_36;
            }
            goto LABEL_35;
          default:
LABEL_34:
            if (v10 != v12) {
              goto LABEL_36;
            }
LABEL_35:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v13 = 1;
              return v13 & 1;
            }
LABEL_36:
            char v13 = sub_1004626E0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v13) {
              return v13 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v13 & 1;
            }
            break;
        }
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_1001003A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1004628B0();
    sub_100460DA0();
    Swift::Int v6 = sub_100462900();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1004626E0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          int v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1004626E0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1001004D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100460120();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::Int v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_10010D198(&qword_1005757A0, (void (*)(uint64_t))&type metadata accessor for AudioVariant),
        uint64_t v7 = sub_100460B20(),
        uint64_t v8 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v9 = v7 & ~v8,
        uint64_t v10 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0))
  {
    uint64_t v17 = ~v8;
    uint64_t v18 = a2;
    uint64_t v11 = v4 + 16;
    BOOL v12 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      v12(v6, *(void *)(v18 + 48) + v13 * v9, v3);
      sub_10010D198(&qword_1005757A8, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
      char v15 = sub_100460BD0();
      (*v14)(v6, v3);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v17;
    }
    while (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1001006EC(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1004628B0();
    Library.Menu.Identifier.rawValue.getter(a1);
    sub_100460DA0();
    swift_bridgeObjectRelease();
    Swift::Int v4 = sub_100462900();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xD000000000000029;
        unint64_t v10 = 0x800000010048D3C0;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v9 = 0xD000000000000025;
            uint64_t v11 = "LibraryView.RecentlyAdded";
            goto LABEL_18;
          case 2:
            unint64_t v9 = 0xD000000000000023;
            uint64_t v11 = "LibraryView.Playlists";
            goto LABEL_18;
          case 3:
            unint64_t v9 = 0xD000000000000022;
            uint64_t v11 = "LibraryView.Artists";
            goto LABEL_18;
          case 4:
            BOOL v12 = "LibraryView.Albums";
            goto LABEL_15;
          case 5:
            unint64_t v9 = 0xD000000000000026;
            uint64_t v11 = "LibraryView.Songs";
            goto LABEL_18;
          case 6:
            unint64_t v9 = 0xD000000000000027;
            uint64_t v11 = "LibraryView.MadeForYou";
            goto LABEL_18;
          case 7:
            unint64_t v9 = 0xD000000000000022;
            uint64_t v11 = "LibraryView.MusicVideos";
            goto LABEL_18;
          case 8:
            unint64_t v9 = 0xD000000000000028;
            uint64_t v11 = "LibraryView.Genres";
            goto LABEL_18;
          case 9:
            unint64_t v9 = 0xD000000000000025;
            uint64_t v11 = "LibraryView.Compilations";
            goto LABEL_18;
          case 0xA:
            BOOL v12 = "LibraryView.Composers";
LABEL_15:
            unint64_t v10 = (unint64_t)v12 | 0x8000000000000000;
            unint64_t v9 = 0xD000000000000021;
            break;
          case 0xB:
            unint64_t v9 = 0xD000000000000026;
            uint64_t v11 = "LibraryView.Shows";
            goto LABEL_18;
          case 0xC:
            unint64_t v9 = 0xD000000000000027;
            uint64_t v11 = "LibraryView.Downloaded";
LABEL_18:
            unint64_t v10 = (unint64_t)v11 | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xD000000000000029;
        unint64_t v14 = 0x800000010048D3C0;
        switch(v8)
        {
          case 1:
            unint64_t v15 = 0xD000000000000025;
            int v16 = "LibraryView.RecentlyAdded";
            goto LABEL_35;
          case 2:
            unint64_t v15 = 0xD000000000000023;
            int v16 = "LibraryView.Playlists";
            goto LABEL_35;
          case 3:
            unint64_t v15 = 0xD000000000000022;
            int v16 = "LibraryView.Artists";
            goto LABEL_35;
          case 4:
            uint64_t v17 = "LibraryView.Albums";
            goto LABEL_30;
          case 5:
            unint64_t v15 = 0xD000000000000026;
            int v16 = "LibraryView.Songs";
            goto LABEL_35;
          case 6:
            unint64_t v15 = 0xD000000000000027;
            int v16 = "LibraryView.MadeForYou";
            goto LABEL_35;
          case 7:
            unint64_t v15 = 0xD000000000000022;
            int v16 = "LibraryView.MusicVideos";
            goto LABEL_35;
          case 8:
            unint64_t v15 = 0xD000000000000028;
            int v16 = "LibraryView.Genres";
            goto LABEL_35;
          case 9:
            unint64_t v15 = 0xD000000000000025;
            int v16 = "LibraryView.Compilations";
            goto LABEL_35;
          case 10:
            uint64_t v17 = "LibraryView.Composers";
LABEL_30:
            unint64_t v14 = (unint64_t)v17 | 0x8000000000000000;
            unint64_t v13 = 0xD000000000000021;
            goto LABEL_31;
          case 11:
            unint64_t v15 = 0xD000000000000026;
            int v16 = "LibraryView.Shows";
            goto LABEL_35;
          case 12:
            unint64_t v15 = 0xD000000000000027;
            int v16 = "LibraryView.Downloaded";
LABEL_35:
            unint64_t v14 = (unint64_t)v16 | 0x8000000000000000;
            if (v9 == v15) {
              goto LABEL_36;
            }
            goto LABEL_37;
          default:
LABEL_31:
            if (v9 != v13) {
              goto LABEL_37;
            }
LABEL_36:
            if (v10 == v14)
            {
              swift_bridgeObjectRelease_n();
              char v18 = 1;
              return v18 & 1;
            }
LABEL_37:
            char v18 = sub_1004626E0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v18) {
              return v18 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v18 & 1;
            }
            break;
        }
      }
    }
  }
  char v18 = 0;
  return v18 & 1;
}

uint64_t sub_100100AD0(int a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_1004628B0();
  SortOptions.ContentType.identifier.getter(a1);
  sub_100460DA0();
  swift_bridgeObjectRelease();
  Swift::Int v4 = sub_100462900();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v7 = ~v5;
  while (1)
  {
    unsigned int v8 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v6);
    unsigned int v9 = v8 >> 6;
    if (!(v8 >> 6))
    {
      if (a1 < 0x40u)
      {
        if (((v8 ^ a1) & 1) == 0) {
          return 1;
        }
        goto LABEL_5;
      }
      goto LABEL_18;
    }
    if (v9 != 1) {
      break;
    }
    if ((a1 & 0xC0) == 0x40)
    {
      if (((v8 ^ a1) & 0x3F) == 0) {
        return 1;
      }
      goto LABEL_5;
    }
LABEL_18:
    sub_1004628B0();
    sub_100460DA0();
    swift_bridgeObjectRelease();
    Swift::Int v10 = sub_100462900();
    sub_1004628B0();
    sub_100460DA0();
    swift_bridgeObjectRelease();
    if (v10 == sub_100462900()) {
      return 1;
    }
LABEL_5:
    unint64_t v6 = (v6 + 1) & v7;
    if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      return 0;
    }
  }
  if (v9 != 3 || v8 != 192 || a1 != 192) {
    goto LABEL_18;
  }
  return 1;
}

BOOL sub_1001010A4(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Swift::UInt v3 = a1;
  sub_1004628B0();
  sub_1004628C0(v3);
  Swift::Int v4 = sub_100462900();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

void sub_100101194()
{
  type metadata accessor for Collaboration.ArtworkCachingReference();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0xD000000000000027;
  *(void *)(v0 + 24) = 0x800000010048E3A0;
  uint64_t v1 = self;
  NSString v2 = sub_100460C70();
  [v1 setCacheLimit:100 forCacheIdentifier:v2 cacheReference:v0];

  static Collaboration.artworkCaching = v0;
}

uint64_t *Collaboration.artworkCaching.unsafeMutableAddressor()
{
  if (qword_1005708E0 != -1) {
    swift_once();
  }
  return &static Collaboration.artworkCaching;
}

uint64_t static Collaboration.artworkCaching.getter()
{
  if (qword_1005708E0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static Collaboration.artworkCaching.setter(uint64_t a1)
{
  if (qword_1005708E0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static Collaboration.artworkCaching = a1;
  return swift_release();
}

uint64_t (*static Collaboration.artworkCaching.modify())()
{
  if (qword_1005708E0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static Collaboration.Setup.imageName(active:)(char a1)
{
  if (a1) {
    return 0x322E6E6F73726570;
  }
  else {
    return 0xD000000000000016;
  }
}

unint64_t Collaboration.Error.errorDescription.getter(uint64_t a1, void *a2, char a3)
{
  switch(a3)
  {
    case 1:
      unint64_t v9 = 0;
      swift_errorRetain();
      sub_100462120(17);
      v11._uint64_t countAndFlagsBits = 0x74694B636973754DLL;
      v11._object = (void *)0xEF3D726F72726520;
      sub_100460E50(v11);
      sub_100005BFC((uint64_t *)&unk_100575460);
      sub_1004622D0();
      uint64_t v5 = a1;
      uint64_t v6 = (uint64_t)a2;
      unsigned __int8 v7 = 1;
      goto LABEL_4;
    case 2:
      sub_100462120(38);
      swift_bridgeObjectRelease();
      unint64_t v9 = 0xD000000000000024;
      v12._uint64_t countAndFlagsBits = a1;
      v12._object = a2;
      sub_100460E50(v12);
      return v9;
    case 3:
      unint64_t result = 0x636120726F6E694DLL;
      switch(a1)
      {
        case 1:
          unint64_t result = 0xD000000000000017;
          break;
        case 2:
          unint64_t result = 0xD000000000000024;
          break;
        case 3:
          unint64_t result = 0xD000000000000018;
          break;
        case 4:
          unint64_t result = 0xD000000000000018;
          break;
        case 5:
          unint64_t result = 0xD000000000000016;
          break;
        case 6:
          unint64_t result = 0xD000000000000019;
          break;
        case 7:
          unint64_t result = 0xD00000000000001DLL;
          break;
        case 8:
          unint64_t result = 0xD000000000000032;
          break;
        case 9:
          unint64_t result = 0x73736F7020746F4ELL;
          break;
        default:
          return result;
      }
      return result;
    default:
      unint64_t v9 = 0;
      swift_errorRetain();
      sub_100462120(25);
      v10._object = (void *)0x8000000100491820;
      v10._uint64_t countAndFlagsBits = 0xD000000000000017;
      sub_100460E50(v10);
      sub_100005BFC((uint64_t *)&unk_100575460);
      sub_1004622D0();
      uint64_t v5 = a1;
      uint64_t v6 = (uint64_t)a2;
      unsigned __int8 v7 = 0;
LABEL_4:
      sub_10010AC1C(v5, v6, v7);
      return v9;
  }
}

uint64_t static Collaboration.Error.tapToRadarAlert()()
{
  uint64_t v0 = sub_100005BFC(&qword_100574B80);
  uint64_t result = __chkstk_darwin(v0 - 8);
  Swift::UInt v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1005710B8 != -1) {
    uint64_t result = swift_once();
  }
  if (static DeviceCapabilities.isInternalInstall == 1)
  {
    unint64_t v4 = sub_1000CB29C((uint64_t)_swiftEmptyArrayStorage);
    sub_100119694(0x800000010048F920, (unint64_t)_swiftEmptyArrayStorage, v4, (void (*)(char *, char *, uint64_t))_swiftEmptyArrayStorage, 1, (uint64_t)v8);
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1004612C0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = 0;
    *(void *)(v6 + 24) = 0;
    sub_10010AF88((uint64_t)v8, v6 + 32);
    sub_1000FFDC0((uint64_t)v3, (uint64_t)&unk_100575480, v6, (uint64_t)&unk_10052EA20, (uint64_t *)&unk_1005753F0);
    return swift_release();
  }
  return result;
}

uint64_t sub_10010193C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 72) = a1;
  *(void *)(v4 + 80) = a4;
  return _swift_task_switch(sub_10010195C, 0, 0);
}

uint64_t sub_10010195C()
{
  sub_10010AF88(*(void *)(v0 + 80), v0 + 16);
  if (*(void *)(v0 + 24) && (uint64_t v1 = *(int **)(v0 + 56)) != 0)
  {
    uint64_t v5 = (uint64_t (*)(void))((char *)v1 + *v1);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100101A7C;
    return v5();
  }
  else
  {
    **(unsigned char **)(v0 + 72) = 1;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_100101A7C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100101B78, 0, 0);
}

uint64_t sub_100101B78()
{
  **(unsigned char **)(v0 + 72) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100101B94()
{
  return Collaboration.Error.errorDescription.getter(*(void *)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t Collaboration.Manager.__allocating_init(coordinator:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_100017FD4(a1, v2 + 16);
  return v2;
}

uint64_t Collaboration.Manager.init(coordinator:)(long long *a1)
{
  sub_100017FD4(a1, v1 + 16);
  return v1;
}

uint64_t GroupActivitiesManager.coordinator.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_10002FA38(v1 + 16, a1);
}

id Collaboration.Manager.participantProfile.getter()
{
  id v0 = [self shared];
  id v1 = [v0 activeUserState];

  id v2 = [v1 music];
  id v3 = [v2 userProfile];

  return v3;
}

void Collaboration.Manager.supportsCollaboration(for:)()
{
}

void Collaboration.Manager.canCollaborate(for:)()
{
  if (qword_100570808 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  id v0 = v8;
  if ((v7 & 1) == 0)
  {
    sub_10010B4C4();
    swift_allocError();
    uint64_t v2 = 3;
LABEL_10:
    *(void *)uint64_t v1 = v2;
    goto LABEL_11;
  }
  if (!v6)
  {
    sub_10010B4C4();
    swift_allocError();
    uint64_t v2 = 6;
    goto LABEL_10;
  }
  id v3 = [self sharedCloudController];
  if (v3)
  {
    uint64_t v4 = v3;
    unsigned __int8 v5 = [v3 isInitialImport];

    if (v5)
    {
      sub_10010B4C4();
      swift_allocError();
      *(void *)uint64_t v1 = 7;
      id v0 = v8;
LABEL_11:
      *(void *)(v1 + 8) = 0;
      *(unsigned char *)(v1 + 16) = 3;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t Collaboration.Manager.isCollaborationPossible(for:)()
{
  return 1;
}

uint64_t Logger.collaboration.unsafeMutableAddressor()
{
  if (qword_1005708E8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10045D310();

  return sub_100009688(v0, (uint64_t)static Logger.collaboration);
}

uint64_t *Collaboration.Manager.DeepLinkType.actionKey.unsafeMutableAddressor()
{
  return &static Collaboration.Manager.DeepLinkType.actionKey;
}

uint64_t static Collaboration.Manager.DeepLinkType.actionKey.getter()
{
  return sub_100102210(&static Collaboration.Manager.DeepLinkType.actionKey);
}

uint64_t static Collaboration.Manager.DeepLinkType.actionKey.setter(uint64_t a1, uint64_t a2)
{
  return sub_100102274(a1, a2, &static Collaboration.Manager.DeepLinkType.actionKey, &qword_100575438);
}

uint64_t (*static Collaboration.Manager.DeepLinkType.actionKey.modify())()
{
  return j_j__swift_endAccess;
}

void *Collaboration.Manager.DeepLinkType.profileKey.unsafeMutableAddressor()
{
  return &static Collaboration.Manager.DeepLinkType.profileKey;
}

uint64_t static Collaboration.Manager.DeepLinkType.profileKey.getter()
{
  return sub_100102210((uint64_t *)&static Collaboration.Manager.DeepLinkType.profileKey);
}

uint64_t sub_100102210(uint64_t *a1)
{
  swift_beginAccess();
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static Collaboration.Manager.DeepLinkType.profileKey.setter(uint64_t a1, uint64_t a2)
{
  return sub_100102274(a1, a2, static Collaboration.Manager.DeepLinkType.profileKey, &static Collaboration.Manager.DeepLinkType.profileKey[1]);
}

uint64_t sub_100102274(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Collaboration.Manager.DeepLinkType.profileKey.modify())()
{
  return j_j__swift_endAccess;
}

MusicCore::Collaboration::Manager::DeepLinkType_optional __swiftcall Collaboration.Manager.DeepLinkType.init(_:)(Swift::OpaquePointer a1)
{
  swift_beginAccess();
  if (!*((void *)a1._rawValue + 2)) {
    goto LABEL_10;
  }
  uint64_t v2 = qword_100575438;
  uint64_t v3 = static Collaboration.Manager.DeepLinkType.actionKey;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1000CD178(v3, v2);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    return (MusicCore::Collaboration::Manager::DeepLinkType_optional)2;
  }
  char v6 = (uint64_t *)(*((void *)a1._rawValue + 7) + 16 * v4);
  uint64_t v7 = *v6;
  uint64_t v8 = (void *)v6[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9._rawValue = &off_100524390;
  v13._uint64_t countAndFlagsBits = v7;
  v13._object = v8;
  Swift::Int v10 = sub_100462490(v9, v13);
  swift_bridgeObjectRelease();
  if (v10 == 1) {
    v11.value = MusicCore_Collaboration_Manager_DeepLinkType_pending;
  }
  else {
    v11.value = MusicCore_Collaboration_Manager_DeepLinkType_unknownDefault;
  }
  if (v10) {
    return v11;
  }
  else {
    return 0;
  }
}

MusicCore::Collaboration::Manager::DeepLinkType_optional __swiftcall Collaboration.Manager.DeepLinkType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v6._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._rawValue = &off_100524390;
  v6._object = object;
  Swift::Int v3 = sub_100462490(v2, v6);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = MusicCore_Collaboration_Manager_DeepLinkType_pending;
  }
  else {
    v4.value = MusicCore_Collaboration_Manager_DeepLinkType_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t Collaboration.Manager.DeepLinkType.rawValue.getter(char a1)
{
  if (a1) {
    return 0x676E69646E6570;
  }
  else {
    return 1852403562;
  }
}

uint64_t sub_100102498(char *a1, char *a2)
{
  return sub_1000358F0(*a1, *a2);
}

Swift::Int sub_1001024A4()
{
  return sub_100462900();
}

uint64_t sub_100102520()
{
  sub_100460DA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100102588()
{
  return sub_100462900();
}

uint64_t sub_100102600@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._uint64_t countAndFlagsBits = *a1;
  Swift::Int v3 = (void *)a1[1];
  v4._rawValue = &off_100524390;
  v8._object = v3;
  Swift::Int v5 = sub_100462490(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_100102660(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1852403562;
  if (*v1) {
    uint64_t v2 = 0x676E69646E6570;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t Collaboration.Manager.queryItemsDictionary(for:)()
{
  uint64_t v0 = sub_100005BFC(&qword_100575490);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10045BAD0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10045BA40();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_100009790((uint64_t)v2, &qword_100575490);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  uint64_t v7 = URLComponents.queryItemsDictionary.getter();
  if (v7)
  {
    Swift::Int v8 = sub_10010AC44((uint64_t)&off_1005243E0);
    swift_arrayDestroy();
    swift_beginAccess();
    if (*(void *)(v7 + 16))
    {
      uint64_t v9 = qword_100575438;
      uint64_t v10 = static Collaboration.Manager.DeepLinkType.actionKey;
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_1000CD178(v10, v9);
      if (v12)
      {
        Swift::String v13 = (uint64_t *)(*(void *)(v7 + 56) + 16 * v11);
        uint64_t v14 = *v13;
        uint64_t v15 = v13[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        char v16 = sub_1001003A0(v14, v15, v8);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        swift_bridgeObjectRelease();
        if (v16) {
          return v7;
        }
        goto LABEL_11;
      }
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

uint64_t Collaboration.Manager.start(_:isOpen:)(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 200) = a3;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = a2;
  sub_100005BFC(&qword_100575450);
  *(void *)(v3 + 40) = swift_task_alloc();
  sub_100005BFC(&qword_100571720);
  *(void *)(v3 + 48) = swift_task_alloc();
  uint64_t v4 = sub_1004606B0();
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = *(void *)(v4 - 8);
  *(void *)(v3 + 72) = swift_task_alloc();
  uint64_t v5 = sub_1004608E0();
  *(void *)(v3 + 80) = v5;
  *(void *)(v3 + 88) = *(void *)(v5 - 8);
  *(void *)(v3 + 96) = swift_task_alloc();
  *(void *)(v3 + 104) = swift_task_alloc();
  uint64_t v6 = sub_10045CB80();
  *(void *)(v3 + 112) = v6;
  *(void *)(v3 + 120) = *(void *)(v6 - 8);
  *(void *)(v3 + 128) = swift_task_alloc();
  sub_100461280();
  *(void *)(v3 + 136) = sub_100461270();
  uint64_t v8 = sub_100461200();
  *(void *)(v3 + 144) = v8;
  *(void *)(v3 + 152) = v7;
  return _swift_task_switch(sub_100102B58, v8, v7);
}

uint64_t sub_100102B58()
{
  if (qword_1005708E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10045D310();
  *(void *)(v0 + 160) = sub_100009688(v1, (uint64_t)static Logger.collaboration);
  uint64_t v2 = sub_10045D2F0();
  os_log_type_t v3 = sub_100461770();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 200);
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67240192;
    *(_DWORD *)(v5 + 4) = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Start called - isOpenInvite=%{BOOL,public}d", (uint8_t *)v5, 8u);
    swift_slowDealloc();
  }
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v10 = *(void *)(v0 + 64);
  uint64_t v9 = *(void *)(v0 + 72);
  uint64_t v11 = *(void *)(v0 + 56);
  int v12 = *(unsigned __int8 *)(v0 + 200);
  uint64_t v13 = *(void *)(v0 + 32);

  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  *(void *)(v0 + 168) = v14;
  *(void *)(v0 + 176) = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v14(v6, v13, v7);
  uint64_t v15 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.open(_:);
  if (!v12) {
    uint64_t v15 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.requiresApproval(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v9, *v15, v11);
  sub_10045CB60();
  char v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v16;
  *char v16 = v0;
  v16[1] = sub_100102D68;
  uint64_t v17 = *(void *)(v0 + 24);
  return MusicCollaborativePlaylist.StartCollaborationRequest.response()(v17);
}

uint64_t sub_100102D68()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v5 = sub_100103470;
  }
  else {
    uint64_t v5 = sub_100102EA4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100102EA4()
{
  int v42 = v0;
  uint64_t v1 = v0[5];
  swift_release();
  sub_100460700();
  uint64_t v2 = sub_1004606F0();
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v6 = v0[5];
  uint64_t v5 = v0[6];
  if (v4 == 1)
  {
    sub_100009790(v0[5], &qword_100575450);
    uint64_t v7 = sub_10045BDE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
LABEL_4:
    uint64_t v9 = (void (*)(uint64_t, uint64_t, uint64_t))v0[21];
    uint64_t v10 = v0[12];
    uint64_t v11 = v0[10];
    uint64_t v12 = v0[3];
    sub_100009790(v0[6], &qword_100571720);
    v9(v10, v12, v11);
    uint64_t v13 = sub_10045D2F0();
    os_log_type_t v14 = sub_100461750();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v17 = v0[11];
    uint64_t v16 = v0[12];
    uint64_t v18 = v0[10];
    if (v15)
    {
      uint64_t v19 = swift_slowAlloc();
      v41[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136446210;
      sub_10010D198(&qword_1005734E0, (void (*)(uint64_t))&type metadata accessor for Playlist);
      uint64_t v20 = sub_100462660();
      *(void *)(v19 + 4) = sub_10001FCAC(v20, v21, v41);
      swift_bridgeObjectRelease();
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v22(v16, v18);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "invitationURL missing for=%{public}s", (uint8_t *)v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v22(v0[12], v0[10]);
    }
    uint64_t v23 = v0[10];
    uint64_t v24 = v0[3];
    sub_10010B4C4();
    uint64_t v25 = swift_allocError();
    *(_OWORD *)uint64_t v26 = xmmword_100466920;
    *(unsigned char *)(v26 + 16) = 3;
    swift_willThrow();
    v22(v24, v23);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v27 = sub_10045D2F0();
    os_log_type_t v28 = sub_100461750();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      v41[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136446210;
      v0[2] = v25;
      swift_errorRetain();
      sub_100005BFC((uint64_t *)&unk_100575460);
      uint64_t v30 = sub_100460D40();
      *(void *)(v29 + 4) = sub_10001FCAC(v30, v31, v41);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Start failed with error=%{public}s", (uint8_t *)v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v33 = v0[15];
    uint64_t v32 = v0[16];
    uint64_t v34 = v0[14];
    swift_allocError();
    *(void *)uint64_t v35 = v25;
    *(void *)(v35 + 8) = 0;
    *(unsigned char *)(v35 + 16) = 1;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v36 = (uint64_t (*)(void))v0[1];
    goto LABEL_12;
  }
  sub_1004606A0();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  uint64_t v8 = sub_10045BDE0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8) == 1) {
    goto LABEL_4;
  }
  uint64_t v38 = v0[15];
  uint64_t v37 = v0[16];
  uint64_t v39 = v0[14];
  sub_100009790(v0[6], &qword_100571720);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v36 = (uint64_t (*)(void))v0[1];
LABEL_12:
  return v36();
}

uint64_t sub_100103470()
{
  os_log_type_t v14 = v0;
  swift_release();
  uint64_t v1 = v0[24];
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_10045D2F0();
  os_log_type_t v3 = sub_100461750();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v1;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v5 = sub_100460D40();
    *(void *)(v4 + 4) = sub_10001FCAC(v5, v6, &v13);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Start failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v8 = v0[15];
  uint64_t v7 = v0[16];
  uint64_t v9 = v0[14];
  sub_10010B4C4();
  swift_allocError();
  *(void *)uint64_t v10 = v1;
  *(void *)(v10 + 8) = 0;
  *(unsigned char *)(v10 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t Collaboration.Manager.validate(_:url:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = sub_1004608E0();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = sub_10045CAF0();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  uint64_t v6 = sub_10045BDE0();
  v3[12] = v6;
  v3[13] = *(void *)(v6 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  sub_100461280();
  v3[16] = sub_100461270();
  uint64_t v8 = sub_100461200();
  v3[17] = v8;
  v3[18] = v7;
  return _swift_task_switch(sub_100103878, v8, v7);
}

uint64_t sub_100103878()
{
  uint64_t v23 = v0;
  if (qword_1005708E8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[5];
  uint64_t v5 = sub_10045D310();
  v0[19] = sub_100009688(v5, (uint64_t)static Logger.collaboration);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6(v1, v4, v2);
  uint64_t v7 = sub_10045D2F0();
  os_log_type_t v8 = sub_100461770();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[15];
  uint64_t v11 = v0[12];
  uint64_t v12 = v0[13];
  if (v9)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    sub_10010D198((unint64_t *)&qword_1005754A8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v14 = sub_100462660();
    *(void *)(v13 + 4) = sub_10001FCAC(v14, v15, &v22);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Validate called with url=%{public}s", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v12 + 8))(v0[15], v0[12]);
  }

  uint64_t v16 = v0[14];
  uint64_t v17 = v0[12];
  uint64_t v18 = v0[5];
  (*(void (**)(void, void, void))(v0[7] + 16))(v0[8], v0[4], v0[6]);
  v6(v16, v18, v17);
  sub_10045CAC0();
  uint64_t v19 = (void *)swift_task_alloc();
  v0[20] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_100103B44;
  uint64_t v20 = v0[3];
  return MusicCollaborativePlaylist.JoinRequest.validate()(v20);
}

uint64_t sub_100103B44()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v5 = sub_100103D38;
  }
  else {
    uint64_t v5 = sub_100103C80;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100103C80()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100103D38()
{
  unint64_t v15 = v0;
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = sub_10045D2F0();
  os_log_type_t v5 = sub_100461750();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[21];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    v0[2] = v6;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v8 = sub_100460D40();
    *(void *)(v7 + 4) = sub_10001FCAC(v8, v9, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Validate failed with error=%{public}s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v10 = v0[21];
  sub_10010B4C4();
  swift_allocError();
  *(void *)uint64_t v11 = v10;
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 1;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t Collaboration.Manager.join(_:url:)(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_1004608E0();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  uint64_t v4 = sub_10045CAF0();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = sub_10045BDE0();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  sub_100461280();
  v2[16] = sub_100461270();
  uint64_t v7 = sub_100461200();
  v2[17] = v7;
  v2[18] = v6;
  return _swift_task_switch(sub_100104138, v7, v6);
}

uint64_t sub_100104138()
{
  uint64_t v23 = v0;
  if (qword_1005708E8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v4 = v0[4];
  uint64_t v5 = sub_10045D310();
  v0[19] = sub_100009688(v5, (uint64_t)static Logger.collaboration);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6(v1, v4, v2);
  uint64_t v7 = sub_10045D2F0();
  os_log_type_t v8 = sub_100461770();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[15];
  uint64_t v11 = v0[12];
  uint64_t v12 = v0[13];
  if (v9)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    sub_10010D198((unint64_t *)&qword_1005754A8, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v14 = sub_100462660();
    *(void *)(v13 + 4) = sub_10001FCAC(v14, v15, &v22);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Join called with url=%{public}s", (uint8_t *)v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v12 + 8))(v0[15], v0[12]);
  }

  uint64_t v16 = v0[14];
  uint64_t v17 = v0[12];
  uint64_t v18 = v0[4];
  (*(void (**)(void, void, void))(v0[6] + 16))(v0[8], v0[3], v0[5]);
  v6(v16, v18, v17);
  sub_10045CAC0();
  uint64_t v19 = (void *)swift_task_alloc();
  v0[20] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_100104404;
  uint64_t v20 = v0[7];
  return MusicCollaborativePlaylist.JoinRequest.response()(v20);
}

uint64_t sub_100104404()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[17];
    uint64_t v4 = v2[18];
    uint64_t v5 = sub_1001045FC;
  }
  else
  {
    (*(void (**)(void, void))(v2[6] + 8))(v2[7], v2[5]);
    uint64_t v3 = v2[17];
    uint64_t v4 = v2[18];
    uint64_t v5 = sub_100104530;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100104530()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001045FC()
{
  unint64_t v15 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_10045D2F0();
  os_log_type_t v2 = sub_100461750();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[21];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v3;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v5 = sub_100460D40();
    *(void *)(v4 + 4) = sub_10001FCAC(v5, v6, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Join failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[21];
  uint64_t v9 = v0[10];
  uint64_t v8 = v0[11];
  uint64_t v10 = v0[9];
  sub_10010B4C4();
  swift_allocError();
  *(void *)uint64_t v11 = v7;
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t Collaboration.Manager.end(_:)(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_1004608E0();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = sub_10045CB20();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  sub_100461280();
  v2[11] = sub_100461270();
  uint64_t v6 = sub_100461200();
  v2[12] = v6;
  v2[13] = v5;
  return _swift_task_switch(sub_10010498C, v6, v5);
}

uint64_t sub_10010498C()
{
  if (qword_1005708E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10045D310();
  v0[14] = sub_100009688(v1, (uint64_t)static Logger.collaboration);
  os_log_type_t v2 = sub_10045D2F0();
  os_log_type_t v3 = sub_100461770();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "End called", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v8 = v0[4];
  uint64_t v7 = v0[5];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  sub_10045CB00();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[15] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100104B24;
  uint64_t v10 = v0[3];
  return MusicCollaborativePlaylist.EndCollaborationRequest.response()(v10);
}

uint64_t sub_100104B24()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  uint64_t v4 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v5 = sub_100104C60;
  }
  else {
    uint64_t v5 = sub_10010D2B0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100104C60()
{
  unint64_t v15 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_10045D2F0();
  os_log_type_t v2 = sub_100461750();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[16];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v3;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v5 = sub_100460D40();
    *(void *)(v4 + 4) = sub_10001FCAC(v5, v6, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "End failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[16];
  uint64_t v9 = v0[9];
  uint64_t v8 = v0[10];
  uint64_t v10 = v0[8];
  sub_10010B4C4();
  swift_allocError();
  *(void *)uint64_t v11 = v7;
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t Collaboration.Manager.moderate(_:collaborator:in:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = a3;
  *(unsigned char *)(v3 + 193) = a1;
  uint64_t v4 = sub_10045CC20();
  *(void *)(v3 + 40) = v4;
  *(void *)(v3 + 48) = *(void *)(v4 - 8);
  *(void *)(v3 + 56) = swift_task_alloc();
  uint64_t v5 = sub_1004608E0();
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 72) = *(void *)(v5 - 8);
  *(void *)(v3 + 80) = swift_task_alloc();
  *(void *)(v3 + 88) = swift_task_alloc();
  uint64_t v6 = sub_100460690();
  *(void *)(v3 + 96) = v6;
  *(void *)(v3 + 104) = *(void *)(v6 - 8);
  *(void *)(v3 + 112) = swift_task_alloc();
  *(void *)(v3 + 120) = swift_task_alloc();
  sub_100461280();
  *(void *)(v3 + 128) = sub_100461270();
  uint64_t v8 = sub_100461200();
  *(void *)(v3 + 136) = v8;
  *(void *)(v3 + 144) = v7;
  return _swift_task_switch(sub_100105048, v8, v7);
}

uint64_t sub_100105048()
{
  uint64_t v39 = v0;
  if (qword_1005708E8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 24);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v9 = sub_10045D310();
  *(void *)(v0 + 152) = sub_100009688(v9, (uint64_t)static Logger.collaboration);
  uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v37(v1, v8, v2);
  char v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v36(v4, v7, v5);
  uint64_t v10 = sub_10045D2F0();
  os_log_type_t v11 = sub_100461770();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 120);
  uint64_t v15 = *(void *)(v0 + 96);
  uint64_t v14 = *(void *)(v0 + 104);
  uint64_t v16 = *(void *)(v0 + 88);
  uint64_t v17 = *(void *)(v0 + 64);
  uint64_t v18 = *(void *)(v0 + 72);
  if (v12)
  {
    os_log_type_t type = v11;
    char v19 = *(unsigned char *)(v0 + 193) & 1;
    uint64_t v34 = *(void *)(v0 + 88);
    uint64_t v20 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136446722;
    *(unsigned char *)(v0 + 192) = v19;
    uint64_t v21 = sub_100460D40();
    *(void *)(v20 + 4) = sub_10001FCAC(v21, v22, &v38);
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    sub_10010D198(&qword_1005754C8, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
    uint64_t v23 = sub_100462660();
    *(void *)(v20 + 14) = sub_10001FCAC(v23, v24, &v38);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    *(_WORD *)(v20 + 22) = 2082;
    sub_10010D198(&qword_1005734E0, (void (*)(uint64_t))&type metadata accessor for Playlist);
    uint64_t v25 = sub_100462660();
    *(void *)(v20 + 24) = sub_10001FCAC(v25, v26, &v38);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v34, v17);
    _os_log_impl((void *)&_mh_execute_header, v10, type, "    Moderate called for:\n        - type=%{public}s\n        - collaborator=%{public}s\n        - playlist=%{public}s", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v14 + 8))(*(void *)(v0 + 120), *(void *)(v0 + 96));
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }

  uint64_t v27 = *(void *)(v0 + 80);
  uint64_t v28 = *(void *)(v0 + 64);
  uint64_t v29 = *(void *)(v0 + 32);
  char v30 = *(unsigned char *)(v0 + 193);
  v37(*(void *)(v0 + 112), *(void *)(v0 + 24), *(void *)(v0 + 96));
  v36(v27, v29, v28);
  sub_10045CBF0();
  if (v30)
  {
    uint64_t v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_1001056B4;
    return MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.reject()();
  }
  else
  {
    unint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v31;
    *unint64_t v31 = v0;
    v31[1] = sub_1001054AC;
    return MusicCollaborativePlaylist.PendingCollaboratorDecisionRequest.approve()();
  }
}

uint64_t sub_1001054AC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v5 = sub_1001057F0;
  }
  else {
    uint64_t v5 = sub_1001055E8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1001055E8()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001056B4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v5 = sub_100105A28;
  }
  else {
    uint64_t v5 = sub_10010D2A8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1001057F0()
{
  uint64_t v14 = v0;
  uint64_t v1 = v0[21];
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_10045D2F0();
  os_log_type_t v3 = sub_100461750();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v1;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v5 = sub_100460D40();
    *(void *)(v4 + 4) = sub_10001FCAC(v5, v6, &v13);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Moderate failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[6];
  uint64_t v8 = v0[7];
  uint64_t v9 = v0[5];
  sub_10010B4C4();
  swift_allocError();
  *(void *)uint64_t v10 = v1;
  *(void *)(v10 + 8) = 0;
  *(unsigned char *)(v10 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100105A28()
{
  uint64_t v14 = v0;
  uint64_t v1 = v0[23];
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_10045D2F0();
  os_log_type_t v3 = sub_100461750();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v1;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v5 = sub_100460D40();
    *(void *)(v4 + 4) = sub_10001FCAC(v5, v6, &v13);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Moderate failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[6];
  uint64_t v8 = v0[7];
  uint64_t v9 = v0[5];
  sub_10010B4C4();
  swift_allocError();
  *(void *)uint64_t v10 = v1;
  *(void *)(v10 + 8) = 0;
  *(unsigned char *)(v10 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t Collaboration.Manager.remove(collaborator:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = sub_10045CB50();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = sub_1004608E0();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  uint64_t v6 = sub_100460690();
  v3[13] = v6;
  v3[14] = *(void *)(v6 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  sub_100461280();
  v3[17] = sub_100461270();
  uint64_t v8 = sub_100461200();
  v3[18] = v8;
  v3[19] = v7;
  return _swift_task_switch(sub_100105E30, v8, v7);
}

uint64_t sub_100105E30()
{
  uint64_t v34 = v0;
  if (qword_1005708E8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  uint64_t v8 = v0[4];
  uint64_t v7 = v0[5];
  uint64_t v9 = sub_10045D310();
  v0[20] = sub_100009688(v9, (uint64_t)static Logger.collaboration);
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v32(v1, v8, v2);
  unint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v31(v4, v7, v5);
  uint64_t v10 = sub_10045D2F0();
  os_log_type_t v11 = sub_100461770();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = v0[16];
  uint64_t v15 = v0[13];
  uint64_t v14 = v0[14];
  uint64_t v16 = v0[12];
  uint64_t v17 = v0[9];
  uint64_t v18 = v0[10];
  if (v12)
  {
    os_log_type_t type = v11;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136446466;
    sub_10010D198(&qword_1005754C8, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator);
    uint64_t v20 = sub_100462660();
    *(void *)(v19 + 4) = sub_10001FCAC(v20, v21, &v33);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    *(_WORD *)(v19 + 12) = 2082;
    sub_10010D198(&qword_1005734E0, (void (*)(uint64_t))&type metadata accessor for Playlist);
    uint64_t v22 = sub_100462660();
    *(void *)(v19 + 14) = sub_10001FCAC(v22, v23, &v33);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    _os_log_impl((void *)&_mh_execute_header, v10, type, "    Remove called for:\n        - collaborator=%{public}s\n        - playlist=%{public}s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v14 + 8))(v0[16], v0[13]);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  }

  uint64_t v24 = v0[11];
  uint64_t v25 = v0[9];
  uint64_t v26 = v0[5];
  v32(v0[15], v0[4], v0[13]);
  v31(v24, v26, v25);
  sub_10045CB30();
  uint64_t v27 = (void *)swift_task_alloc();
  v0[21] = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_1001061DC;
  uint64_t v28 = v0[3];
  return MusicCollaborativePlaylist.RemoveCollaboratorRequest.response()(v28);
}

uint64_t sub_1001061DC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v5 = sub_1001063E4;
  }
  else {
    uint64_t v5 = sub_100106318;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100106318()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1001063E4()
{
  uint64_t v15 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_10045D2F0();
  os_log_type_t v2 = sub_100461750();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[22];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v3;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v5 = sub_100460D40();
    *(void *)(v4 + 4) = sub_10001FCAC(v5, v6, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Remove failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[22];
  uint64_t v9 = v0[7];
  uint64_t v8 = v0[8];
  uint64_t v10 = v0[6];
  sub_10010B4C4();
  swift_allocError();
  *(void *)uint64_t v11 = v7;
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t Collaboration.Manager.resetInvitationURL(_:)(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = sub_1004608E0();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = sub_10045CBB0();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  sub_100461280();
  v2[11] = sub_100461270();
  uint64_t v6 = sub_100461200();
  v2[12] = v6;
  v2[13] = v5;
  return _swift_task_switch(sub_100106774, v6, v5);
}

uint64_t sub_100106774()
{
  if (qword_1005708E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10045D310();
  v0[14] = sub_100009688(v1, (uint64_t)static Logger.collaboration);
  os_log_type_t v2 = sub_10045D2F0();
  os_log_type_t v3 = sub_100461770();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Reset URL called", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v8 = v0[4];
  uint64_t v7 = v0[5];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v8, v7);
  sub_10045CB90();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[15] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_10010690C;
  uint64_t v10 = v0[3];
  return MusicCollaborativePlaylist.ResetInvitationLinkRequest.response()(v10);
}

uint64_t sub_10010690C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  uint64_t v4 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v5 = sub_100106AE4;
  }
  else {
    uint64_t v5 = sub_100106A48;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100106A48()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100106AE4()
{
  uint64_t v15 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_10045D2F0();
  os_log_type_t v2 = sub_100461750();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[16];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v3;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v5 = sub_100460D40();
    *(void *)(v4 + 4) = sub_10001FCAC(v5, v6, &v14);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Reset failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[16];
  uint64_t v9 = v0[9];
  uint64_t v8 = v0[10];
  uint64_t v10 = v0[8];
  sub_10010B4C4();
  swift_allocError();
  *(void *)uint64_t v11 = v7;
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t Collaboration.Manager.updateShareOption(_:for:)(char a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a2;
  *(unsigned char *)(v2 + 168) = a1;
  uint64_t v3 = sub_1004606B0();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = *(void *)(v3 - 8);
  *(void *)(v2 + 48) = swift_task_alloc();
  uint64_t v4 = sub_10045CBE0();
  *(void *)(v2 + 56) = v4;
  *(void *)(v2 + 64) = *(void *)(v4 - 8);
  *(void *)(v2 + 72) = swift_task_alloc();
  sub_100005BFC(&qword_100575450);
  *(void *)(v2 + 80) = swift_task_alloc();
  uint64_t v5 = sub_1004606F0();
  *(void *)(v2 + 88) = v5;
  *(void *)(v2 + 96) = *(void *)(v5 - 8);
  *(void *)(v2 + 104) = swift_task_alloc();
  *(void *)(v2 + 112) = swift_task_alloc();
  sub_100461280();
  *(void *)(v2 + 120) = sub_100461270();
  uint64_t v7 = sub_100461200();
  *(void *)(v2 + 128) = v7;
  *(void *)(v2 + 136) = v6;
  return _swift_task_switch(sub_100106EEC, v7, v6);
}

uint64_t sub_100106EEC()
{
  if (qword_1005708E8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10045D310();
  *(void *)(v0 + 144) = sub_100009688(v1, (uint64_t)static Logger.collaboration);
  uint64_t v2 = sub_10045D2F0();
  os_log_type_t v3 = sub_100461770();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 168);
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67240192;
    *(_DWORD *)(v5 + 4) = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "updateShareOption called with isOpen=%{BOOL,public}d", (uint8_t *)v5, 8u);
    swift_slowDealloc();
  }
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 80);

  sub_100460700();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
  {
    uint64_t v9 = *(void *)(v0 + 80);
    swift_release();
    sub_100009790(v9, &qword_100575450);
    sub_10010B4C4();
    swift_allocError();
    *(_OWORD *)uint64_t v10 = xmmword_100466970;
    *(unsigned char *)(v10 + 16) = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 112);
    uint64_t v15 = *(void *)(v0 + 88);
    uint64_t v16 = *(void *)(v0 + 96);
    uint64_t v18 = *(void *)(v0 + 40);
    uint64_t v17 = *(void *)(v0 + 48);
    uint64_t v19 = *(void *)(v0 + 32);
    int v20 = *(unsigned __int8 *)(v0 + 168);
    (*(void (**)(uint64_t, void, uint64_t))(v16 + 32))(v14, *(void *)(v0 + 80), v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v13, v14, v15);
    unint64_t v21 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.open(_:);
    if (!v20) {
      unint64_t v21 = (unsigned int *)&enum case for Playlist.Collaboration.InvitationMode.requiresApproval(_:);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *v21, v19);
    sub_10045CBC0();
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v22;
    void *v22 = v0;
    v22[1] = sub_1001071FC;
    return MusicCollaborativePlaylist.UpdateInvitationModeRequest.response()();
  }
}

uint64_t sub_1001071FC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v5 = sub_100107424;
  }
  else {
    uint64_t v5 = sub_100107338;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100107338()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[11];
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[7];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100107424()
{
  uint64_t v18 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_10045D2F0();
  os_log_type_t v2 = sub_100461750();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[20];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    v0[2] = v3;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v5 = sub_100460D40();
    *(void *)(v4 + 4) = sub_10001FCAC(v5, v6, &v17);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "updateShareOption failed with error=%{public}s", (uint8_t *)v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v7 = v0[20];
  uint64_t v8 = v0[14];
  uint64_t v9 = v0[11];
  uint64_t v10 = v0[12];
  uint64_t v12 = v0[8];
  uint64_t v11 = v0[9];
  uint64_t v13 = v0[7];
  sub_10010B4C4();
  swift_allocError();
  *(void *)uint64_t v14 = v7;
  *(void *)(v14 + 8) = 0;
  *(unsigned char *)(v14 + 16) = 1;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t Collaboration.Manager.handleError(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1005708E8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10045D310();
  sub_100009688(v4, (uint64_t)static Logger.collaboration);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = sub_10045D2F0();
  os_log_type_t v6 = sub_100461770();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138543362;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v7 + 4) = v9;
    void *v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Calling coordinator to handle error=%{public}@", (uint8_t *)v7, 0xCu);
    sub_100005BFC(&qword_100578A90);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_beginAccess();
  sub_10002FA38(v2 + 16, (uint64_t)v13);
  uint64_t v10 = v14;
  uint64_t v11 = v15;
  sub_10000C300(v13, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, v10, v11);
  return sub_100007118((uint64_t)v13);
}

uint64_t Collaboration.Manager.activityViewController(for:url:)(uint64_t a1, uint64_t a2)
{
  sub_100005BFC(&qword_100571720);
  __chkstk_darwin();
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10045BDE0();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a2, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  uint64_t v8 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    sub_10045BD30(v7);
    uint64_t v8 = v9;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  id v10 = [objc_allocWithZone((Class)NSItemProvider) initWithContentsOfURL:v8];

  if (v10)
  {
    id v11 = [objc_allocWithZone((Class)LPLinkMetadata) init];
    sub_10045BD30(v12);
    uint64_t v14 = v13;
    [v11 setURL:v13];

    id v15 = [objc_allocWithZone((Class)LPiTunesMediaPlaylistMetadata) init];
    sub_100460820();
    NSString v16 = sub_100460C70();
    swift_bridgeObjectRelease();
    [v15 setName:v16];

    sub_1004607E0();
    if (v17)
    {
      NSString v18 = sub_100460C70();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v18 = 0;
    }
    [v15 setCurator:v18];

    sub_1004607D0();
    if (v19)
    {
      NSString v20 = sub_100460C70();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v20 = 0;
    }
    [v15 setStoreIdentifier:v20];

    sub_100107D08();
    uint64_t v22 = v21;
    [v15 setArtwork:v21];

    [v11 setSpecialization:v15];
    sub_100005BFC(&qword_1005754F0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1004665D0;
    *(void *)(v23 + 32) = v10;
    aBlock[0] = v23;
    sub_1004610C0();
    id v24 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
    sub_100009854(0, &qword_1005754F8);
    id v25 = v10;
    Class isa = sub_100461080().super.isa;
    swift_bridgeObjectRelease();
    id v27 = [v24 initWithItemProviders:isa];

    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v11;
    aBlock[4] = sub_10010B550;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100108134;
    uint64_t aBlock[3] = &unk_10052E6E0;
    uint64_t v29 = _Block_copy(aBlock);
    id v30 = v11;
    swift_release();
    [v27 setPerItemMetadataProvider:v29];
    _Block_release(v29);
    id v31 = [objc_allocWithZone((Class)UIActivityViewController) initWithActivityItemsConfiguration:v27];
    [v31 setAllowsProminentActivity:0];

    return (uint64_t)v31;
  }
  else
  {
    uint64_t result = sub_100462350();
    __break(1u);
  }
  return result;
}

void sub_100107D08()
{
  uint64_t v0 = sub_1004608E0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  __chkstk_darwin();
  uint64_t v3 = sub_10045D1C0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin();
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [objc_allocWithZone((Class)NSItemProvider) init];
  sub_10045D1A0();
  sub_10045D190();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  NSString v8 = sub_100460C70();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v1 + 16))((char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v15[1], v0);
  unint64_t v9 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v10 + v9, (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v0);
  aBlock[4] = sub_10010CEA8;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10010A5F0;
  uint64_t aBlock[3] = &unk_10052E998;
  id v11 = _Block_copy(aBlock);
  swift_release();
  [v7 registerItemForTypeIdentifier:v8 loadHandler:v11];
  _Block_release(v11);

  NSString v12 = sub_100460C70();
  id v13 = [self _systemImageNamed:v12];

  if (v13)
  {
    id v14 = [objc_allocWithZone((Class)LPImage) initWithPlatformImage:v13];

    [objc_allocWithZone((Class)LPImage) initWithItemProvider:v7 properties:0 placeholderImage:v14];
  }
  else
  {
    __break(1u);
  }
}

id sub_100108040@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_100460CB0();
  uint64_t v5 = v4;
  if (v3 == sub_100460CB0() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = sub_1004626E0();
    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return result;
    }
  }
  *(void *)(a2 + 24) = sub_100009854(0, &qword_1005757B0);
  *(void *)a2 = a1;

  return a1;
}

id sub_100108134(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(void *__return_ptr, uint64_t, id);
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void v13[3];
  uint64_t v14;
  uint64_t vars8;

  uint64_t v5 = *(void (**)(void *__return_ptr, uint64_t, id))(a1 + 32);
  swift_retain();
  uint64_t v6 = a3;
  v5(v13, a2, v6);
  swift_release();

  id v7 = v14;
  if (v14)
  {
    sub_10000C300(v13, v14);
    char v8 = *(void *)(v7 - 8);
    __chkstk_darwin();
    uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    id v11 = (void *)sub_1004626D0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_100007118((uint64_t)v13);
  }
  else
  {
    id v11 = 0;
  }

  return v11;
}

uint64_t Collaboration.Manager.deinit()
{
  sub_100007118(v0 + 16);
  return v0;
}

uint64_t Collaboration.Manager.__deallocating_deinit()
{
  sub_100007118(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t Collaboration.ArtworkCachingReference.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Collaboration.ArtworkCachingReference.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_10010834C()
{
  uint64_t v0 = sub_10045D310();
  sub_1000096D0(v0, static Logger.collaboration);
  sub_100009688(v0, (uint64_t)static Logger.collaboration);
  sub_100009854(0, (unint64_t *)&qword_100574700);
  sub_100461E90();
  return sub_10045D320();
}

uint64_t static Logger.collaboration.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1005708E8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10045D310();
  uint64_t v3 = sub_100009688(v2, (uint64_t)static Logger.collaboration);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

BOOL MPModelPlaylist.hasJoinedCollaboration.getter()
{
  return (char *)[v0 collaboratorStatus] - 3 < (char *)2;
}

uint64_t Playlist.Collaboration.isOpenInvitation.getter()
{
  uint64_t v0 = sub_1004606B0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  unint64_t v21 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100005BFC(&qword_100575500) - 8;
  __chkstk_darwin();
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005BFC(&qword_100575508);
  __chkstk_darwin();
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v9 = (char *)&v20 - v8;
  __chkstk_darwin();
  id v11 = (char *)&v20 - v10;
  sub_1004606C0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v9, enum case for Playlist.Collaboration.InvitationMode.open(_:), v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v9, 0, 1, v0);
  uint64_t v12 = (uint64_t)&v5[*(int *)(v3 + 56)];
  sub_100019ABC((uint64_t)v11, (uint64_t)v5, &qword_100575508);
  sub_100019ABC((uint64_t)v9, v12, &qword_100575508);
  id v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v13((uint64_t)v5, 1, v0) == 1)
  {
    sub_100009790((uint64_t)v9, &qword_100575508);
    sub_100009790((uint64_t)v11, &qword_100575508);
    int v14 = v13(v12, 1, v0);
    if (v14 == 1) {
      id v15 = &qword_100575508;
    }
    else {
      id v15 = &qword_100575500;
    }
    if (v14 == 1) {
      char v16 = -1;
    }
    else {
      char v16 = 0;
    }
  }
  else
  {
    sub_100019ABC((uint64_t)v5, (uint64_t)v7, &qword_100575508);
    if (v13(v12, 1, v0) == 1)
    {
      sub_100009790((uint64_t)v9, &qword_100575508);
      sub_100009790((uint64_t)v11, &qword_100575508);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
      char v16 = 0;
      id v15 = &qword_100575500;
    }
    else
    {
      uint64_t v17 = v21;
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v21, v12, v0);
      sub_10010D198(&qword_100575510, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaboration.InvitationMode);
      char v16 = sub_100460BD0();
      NSString v18 = *(void (**)(char *, uint64_t))(v1 + 8);
      v18(v17, v0);
      id v15 = &qword_100575508;
      sub_100009790((uint64_t)v9, &qword_100575508);
      sub_100009790((uint64_t)v11, &qword_100575508);
      v18(v7, v0);
    }
  }
  sub_100009790((uint64_t)v5, v15);
  return v16 & 1;
}

uint64_t Playlist.Collaborator.isHost.getter()
{
  uint64_t v0 = sub_100460620();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  unint64_t v21 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100005BFC(&qword_100575518) - 8;
  __chkstk_darwin();
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005BFC(&qword_100575520);
  __chkstk_darwin();
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin();
  unint64_t v9 = (char *)&v20 - v8;
  __chkstk_darwin();
  id v11 = (char *)&v20 - v10;
  sub_100460640();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v9, enum case for Playlist.Collaborator.Role.host(_:), v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v9, 0, 1, v0);
  uint64_t v12 = (uint64_t)&v5[*(int *)(v3 + 56)];
  sub_100019ABC((uint64_t)v11, (uint64_t)v5, &qword_100575520);
  sub_100019ABC((uint64_t)v9, v12, &qword_100575520);
  id v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v13((uint64_t)v5, 1, v0) == 1)
  {
    sub_100009790((uint64_t)v9, &qword_100575520);
    sub_100009790((uint64_t)v11, &qword_100575520);
    int v14 = v13(v12, 1, v0);
    if (v14 == 1) {
      id v15 = &qword_100575520;
    }
    else {
      id v15 = &qword_100575518;
    }
    if (v14 == 1) {
      char v16 = -1;
    }
    else {
      char v16 = 0;
    }
  }
  else
  {
    sub_100019ABC((uint64_t)v5, (uint64_t)v7, &qword_100575520);
    if (v13(v12, 1, v0) == 1)
    {
      sub_100009790((uint64_t)v9, &qword_100575520);
      sub_100009790((uint64_t)v11, &qword_100575520);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v7, v0);
      char v16 = 0;
      id v15 = &qword_100575518;
    }
    else
    {
      uint64_t v17 = v21;
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v21, v12, v0);
      sub_10010D198(&qword_100575528, (void (*)(uint64_t))&type metadata accessor for Playlist.Collaborator.Role);
      char v16 = sub_100460BD0();
      NSString v18 = *(void (**)(char *, uint64_t))(v1 + 8);
      v18(v17, v0);
      id v15 = &qword_100575520;
      sub_100009790((uint64_t)v9, &qword_100575520);
      sub_100009790((uint64_t)v11, &qword_100575520);
      v18(v7, v0);
    }
  }
  sub_100009790((uint64_t)v5, v15);
  return v16 & 1;
}

uint64_t Playlist.hasJoinedCollaboration.getter()
{
  uint64_t v0 = sub_100005BFC(&qword_100575450);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100005BFC(&qword_100575458);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - v7;
  sub_100460700();
  uint64_t v9 = sub_1004606F0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v2, 1, v9) == 1)
  {
    sub_100009790((uint64_t)v2, &qword_100575450);
    uint64_t v11 = sub_100460650();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
LABEL_10:
    uint64_t v16 = 0;
    goto LABEL_11;
  }
  sub_1004606D0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v2, v9);
  uint64_t v12 = sub_100460650();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1) {
    goto LABEL_10;
  }
  sub_100019ABC((uint64_t)v8, (uint64_t)v6, &qword_100575458);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v6, v12);
  if (v14 != enum case for Playlist.Collaborator.Status.host(_:)
    && v14 != enum case for Playlist.Collaborator.Status.joined(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v12);
    goto LABEL_10;
  }
  uint64_t v16 = 1;
LABEL_11:
  sub_100009790((uint64_t)v8, &qword_100575458);
  return v16;
}

uint64_t Playlist.hasUnsupportedContent.getter()
{
  v1[7] = v0;
  uint64_t v2 = sub_1004608A0();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = sub_100005BFC(&qword_100575538);
  v1[13] = swift_task_alloc();
  sub_100005BFC((uint64_t *)&unk_100575540);
  v1[14] = swift_task_alloc();
  uint64_t v3 = sub_100005BFC(&qword_100571FF0);
  v1[15] = v3;
  v1[16] = *(void *)(v3 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  uint64_t v4 = sub_100005BFC((uint64_t *)&unk_100575550);
  v1[19] = v4;
  v1[20] = *(void *)(v4 - 8);
  v1[21] = swift_task_alloc();
  sub_100005BFC(&qword_100571C58);
  v1[22] = swift_task_alloc();
  uint64_t v5 = sub_100005BFC(&qword_100575560);
  v1[23] = v5;
  v1[24] = *(void *)(v5 - 8);
  v1[25] = swift_task_alloc();
  return _swift_task_switch(sub_1001091AC, 0, 0);
}

uint64_t sub_1001091AC()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[7];
  sub_10045FB30();
  swift_getKeyPath();
  uint64_t v3 = sub_1004608E0();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  sub_10010D198(&qword_100575568, (void (*)(uint64_t))&type metadata accessor for Playlist);
  sub_10045FAF0();
  swift_release();
  sub_100009790(v1, &qword_100571C58);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[26] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100109370;
  uint64_t v6 = v0[23];
  uint64_t v7 = v0[21];
  return MusicLibraryRequest.response()(v7, v6);
}

uint64_t sub_100109370()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001098AC;
  }
  else {
    uint64_t v2 = sub_100109484;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100109484()
{
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[13];
  sub_10045FB80();
  id v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v47(v2, v1, v4);
  sub_10010B5B8((unint64_t *)&unk_100575570);
  sub_100460F40();
  uint64_t v7 = (uint64_t *)(v6 + *(int *)(v5 + 36));
  uint64_t v8 = *v7;
  uint64_t v9 = sub_10010B5B8((unint64_t *)&qword_100571FF8);
  sub_100461550();
  if (v8 == v0[6])
  {
LABEL_6:
    uint64_t v24 = v0[16];
    uint64_t v25 = v0[14];
    uint64_t v26 = v0[8];
    uint64_t v27 = v0[9];
    sub_100009790(v0[13], &qword_100575538);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v25, 1, 1, v26);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  }
  else
  {
    uint64_t v10 = v0[9];
    uint64_t v45 = (void (**)(uint64_t))(v10 + 16);
    uint64_t v46 = (void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
    uint64_t v43 = (void (**)(void, void))(v10 + 8);
    char v44 = (void (**)(uint64_t, uint64_t))(v0[16] + 8);
    while (1)
    {
      uint64_t v11 = v0[17];
      uint64_t v12 = v0[15];
      uint64_t v13 = v0[13];
      uint64_t v14 = v9;
      uint64_t v15 = v0[11];
      uint64_t v48 = v0[10];
      uint64_t v16 = v0[8];
      uint64_t v17 = (void (*)(void *, void))sub_100461610();
      (*v45)(v15);
      v17(v0 + 2, 0);
      v47(v11, v13, v12);
      sub_100461560();
      uint64_t v18 = *v44;
      (*v44)(v11, v12);
      uint64_t v19 = *v46;
      (*v46)(v48, v15, v16);
      sub_100460860();
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      if (!v21) {
        break;
      }
      (*v43)(v0[10], v0[8]);
      uint64_t v22 = *v7;
      sub_100461550();
      BOOL v23 = v22 == v0[6];
      uint64_t v9 = v14;
      if (v23) {
        goto LABEL_6;
      }
    }
    uint64_t v28 = v0[14];
    uint64_t v30 = v0[9];
    uint64_t v29 = v0[10];
    uint64_t v31 = v0[8];
    sub_100009790(v0[13], &qword_100575538);
    v19(v28, v29, v31);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v28, 0, 1, v31);
  }
  uint64_t v32 = v0[24];
  uint64_t v49 = v0[25];
  uint64_t v33 = v0[23];
  uint64_t v35 = v0[20];
  uint64_t v34 = v0[21];
  uint64_t v36 = v0[19];
  uint64_t v37 = v0[14];
  uint64_t v39 = v0[8];
  uint64_t v38 = v0[9];
  v18(v0[18], v0[15]);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v49, v33);
  BOOL v40 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v37, 1, v39) != 1;
  sub_100009790(v37, (uint64_t *)&unk_100575540);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = (uint64_t (*)(BOOL))v0[1];
  return v41(v40);
}

uint64_t sub_1001098AC()
{
  (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1(0);
}

uint64_t Playlist.duplicate()()
{
  v1[2] = v0;
  uint64_t v2 = sub_10045CCA0();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = sub_10045CC80();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_100109AB8, 0, 0);
}

uint64_t sub_100109AB8()
{
  sub_10045CC30();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100109B60;
  uint64_t v2 = *(void *)(v0 + 40);
  return MusicLibraryPlaylistRequest.response()(v2);
}

uint64_t sub_100109B60()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100109D14;
  }
  else
  {
    (*(void (**)(void, void))(v2[4] + 8))(v2[5], v2[3]);
    uint64_t v3 = sub_100109C8C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100109C8C()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100109D14()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100109D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_1004608E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin();
  sub_100005BFC(&qword_100574B80);
  uint64_t result = __chkstk_darwin();
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v14 = sub_1004612C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v8);
    unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = 0;
    *(void *)(v16 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    uint64_t v17 = (void *)(v16 + ((v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v17 = a1;
    v17[1] = a2;
    swift_retain();
    sub_1000FFBF4((uint64_t)v13, (uint64_t)&unk_100575820, v16);
    return swift_release();
  }
  return result;
}

uint64_t sub_100109FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  void v6[2] = a4;
  sub_100005BFC(&qword_100575828);
  v6[5] = swift_task_alloc();
  sub_100005BFC((uint64_t *)&unk_100575830);
  v6[6] = swift_task_alloc();
  sub_100005BFC(&qword_100573A68);
  v6[7] = swift_task_alloc();
  return _swift_task_switch(sub_10010A0B0, 0, 0);
}

uint64_t sub_10010A0B0()
{
  uint64_t v1 = *(void *)(v0 + 56);
  sub_1004608C0();
  uint64_t v2 = sub_100460580();
  *(void *)(v0 + 64) = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)(v0 + 72) = v3;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_100009790(*(void *)(v0 + 56), &qword_100573A68);
    (*(void (**)(void, void))(v0 + 24))(0, 0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = sub_1004604F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
    uint64_t v9 = sub_100460450();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v10;
    void *v10 = v0;
    v10[1] = sub_10010A2CC;
    uint64_t v11 = *(void *)(v0 + 48);
    uint64_t v12 = *(void *)(v0 + 40);
    v13.n128_u64[0] = 0x4072C00000000000;
    v14.n128_u64[0] = 1.0;
    v15.n128_u64[0] = 0x4072C00000000000;
    return Artwork.image(width:height:pixelLength:cropStyle:format:cacheOwner:)(v11, v12, 0, 0, v13, v15, v14);
  }
}

uint64_t sub_10010A2CC(uint64_t a1)
{
  uint64_t v3 = *v2;
  (*v2)[11] = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v3 + 5;
    uint64_t v4 = v3[5];
    uint64_t v5 = v6[1];
    swift_errorRelease();
    sub_100009790(v4, &qword_100575828);
    sub_100009790(v5, (uint64_t *)&unk_100575830);
    uint64_t v7 = sub_10010A550;
  }
  else
  {
    uint64_t v8 = v3[8];
    uint64_t v9 = v3[9];
    uint64_t v11 = v3[6];
    uint64_t v10 = v3[7];
    sub_100009790(v3[5], &qword_100575828);
    sub_100009790(v11, (uint64_t *)&unk_100575830);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
    uint64_t v7 = sub_10010A45C;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_10010A45C()
{
  uint64_t v1 = UIImagePNGRepresentation((UIImage *)*(id *)(v0 + 88));
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_10045BE50();
    unint64_t v5 = v4;

    v6.super.Class isa = sub_10045BE40().super.isa;
    sub_1000070C0(v3, v5);
  }
  else
  {
    v6.super.Class isa = 0;
  }
  uint64_t v7 = *(void **)(v0 + 88);
  (*(void (**)(Class, void))(v0 + 24))(v6.super.isa, 0);

  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10010A550()
{
  (*(void (**)(void, void))(*(void *)(v0 + 72) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 64));
  (*(void (**)(void, void))(v0 + 24))(0, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10010A5F0(uint64_t a1, void *aBlock, uint64_t ObjCClassMetadata, uint64_t a4)
{
  NSData v6 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v7 = _Block_copy(aBlock);
  if (v7)
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v7;
    uint64_t v7 = sub_10010CF78;
    if (!ObjCClassMetadata) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v8 = 0;
  if (ObjCClassMetadata) {
LABEL_3:
  }
    ObjCClassMetadata = swift_getObjCClassMetadata();
LABEL_4:
  if (a4) {
    a4 = sub_100460A90();
  }
  swift_retain();
  v6(v7, v8, ObjCClassMetadata, a4);
  swift_bridgeObjectRelease();
  sub_10004CAE0((uint64_t)v7);

  return swift_release();
}

void sub_10010A6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_10045BC80();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

void *sub_10010A768(void *__src, uint64_t a2, void *__dst)
{
  if (__dst)
  {
    if (__src) {
      return memmove(__dst, __src, a2 - (void)__src);
    }
  }
  return __src;
}

uint64_t sub_10010A78C(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_10010A7B8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10010A7E0@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_10010A810(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10010A8F0;
  return v5(v2 + 32);
}

uint64_t sub_10010A8F0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t _s9MusicCore13CollaborationO5SetupO5title6activeSSSb_tFZ_0()
{
  uint64_t v0 = sub_10045C2A0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100460C60();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  sub_100460BF0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v8 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v9 = sub_100460D20();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t sub_10010AC1C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 2) {
    return swift_bridgeObjectRelease();
  }
  if (a3 <= 1u) {
    return swift_errorRelease();
  }
  return result;
}

Swift::Int sub_10010AC44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100005BFC((uint64_t *)&unk_100575840);
    uint64_t v3 = sub_100462100();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1004628B0();
      swift_bridgeObjectRetain();
      sub_100460DA0();
      Swift::Int result = sub_100462900();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (Swift::Int result = sub_1004626E0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            Swift::Int result = sub_1004626E0();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

Swift::Int sub_10010ADE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100005BFC((uint64_t *)&unk_100575760);
    uint64_t v3 = sub_100462100();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      Swift::UInt v7 = *(unsigned __int8 *)(v6 + v4);
      sub_1004628B0();
      sub_1004628C0(v7);
      Swift::Int result = sub_100462900();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_10010AF2C()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 72)) {
      swift_release();
    }
  }

  return swift_deallocObject();
}

uint64_t sub_10010AF88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005BFC(&qword_100575478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10010AFF0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100012B44;
  v4[9] = a1;
  v4[10] = v1 + 32;
  return _swift_task_switch(sub_10010195C, 0, 0);
}

void sub_10010B0A0()
{
  uint64_t v0 = sub_100460750();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100005BFC((uint64_t *)&unk_100575850);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100570808 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  int v7 = v23;
  uint64_t v8 = v25;
  uint64_t v21 = v26;
  uint64_t v22 = v27;
  uint64_t v9 = v29;
  uint64_t v32 = v28;
  uint64_t v20 = v30;
  uint64_t v18 = v24;
  uint64_t v19 = v31;
  if ((Playlist.hasActiveCollaboration.getter() & 1) == 0)
  {
    if (!v7)
    {
      sub_10010B4C4();
      swift_allocError();
      long long v14 = xmmword_100466820;
      goto LABEL_15;
    }
    sub_100460760();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
    {
      sub_100009790((uint64_t)v6, (uint64_t *)&unk_100575850);
    }
    else
    {
      sub_100460740();
      sub_10010D198((unint64_t *)&qword_100572118, (void (*)(uint64_t))&type metadata accessor for Playlist.EditableComponents);
      char v15 = sub_100462000();
      uint64_t v16 = *(void (**)(char *, uint64_t))(v1 + 8);
      v16(v3, v0);
      v16(v6, v0);
      if (v15) {
        goto LABEL_4;
      }
    }
    sub_10010B4C4();
    swift_allocError();
    long long v14 = xmmword_100466980;
    goto LABEL_15;
  }
LABEL_4:
  if ((sub_1000FFF70(3u, v8) & 1) == 0)
  {
    sub_10010B4C4();
    swift_allocError();
    long long v14 = xmmword_100466990;
LABEL_15:
    *uint64_t v13 = v14;
    uint64_t v12 = v13 + 1;
    goto LABEL_16;
  }
  if (!v9 || ([v9 isMinorAccountHolder] & 1) != 0)
  {
    sub_10010B4C4();
    swift_allocError();
    unint64_t v11 = (void *)v10;
    uint64_t v12 = (unsigned char *)(v10 + 16);
    *unint64_t v11 = 0;
    v11[1] = 0;
LABEL_16:
    *uint64_t v12 = 3;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  if ((v18 & 1) == 0)
  {
    sub_10010B4C4();
    swift_allocError();
    long long v14 = xmmword_1004668F0;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

unint64_t sub_10010B4C4()
{
  unint64_t result = qword_100575488;
  if (!qword_100575488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575488);
  }
  return result;
}

uint64_t sub_10010B518()
{
  return swift_deallocObject();
}

id sub_10010B550@<X0>(uint64_t a1@<X8>)
{
  return sub_100108040(*(void **)(v1 + 16), a1);
}

uint64_t sub_10010B558(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10010B568()
{
  return swift_release();
}

uint64_t sub_10010B570(void *a1)
{
  return sub_10045C9C0();
}

uint64_t sub_10010B5B8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005C9C(&qword_100571FF0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10010B608()
{
  unint64_t result = qword_100575588;
  if (!qword_100575588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575588);
  }
  return result;
}

unint64_t sub_10010B660()
{
  unint64_t result = qword_100575590;
  if (!qword_100575590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575590);
  }
  return result;
}

ValueMetadata *type metadata accessor for Collaboration()
{
  return &type metadata for Collaboration;
}

ValueMetadata *type metadata accessor for Collaboration.Setup()
{
  return &type metadata for Collaboration.Setup;
}

uint64_t sub_10010B6D8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 2) {
    return swift_bridgeObjectRetain();
  }
  if (a3 <= 1u) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t destroy for Collaboration.Error(uint64_t a1)
{
  return sub_10010AC1C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s9MusicCore13CollaborationO5ErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10010B6D8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Collaboration.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10010B6D8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_10010AC1C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Collaboration.Error(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_10010AC1C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Collaboration.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Collaboration.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10010B888(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_10010B8A0(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Collaboration.Error()
{
  return &type metadata for Collaboration.Error;
}

uint64_t type metadata accessor for Collaboration.Manager()
{
  return self;
}

ValueMetadata *type metadata accessor for Collaboration.Manager.DeepLinkType()
{
  return &type metadata for Collaboration.Manager.DeepLinkType;
}

unsigned char *_s9MusicCore13CollaborationO7ManagerC12DeepLinkTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10010B9CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Collaboration.Manager.Moderation()
{
  return &type metadata for Collaboration.Manager.Moderation;
}

uint64_t type metadata accessor for Collaboration.ArtworkCachingReference()
{
  return self;
}

uint64_t sub_10010BA28()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10010BA60(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100012B44;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100575738 + dword_100575738);
  return v6(a1, v4);
}

uint64_t sub_10010BB18(uint64_t a1)
{
  unsigned int v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000117C8;
  unsigned int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100575748 + dword_100575748);
  return v6(a1, v4);
}

unint64_t sub_10010BBD0(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1004623D0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100005BFC(&qword_100575788);
      uint64_t result = sub_100462100();
      int v3 = (unsigned char *)result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1004623D0();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return (unint64_t)v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  int v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return (unint64_t)v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  uint64_t v8 = v3 + 56;
  unint64_t v21 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  while (v21)
  {
    uint64_t result = sub_100462170();
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_25;
    }
LABEL_18:
    sub_10045D670();
    sub_10010D198(&qword_100575790, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = sub_100460B20();
    uint64_t v11 = -1 << v3[32];
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_10010D198(&qword_100575798, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
      while (1)
      {
        uint64_t result = sub_100460BD0();
        if (result) {
          break;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          goto LABEL_22;
        }
      }
      uint64_t result = swift_release();
    }
    else
    {
LABEL_22:
      *(void *)&v8[8 * v13] = v15 | v14;
      *(void *)(*((void *)v3 + 6) + 8 * v12) = v9;
      uint64_t v17 = *((void *)v3 + 2);
      BOOL v10 = __OFADD__(v17, 1);
      uint64_t v18 = v17 + 1;
      if (v10) {
        goto LABEL_26;
      }
      *((void *)v3 + 2) = v18;
    }
    if (v7 == v5) {
      return (unint64_t)v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_27;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

Swift::Int sub_10010BE84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100005BFC(&qword_100575780);
    uint64_t v3 = sub_100462100();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v21 = v1;
    uint64_t v22 = a1 + 32;
    while (1)
    {
      int v6 = *(unsigned __int8 *)(v22 + v4++);
      sub_1004628B0();
      sub_100460DA0();
      swift_bridgeObjectRelease();
      Swift::Int result = sub_100462900();
      uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
      unint64_t v9 = result & v8;
      unint64_t v10 = (result & (unint64_t)v8) >> 6;
      uint64_t v11 = *(void *)(v5 + 8 * v10);
      uint64_t v12 = 1 << (result & v8);
      if ((v12 & v11) != 0)
      {
        do
        {
          if (*(unsigned char *)(*(void *)(v3 + 48) + v9))
          {
            if (*(unsigned char *)(*(void *)(v3 + 48) + v9) == 1) {
              uint64_t v13 = 0x657469726F766166;
            }
            else {
              uint64_t v13 = 0x64616F6C6E776F64;
            }
            unint64_t v14 = 0xE900000000000073;
            if (!v6)
            {
LABEL_10:
              unint64_t v15 = 0xE300000000000000;
              if (v13 != 7105633) {
                goto LABEL_19;
              }
              goto LABEL_18;
            }
          }
          else
          {
            unint64_t v14 = 0xE300000000000000;
            uint64_t v13 = 7105633;
            if (!v6) {
              goto LABEL_10;
            }
          }
          if (v6 == 1) {
            uint64_t v16 = 0x657469726F766166;
          }
          else {
            uint64_t v16 = 0x64616F6C6E776F64;
          }
          unint64_t v15 = 0xE900000000000073;
          if (v13 != v16) {
            goto LABEL_19;
          }
LABEL_18:
          if (v14 == v15)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_4;
          }
LABEL_19:
          char v17 = sub_1004626E0();
          swift_bridgeObjectRelease();
          Swift::Int result = swift_bridgeObjectRelease();
          if (v17) {
            goto LABEL_4;
          }
          unint64_t v9 = (v9 + 1) & v8;
          unint64_t v10 = v9 >> 6;
          uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
          uint64_t v12 = 1 << v9;
        }
        while ((v11 & (1 << v9)) != 0);
      }
      *(void *)(v5 + 8 * v10) = v12 | v11;
      *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
      uint64_t v18 = *(void *)(v3 + 16);
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19) {
        break;
      }
      *(void *)(v3 + 16) = v20;
LABEL_4:
      if (v4 == v21) {
        return v3;
      }
    }
    __break(1u);
  }
  else
  {
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return result;
}

void *sub_10010C0E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return &_swiftEmptySetSingleton;
  }
  sub_100005BFC(&qword_100575778);
  uint64_t v3 = sub_100462100();
  uint64_t v4 = 0;
  uint64_t v5 = v3 + 56;
  uint64_t v28 = a1 + 32;
  uint64_t v27 = v1;
  do
  {
    int v6 = *(unsigned __int8 *)(v28 + v4);
    uint64_t v29 = v4 + 1;
    sub_1004628B0();
    sub_100460DA0();
    swift_bridgeObjectRelease();
    Swift::Int v7 = sub_100462900();
    uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
    unint64_t v9 = v7 & v8;
    unint64_t v10 = (v7 & (unint64_t)v8) >> 6;
    uint64_t v11 = *(void *)(v5 + 8 * v10);
    uint64_t v12 = 1 << (v7 & v8);
    if ((v12 & v11) != 0)
    {
      while (1)
      {
        unint64_t v13 = 0xD000000000000029;
        unint64_t v14 = 0x800000010048D3C0;
        switch(*(unsigned char *)(*(void *)(v3 + 48) + v9))
        {
          case 1:
            unint64_t v13 = 0xD000000000000025;
            unint64_t v15 = "LibraryView.RecentlyAdded";
            goto LABEL_20;
          case 2:
            unint64_t v13 = 0xD000000000000023;
            unint64_t v15 = "LibraryView.Playlists";
            goto LABEL_20;
          case 3:
            unint64_t v13 = 0xD000000000000022;
            unint64_t v15 = "LibraryView.Artists";
            goto LABEL_20;
          case 4:
            uint64_t v16 = "LibraryView.Albums";
            goto LABEL_17;
          case 5:
            unint64_t v13 = 0xD000000000000026;
            unint64_t v15 = "LibraryView.Songs";
            goto LABEL_20;
          case 6:
            unint64_t v13 = 0xD000000000000027;
            unint64_t v15 = "LibraryView.MadeForYou";
            goto LABEL_20;
          case 7:
            unint64_t v13 = 0xD000000000000022;
            unint64_t v15 = "LibraryView.MusicVideos";
            goto LABEL_20;
          case 8:
            unint64_t v13 = 0xD000000000000028;
            unint64_t v15 = "LibraryView.Genres";
            goto LABEL_20;
          case 9:
            unint64_t v13 = 0xD000000000000025;
            unint64_t v15 = "LibraryView.Compilations";
            goto LABEL_20;
          case 0xA:
            uint64_t v16 = "LibraryView.Composers";
LABEL_17:
            unint64_t v14 = (unint64_t)v16 | 0x8000000000000000;
            unint64_t v13 = 0xD000000000000021;
            break;
          case 0xB:
            unint64_t v13 = 0xD000000000000026;
            unint64_t v15 = "LibraryView.Shows";
            goto LABEL_20;
          case 0xC:
            unint64_t v13 = 0xD000000000000027;
            unint64_t v15 = "LibraryView.Downloaded";
LABEL_20:
            unint64_t v14 = (unint64_t)v15 | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v17 = 0xD000000000000029;
        unint64_t v18 = 0x800000010048D3C0;
        switch(v6)
        {
          case 1:
            unint64_t v19 = 0xD000000000000025;
            uint64_t v20 = "LibraryView.RecentlyAdded";
            goto LABEL_37;
          case 2:
            unint64_t v19 = 0xD000000000000023;
            uint64_t v20 = "LibraryView.Playlists";
            goto LABEL_37;
          case 3:
            unint64_t v19 = 0xD000000000000022;
            uint64_t v20 = "LibraryView.Artists";
            goto LABEL_37;
          case 4:
            uint64_t v21 = "LibraryView.Albums";
            goto LABEL_32;
          case 5:
            unint64_t v19 = 0xD000000000000026;
            uint64_t v20 = "LibraryView.Songs";
            goto LABEL_37;
          case 6:
            unint64_t v19 = 0xD000000000000027;
            uint64_t v20 = "LibraryView.MadeForYou";
            goto LABEL_37;
          case 7:
            unint64_t v19 = 0xD000000000000022;
            uint64_t v20 = "LibraryView.MusicVideos";
            goto LABEL_37;
          case 8:
            unint64_t v19 = 0xD000000000000028;
            uint64_t v20 = "LibraryView.Genres";
            goto LABEL_37;
          case 9:
            unint64_t v19 = 0xD000000000000025;
            uint64_t v20 = "LibraryView.Compilations";
            goto LABEL_37;
          case 10:
            uint64_t v21 = "LibraryView.Composers";
LABEL_32:
            unint64_t v18 = (unint64_t)v21 | 0x8000000000000000;
            unint64_t v17 = 0xD000000000000021;
            goto LABEL_33;
          case 11:
            unint64_t v19 = 0xD000000000000026;
            uint64_t v20 = "LibraryView.Shows";
            goto LABEL_37;
          case 12:
            unint64_t v19 = 0xD000000000000027;
            uint64_t v20 = "LibraryView.Downloaded";
LABEL_37:
            unint64_t v18 = (unint64_t)v20 | 0x8000000000000000;
            if (v13 == v19) {
              goto LABEL_38;
            }
            goto LABEL_39;
          default:
LABEL_33:
            if (v13 != v17) {
              goto LABEL_39;
            }
LABEL_38:
            if (v14 == v18)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_4;
            }
LABEL_39:
            char v22 = sub_1004626E0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v22) {
              goto LABEL_4;
            }
            unint64_t v9 = (v9 + 1) & v8;
            unint64_t v10 = v9 >> 6;
            uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
            uint64_t v12 = 1 << v9;
            if ((v11 & (1 << v9)) == 0) {
              goto LABEL_41;
            }
            break;
        }
      }
    }
LABEL_41:
    *(void *)(v5 + 8 * v10) = v12 | v11;
    *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
    uint64_t v23 = *(void *)(v3 + 16);
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
      JUMPOUT(0x10010C580);
    }
    *(void *)(v3 + 16) = v25;
LABEL_4:
    uint64_t v4 = v29;
  }
  while (v29 != v27);
  return (void *)v3;
}

void *sub_10010C61C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100005BFC(&qword_100575770);
    uint64_t v3 = sub_100462100();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v26 = a1 + 32;
    uint64_t v25 = v1;
    while (1)
    {
      unsigned int v6 = *(unsigned __int8 *)(v26 + v4);
      sub_1004628B0();
      unsigned int v7 = v6 >> 6;
      uint64_t v27 = v4 + 1;
      sub_100460DA0();
      swift_bridgeObjectRelease();
      Swift::Int v8 = sub_100462900();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = v8 & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      if (((1 << v10) & v12) != 0) {
        break;
      }
LABEL_29:
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(*(void *)(v3 + 48) + v10) = v6;
      uint64_t v21 = *(void *)(v3 + 16);
      BOOL v22 = __OFADD__(v21, 1);
      uint64_t v23 = v21 + 1;
      if (v22)
      {
        __break(1u);
        JUMPOUT(0x10010CDBCLL);
      }
      *(void *)(v3 + 16) = v23;
LABEL_3:
      uint64_t v4 = v27;
      if (v27 == v25) {
        return (void *)v3;
      }
    }
    uint64_t v14 = ~v9;
    BOOL v16 = v6 != 192 || v7 != 3;
    char v28 = v16;
    while (1)
    {
      unsigned int v17 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v10);
      unsigned int v18 = v17 >> 6;
      if (v17 >> 6)
      {
        if (v18 == 1)
        {
          if (v7 == 1)
          {
            if (((v17 ^ v6) & 0x3F) == 0) {
              goto LABEL_3;
            }
            goto LABEL_13;
          }
        }
        else if (v18 == 3)
        {
          char v19 = v28;
          if (v17 != 192) {
            char v19 = 1;
          }
          if ((v19 & 1) == 0) {
            goto LABEL_3;
          }
        }
      }
      else if (v6 < 0x40)
      {
        if (((v17 ^ v6) & 1) == 0) {
          goto LABEL_3;
        }
        goto LABEL_13;
      }
      sub_1004628B0();
      sub_100460DA0();
      swift_bridgeObjectRelease();
      Swift::Int v20 = sub_100462900();
      sub_1004628B0();
      sub_100460DA0();
      swift_bridgeObjectRelease();
      if (v20 == sub_100462900()) {
        goto LABEL_3;
      }
LABEL_13:
      unint64_t v10 = (v10 + 1) & v14;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      if ((v12 & (1 << v10)) == 0) {
        goto LABEL_29;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_10010CE18()
{
  uint64_t v1 = sub_1004608E0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_10010CEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(sub_1004608E0() - 8);
  uint64_t v10 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_100109D9C(a1, a2, a3, a4, v10);
}

uint64_t sub_10010CF40()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_10010CF78(uint64_t a1, uint64_t a2)
{
  sub_10010A6F8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10010CF80()
{
  uint64_t v1 = sub_1004608E0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10010D06C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1004608E0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_1000117C8;
  return sub_100109FB8(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_10010D198(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10010D1E0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100012B44;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100575860 + dword_100575860);
  return v6(a1, v4);
}

double static Alert.enableCloudLibraryAlert(context:)@<D0>(uint64_t a1@<X8>)
{
  sub_100117F94((uint64_t)v4);
  long long v2 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v2;
  double result = *(double *)&v5;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  return result;
}

double static Alert.explicitRestrictedAlert(forPlayback:)@<D0>(uint64_t a1@<X8>)
{
  sub_1001181F8((uint64_t)v4);
  long long v2 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v2;
  double result = *(double *)&v5;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  return result;
}

double static Alert.confirmDelete(for:library:)@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = (void (*)(char *, char *, uint64_t))a1[4];
  uint64_t v7 = sub_10000C300(a1, v5);
  sub_10010F72C((uint64_t)v7, a2, v5, v6, (uint64_t)v10);
  long long v8 = v10[1];
  *(_OWORD *)a3 = v10[0];
  *(_OWORD *)(a3 + 16) = v8;
  double result = *(double *)&v11;
  *(_OWORD *)(a3 + 32) = v11;
  *(void *)(a3 + 48) = v12;
  return result;
}

double static Alert.cellularDataDisallowedAlert(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1001191DC(a1, a2, (uint64_t *)v6);
  long long v4 = v6[1];
  *(_OWORD *)a3 = v6[0];
  *(_OWORD *)(a3 + 16) = v4;
  double result = *(double *)&v7;
  *(_OWORD *)(a3 + 32) = v7;
  *(void *)(a3 + 48) = v8;
  return result;
}

double static Alert.dolbyAtmosDownloadsAlert(message:completion:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_100118D2C(a1, a2, a3, a4, (uint64_t *)v8);
  long long v6 = v8[1];
  *(_OWORD *)a5 = v8[0];
  *(_OWORD *)(a5 + 16) = v6;
  double result = *(double *)&v9;
  *(_OWORD *)(a5 + 32) = v9;
  *(void *)(a5 + 48) = v10;
  return result;
}

uint64_t static Alert.Action.tapToRadar(title:description:screenshots:attachments:keywords:withDevicePrefix:)@<X0>(uint64_t a1@<X3>, unint64_t a2@<X4>, uint64_t a3@<X5>, void (*a4)(char *, char *, uint64_t)@<X6>, int a5@<W7>, uint64_t a6@<X8>)
{
  sub_100119694(a1, a2, a3, a4, a5, (uint64_t)v8);
  return sub_10010AF88((uint64_t)v8, a6);
}

double static Alert.cellularRestrictedAlert(model:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100119ADC(a1, (uint64_t *)v5);
  long long v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  double result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(void *)(a2 + 48) = v7;
  return result;
}

uint64_t sub_10010D4DC()
{
  return _swift_task_switch(sub_10010D4F8, 0, 0);
}

id sub_10010D4F8()
{
  id result = [self sharedNetworkObserver];
  if (result)
  {
    long long v2 = result;
    [result setVideoCellularStreamingAllowed:1];

    long long v3 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10010D590()
{
  return _swift_task_switch(sub_10010D5AC, 0, 0);
}

id sub_10010D5AC()
{
  id result = [self sharedNetworkObserver];
  if (result)
  {
    long long v2 = result;
    [result setMusicCellularStreamingAllowed:1];

    long long v3 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double static Alert.networkUnavailableAlert(model:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10011A96C(a1, (uint64_t *)v5);
  long long v3 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v3;
  double result = *(double *)&v6;
  *(_OWORD *)(a2 + 32) = v6;
  *(void *)(a2 + 48) = v7;
  return result;
}

uint64_t sub_10010D690()
{
  return _swift_task_switch(sub_10011B8FC, 0, 0);
}

double static Alert.accountRequiredAlert()@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v52 = sub_10045C1E0();
  uint64_t v47 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v46 = (char *)v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10045C2A0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_100460C60();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  long long v9 = (char *)v40 - v8;
  sub_100460BF0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v10(v7, v9, v3);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v11 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v12 = sub_100460D20();
  uint64_t v50 = v13;
  uint64_t v51 = v12;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v40[1] = v4 + 8;
  v14(v9, v3);
  sub_100460BF0();
  v10(v7, v9, v3);
  id v15 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v16 = sub_100460D20();
  uint64_t v48 = v17;
  uint64_t v49 = v16;
  v14(v9, v3);
  uint64_t v41 = v14;
  sub_100460BF0();
  v10(v7, v9, v3);
  id v18 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v19 = sub_100460D20();
  uint64_t v44 = v20;
  uint64_t v45 = v19;
  v14(v9, v3);
  uint64_t v21 = v46;
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v22 = sub_10045C1B0();
  uint64_t v42 = v23;
  uint64_t v43 = v22;
  BOOL v24 = *(void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v25 = v52;
  v24(v21, v52);
  sub_100460BF0();
  v10(v7, v9, v3);
  id v26 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v27 = sub_100460D20();
  uint64_t v29 = v28;
  v41(v9, v3);
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v30 = sub_10045C1B0();
  uint64_t v32 = v31;
  v24(v21, v25);
  sub_100005BFC(&qword_10057A590);
  uint64_t v33 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v33 + 16) = xmmword_1004668E0;
  *(void *)(v33 + 32) = v30;
  *(void *)(v33 + 40) = v32;
  *(void *)(v33 + 48) = v27;
  *(void *)(v33 + 56) = v29;
  *(unsigned char *)(v33 + 64) = 2;
  *(void *)(v33 + 72) = &unk_1005758D0;
  *(void *)(v33 + 80) = 0;
  uint64_t v35 = v42;
  *(void *)(v33 + 88) = v43;
  *(void *)(v33 + 96) = v35;
  uint64_t v36 = v44;
  *(void *)(v33 + 104) = v45;
  *(void *)(v33 + 112) = v36;
  *(unsigned char *)(v33 + 120) = 2;
  *(void *)(v33 + 128) = 0;
  *(void *)(v33 + 136) = 0;
  uint64_t v37 = v53;
  uint64_t v38 = v50;
  *uint64_t v53 = v51;
  v37[1] = v38;
  uint64_t v39 = v48;
  void v37[2] = v49;
  v37[3] = v39;
  *((unsigned char *)v37 + 32) = 0;
  v37[5] = v33;
  v37[6] = 0;
  return result;
}

uint64_t sub_10010DB88()
{
  return _swift_task_switch(sub_10010DBA4, 0, 0);
}

id sub_10010DBA4()
{
  id result = [self defaultWorkspace];
  if (result)
  {
    uint64_t v2 = result;
    LSApplicationWorkspace.openSettings()();

    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double static Alert.subscriptionRequiredAlert()@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v52 = sub_10045C1E0();
  uint64_t v47 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v46 = (char *)v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10045C2A0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_100460C60();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  long long v9 = (char *)v40 - v8;
  sub_100460BF0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v10(v7, v9, v3);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v11 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v12 = sub_100460D20();
  uint64_t v50 = v13;
  uint64_t v51 = v12;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
  v40[1] = v4 + 8;
  v14(v9, v3);
  sub_100460BF0();
  v10(v7, v9, v3);
  id v15 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v16 = sub_100460D20();
  uint64_t v48 = v17;
  uint64_t v49 = v16;
  v14(v9, v3);
  uint64_t v41 = v14;
  sub_100460BF0();
  v10(v7, v9, v3);
  id v18 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v19 = sub_100460D20();
  uint64_t v44 = v20;
  uint64_t v45 = v19;
  v14(v9, v3);
  uint64_t v21 = v46;
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v22 = sub_10045C1B0();
  uint64_t v42 = v23;
  uint64_t v43 = v22;
  BOOL v24 = *(void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v25 = v52;
  v24(v21, v52);
  sub_100460BF0();
  v10(v7, v9, v3);
  id v26 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v27 = sub_100460D20();
  uint64_t v29 = v28;
  v41(v9, v3);
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v30 = sub_10045C1B0();
  uint64_t v32 = v31;
  v24(v21, v25);
  sub_100005BFC(&qword_10057A590);
  uint64_t v33 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v33 + 16) = xmmword_1004668E0;
  *(void *)(v33 + 32) = v30;
  *(void *)(v33 + 40) = v32;
  *(void *)(v33 + 48) = v27;
  *(void *)(v33 + 56) = v29;
  *(unsigned char *)(v33 + 64) = 2;
  *(void *)(v33 + 72) = &unk_1005758D8;
  *(void *)(v33 + 80) = 0;
  uint64_t v35 = v42;
  *(void *)(v33 + 88) = v43;
  *(void *)(v33 + 96) = v35;
  uint64_t v36 = v44;
  *(void *)(v33 + 104) = v45;
  *(void *)(v33 + 112) = v36;
  *(unsigned char *)(v33 + 120) = 2;
  *(void *)(v33 + 128) = 0;
  *(void *)(v33 + 136) = 0;
  uint64_t v37 = v53;
  uint64_t v38 = v50;
  *uint64_t v53 = v51;
  v37[1] = v38;
  uint64_t v39 = v48;
  void v37[2] = v49;
  v37[3] = v39;
  *((unsigned char *)v37 + 32) = 0;
  v37[5] = v33;
  v37[6] = 0;
  return result;
}

uint64_t sub_10010E108()
{
  return _swift_task_switch(sub_10010E124, 0, 0);
}

uint64_t sub_10010E124()
{
  id v1 = [self defaultWorkspace];
  if (v1)
  {
    uint64_t v2 = v1;
    LSApplicationWorkspace.openRestrictions()();
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10010E1AC()
{
  return _swift_task_switch(sub_10010E1C8, 0, 0);
}

id sub_10010E1C8()
{
  if (qword_100570808 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  uint64_t v5 = *(void **)(v0 + 96);
  id result = [self sharedConnection];
  if (result)
  {
    uint64_t v2 = result;
    sub_100460CB0();
    NSString v3 = sub_100460C70();
    swift_bridgeObjectRelease();
    [v2 setBoolValue:1 forSetting:v3];

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double static Alert.contentUnavailableAlert()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10045C1E0();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10045C2A0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_100460C60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v28 - v11;
  sub_100460BF0();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v13(v10, v12, v6);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v14 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v15 = sub_100460D20();
  uint64_t v29 = v16;
  uint64_t v30 = v15;
  uint64_t v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v12, v6);
  sub_100460BF0();
  v13(v10, v12, v6);
  id v18 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v19 = sub_100460D20();
  uint64_t v21 = v20;
  v17(v12, v6);
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v22 = sub_10045C1B0();
  uint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v4, v32);
  sub_100005BFC(&qword_10057A590);
  uint64_t v25 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v25 + 16) = xmmword_100466900;
  *(void *)(v25 + 32) = v22;
  *(void *)(v25 + 40) = v24;
  *(void *)(v25 + 48) = v19;
  *(void *)(v25 + 56) = v21;
  *(unsigned char *)(v25 + 64) = 2;
  *(void *)(v25 + 72) = 0;
  *(void *)(v25 + 80) = 0;
  uint64_t v27 = v29;
  *(void *)a1 = v30;
  *(void *)(a1 + 8) = v27;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v25;
  *(void *)(a1 + 48) = 0;
  return result;
}

double static Alert.userUploadRequiredAlert()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10045C1E0();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  __chkstk_darwin(v2);
  uint64_t v35 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10045C2A0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100460C60();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v31 - v10;
  sub_100460BF0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v9, v11, v5);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v13 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v14 = sub_100460D20();
  uint64_t v33 = v15;
  uint64_t v34 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v11, v5);
  sub_100460BF0();
  v12(v9, v11, v5);
  id v17 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v32 = sub_100460D20();
  uint64_t v19 = v18;
  v16(v11, v5);
  sub_100460BF0();
  v12(v9, v11, v5);
  id v20 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v21 = sub_100460D20();
  uint64_t v23 = v22;
  v16(v11, v5);
  uint64_t v24 = v35;
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v25 = sub_10045C1B0();
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v37);
  sub_100005BFC(&qword_10057A590);
  uint64_t v28 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v28 + 16) = xmmword_100466900;
  *(void *)(v28 + 32) = v25;
  *(void *)(v28 + 40) = v27;
  *(void *)(v28 + 48) = v21;
  *(void *)(v28 + 56) = v23;
  *(unsigned char *)(v28 + 64) = 2;
  *(void *)(v28 + 72) = 0;
  *(void *)(v28 + 80) = 0;
  uint64_t v30 = v33;
  *(void *)a1 = v34;
  *(void *)(a1 + 8) = v30;
  *(void *)(a1 + 16) = v32;
  *(void *)(a1 + 24) = v19;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v28;
  *(void *)(a1 + 48) = 0;
  return result;
}

double static Alert.ageVerificationFallbackAlert()@<D0>(uint64_t a1@<X8>)
{
  sub_10011AF4C((uint64_t)v4);
  long long v2 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v2;
  double result = *(double *)&v5;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v6;
  return result;
}

uint64_t sub_10010EB10()
{
  return _swift_task_switch(sub_10010EB2C, 0, 0);
}

uint64_t sub_10010EB2C()
{
  if (qword_100570990 != -1) {
    swift_once();
  }
  CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(0, 0);
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static Alert.Action.cancel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10045C1E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100571000 != -1) {
    swift_once();
  }
  uint64_t v7 = static String.cancelButtonTitle;
  uint64_t v6 = qword_1005878F0;
  swift_bridgeObjectRetain();
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v8 = sub_10045C1B0();
  uint64_t v10 = v9;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_10010ED00(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_10010ED20, 0, 0);
}

uint64_t sub_10010ED20()
{
  id v1 = *(void (**)(void))(v0 + 16);
  if (v1) {
    v1(0);
  }
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10010ED90(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_10010EDB0, 0, 0);
}

id sub_10010EDB0()
{
  id result = [self sharedNetworkObserver];
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = *(void *)(v0 + 16);
    [result setMusicCellularDownloadingAllowed:1];

    if (v3) {
      (*(void (**)(uint64_t))(v0 + 16))(1);
    }
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10010EE60(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_10010EE80, 0, 0);
}

uint64_t sub_10010EE80()
{
  id v1 = *(void **)(v0 + 24);
  uint64_t v3 = v1[3];
  uint64_t v2 = v1[4];
  uint64_t v4 = sub_10000C300(v1, v3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10010EF3C;
  return MusicLibrary.remove<A>(_:)(v4, v3, v2);
}

uint64_t sub_10010EF3C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10010F070, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_10010F070()
{
  uint64_t v12 = v0;
  if (qword_100570740 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_10045D310();
  sub_100009688(v1, (uint64_t)static Logger.actions);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_10045D2F0();
  os_log_type_t v3 = sub_100461750();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[6];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    v0[2] = v5;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v7 = sub_100460D40();
    *(void *)(v6 + 4) = sub_10001FCAC(v7, v8, &v11);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to delete item=%s", (uint8_t *)v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10010F26C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_10010F28C, 0, 0);
}

uint64_t sub_10010F28C()
{
  uint64_t v1 = *(int **)(v0 + 16);
  id v2 = [self standardUserDefaults];
  [v2 setPrefersSpatialDownloads:1];

  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v3;
  *os_log_type_t v3 = v0;
  v3[1] = sub_10010F39C;
  return v5(1);
}

uint64_t sub_10010F39C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10010F490(int *a1)
{
  uint64_t v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *id v2 = v1;
  v2[1] = sub_100012B44;
  return v4(0);
}

uint64_t sub_10010F560(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_100461280();
  *(void *)(v1 + 24) = sub_100461270();
  uint64_t v3 = sub_100461200();
  return _swift_task_switch(sub_10010F5F8, v3, v2);
}

uint64_t sub_10010F5F8()
{
  swift_release();
  id v1 = [self sharedApplication];
  sub_10045BD30(v2);
  uint64_t v4 = v3;
  sub_1000CB158((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_10011B8A8((unint64_t *)&qword_10057A950, type metadata accessor for OpenExternalURLOptionsKey);
  Class isa = sub_100460A70().super.isa;
  swift_bridgeObjectRelease();
  [v1 openURL:v4 options:isa completionHandler:0];

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10010F72C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, char *, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_10045C1E0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42[3] = a3;
  unsigned char v42[4] = (uint64_t)a4;
  uint64_t v14 = sub_10002A270(v42);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v14, a1, a3);
  uint64_t v15 = sub_1001164D0((uint64_t)v14, a3, a4);
  uint64_t v39 = v16;
  uint64_t v40 = v15;
  uint64_t v38 = v17;
  uint64_t v19 = v18;
  sub_10002FA38((uint64_t)v42, (uint64_t)v41);
  uint64_t v20 = swift_allocObject();
  sub_100017FD4(v41, v20 + 16);
  *(void *)(v20 + 56) = a2;
  uint64_t v37 = v19;
  swift_bridgeObjectRetain();
  swift_retain();
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v21 = sub_10045C1B0();
  uint64_t v35 = v22;
  uint64_t v36 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v24 = v10;
  v23(v13, v10);
  if (qword_100571000 != -1) {
    swift_once();
  }
  uint64_t v26 = static String.cancelButtonTitle;
  uint64_t v25 = qword_1005878F0;
  swift_bridgeObjectRetain();
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v27 = sub_10045C1B0();
  uint64_t v29 = v28;
  v23(v13, v24);
  uint64_t v30 = v37;
  swift_bridgeObjectRelease();
  sub_100005BFC(&qword_10057A590);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1004668E0;
  uint64_t v32 = v35;
  *(void *)(v31 + 32) = v36;
  *(void *)(v31 + 40) = v32;
  *(void *)(v31 + 48) = v38;
  *(void *)(v31 + 56) = v30;
  *(unsigned char *)(v31 + 64) = 2;
  *(void *)(v31 + 72) = &unk_100575958;
  *(void *)(v31 + 80) = v20;
  *(void *)(v31 + 88) = v27;
  *(void *)(v31 + 96) = v29;
  *(void *)(v31 + 104) = v26;
  *(void *)(v31 + 112) = v25;
  *(unsigned char *)(v31 + 120) = 0;
  *(void *)(v31 + 128) = 0;
  *(void *)(v31 + 136) = 0;
  uint64_t result = sub_100007118((uint64_t)v42);
  *(void *)a5 = 0;
  *(void *)(a5 + 8) = 0;
  uint64_t v34 = v39;
  *(void *)(a5 + 16) = v40;
  *(void *)(a5 + 24) = v34;
  *(unsigned char *)(a5 + 32) = 1;
  *(void *)(a5 + 40) = v31;
  *(void *)(a5 + 48) = 0;
  return result;
}

uint64_t sub_10010F9D0(uint64_t a1)
{
  uint64_t v148 = a1;
  uint64_t v124 = sub_1004603B0();
  uint64_t v120 = *(void *)(v124 - 8);
  uint64_t v1 = __chkstk_darwin(v124);
  uint64_t v118 = (char *)&v114 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  v119 = (char *)&v114 - v4;
  __chkstk_darwin(v3);
  uint64_t v121 = (char *)&v114 - v5;
  uint64_t v126 = sub_100460840();
  uint64_t v122 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  v123 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_1004608A0();
  uint64_t v125 = *(void *)(v129 - 8);
  uint64_t v7 = __chkstk_darwin(v129);
  v127 = (char *)&v114 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  Swift::String v128 = (char *)&v114 - v9;
  uint64_t v133 = sub_10045CFB0();
  uint64_t v130 = *(void *)(v133 - 8);
  uint64_t v10 = __chkstk_darwin(v133);
  v114 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v132 = (char *)&v114 - v12;
  uint64_t v136 = sub_10045CF50();
  uint64_t v131 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  v135 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_10045CCF0();
  uint64_t v134 = *(void *)(v139 - 8);
  uint64_t v14 = __chkstk_darwin(v139);
  v117 = (void (*)(char *, char *, uint64_t))((char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v138 = (char *)&v114 - v16;
  uint64_t v17 = sub_100460280();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  v116 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v141 = (char *)&v114 - v21;
  uint64_t v143 = sub_1004608E0();
  uint64_t v140 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  v145 = (char *)&v114 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10045FCF0();
  uint64_t v144 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  v115 = (char *)&v114 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v114 - v26;
  uint64_t v28 = sub_10045C2A0();
  __chkstk_darwin(v28 - 8);
  v147 = (char *)&v114 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100460C60();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v114 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v114 - v35;
  uint64_t v37 = sub_100460330();
  uint64_t v146 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v114 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150[3] = v17;
  v150[4] = (uint64_t)&protocol witness table for Song;
  uint64_t v40 = sub_10002A270(v150);
  uint64_t v137 = v18;
  uint64_t v41 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v142 = v17;
  v41(v40, v148, v17);
  sub_10002FA38((uint64_t)v150, (uint64_t)v149);
  sub_100005BFC(&qword_100575960);
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    v145 = *(char **)(v31 + 16);
    ((void (*)(char *, char *, uint64_t))v145)(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v42 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v148 = sub_100460D20();
    uint64_t v144 = v43;
    uint64_t v44 = *(void (**)(char *, uint64_t))(v31 + 8);
    v44(v36, v30);
    sub_100460BF0();
    ((void (*)(char *, char *, uint64_t))v145)(v34, v36, v30);
    id v45 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v46 = v148;
    sub_100460D20();
    v44(v36, v30);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v39, v37);
    goto LABEL_29;
  }
  uint64_t v47 = v23;
  if (swift_dynamicCast())
  {
    uint64_t v148 = v23;
    sub_100460BF0();
    uint64_t v146 = *(void *)(v31 + 16);
    ((void (*)(char *, char *, uint64_t))v146)(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v48 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v49 = sub_100460D20();
    uint64_t v50 = *(void (**)(char *, uint64_t))(v31 + 8);
    v50(v36, v30);
    sub_100460BF0();
    ((void (*)(char *, char *, uint64_t))v146)(v34, v36, v30);
    id v51 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v46 = v49;
    sub_100460D20();
    v50(v36, v30);
    (*(void (**)(char *, uint64_t))(v144 + 8))(v27, v148);
    goto LABEL_29;
  }
  uint64_t v52 = v143;
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v53(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v54 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v148 = sub_100460D20();
    uint64_t v55 = *(void (**)(char *, uint64_t))(v31 + 8);
    v55(v36, v30);
    sub_100460BF0();
    v53(v34, v36, v30);
    id v56 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v46 = v148;
    sub_100460D20();
    v55(v36, v30);
    (*(void (**)(char *, uint64_t))(v140 + 8))(v145, v52);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    id v57 = v36;
    sub_100460BF0();
    char v58 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v58(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v59 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v148 = sub_100460D20();
    uint64_t v60 = *(void (**)(char *, uint64_t))(v31 + 8);
    v60(v57, v30);
    sub_100460BF0();
    v58(v34, v57, v30);
    id v61 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v60(v57, v30);
    uint64_t v46 = v148;
    (*(void (**)(char *, uint64_t))(v137 + 8))(v141, v142);
    goto LABEL_29;
  }
  dispatch_group_t v62 = v34;
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    unsigned __int8 v63 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v63(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v64 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v65 = sub_100460D20();
    NSString v66 = *(void (**)(char *, uint64_t))(v31 + 8);
    v66(v36, v30);
    sub_100460BF0();
    v63(v34, v36, v30);
    id v67 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v46 = v65;
    sub_100460D20();
    v66(v36, v30);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v138, v139);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    id v68 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v68(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v69 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v70 = sub_100460D20();
    uint64_t v71 = *(void (**)(char *, uint64_t))(v31 + 8);
    v71(v36, v30);
    sub_100460BF0();
    v68(v34, v36, v30);
    id v72 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v46 = v70;
    sub_100460D20();
    v71(v36, v30);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v135, v136);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v73(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v74 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v75 = sub_100460D20();
    uint64_t v76 = *(void (**)(char *, uint64_t))(v31 + 8);
    v76(v36, v30);
    sub_100460BF0();
    v73(v34, v36, v30);
    id v77 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v46 = v75;
    sub_100460D20();
    v76(v36, v30);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v132, v133);
    goto LABEL_29;
  }
  uint64_t v79 = v128;
  uint64_t v80 = v129;
  if (!swift_dynamicCast())
  {
    int v90 = v121;
    uint64_t v91 = v124;
    uint64_t v92 = v31;
    if (swift_dynamicCast())
    {
      uint64_t v93 = v47;
      id v94 = v90;
      uint64_t v95 = v120;
      id v96 = v119;
      (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v119, v94, v91);
      uint64_t v97 = v118;
      (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v118, v96, v91);
      int v98 = (*(uint64_t (**)(char *, uint64_t))(v95 + 88))(v97, v91);
      if (v98 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v95 + 96))(v97, v91);
        uint64_t v99 = v137;
        uint64_t v100 = (uint64_t)v116;
        uint64_t v101 = v142;
        (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v116, v97, v142);
        uint64_t v102 = sub_10010F9D0(v100);
LABEL_41:
        uint64_t v46 = v102;
        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v100, v101);
        (*(void (**)(char *, uint64_t))(v95 + 8))(v96, v91);
        goto LABEL_29;
      }
      if (v98 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v95 + 96))(v97, v91);
        uint64_t v99 = v144;
        uint64_t v100 = (uint64_t)v115;
        uint64_t v101 = v93;
        (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v115, v97, v93);
        uint64_t v102 = sub_10011147C(v100);
        goto LABEL_41;
      }
      uint64_t v107 = *(void (**)(char *, uint64_t))(v95 + 8);
      v107(v96, v91);
      v107(v97, v91);
    }
LABEL_51:
    sub_100007118((uint64_t)v149);
    sub_100460BF0();
    uint64_t v109 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
    v109(v62, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v110 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v111 = sub_100460D20();
    id v112 = *(void (**)(char *, uint64_t))(v92 + 8);
    v112(v36, v30);
    sub_100460BF0();
    v109(v62, v36, v30);
    id v113 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v46 = v111;
    sub_100460D20();
    v112(v36, v30);
    goto LABEL_30;
  }
  uint64_t v148 = v47;
  uint64_t v81 = v125;
  id v82 = v127;
  (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v127, v79, v80);
  uint64_t v83 = v123;
  sub_100460850();
  uint64_t v84 = v122;
  uint64_t v85 = v126;
  int v86 = (*(uint64_t (**)(char *, uint64_t))(v122 + 88))(v83, v126);
  if (v86 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v84 + 96))(v83, v85);
    uint64_t v87 = v134;
    NSString v88 = v117;
    uint64_t v89 = v139;
    (*(void (**)(char *, char *, uint64_t))(v134 + 32))((char *)v117, v83, v139);
    uint64_t v46 = sub_100112F0C(v88);
    (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v87 + 8))(v88, v89);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v127, v80);
LABEL_29:
    sub_100007118((uint64_t)v149);
LABEL_30:
    sub_100007118((uint64_t)v150);
    return v46;
  }
  if (v86 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v84 + 96))(v83, v126);
    uint64_t v103 = v144;
    uint64_t v104 = (uint64_t)v115;
    uint64_t v105 = v148;
    (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v115, v83, v148);
    uint64_t v106 = sub_10011147C(v104);
LABEL_47:
    uint64_t v46 = v106;
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v104, v105);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v80);
    goto LABEL_29;
  }
  if (v86 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v84 + 96))(v83, v126);
    uint64_t v103 = v137;
    uint64_t v104 = (uint64_t)v116;
    uint64_t v105 = v142;
    (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v116, v83, v142);
    uint64_t v106 = sub_10010F9D0(v104);
    goto LABEL_47;
  }
  uint64_t v108 = v126;
  if (v86 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v84 + 96))(v83, v126);
    uint64_t v103 = v130;
    uint64_t v104 = (uint64_t)v114;
    uint64_t v105 = v133;
    (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v114, v83, v133);
    uint64_t v106 = sub_1001149F8(v104);
    goto LABEL_47;
  }
  if (v86 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v86 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v80);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v108);
    uint64_t v92 = v31;
    goto LABEL_51;
  }
  (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v126);
  uint64_t result = sub_100462350();
  __break(1u);
  return result;
}

uint64_t sub_10011147C(uint64_t a1)
{
  uint64_t v159 = a1;
  uint64_t v137 = sub_1004603B0();
  uint64_t v132 = *(void *)(v137 - 8);
  uint64_t v1 = __chkstk_darwin(v137);
  uint64_t v130 = (char *)&v125 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v131 = (char *)&v125 - v4;
  __chkstk_darwin(v3);
  uint64_t v133 = (char *)&v125 - v5;
  uint64_t v134 = sub_100460840();
  uint64_t v135 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t v136 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_1004608A0();
  uint64_t v139 = *(void *)(v141 - 8);
  uint64_t v7 = __chkstk_darwin(v141);
  v138 = (char *)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v140 = (char *)&v125 - v9;
  uint64_t v145 = sub_10045CFB0();
  uint64_t v142 = *(void *)(v145 - 8);
  uint64_t v10 = __chkstk_darwin(v145);
  uint64_t v126 = (char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v144 = (char *)&v125 - v12;
  uint64_t v148 = sub_10045CF50();
  uint64_t v143 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  v147 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_10045CCF0();
  uint64_t v146 = *(void *)(v151 - 8);
  uint64_t v14 = __chkstk_darwin(v151);
  uint64_t v129 = (void (*)(char *, char *, uint64_t))((char *)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v150 = (char *)&v125 - v16;
  uint64_t v154 = sub_100460280();
  uint64_t v149 = *(void *)(v154 - 8);
  uint64_t v17 = __chkstk_darwin(v154);
  Swift::String v128 = (char *)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v153 = (char *)&v125 - v19;
  uint64_t v155 = sub_1004608E0();
  uint64_t v152 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v21 = (char *)&v125 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10045FCF0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  v127 = (char *)&v125 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v125 - v26;
  uint64_t v28 = sub_10045C2A0();
  __chkstk_darwin(v28 - 8);
  v158 = (char *)&v125 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100460C60();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (void (**)(char *, uint64_t))((char *)&v125 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v125 - v35;
  uint64_t v37 = sub_100460330();
  v157 = *(void (***)(char *, uint64_t))(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v125 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161[3] = v22;
  v161[4] = (uint64_t)&protocol witness table for MusicVideo;
  uint64_t v40 = sub_10002A270(v161);
  uint64_t v156 = v23;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v23 + 16))(v40, v159, v22);
  sub_10002FA38((uint64_t)v161, (uint64_t)v160);
  sub_100005BFC(&qword_100575960);
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    uint64_t v156 = *(void *)(v31 + 16);
    ((void (*)(void (**)(char *, uint64_t), char *, uint64_t))v156)(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v41 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v42 = sub_100460D20();
    uint64_t v159 = v43;
    uint64_t v44 = *(void (**)(char *, uint64_t))(v31 + 8);
    v44(v36, v30);
    sub_100460BF0();
    ((void (*)(void (**)(char *, uint64_t), char *, uint64_t))v156)(v34, v36, v30);
    uint64_t v45 = v42;
    id v46 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v44(v36, v30);
    v157[1](v39, v37);
    goto LABEL_29;
  }
  v157 = v34;
  uint64_t v47 = v36;
  if (swift_dynamicCast())
  {
    uint64_t v155 = v22;
    sub_100460BF0();
    id v48 = *(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v31 + 16);
    uint64_t v49 = v157;
    v48(v157, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v50 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v51 = sub_100460D20();
    uint64_t v159 = v52;
    uint64_t v53 = *(void (**)(char *, uint64_t))(v31 + 8);
    v53(v36, v30);
    sub_100460BF0();
    v48(v49, v36, v30);
    uint64_t v45 = v51;
    id v54 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v53(v36, v30);
    (*(void (**)(char *, uint64_t))(v156 + 8))(v27, v155);
    goto LABEL_29;
  }
  uint64_t v55 = v155;
  if (swift_dynamicCast())
  {
    id v56 = v36;
    sub_100460BF0();
    id v57 = v157;
    uint64_t v156 = *(void *)(v31 + 16);
    ((void (*)(void (**)(char *, uint64_t), char *, uint64_t))v156)(v157, v47, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v58 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v154 = sub_100460D20();
    uint64_t v159 = v59;
    uint64_t v60 = *(void (**)(char *, uint64_t))(v31 + 8);
    v60(v56, v30);
    sub_100460BF0();
    ((void (*)(void (**)(char *, uint64_t), char *, uint64_t))v156)(v57, v56, v30);
    id v61 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v60(v56, v30);
    dispatch_group_t v62 = v21;
    uint64_t v45 = v154;
    (*(void (**)(char *, uint64_t))(v152 + 8))(v62, v55);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    unsigned __int8 v63 = *(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v31 + 16);
    id v64 = v157;
    v63(v157, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v65 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v66 = sub_100460D20();
    id v67 = *(void (**)(char *, uint64_t))(v31 + 8);
    v67(v36, v30);
    sub_100460BF0();
    v63(v64, v36, v30);
    uint64_t v45 = v66;
    id v68 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v67(v36, v30);
    (*(void (**)(char *, uint64_t))(v149 + 8))(v153, v154);
    goto LABEL_29;
  }
  uint64_t v69 = v31;
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    uint64_t v70 = *(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v31 + 16);
    uint64_t v71 = v157;
    v70(v157, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v72 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v73 = sub_100460D20();
    id v74 = *(void (**)(char *, uint64_t))(v31 + 8);
    v74(v36, v30);
    sub_100460BF0();
    v70(v71, v36, v30);
    uint64_t v45 = v73;
    id v75 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v74(v36, v30);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v150, v151);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    uint64_t v76 = *(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v31 + 16);
    id v77 = v157;
    v76(v157, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v78 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v79 = sub_100460D20();
    uint64_t v80 = *(void (**)(char *, uint64_t))(v31 + 8);
    v80(v36, v30);
    sub_100460BF0();
    v76(v77, v36, v30);
    uint64_t v45 = v79;
    id v81 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v80(v36, v30);
    (*(void (**)(char *, uint64_t))(v143 + 8))(v147, v148);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    id v82 = v36;
    sub_100460BF0();
    uint64_t v83 = *(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v31 + 16);
    uint64_t v84 = v157;
    v83(v157, v47, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v85 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v86 = sub_100460D20();
    uint64_t v87 = *(void (**)(char *, uint64_t))(v31 + 8);
    v87(v82, v30);
    sub_100460BF0();
    v83(v84, v82, v30);
    uint64_t v45 = v86;
    id v88 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v87(v82, v30);
    (*(void (**)(char *, uint64_t))(v142 + 8))(v144, v145);
    goto LABEL_29;
  }
  int v90 = v140;
  uint64_t v91 = v141;
  if (!swift_dynamicCast())
  {
    uint64_t v101 = v133;
    uint64_t v102 = v137;
    if (swift_dynamicCast())
    {
      uint64_t v103 = v132;
      uint64_t v104 = v131;
      (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v131, v101, v102);
      uint64_t v105 = v130;
      (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v130, v104, v102);
      int v106 = (*(uint64_t (**)(char *, uint64_t))(v103 + 88))(v105, v102);
      if (v106 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v103 + 96))(v105, v102);
        uint64_t v107 = v149;
        uint64_t v108 = v128;
        uint64_t v109 = v154;
        (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v128, v105, v154);
        uint64_t v45 = sub_10010F9D0(v108);
        (*(void (**)(char *, uint64_t))(v107 + 8))(v108, v109);
LABEL_41:
        (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v102);
LABEL_29:
        sub_100007118((uint64_t)v160);
LABEL_30:
        sub_100007118((uint64_t)v161);
        return v45;
      }
      if (v106 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v103 + 96))(v105, v102);
        uint64_t v112 = v156;
        id v113 = v127;
        (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v127, v105, v22);
        uint64_t v45 = sub_10011147C(v113);
        (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v22);
        goto LABEL_41;
      }
      uint64_t v118 = *(void (**)(char *, uint64_t))(v103 + 8);
      v118(v104, v102);
      v118(v105, v102);
    }
LABEL_52:
    sub_100007118((uint64_t)v160);
    sub_100460BF0();
    v119 = *(void (**)(void (**)(char *, uint64_t), char *, uint64_t))(v69 + 16);
    uint64_t v120 = v157;
    v119(v157, v47, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v121 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v122 = sub_100460D20();
    v123 = *(void (**)(char *, uint64_t))(v69 + 8);
    v123(v47, v30);
    sub_100460BF0();
    v119(v120, v47, v30);
    uint64_t v45 = v122;
    id v124 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v123(v47, v30);
    goto LABEL_30;
  }
  uint64_t v92 = v139;
  uint64_t v93 = v138;
  (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v138, v90, v91);
  id v94 = v136;
  sub_100460850();
  uint64_t v95 = v135;
  uint64_t v96 = v134;
  int v97 = (*(uint64_t (**)(char *, uint64_t))(v135 + 88))(v94, v134);
  if (v97 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v95 + 96))(v94, v96);
    uint64_t v98 = v146;
    uint64_t v99 = v129;
    uint64_t v100 = v151;
    (*(void (**)(char *, char *, uint64_t))(v146 + 32))((char *)v129, v94, v151);
    uint64_t v45 = sub_100112F0C(v99);
    (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v98 + 8))(v99, v100);
LABEL_48:
    (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v91);
    goto LABEL_29;
  }
  if (v97 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v95 + 96))(v94, v96);
    uint64_t v110 = v156;
    uint64_t v111 = v127;
    (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v127, v94, v22);
    uint64_t v45 = sub_10011147C(v111);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v22);
    goto LABEL_48;
  }
  if (v97 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v95 + 96))(v94, v96);
    uint64_t v114 = v149;
    uint64_t v115 = (uint64_t)v128;
    uint64_t v116 = v154;
    (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v128, v94, v154);
    uint64_t v117 = sub_10010F9D0(v115);
LABEL_47:
    uint64_t v45 = v117;
    (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v115, v116);
    goto LABEL_48;
  }
  if (v97 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v95 + 96))(v94, v96);
    uint64_t v114 = v142;
    uint64_t v115 = (uint64_t)v126;
    uint64_t v116 = v145;
    (*(void (**)(char *, char *, uint64_t))(v142 + 32))(v126, v94, v145);
    uint64_t v117 = sub_1001149F8(v115);
    goto LABEL_47;
  }
  if (v97 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v97 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v91);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v94, v96);
    goto LABEL_52;
  }
  (*(void (**)(char *, uint64_t))(v95 + 8))(v94, v96);
  uint64_t result = sub_100462350();
  __break(1u);
  return result;
}

uint64_t sub_100112F0C(void (*a1)(char *, char *, uint64_t))
{
  uint64_t v151 = a1;
  uint64_t v127 = sub_1004603B0();
  uint64_t v124 = *(void *)(v127 - 8);
  uint64_t v1 = __chkstk_darwin(v127);
  uint64_t v122 = (char *)&v117 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  v123 = (char *)&v117 - v4;
  __chkstk_darwin(v3);
  uint64_t v125 = (char *)&v117 - v5;
  uint64_t v130 = sub_100460840();
  uint64_t v131 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v126 = (char *)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_1004608A0();
  uint64_t v129 = *(void *)(v134 - 8);
  uint64_t v7 = __chkstk_darwin(v134);
  Swift::String v128 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v132 = (char *)&v117 - v9;
  uint64_t v137 = sub_10045CFB0();
  uint64_t v133 = *(void *)(v137 - 8);
  uint64_t v10 = __chkstk_darwin(v137);
  uint64_t v118 = (char *)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v136 = (char *)&v117 - v12;
  uint64_t v140 = sub_10045CF50();
  uint64_t v135 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v139 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10045CCF0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  id v121 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v142 = (char *)&v117 - v18;
  uint64_t v145 = sub_100460280();
  uint64_t v141 = *(void *)(v145 - 8);
  uint64_t v19 = __chkstk_darwin(v145);
  uint64_t v120 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v144 = (char *)&v117 - v21;
  uint64_t v146 = sub_1004608E0();
  uint64_t v143 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v148 = (char *)&v117 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10045FCF0();
  uint64_t v147 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  v119 = (char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v117 - v26;
  uint64_t v28 = sub_10045C2A0();
  __chkstk_darwin(v28 - 8);
  v150 = (char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100460C60();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v117 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v117 - v35;
  uint64_t v37 = sub_100460330();
  uint64_t v149 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v117 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153[3] = v14;
  v153[4] = sub_10011B8A8(&qword_100575968, (void (*)(uint64_t))&type metadata accessor for MusicMovie);
  uint64_t v40 = sub_10002A270(v153);
  uint64_t v138 = v15;
  (*(void (**)(uint64_t *, void, uint64_t))(v15 + 16))(v40, v151, v14);
  sub_10002FA38((uint64_t)v153, (uint64_t)v152);
  sub_100005BFC(&qword_100575960);
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    uint64_t v148 = *(char **)(v31 + 16);
    ((void (*)(char *, char *, uint64_t))v148)(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v41 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v151 = (void (*)(char *, char *, uint64_t))sub_100460D20();
    uint64_t v147 = v42;
    uint64_t v43 = *(void (**)(char *, uint64_t))(v31 + 8);
    v43(v36, v30);
    sub_100460BF0();
    ((void (*)(char *, char *, uint64_t))v148)(v34, v36, v30);
    id v44 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v45 = (uint64_t)v151;
    sub_100460D20();
    v43(v36, v30);
    (*(void (**)(char *, uint64_t))(v149 + 8))(v39, v37);
    goto LABEL_29;
  }
  id v46 = (void (*)(void, void, void))v23;
  if (swift_dynamicCast())
  {
    uint64_t v151 = (void (*)(char *, char *, uint64_t))v23;
    sub_100460BF0();
    uint64_t v149 = *(void *)(v31 + 16);
    ((void (*)(char *, char *, uint64_t))v149)(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v47 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v48 = sub_100460D20();
    uint64_t v49 = *(void (**)(char *, uint64_t))(v31 + 8);
    v49(v36, v30);
    sub_100460BF0();
    ((void (*)(char *, char *, uint64_t))v149)(v34, v36, v30);
    id v50 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v45 = v48;
    sub_100460D20();
    v49(v36, v30);
    (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v147 + 8))(v27, v151);
    goto LABEL_29;
  }
  uint64_t v51 = v146;
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    uint64_t v151 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v151(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v52 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v53 = sub_100460D20();
    id v54 = *(void (**)(char *, uint64_t))(v31 + 8);
    v54(v36, v30);
    sub_100460BF0();
    v151(v34, v36, v30);
    id v55 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v45 = v53;
    sub_100460D20();
    v54(v36, v30);
    (*(void (**)(char *, uint64_t))(v143 + 8))(v148, v51);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    id v56 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v56(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v57 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v151 = (void (*)(char *, char *, uint64_t))sub_100460D20();
    id v58 = *(void (**)(char *, uint64_t))(v31 + 8);
    v58(v36, v30);
    sub_100460BF0();
    v56(v34, v36, v30);
    id v59 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v58(v36, v30);
    uint64_t v45 = (uint64_t)v151;
    (*(void (**)(char *, uint64_t))(v141 + 8))(v144, v145);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    uint64_t v151 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v151(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v60 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v61 = sub_100460D20();
    dispatch_group_t v62 = *(void (**)(char *, uint64_t))(v31 + 8);
    v62(v36, v30);
    sub_100460BF0();
    v151(v34, v36, v30);
    id v63 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v45 = v61;
    sub_100460D20();
    v62(v36, v30);
    (*(void (**)(char *, uint64_t))(v138 + 8))(v142, v14);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    id v64 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v64(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v65 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v66 = sub_100460D20();
    id v67 = *(void (**)(char *, uint64_t))(v31 + 8);
    v67(v36, v30);
    sub_100460BF0();
    v64(v34, v36, v30);
    id v68 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v45 = v66;
    sub_100460D20();
    v67(v36, v30);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v139, v140);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v69(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v70 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v71 = sub_100460D20();
    id v72 = *(void (**)(char *, uint64_t))(v31 + 8);
    v72(v36, v30);
    sub_100460BF0();
    v69(v34, v36, v30);
    id v73 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v45 = v71;
    sub_100460D20();
    v72(v36, v30);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v136, v137);
    goto LABEL_29;
  }
  id v75 = v132;
  uint64_t v76 = v134;
  if (!swift_dynamicCast())
  {
    id v88 = v125;
    uint64_t v89 = v127;
    uint64_t v90 = v31;
    if (swift_dynamicCast())
    {
      uint64_t v91 = v34;
      uint64_t v92 = v46;
      uint64_t v93 = v124;
      id v94 = v123;
      (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v123, v88, v89);
      uint64_t v95 = v122;
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v122, v94, v89);
      int v96 = (*(uint64_t (**)(char *, uint64_t))(v93 + 88))(v95, v89);
      if (v96 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v93 + 96))(v95, v89);
        uint64_t v97 = v141;
        uint64_t v98 = v120;
        uint64_t v99 = v145;
        (*(void (**)(char *, char *, uint64_t))(v141 + 32))(v120, v95, v145);
        uint64_t v100 = sub_10010F9D0(v98);
LABEL_42:
        uint64_t v45 = v100;
        (*(void (**)(char *, uint64_t))(v97 + 8))(v98, v99);
        (*(void (**)(char *, uint64_t))(v93 + 8))(v94, v89);
        goto LABEL_29;
      }
      if (v96 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v93 + 96))(v95, v89);
        uint64_t v97 = v147;
        uint64_t v98 = v119;
        uint64_t v99 = (uint64_t)v92;
        (*(void (**)(char *, char *, void))(v147 + 32))(v119, v95, v92);
        uint64_t v100 = sub_10011147C(v98);
        goto LABEL_42;
      }
      uint64_t v111 = *(void (**)(char *, uint64_t))(v93 + 8);
      v111(v94, v89);
      v111(v95, v89);
      uint64_t v34 = v91;
    }
LABEL_52:
    sub_100007118((uint64_t)v152);
    sub_100460BF0();
    uint64_t v112 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
    v112(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v113 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v114 = sub_100460D20();
    uint64_t v115 = *(void (**)(char *, uint64_t))(v90 + 8);
    v115(v36, v30);
    sub_100460BF0();
    v112(v34, v36, v30);
    id v116 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v45 = v114;
    sub_100460D20();
    v115(v36, v30);
    goto LABEL_30;
  }
  uint64_t v151 = (void (*)(char *, char *, uint64_t))v46;
  uint64_t v77 = v129;
  id v78 = v128;
  (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v128, v75, v76);
  uint64_t v79 = v126;
  sub_100460850();
  uint64_t v80 = v79;
  uint64_t v81 = v131;
  id v82 = v79;
  uint64_t v83 = v130;
  int v84 = (*(uint64_t (**)(char *, uint64_t))(v131 + 88))(v82, v130);
  if (v84 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v81 + 96))(v80, v83);
    uint64_t v85 = v138;
    uint64_t v86 = v121;
    (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v121, v80, v14);
    uint64_t v45 = sub_100112F0C(v86);
    uint64_t v87 = v78;
    (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v14);
LABEL_39:
    (*(void (**)(char *, uint64_t))(v77 + 8))(v87, v134);
LABEL_29:
    sub_100007118((uint64_t)v152);
LABEL_30:
    sub_100007118((uint64_t)v153);
    return v45;
  }
  if (v84 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v131 + 96))(v80, v130);
    uint64_t v101 = v147;
    uint64_t v102 = v119;
    uint64_t v103 = v151;
    (*(void (**)(char *, char *, void))(v147 + 32))(v119, v80, v151);
    uint64_t v45 = sub_10011147C(v102);
    uint64_t v87 = v78;
    (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v101 + 8))(v102, v103);
    goto LABEL_39;
  }
  uint64_t v104 = v34;
  uint64_t v105 = v131;
  uint64_t v106 = v130;
  if (v84 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v131 + 96))(v80, v130);
    uint64_t v107 = v141;
    uint64_t v108 = (uint64_t)v120;
    uint64_t v109 = v145;
    (*(void (**)(char *, char *, uint64_t))(v141 + 32))(v120, v80, v145);
    uint64_t v110 = sub_10010F9D0(v108);
LABEL_48:
    uint64_t v45 = v110;
    uint64_t v87 = v78;
    (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v108, v109);
    goto LABEL_39;
  }
  if (v84 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v131 + 96))(v80, v130);
    uint64_t v107 = v133;
    uint64_t v108 = (uint64_t)v118;
    uint64_t v109 = v137;
    (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v118, v80, v137);
    uint64_t v110 = sub_1001149F8(v108);
    goto LABEL_48;
  }
  if (v84 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v84 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v134);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v80, v106);
    uint64_t v90 = v31;
    uint64_t v34 = v104;
    goto LABEL_52;
  }
  (*(void (**)(char *, uint64_t))(v131 + 8))(v80, v130);
  uint64_t result = sub_100462350();
  __break(1u);
  return result;
}

uint64_t sub_1001149F8(uint64_t a1)
{
  uint64_t v154 = a1;
  uint64_t v132 = sub_1004603B0();
  uint64_t v127 = *(void *)(v132 - 8);
  uint64_t v1 = __chkstk_darwin(v132);
  uint64_t v125 = (char *)&v120 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v126 = (char *)&v120 - v4;
  __chkstk_darwin(v3);
  Swift::String v128 = (char *)&v120 - v5;
  uint64_t v129 = sub_100460840();
  uint64_t v130 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v131 = (char *)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_1004608A0();
  uint64_t v133 = *(void *)(v137 - 8);
  uint64_t v7 = __chkstk_darwin(v137);
  uint64_t v134 = (char *)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v135 = (char *)&v120 - v9;
  uint64_t v10 = sub_10045CFB0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  id v121 = (char *)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v139 = (char *)&v120 - v14;
  uint64_t v142 = sub_10045CF50();
  uint64_t v138 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v141 = (char *)&v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_10045CCF0();
  uint64_t v140 = *(void *)(v145 - 8);
  uint64_t v16 = __chkstk_darwin(v145);
  uint64_t v124 = (char *)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v144 = (char *)&v120 - v18;
  uint64_t v148 = sub_100460280();
  uint64_t v143 = *(void *)(v148 - 8);
  uint64_t v19 = __chkstk_darwin(v148);
  v123 = (char *)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v147 = (char *)&v120 - v21;
  uint64_t v151 = (void (*)(char *, char *, uint64_t))sub_1004608E0();
  uint64_t v146 = *((void *)v151 - 1);
  __chkstk_darwin(v151);
  v150 = (char *)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10045FCF0();
  uint64_t v149 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23);
  uint64_t v122 = (char *)&v120 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v120 - v26;
  uint64_t v28 = sub_10045C2A0();
  __chkstk_darwin(v28 - 8);
  v153 = (char *)&v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_100460C60();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v120 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v120 - v35;
  uint64_t v37 = sub_100460330();
  uint64_t v152 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v120 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156[3] = v10;
  v156[4] = sub_10011B8A8(&qword_100575970, (void (*)(uint64_t))&type metadata accessor for TVEpisode);
  uint64_t v40 = sub_10002A270(v156);
  uint64_t v136 = v11;
  id v41 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v42 = v154;
  uint64_t v154 = v10;
  v41(v40, v42, v10);
  sub_10002FA38((uint64_t)v156, (uint64_t)v155);
  sub_100005BFC(&qword_100575960);
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    uint64_t v151 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v151(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v43 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v154 = sub_100460D20();
    v150 = v44;
    uint64_t v45 = *(void (**)(char *, uint64_t))(v31 + 8);
    v45(v36, v30);
    sub_100460BF0();
    v151(v34, v36, v30);
    id v46 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v47 = v154;
    sub_100460D20();
    v45(v36, v30);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v39, v37);
    goto LABEL_28;
  }
  uint64_t v48 = v36;
  if (swift_dynamicCast())
  {
    uint64_t v154 = v23;
    sub_100460BF0();
    uint64_t v152 = *(void *)(v31 + 16);
    ((void (*)(char *, char *, uint64_t))v152)(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v49 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v50 = sub_100460D20();
    uint64_t v51 = *(void (**)(char *, uint64_t))(v31 + 8);
    v51(v36, v30);
    sub_100460BF0();
    ((void (*)(char *, char *, uint64_t))v152)(v34, v36, v30);
    id v52 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v47 = v50;
    sub_100460D20();
    v51(v36, v30);
    uint64_t v53 = *(void (**)(char *, uint64_t))(v149 + 8);
    id v54 = v27;
LABEL_9:
    uint64_t v55 = v154;
LABEL_27:
    v53(v54, v55);
LABEL_28:
    sub_100007118((uint64_t)v155);
LABEL_29:
    sub_100007118((uint64_t)v156);
    return v47;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    id v56 = v34;
    id v57 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v57(v56, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v58 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v154 = sub_100460D20();
    id v59 = *(void (**)(char *, uint64_t))(v31 + 8);
    v59(v36, v30);
    sub_100460BF0();
    v57(v56, v36, v30);
    id v60 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v47 = v154;
    sub_100460D20();
    v59(v36, v30);
    (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v146 + 8))(v150, v151);
    goto LABEL_28;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    uint64_t v61 = v34;
    dispatch_group_t v62 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v62(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v63 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v154 = sub_100460D20();
    id v64 = *(void (**)(char *, uint64_t))(v31 + 8);
    v64(v36, v30);
    sub_100460BF0();
    v62(v61, v36, v30);
    id v65 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v64(v36, v30);
    uint64_t v47 = v154;
    (*(void (**)(char *, uint64_t))(v143 + 8))(v147, v148);
    goto LABEL_28;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v66(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v67 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v68 = sub_100460D20();
    uint64_t v69 = *(void (**)(char *, uint64_t))(v31 + 8);
    v69(v36, v30);
    sub_100460BF0();
    v66(v34, v36, v30);
    id v70 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v47 = v68;
    sub_100460D20();
    v69(v36, v30);
    uint64_t v53 = *(void (**)(char *, uint64_t))(v140 + 8);
    id v54 = v144;
    uint64_t v71 = &v158;
LABEL_26:
    uint64_t v55 = *(v71 - 32);
    goto LABEL_27;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    id v72 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v72(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v73 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v74 = sub_100460D20();
    id v75 = *(void (**)(char *, uint64_t))(v31 + 8);
    v75(v36, v30);
    sub_100460BF0();
    v72(v34, v36, v30);
    id v76 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v47 = v74;
    sub_100460D20();
    v75(v36, v30);
    uint64_t v53 = *(void (**)(char *, uint64_t))(v138 + 8);
    id v54 = v141;
    uint64_t v71 = &v157;
    goto LABEL_26;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    id v78 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
    v78(v34, v36, v30);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v79 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v80 = sub_100460D20();
    uint64_t v81 = *(void (**)(char *, uint64_t))(v31 + 8);
    v81(v36, v30);
    sub_100460BF0();
    v78(v34, v36, v30);
    id v82 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v47 = v80;
    sub_100460D20();
    v81(v36, v30);
    uint64_t v53 = *(void (**)(char *, uint64_t))(v136 + 8);
    id v54 = v139;
    goto LABEL_9;
  }
  uint64_t v83 = v135;
  uint64_t v84 = v137;
  if (!swift_dynamicCast())
  {
    uint64_t v95 = v128;
    uint64_t v96 = v132;
    uint64_t v97 = v31;
    uint64_t v98 = v48;
    if (swift_dynamicCast())
    {
      uint64_t v99 = v23;
      uint64_t v100 = v127;
      uint64_t v101 = v126;
      (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v126, v95, v96);
      uint64_t v102 = v125;
      (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v125, v101, v96);
      int v103 = (*(uint64_t (**)(char *, uint64_t))(v100 + 88))(v102, v96);
      if (v103 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v100 + 96))(v102, v96);
        uint64_t v104 = v143;
        uint64_t v105 = v123;
        uint64_t v106 = v148;
        (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v123, v102, v148);
        uint64_t v107 = sub_10010F9D0(v105);
LABEL_45:
        uint64_t v47 = v107;
        (*(void (**)(char *, uint64_t))(v104 + 8))(v105, v106);
        (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v96);
        goto LABEL_28;
      }
      if (v103 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v100 + 96))(v102, v96);
        uint64_t v104 = v149;
        uint64_t v105 = v122;
        uint64_t v106 = v99;
        (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v122, v102, v99);
        uint64_t v107 = sub_10011147C(v105);
        goto LABEL_45;
      }
      id v113 = *(void (**)(char *, uint64_t))(v100 + 8);
      v113(v101, v96);
      v113(v102, v96);
    }
LABEL_55:
    sub_100007118((uint64_t)v155);
    sub_100460BF0();
    uint64_t v114 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
    v114(v34, v98, v30);
    uint64_t v115 = v34;
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v116 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v117 = sub_100460D20();
    uint64_t v118 = *(void (**)(char *, uint64_t))(v97 + 8);
    v118(v98, v30);
    sub_100460BF0();
    v114(v115, v98, v30);
    id v119 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v47 = v117;
    sub_100460D20();
    v118(v98, v30);
    goto LABEL_29;
  }
  uint64_t v85 = v133;
  uint64_t v86 = v134;
  (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v134, v83, v84);
  uint64_t v87 = v131;
  sub_100460850();
  uint64_t v88 = v130;
  uint64_t v89 = v129;
  int v90 = (*(uint64_t (**)(char *, uint64_t))(v130 + 88))(v87, v129);
  if (v90 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v88 + 96))(v87, v89);
    uint64_t v91 = v140;
    uint64_t v92 = v124;
    uint64_t v93 = v145;
    (*(void (**)(char *, char *, uint64_t))(v140 + 32))(v124, v87, v145);
    uint64_t v94 = sub_100112F0C(v92);
LABEL_37:
    uint64_t v47 = v94;
    (*(void (**)(char *, uint64_t))(v91 + 8))(v92, v93);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v137);
    goto LABEL_28;
  }
  if (v90 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v88 + 96))(v87, v89);
    uint64_t v108 = v149;
    uint64_t v109 = v122;
    (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v122, v87, v23);
    uint64_t v47 = sub_10011147C(v109);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v23);
LABEL_48:
    (*(void (**)(char *, uint64_t))(v85 + 8))(v134, v137);
    goto LABEL_28;
  }
  if (v90 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v88 + 96))(v87, v89);
    uint64_t v110 = v143;
    uint64_t v111 = v123;
    uint64_t v112 = v148;
    (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v123, v87, v148);
    uint64_t v47 = sub_10010F9D0(v111);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v112);
    goto LABEL_48;
  }
  uint64_t v86 = v134;
  if (v90 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v88 + 96))(v87, v89);
    uint64_t v91 = v136;
    uint64_t v92 = v121;
    uint64_t v93 = v154;
    (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v121, v87, v154);
    uint64_t v94 = sub_1001149F8(v92);
    goto LABEL_37;
  }
  if (v90 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v90 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v85 + 8))(v134, v137);
    (*(void (**)(char *, uint64_t))(v88 + 8))(v87, v89);
    uint64_t v97 = v31;
    uint64_t v98 = v48;
    goto LABEL_55;
  }
  (*(void (**)(char *, uint64_t))(v88 + 8))(v87, v89);
  uint64_t result = sub_100462350();
  __break(1u);
  return result;
}

uint64_t sub_1001164D0(uint64_t a1, uint64_t a2, void (*a3)(char *, char *, uint64_t))
{
  uint64_t v154 = a3;
  uint64_t v155 = a1;
  uint64_t v132 = sub_1004603B0();
  uint64_t v127 = *(void *)(v132 - 8);
  uint64_t v4 = __chkstk_darwin(v132);
  uint64_t v125 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v126 = (char *)&v121 - v7;
  __chkstk_darwin(v6);
  Swift::String v128 = (char *)&v121 - v8;
  uint64_t v129 = sub_100460840();
  uint64_t v130 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v131 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_1004608A0();
  uint64_t v134 = *(void *)(v136 - 8);
  uint64_t v10 = __chkstk_darwin(v136);
  uint64_t v133 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v135 = (char *)&v121 - v12;
  uint64_t v140 = sub_10045CFB0();
  uint64_t v137 = *(void *)(v140 - 8);
  uint64_t v13 = __chkstk_darwin(v140);
  id v121 = (void (*)(char *, char *, uint64_t))((char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  uint64_t v139 = (char *)&v121 - v15;
  uint64_t v143 = sub_10045CF50();
  uint64_t v138 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v142 = (char *)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_10045CCF0();
  uint64_t v141 = *(void *)(v146 - 8);
  uint64_t v17 = __chkstk_darwin(v146);
  uint64_t v124 = (void (*)(char *, char *, uint64_t))((char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  uint64_t v145 = (char *)&v121 - v19;
  uint64_t v149 = sub_100460280();
  uint64_t v144 = *(void *)(v149 - 8);
  uint64_t v20 = __chkstk_darwin(v149);
  v123 = (char *)&v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v148 = (char *)&v121 - v22;
  uint64_t v151 = sub_1004608E0();
  uint64_t v147 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v24 = (char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10045FCF0();
  uint64_t v150 = *(void *)(v25 - 8);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v122 = (char *)&v121 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v121 - v28;
  uint64_t v30 = sub_10045C2A0();
  __chkstk_darwin(v30 - 8);
  v153 = (char *)&v121 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100460C60();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v121 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v121 - v37;
  uint64_t v39 = sub_100460330();
  uint64_t v152 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  id v41 = (char *)&v121 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157[3] = a2;
  v157[4] = (uint64_t)v154;
  uint64_t v42 = sub_10002A270(v157);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(v42, v155, a2);
  sub_10002FA38((uint64_t)v157, (uint64_t)v156);
  sub_100005BFC(&qword_100575960);
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    uint64_t v154 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v154(v36, v38, v32);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v43 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v151 = sub_100460D20();
    uint64_t v155 = v44;
    uint64_t v45 = *(void (**)(char *, uint64_t))(v33 + 8);
    v45(v38, v32);
    sub_100460BF0();
    v154(v36, v38, v32);
    id v46 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v47 = v151;
    sub_100460D20();
    v45(v38, v32);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v41, v39);
    goto LABEL_29;
  }
  uint64_t v48 = v38;
  uint64_t v49 = v25;
  if (swift_dynamicCast())
  {
    uint64_t v154 = (void (*)(char *, char *, uint64_t))v25;
    sub_100460BF0();
    uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v50(v36, v48, v32);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v51 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v52 = sub_100460D20();
    uint64_t v155 = v53;
    id v54 = *(void (**)(char *, uint64_t))(v33 + 8);
    v54(v48, v32);
    sub_100460BF0();
    v50(v36, v48, v32);
    uint64_t v47 = v52;
    id v55 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v54(v48, v32);
    (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v150 + 8))(v29, v154);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    id v56 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v56(v36, v48, v32);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v57 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v58 = sub_100460D20();
    uint64_t v155 = v59;
    id v60 = *(void (**)(char *, uint64_t))(v33 + 8);
    v60(v48, v32);
    sub_100460BF0();
    v56(v36, v48, v32);
    uint64_t v47 = v58;
    id v61 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v60(v48, v32);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v24, v151);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    dispatch_group_t v62 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v62(v36, v48, v32);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v63 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v64 = sub_100460D20();
    id v65 = *(void (**)(char *, uint64_t))(v33 + 8);
    v65(v48, v32);
    sub_100460BF0();
    v62(v36, v48, v32);
    uint64_t v47 = v64;
    id v66 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v65(v48, v32);
    (*(void (**)(char *, uint64_t))(v144 + 8))(v148, v149);
    goto LABEL_29;
  }
  uint64_t v67 = v33;
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v68(v36, v48, v32);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v69 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v70 = sub_100460D20();
    uint64_t v71 = *(void (**)(char *, uint64_t))(v33 + 8);
    v71(v48, v32);
    sub_100460BF0();
    v68(v36, v48, v32);
    uint64_t v47 = v70;
    id v72 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v71(v48, v32);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v145, v146);
    goto LABEL_29;
  }
  uint64_t v73 = v32;
  uint64_t v74 = v48;
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    id v75 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v75(v36, v48, v73);
    uint64_t v76 = v73;
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v77 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v78 = sub_100460D20();
    id v79 = *(void (**)(char *, uint64_t))(v33 + 8);
    v79(v48, v76);
    sub_100460BF0();
    v75(v36, v48, v76);
    uint64_t v47 = v78;
    id v80 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v79(v48, v76);
    (*(void (**)(char *, uint64_t))(v138 + 8))(v142, v143);
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    sub_100460BF0();
    uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v81(v36, v48, v73);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v82 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v83 = sub_100460D20();
    uint64_t v84 = *(void (**)(char *, uint64_t))(v33 + 8);
    v84(v74, v73);
    sub_100460BF0();
    v81(v36, v74, v73);
    uint64_t v47 = v83;
    id v85 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v84(v74, v73);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v139, v140);
    goto LABEL_29;
  }
  uint64_t v87 = v135;
  uint64_t v88 = v136;
  if (!swift_dynamicCast())
  {
    uint64_t v100 = v128;
    uint64_t v101 = v132;
    if (swift_dynamicCast())
    {
      uint64_t v102 = v73;
      int v103 = v100;
      uint64_t v104 = v127;
      uint64_t v105 = v126;
      (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v126, v103, v101);
      uint64_t v106 = v125;
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v125, v105, v101);
      int v107 = (*(uint64_t (**)(char *, uint64_t))(v104 + 88))(v106, v101);
      if (v107 == enum case for Track.song(_:))
      {
        (*(void (**)(char *, uint64_t))(v104 + 96))(v106, v101);
        uint64_t v108 = v144;
        uint64_t v109 = (uint64_t)v123;
        uint64_t v110 = v149;
        (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v123, v106, v149);
        uint64_t v47 = sub_10010F9D0(v109);
        (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v109, v110);
LABEL_43:
        (*(void (**)(char *, uint64_t))(v104 + 8))(v105, v101);
        goto LABEL_29;
      }
      if (v107 == enum case for Track.musicVideo(_:))
      {
        (*(void (**)(char *, uint64_t))(v104 + 96))(v106, v101);
        uint64_t v113 = v150;
        uint64_t v114 = (uint64_t)v122;
        (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v122, v106, v49);
        uint64_t v47 = sub_10011147C(v114);
        (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v114, v49);
        goto LABEL_43;
      }
      uint64_t v115 = *(void (**)(char *, uint64_t))(v104 + 8);
      v115(v105, v101);
      v115(v106, v101);
      uint64_t v73 = v102;
    }
LABEL_52:
    sub_100007118((uint64_t)v156);
    sub_100460BF0();
    id v116 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
    v116(v36, v74, v73);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v117 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v118 = sub_100460D20();
    id v119 = *(void (**)(char *, uint64_t))(v67 + 8);
    v119(v74, v73);
    sub_100460BF0();
    v116(v36, v74, v73);
    uint64_t v47 = v118;
    id v120 = (id)qword_100586110;
    sub_10045C250();
    sub_100460D20();
    v119(v74, v73);
    goto LABEL_30;
  }
  uint64_t v155 = v73;
  uint64_t v89 = v36;
  uint64_t v90 = v134;
  uint64_t v91 = v133;
  (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v133, v87, v88);
  uint64_t v92 = v131;
  sub_100460850();
  uint64_t v93 = v130;
  uint64_t v94 = v129;
  int v95 = (*(uint64_t (**)(char *, uint64_t))(v130 + 88))(v92, v129);
  if (v95 == enum case for Playlist.Entry.InternalItem.musicMovie(_:))
  {
    (*(void (**)(char *, uint64_t))(v93 + 96))(v92, v94);
    uint64_t v96 = v141;
    uint64_t v97 = v124;
    uint64_t v98 = v146;
    (*(void (**)(char *, char *, uint64_t))(v141 + 32))((char *)v124, v92, v146);
    uint64_t v99 = sub_100112F0C(v97);
LABEL_34:
    uint64_t v47 = v99;
    (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v96 + 8))(v97, v98);
LABEL_40:
    (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v88);
LABEL_29:
    sub_100007118((uint64_t)v156);
LABEL_30:
    sub_100007118((uint64_t)v157);
    return v47;
  }
  if (v95 == enum case for Playlist.Entry.InternalItem.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v93 + 96))(v92, v94);
    uint64_t v111 = v150;
    uint64_t v112 = (uint64_t)v122;
    (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v122, v92, v49);
    uint64_t v47 = sub_10011147C(v112);
    (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v112, v49);
    goto LABEL_40;
  }
  if (v95 == enum case for Playlist.Entry.InternalItem.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v93 + 96))(v92, v94);
    uint64_t v96 = v144;
    uint64_t v97 = (void (*)(char *, char *, uint64_t))v123;
    uint64_t v98 = v149;
    (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v123, v92, v149);
    uint64_t v99 = sub_10010F9D0((uint64_t)v97);
    goto LABEL_34;
  }
  if (v95 == enum case for Playlist.Entry.InternalItem.tvEpisode(_:))
  {
    (*(void (**)(char *, uint64_t))(v93 + 96))(v92, v94);
    uint64_t v96 = v137;
    uint64_t v97 = v121;
    uint64_t v98 = v140;
    (*(void (**)(char *, char *, uint64_t))(v137 + 32))((char *)v121, v92, v140);
    uint64_t v99 = sub_1001149F8((uint64_t)v97);
    goto LABEL_34;
  }
  if (v95 != enum case for Playlist.Entry.InternalItem.uploadedAudio(_:)
    && v95 != enum case for Playlist.Entry.InternalItem.uploadedVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v88);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v92, v94);
    uint64_t v36 = v89;
    uint64_t v73 = v155;
    goto LABEL_52;
  }
  (*(void (**)(char *, uint64_t))(v93 + 8))(v92, v94);
  uint64_t result = sub_100462350();
  __break(1u);
  return result;
}

uint64_t sub_100117F94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10045C1E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100570988 != -1) {
    swift_once();
  }
  uint64_t v7 = static CloudLibrary.EnablementContext.action;
  uint64_t v6 = *(void *)algn_100586498;
  swift_bridgeObjectRetain();
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v8 = sub_10045C1B0();
  uint64_t v10 = v9;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v3 + 8);
  v26(v5, v2);
  uint64_t v11 = CloudLibrary.EnablementContext.title.getter();
  uint64_t v29 = v12;
  uint64_t v30 = v11;
  uint64_t v13 = CloudLibrary.EnablementContext.message.getter();
  uint64_t v27 = v14;
  uint64_t v28 = v13;
  sub_100005BFC(&qword_10057A590);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1004668E0;
  *(void *)(v15 + 32) = v8;
  *(void *)(v15 + 40) = v10;
  *(void *)(v15 + 48) = v7;
  *(void *)(v15 + 56) = v6;
  *(unsigned char *)(v15 + 64) = 2;
  *(void *)(v15 + 72) = &unk_100575988;
  *(void *)(v15 + 80) = 0;
  uint64_t v16 = qword_100571000;
  swift_bridgeObjectRetain();
  uint64_t v31 = v10;
  swift_bridgeObjectRetain();
  uint64_t v17 = v2;
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v18 = static String.cancelButtonTitle;
  uint64_t v19 = qword_1005878F0;
  swift_bridgeObjectRetain();
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v20 = sub_10045C1B0();
  uint64_t v22 = v21;
  v26(v5, v17);
  *(void *)(v15 + 88) = v20;
  *(void *)(v15 + 96) = v22;
  *(void *)(v15 + 104) = v18;
  *(void *)(v15 + 112) = v19;
  *(unsigned char *)(v15 + 120) = 0;
  *(void *)(v15 + 128) = 0;
  *(void *)(v15 + 136) = 0;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v24 = v29;
  *(void *)a1 = v30;
  *(void *)(a1 + 8) = v24;
  uint64_t v25 = v27;
  *(void *)(a1 + 16) = v28;
  *(void *)(a1 + 24) = v25;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v15;
  *(void *)(a1 + 48) = 0;
  return result;
}

char *sub_1001181F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v90 = a1;
  uint64_t v1 = sub_10045C1E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v96 = v1;
  uint64_t v97 = v2;
  __chkstk_darwin(v1);
  int v95 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10045C2A0();
  __chkstk_darwin(v4 - 8);
  uint64_t v98 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100460C60();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v93 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v83 - v10;
  if (qword_100570808 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  uint64_t v12 = v99;
  uint64_t v13 = v100;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  char v14 = sub_1000FFF70(7u, v12);
  swift_bridgeObjectRelease();
  uint64_t v15 = (void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v16 = v7;
  sub_100460BF0();
  uint64_t v17 = v6;
  uint64_t v94 = *v15;
  v94(v93, v11, v6);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v18 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v19 = sub_100460D20();
  uint64_t v21 = v20;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v22 = v16 + 8;
  uint64_t v91 = v23;
  v23(v11, v17);
  unsigned __int8 v24 = [self allowAccountModifications];
  uint64_t v92 = v21;
  if (v24)
  {
    uint64_t v89 = v22;
    uint64_t v88 = v19;
    if (v14)
    {
      sub_100460BF0();
      unint64_t v40 = (unint64_t)v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      id v41 = v93;
      v94(v93, v11, v17);
      if (qword_100570720 != -1) {
        swift_once();
      }
      id v42 = (id)qword_100586110;
      sub_10045C250();
      uint64_t v87 = sub_100460D20();
      unint64_t v86 = v43;
      uint64_t v44 = v91;
      v91(v11, v17);
      sub_100460BF0();
      uint64_t v93 = (char *)v40;
      v94(v41, v11, v17);
      if (qword_100570720 != -1) {
        swift_once();
      }
      id v45 = (id)qword_100586110;
      sub_10045C250();
      uint64_t v84 = sub_100460D20();
      uint64_t v83 = v46;
      v44(v11, v17);
      uint64_t v47 = v95;
      _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
      uint64_t v48 = sub_10045C1B0();
      uint64_t v50 = v49;
      uint64_t v51 = v97 + 8;
      id v85 = *(void (**)(char *, uint64_t))(v97 + 8);
      v85(v47, v96);
      uint64_t v32 = sub_100051048(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v53 = *((void *)v32 + 2);
      unint64_t v52 = *((void *)v32 + 3);
      uint64_t v97 = v51;
      if (v53 >= v52 >> 1) {
        uint64_t v32 = sub_100051048((char *)(v52 > 1), v53 + 1, 1, v32);
      }
      *((void *)v32 + 2) = v53 + 1;
      id v54 = &v32[56 * v53];
      *((void *)v54 + 4) = v48;
      *((void *)v54 + 5) = v50;
      uint64_t v55 = v83;
      *((void *)v54 + 6) = v84;
      *((void *)v54 + 7) = v55;
      v54[64] = 2;
      id v56 = &unk_100575980;
    }
    else
    {
      sub_100460BF0();
      unint64_t v57 = (unint64_t)v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      id v41 = v93;
      v94(v93, v11, v17);
      if (qword_100570720 != -1) {
        swift_once();
      }
      id v58 = (id)qword_100586110;
      sub_10045C250();
      uint64_t v87 = sub_100460D20();
      unint64_t v86 = v59;
      id v60 = v91;
      v91(v11, v17);
      sub_100460BF0();
      uint64_t v93 = (char *)v57;
      v94(v41, v11, v17);
      if (qword_100570720 != -1) {
        swift_once();
      }
      id v61 = (id)qword_100586110;
      sub_10045C250();
      uint64_t v84 = sub_100460D20();
      uint64_t v83 = v62;
      v60(v11, v17);
      id v63 = v95;
      _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
      uint64_t v64 = sub_10045C1B0();
      uint64_t v66 = v65;
      uint64_t v67 = v97 + 8;
      id v85 = *(void (**)(char *, uint64_t))(v97 + 8);
      v85(v63, v96);
      uint64_t v32 = sub_100051048(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v69 = *((void *)v32 + 2);
      unint64_t v68 = *((void *)v32 + 3);
      uint64_t v97 = v67;
      if (v69 >= v68 >> 1) {
        uint64_t v32 = sub_100051048((char *)(v68 > 1), v69 + 1, 1, v32);
      }
      *((void *)v32 + 2) = v69 + 1;
      id v54 = &v32[56 * v69];
      *((void *)v54 + 4) = v64;
      *((void *)v54 + 5) = v66;
      uint64_t v70 = v83;
      *((void *)v54 + 6) = v84;
      *((void *)v54 + 7) = v70;
      v54[64] = 2;
      id v56 = &unk_100575978;
    }
    *((void *)v54 + 9) = v56;
    *((void *)v54 + 10) = 0;
    sub_100460BF0();
    v94(v41, v11, v17);
    id v71 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v72 = sub_100460D20();
    uint64_t v74 = v73;
    v91(v11, v17);
    id v75 = v95;
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    uint64_t v76 = sub_10045C1B0();
    uint64_t v78 = v77;
    uint64_t result = (char *)((uint64_t (*)(char *, uint64_t))v85)(v75, v96);
    unint64_t v80 = *((void *)v32 + 2);
    unint64_t v79 = *((void *)v32 + 3);
    if (v80 >= v79 >> 1)
    {
      uint64_t result = sub_100051048((char *)(v79 > 1), v80 + 1, 1, v32);
      uint64_t v32 = result;
    }
    uint64_t v35 = v90;
    uint64_t v36 = v87;
    unint64_t v39 = v86;
    *((void *)v32 + 2) = v80 + 1;
    uint64_t v81 = &v32[56 * v80];
    *((void *)v81 + 4) = v76;
    *((void *)v81 + 5) = v78;
    *((void *)v81 + 6) = v72;
    *((void *)v81 + 7) = v74;
    v81[64] = 2;
    uint64_t v38 = v81 + 72;
    uint64_t v19 = v88;
  }
  else
  {
    if (qword_100570FF0 != -1) {
      swift_once();
    }
    uint64_t v25 = static String.okButtonTitle;
    uint64_t v26 = qword_1005878D0;
    swift_bridgeObjectRetain();
    uint64_t v27 = v95;
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    uint64_t v28 = sub_10045C1B0();
    uint64_t v30 = v29;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v27, v96);
    uint64_t result = sub_100051048(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    uint64_t v32 = result;
    unint64_t v34 = *((void *)result + 2);
    unint64_t v33 = *((void *)result + 3);
    uint64_t v35 = v90;
    if (v34 >= v33 >> 1)
    {
      uint64_t result = sub_100051048((char *)(v33 > 1), v34 + 1, 1, result);
      uint64_t v32 = result;
    }
    uint64_t v36 = 0;
    *((void *)v32 + 2) = v34 + 1;
    uint64_t v37 = &v32[56 * v34];
    *((void *)v37 + 4) = v28;
    *((void *)v37 + 5) = v30;
    *((void *)v37 + 6) = v25;
    *((void *)v37 + 7) = v26;
    v37[64] = 2;
    uint64_t v38 = v37 + 72;
    unint64_t v39 = 0xE000000000000000;
  }
  *uint64_t v38 = 0;
  v38[1] = 0;
  uint64_t v82 = v92;
  *(void *)uint64_t v35 = v19;
  *(void *)(v35 + 8) = v82;
  *(void *)(v35 + 16) = v36;
  *(void *)(v35 + 24) = v39;
  *(unsigned char *)(v35 + 32) = 0;
  *(void *)(v35 + 40) = v32;
  *(void *)(v35 + 48) = 0;
  return result;
}

uint64_t sub_100118D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v55 = a3;
  uint64_t v56 = a4;
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  unint64_t v52 = a5;
  uint64_t v5 = sub_10045C1E0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10045C2A0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_100460C60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  char v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v43 - v15;
  sub_100460BF0();
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v49(v14, v16, v10);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v17 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v18 = sub_100460D20();
  uint64_t v50 = v19;
  uint64_t v51 = v18;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v43[1] = v11 + 8;
  uint64_t v47 = v20;
  v20(v16, v10);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v55;
  uint64_t v48 = v21;
  *(void *)(v21 + 24) = v56;
  swift_retain();
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v22 = sub_10045C1B0();
  uint64_t v45 = v23;
  uint64_t v46 = v22;
  unsigned __int8 v24 = *(void (**)(char *, uint64_t))(v6 + 8);
  v24(v8, v5);
  v43[0] = v10;
  uint64_t v25 = v5;
  if (qword_100571010 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_100587910;
  uint64_t v44 = static String.notNowButtonTitle;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v55;
  *(void *)(v27 + 24) = v56;
  swift_retain();
  swift_bridgeObjectRetain();
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v28 = sub_10045C1B0();
  uint64_t v55 = v29;
  uint64_t v56 = v28;
  v24(v8, v25);
  sub_100460BF0();
  uint64_t v30 = v43[0];
  v49(v14, v16, v43[0]);
  id v31 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v32 = sub_100460D20();
  uint64_t v34 = v33;
  v47(v16, v30);
  sub_100005BFC(&qword_10057A590);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1004668E0;
  uint64_t v36 = v45;
  *(void *)(v35 + 32) = v46;
  *(void *)(v35 + 40) = v36;
  uint64_t v37 = v50;
  *(void *)(v35 + 48) = v51;
  *(void *)(v35 + 56) = v37;
  *(unsigned char *)(v35 + 64) = 2;
  uint64_t v38 = v48;
  *(void *)(v35 + 72) = &unk_100575918;
  *(void *)(v35 + 80) = v38;
  uint64_t v39 = v55;
  *(void *)(v35 + 88) = v56;
  *(void *)(v35 + 96) = v39;
  *(void *)(v35 + 104) = v44;
  *(void *)(v35 + 112) = v26;
  *(unsigned char *)(v35 + 120) = 0;
  *(void *)(v35 + 128) = &unk_100575928;
  *(void *)(v35 + 136) = v27;
  uint64_t result = swift_bridgeObjectRetain();
  id v42 = v52;
  uint64_t v41 = v53;
  *unint64_t v52 = v32;
  v42[1] = v34;
  v42[2] = v41;
  v42[3] = result;
  *((unsigned char *)v42 + 32) = 0;
  uint64_t v42[5] = v35;
  v42[6] = 0;
  return result;
}

id sub_1001191DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v48 = a1;
  uint64_t v4 = sub_10045C2A0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100460C60();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v39 - v10;
  sub_100460BF0();
  uint64_t v12 = v6 + 16;
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v49(v9, v11, v5);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v13 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v14 = sub_100460D20();
  uint64_t v46 = v15;
  uint64_t v47 = v14;
  id v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v16 = v6 + 8;
  uint64_t v18 = v17;
  v17(v11, v5);
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v20 = result;
    MobileGestalt_get_wapiCapability();

    uint64_t v43 = v12;
    uint64_t v44 = a3;
    sub_100460BF0();
    v49(v9, v11, v5);
    id v21 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v22 = sub_100460D20();
    uint64_t v40 = v23;
    uint64_t v41 = v22;
    uint64_t v24 = v45;
    uint64_t v25 = v18;
    v18(v11, v5);
    sub_100005BFC(&qword_10057A590);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1004668E0;
    uint64_t v42 = v16;
    if (qword_100571010 != -1) {
      swift_once();
    }
    uint64_t v27 = static String.notNowButtonTitle;
    uint64_t v28 = qword_100587910;
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = v48;
    *(void *)(v29 + 16) = v48;
    *(void *)(v29 + 24) = v24;
    *(void *)(v26 + 32) = 0x6C65636E6163;
    *(void *)(v26 + 40) = 0xE600000000000000;
    *(void *)(v26 + 48) = v27;
    *(void *)(v26 + 56) = v28;
    *(unsigned char *)(v26 + 64) = 0;
    *(void *)(v26 + 72) = &unk_100575938;
    *(void *)(v26 + 80) = v29;
    swift_bridgeObjectRetain();
    sub_10004C8E8(v30);
    sub_100460BF0();
    v49(v9, v11, v5);
    id v31 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v32 = sub_100460D20();
    uint64_t v34 = v33;
    v25(v11, v5);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v30;
    *(void *)(v35 + 24) = v24;
    *(void *)(v26 + 88) = 0x6E4F6E727574;
    *(void *)(v26 + 96) = 0xE600000000000000;
    *(void *)(v26 + 104) = v32;
    *(void *)(v26 + 112) = v34;
    *(unsigned char *)(v26 + 120) = 2;
    *(void *)(v26 + 128) = &unk_100575948;
    *(void *)(v26 + 136) = v35;
    id result = (id)sub_10004C8E8(v30);
    uint64_t v36 = v44;
    uint64_t v37 = v46;
    *uint64_t v44 = v47;
    v36[1] = v37;
    uint64_t v38 = v40;
    v36[2] = v41;
    v36[3] = v38;
    *((unsigned char *)v36 + 32) = 0;
    v36[5] = v26;
    v36[6] = 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100119694@<X0>(uint64_t a1@<X3>, unint64_t a2@<X4>, uint64_t a3@<X5>, void (*a4)(char *, char *, uint64_t)@<X6>, int a5@<W7>, uint64_t a6@<X8>)
{
  int v43 = a5;
  uint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v44 = a1;
  unint64_t v45 = a2;
  uint64_t v7 = sub_10045C1E0();
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  __chkstk_darwin(v7);
  uint64_t v40 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10045BDE0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v39 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v38 - v13;
  uint64_t v15 = sub_100005BFC(&qword_100571720);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v16);
  id v21 = (char *)&v38 - v20;
  if (qword_1005710B8 != -1) {
    uint64_t result = swift_once();
  }
  int64x2_t v22 = 0uLL;
  if (static DeviceCapabilities.isInternalInstall == 1)
  {
    sub_1001366FC(v44, v45, v46, (uint64_t)v47, v43 & 1, (uint64_t)v21);
    sub_1000103C8((uint64_t)v21, (uint64_t)v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v18, 1, v9) == 1)
    {
      sub_100010430((uint64_t)v21);
      uint64_t v23 = (uint64_t)v18;
LABEL_10:
      uint64_t result = sub_100010430(v23);
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      long long v27 = 0uLL;
      int64x2_t v22 = 0uLL;
      goto LABEL_11;
    }
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v47(v14, v18, v9);
    id v28 = [self sharedApplication];
    sub_10045BD30(v29);
    id v31 = v30;
    unsigned int v32 = [v28 canOpenURL:v30];

    if (!v32)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
      uint64_t v23 = (uint64_t)v21;
      goto LABEL_10;
    }
    uint64_t v33 = v39;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v39, v14, v9);
    unint64_t v34 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v26 = swift_allocObject();
    v47((char *)(v26 + v34), v33, v9);
    uint64_t v35 = v40;
    _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
    uint64_t v24 = sub_10045C1B0();
    uint64_t v37 = v36;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v42);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    uint64_t result = sub_100010430((uint64_t)v21);
    int64x2_t v22 = vdupq_n_s64(0x52206120656C6946uLL);
    v22.i64[0] = v37;
    long long v27 = xmmword_1004669A0;
    uint64_t v25 = &unk_100575908;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    long long v27 = 0uLL;
  }
LABEL_11:
  *(void *)a6 = v24;
  *(int64x2_t *)(a6 + 8) = v22;
  *(_OWORD *)(a6 + 24) = v27;
  *(void *)(a6 + 40) = v25;
  *(void *)(a6 + 48) = v26;
  return result;
}

id sub_100119ADC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10045C1E0();
  uint64_t v89 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10045C2A0();
  __chkstk_darwin(v7 - 8);
  uint64_t v92 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100460C60();
  uint64_t v91 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v77 - v13;
  id result = (id)MobileGestalt_get_current_device();
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v16 = result;
  char wapiCapability = MobileGestalt_get_wapiCapability();

  unint64_t v86 = v6;
  uint64_t v87 = v4;
  uint64_t v88 = a2;
  if (!a1) {
    goto LABEL_36;
  }
  self;
  if (swift_dynamicCastObjCClass() || (self, swift_dynamicCastObjCClass()))
  {
    if (wapiCapability)
    {
      uint64_t v18 = v14;
      sub_100460BF0();
      uint64_t v19 = v91;
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
      unint64_t v90 = (v91 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v20(v12, v14, v9);
      if (qword_100570720 == -1) {
        goto LABEL_47;
      }
    }
    else
    {
      uint64_t v18 = v14;
      sub_100460BF0();
      uint64_t v19 = v91;
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
      unint64_t v90 = (v91 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v20(v12, v14, v9);
      if (qword_100570720 == -1) {
        goto LABEL_47;
      }
    }
    goto LABEL_41;
  }
  self;
  if (swift_dynamicCastObjCClass() || (self, swift_dynamicCastObjCClass()))
  {
    uint64_t v18 = v14;
    if ((wapiCapability & 1) == 0) {
      goto LABEL_31;
    }
LABEL_13:
    sub_100460BF0();
    uint64_t v21 = v91;
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
    unint64_t v90 = (v91 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v20(v12, v18, v9);
    if (qword_100570720 == -1) {
      goto LABEL_32;
    }
LABEL_42:
    swift_once();
    goto LABEL_32;
  }
  self;
  uint64_t v22 = swift_dynamicCastObjCClass();
  if (!v22)
  {
LABEL_36:
    uint64_t v18 = v14;
    if ((wapiCapability & 1) == 0) {
      goto LABEL_46;
    }
    goto LABEL_37;
  }
  uint64_t v23 = (void *)v22;
  unint64_t v90 = v9;
  uint64_t v24 = MPModelRelationshipMediaClipStaticAssets;
  id v25 = a1;
  if (![v23 hasLoadedValueForKey:v24])
  {

    uint64_t v9 = v90;
    goto LABEL_36;
  }
  id v26 = [v23 staticAssets];
  uint64_t v9 = v90;
  uint64_t v18 = v14;
  if (!v26)
  {

    if ((wapiCapability & 1) == 0)
    {
LABEL_46:
      sub_100460BF0();
      uint64_t v19 = v91;
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
      unint64_t v90 = (v91 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v20(v12, v18, v9);
      if (qword_100570720 == -1) {
        goto LABEL_47;
      }
      goto LABEL_41;
    }
LABEL_37:
    sub_100460BF0();
    uint64_t v19 = v91;
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
    unint64_t v90 = (v91 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v20(v12, v18, v9);
    if (qword_100570720 == -1) {
      goto LABEL_47;
    }
LABEL_41:
    swift_once();
LABEL_47:
    id v50 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v51 = sub_100460D20();
    uint64_t v80 = v52;
    uint64_t v81 = v51;
    uint64_t v41 = *(void (**)(void *, uint64_t))(v19 + 8);
    v41(v18, v9);
    sub_100460BF0();
    v20(v12, v18, v9);
    id v53 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v54 = sub_100460D20();
    uint64_t v78 = v55;
    uint64_t v79 = v54;
    v41(v18, v9);
    sub_100460BF0();
    v20(v12, v18, v9);
    uint64_t v45 = v89;
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v56 = (id)qword_100586110;
    sub_10045C250();
    unint64_t v57 = (void *)sub_100460D20();
    uint64_t v83 = v58;
    id v84 = v57;
    uint64_t v49 = &unk_1005758E8;
    goto LABEL_50;
  }
  long long v27 = v26;
  id v84 = v25;
  sub_10011B300();
  unint64_t v28 = sub_1004610A0();

  unint64_t v29 = v28;
  unint64_t v30 = v28;
  if (v28 >> 62)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    unint64_t v29 = v30;
    uint64_t v31 = sub_1004623D0();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_20;
    }
LABEL_45:

    swift_bridgeObjectRelease();
    if ((wapiCapability & 1) == 0) {
      goto LABEL_46;
    }
    goto LABEL_37;
  }
  uint64_t v31 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v31) {
    goto LABEL_45;
  }
LABEL_20:
  id v85 = (void (*)(void *, uint64_t))(v29 & 0xC000000000000001);
  uint64_t v32 = MPModelPropertyStaticAssetMediaType;
  uint64_t v33 = 4;
  while (1)
  {
    uint64_t v9 = v33 - 4;
    if (v85) {
      uint64_t v35 = (char *)sub_100462170();
    }
    else {
      uint64_t v35 = (char *)*(id *)(v29 + 8 * v33);
    }
    uint64_t v18 = v35;
    uint64_t v36 = v33 - 3;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if ([v35 hasLoadedValueForKey:v32]) {
      break;
    }

    uint64_t v9 = v90;
LABEL_22:
    ++v33;
    BOOL v34 = v36 == v31;
    uint64_t v18 = v14;
    unint64_t v29 = v30;
    if (v34) {
      goto LABEL_45;
    }
  }
  id v37 = [v18 mediaType];

  BOOL v34 = v37 == (id)2;
  uint64_t v9 = v90;
  if (!v34) {
    goto LABEL_22;
  }

  swift_bridgeObjectRelease();
  uint64_t v18 = v14;
  if (wapiCapability) {
    goto LABEL_13;
  }
LABEL_31:
  sub_100460BF0();
  uint64_t v21 = v91;
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
  unint64_t v90 = (v91 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v20(v12, v18, v9);
  if (qword_100570720 != -1) {
    goto LABEL_42;
  }
LABEL_32:
  id v38 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v39 = sub_100460D20();
  uint64_t v80 = v40;
  uint64_t v81 = v39;
  uint64_t v41 = *(void (**)(void *, uint64_t))(v21 + 8);
  v41(v18, v9);
  sub_100460BF0();
  v20(v12, v18, v9);
  id v42 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v43 = sub_100460D20();
  uint64_t v78 = v44;
  uint64_t v79 = v43;
  v41(v18, v9);
  sub_100460BF0();
  v20(v12, v18, v9);
  uint64_t v45 = v89;
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v46 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v47 = (void *)sub_100460D20();
  uint64_t v83 = v48;
  id v84 = v47;
  uint64_t v49 = &unk_1005758F8;
LABEL_50:
  uint64_t v82 = v49;
  id v85 = v41;
  v41(v18, v9);
  uint64_t v59 = v9;
  id v60 = v86;
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v91 = sub_10045C1B0();
  uint64_t v89 = v61;
  uint64_t v62 = *(void (**)(char *, uint64_t))(v45 + 8);
  uint64_t v63 = v87;
  v62(v60, v87);
  sub_100460BF0();
  v20(v12, v18, v59);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v64 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v65 = sub_100460D20();
  uint64_t v67 = v66;
  v85(v18, v59);
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v68 = sub_10045C1B0();
  uint64_t v70 = v69;
  v62(v60, v63);
  sub_100005BFC(&qword_10057A590);
  id result = (id)swift_allocObject();
  *((_OWORD *)result + 1) = xmmword_1004668E0;
  uint64_t v71 = v89;
  *((void *)result + 4) = v91;
  *((void *)result + 5) = v71;
  uint64_t v72 = v83;
  *((void *)result + 6) = v84;
  *((void *)result + 7) = v72;
  *((unsigned char *)result + 64) = 2;
  uint64_t v73 = v81;
  *((void *)result + 9) = v82;
  *((void *)result + 10) = 0;
  *((void *)result + 11) = v68;
  *((void *)result + 12) = v70;
  *((void *)result + 13) = v65;
  *((void *)result + 14) = v67;
  *((unsigned char *)result + 120) = 0;
  *((void *)result + 16) = 0;
  *((void *)result + 17) = 0;
  uint64_t v74 = v88;
  uint64_t v75 = v80;
  *uint64_t v88 = v73;
  v74[1] = v75;
  uint64_t v76 = v78;
  v74[2] = v79;
  v74[3] = v76;
  *((unsigned char *)v74 + 32) = 0;
  v74[5] = (uint64_t)result;
  v74[6] = 0;
  return result;
}

id sub_10011A96C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10045C1E0();
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10045C2A0();
  __chkstk_darwin(v7 - 8);
  id v64 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100460C60();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v51 - v14;
  id result = (id)MobileGestalt_get_current_device();
  if (!result)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = result;
  int wapiCapability = MobileGestalt_get_wapiCapability();

  id result = (id)MobileGestalt_get_current_device();
  if (!result)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = result;
  int cellularDataCapability = MobileGestalt_get_cellularDataCapability();

  id v60 = v6;
  uint64_t v61 = a2;
  if (a1)
  {
    self;
    swift_dynamicCastObjCClass();
    uint64_t v21 = v10;
    uint64_t v22 = v13;
    if (!wapiCapability || cellularDataCapability)
    {
LABEL_13:
      uint64_t v23 = v15;
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v21 = v10;
    uint64_t v22 = v13;
    if (!wapiCapability || (cellularDataCapability & 1) != 0) {
      goto LABEL_13;
    }
  }
  uint64_t v23 = v15;
LABEL_14:
  sub_100460BF0();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v24(v22, v23, v9);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v25 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v26 = sub_100460D20();
  uint64_t v51 = v27;
  uint64_t v52 = v26;
  unint64_t v54 = (v21 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  uint64_t v55 = v24;
  unint64_t v29 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v28 = v21 + 8;
  unint64_t v30 = v29;
  v29(v23, v9);
  sub_100460BF0();
  v24(v22, v23, v9);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v31 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v32 = sub_100460D20();
  uint64_t v58 = v33;
  uint64_t v59 = v32;
  BOOL v34 = v30;
  v30(v23, v9);
  uint64_t v35 = v60;
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v36 = sub_10045C1B0();
  uint64_t v53 = v28;
  uint64_t v56 = v37;
  uint64_t v57 = v36;
  uint64_t v38 = v63;
  uint64_t v39 = *(void (**)(char *, uint64_t))(v62 + 8);
  v39(v35, v63);
  sub_100460BF0();
  v55(v22, v23, v9);
  id v40 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v41 = sub_100460D20();
  uint64_t v43 = v42;
  v34(v23, v9);
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v44 = sub_10045C1B0();
  uint64_t v46 = v45;
  v39(v35, v38);
  sub_100005BFC(&qword_10057A590);
  id result = (id)swift_allocObject();
  *((_OWORD *)result + 1) = xmmword_1004668E0;
  uint64_t v47 = v56;
  *((void *)result + 4) = v57;
  *((void *)result + 5) = v47;
  uint64_t v48 = v58;
  *((void *)result + 6) = v59;
  *((void *)result + 7) = v48;
  *((unsigned char *)result + 64) = 2;
  *((void *)result + 9) = &unk_1005758E0;
  *((void *)result + 10) = 0;
  *((void *)result + 11) = v44;
  *((void *)result + 12) = v46;
  *((void *)result + 13) = v41;
  *((void *)result + 14) = v43;
  *((unsigned char *)result + 120) = 2;
  *((void *)result + 16) = 0;
  *((void *)result + 17) = 0;
  uint64_t v49 = v61;
  uint64_t v50 = v51;
  *uint64_t v61 = v52;
  v49[1] = v50;
  v49[2] = 0;
  v49[3] = 0;
  *((unsigned char *)v49 + 32) = 0;
  v49[5] = (uint64_t)result;
  v49[6] = 0;
  return result;
}

uint64_t sub_10011AF4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10045C1E0();
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  __chkstk_darwin(v2);
  uint64_t v32 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10045C2A0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100460C60();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v30 - v10;
  sub_100460BF0();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v9, v11, v5);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v13 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v14 = sub_100460D20();
  uint64_t v30 = v15;
  uint64_t v31 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v11, v5);
  sub_100460BF0();
  v12(v9, v11, v5);
  id v17 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v18 = sub_100460D20();
  uint64_t v20 = v19;
  v16(v11, v5);
  sub_100005BFC(&qword_10057A590);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100466900;
  if (qword_100571000 != -1) {
    swift_once();
  }
  uint64_t v22 = static String.cancelButtonTitle;
  uint64_t v23 = qword_1005878F0;
  swift_bridgeObjectRetain();
  uint64_t v24 = v32;
  _s9MusicCore6PlayerC14CommandOptionsV4uuid10Foundation4UUIDVvpfi_0();
  uint64_t v25 = sub_10045C1B0();
  uint64_t v27 = v26;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v24, v34);
  *(void *)(v21 + 32) = v25;
  *(void *)(v21 + 40) = v27;
  *(void *)(v21 + 48) = v22;
  *(void *)(v21 + 56) = v23;
  *(unsigned char *)(v21 + 64) = 2;
  *(void *)(v21 + 72) = 0;
  *(void *)(v21 + 80) = 0;
  uint64_t v29 = v30;
  *(void *)a1 = v31;
  *(void *)(a1 + 8) = v29;
  *(void *)(a1 + 16) = v18;
  *(void *)(a1 + 24) = v20;
  *(unsigned char *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v21;
  *(void *)(a1 + 48) = 0;
  return result;
}

unint64_t sub_10011B300()
{
  unint64_t result = qword_1005758F0;
  if (!qword_1005758F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1005758F0);
  }
  return result;
}

uint64_t sub_10011B340()
{
  uint64_t v1 = sub_10045BDE0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_10011B3D0()
{
  uint64_t v2 = *(void *)(sub_10045BDE0() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100012B44;
  return sub_10010F560(v3);
}

uint64_t sub_10011B49C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10011B4D4()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_100012B44;
  *(_OWORD *)(v2 + 16) = v3;
  return _swift_task_switch(sub_10010F28C, 0, 0);
}

uint64_t sub_10011B580()
{
  uint64_t v2 = *(int **)(v0 + 16);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_1000117C8;
  return sub_10010F490(v2);
}

uint64_t sub_10011B61C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  _OWORD v4[2] = v2;
  v4[3] = v3;
  v4[1] = sub_100012B44;
  return _swift_task_switch(sub_10010ED20, 0, 0);
}

uint64_t sub_10011B6CC()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_10011B70C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  _OWORD v4[2] = v2;
  v4[3] = v3;
  v4[1] = sub_100012B44;
  return _swift_task_switch(sub_10010EDB0, 0, 0);
}

uint64_t sub_10011B7B8()
{
  sub_100007118(v0 + 16);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10011B7F8()
{
  uint64_t v2 = v0 + 16;
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100012B44;
  v4[3] = v2;
  v4[4] = v3;
  return _swift_task_switch(sub_10010EE80, 0, 0);
}

uint64_t sub_10011B8A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t UInt32.formatName.getter(int a1)
{
  uint64_t inSpecifier = 0;
  uint64_t v11 = 0;
  uint64_t v13 = 0;
  uint64_t v12 = 0;
  int v14 = 0;
  int v10 = a1;
  if (a1 == 1634492771) {
    return 1128352833;
  }
  id outPropertyData = 0;
  UInt32 ioPropertyDataSize = 8;
  OSStatus Property = AudioFormatGetProperty(0x666E616Du, 0x28u, &inSpecifier, &ioPropertyDataSize, &outPropertyData);
  id v3 = outPropertyData;
  if (Property != sub_10045D5E0() && v3) {
    return sub_100460D30(v3);
  }
  if (qword_100570920 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10045D310();
  sub_100009688(v4, (uint64_t)static Logger.audioFormat);
  uint64_t v5 = sub_10045D2F0();
  os_log_type_t v6 = sub_100461750();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109120;
    *(_DWORD *)(v7 + 4) = Property;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "AudioFormatGetProperty kAudioFormatProperty_FormatName error: %d", (uint8_t *)v7, 8u);
    swift_slowDealloc();
  }

  return 0;
}

void *sub_10011BAAC()
{
  uint64_t result = sub_10011BACC();
  static Datavault.music = (uint64_t)result;
  return result;
}

void *sub_10011BACC()
{
  uint64_t v0 = sub_100005BFC(&qword_1005759A8);
  __chkstk_darwin(v0 - 8);
  uint64_t v32 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100005BFC(&qword_100571720);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10045BDE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v32 - v14;
  __chkstk_darwin(v13);
  id v17 = (char *)&v32 - v16;
  id v18 = [self defaultManager];
  NSString v19 = sub_100460C70();
  id v20 = [v18 containerURLForSecurityApplicationGroupIdentifier:v19];

  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_5;
  }
  sub_10045BD80();

  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v21(v4, v15, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_5:
    sub_100010430((uint64_t)v4);
    return 0;
  }
  uint64_t v22 = v17;
  v21(v17, v4, v5);
  uint64_t v23 = v12;
  sub_10045BD40();
  type metadata accessor for Datavault();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v12, v5);
  uint64_t v30 = Datavault.__allocating_init(url:storageClass:)((uint64_t)v9, 0x707041636973754DLL, 0xE800000000000000);
  if (qword_1005708F8 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_10045D310();
  uint64_t v25 = sub_100009688(v24, (uint64_t)qword_100575990);
  uint64_t v26 = *(void *)(v24 - 8);
  uint64_t v27 = (uint64_t)v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v32, v25, v24);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v6 + 8);
  v28(v23, v5);
  v28(v22, v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v27, 0, 1, v24);
  uint64_t v29 = (uint64_t)v30 + OBJC_IVAR____TtC14MusicUtilities9Datavault_logger;
  swift_beginAccess();
  sub_10011C530(v27, v29);
  swift_endAccess();
  return v30;
}

uint64_t *Datavault.music.unsafeMutableAddressor()
{
  if (qword_1005708F0 != -1) {
    swift_once();
  }
  return &static Datavault.music;
}

uint64_t static Datavault.music.getter()
{
  if (qword_1005708F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static Datavault.music.setter(uint64_t a1)
{
  if (qword_1005708F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static Datavault.music = a1;
  return swift_release();
}

uint64_t (*static Datavault.music.modify())()
{
  if (qword_1005708F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_10011C474()
{
  unint64_t result = qword_100578260;
  if (!qword_100578260)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100578260);
  }
  return result;
}

uint64_t sub_10011C4B4()
{
  uint64_t v0 = sub_10045D310();
  sub_1000096D0(v0, qword_100575990);
  sub_100009688(v0, (uint64_t)qword_100575990);
  return sub_10045D300();
}

uint64_t sub_10011C530(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005BFC(&qword_1005759A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t NSDateComponents.lastUpdatedDateString.getter()
{
  uint64_t v0 = sub_100005BFC(&qword_100574980);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10045C190();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v17 = sub_10045BB80();
  uint64_t v10 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10045BB50();
  sub_10045C160();
  sub_10045BB70();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_10011CA20((uint64_t)v2);
    uint64_t v13 = 0;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v2, v3);
    uint64_t v13 = Date.lastUpdatedDateString(relativeTo:)();
    uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
    v14(v7, v3);
    v14(v9, v3);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v17);
  return v13;
}

uint64_t DateComponents.lastUpdatedDateString(relativeTo:)()
{
  uint64_t v0 = sub_100005BFC(&qword_100574980);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10045C190();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10045BB70();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_10011CA20((uint64_t)v2);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    uint64_t v7 = Date.lastUpdatedDateString(relativeTo:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v7;
}

uint64_t sub_10011CA20(uint64_t a1)
{
  uint64_t v2 = sub_100005BFC(&qword_100574980);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DateComponents.lastUpdatedDateString.getter()
{
  uint64_t v0 = sub_100005BFC(&qword_100574980);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10045C190();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_10045C160();
  sub_10045BB70();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_10011CA20((uint64_t)v2);
    uint64_t v10 = 0;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v2, v3);
    uint64_t v10 = Date.lastUpdatedDateString(relativeTo:)();
    uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
    v11(v7, v3);
    v11(v9, v3);
  }
  return v10;
}

uint64_t Date.lastUpdatedDateString(relativeTo:)()
{
  uint64_t v0 = sub_100460C40();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10045C2A0();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100460C60();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t result = sub_10045C040();
  uint64_t v11 = 0;
  if (v10 <= 0.0) {
    return v11;
  }
  if (v10 < 3600.0)
  {
    double v12 = v10 / 60.0;
    if ((~*(void *)&v12 & 0x7FF0000000000000) != 0)
    {
      if (v12 > -9.22337204e18)
      {
        if (v12 < 9.22337204e18)
        {
          uint64_t v13 = (uint64_t)v12;
          if (!(uint64_t)v12)
          {
            sub_100460BF0();
            goto LABEL_21;
          }
          sub_100460C30();
          v25._uint64_t countAndFlagsBits = 0x2064657461647055;
          v25._object = (void *)0xE800000000000000;
          sub_100460C20(v25);
          uint64_t v24 = v13;
          sub_100460C00();
          uint64_t v14 = 9;
          goto LABEL_8;
        }
        goto LABEL_34;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v10 < 86400.0)
  {
    double v16 = v10 / 3600.0;
    if ((~*(void *)&v16 & 0x7FF0000000000000) != 0)
    {
      if (v16 > -9.22337204e18)
      {
        if (v16 < 9.22337204e18)
        {
          uint64_t v17 = (uint64_t)v16;
          sub_100460C30();
          v26._uint64_t countAndFlagsBits = 0x2064657461647055;
          v26._object = (void *)0xE800000000000000;
          sub_100460C20(v26);
          uint64_t v24 = v17;
          sub_100460C00();
          v15._uint64_t countAndFlagsBits = 0x6F6761207268;
          v15._object = (void *)0xE600000000000000;
LABEL_20:
          sub_100460C20(v15);
          sub_100460C50();
LABEL_21:
          (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
          if (qword_100570720 != -1) {
            swift_once();
          }
          id v20 = (id)qword_100586110;
          sub_10045C250();
          uint64_t v11 = sub_100460D20();
          (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
          return v11;
        }
        goto LABEL_37;
      }
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v10 < 604800.0)
  {
    double v18 = v10 / 86400.0;
    if ((~*(void *)&v18 & 0x7FF0000000000000) != 0)
    {
      if (v18 > -9.22337204e18)
      {
        if (v18 < 9.22337204e18)
        {
          uint64_t v19 = (uint64_t)v18;
          sub_100460C30();
          v27._uint64_t countAndFlagsBits = 0x2064657461647055;
          v27._object = (void *)0xE800000000000000;
          sub_100460C20(v27);
          uint64_t v24 = v19;
          sub_100460C00();
          v15._uint64_t countAndFlagsBits = 0x6F67612064;
          goto LABEL_19;
        }
        goto LABEL_40;
      }
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v10 >= 2592000.0) {
    return 0;
  }
  double v21 = v10 / 604800.0;
  if ((~*(void *)&v21 & 0x7FF0000000000000) == 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v21 < 9.22337204e18)
  {
    uint64_t v22 = (uint64_t)v21;
    sub_100460C30();
    v28._uint64_t countAndFlagsBits = 0x2064657461647055;
    v28._object = (void *)0xE800000000000000;
    sub_100460C20(v28);
    uint64_t v24 = v22;
    sub_100460C00();
    uint64_t v14 = 19;
LABEL_8:
    v15._uint64_t countAndFlagsBits = v14 | 0x6F67612064;
LABEL_19:
    v15._object = (void *)0xE500000000000000;
    goto LABEL_20;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t Date.lastUpdatedDateString.getter()
{
  uint64_t v0 = sub_10045C190();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10045C160();
  uint64_t v4 = Date.lastUpdatedDateString(relativeTo:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t static String.stringForTrackCountAndDuration(trackCount:duration:)(uint64_t a1, int a2, uint64_t a3, char a4)
{
  uint64_t v66 = a1;
  uint64_t v7 = sub_10045C2A0();
  __chkstk_darwin(v7 - 8);
  uint64_t v63 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100460C60();
  uint64_t v64 = *(void *)(v9 - 8);
  uint64_t v65 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v62 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v67 = (char *)&v58 - v12;
  uint64_t v13 = sub_100460C40();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = sub_10045C360();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10045C370();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = 0;
  id v24 = 0;
  if (a4)
  {
LABEL_33:
    if (a2)
    {
      if (v24) {
        return v23;
      }
    }
    else
    {
      if (v24)
      {
        sub_100460C30();
        v74._uint64_t countAndFlagsBits = 0;
        v74._object = (void *)0xE000000000000000;
        sub_100460C20(v74);
        uint64_t v72 = v66;
        sub_100460C00();
        v75._uint64_t countAndFlagsBits = 0x297328676E6F7320;
        v75._object = (void *)0xEA0000000000202CLL;
        sub_100460C20(v75);
        v76._uint64_t countAndFlagsBits = v23;
        v76._object = v24;
        sub_100460C10(v76);
        swift_bridgeObjectRelease();
        v77._uint64_t countAndFlagsBits = 0;
        v77._object = (void *)0xE000000000000000;
        sub_100460C20(v77);
        uint64_t v53 = v67;
LABEL_40:
        sub_100460C50();
        uint64_t v55 = v64;
        uint64_t v56 = v65;
        (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v62, v53, v65);
        if (qword_100570720 != -1) {
          swift_once();
        }
        id v57 = (id)qword_100586110;
        sub_10045C250();
        uint64_t v23 = sub_100460D20();
        (*(void (**)(char *, uint64_t))(v55 + 8))(v53, v56);
        return v23;
      }
      uint64_t v54 = v66;
      uint64_t v53 = v67;
      if (v66 >= 1)
      {
        sub_100460C30();
        v78._uint64_t countAndFlagsBits = 0;
        v78._object = (void *)0xE000000000000000;
        sub_100460C20(v78);
        uint64_t v72 = v54;
        sub_100460C00();
        v79._uint64_t countAndFlagsBits = 0x297328676E6F7320;
        v79._object = (void *)0xE800000000000000;
        sub_100460C20(v79);
        goto LABEL_40;
      }
    }
    return 0;
  }
  int v61 = a2;
  double v25 = *(double *)&a3;
  if (*(double *)&a3 <= 0.0)
  {
    uint64_t v23 = 0;
    id v24 = 0;
LABEL_32:
    LOBYTE(a2) = v61;
    goto LABEL_33;
  }
  uint64_t v58 = a3;
  uint64_t v59 = v19;
  uint64_t v60 = v20;
  sub_10045C330();
  Swift::String v26 = *(void (**)(char *, void, uint64_t))(v15 + 104);
  v26(v17, enum case for Calendar.Component.second(_:), v14);
  sub_10045C2E0();
  uint64_t v28 = v27;
  char v30 = v29;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v15 + 8);
  v31(v17, v14);
  if ((v30 & 1) != 0
    || (v26(v17, enum case for Calendar.Component.minute(_:), v14),
        sub_10045C2E0(),
        uint64_t v33 = v32,
        char v35 = v34,
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v31)(v17, v14),
        (v35 & 1) != 0))
  {
LABEL_28:
    id v24 = [(id)*NSDateFormatter.collectionsDurationFormatter.unsafeMutableAddressor() stringFromTimeInterval:v25];
    if (v24)
    {
      uint64_t v49 = sub_100460CB0();
      uint64_t v51 = v50;

      uint64_t v72 = v49;
      uint64_t v73 = v51;
      uint64_t v70 = 44;
      unint64_t v71 = 0xE100000000000000;
      uint64_t v68 = 0;
      unint64_t v69 = 0xE000000000000000;
      sub_10000F810();
      uint64_t v23 = sub_100461FA0();
      id v24 = v52;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v22, v59);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v60 + 8))(v22, v59);
      uint64_t v23 = 0;
    }
    goto LABEL_32;
  }
  uint64_t v37 = v28 * v33;
  if ((unsigned __int128)(v28 * (__int128)v33) >> 64 != (v28 * v33) >> 63)
  {
    __break(1u);
    goto LABEL_46;
  }
  if ((~v58 & 0x7FF0000000000000) == 0)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v25 <= -9.22337204e18)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (v25 >= 9.22337204e18)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  if (!v37)
  {
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v38 = (uint64_t)v25;
  if ((uint64_t)v25 == 0x8000000000000000 && v37 == -1) {
    goto LABEL_56;
  }
  uint64_t v39 = v38 / v37 * v37;
  if ((unsigned __int128)(v38 / v37 * (__int128)v37) >> 64 != v39 >> 63) {
    goto LABEL_50;
  }
  uint64_t v40 = v38 % v37;
  if (__OFSUB__(v38, v39))
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (!v28)
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v40 == 0x8000000000000000 && v28 == -1) {
    goto LABEL_57;
  }
  uint64_t v42 = v40 / v28;
  uint64_t v43 = v40 / v28 * v28;
  if ((unsigned __int128)(v42 * (__int128)v28) >> 64 != v43 >> 63) {
    goto LABEL_53;
  }
  BOOL v44 = __OFADD__(v39, v43);
  uint64_t v45 = v39 + v43;
  if (v44)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  BOOL v44 = __OFSUB__(v38, v45);
  uint64_t v46 = v38 - v45;
  if (v44)
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v28 >= 0) {
    uint64_t v47 = v28;
  }
  else {
    uint64_t v47 = v28 + 1;
  }
  if (v46 < v47 >> 1) {
    goto LABEL_28;
  }
  BOOL v44 = __OFSUB__(v28, v46);
  uint64_t v48 = v28 - v46;
  if (!v44)
  {
    double v25 = v25 + (double)v48;
    goto LABEL_28;
  }
LABEL_58:
  __break(1u);
  return result;
}

uint64_t NSFileManager.musicAppGroupCachesURL.getter@<X0>(uint64_t a1@<X8>)
{
  return NSFileManager.groupCacheURL(for:)(a1);
}

Swift::Void __swiftcall LSApplicationWorkspace.openSettings()()
{
}

Swift::Void __swiftcall LSApplicationWorkspace.openRestrictions()()
{
}

uint64_t sub_10011DA40()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100005BFC(&qword_100571720);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10045BDE0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10045BDB0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_100009790((uint64_t)v4, &qword_100571720);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  sub_10045BD30(v10);
  uint64_t v12 = v11;
  sub_1000CB020((uint64_t)_swiftEmptyArrayStorage);
  Class isa = sub_100460A70().super.isa;
  swift_bridgeObjectRelease();
  [v1 openSensitiveURL:v12 withOptions:isa];

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Void __swiftcall LSApplicationWorkspace.openAudioQuality()()
{
}

Swift::Void __swiftcall LSApplicationWorkspace.openAtmos()()
{
}

Swift::Void __swiftcall LSApplicationWorkspace.openMusicSettings()()
{
}

Swift::Void __swiftcall LSApplicationWorkspace.openAccountSettings()()
{
}

Swift::Bool __swiftcall LSApplicationWorkspace.openNotificationSettings()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100005BFC(&qword_100571720);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10045BDE0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10045BDB0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100009790((uint64_t)v4, &qword_100571720);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_10045BD30(v10);
    uint64_t v12 = v11;
    sub_1000CB020((uint64_t)_swiftEmptyArrayStorage);
    Class isa = sub_100460A70().super.isa;
    swift_bridgeObjectRelease();
    unsigned __int8 v9 = [v1 openSensitiveURL:v12 withOptions:isa];

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

Swift::Void __swiftcall LSApplicationWorkspace.openMusicHapticsSettings()()
{
}

uint64_t LSApplicationWorkspace.openiTunesStore(with:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10045BAD0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v51 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100005BFC(&qword_100571720);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v52 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v46 - v10;
  uint64_t v54 = sub_10045BDE0();
  uint64_t v12 = *(void *)(v54 - 8);
  uint64_t v13 = __chkstk_darwin(v54);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v49 = (char *)&v46 - v16;
  uint64_t v17 = sub_100005BFC(&qword_100575490);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v46 - v21;
  uint64_t v53 = v5;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v23((char *)&v46 - v21, 1, 1, v4);
  if (a1)
  {
    id v24 = [a1 universalStore];
    if (v24)
    {
      uint64_t v48 = a2;
      id v46 = [v24 adamID];
      swift_unknownObjectRelease();
      if (qword_1005708D0 != -1) {
        swift_once();
      }
      sub_100005BFC(&qword_100575170);
      UnfairLock.locked<A>(_:)((void (*)(void))sub_10000F7F4);
      double v25 = v56;
      a2 = v48;
      if (v56)
      {
        NSString v26 = sub_100460C70();
        id v47 = v25;
        id v27 = [v25 urlForBagKey:v26];

        if (v27)
        {
          sub_10045BD80();

          uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
          char v29 = v15;
          uint64_t v30 = v54;
          v28(v11, v29, v54);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v30);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v30) != 1)
          {
            v28(v49, v11, v54);
            sub_10045BA40();
            sub_10011E70C((uint64_t)v20, (uint64_t)v22);
            uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
            if (v31(v22, 1, v4) || (uint64_t v32 = (void *)sub_10045BA20()) == 0)
            {
              swift_bridgeObjectRelease();
              uint64_t v32 = _swiftEmptyArrayStorage;
            }
            uint64_t v56 = v32;
            sub_100005BFC(&qword_100572A60);
            sub_10045BA10();
            size_t v45 = swift_allocObject();
            *(_OWORD *)(v45 + 16) = xmmword_1004668E0;
            id v55 = v46;
            sub_100462660();
            sub_10045B9E0();
            swift_bridgeObjectRelease();
            sub_10045B9E0();
            sub_1000B95E0(v45);
            if (v31(v22, 1, v4))
            {

              swift_bridgeObjectRelease();
            }
            else
            {
              sub_10045BA30();
            }
            a2 = v48;
            uint64_t v35 = v54;
            uint64_t v36 = (uint64_t)v52;
            (*(void (**)(char *, uint64_t))(v12 + 8))(v49, v54);
            uint64_t v33 = v53;
            goto LABEL_17;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v11, 1, 1, v54);
        }

        sub_100009790((uint64_t)v11, &qword_100571720);
        a2 = v48;
      }
    }
  }
  sub_10045BAC0();
  v23(v20, 0, 1, v4);
  sub_10011E70C((uint64_t)v20, (uint64_t)v22);
  uint64_t v33 = v53;
  uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  if (!v31(v22, 1, v4)) {
    sub_10045BAA0();
  }
  unsigned int v34 = v31(v22, 1, v4);
  uint64_t v35 = v54;
  if (!v34) {
    sub_10045BA60();
  }
  uint64_t v36 = (uint64_t)v52;
LABEL_17:
  if (v31(v22, 1, v4))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v36, 1, 1, v35);
  }
  else
  {
    uint64_t v37 = v51;
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v51, v22, v4);
    sub_10045BA50();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v37, v4);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v36, 1, v35) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(a2, v36, v35);
      sub_10045BD30(v40);
      uint64_t v42 = v41;
      sub_1000CB020((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v43 = a2;
      Class isa = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
      [v50 openSensitiveURL:v42 withOptions:isa];

      a2 = v43;
      uint64_t v38 = 0;
      goto LABEL_21;
    }
  }
  sub_100009790(v36, &qword_100571720);
  uint64_t v38 = 1;
LABEL_21:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a2, v38, 1, v35);
  return sub_100009790((uint64_t)v22, &qword_100575490);
}

uint64_t sub_10011E70C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005BFC(&qword_100575490);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t LSApplicationWorkspace.openiTunesStore(with:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v1 = sub_10045BAD0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v52 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100005BFC(&qword_100571720);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v53 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v46 - v7;
  uint64_t v9 = sub_10045BDE0();
  uint64_t v56 = *(void *)(v9 - 8);
  uint64_t v57 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v46 - v13;
  uint64_t v15 = sub_100005BFC(&qword_100575490);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v46 - v19;
  uint64_t v55 = v2;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v21((char *)&v46 - v19, 1, 1, v1);
  uint64_t v22 = sub_1004602D0();
  if (v23)
  {
    uint64_t v48 = v22;
    id v50 = v14;
    if (qword_1005708D0 != -1) {
      swift_once();
    }
    sub_100005BFC(&qword_100575170);
    UnfairLock.locked<A>(_:)((void (*)(void))sub_10000F7F4);
    id v24 = v58;
    if (v58)
    {
      NSString v25 = sub_100460C70();
      id v49 = v24;
      id v26 = [v24 urlForBagKey:v25];

      if (v26)
      {
        sub_10045BD80();

        uint64_t v27 = v56;
        uint64_t v28 = v12;
        uint64_t v29 = v57;
        id v47 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
        v47(v8, v28, v57);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v8, 0, 1, v29);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v8, 1, v29) != 1)
        {
          v47(v50, v8, v57);
          sub_10045BA40();
          sub_10011E70C((uint64_t)v18, (uint64_t)v20);
          uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
          if (v30(v20, 1, v1) || (uint64_t v31 = (void *)sub_10045BA20()) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v31 = _swiftEmptyArrayStorage;
          }
          uint64_t v34 = v54;
          uint64_t v58 = v31;
          sub_100005BFC(&qword_100572A60);
          sub_10045BA10();
          size_t v45 = swift_allocObject();
          *(_OWORD *)(v45 + 16) = xmmword_1004668E0;
          sub_10045B9E0();
          swift_bridgeObjectRelease();
          sub_10045B9E0();
          sub_1000B95E0(v45);
          if (v30(v20, 1, v1))
          {

            swift_bridgeObjectRelease();
          }
          else
          {
            sub_10045BA30();
          }
          uint64_t v36 = v56;
          uint64_t v35 = v57;
          uint64_t v37 = (uint64_t)v53;
          (*(void (**)(char *, uint64_t))(v56 + 8))(v50, v57);
          uint64_t v32 = v55;
          goto LABEL_17;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v8, 1, 1, v57);
      }

      swift_bridgeObjectRelease();
      sub_100009790((uint64_t)v8, &qword_100571720);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_10045BAC0();
  v21(v18, 0, 1, v1);
  sub_10011E70C((uint64_t)v18, (uint64_t)v20);
  uint64_t v32 = v55;
  uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
  if (!v30(v20, 1, v1)) {
    sub_10045BAA0();
  }
  unsigned int v33 = v30(v20, 1, v1);
  uint64_t v34 = v54;
  uint64_t v36 = v56;
  uint64_t v35 = v57;
  if (!v33) {
    sub_10045BA60();
  }
  uint64_t v37 = (uint64_t)v53;
LABEL_17:
  if (v30(v20, 1, v1))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v37, 1, 1, v35);
  }
  else
  {
    uint64_t v38 = v52;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v52, v20, v1);
    sub_10045BA50();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v38, v1);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v37, 1, v35) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v34, v37, v35);
      sub_10045BD30(v41);
      uint64_t v43 = v42;
      sub_1000CB020((uint64_t)_swiftEmptyArrayStorage);
      Class isa = sub_100460A70().super.isa;
      swift_bridgeObjectRelease();
      [v51 openSensitiveURL:v43 withOptions:isa];

      uint64_t v39 = 0;
      goto LABEL_21;
    }
  }
  sub_100009790(v37, &qword_100571720);
  uint64_t v39 = 1;
LABEL_21:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v34, v39, 1, v35);
  return sub_100009790((uint64_t)v20, &qword_100575490);
}

Swift::Void __swiftcall LSApplicationWorkspace.openMusic(tabIdentifier:)(MusicCore::TabIdentifier_optional tabIdentifier)
{
  uint64_t v2 = v1;
  int value = tabIdentifier.value;
  uint64_t v4 = sub_100005BFC(&qword_100571720);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10045BDE0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = 0x2F2F3A636973756DLL;
  unint64_t v19 = 0xE800000000000000;
  if (value != 6)
  {
    v17._uint64_t countAndFlagsBits = 0x6261743F2F626174;
    v17._object = (void *)0xE90000000000003DLL;
    uint64_t v11 = (void *)0xE700000000000000;
    v12._uint64_t countAndFlagsBits = 0x7972617262696CLL;
    switch(value)
    {
      case 1:
        uint64_t v11 = (void *)0xE900000000000077;
        v12._uint64_t countAndFlagsBits = 0x6F4E6E657473696CLL;
        break;
      case 2:
        uint64_t v11 = (void *)0xE600000000000000;
        v12._uint64_t countAndFlagsBits = 0x6573776F7262;
        break;
      case 3:
        uint64_t v11 = (void *)0xE500000000000000;
        v12._uint64_t countAndFlagsBits = 0x6F69646172;
        break;
      case 4:
        uint64_t v11 = (void *)0xE600000000000000;
        v12._uint64_t countAndFlagsBits = 0x686372616573;
        break;
      case 5:
        uint64_t v11 = (void *)0xE600000000000000;
        v12._uint64_t countAndFlagsBits = 0x736F65646976;
        break;
      default:
        break;
    }
    v12._object = v11;
    sub_100460E50(v12);
    swift_bridgeObjectRelease();
    sub_100460E10(v17);
    swift_bridgeObjectRelease();
  }
  sub_10045BDB0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100009790((uint64_t)v6, &qword_100571720);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    sub_10045BD30(v13);
    uint64_t v15 = v14;
    sub_1000CB020((uint64_t)_swiftEmptyArrayStorage);
    Class isa = sub_100460A70().super.isa;
    swift_bridgeObjectRelease();
    [v2 openSensitiveURL:v15 withOptions:isa];

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

void *MPModelObject.isCloudLibraryRequired.getter()
{
  self;
  uint64_t result = (void *)swift_dynamicCastObjCClass();
  if (result) {
    return (void *)([result isLibraryAdded] ^ 1);
  }
  self;
  uint64_t result = (void *)swift_dynamicCastObjCClass();
  if (result) {
    return (void *)([result isLibraryAdded] ^ 1);
  }
  self;
  uint64_t result = (void *)swift_dynamicCastObjCClass();
  if (result) {
    return (void *)([result isLibraryAdded] ^ 1);
  }
  return result;
}

id static MPModelPlaylist.defaultMusicKind.getter()
{
  sub_100005BFC(&qword_1005754F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1004669B0;
  *(void *)(v0 + 32) = [self kindWithVariants:7];
  uint64_t v1 = self;
  id v2 = [v1 standardUserDefaults];
  strcpy(v14, "showAllTVShows");
  v14[15] = -18;
  sub_10000F810();
  NSUserDefaults.subscript.getter((uint64_t)v14, &v15);
  if (!v16)
  {
    sub_1000CADE4((uint64_t)&v15);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  char v3 = v14[0];

  if (v3)
  {
    uint64_t v4 = 3;
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v4 = 2;
LABEL_8:
  *(void *)(v0 + 40) = [self kindWithVariants:v4];
  id v5 = [v1 standardUserDefaults];
  strcpy(v14, "showAllTVShows");
  v14[15] = -18;
  NSUserDefaults.subscript.getter((uint64_t)v14, &v15);
  if (!v16)
  {
    sub_1000CADE4((uint64_t)&v15);
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:

    goto LABEL_14;
  }
  char v6 = v14[0];

  if ((v6 & 1) == 0)
  {
LABEL_14:
    uint64_t v7 = 2;
    goto LABEL_15;
  }
  uint64_t v7 = 3;
LABEL_15:
  uint64_t v8 = self;
  uint64_t v9 = self;
  *(void *)(v0 + 48) = [self kindWithVariants:v7];
  *(void *)&long long v15 = v0;
  sub_1004610C0();
  sub_100005BFC((uint64_t *)&unk_100575A70);
  Class isa = sub_100461080().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v9 kindWithKinds:isa];

  id v12 = [v8 kindWithPlaylistEntryKind:v11 options:0];
  return v12;
}

id static MPModelPlaylistEntry.defaultMusicKind.getter()
{
  sub_100005BFC(&qword_1005754F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1004669B0;
  *(void *)(v0 + 32) = [self kindWithVariants:7];
  uint64_t v1 = self;
  id v2 = [v1 standardUserDefaults];
  strcpy(v12, "showAllTVShows");
  v12[15] = -18;
  sub_10000F810();
  NSUserDefaults.subscript.getter((uint64_t)v12, &v13);
  if (!v14)
  {
    sub_1000CADE4((uint64_t)&v13);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  char v3 = v12[0];

  if (v3)
  {
    uint64_t v4 = 3;
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v4 = 2;
LABEL_8:
  *(void *)(v0 + 40) = [self kindWithVariants:v4];
  id v5 = [v1 standardUserDefaults];
  strcpy(v12, "showAllTVShows");
  v12[15] = -18;
  NSUserDefaults.subscript.getter((uint64_t)v12, &v13);
  if (!v14)
  {
    sub_1000CADE4((uint64_t)&v13);
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:

    goto LABEL_14;
  }
  char v6 = v12[0];

  if ((v6 & 1) == 0)
  {
LABEL_14:
    uint64_t v7 = 2;
    goto LABEL_15;
  }
  uint64_t v7 = 3;
LABEL_15:
  uint64_t v8 = self;
  *(void *)(v0 + 48) = [self kindWithVariants:v7];
  *(void *)&long long v13 = v0;
  sub_1004610C0();
  sub_100005BFC((uint64_t *)&unk_100575A70);
  Class isa = sub_100461080().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [v8 kindWithKinds:isa];

  return v10;
}

id static MPModelTVEpisode.defaultMusicKind.getter()
{
  return sub_10011F87C();
}

id static MPModelMovie.defaultMusicKind.getter()
{
  return sub_10011F87C();
}

id sub_10011F87C()
{
  id v0 = [self standardUserDefaults];
  strcpy(v5, "showAllTVShows");
  v5[15] = -18;
  sub_10000F810();
  NSUserDefaults.subscript.getter((uint64_t)v5, &v6);
  if (!v7)
  {
    sub_1000CADE4((uint64_t)&v6);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  char v1 = v5[0];

  if (v1)
  {
    uint64_t v2 = 3;
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v2 = 2;
LABEL_8:
  id v3 = [self kindWithVariants:v2];

  return v3;
}

id static MPModelArtist.defaultMusicKind.getter()
{
  id v0 = self;
  char v1 = self;
  id v2 = [self kindWithVariants:3];
  id v3 = [v1 kindWithSongKind:v2];

  id v4 = [v0 kindWithAlbumKind:v3];
  return v4;
}

id static MPModelAlbum.defaultMusicKind.getter()
{
  id v0 = self;
  id v1 = [self kindWithVariants:3];
  id v2 = [v0 kindWithSongKind:v1];

  return v2;
}

id static MPModelTVShow.defaultMusicKind.getter()
{
  id v0 = [self standardUserDefaults];
  strcpy(v9, "showAllTVShows");
  v9[15] = -18;
  sub_10000F810();
  NSUserDefaults.subscript.getter((uint64_t)v9, &v10);
  if (!v11)
  {
    sub_1000CADE4((uint64_t)&v10);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  char v1 = v9[0];

  if ((v1 & 1) == 0)
  {
LABEL_7:
    uint64_t v2 = 2;
    goto LABEL_8;
  }
  uint64_t v2 = 3;
LABEL_8:
  id v3 = self;
  id v4 = self;
  id v5 = [self kindWithVariants:v2];
  id v6 = [v4 kindWithEpisodeKind:v5];

  id v7 = [v3 kindWithSeasonKind:v6];
  return v7;
}

id static MPModelTVSeason.defaultMusicKind.getter()
{
  id v0 = [self standardUserDefaults];
  strcpy(v7, "showAllTVShows");
  v7[15] = -18;
  sub_10000F810();
  NSUserDefaults.subscript.getter((uint64_t)v7, &v8);
  if (!v9)
  {
    sub_1000CADE4((uint64_t)&v8);
    goto LABEL_6;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:

    goto LABEL_7;
  }
  char v1 = v7[0];

  if ((v1 & 1) == 0)
  {
LABEL_7:
    uint64_t v2 = 2;
    goto LABEL_8;
  }
  uint64_t v2 = 3;
LABEL_8:
  id v3 = self;
  id v4 = [self kindWithVariants:v2];
  id v5 = [v3 kindWithEpisodeKind:v4];

  return v5;
}

id MPModelObject.innermostModelObject.getter()
{
  return v0;
}

id MPModelPlaylistEntry.innermostModelObject.getter()
{
  id v1 = [v0 type];
  if (v1 == (id)3)
  {
    id v3 = [v5 movie];
    goto LABEL_7;
  }
  if (v1 == (id)2)
  {
    id v3 = [v5 tvEpisode];
LABEL_7:
    id result = v3;
    uint64_t v2 = v5;
    if (result) {
      return result;
    }
    goto LABEL_8;
  }
  uint64_t v2 = v5;
  if (v1 == (id)1)
  {
    id v3 = [v5 song];
    goto LABEL_7;
  }
LABEL_8:

  return v2;
}

id MPModelGenericObject.innermostModelObject.getter()
{
  switch((unint64_t)[v0 type])
  {
    case 1uLL:
      id result = [v5 song];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 2uLL:
      id result = [v5 album];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 3uLL:
      id result = [v5 artist];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 4uLL:
      id result = [v5 playlist];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 5uLL:
      id v2 = [v5 playlistEntry];
      if (!v2) {
        goto LABEL_37;
      }
      id v3 = v2;
      id v4 = [v2 innermostModelObject];

      id result = v4;
      break;
    case 6uLL:
      id result = [v5 tvEpisode];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 7uLL:
      id result = [v5 season];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 8uLL:
      id result = [v5 show];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 9uLL:
      id result = [v5 movie];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 0xAuLL:
      id result = [v5 mediaClip];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 0xBuLL:
      id result = [v5 podcast];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 0xCuLL:
      id result = [v5 podcastEpisode];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 0xDuLL:
      id result = [v5 radioStation];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 0xFuLL:
      id result = [v5 genre];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 0x10uLL:
      id result = [v5 curator];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 0x11uLL:
      id result = [v5 socialPerson];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 0x13uLL:
      id result = [v5 recordLabel];
      if (!result) {
        goto LABEL_37;
      }
      break;
    case 0x14uLL:
      id result = [v5 creditsArtist];
      if (!result) {
        goto LABEL_37;
      }
      break;
    default:
LABEL_37:
      id result = v5;
      break;
  }
  return result;
}

id MPModelStoreBrowseContentItem.innermostModelObject.getter()
{
  id v1 = [v0 innerObject];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v1 innermostModelObject];

    return v3;
  }
  else
  {
    return v5;
  }
}

uint64_t MPModelSong.nowPlayingTitle(radioStation:)(void *a1)
{
  uint64_t v3 = sub_10045C2A0();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_100460C60();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  long long v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  long long v10 = &v24[-v9];
  id v11 = [v1 title];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = sub_100460CB0();
    unint64_t v15 = v14;

    uint64_t v16 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0) {
      uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
    }
    if (v16) {
      return v13;
    }
    swift_bridgeObjectRelease();
  }
  if (!a1) {
    goto LABEL_12;
  }
  id v17 = [a1 name];
  if (!v17) {
    goto LABEL_12;
  }
  uint64_t v18 = v17;
  uint64_t v13 = sub_100460CB0();
  unint64_t v20 = v19;

  uint64_t v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0) {
    uint64_t v21 = v13 & 0xFFFFFFFFFFFFLL;
  }
  if (!v21)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    sub_100460BF0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v8, v10, v4);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v22 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v13 = sub_100460D20();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v10, v4);
  }
  return v13;
}

uint64_t MPModelSong.preferredBylineAttribution(with:radioStation:)(uint64_t a1, id a2)
{
  if (a2 && (id v4 = [a2 attributionLabel]) != 0)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_100460CB0();
  }
  else
  {
    id v7 = v2;
    long long v8 = sub_100120D1C(a1, v7);

    if (*((void *)v8 + 2))
    {
      sub_100005BFC(&qword_100577430);
      sub_100120E60();
      uint64_t v6 = sub_100460B80();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return v6;
}

void sub_100120698(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_10045C2A0();
  __chkstk_darwin(v6 - 8);
  v38[1] = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100460C60();
  uint64_t v39 = *(void *)(v8 - 8);
  uint64_t v40 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  id v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v38 - v12;
  uint64_t v14 = sub_100460C40();
  __chkstk_darwin(v14 - 8);
  int v15 = *a1;
  id v16 = sub_100120A58(v15);
  unsigned int v17 = [a2 hasLoadedValuesForPropertySet:v16];

  if (!v17)
  {
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  if (v15 == 2)
  {
    id v18 = [a2 artist];
    if (!v18) {
      goto LABEL_21;
    }
    unint64_t v19 = v18;
    id v20 = [v18 name];

    if (!v20) {
      goto LABEL_21;
    }
    uint64_t v21 = sub_100460CB0();
    unint64_t v23 = v22;

    uint64_t v24 = HIBYTE(v23) & 0xF;
    if ((v23 & 0x2000000000000000) == 0) {
      uint64_t v24 = v21 & 0xFFFFFFFFFFFFLL;
    }
    if (v24)
    {
      *a3 = v21;
      a3[1] = v23;
      return;
    }
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  if ((v15 & 1) == 0 && ![a2 shouldShowComposer]) {
    goto LABEL_21;
  }
  id v25 = [a2 composer];
  if (!v25) {
    goto LABEL_21;
  }
  id v26 = v25;
  id v27 = [v25 name];

  if (!v27) {
    goto LABEL_21;
  }
  uint64_t v28 = sub_100460CB0();
  unint64_t v30 = v29;

  uint64_t v31 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0) {
    uint64_t v31 = v28 & 0xFFFFFFFFFFFFLL;
  }
  if (!v31) {
    goto LABEL_20;
  }
  sub_100460C30();
  v41._uint64_t countAndFlagsBits = 2128194;
  v41._object = (void *)0xE300000000000000;
  sub_100460C20(v41);
  v42._uint64_t countAndFlagsBits = v28;
  v42._object = (void *)v30;
  sub_100460C10(v42);
  swift_bridgeObjectRelease();
  v43._uint64_t countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  sub_100460C20(v43);
  sub_100460C50();
  uint64_t v33 = v39;
  uint64_t v32 = v40;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v11, v13, v40);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v34 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v35 = sub_100460D20();
  uint64_t v37 = v36;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v32);
  *a3 = v35;
  a3[1] = v37;
}

id sub_100120A58(char a1)
{
  if (a1 == 2)
  {
    sub_100005BFC((uint64_t *)&unk_1005770F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100466900;
    *(void *)(inited + 32) = sub_100460CB0();
    *(void *)(inited + 40) = v2;
    sub_100005BFC((uint64_t *)&unk_100575D00);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_100466900;
    *(void *)(v3 + 32) = sub_100460CB0();
    *(void *)(v3 + 40) = v4;
    Class isa = sub_100461080().super.isa;
    swift_bridgeObjectRelease();
    id v6 = [self propertySetWithProperties:isa];

    *(void *)(inited + 48) = v6;
    sub_1000CB180(inited);
    id v7 = objc_allocWithZone((Class)MPPropertySet);
    v8.super.Class isa = sub_100461080().super.isa;
  }
  else
  {
    if ((a1 & 1) == 0)
    {
      sub_100005BFC((uint64_t *)&unk_100575D00);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_100466900;
      *(void *)(v9 + 32) = sub_100460CB0();
      *(void *)(v9 + 40) = v10;
    }
    sub_100005BFC((uint64_t *)&unk_1005770F0);
    uint64_t v11 = swift_initStackObject();
    *(_OWORD *)(v11 + 16) = xmmword_100466900;
    *(void *)(v11 + 32) = sub_100460CB0();
    *(void *)(v11 + 40) = v12;
    sub_100005BFC((uint64_t *)&unk_100575D00);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_100466900;
    *(void *)(v13 + 32) = sub_100460CB0();
    *(void *)(v13 + 40) = v14;
    Class v15 = sub_100461080().super.isa;
    swift_bridgeObjectRelease();
    id v16 = [self propertySetWithProperties:v15];

    *(void *)(v11 + 48) = v16;
    sub_1000CB180(v11);
    id v7 = objc_allocWithZone((Class)MPPropertySet);
    v8.super.Class isa = sub_100461080().super.isa;
    swift_bridgeObjectRelease();
  }
  sub_1001210CC();
  Class v17 = sub_100460A70().super.isa;
  swift_bridgeObjectRelease();
  id v18 = [v7 initWithProperties:v8.super.isa relationships:v17];

  return v18;
}

char *sub_100120D1C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (char *)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  id v6 = (char *)_swiftEmptyArrayStorage;
  do
  {
    unsigned __int8 v16 = *(unsigned char *)(a1 + v5 + 32);
    sub_100120698(&v16, a2, &v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    uint64_t v8 = v15;
    if (v15)
    {
      uint64_t v9 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v6 = sub_1000511A8(0, *((void *)v6 + 2) + 1, 1, v6);
      }
      unint64_t v11 = *((void *)v6 + 2);
      unint64_t v10 = *((void *)v6 + 3);
      if (v11 >= v10 >> 1) {
        id v6 = sub_1000511A8((char *)(v10 > 1), v11 + 1, 1, v6);
      }
      *((void *)v6 + 2) = v11 + 1;
      id v7 = &v6[16 * v11];
      *((void *)v7 + 4) = v9;
      *((void *)v7 + 5) = v8;
    }
    ++v5;
  }
  while (v3 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_100120E60()
{
  unint64_t result = qword_1005759D0;
  if (!qword_1005759D0)
  {
    sub_100005C9C(&qword_100577430);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005759D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SongBylineAttributionComponent(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100120F78);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for SongBylineAttributionComponent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x100121060);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_100121088(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_1001210A4(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SongBylineAttributionComponent()
{
  return &type metadata for SongBylineAttributionComponent;
}

unint64_t sub_1001210CC()
{
  unint64_t result = qword_100575A40;
  if (!qword_100575A40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100575A40);
  }
  return result;
}

uint64_t sub_100121110(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = sub_10045C2A0();
  __chkstk_darwin(v6 - 8);
  uint64_t v19 = sub_100460C60();
  uint64_t v7 = *(void *)(v19 - 8);
  uint64_t v8 = __chkstk_darwin(v19);
  unint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = sub_100460C40();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = 0;
  if ((a2 & 0x8000000000000000) == 0 && a1 >= 1)
  {
    sub_100460C30();
    v21._uint64_t countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    sub_100460C20(v21);
    double v20 = *(double *)&a1;
    sub_100460C00();
    v22._uint64_t countAndFlagsBits = 0x2F7469622DLL;
    v22._object = (void *)0xE500000000000000;
    sub_100460C20(v22);
    double v20 = (double)a2 / 1000.0;
    sub_100460C00();
    v23._uint64_t countAndFlagsBits = 0x207A486B20;
    v23._object = (void *)0xE500000000000000;
    sub_100460C20(v23);
    v24._uint64_t countAndFlagsBits = UInt32.formatName.getter(a3);
    sub_100460C10(v24);
    swift_bridgeObjectRelease();
    v25._uint64_t countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    sub_100460C20(v25);
    sub_100460C50();
    uint64_t v15 = v19;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v19);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v16 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v14 = sub_100460D20();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v15);
  }
  return v14;
}

uint64_t _sSo27MPNowPlayingInfoAudioFormatC9MusicCoreE12inputDetailsSSSgvg_0()
{
  id v1 = [v0 bitDepth];
  id v2 = [v0 sampleRate];
  int v3 = [v0 codec];

  return sub_100121110((uint64_t)v1, (uint64_t)v2, v3);
}

void *MPIdentifierSet.Purpose.Options.catalog.unsafeMutableAddressor()
{
  return &static MPIdentifierSet.Purpose.Options.catalog;
}

uint64_t MPModelObject.bestIdentifier(for:)(uint64_t a1, unsigned __int8 a2)
{
  int v3 = v2;
  self;
  uint64_t v6 = (void *)swift_dynamicCastObjCClass();
  if (v6)
  {
    id v7 = [v6 anyObject];
    goto LABEL_5;
  }
  self;
  uint64_t v8 = (void *)swift_dynamicCastObjCClass();
  if (v8)
  {
    id v7 = [v8 innerObject];
LABEL_5:
    id v9 = v7;
    if (v9) {
      goto LABEL_7;
    }
  }
  id v9 = v3;
LABEL_7:
  if (a2 == 1)
  {
    id v10 = [v9 identifiers];
    if (a1 == 2)
    {
      int ObjectType = swift_getObjectType();
      uint64_t v12 = sub_1000CD2D4(ObjectType, 2, 1u, v10);
    }
    else if (a1 == 1 || (int v11 = swift_getObjectType(), v12 = sub_1000CD2D4(v11, 2, 1u, v10), !v13))
    {
      uint64_t v12 = sub_100122F88(v9);
    }
    uint64_t v16 = v12;
  }
  else
  {
    int v14 = swift_getObjectType();
    id v15 = [v9 identifiers];
    uint64_t v16 = sub_1000CD2D4(v14, a1, a2, v15);
  }
  return v16;
}

uint64_t sub_100121638(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t MPArtworkCatalog.getImage()()
{
  *(void *)(v1 + 128) = v0;
  return _swift_task_switch(sub_100121680, 0, 0);
}

uint64_t sub_100121680()
{
  uint64_t v1 = (void *)v0[16];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10012177C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100121914;
  v0[13] = &unk_10052EBB8;
  v0[14] = v2;
  [v1 requestImageWithCompletion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10012177C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    uint64_t v2 = sub_1001218A8;
  }
  else {
    uint64_t v2 = sub_10012188C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10012188C()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 120));
}

uint64_t sub_1001218A8()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100121914(uint64_t result, void *a2, void *a3)
{
  if (a3)
  {
    sub_100005BFC((uint64_t *)&unk_100575460);
    swift_allocError();
    *uint64_t v4 = a3;
    id v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(void **)(*(void *)(*(void *)(result + 32) + 64) + 40) = a2;
    id v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void MPArtworkCatalog.requestImage(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  v7[4] = sub_100128490;
  v7[5] = v5;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  void v7[2] = sub_1000E1FE0;
  void v7[3] = &unk_10052EBF8;
  id v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  [v2 requestImageWithCompletion:v6];
  _Block_release(v6);
}

void sub_100121AB4(void *a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  if (a1)
  {
    id v8 = a1;
    a3(a1, 0);
  }
  else
  {
    sub_10012A15C();
    uint64_t v6 = swift_allocError();
    void *v7 = a2;
    swift_errorRetain();
    a3((void *)v6, 1);
    swift_errorRelease();
  }
}

void *MPArtworkCatalog.image(from:size:)(void *a1, double a2, double a3)
{
  uint64_t v6 = sub_10045F9B0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  [a1 setDestinationScale:0.0];
  [a1 setFittingSize:a2, a3];
  dispatch_semaphore_t v11 = dispatch_semaphore_create(0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100128528;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_10012A410;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1000E1FE0;
  uint64_t aBlock[3] = &unk_10052EC98;
  int v14 = _Block_copy(aBlock);
  swift_retain();
  id v15 = v11;
  swift_retain();
  swift_release();
  [a1 requestImageWithCompletion:v14];
  _Block_release(v14);
  swift_release();
  sub_10045F990();
  sub_100461A20();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess();
  uint64_t v16 = *(void **)(v10 + 16);
  id v17 = v16;
  swift_release();
  return v16;
}

Swift::Int sub_100121DF4(void *a1, char a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a2)
  {
    sub_100005BFC((uint64_t *)&unk_100575460);
    swift_willThrowTypedImpl();
    uint64_t v4 = 0;
  }
  else
  {
    id v5 = a1;
  }
  swift_beginAccess();
  uint64_t v6 = *(void **)(a3 + 16);
  *(void *)(a3 + 16) = v4;

  return sub_100461A30();
}

uint64_t MPArtworkCatalog.setDestination<A>(_:for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1004626D0();
  dispatch_semaphore_t v11 = (void *)swift_allocObject();
  v11[2] = a5;
  v11[3] = a3;
  v11[4] = a4;
  v14[4] = sub_10012856C;
  v14[5] = v11;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100122094;
  v14[3] = &unk_10052ECE8;
  uint64_t v12 = _Block_copy(v14);
  swift_retain();
  swift_release();
  [v5 setDestination:v10 forRepresentationKinds:a2 configurationBlock:v12];
  _Block_release(v12);
  return swift_unknownObjectRelease();
}

uint64_t sub_100121F94(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a5 - 8);
  uint64_t v9 = __chkstk_darwin();
  dispatch_semaphore_t v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100007168(v9, (uint64_t)v13);
  swift_dynamicCast();
  a3(v11, a2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v11, a5);
}

uint64_t sub_100122094(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(void *, id))(a1 + 32);
  v8[3] = swift_getObjectType();
  v8[0] = a2;
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(v8, v6);
  swift_release();

  return sub_100007118((uint64_t)v8);
}

uint64_t MPArtworkCatalog.originalSize.getter()
{
  id v1 = [v0 token];
  sub_100461FF0();
  swift_unknownObjectRelease();
  sub_100009854(0, &qword_1005759B8);
  if (swift_dynamicCast())
  {
    id v2 = [v7 imageArtworkInfo];
    if (v2)
    {
      uint64_t v3 = v2;
      [v2 originalSize];
      uint64_t v5 = v4;

      return v5;
    }
  }
  return 0;
}

uint64_t MPArtworkCatalog.expectedRatio.getter()
{
  double v0 = COERCE_DOUBLE(MPArtworkCatalog.originalSize.getter());
  if ((v2 & 1) != 0 || v1 <= 0.0) {
    *(double *)&uint64_t result = 0.0;
  }
  else {
    *(double *)&uint64_t result = v0 / v1;
  }
  return result;
}

id static MPArtworkCatalog.monogram(for:layoutDirection:)(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  return sub_100128858(a1, a2, a3, a4 & 1);
}

id static MPMediaLibrary.device.getter()
{
  id result = [(id)swift_getObjCClassFromMetadata() deviceMediaLibrary];
  if (!result) {
    __break(1u);
  }
  return result;
}

id MPMediaLibrary.canCreatePlaylists.getter()
{
  id result = [self deviceMediaLibrary];
  if (result)
  {
    double v1 = result;
    sub_100009854(0, (unint64_t *)&unk_1005759C0);
    char v2 = sub_100461D10();

    return (id)(v2 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *MPMediaPickerConfiguration.musicTypeIdentifiers.getter()
{
  double v1 = v0;
  id v2 = [self mainBundle];
  uint64_t v3 = NSBundle.exportedTypeDeclarations.getter();

  if (!v3) {
    return (char *)_swiftEmptyArrayStorage;
  }
  id v4 = [v1 typeIdentifiers];
  uint64_t v5 = sub_1004610A0();

  uint64_t v6 = *(void *)(v5 + 16);
  swift_bridgeObjectRelease();
  if (v6)
  {
    id v7 = [v1 typeIdentifiers];
    uint64_t v8 = sub_1004610A0();

    swift_bridgeObjectRetain();
    uint64_t v9 = sub_100128704(v8, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v10 = sub_100128240((uint64_t)v9);
    swift_bridgeObjectRelease();
    return (char *)v10;
  }
  swift_bridgeObjectRelease();
  if (![v1 mediaTypes]) {
    return (char *)_swiftEmptyArrayStorage;
  }
  __int16 v12 = (unsigned __int16)[v1 mediaTypes];

  return sub_10012266C(v12);
}

uint64_t sub_100122498@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  id v2 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v6 = (char *)_swiftEmptyArrayStorage;
    Swift::String v22 = (char *)&type metadata for Any + 8;
    do
    {
      uint64_t v8 = *(void *)(a1 + 8 * v5 + 32);
      uint64_t v9 = *(void *)(v8 + 16);
      swift_bridgeObjectRetain();
      if (!v9
        || (unint64_t v10 = sub_1000CD178(0xD000000000000010, 0x8000000100492CA0), (v11 & 1) == 0)
        || (sub_100007168(*(void *)(v8 + 56) + 32 * v10, (uint64_t)v19), (swift_dynamicCast() & 1) == 0))
      {
        uint64_t v20 = 0;
        uint64_t v21 = 0;
      }
      swift_bridgeObjectRelease();
      uint64_t v12 = v21;
      if (v21)
      {
        uint64_t v13 = v20;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_1000511A8(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v15 = *((void *)v6 + 2);
        unint64_t v14 = *((void *)v6 + 3);
        if (v15 >= v14 >> 1) {
          uint64_t v6 = sub_1000511A8((char *)(v14 > 1), v15 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v15 + 1;
        id v7 = &v6[16 * v15];
        *((void *)v7 + 4) = v13;
        *((void *)v7 + 5) = v12;
      }
      ++v5;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    id v2 = a2;
  }
  else
  {
    uint64_t v6 = (char *)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_100128578((uint64_t)v6);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *id v2 = v16;
  return result;
}

char *sub_10012266C(__int16 a1)
{
  if ((a1 & 1) == 0)
  {
    id v2 = (char *)_swiftEmptyArrayStorage;
    if ((a1 & 0x800) == 0) {
      return v2;
    }
    goto LABEL_7;
  }
  id v2 = sub_1000511A8(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v4 = *((void *)v2 + 2);
  unint64_t v3 = *((void *)v2 + 3);
  if (v4 >= v3 >> 1) {
    id v2 = sub_1000511A8((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v4 + 1;
  uint64_t v5 = &v2[16 * v4];
  *((void *)v5 + 4) = 0xD000000000000014;
  *((void *)v5 + 5) = 0x8000000100492CE0;
  if ((a1 & 0x800) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v2 = sub_1000511A8(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v7 = *((void *)v2 + 2);
    unint64_t v6 = *((void *)v2 + 3);
    if (v7 >= v6 >> 1) {
      id v2 = sub_1000511A8((char *)(v6 > 1), v7 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v7 + 1;
    uint64_t v8 = &v2[16 * v7];
    *((void *)v8 + 4) = 0xD00000000000001BLL;
    *((void *)v8 + 5) = 0x8000000100492CC0;
  }
  return v2;
}

id MPMediaPickerConfiguration.supportsCatalogContent.getter()
{
  if (qword_100570808 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v2) {
    return [v0 showsCatalogContent];
  }
  else {
    return 0;
  }
}

id MPMediaPickerConfiguration.supportsCloudLibrary.getter()
{
  if (qword_100570808 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if ((v2 & 0x100) != 0) {
    return [v0 showsCloudItems];
  }
  else {
    return 0;
  }
}

void *MPIdentifierSet.Purpose.Options.local.unsafeMutableAddressor()
{
  return &static MPIdentifierSet.Purpose.Options.local;
}

void *MPIdentifierSet.Purpose.Options.all.unsafeMutableAddressor()
{
  return &static MPIdentifierSet.Purpose.Options.all;
}

unint64_t MPIdentifierSet.publicLoggingDescription.getter()
{
  v1._uint64_t countAndFlagsBits = MPIdentifierSet.bestLibraryIdentifier.getter();
  if (v1._object)
  {
    sub_100460E50(v1);
    swift_bridgeObjectRelease();
    v22._uint64_t countAndFlagsBits = 59;
    v22._object = (void *)0xE100000000000000;
    sub_100460E50(v22);
    __int16 v2 = sub_1000511A8(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v4 = *((void *)v2 + 2);
    unint64_t v3 = *((void *)v2 + 3);
    if (v4 >= v3 >> 1) {
      __int16 v2 = sub_1000511A8((char *)(v3 > 1), v4 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v4 + 1;
    uint64_t v5 = &v2[16 * v4];
    *((void *)v5 + 4) = 0x507972617262696CLL;
    *((void *)v5 + 5) = 0xEB000000003D4449;
  }
  else
  {
    __int16 v2 = (char *)_swiftEmptyArrayStorage;
  }
  id v6 = [v0 universalStore];
  if (v6)
  {
    id v7 = [v6 globalPlaylistID];
    swift_unknownObjectRelease();
    if (v7)
    {
      uint64_t v8 = sub_100460CB0();
      unint64_t v10 = v9;

      sub_100462120(20);
      swift_bridgeObjectRelease();
      v23._uint64_t countAndFlagsBits = v8;
      v23._object = v10;
      sub_100460E50(v23);
      swift_bridgeObjectRelease();
      v24._uint64_t countAndFlagsBits = 59;
      v24._object = (void *)0xE100000000000000;
      sub_100460E50(v24);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        __int16 v2 = sub_1000511A8(0, *((void *)v2 + 2) + 1, 1, v2);
      }
      unint64_t v12 = *((void *)v2 + 2);
      unint64_t v11 = *((void *)v2 + 3);
      if (v12 >= v11 >> 1) {
        __int16 v2 = sub_1000511A8((char *)(v11 > 1), v12 + 1, 1, v2);
      }
      *((void *)v2 + 2) = v12 + 1;
      uint64_t v13 = &v2[16 * v12];
      *((void *)v13 + 4) = 0xD000000000000011;
      *((void *)v13 + 5) = 0x8000000100492AA0;
    }
  }
  v14._uint64_t countAndFlagsBits = MPIdentifierSet.bestStoreIdentifier.getter();
  if (v14._object)
  {
    sub_100460E50(v14);
    swift_bridgeObjectRelease();
    v25._uint64_t countAndFlagsBits = 59;
    v25._object = (void *)0xE100000000000000;
    sub_100460E50(v25);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      __int16 v2 = sub_1000511A8(0, *((void *)v2 + 2) + 1, 1, v2);
    }
    unint64_t v16 = *((void *)v2 + 2);
    unint64_t v15 = *((void *)v2 + 3);
    if (v16 >= v15 >> 1) {
      __int16 v2 = sub_1000511A8((char *)(v15 > 1), v16 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v16 + 1;
    id v17 = &v2[16 * v16];
    *((void *)v17 + 4) = 0x3D65726F7473;
    *((void *)v17 + 5) = 0xE600000000000000;
  }
  sub_100462120(19);
  swift_bridgeObjectRelease();
  sub_100005BFC(&qword_100577430);
  sub_100120E60();
  uint64_t v18 = sub_100460B80();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  v26._uint64_t countAndFlagsBits = v18;
  v26._object = v20;
  sub_100460E50(v26);
  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = 62;
  v27._object = (void *)0xE100000000000000;
  sub_100460E50(v27);
  return 0xD000000000000010;
}

uint64_t MPIdentifierSet.bestLibraryIdentifier.getter()
{
  id v1 = [v0 library];
  if (!v1) {
    return 0;
  }
  __int16 v2 = v1;
  if (![v1 persistentID]
    || ([v2 persistentID],
        Class isa = sub_100462870().super.super.isa,
        id v4 = (id)MPStoreItemMetadataStringNormalizeStoreIDValue(),
        isa,
        !v4))
  {
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t v5 = sub_100460CB0();

  swift_unknownObjectRelease();
  return v5;
}

uint64_t MPIdentifierSet.bestStoreIdentifier.getter()
{
  id v1 = [v0 universalStore];
  if (!v1) {
    return 0;
  }
  __int16 v2 = v1;
  id v3 = [v1 subscriptionAdamID];
  id v4 = [v2 purchasedAdamID];
  id v5 = [v2 adamID];
  if (!v3 && !v4)
  {
    uint64_t v6 = (uint64_t)v5;
    if (!v5)
    {
      swift_unknownObjectRelease();
      return v6;
    }
  }
  Class isa = sub_100462870().super.super.isa;
  id v8 = (id)MPStoreItemMetadataStringNormalizeStoreIDValue();

  if (!v8)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t v6 = sub_100460CB0();

  swift_unknownObjectRelease();
  return v6;
}

uint64_t static MPIdentifierSet.bestPlayabilityIdentifier<A>(for:options:identifiers:)(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (a2 == 2) {
    return sub_100123384((uint64_t)a1, a3);
  }
  if (a2 == 1) {
    return sub_10012313C(a1, (uint64_t)a3, a4);
  }
  uint64_t result = sub_100123384((uint64_t)a1, a3);
  if (!v8) {
    return sub_10012313C(a1, (uint64_t)a3, a4);
  }
  return result;
}

uint64_t sub_100122F88(void *a1)
{
  char v10 = 2;
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = &v10;
  *(void *)(v3 + 24) = a1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_10012A1E8;
  *(void *)(v4 + 24) = v3;
  aBlock[4] = sub_10000C494;
  aBlock[5] = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10000B0B8;
  uint64_t aBlock[3] = &unk_10052F5B8;
  id v5 = _Block_copy(aBlock);
  id v6 = a1;
  swift_retain();
  swift_release();
  [(id)v2 performWithoutEnforcement:v5];
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    if (v10 != 2 && (v10 & 1) != 0)
    {
      uint64_t v8 = MPIdentifierSet.bestLibraryIdentifier.getter();
      swift_release();
    }
    else
    {
      swift_release();
      return 0;
    }
    return v8;
  }
  return result;
}

uint64_t sub_10012313C(void *a1, uint64_t a2, uint64_t a3)
{
  char v13 = 2;
  uint64_t v5 = self;
  id v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a3;
  v6[3] = &v13;
  v6[4] = a1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_10012A140;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_10000C494;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10000B0B8;
  uint64_t aBlock[3] = &unk_10052F540;
  uint64_t v8 = _Block_copy(aBlock);
  id v9 = a1;
  swift_retain();
  swift_release();
  [(id)v5 performWithoutEnforcement:v8];
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5)
  {
    __break(1u);
  }
  else
  {
    if (v13 != 2 && (v13 & 1) != 0)
    {
      uint64_t v11 = MPIdentifierSet.bestLibraryIdentifier.getter();
      swift_release();
    }
    else
    {
      swift_release();
      return 0;
    }
    return v11;
  }
  return result;
}

uint64_t sub_1001232F8(char *a1, uint64_t a2)
{
  swift_getObjectType();
  uint64_t result = swift_conformsToProtocol2();
  if (result) {
    uint64_t v5 = result;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!result) {
    a2 = 0;
  }
  if (a2)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
    char v7 = result & 1;
  }
  else
  {
    char v7 = 2;
  }
  *a1 = v7;
  return result;
}

uint64_t sub_100123384(uint64_t a1, void *a2)
{
  sub_100009854(0, (unint64_t *)&unk_100574DF0);
  int ObjectType = swift_getObjectType();
  return static MPIdentifierSet.bestIdentifier<A>(for:purpose:identifiers:)(ObjectType, 2, 1u, a2);
}

uint64_t static MPIdentifierSet.bestIdentifier<A>(for:purpose:identifiers:)(int a1, uint64_t a2, unsigned __int8 a3, id a4)
{
  char v5 = a2;
  if (a3 > 1u)
  {
    switch(a2)
    {
      case 1:
        id v10 = [a4 personalizedStore];
        if (!v10) {
          return 0;
        }
        uint64_t v11 = v10;
        if (![v10 cloudID]) {
          goto LABEL_58;
        }
        [v11 cloudID];
        v12.super.super.Class isa = sub_100462920().super.super.isa;
        char v13 = (void *)MPStoreItemMetadataStringNormalizeStoreIDValue();
        goto LABEL_55;
      case 2:
        id v14 = [a4 library];
        if (!v14) {
          return 0;
        }
        unint64_t v15 = v14;
        if (![v14 persistentID]) {
          goto LABEL_58;
        }
        [v15 persistentID];
        v12.super.super.Class isa = sub_100462870().super.super.isa;
        char v13 = (void *)MPStoreItemMetadataStringNormalizeStoreIDValue();
        goto LABEL_55;
      case 3:
        sub_100009854(0, &qword_100574658);
        if (swift_dynamicCastMetatype()) {
          goto LABEL_25;
        }
        sub_100009854(0, &qword_100574660);
        uint64_t v8 = swift_dynamicCastMetatype();
        if (v8) {
          goto LABEL_32;
        }
        break;
      default:
        sub_100009854(0, &qword_100574658);
        uint64_t v8 = swift_dynamicCastMetatype();
        if (v8) {
          goto LABEL_25;
        }
        break;
    }
    sub_100009854(v8, qword_100574668);
    if (!swift_dynamicCastMetatype())
    {
      id v32 = [a4 universalStore];
      if (v32)
      {
        uint64_t v33 = v32;
        id v34 = [v32 subscriptionAdamID];
        id v35 = [v33 purchasedAdamID];
        id v36 = [v33 adamID];
        if (!v34 && !v35)
        {
          uint64_t v21 = (uint64_t)v36;
          if (!v36) {
            goto LABEL_57;
          }
        }
        v12.super.super.Class isa = sub_100462870().super.super.isa;
        char v13 = (void *)MPStoreItemMetadataStringNormalizeStoreIDValue();
        goto LABEL_55;
      }
      return 0;
    }
LABEL_42:
    id v25 = [a4 radio];
    if (v25)
    {
      Swift::String v26 = v25;
      id v27 = [v25 stationStringID];
      if (v27)
      {
        uint64_t v28 = v27;
        uint64_t v21 = sub_100460CB0();
        unint64_t v30 = v29;

        uint64_t v31 = HIBYTE(v30) & 0xF;
        if ((v30 & 0x2000000000000000) == 0) {
          uint64_t v31 = v21 & 0xFFFFFFFFFFFFLL;
        }
        if (v31) {
          goto LABEL_57;
        }
        swift_bridgeObjectRelease();
      }
      if (![v26 stationID])
      {
LABEL_58:
        swift_unknownObjectRelease();
        return 0;
      }
      [v26 stationID];
      v12.super.super.Class isa = sub_100462870().super.super.isa;
      char v13 = (void *)MPStoreItemMetadataStringNormalizeStoreIDValue();
LABEL_55:
      id v37 = v13;

      if (v37)
      {
        uint64_t v21 = sub_100460CB0();

LABEL_57:
        swift_unknownObjectRelease();
        return v21;
      }
      goto LABEL_58;
    }
    return 0;
  }
  sub_100009854(0, &qword_100574658);
  if (!swift_dynamicCastMetatype())
  {
    sub_100009854(0, &qword_100574660);
    if (swift_dynamicCastMetatype())
    {
      if (v5)
      {
        uint64_t v6 = MPIdentifierSet.bestLibraryIdentifier.getter();
        if (v9) {
          return v6;
        }
      }
      if ((v5 & 2) == 0) {
        return 0;
      }
LABEL_32:
      id v19 = [a4 universalStore];
      if (!v19) {
        return MPIdentifierSet.bestStoreIdentifier.getter();
      }
      id v17 = [v19 socialProfileID];
      goto LABEL_34;
    }
    sub_100009854(0, qword_100574668);
    if (!swift_dynamicCastMetatype())
    {
      if (v5)
      {
        uint64_t v6 = MPIdentifierSet.bestLibraryIdentifier.getter();
        if (v18) {
          return v6;
        }
      }
      if ((v5 & 2) == 0) {
        return 0;
      }
      return MPIdentifierSet.bestStoreIdentifier.getter();
    }
    if ((v5 & 2) == 0) {
      return 0;
    }
    goto LABEL_42;
  }
  if (v5)
  {
    uint64_t v6 = MPIdentifierSet.bestLibraryIdentifier.getter();
    if (v7) {
      return v6;
    }
  }
  if ((v5 & 2) == 0) {
    return 0;
  }
LABEL_25:
  id v16 = [a4 universalStore];
  if (!v16) {
    return MPIdentifierSet.bestStoreIdentifier.getter();
  }
  id v17 = [v16 globalPlaylistID];
LABEL_34:
  id v20 = v17;
  swift_unknownObjectRelease();
  if (!v20) {
    return MPIdentifierSet.bestStoreIdentifier.getter();
  }
  uint64_t v21 = sub_100460CB0();
  unint64_t v23 = v22;

  uint64_t v24 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0) {
    uint64_t v24 = v21 & 0xFFFFFFFFFFFFLL;
  }
  if (!v24)
  {
    swift_bridgeObjectRelease();
    return MPIdentifierSet.bestStoreIdentifier.getter();
  }
  return v21;
}

uint64_t MPIdentifierSet.init(kind:deviceLibraryPID:)(void *a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1001289DC;
  *(void *)(v6 + 24) = v5;
  v10[4] = sub_1001289F4;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  _OWORD v10[2] = sub_100123BF8;
  v10[3] = &unk_10052ED60;
  uint64_t v7 = _Block_copy(v10);
  swift_retain();
  swift_release();
  id v8 = [v4 initWithModelKind:a1 block:v7];

  _Block_release(v7);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((a1 & 1) == 0) {
    return (uint64_t)v8;
  }
  __break(1u);
  return result;
}

void sub_1001239D4(void *a1, uint64_t a2)
{
  id v4 = [self deviceMediaLibrary];
  if (!v4) {
    goto LABEL_6;
  }
  uint64_t v5 = v4;
  id v6 = [v4 uniqueIdentifier];

  if (v6)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a2;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_10012A0E8;
    *(void *)(v8 + 24) = v7;
    v11[4] = sub_10012A414;
    v11[5] = v8;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_100123B7C;
    v11[3] = &unk_10052F4C8;
    uint64_t v9 = _Block_copy(v11);
    swift_retain();
    swift_release();
    [a1 setLibraryIdentifiersWithDatabaseID:v6 block:v9];

    _Block_release(v9);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
LABEL_6:
      __break(1u);
    }
  }
}

uint64_t sub_100123B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);

  return swift_unknownObjectRelease();
}

uint64_t sub_100123BD0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_100123BF8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t LibraryAddable.hasLoadedLibraryAddedProperty.getter()
{
  if (([v0 hasLoadedValueForKey:MPModelPropertyAlbumLibraryAdded] & 1) != 0
    || ([v0 hasLoadedValueForKey:MPModelPropertyMovieLibraryAdded] & 1) != 0
    || ([v0 hasLoadedValueForKey:MPModelPropertyPlaylistLibraryAdded] & 1) != 0
    || ([v0 hasLoadedValueForKey:MPModelPropertySongLibraryAdded] & 1) != 0
    || ([v0 hasLoadedValueForKey:MPModelPropertyTVEpisodeLibraryAdded] & 1) != 0
    || ([v0 hasLoadedValueForKey:MPModelPropertyTVSeasonLibraryAdded] & 1) != 0)
  {
    return 1;
  }
  else
  {
    return (uint64_t)[v0 hasLoadedValueForKey:MPModelPropertyArtistLibraryAdded];
  }
}

BOOL LibraryAddable.isUserLibraryAddable.getter()
{
  id v1 = [objc_allocWithZone((Class)MPLibraryAddStatusObserver) init];
  [v1 configureWithModelObject:v0];
  uint64_t v2 = (char *)[v1 currentStatus];

  return (unint64_t)(v2 - 1) < 3;
}

id sub_100123D9C()
{
  return [v0 isLibraryAdded];
}

BOOL PlaylistAddable.isPlaylistAddEligible.getter(uint64_t a1, uint64_t a2)
{
  self;
  id v4 = (void *)swift_dynamicCastObjCClass();
  return (!v4 || ([v4 isArtistUploadedContent] & 1) == 0)
      && ((*(uint64_t (**)(uint64_t))(*(void *)(a2 + 8) + 16))(a1) & 1) != 0;
}

Swift::String_optional __swiftcall MPModelObject.genericModelRelationshipKey()()
{
  self;
  if (swift_dynamicCastObjCClass()) {
    goto LABEL_13;
  }
  self;
  if (swift_dynamicCastObjCClass()) {
    goto LABEL_13;
  }
  self;
  if (swift_dynamicCastObjCClass()) {
    goto LABEL_13;
  }
  self;
  if (swift_dynamicCastObjCClass()) {
    goto LABEL_13;
  }
  self;
  if (swift_dynamicCastObjCClass()) {
    goto LABEL_13;
  }
  self;
  if (swift_dynamicCastObjCClass()
    || (self, swift_dynamicCastObjCClass())
    || (self, swift_dynamicCastObjCClass())
    || (self, swift_dynamicCastObjCClass())
    || (self, swift_dynamicCastObjCClass())
    || (self, swift_dynamicCastObjCClass())
    || (self, (uint64_t v0 = swift_dynamicCastObjCClass()) != 0))
  {
LABEL_13:
    uint64_t v0 = sub_100460CB0();
  }
  else
  {
    id v1 = 0;
  }
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t MPModelObject.MediaKitPlayableKind.rawValue.getter(char a1)
{
  uint64_t result = 0x73676E6F73;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6F736970652D7674;
      break;
    case 2:
      uint64_t result = 0x73776F68732D7674;
      break;
    case 3:
    case 4:
      uint64_t result = 0x646564616F6C7075;
      break;
    case 5:
      uint64_t result = 0x736E6F6974617473;
      break;
    case 6:
      uint64_t result = 0x69762D636973756DLL;
      break;
    case 7:
      uint64_t result = 0x6F6D2D636973756DLL;
      break;
    case 8:
      uint64_t result = 0x7473696C79616C70;
      break;
    case 9:
      uint64_t result = 0x736D75626C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001241A4(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = MPModelObject.MediaKitPlayableKind.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == MPModelObject.MediaKitPlayableKind.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1004626E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_100124230()
{
  char v1 = *v0;
  sub_1004628B0();
  MPModelObject.MediaKitPlayableKind.rawValue.getter(v1);
  sub_100460DA0();
  swift_bridgeObjectRelease();
  return sub_100462900();
}

uint64_t sub_100124294()
{
  MPModelObject.MediaKitPlayableKind.rawValue.getter(*v0);
  sub_100460DA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1001242E8()
{
  char v1 = *v0;
  sub_1004628B0();
  MPModelObject.MediaKitPlayableKind.rawValue.getter(v1);
  sub_100460DA0();
  swift_bridgeObjectRelease();
  return sub_100462900();
}

uint64_t sub_100124348@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _sSo13MPModelObjectC9MusicCoreE20MediaKitPlayableKindO8rawValueAESgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_100124378@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MPModelObject.MediaKitPlayableKind.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t MPModelObject.mediaKitPlayableKind.getter()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    char v2 = (void *)v1;
    id v3 = v0;
    unsigned int v4 = [v2 isArtistUploadedContent];
    unsigned int v5 = [v2 hasVideo];

    if (v4)
    {
      if (v5) {
        return 4;
      }
      else {
        return 3;
      }
    }
    else if (v5)
    {
      return 6;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      return 1;
    }
    else
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        return 2;
      }
      else
      {
        self;
        if (swift_dynamicCastObjCClass())
        {
          return 5;
        }
        else
        {
          self;
          if (swift_dynamicCastObjCClass())
          {
            return 7;
          }
          else
          {
            self;
            if (swift_dynamicCastObjCClass())
            {
              return 8;
            }
            else
            {
              self;
              if (swift_dynamicCastObjCClass()) {
                return 9;
              }
              else {
                return 10;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t MPModelObject.FavoriteStatus.rawValue.getter(char a1)
{
  uint64_t result = 0x657469726F766166;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C61727475656ELL;
      break;
    case 2:
      uint64_t result = 0x64656B696C736964;
      break;
    case 3:
      uint64_t result = 0x726F707075736E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1001245B8(unsigned __int8 *a1, char *a2)
{
  return sub_1000344E0(*a1, *a2);
}

Swift::Int sub_1001245C4()
{
  return sub_100462900();
}

uint64_t sub_1001246AC()
{
  sub_100460DA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10012477C()
{
  return sub_100462900();
}

uint64_t sub_100124860@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _sSo13MPModelObjectC9MusicCoreE14FavoriteStatusO8rawValueAESgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_100124890(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000064;
  uint64_t v3 = 0x657469726F766166;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x6C61727475656ELL;
      goto LABEL_3;
    case 2:
      *a1 = 0x64656B696C736964;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x726F707075736E75;
      a1[1] = 0xEB00000000646574;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t MPModelObject.favoriteStatus.getter()
{
  uint64_t v1 = v0;
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2
    || (self, (uint64_t v2 = swift_dynamicCastObjCClass()) != 0)
    || (self, (uint64_t v2 = swift_dynamicCastObjCClass()) != 0))
  {
    uint64_t v3 = (void *)v2;
    id v4 = v1;
LABEL_5:
    unsigned int v5 = [v3 isFavorite];
    unsigned int v6 = [v3 isDisliked];
    unsigned int v7 = v6;
    if (v5)
    {
      if ((v6 & 1) == 0)
      {

        return 0;
      }
LABEL_28:
      uint64_t result = sub_100462350();
      __break(1u);
      return result;
    }

    BOOL v9 = v7 == 0;
    goto LABEL_9;
  }
  self;
  uint64_t v10 = swift_dynamicCastObjCClass();
  if (v10)
  {
    uint64_t v3 = (void *)v10;
    uint64_t v11 = qword_100570808;
    id v4 = v1;
    if (v11 != -1) {
      swift_once();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10045D710();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (v20) {
      goto LABEL_5;
    }
    goto LABEL_25;
  }
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  if (!v12) {
    return 3;
  }
  char v13 = (void *)v12;
  uint64_t v14 = qword_100570808;
  id v4 = v1;
  if (v14 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if ((v20 & 1) == 0 || (id v15 = [v13 artist]) == 0)
  {
LABEL_25:

    return 3;
  }
  id v16 = v15;
  unsigned __int8 v17 = [v15 isFavorite];
  unsigned int v18 = [v16 isDisliked];
  unsigned int v19 = v18;
  if (v17)
  {
    if ((v18 & 1) == 0)
    {

      return 0;
    }
    goto LABEL_28;
  }

  BOOL v9 = v19 == 0;
LABEL_9:
  if (v9) {
    return 1;
  }
  else {
    return 2;
  }
}

void *MPModelAlbum.orphanMusicVideo.getter()
{
  if ((uint64_t)[v0 trackCount] > 1) {
    return 0;
  }
  id v1 = [v0 representativeSong];
  uint64_t v2 = v1;
  if (v1 && ([v1 hasVideo] & 1) == 0)
  {

    return 0;
  }
  return v2;
}

uint64_t static MPModelPlaylistVariants.allPlaylists.getter()
{
  return 215;
}

uint64_t static MPModelPlaylistVariants.playlistsAndFolders.getter()
{
  return 223;
}

uint64_t Array<A>.union()()
{
  id v1 = [self emptyPropertySet];
  sub_1004611C0();
  sub_100009854(0, (unint64_t *)&qword_100575A40);
  swift_getWitnessTable();
  sub_100460FD0();

  return v2;
}

id SnapshotIdentifier.Lazy.identifiers.getter(uint64_t a1)
{
  return sub_100124E70(a1, (SEL *)&selRef_identifiersForSectionAtIndex_, (SEL *)&selRef_identifiersForItemAtIndexPath_);
}

id SnapshotIdentifier.Lazy.object.getter(uint64_t a1)
{
  return sub_100124E70(a1, (SEL *)&selRef_sectionAtIndex_, (SEL *)&selRef_itemAtIndexPath_);
}

id sub_100124E70(uint64_t a1, SEL *a2, SEL *a3)
{
  uint64_t v6 = v3;
  uint64_t v8 = sub_10045C490();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t *)((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void *, uint64_t, uint64_t))(v15 + 16))(v14, v6, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v16 = *(void **)((char *)v14 + *(int *)(sub_100005BFC(&qword_100575A48) + 48));
    (*(void (**)(char *, void *, uint64_t))(v9 + 32))(v12, v14, v8);
    Class isa = sub_10045C430().super.isa;
    id v18 = [v16 *a3];

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return v18;
  }
  else
  {
    char v20 = (void *)v14[1];
    id v21 = [v20 *a2 *v14];

    return v21;
  }
}

id SnapshotIdentifier.identifiers.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SnapshotIdentifier.Lazy();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (id *)((char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(id *, uint64_t, uint64_t))(v11 + 16))(v10, v2, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v12 = *v10;
    id v13 = [*v10 identifiers];

    return v13;
  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v5 + 32))(v8, v10, v4);
    id v15 = SnapshotIdentifier.Lazy.identifiers.getter(v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return v15;
  }
}

id SnapshotIdentifier.object.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SnapshotIdentifier.Lazy();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v14 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v10, v2, a1);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return *(id *)v10;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
  id v12 = SnapshotIdentifier.Lazy.object.getter(v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v12;
}

unint64_t SnapshotIdentifier.debugDescription.getter(uint64_t a1)
{
  unint64_t v4 = SnapshotIdentifier.description.getter(a1);
  v5._uint64_t countAndFlagsBits = 0x7463656A626F202CLL;
  v5._object = (void *)0xEA0000000000203ALL;
  sub_100460E50(v5);
  id v3 = SnapshotIdentifier.object.getter(a1);
  swift_getWitnessTable();
  sub_1004626A0();

  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  sub_100460E50(v6);
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t SnapshotIdentifier.description.getter(uint64_t a1)
{
  v8._uint64_t countAndFlagsBits = sub_100462990();
  sub_100460E50(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 2112062;
  v9._object = (void *)0xE300000000000000;
  sub_100460E50(v9);
  v10._uint64_t countAndFlagsBits = 60;
  v10._object = (void *)0xE100000000000000;
  sub_100460E50(v10);
  swift_bridgeObjectRelease();
  id v2 = SnapshotIdentifier.identifiers.getter(a1);
  id v3 = [v2 description];
  uint64_t v4 = sub_100460CB0();
  Swift::String v6 = v5;

  v11._uint64_t countAndFlagsBits = v4;
  v11._object = v6;
  sub_100460E50(v11);

  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 0x696669746E656469;
  v12._object = (void *)0xEB000000003D7265;
  sub_100460E50(v12);
  swift_bridgeObjectRelease();
  return 0xD000000000000012;
}

void SnapshotIdentifier.hash(into:)(uint64_t a1, uint64_t a2)
{
  id v2 = SnapshotIdentifier.identifiers.getter(a2);
  sub_100461D20();
}

uint64_t static SnapshotIdentifier.== infix(_:_:)()
{
  sub_100009854(0, (unint64_t *)&qword_100575A50);
  uint64_t v0 = type metadata accessor for SnapshotIdentifier();
  id v1 = SnapshotIdentifier.identifiers.getter(v0);
  id v2 = SnapshotIdentifier.identifiers.getter(v0);
  char v3 = sub_100461D10();

  return v3 & 1;
}

Swift::Int SnapshotIdentifier.hashValue.getter(uint64_t a1)
{
  sub_1004628B0();
  id v2 = SnapshotIdentifier.identifiers.getter(a1);
  sub_100461D20();

  return sub_100462900();
}

Swift::Int sub_100125720(uint64_t a1, uint64_t a2)
{
  sub_1004628B0();
  SnapshotIdentifier.hash(into:)((uint64_t)v4, a2);
  return sub_100462900();
}

uint64_t sub_10012576C()
{
  return static SnapshotIdentifier.== infix(_:_:)();
}

uint64_t static NSDiffableDataSourceSnapshot<>.enumerateSnapshotIdentifierItems(from:using:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v18 = 0;
  Swift::String v12 = (void *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a1;
  v12[6] = a2;
  _OWORD v12[7] = a3;
  v12[8] = &v18;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100128B64;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_100128BA8;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100125A8C;
  uint64_t aBlock[3] = &unk_10052EDD8;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = a1;
  swift_retain();
  swift_release();
  [v15 enumerateItemIdentifiersUsingBlock:v14];
  _Block_release(v14);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v15) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001258FC(uint64_t a1, uint64_t a2, unsigned char *a3, void *a4, void (*a5)(uint64_t, char *, unsigned char *), uint64_t a6, unsigned char *a7)
{
  char v20 = a3;
  uint64_t v11 = type metadata accessor for SnapshotIdentifier();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v19 - v13;
  uint64_t v15 = *(int *)(sub_100005BFC(&qword_100575A48) + 48);
  uint64_t v16 = sub_10045C490();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, a1, v16);
  *(void *)&v14[v15] = a4;
  type metadata accessor for SnapshotIdentifier.Lazy();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  id v17 = a4;
  a5(a1, v14, a7);
  *char v20 = *a7;
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_100125A8C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_10045C490();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  Swift::String v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, id, uint64_t))(a1 + 32);
  sub_10045C440();
  id v12 = a3;
  v11(v10, v12, a4);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t static NSDiffableDataSourceSnapshot<>.enumerateSnapshotIdentifierItems(from:inSection:using:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v20 = 0;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a5;
  v14[3] = a6;
  v14[4] = a7;
  v14[5] = a2;
  void v14[6] = a1;
  _OWORD v14[7] = a3;
  v14[8] = a4;
  v14[9] = &v20;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_100128C08;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = sub_100128C50;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100125E94;
  uint64_t aBlock[3] = &unk_10052EE50;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a1;
  swift_retain();
  swift_release();
  [v17 enumerateItemIdentifiersInSectionAtIndex:a2 usingBlock:v16];
  _Block_release(v16);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100125D2C(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, void *a5, void (*a6)(uint64_t, char *, unsigned char *), uint64_t a7, unsigned char *a8)
{
  uint64_t v19 = a7;
  char v20 = a3;
  uint64_t v12 = type metadata accessor for SnapshotIdentifier();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v19 - v14;
  uint64_t v16 = *(int *)(sub_100005BFC(&qword_100575A48) + 48);
  sub_10045C450();
  *(void *)&v15[v16] = a5;
  type metadata accessor for SnapshotIdentifier.Lazy();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  id v17 = a5;
  a6(a1, v15, a8);
  *char v20 = *a8;
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

void sub_100125E94(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  Swift::String v6 = *(void (**)(uint64_t, id, uint64_t))(a1 + 32);
  id v7 = a3;
  v6(a2, v7, a4);
}

uint64_t static NSDiffableDataSourceSnapshot<>.snapshotIdentifiers(from:inSection:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for SnapshotIdentifier();
  uint64_t v12 = sub_100461120();
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = a5;
  v11[5] = &v12;
  static NSDiffableDataSourceSnapshot<>.enumerateSnapshotIdentifierItems(from:inSection:using:)(a1, a2, (uint64_t)sub_100128C78, (uint64_t)v11, a3, a4, a5);
  return v12;
}

uint64_t sub_100125FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SnapshotIdentifier();
  __chkstk_darwin(v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v7 - v4, a2, v3);
  sub_1004611C0();
  return sub_100461180();
}

uint64_t static NSDiffableDataSourceSnapshot<>.enumerateSnapshotIdentifierSections(from:using:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v18 = 0;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a1;
  v12[6] = a2;
  _OWORD v12[7] = a3;
  v12[8] = &v18;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100128C84;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_10012A3D4;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100125E94;
  uint64_t aBlock[3] = &unk_10052EEC8;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = a1;
  swift_retain();
  swift_release();
  [v15 enumerateSectionIdentifiersUsingBlock:v14];
  _Block_release(v14);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v15) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100126204(uint64_t a1, uint64_t a2, unsigned char *a3, void *a4, void (*a5)(uint64_t, void *, unsigned char *), uint64_t a6, unsigned char *a7)
{
  uint64_t v12 = type metadata accessor for SnapshotIdentifier();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (uint64_t *)((char *)&v18 - v14);
  void *v15 = a1;
  v15[1] = a4;
  type metadata accessor for SnapshotIdentifier.Lazy();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  id v16 = a4;
  a5(a1, v15, a7);
  *a3 = *a7;
  return (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t static NSDiffableDataSourceSnapshot<>.snapshot(from:)@<X0>(void *a1@<X0>, void **a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v20 = a5;
  long long aBlock = a2;
  uint64_t v22 = type metadata accessor for SnapshotIdentifier();
  unint64_t v23 = a4;
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  uint64_t v9 = sub_10045D580();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - v11;
  sub_10045D570();
  self;
  uint64_t v13 = swift_dynamicCastObjCClassUnconditional();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = a4;
  v14[5] = v12;
  void v14[6] = v13;
  id v15 = (void *)swift_allocObject();
  void v15[2] = a2;
  id v15[3] = a3;
  v15[4] = a4;
  v15[5] = sub_100128D00;
  v15[6] = v14;
  id v25 = sub_100128D20;
  Swift::String v26 = v15;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v22 = 1107296256;
  unint64_t v23 = sub_100126720;
  uint64_t WitnessTable = &unk_10052EF40;
  id v16 = _Block_copy(&aBlock);
  id v17 = a1;
  swift_retain();
  swift_release();
  [v17 enumerateSectionsUsingBlock:v16];
  _Block_release(v16);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v17)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v20, v12, v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001265D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_10016FCFC(a6, a6);
  swift_allocObject();
  uint64_t v14 = sub_1004610D0();
  void *v15 = a1;
  id v16 = (void *)sub_10003F66C(v14);
  type metadata accessor for SnapshotIdentifier();
  swift_unknownObjectRetain();
  swift_getWitnessTable();
  sub_10045D580();
  v17._rawValue = v16;
  sub_10045D560(v17);
  swift_bridgeObjectRelease();
  static NSDiffableDataSourceSnapshot<>.snapshotIdentifiers(from:inSection:)(a5, a2, a6, a7, a8);
  swift_unknownObjectRetain();
  sub_10045D550();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100126720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100009854(0, &qword_100575BB0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v8 = swift_unknownObjectRetain();
  v7(v8, a3, a4);

  return swift_unknownObjectRelease();
}

uint64_t static NSDiffableDataSourceSnapshot<>.snapshot(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v16 = a3;
  long long aBlock = (void **)&type metadata for String;
  uint64_t v18 = type metadata accessor for SnapshotIdentifier();
  uint64_t v19 = (void (*)(uint64_t, void *))&protocol witness table for String;
  uint64_t WitnessTable = (void *)swift_getWitnessTable();
  uint64_t v5 = sub_10045D580();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - v7;
  sub_10045D570();
  self;
  uint64_t v9 = swift_dynamicCastObjCClassUnconditional();
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = a2;
  v10[3] = v8;
  v10[4] = v9;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_100128D48;
  *(void *)(v11 + 24) = v10;
  id v21 = sub_100128D64;
  uint64_t v22 = v11;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_100126B70;
  uint64_t WitnessTable = &unk_10052EFB8;
  uint64_t v12 = _Block_copy(&aBlock);
  id v13 = a1;
  swift_retain();
  swift_release();
  [v13 enumerateSectionsUsingBlock:v12];
  _Block_release(v12);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v13)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v16, v8, v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_100126A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  sub_100005BFC((uint64_t *)&unk_100575D00);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100466900;
  *(void *)(v9 + 32) = sub_100460CB0();
  *(void *)(v9 + 40) = v10;
  type metadata accessor for SnapshotIdentifier();
  swift_getWitnessTable();
  sub_10045D580();
  v11._rawValue = (void *)v9;
  sub_10045D560(v11);
  swift_bridgeObjectRelease();
  static NSDiffableDataSourceSnapshot<>.snapshotIdentifiers(from:inSection:)(a5, a2, (uint64_t)&type metadata for String, a6, (uint64_t)&protocol witness table for String);
  sub_100460CB0();
  sub_10045D550();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_100126B70(uint64_t a1, void *a2)
{
  id v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

void static NSDiffableDataSourceSnapshot<>.snapshot(from:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  type metadata accessor for SnapshotIdentifier();
  type metadata accessor for SnapshotIdentifier();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_10045D570();
  self;
  uint64_t v8 = (void *)swift_dynamicCastObjCClassUnconditional();
  self;
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = swift_dynamicCastObjCClassUnconditional();
  id v9 = a1;
  uint64_t WitnessTable = swift_getWitnessTable();
  static NSDiffableDataSourceSnapshot<>.enumerateSnapshotIdentifierSections(from:using:)(v8, (uint64_t)sub_100128D8C, (uint64_t)v11, a2, a3, WitnessTable);
}

uint64_t sub_100126D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a2;
  uint64_t v27 = a6;
  uint64_t v28 = a1;
  unint64_t v29 = a5;
  uint64_t v9 = type metadata accessor for SnapshotIdentifier();
  uint64_t v10 = sub_100461EA0();
  uint64_t v30 = *(void *)(v10 - 8);
  uint64_t v31 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v24 - v11;
  sub_100462670();
  uint64_t v13 = *(void *)(v9 - 8);
  swift_allocObject();
  uint64_t v14 = sub_1004610D0();
  id v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v25(v15, a2, v9);
  uint64_t v16 = (void *)sub_10003F66C(v14);
  uint64_t v17 = type metadata accessor for SnapshotIdentifier();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v32 = v9;
  uint64_t v33 = v17;
  uint64_t v34 = WitnessTable;
  uint64_t v35 = v19;
  sub_10045D580();
  v20._rawValue = v16;
  sub_10045D560(v20);
  swift_bridgeObjectRelease();
  uint64_t v21 = v27;
  uint64_t v22 = swift_getWitnessTable();
  static NSDiffableDataSourceSnapshot<>.snapshotIdentifiers(from:inSection:)(v29, v28, v21, a7, v22);
  v25((uint64_t)v12, v26, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v12, 0, 1, v9);
  sub_10045D550();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v12, v31);
}

uint64_t MPModelPlaylist.supportsSing.getter()
{
  if (([v0 traits] & 0x100) != 0) {
    return MSVDeviceSupportsVocalAttenuation();
  }
  else {
    return 0;
  }
}

id MPModelPlaylist.coverArtworkCatalog.getter()
{
  sub_100005BFC((uint64_t *)&unk_100575D00);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1004668C0;
  *(void *)(v1 + 32) = sub_100460CB0();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = sub_100460CB0();
  *(void *)(v1 + 56) = v3;
  *(void *)(v1 + 64) = sub_100460CB0();
  *(void *)(v1 + 72) = v4;
  Class isa = sub_100461080().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [self propertySetWithProperties:isa];

  LODWORD(isa) = [v0 hasLoadedValuesForPropertySet:v6];
  if (!isa) {
    return 0;
  }
  id v7 = [v0 name];
  if (!v7) {
    return 0;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_100460CB0();
  uint64_t v11 = v10;

  if (([v0 userEditableComponents] & 2) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v12 = [v0 coverArtworkRecipe];
  unint64_t v13 = sub_100460CB0();
  unint64_t v15 = v14;

  id v16 = _s9MusicCore14PlaylistCoversO12ArtworkTokenC7rawJSON13playlistTitleAESgSS_SStcfC_0(v13, v15, v9, v11);
  if (!v16) {
    return 0;
  }
  uint64_t v17 = v16;
  id v18 = [v0 artworkCatalog];
  if (v18)
  {
    id v19 = v18;
  }
  else
  {
    if (qword_100570AA0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_10045D310();
    sub_100009688(v21, (uint64_t)static Logger.playlistCovers);
    id v22 = v0;
    unint64_t v23 = sub_10045D2F0();
    os_log_type_t v24 = sub_100461770();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136446210;
      id v26 = [v22 coverArtworkRecipe];
      uint64_t v27 = sub_100460CB0();
      unint64_t v29 = v28;

      *(void *)(v25 + 4) = sub_10001FCAC(v27, v29, &v32);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "No server artwork catalog available for playlist with coverArtworkRecipe=%{public}s", (uint8_t *)v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v30 = qword_100570A50;
    id v31 = v17;
    if (v30 != -1) {
      swift_once();
    }
    id v19 = [objc_allocWithZone((Class)MPArtworkCatalog) initWithToken:v31 dataSource:static PlaylistCovers.ArtworkDataSource.shared];
  }
  return v19;
}

void *static MPModelPlaylist.favoriteSongsRequest(labeled:)(uint64_t a1, uint64_t a2)
{
  sub_100005BFC((uint64_t *)&unk_100575A60);
  uint64_t v3 = (void *)static MPModelLibraryRequest<>.favoriteSongs.getter();
  uint64_t v4 = v3;
  if (a2 && v3)
  {
    id v5 = v3;
    NSString v6 = sub_100460C70();
    [v5 setLabel:v6];
  }
  return v4;
}

uint64_t static MPModelLibraryRequest<>.favoriteSongs.getter()
{
  id v0 = [self favoriteSongsPlaylist];
  if (!v0) {
    return 0;
  }
  uint64_t v1 = v0;
  if ([v0 valueForProperty:MPMediaItemPropertyPersistentID])
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v35, 0, sizeof(v35));
  }
  sub_1000E4750((uint64_t)v35, (uint64_t)&aBlock);
  if (!v31)
  {

    sub_1000CADE4((uint64_t)&aBlock);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    return 0;
  }
  uint64_t v28 = v34;
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  sub_100005BFC(&qword_1005754F0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1004669B0;
  *(void *)(v3 + 32) = [self kindWithVariants:7];
  uint64_t v4 = self;
  id v5 = [v4 standardUserDefaults];
  strcpy((char *)v35, "showAllTVShows");
  HIBYTE(v35[0]) = -18;
  sub_10000F810();
  NSUserDefaults.subscript.getter((uint64_t)v35, &aBlock);
  if (!v31)
  {
    sub_1000CADE4((uint64_t)&aBlock);
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:

    goto LABEL_17;
  }
  char v6 = v35[0];

  if (v6)
  {
    uint64_t v7 = 3;
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v7 = 2;
LABEL_18:
  *(void *)(v3 + 40) = [self kindWithVariants:v7];
  id v10 = [v4 standardUserDefaults];
  strcpy((char *)v35, "showAllTVShows");
  HIBYTE(v35[0]) = -18;
  NSUserDefaults.subscript.getter((uint64_t)v35, &aBlock);
  if (!v31)
  {
    sub_1000CADE4((uint64_t)&aBlock);
    goto LABEL_23;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_23:

    goto LABEL_24;
  }
  char v11 = v35[0];

  if (v11)
  {
    uint64_t v12 = 3;
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v12 = 2;
LABEL_25:
  unint64_t v13 = self;
  *(void *)(v3 + 48) = [self kindWithVariants:v12];
  *(void *)&long long aBlock = v3;
  sub_1004610C0();
  sub_100005BFC((uint64_t *)&unk_100575A70);
  Class isa = sub_100461080().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [v13 kindWithKinds:isa];

  id v16 = [self kindWithVariants:2 playlistEntryKind:v15 options:0];
  id v8 = v2;
  NSString v17 = sub_100460C70();
  [v8 setLabel:v17];

  [v8 setSectionKind:v16];
  uint64_t v27 = v15;
  [v8 setItemKind:v15];
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1004665D0;
  id v19 = objc_allocWithZone((Class)MPIdentifierSet);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v28;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_10012A390;
  *(void *)(v21 + 24) = v20;
  uint64_t v32 = sub_10012A414;
  uint64_t v33 = v21;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v30 = sub_100123BF8;
  id v31 = &unk_10052F030;
  id v22 = _Block_copy(&aBlock);
  id v23 = v16;
  swift_retain();
  swift_release();
  id v24 = [v19 initWithModelKind:v23 block:v22];

  _Block_release(v22);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    *(void *)(v18 + 32) = v24;
    *(void *)&long long aBlock = v18;
    sub_1004610C0();
    sub_100009854(0, (unint64_t *)&unk_100574DF0);
    Class v26 = sub_100461080().super.isa;
    swift_bridgeObjectRelease();
    [v8 setAllowedSectionIdentifiers:v26];

    return (uint64_t)v8;
  }
  __break(1u);
  return result;
}

unint64_t MPNowPlayingAudioFormatBadging.debugDescription.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      v1._uint64_t countAndFlagsBits = 0x6574537973736F6CLL;
      v1._object = (void *)0xEB000000006F6572;
      goto LABEL_9;
    case 1:
      v1._object = (void *)0xEA0000000000736FLL;
      v1._uint64_t countAndFlagsBits = 0x6D744179626C6F64;
      goto LABEL_9;
    case 2:
      v1._uint64_t countAndFlagsBits = 0x64754179626C6F64;
      v1._object = (void *)0xEA00000000006F69;
      goto LABEL_9;
    case 3:
      v1._uint64_t countAndFlagsBits = 0x7373656C73736F6CLL;
      v1._object = (void *)0xE800000000000000;
      goto LABEL_9;
    case 4:
      v1._object = (void *)0x8000000100492C50;
      v1._uint64_t countAndFlagsBits = 0xD000000000000016;
      goto LABEL_9;
    case 5:
      v1._uint64_t countAndFlagsBits = 0x416C616974617073;
      v1._object = (void *)0xEC0000006F696475;
LABEL_9:
      sub_100460E50(v1);
      break;
    default:
      v3._uint64_t countAndFlagsBits = sub_100462660();
      sub_100460E50(v3);
      swift_bridgeObjectRelease();
      v4._uint64_t countAndFlagsBits = 62;
      v4._object = (void *)0xE100000000000000;
      sub_100460E50(v4);
      v5._uint64_t countAndFlagsBits = 0x3C6E776F6E6B6E75;
      v5._object = (void *)0xE800000000000000;
      sub_100460E50(v5);
      swift_bridgeObjectRelease();
      break;
  }
  v6._uint64_t countAndFlagsBits = 41;
  v6._object = (void *)0xE100000000000000;
  sub_100460E50(v6);
  return 0xD00000000000001FLL;
}

unint64_t sub_100127C04()
{
  return MPNowPlayingAudioFormatBadging.debugDescription.getter(*v0);
}

id MPModelPerson.monogramArtworkCatalog.getter()
{
  if (![v0 hasLoadedValueForKey:MPModelPropertyPersonName]) {
    return 0;
  }
  id v1 = [v0 name];
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = sub_100460CB0();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  id v7 = sub_100128858(v3, v5, 0, 1);
  swift_bridgeObjectRelease();
  return v7;
}

id sub_100127CBC()
{
  id result = [v0 artworkCatalog];
  if (!result)
  {
    if ([v0 hasLoadedValueForKey:MPModelPropertyPersonName])
    {
      id v2 = [v0 name];
      if (v2)
      {
        uint64_t v3 = v2;
        uint64_t v4 = sub_100460CB0();
        uint64_t v6 = v5;
      }
      else
      {
        uint64_t v4 = 0;
        uint64_t v6 = 0;
      }
      id v7 = sub_100128858(v4, v6, 0, 1);
      swift_bridgeObjectRelease();
      return v7;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t MPModelTVSeason.title.getter()
{
  v10[0] = 0;
  v10[1] = 0;
  id v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  *(void *)(v2 + 24) = v10;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100128DF0;
  *(void *)(v3 + 24) = v2;
  v9[4] = sub_10000B090;
  v9[5] = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  long long v9[2] = sub_10000B0B8;
  v9[3] = &unk_10052F0A8;
  uint64_t v4 = _Block_copy(v9);
  id v5 = v0;
  swift_retain();
  swift_release();
  [v1 performWithoutEnforcement:v4];
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = v10[0];
    swift_release();
    return v8;
  }
  return result;
}

uint64_t sub_100127EF8(void *a1, uint64_t *a2)
{
  uint64_t v4 = sub_10045C2A0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_100460C60();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v11 = (char *)v23 - v10;
  uint64_t v12 = sub_100460C40();
  __chkstk_darwin(v12 - 8);
  if ((uint64_t)[a1 number] >= 1)
  {
    sub_100460C30();
    v25._uint64_t countAndFlagsBits = 0x206E6F73616553;
    v25._object = (void *)0xE700000000000000;
    sub_100460C20(v25);
    v23[1] = [a1 number];
    sub_100460C00();
    v26._uint64_t countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    sub_100460C20(v26);
    sub_100460C50();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v13 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v14 = sub_100460D20();
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    *a2 = v14;
    a2[1] = v16;
    return swift_bridgeObjectRelease();
  }
  id v18 = [a1 show];
  id v19 = v18;
  if (!v18) {
    goto LABEL_9;
  }
  id v20 = [v18 title];

  if (!v20)
  {
    id v19 = 0;
LABEL_9:
    uint64_t v22 = 0;
    goto LABEL_10;
  }
  id v19 = (void *)sub_100460CB0();
  uint64_t v22 = v21;

LABEL_10:
  *a2 = (uint64_t)v19;
  a2[1] = v22;

  return swift_bridgeObjectRelease();
}

uint64_t sub_100128240(uint64_t a1)
{
  uint64_t v2 = a1 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  uint64_t v6 = (char *)_swiftEmptyArrayStorage;
  uint64_t v7 = (char *)&_swiftEmptyArrayStorage[4];
LABEL_3:
  unint64_t v9 = *(void *)(a1 + 16);
  if (v5 != v9)
  {
    if (v5 >= v9)
    {
LABEL_34:
      __break(1u);
    }
    else
    {
      while (1)
      {
        uint64_t v10 = *(void *)(v2 + 8 * v5);
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRelease();
        if (v10)
        {
          unint64_t v8 = *(void *)(v10 + 16);
          if (v8) {
            break;
          }
        }
        ++v5;
        unint64_t v11 = *(void *)(a1 + 16);
        if (v5 == v11) {
          goto LABEL_30;
        }
        if (v5 >= v11) {
          goto LABEL_34;
        }
      }
      unint64_t v12 = 0;
      ++v5;
      while (v12 < v8)
      {
        uint64_t v13 = v10 + 16 * v12;
        uint64_t v14 = *(void *)(v13 + 40);
        uint64_t v30 = *(void *)(v13 + 32);
        if (v4)
        {
          uint64_t result = swift_bridgeObjectRetain();
          uint64_t v15 = v6;
          BOOL v16 = __OFSUB__(v4--, 1);
          if (v16) {
            goto LABEL_36;
          }
        }
        else
        {
          unint64_t v17 = *((void *)v6 + 3);
          if ((uint64_t)((v17 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_37;
          }
          int64_t v18 = v17 & 0xFFFFFFFFFFFFFFFELL;
          if (v18 <= 1) {
            uint64_t v19 = 1;
          }
          else {
            uint64_t v19 = v18;
          }
          sub_100005BFC((uint64_t *)&unk_100575D00);
          uint64_t v15 = (char *)swift_allocObject();
          int64_t v20 = j__malloc_size(v15);
          uint64_t v21 = v20 - 32;
          if (v20 < 32) {
            uint64_t v21 = v20 - 17;
          }
          uint64_t v22 = v21 >> 4;
          *((void *)v15 + 2) = v19;
          *((void *)v15 + 3) = 2 * (v21 >> 4);
          id v23 = v15 + 32;
          uint64_t v24 = *((void *)v6 + 3) >> 1;
          uint64_t v7 = &v15[16 * v24 + 32];
          uint64_t v25 = (v22 & 0x7FFFFFFFFFFFFFFFLL) - v24;
          if (*((void *)v6 + 2))
          {
            Swift::String v26 = v6 + 32;
            if (v15 != v6 || v23 >= &v26[16 * v24]) {
              memmove(v23, v26, 16 * v24);
            }
            swift_bridgeObjectRetain();
            *((void *)v6 + 2) = 0;
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          uint64_t result = swift_release();
          BOOL v16 = __OFSUB__(v25, 1);
          uint64_t v4 = v25 - 1;
          if (v16) {
            goto LABEL_36;
          }
        }
        ++v12;
        *(void *)uint64_t v7 = v30;
        *((void *)v7 + 1) = v14;
        v7 += 16;
        uint64_t v6 = v15;
        unint64_t v8 = *(void *)(v10 + 16);
        if (v12 == v8) {
          goto LABEL_3;
        }
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
LABEL_30:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v27 = *((void *)v6 + 3);
  if (v27 < 2) {
    return (uint64_t)v6;
  }
  unint64_t v28 = v27 >> 1;
  BOOL v16 = __OFSUB__(v28, v4);
  uint64_t v29 = v28 - v4;
  if (!v16)
  {
    *((void *)v6 + 2) = v29;
    return (uint64_t)v6;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_100128458()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100128490(void *a1, uint64_t a2)
{
  sub_100121AB4(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_100128498(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001284A8()
{
  return swift_release();
}

uint64_t sub_1001284B0()
{
  return swift_deallocObject();
}

uint64_t sub_1001284E8()
{
  swift_release();

  return swift_deallocObject();
}

Swift::Int sub_100128528(void *a1, char a2)
{
  return sub_100121DF4(a1, a2 & 1, *(void *)(v2 + 16));
}

uint64_t sub_100128534()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10012856C(uint64_t a1, uint64_t a2)
{
  return sub_100121F94(a1, a2, *(void (**)(unsigned char *, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 16));
}

uint64_t sub_100128578(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v2 = 0;
  uint64_t v3 = result + 40;
  uint64_t v4 = -(uint64_t)v1;
  unint64_t v5 = _swiftEmptyArrayStorage;
  uint64_t v17 = result + 40;
  unint64_t v18 = *(void *)(result + 16);
  do
  {
    uint64_t v19 = v5;
    if (v2 <= v1) {
      unint64_t v6 = v1;
    }
    else {
      unint64_t v6 = v2;
    }
    uint64_t v7 = -(uint64_t)v6;
    for (unint64_t i = (uint64_t *)(v3 + 16 * v2++); ; i += 2)
    {
      if (v7 + v2 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v10 = *(i - 1);
      uint64_t v9 = *i;
      swift_bridgeObjectRetain();
      unint64_t v11 = (__CFString *)sub_100460C70();
      unint64_t v12 = (__CFString *)sub_100460C70();
      int v13 = UTTypeConformsTo(v11, v12);

      if (v13) {
        break;
      }
      uint64_t result = swift_bridgeObjectRelease();
      ++v2;
      if (v4 + v2 == 1) {
        return (uint64_t)v19;
      }
    }
    unint64_t v5 = v19;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1000A01EC(0, v19[2] + 1, 1);
      unint64_t v5 = v19;
    }
    unint64_t v15 = v5[2];
    unint64_t v14 = v5[3];
    if (v15 >= v14 >> 1)
    {
      uint64_t result = (uint64_t)sub_1000A01EC((char *)(v14 > 1), v15 + 1, 1);
      unint64_t v5 = v19;
    }
    _OWORD v5[2] = v15 + 1;
    BOOL v16 = &v5[2 * v15];
    v16[4] = v10;
    v16[5] = v9;
    uint64_t v3 = v17;
    unint64_t v1 = v18;
  }
  while (v4 + v2);
  return (uint64_t)v5;
}

void *sub_100128704(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v5 = swift_bridgeObjectRetain() + 40;
  unint64_t v6 = _swiftEmptyArrayStorage;
  do
  {
    swift_bridgeObjectRetain();
    sub_100122498(a2, &v11);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    swift_bridgeObjectRelease();
    uint64_t v7 = v11;
    if (v11)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v6 = sub_100051690(0, v6[2] + 1, 1, v6);
      }
      unint64_t v9 = v6[2];
      unint64_t v8 = v6[3];
      if (v9 >= v8 >> 1) {
        unint64_t v6 = sub_100051690((void *)(v8 > 1), v9 + 1, 1, v6);
      }
      _OWORD v6[2] = v9 + 1;
      v6[v9 + 4] = v7;
    }
    v5 += 16;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v6;
}

id sub_100128858(uint64_t a1, uint64_t a2, id a3, char a4)
{
  if (a4)
  {
    if (![self isMainThread])
    {
      a3 = 0;
      if (a2) {
        goto LABEL_5;
      }
      goto LABEL_7;
    }
    id v6 = [self sharedApplication];
    a3 = [v6 userInterfaceLayoutDirection];
  }
  if (a2)
  {
LABEL_5:
    swift_bridgeObjectRetain();
    NSString v7 = sub_100460C70();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  NSString v7 = 0;
LABEL_8:
  id v8 = [objc_allocWithZone((Class)MusicMonogramArtworkToken) initWithFullName:v7 rightToLeft:a3 == (id)1];

  if (v8)
  {
    unint64_t v9 = self;
    id v10 = v8;
    id v11 = [v9 sharedMonogramArtworkDataSource];
    id v12 = objc_allocWithZone((Class)MPArtworkCatalog);
    id v13 = v10;
    id v8 = [v12 initWithToken:v13 dataSource:v11];
  }
  return v8;
}

uint64_t sub_1001289CC()
{
  return swift_deallocObject();
}

void sub_1001289DC(void *a1)
{
  sub_1001239D4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1001289E4()
{
  return swift_deallocObject();
}

uint64_t sub_1001289F4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t _sSo13MPModelObjectC9MusicCoreE20MediaKitPlayableKindO8rawValueAESgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_100524420;
  v6._object = a2;
  unint64_t v4 = sub_100462490(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xA) {
    return 10;
  }
  else {
    return v4;
  }
}

uint64_t _sSo13MPModelObjectC9MusicCoreE14FavoriteStatusO8rawValueAESgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_100524530;
  v6._object = a2;
  unint64_t v4 = sub_100462490(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

id sub_100128AB4@<X0>(id *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  id result = [*a1 propertySetByCombiningWithPropertySet:*a2];
  *a3 = result;
  return result;
}

uint64_t type metadata accessor for SnapshotIdentifier.Lazy()
{
  return sub_100041DA8();
}

uint64_t type metadata accessor for SnapshotIdentifier()
{
  return sub_100041DA8();
}

uint64_t sub_100128B2C()
{
  return swift_deallocObject();
}

uint64_t sub_100128B64(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  return sub_1001258FC(a1, a2, a3, *(void **)(v3 + 40), *(void (**)(uint64_t, char *, unsigned char *))(v3 + 48), *(void *)(v3 + 56), *(unsigned char **)(v3 + 64));
}

uint64_t sub_100128B98()
{
  return swift_deallocObject();
}

uint64_t sub_100128BA8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100128BD0()
{
  return swift_deallocObject();
}

uint64_t sub_100128C08(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  return sub_100125D2C(a1, a2, a3, *(void *)(v3 + 40), *(void **)(v3 + 48), *(void (**)(uint64_t, char *, unsigned char *))(v3 + 56), *(void *)(v3 + 64), *(unsigned char **)(v3 + 72));
}

uint64_t sub_100128C40()
{
  return swift_deallocObject();
}

uint64_t sub_100128C50()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100128C78(uint64_t a1, uint64_t a2)
{
  return sub_100125FA0(a1, a2);
}

uint64_t sub_100128C84(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  return sub_100126204(a1, a2, a3, *(void **)(v3 + 40), *(void (**)(uint64_t, void *, unsigned char *))(v3 + 48), *(void *)(v3 + 56), *(unsigned char **)(v3 + 64));
}

uint64_t sub_100128CB8()
{
  return swift_deallocObject();
}

uint64_t sub_100128CC8()
{
  return swift_deallocObject();
}

uint64_t sub_100128D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001265D8(a1, a2, a3, *(void *)(v3 + 40), *(void **)(v3 + 48), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_100128D10()
{
  return swift_deallocObject();
}

uint64_t sub_100128D20()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_100128D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100126A30(a1, a2, a3, *(void *)(v3 + 24), *(void **)(v3 + 32), *(void *)(v3 + 16));
}

uint64_t sub_100128D54()
{
  return swift_deallocObject();
}

uint64_t sub_100128D64()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100128D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100126D28(a1, a2, a3, *(void *)(v3 + 32), *(void **)(v3 + 40), *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_100128D98()
{
  return swift_deallocObject();
}

uint64_t sub_100128DA8()
{
  return swift_deallocObject();
}

uint64_t sub_100128DB8()
{
  return swift_deallocObject();
}

uint64_t sub_100128DF0()
{
  return sub_100127EF8(*(void **)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_100128DF8()
{
  return swift_deallocObject();
}

unint64_t sub_100128E0C()
{
  unint64_t result = qword_100575A80;
  if (!qword_100575A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575A80);
  }
  return result;
}

unint64_t sub_100128E64()
{
  unint64_t result = qword_100575A88;
  if (!qword_100575A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575A88);
  }
  return result;
}

unint64_t sub_100128EBC()
{
  unint64_t result = qword_100575A90;
  if (!qword_100575A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575A90);
  }
  return result;
}

unint64_t sub_100128F14()
{
  unint64_t result = qword_100575A98;
  if (!qword_100575A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575A98);
  }
  return result;
}

unint64_t sub_100128F6C()
{
  unint64_t result = qword_100575AA0;
  if (!qword_100575AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575AA0);
  }
  return result;
}

unint64_t sub_100128FC4()
{
  unint64_t result = qword_100575AA8[0];
  if (!qword_100575AA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100575AA8);
  }
  return result;
}

uint64_t sub_100129018()
{
  return swift_getWitnessTable();
}

ValueMetadata *type metadata accessor for MPIdentifierSet.Purpose()
{
  return &type metadata for MPIdentifierSet.Purpose;
}

ValueMetadata *type metadata accessor for MPIdentifierSet.Purpose.Options()
{
  return &type metadata for MPIdentifierSet.Purpose.Options;
}

uint64_t _s20MediaKitPlayableKindOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s20MediaKitPlayableKindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001291B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MPModelObject.MediaKitPlayableKind()
{
  return &type metadata for MPModelObject.MediaKitPlayableKind;
}

unsigned char *_s14FavoriteStatusOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001292B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MPModelObject.FavoriteStatus()
{
  return &type metadata for MPModelObject.FavoriteStatus;
}

uint64_t sub_1001292EC()
{
  uint64_t result = type metadata accessor for SnapshotIdentifier.Lazy();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_100129380(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    int v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned int v6 = *a2;
      *(void *)a1 = *a2;
      BOOL v7 = v6;
    }
    else
    {
      type metadata accessor for SnapshotIdentifier.Lazy();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v9 = sub_10045C490();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = *(int *)(sub_100005BFC(&qword_100575A48) + 48);
        id v11 = *(char **)((char *)a2 + v10);
        *(void *)&a1[v10] = v11;
      }
      else
      {
        id v11 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v11;
      }
      id v12 = v11;
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1001294EC(void **a1)
{
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for SnapshotIdentifier.Lazy();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v2 = sub_10045C490();
      (*(void (**)(void **, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
      a1 = (void **)((char *)a1 + *(int *)(sub_100005BFC(&qword_100575A48) + 48));
    }
    else
    {
      ++a1;
    }
  }
  int v3 = *a1;
}

void *sub_1001295A4(void *a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unsigned int v4 = *(void **)a2;
    *a1 = *(void *)a2;
    id v5 = v4;
  }
  else
  {
    type metadata accessor for SnapshotIdentifier.Lazy();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10045C490();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = *(int *)(sub_100005BFC(&qword_100575A48) + 48);
      int v8 = *(void **)(a2 + v7);
      *(void *)((char *)a1 + v7) = v8;
    }
    else
    {
      int v8 = *(void **)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v8;
    }
    id v9 = v8;
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_1001296C0(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    (*(void (**)(void **, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      id v5 = *a2;
      *a1 = *a2;
      id v6 = v5;
    }
    else
    {
      type metadata accessor for SnapshotIdentifier.Lazy();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v7 = sub_10045C490();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = *(int *)(sub_100005BFC(&qword_100575A48) + 48);
        id v9 = *(void **)((char *)a2 + v8);
        *(void **)((char *)a1 + v8) = v9;
        id v10 = v9;
      }
      else
      {
        *a1 = *a2;
        id v11 = a2[1];
        a1[1] = v11;
        id v12 = v11;
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_100129814(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for SnapshotIdentifier.Lazy();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_10045C490();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = sub_100005BFC(&qword_100575A48);
      *(void *)&a1[*(int *)(v8 + 48)] = *(void *)&a2[*(int *)(v8 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_100129938(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for SnapshotIdentifier.Lazy();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v7 = sub_10045C490();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = sub_100005BFC(&qword_100575A48);
        *(void *)&a1[*(int *)(v8 + 48)] = *(void *)&a2[*(int *)(v8 + 48)];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100129AB0()
{
  v2[4] = &unk_10046D688;
  uint64_t result = sub_10045C490();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_100129B5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10045C490();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = *(int *)(sub_100005BFC(&qword_100575A48) + 48);
      uint64_t v8 = *(void **)((char *)a2 + v7);
      *(uint64_t *)((char *)a1 + v7) = (uint64_t)v8;
    }
    else
    {
      uint64_t v8 = (void *)a2[1];
      *a1 = *a2;
      a1[1] = (uint64_t)v8;
    }
    id v9 = v8;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_100129C78(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_10045C490();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
    int v3 = (void **)(a1 + *(int *)(sub_100005BFC(&qword_100575A48) + 48));
  }
  else
  {
    int v3 = (void **)(a1 + 8);
  }
  unsigned int v4 = *v3;
}

void *sub_100129D0C(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_10045C490();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = *(int *)(sub_100005BFC(&qword_100575A48) + 48);
    uint64_t v6 = *(void **)((char *)a2 + v5);
    *(void *)((char *)a1 + v5) = v6;
  }
  else
  {
    uint64_t v6 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = v6;
  }
  id v7 = v6;
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100129DD8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    (*(void (**)(void *, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = sub_10045C490();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      uint64_t v6 = *(int *)(sub_100005BFC(&qword_100575A48) + 48);
      id v7 = *(void **)((char *)a2 + v6);
      *(void *)((char *)a1 + v6) = v7;
      id v8 = v7;
    }
    else
    {
      *a1 = *a2;
      id v9 = (void *)a2[1];
      a1[1] = v9;
      id v10 = v9;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_100129EE4(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_10045C490();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = sub_100005BFC(&qword_100575A48);
    *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_100129FB4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_10045C490();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = sub_100005BFC(&qword_100575A48);
      *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
  }
  return a1;
}

uint64_t sub_10012A0D8()
{
  return swift_deallocObject();
}

id sub_10012A0E8(void *a1)
{
  return [a1 setPersistentID:*(void *)(v1 + 16)];
}

uint64_t sub_10012A0F8()
{
  return swift_deallocObject();
}

uint64_t sub_10012A108()
{
  return swift_deallocObject();
}

uint64_t sub_10012A140()
{
  return sub_1001232F8(*(char **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10012A14C()
{
  return swift_deallocObject();
}

unint64_t sub_10012A15C()
{
  unint64_t result = qword_100575C20;
  if (!qword_100575C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575C20);
  }
  return result;
}

uint64_t sub_10012A1B0()
{
  return swift_deallocObject();
}

uint64_t sub_10012A1E8()
{
  return sub_1001232F8(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10012A1F0()
{
  return swift_deallocObject();
}

void *_s12LoadingErrorOwCP(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  swift_errorRetain();
  *a1 = v3;
  return a1;
}

uint64_t _s12LoadingErrorOwxx()
{
  return swift_errorRelease();
}

void *_s12LoadingErrorOwca(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  swift_errorRetain();
  *a1 = v3;
  swift_errorRelease();
  return a1;
}

void *_s13InsertCommandV8LocationOwtk(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *_s12LoadingErrorOwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_errorRelease();
  return a1;
}

uint64_t _s12LoadingErrorOwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t _s12LoadingErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void *sub_10012A35C(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *_s12LoadingErrorOMa()
{
  return &_s12LoadingErrorON;
}

void *Playlist.maximumBatchLimit.unsafeMutableAddressor()
{
  return &static Playlist.maximumBatchLimit;
}

BOOL sub_10012A424(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 8))();
  if (v2) {
    uint64_t v3 = (void *)v2;
  }
  else {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  uint64_t v4 = sub_10012DE4C((uint64_t)v3);
  swift_bridgeObjectRelease();
  sub_100005BFC((uint64_t *)&unk_100575CC0);
  uint64_t v5 = sub_100460120();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1004668E0;
  unint64_t v10 = v9 + v8;
  id v11 = *(void (**)(unint64_t, void, uint64_t))(v6 + 104);
  v11(v10, enum case for AudioVariant.dolbyAtmos(_:), v5);
  v11(v10 + v7, enum case for AudioVariant.dolbyAudio(_:), v5);
  uint64_t v12 = sub_10012C6C4(v9, v4);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v13 = *(void *)(v12 + 16);
  swift_release();
  return v13 != 0;
}

uint64_t sub_10012A5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005BFC(&qword_100575CB0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = &v7[*(int *)(v5 + 56)];
  uint64_t v9 = sub_100460120();
  uint64_t v10 = *(void *)(v9 - 8);
  id v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11(v7, a2, v9);
  v11(v8, a1, v9);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  int v13 = v12(v7, v9);
  int v14 = enum case for AudioVariant.dolbyAtmos(_:);
  if (v13 == enum case for AudioVariant.dolbyAtmos(_:)) {
    goto LABEL_20;
  }
  int v15 = enum case for AudioVariant.dolbyAudio(_:);
  if (v13 == enum case for AudioVariant.dolbyAudio(_:))
  {
    if (v12(v8, v9) == v14) {
      return 1;
    }
LABEL_20:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return 0;
  }
  if (v13 == enum case for AudioVariant.lossless(_:))
  {
    int v16 = v12(v8, v9);
    if (v16 == v14 || v16 == v15 || v16 == enum case for AudioVariant.highResolutionLossless(_:)) {
      return 1;
    }
    goto LABEL_20;
  }
  if (v13 == enum case for AudioVariant.highResolutionLossless(_:))
  {
    int v19 = v12(v8, v9);
    if (v19 == v14 || v19 == v15) {
      return 1;
    }
    goto LABEL_20;
  }
  uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v8, v9);
  v22(v7, v9);
  return 1;
}

BOOL MusicLibrarySectionedResponse.isEmpty.getter()
{
  return sub_10045FC30() == 0;
}

uint64_t AudioVariant.supportsBadge.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100460120();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  BOOL v9 = v6 == enum case for AudioVariant.dolbyAtmos(_:)
    || v6 == enum case for AudioVariant.dolbyAudio(_:)
    || v6 == enum case for AudioVariant.lossless(_:)
    || v6 == enum case for AudioVariant.highResolutionLossless(_:);
  uint64_t v10 = v9;
  if (!v9) {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v10;
}

unint64_t AudioVariant.symbolString.getter()
{
  uint64_t v1 = v0;
  unint64_t v2 = 0xD000000000000018;
  uint64_t v3 = sub_100460120();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  int v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
  int v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 != enum case for AudioVariant.dolbyAtmos(_:) && v7 != enum case for AudioVariant.dolbyAudio(_:))
  {
    if (v7 == enum case for AudioVariant.lossless(_:) || v7 == enum case for AudioVariant.highResolutionLossless(_:))
    {
      return 0xD000000000000015;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return 0;
    }
  }
  return v2;
}

uint64_t AudioVariant.accessibilityLabel.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100460120();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for AudioVariant.dolbyAtmos(_:))
  {
    if (qword_100571048 != -1) {
      swift_once();
    }
    int v7 = &static AccessibilityString.dolbyAtmosLabel;
  }
  else if (v6 == enum case for AudioVariant.dolbyAudio(_:))
  {
    if (qword_100571050 != -1) {
      swift_once();
    }
    int v7 = &static AccessibilityString.dolbyAudioLabel;
  }
  else if (v6 == enum case for AudioVariant.lossless(_:))
  {
    if (qword_100571060 != -1) {
      swift_once();
    }
    int v7 = &static AccessibilityString.losslessLabel;
  }
  else
  {
    if (v6 != enum case for AudioVariant.highResolutionLossless(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 0;
    }
    if (qword_100571058 != -1) {
      swift_once();
    }
    int v7 = &static AccessibilityString.hiResLosslessLabel;
  }
  uint64_t v8 = *v7;
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t AudioVariant.badgeText.getter()
{
  uint64_t v1 = sub_10045C2A0();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100460C60();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  int v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v17[-v7];
  uint64_t v9 = sub_100460120();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v17[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 16))(v12, v0, v9);
  int v13 = (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 88))(v12, v9);
  if (v13 == enum case for AudioVariant.lossless(_:) || v13 == enum case for AudioVariant.highResolutionLossless(_:))
  {
    sub_100460BF0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 16))(v6, v8, v2);
    if (qword_100570720 != -1) {
      swift_once();
    }
    id v14 = (id)qword_100586110;
    sub_10045C250();
    uint64_t v15 = sub_100460D20();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v8, v2);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    return 0;
  }
  return v15;
}

uint64_t sub_10012B044(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005BFC(&qword_100575CB0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = &v7[*(int *)(v5 + 56)];
  uint64_t v9 = sub_100460120();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11(v7, a1, v9);
  v11(v8, a2, v9);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  int v13 = v12(v7, v9);
  int v14 = enum case for AudioVariant.dolbyAtmos(_:);
  if (v13 == enum case for AudioVariant.dolbyAtmos(_:)) {
    goto LABEL_20;
  }
  int v15 = enum case for AudioVariant.dolbyAudio(_:);
  if (v13 == enum case for AudioVariant.dolbyAudio(_:))
  {
    if (v12(v8, v9) == v14) {
      return 1;
    }
LABEL_20:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return 0;
  }
  if (v13 == enum case for AudioVariant.lossless(_:))
  {
    int v16 = v12(v8, v9);
    if (v16 == v14 || v16 == v15 || v16 == enum case for AudioVariant.highResolutionLossless(_:)) {
      return 1;
    }
    goto LABEL_20;
  }
  if (v13 == enum case for AudioVariant.highResolutionLossless(_:))
  {
    int v19 = v12(v8, v9);
    if (v19 == v14 || v19 == v15) {
      return 1;
    }
    goto LABEL_20;
  }
  uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v8, v9);
  v22(v7, v9);
  return 1;
}

uint64_t sub_10012B278(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005BFC(&qword_100575CB0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = &v7[*(int *)(v5 + 56)];
  uint64_t v9 = sub_100460120();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11(v7, a2, v9);
  v11(v8, a1, v9);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  int v13 = v12(v7, v9);
  int v14 = enum case for AudioVariant.dolbyAtmos(_:);
  if (v13 == enum case for AudioVariant.dolbyAtmos(_:)) {
    goto LABEL_20;
  }
  int v15 = enum case for AudioVariant.dolbyAudio(_:);
  if (v13 == enum case for AudioVariant.dolbyAudio(_:))
  {
    if (v12(v8, v9) == v14) {
      return 0;
    }
LABEL_20:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return 1;
  }
  if (v13 == enum case for AudioVariant.lossless(_:))
  {
    int v16 = v12(v8, v9);
    if (v16 == v14 || v16 == v15 || v16 == enum case for AudioVariant.highResolutionLossless(_:)) {
      return 0;
    }
    goto LABEL_20;
  }
  if (v13 == enum case for AudioVariant.highResolutionLossless(_:))
  {
    int v19 = v12(v8, v9);
    if (v19 == v14 || v19 == v15) {
      return 0;
    }
    goto LABEL_20;
  }
  uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v8, v9);
  v22(v7, v9);
  return 0;
}

uint64_t Array<A>.removingEquivalents()()
{
  uint64_t v0 = sub_100005BFC(&qword_100575C90);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100460120();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_10012DE4C(v7);
  swift_bridgeObjectRelease();
  uint64_t v16 = v8;
  uint64_t v9 = *(void (**)(char *, void, uint64_t))(v4 + 104);
  v9(v6, enum case for AudioVariant.highResolutionLossless(_:), v3);
  swift_bridgeObjectRetain();
  char v10 = sub_1001004D8((uint64_t)v6, v8);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v3);
  if (v10)
  {
    v9(v6, enum case for AudioVariant.lossless(_:), v3);
    sub_10012CBCC((uint64_t)v6, (uint64_t)v2);
    v11(v6, v3);
    sub_10012DFE8((uint64_t)v2);
  }
  uint64_t v12 = v16;
  v9(v6, enum case for AudioVariant.dolbyAtmos(_:), v3);
  swift_bridgeObjectRetain();
  char v13 = sub_1001004D8((uint64_t)v6, v12);
  swift_bridgeObjectRelease();
  v11(v6, v3);
  if (v13)
  {
    v9(v6, enum case for AudioVariant.dolbyAudio(_:), v3);
    sub_10012CBCC((uint64_t)v6, (uint64_t)v2);
    v11(v6, v3);
    sub_10012DFE8((uint64_t)v2);
  }
  return v16;
}

uint64_t MusicLibrary.DownloadStatus.DownloadPauseReasons.init(mediaPlayerReason:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10045FEA0();
  uint64_t v10 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 4) != 0)
  {
    sub_10045FE90();
LABEL_10:
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v6, v4);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v4);
  }
  if ((a1 & 2) != 0)
  {
    sub_10045FE80();
    goto LABEL_10;
  }
  if (a1)
  {
    sub_10045FE70();
    goto LABEL_10;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v7(a2, 1, 1, v4);
}

uint64_t MusicLibrary.DownloadStatus.DownloadPauseReasons.alert.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10045C2A0();
  __chkstk_darwin(v4 - 8);
  uint64_t v63 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100460C60();
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v65 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v60 - v10;
  uint64_t v12 = sub_10045FEA0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v60 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v60 - v17, v2, v12);
  sub_10045FE90();
  sub_10012E158(&qword_100575C98, (void (*)(uint64_t))&type metadata accessor for MusicLibrary.DownloadStatus.DownloadPauseReasons);
  char v19 = sub_100460BD0();
  int64_t v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v16, v12);
  if (v19)
  {
    v20(v18, v12);
    uint64_t result = (uint64_t)sub_1001191DC(0, 0, v66);
    uint64_t v22 = v66[0];
    uint64_t v23 = v66[1];
    uint64_t v24 = v66[2];
    uint64_t v25 = v66[3];
    uint64_t v26 = v67;
    uint64_t v28 = v68;
    uint64_t v27 = v69;
  }
  else
  {
    sub_10045FE80();
    char v29 = sub_100460BD0();
    v20(v16, v12);
    if (v29)
    {
      v20(v18, v12);
      sub_100460BF0();
      uint64_t v30 = v64;
      id v31 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
      v31(v9, v11, v65);
      if (qword_100570720 != -1) {
        swift_once();
      }
      id v32 = (id)qword_100586110;
      sub_10045C250();
      uint64_t v33 = sub_100460D20();
      uint64_t v61 = v34;
      uint64_t v62 = v33;
      uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
      uint64_t v36 = v65;
      v35(v11, v65);
      sub_100460BF0();
      v31(v9, v11, v36);
      id v37 = (id)qword_100586110;
      sub_10045C250();
      uint64_t v64 = sub_100460D20();
      uint64_t v25 = v38;
      uint64_t v60 = (uint64_t (*)(char *, uint64_t))v35;
      v35(v11, v36);
      sub_100005BFC(&qword_10057A590);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1004668E0;
      uint64_t v39 = v31;
      if (qword_100570FF0 != -1) {
        swift_once();
      }
      uint64_t v41 = static String.okButtonTitle;
      uint64_t v40 = qword_1005878D0;
      *(void *)(v28 + 32) = 0x6C65636E6163;
      *(void *)(v28 + 40) = 0xE600000000000000;
      *(void *)(v28 + 48) = v41;
      *(void *)(v28 + 56) = v40;
      *(unsigned char *)(v28 + 64) = 0;
      *(void *)(v28 + 72) = 0;
      *(void *)(v28 + 80) = 0;
      swift_bridgeObjectRetain();
      sub_100460BF0();
      uint64_t v42 = v65;
      v39(v9, v11, v65);
      id v43 = (id)qword_100586110;
      sub_10045C250();
      uint64_t v44 = sub_100460D20();
      uint64_t v45 = v42;
      uint64_t v47 = v46;
      uint64_t result = v60(v11, v45);
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      *(void *)(v28 + 88) = 0x73676E6974746573;
      *(void *)(v28 + 96) = 0xE800000000000000;
      *(void *)(v28 + 104) = v44;
      *(void *)(v28 + 112) = v47;
      *(unsigned char *)(v28 + 120) = 2;
      *(void *)(v28 + 128) = &unk_100575CA0;
      *(void *)(v28 + 136) = 0;
      uint64_t v23 = v61;
      uint64_t v22 = v62;
      uint64_t v24 = v64;
    }
    else
    {
      sub_10045FE70();
      char v48 = sub_100460BD0();
      v20(v16, v12);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v20)(v18, v12);
      if (v48)
      {
        sub_100460BF0();
        uint64_t v50 = v64;
        uint64_t v49 = v65;
        id v51 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
        v51(v9, v11, v65);
        if (qword_100570720 != -1) {
          swift_once();
        }
        id v52 = (id)qword_100586110;
        sub_10045C250();
        uint64_t v53 = sub_100460D20();
        uint64_t v61 = v54;
        uint64_t v62 = v53;
        uint64_t v55 = *(void (**)(char *, uint64_t))(v50 + 8);
        v55(v11, v49);
        sub_100460BF0();
        v51(v9, v11, v49);
        id v56 = (id)qword_100586110;
        sub_10045C250();
        uint64_t v24 = sub_100460D20();
        uint64_t v25 = v57;
        v55(v11, v49);
        sub_100005BFC(&qword_10057A590);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_100466900;
        if (qword_100570FF0 != -1) {
          swift_once();
        }
        uint64_t v59 = static String.okButtonTitle;
        uint64_t v58 = qword_1005878D0;
        *(void *)(v28 + 32) = 0x6C65636E6163;
        *(void *)(v28 + 40) = 0xE600000000000000;
        *(void *)(v28 + 48) = v59;
        *(void *)(v28 + 56) = v58;
        *(unsigned char *)(v28 + 64) = 0;
        *(void *)(v28 + 72) = 0;
        *(void *)(v28 + 80) = 0;
        uint64_t result = swift_bridgeObjectRetain();
        uint64_t v26 = 0;
        uint64_t v27 = 0;
        uint64_t v23 = v61;
        uint64_t v22 = v62;
      }
      else
      {
        uint64_t v22 = 0;
        uint64_t v23 = 0;
        uint64_t v24 = 0;
        uint64_t v25 = 0;
        uint64_t v26 = 0;
        uint64_t v28 = 0;
        uint64_t v27 = 0;
      }
    }
  }
  *a1 = v22;
  a1[1] = v23;
  a1[2] = v24;
  a1[3] = v25;
  a1[4] = v26;
  a1[5] = v28;
  a1[6] = v27;
  return result;
}

uint64_t Track.musicItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1004603B0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v24 - v8, v1, v3);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v9, v3);
  if (v11 == enum case for Track.song(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    uint64_t v12 = sub_100460280();
    uint64_t v13 = v12;
    uint64_t v14 = &protocol witness table for Song;
LABEL_5:
    *(void *)(a1 + 24) = v12;
    *(void *)(a1 + 32) = v14;
    uint64_t v15 = sub_10002A270((uint64_t *)a1);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v15, v9, v13);
  }
  if (v11 == enum case for Track.musicVideo(_:))
  {
    (*(void (**)(char *, uint64_t))(v4 + 96))(v9, v3);
    uint64_t v12 = sub_10045FCF0();
    uint64_t v13 = v12;
    uint64_t v14 = &protocol witness table for MusicVideo;
    goto LABEL_5;
  }
  if (qword_100570908 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_10045D310();
  sub_100009688(v17, (uint64_t)static Logger.musicKit);
  v10(v7, v1, v3);
  unint64_t v18 = sub_10045D2F0();
  os_log_type_t v19 = sub_100461760();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = v24;
    *(_DWORD *)uint64_t v20 = 136315138;
    sub_10012E158(&qword_100575CA8, (void (*)(uint64_t))&type metadata accessor for Track);
    uint64_t v21 = sub_100462660();
    *(void *)(v20 + 4) = sub_10001FCAC(v21, v22, &v25);
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v4 + 8);
    v23(v7, v3);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unsupported Track type=%s", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v23 = *(void (**)(char *, uint64_t))(v4 + 8);
    v23(v7, v3);
  }

  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return ((uint64_t (*)(char *, uint64_t))v23)(v9, v3);
}

uint64_t Logger.musicKit.unsafeMutableAddressor()
{
  if (qword_100570908 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10045D310();

  return sub_100009688(v0, (uint64_t)static Logger.musicKit);
}

NSString sub_10012C4BC()
{
  NSString result = sub_100460C70();
  static MusicLibrary.downloadingStateDidChange = (uint64_t)result;
  return result;
}

uint64_t *MusicLibrary.downloadingStateDidChange.unsafeMutableAddressor()
{
  if (qword_100570900 != -1) {
    swift_once();
  }
  return &static MusicLibrary.downloadingStateDidChange;
}

id static MusicLibrary.downloadingStateDidChange.getter()
{
  if (qword_100570900 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static MusicLibrary.downloadingStateDidChange;

  return v0;
}

uint64_t static Playlist.maximumBatchLimit.getter()
{
  return 10000;
}

uint64_t sub_10012C5A4()
{
  uint64_t v0 = sub_10045D310();
  sub_1000096D0(v0, static Logger.musicKit);
  sub_100009688(v0, (uint64_t)static Logger.musicKit);
  return sub_10045D300();
}

uint64_t static Logger.musicKit.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100570908 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10045D310();
  uint64_t v3 = sub_100009688(v2, (uint64_t)static Logger.musicKit);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_10012C6C4(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_10012C84C((unint64_t *)((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_10012C84C((unint64_t *)v8, v5, v3, a2);
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

uint64_t sub_10012C84C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v37 = a1;
  uint64_t v9 = sub_100460120();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v43 = a4;
  uint64_t v40 = v16;
  if (v16)
  {
    uint64_t v34 = a2;
    uint64_t v35 = v5;
    uint64_t v42 = a4 + 56;
    unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v17 = v10 + 16;
    uint64_t v45 = v18;
    uint64_t v39 = a3 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
    uint64_t v44 = *(void *)(v17 + 56);
    os_log_type_t v19 = (void (**)(char *, uint64_t))(v17 - 8);
    uint64_t v33 = a3;
    swift_bridgeObjectRetain();
    uint64_t v36 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = a4;
    while (1)
    {
      uint64_t v41 = v20;
      v45(v15, v39 + v44 * v20, v9);
      sub_10012E158(&qword_1005757A0, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
      uint64_t v23 = sub_100460B20();
      uint64_t v24 = -1 << *(unsigned char *)(v21 + 32);
      unint64_t v25 = v23 & ~v24;
      if ((*(void *)(v42 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25))
      {
        uint64_t v38 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        uint64_t v26 = ~v24;
        while (1)
        {
          v45(v13, *(void *)(v43 + 48) + v25 * v44, v9);
          sub_10012E158(&qword_1005757A8, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
          char v27 = sub_100460BD0();
          unint64_t v22 = *v19;
          (*v19)(v13, v9);
          if (v27) {
            break;
          }
          unint64_t v25 = (v25 + 1) & v26;
          if (((*(void *)(v42 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
          {
            uint64_t v21 = v43;
            goto LABEL_4;
          }
        }
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(v15, v9);
        uint64_t v29 = (v25 >> 3) & 0x1FFFFFFFFFFFFFF8;
        uint64_t v30 = *(unint64_t *)((char *)v37 + v29);
        *(unint64_t *)((char *)v37 + v29) = v30 | (1 << v25);
        if ((v30 & (1 << v25)) != 0)
        {
          uint64_t v21 = v43;
        }
        else
        {
          uint64_t v21 = v43;
          if (__OFADD__(v36, 1))
          {
            __break(1u);
            return result;
          }
          ++v36;
        }
      }
      else
      {
        unint64_t v22 = *v19;
LABEL_4:
        v22(v15, v9);
      }
      uint64_t v20 = v41 + 1;
      if (v41 + 1 == v40)
      {
        swift_bridgeObjectRelease();
        a2 = v34;
        uint64_t v31 = v36;
        goto LABEL_17;
      }
    }
  }
  uint64_t v31 = 0;
LABEL_17:
  uint64_t v32 = v43;
  swift_retain();
  return sub_100185F58(v37, a2, v31, v32);
}

uint64_t sub_10012CBCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100460120();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_10012E158(&qword_1005757A0, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_100460B20();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_10012E158(&qword_1005757A8, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
      char v19 = sub_100460BD0();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    uint64_t *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100187B10();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_10012D40C(v12);
    uint64_t *v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_10012CEAC(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  sub_1004628B0();
  Library.Menu.Identifier.rawValue.getter(a1);
  swift_bridgeObjectRetain();
  sub_100460DA0();
  swift_bridgeObjectRelease();
  Swift::Int v5 = sub_100462900();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_38:
    swift_bridgeObjectRelease();
    return 13;
  }
  uint64_t v24 = v1;
  uint64_t v8 = ~v6;
  uint64_t v9 = a1;
  while (2)
  {
    unint64_t v10 = 0xD000000000000029;
    unint64_t v11 = 0x800000010048D3C0;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v10 = 0xD000000000000025;
        unint64_t v12 = "LibraryView.RecentlyAdded";
        goto LABEL_17;
      case 2:
        unint64_t v10 = 0xD000000000000023;
        unint64_t v12 = "LibraryView.Playlists";
        goto LABEL_17;
      case 3:
        unint64_t v10 = 0xD000000000000022;
        unint64_t v12 = "LibraryView.Artists";
        goto LABEL_17;
      case 4:
        uint64_t v13 = "LibraryView.Albums";
        goto LABEL_14;
      case 5:
        unint64_t v10 = 0xD000000000000026;
        unint64_t v12 = "LibraryView.Songs";
        goto LABEL_17;
      case 6:
        unint64_t v10 = 0xD000000000000027;
        unint64_t v12 = "LibraryView.MadeForYou";
        goto LABEL_17;
      case 7:
        unint64_t v10 = 0xD000000000000022;
        unint64_t v12 = "LibraryView.MusicVideos";
        goto LABEL_17;
      case 8:
        unint64_t v10 = 0xD000000000000028;
        unint64_t v12 = "LibraryView.Genres";
        goto LABEL_17;
      case 9:
        unint64_t v10 = 0xD000000000000025;
        unint64_t v12 = "LibraryView.Compilations";
        goto LABEL_17;
      case 0xA:
        uint64_t v13 = "LibraryView.Composers";
LABEL_14:
        unint64_t v11 = (unint64_t)v13 | 0x8000000000000000;
        unint64_t v10 = 0xD000000000000021;
        break;
      case 0xB:
        unint64_t v10 = 0xD000000000000026;
        unint64_t v12 = "LibraryView.Shows";
        goto LABEL_17;
      case 0xC:
        unint64_t v10 = 0xD000000000000027;
        unint64_t v12 = "LibraryView.Downloaded";
LABEL_17:
        unint64_t v11 = (unint64_t)v12 | 0x8000000000000000;
        break;
      default:
        break;
    }
    unint64_t v14 = 0xD000000000000029;
    unint64_t v15 = 0x800000010048D3C0;
    switch(v9)
    {
      case 1:
        unint64_t v16 = 0xD000000000000025;
        uint64_t v17 = "LibraryView.RecentlyAdded";
        goto LABEL_34;
      case 2:
        unint64_t v16 = 0xD000000000000023;
        uint64_t v17 = "LibraryView.Playlists";
        goto LABEL_34;
      case 3:
        unint64_t v16 = 0xD000000000000022;
        uint64_t v17 = "LibraryView.Artists";
        goto LABEL_34;
      case 4:
        uint64_t v18 = "LibraryView.Albums";
        goto LABEL_29;
      case 5:
        unint64_t v16 = 0xD000000000000026;
        uint64_t v17 = "LibraryView.Songs";
        goto LABEL_34;
      case 6:
        unint64_t v16 = 0xD000000000000027;
        uint64_t v17 = "LibraryView.MadeForYou";
        goto LABEL_34;
      case 7:
        unint64_t v16 = 0xD000000000000022;
        uint64_t v17 = "LibraryView.MusicVideos";
        goto LABEL_34;
      case 8:
        unint64_t v16 = 0xD000000000000028;
        uint64_t v17 = "LibraryView.Genres";
        goto LABEL_34;
      case 9:
        unint64_t v16 = 0xD000000000000025;
        uint64_t v17 = "LibraryView.Compilations";
        goto LABEL_34;
      case 10:
        uint64_t v18 = "LibraryView.Composers";
LABEL_29:
        unint64_t v15 = (unint64_t)v18 | 0x8000000000000000;
        unint64_t v14 = 0xD000000000000021;
        goto LABEL_30;
      case 11:
        unint64_t v16 = 0xD000000000000026;
        uint64_t v17 = "LibraryView.Shows";
        goto LABEL_34;
      case 12:
        unint64_t v16 = 0xD000000000000027;
        uint64_t v17 = "LibraryView.Downloaded";
LABEL_34:
        unint64_t v15 = (unint64_t)v17 | 0x8000000000000000;
        if (v10 == v16) {
          goto LABEL_35;
        }
        goto LABEL_36;
      default:
LABEL_30:
        if (v10 != v14) {
          goto LABEL_36;
        }
LABEL_35:
        if (v11 == v15)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_41;
        }
LABEL_36:
        char v19 = sub_1004626E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_38;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_41:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v22 = *v2;
        uint64_t v25 = *v2;
        *uint64_t v2 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10018810C();
          uint64_t v22 = v25;
        }
        uint64_t v20 = *(unsigned __int8 *)(*(void *)(v22 + 48) + v7);
        sub_10012D728(v7);
        uint64_t *v24 = v25;
        swift_bridgeObjectRelease();
        return v20;
    }
  }
}

uint64_t sub_10012D300(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1004628A0();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v4 + 48);
  if (*(void *)(v8 + 8 * v7) != a1)
  {
    uint64_t v9 = ~v6;
    do
    {
      unint64_t v7 = (v7 + 1) & v9;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v8 + 8 * v7) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v2;
  uint64_t v14 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1001882A4();
    uint64_t v11 = v14;
  }
  uint64_t v12 = *(void *)(*(void *)(v11 + 48) + 8 * v7);
  sub_10012DA94(v7);
  *uint64_t v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_10012D40C(int64_t a1)
{
  uint64_t v3 = sub_100460120();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = sub_100462030();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      unint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_10012E158(&qword_1005757A0, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
        uint64_t v21 = sub_100460B20();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

unint64_t sub_10012D728(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_100462030();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1004628B0();
        sub_100460DA0();
        swift_bridgeObjectRelease();
        unint64_t v10 = sub_100462900() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          uint64_t v12 = (unsigned char *)(v11 + v2);
          uint64_t v13 = (unsigned char *)(v11 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *uint64_t v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
    JUMPOUT(0x10012DA60);
  }
  *(void *)(v3 + 16) = v16;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_10012DA94(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_100462030();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        uint64_t v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = sub_1004628A0() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            BOOL v15 = (void *)(v10 + 8 * v2);
            if (v2 != v6 || (int64_t v2 = v6, v15 >= v11 + 1))
            {
              void *v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t _s8MusicKit12AudioVariantO0A4CoreE1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005BFC(&qword_100575CB0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = &v7[*(int *)(v5 + 56)];
  uint64_t v9 = sub_100460120();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11(v7, a1, v9);
  v11(v8, a2, v9);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v10 + 88);
  int v13 = v12(v7, v9);
  int v14 = enum case for AudioVariant.dolbyAtmos(_:);
  if (v13 == enum case for AudioVariant.dolbyAtmos(_:)) {
    goto LABEL_20;
  }
  int v15 = enum case for AudioVariant.dolbyAudio(_:);
  if (v13 == enum case for AudioVariant.dolbyAudio(_:))
  {
    if (v12(v8, v9) == v14) {
      return 0;
    }
LABEL_20:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    return 1;
  }
  if (v13 == enum case for AudioVariant.lossless(_:))
  {
    int v16 = v12(v8, v9);
    if (v16 == v14 || v16 == v15 || v16 == enum case for AudioVariant.highResolutionLossless(_:)) {
      return 0;
    }
    goto LABEL_20;
  }
  if (v13 == enum case for AudioVariant.highResolutionLossless(_:))
  {
    int v19 = v12(v8, v9);
    if (v19 == v14 || v19 == v15) {
      return 0;
    }
    goto LABEL_20;
  }
  unint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v8, v9);
  v22(v7, v9);
  return 0;
}

uint64_t sub_10012DE4C(uint64_t a1)
{
  uint64_t v2 = sub_100460120();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_10012E158(&qword_1005757A0, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
  uint64_t result = sub_100461480();
  uint64_t v17 = result;
  if (v9)
  {
    int v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_100183074((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_10012DFE8(uint64_t a1)
{
  uint64_t v2 = sub_100005BFC(&qword_100575C90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10012E048()
{
  return sub_10012E158(&qword_1005757A8, (void (*)(uint64_t))&type metadata accessor for AudioVariant);
}

uint64_t sub_10012E090(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_10012E104();
  uint64_t result = sub_100461480();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1001838C0(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_10012E104()
{
  unint64_t result = qword_100575CB8;
  if (!qword_100575CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575CB8);
  }
  return result;
}

uint64_t sub_10012E158(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Logger.music(_:)()
{
  swift_bridgeObjectRetain();

  return sub_10045D300();
}

uint64_t Logger.motion.unsafeMutableAddressor()
{
  return sub_10012E560(&qword_100570930, (uint64_t)static Logger.motion);
}

uint64_t *OS_os_log.musicBag.unsafeMutableAddressor()
{
  if (qword_100570918 != -1) {
    swift_once();
  }
  return &static OS_os_log.musicBag;
}

uint64_t OS_os_log.init(musicCategory:)()
{
  return sub_100461E90();
}

uint64_t Logger.audioFormat.unsafeMutableAddressor()
{
  return sub_10012E560(&qword_100570920, (uint64_t)static Logger.audioFormat);
}

uint64_t sub_10012E2C4()
{
  sub_10012EA4C();
  uint64_t result = sub_100461E90();
  static OS_os_log.musicSignposts = result;
  return result;
}

uint64_t *OS_os_log.musicSignposts.unsafeMutableAddressor()
{
  if (qword_100570910 != -1) {
    swift_once();
  }
  return &static OS_os_log.musicSignposts;
}

id static OS_os_log.musicSignposts.getter()
{
  return sub_1000F00D4(&qword_100570910, (void **)&static OS_os_log.musicSignposts);
}

uint64_t sub_10012E398()
{
  sub_10012EA4C();
  uint64_t result = sub_100461E90();
  static OS_os_log.musicBag = result;
  return result;
}

id static OS_os_log.musicBag.getter()
{
  return sub_1000F00D4(&qword_100570918, (void **)&static OS_os_log.musicBag);
}

void *String.musicSubsystem.unsafeMutableAddressor()
{
  return &static String.musicSubsystem;
}

uint64_t sub_10012E420()
{
  uint64_t v0 = sub_10045D310();
  sub_1000096D0(v0, static Logger.audioFormat);
  sub_100009688(v0, (uint64_t)static Logger.audioFormat);
  return sub_10045D300();
}

uint64_t static Logger.audioFormat.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10012E67C(&qword_100570920, (uint64_t)static Logger.audioFormat, a1);
}

uint64_t sub_10012E4C4()
{
  uint64_t v0 = sub_10045D310();
  sub_1000096D0(v0, static Logger.badging);
  sub_100009688(v0, (uint64_t)static Logger.badging);
  return sub_10045D300();
}

uint64_t Logger.badging.unsafeMutableAddressor()
{
  return sub_10012E560(&qword_100570928, (uint64_t)static Logger.badging);
}

uint64_t sub_10012E560(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_10045D310();

  return sub_100009688(v3, a2);
}

uint64_t static Logger.badging.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10012E67C(&qword_100570928, (uint64_t)static Logger.badging, a1);
}

uint64_t sub_10012E5D8()
{
  uint64_t v0 = sub_10045D310();
  sub_1000096D0(v0, static Logger.motion);
  sub_100009688(v0, (uint64_t)static Logger.motion);
  return sub_10045D300();
}

uint64_t static Logger.motion.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10012E67C(&qword_100570930, (uint64_t)static Logger.motion, a1);
}

uint64_t sub_10012E67C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_10045D310();
  uint64_t v6 = sub_100009688(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

unint64_t static String.musicSubsystem.getter()
{
  return 0xD000000000000013;
}

uint64_t Optional.expectNotNil(logger:file:line:function:)@<X0>(NSObject *a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, unint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  os_log_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v12 = sub_10045BDE0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a5 + 16) - 8) + 48))(v6, 1) == 1)
  {
    uint64_t v28 = a3;
    os_log_type_t v16 = sub_100461730();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v17 = sub_10045D2F0();
    if (os_log_type_enabled(v17, v16))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v27 = a6;
      uint64_t v19 = v18;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v31 = v26;
      *(_DWORD *)uint64_t v19 = 136315650;
      sub_10045BD00();
      os_log_t v29 = v17;
      uint64_t v20 = sub_10045BD10();
      int v25 = v16;
      unint64_t v22 = v21;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      *(void *)(v19 + 4) = sub_10001FCAC(v20, v22, &v31);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2048;
      *(void *)(v19 + 14) = v30;
      *(_WORD *)(v19 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v19 + 24) = sub_10001FCAC(v28, a4, &v31);
      swift_bridgeObjectRelease_n();
      uint64_t v17 = v29;
      _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v25, "Unexpectedly found nil: %s:%ld %s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a6 = v27;
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(a6, v7, a5);
}

uint64_t sub_10012EA1C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

unint64_t sub_10012EA4C()
{
  unint64_t result = qword_100574700;
  if (!qword_100574700)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100574700);
  }
  return result;
}

uint64_t sub_10012EA8C()
{
  uint64_t result = swift_slowAlloc();
  qword_100575CD0 = result;
  return result;
}

uint64_t sub_10012EAB4()
{
  uint64_t result = swift_slowAlloc();
  qword_100575CD8 = result;
  return result;
}

uint64_t sub_10012EADC()
{
  uint64_t result = swift_slowAlloc();
  qword_100575CE0 = result;
  return result;
}

uint64_t sub_10012EB04()
{
  uint64_t result = swift_slowAlloc();
  qword_100575CE8 = result;
  return result;
}

id sub_10012EB5C()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s27WeakViewControllerReferenceCMa();
  return [super dealloc];
}

id UIViewController.playActivityFeatureNameSourceViewController.getter()
{
  return sub_10012ECD4(&qword_100570940, (const void **)&qword_100575CD8);
}

uint64_t _s27WeakViewControllerReferenceCMa()
{
  return self;
}

void UIViewController.playActivityFeatureNameSourceViewController.setter(void *a1)
{
}

id UIViewController.playActivityRecommendationDataSourceViewController.getter()
{
  return sub_10012ECD4(&qword_100570948, (const void **)&qword_100575CE0);
}

id sub_10012ECD4(void *a1, const void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  if (objc_getAssociatedObject(v2, *a2))
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_1000E4750((uint64_t)v7, (uint64_t)v8);
  if (!v9)
  {
    sub_1000CADE4((uint64_t)v8);
    return [v2 parentViewController];
  }
  _s27WeakViewControllerReferenceCMa();
  if ((swift_dynamicCast() & 1) == 0) {
    return [v2 parentViewController];
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();

  if (!Strong) {
    return [v2 parentViewController];
  }
  return (id)Strong;
}

void UIViewController.playActivityRecommendationDataSourceViewController.setter(void *a1)
{
}

void sub_10012EE04(void *a1, void *a2, const void **a3)
{
  if (a1)
  {
    uint64_t v7 = (objc_class *)_s27WeakViewControllerReferenceCMa();
    id v8 = objc_allocWithZone(v7);
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    v12.receiver = v8;
    v12.super_class = v7;
    [super init];
  }
  else
  {
    id v9 = 0;
  }
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v10 = *a3;
  id v11 = v9;
  objc_setAssociatedObject(v3, v10, v11, (void *)1);
}

void (*UIViewController.playActivityRecommendationDataSourceViewController.modify(void *a1))(objc_super **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  v3[4] = UIViewController.playActivityRecommendationDataSourceViewController.getter();
  return sub_10012EF4C;
}

void sub_10012EF4C(objc_super **a1, char a2)
{
  objc_super v2 = *a1;
  id receiver = (*a1)[2].receiver;
  if (a2)
  {
    if (receiver)
    {
      uint64_t v4 = (objc_class *)_s27WeakViewControllerReferenceCMa();
      id v5 = objc_allocWithZone(v4);
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakAssign();
      v2->id receiver = v5;
      v2->Class super_class = v4;
      id v6 = receiver;
      uint64_t v7 = [(objc_super *)v2 init];
    }
    else
    {
      uint64_t v7 = 0;
    }
    if (qword_100570948 != -1) {
      swift_once();
    }
    Class super_class = v2[2].super_class;
    objc_super v12 = (const void *)qword_100575CE0;
    uint64_t v13 = v7;
    objc_setAssociatedObject(super_class, v12, v13, (void *)1);

    id receiver = v2[2].receiver;
  }
  else
  {
    if (receiver)
    {
      id v8 = (objc_class *)_s27WeakViewControllerReferenceCMa();
      id v9 = objc_allocWithZone(v8);
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakAssign();
      v2[1].id receiver = v9;
      v2[1].Class super_class = v8;
      id v10 = [super init];
    }
    else
    {
      id v10 = 0;
    }
    if (qword_100570948 != -1) {
      swift_once();
    }
    Class v14 = v2[2].super_class;
    uint64_t v15 = (const void *)qword_100575CE0;
    id v16 = v10;
    objc_setAssociatedObject(v14, v15, v16, (void *)1);
  }

  free(v2);
}

uint64_t UIViewController.playActivityRecommendationData.getter()
{
  return 0;
}

uint64_t UIViewController.playActivityForwardedRecommendationData.getter()
{
  if (qword_100570950 != -1) {
    swift_once();
  }
  if (objc_getAssociatedObject(v0, (const void *)qword_100575CE8))
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_1000E4750((uint64_t)v3, (uint64_t)v4);
  if (v5)
  {
    if (swift_dynamicCast()) {
      return v2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_1000CADE4((uint64_t)v4);
    return 0;
  }
}

void UIViewController.playActivityForwardedRecommendationData.setter(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_100570950 != -1) {
    swift_once();
  }
  id v6 = (const void *)qword_100575CE8;
  if (a2 >> 60 == 15)
  {
    Class value = 0;
    objc_setAssociatedObject(v3, (const void *)qword_100575CE8, 0, (void *)3);
  }
  else
  {
    sub_10006922C(a1, a2);
    Class value = sub_10045BE40().super.isa;
    sub_1000070AC(a1, a2);
    objc_setAssociatedObject(v3, v6, value, (void *)3);
  }
  sub_1000070AC(a1, a2);
}

void (*UIViewController.playActivityForwardedRecommendationData.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  a1[2] = v1;
  *a1 = UIViewController.playActivityForwardedRecommendationData.getter();
  a1[1] = v3;
  return sub_10012F34C;
}

void sub_10012F34C(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)a1;
  unint64_t v4 = *(void *)(a1 + 8);
  if (a2)
  {
    sub_100069218(*(void *)a1, v4);
    if (qword_100570950 != -1) {
      swift_once();
    }
    uint64_t v5 = (const void *)qword_100575CE8;
    if (v4 >> 60 == 15)
    {
      Class isa = 0;
    }
    else
    {
      sub_10006922C(v3, v4);
      Class isa = sub_10045BE40().super.isa;
      sub_1000070AC(v3, v4);
    }
    objc_setAssociatedObject(*(id *)(a1 + 16), v5, isa, (void *)3);
    sub_1000070AC(v3, v4);

    sub_1000070AC(v3, v4);
  }
  else
  {
    if (qword_100570950 != -1) {
      swift_once();
    }
    uint64_t v7 = (const void *)qword_100575CE8;
    if (v4 >> 60 == 15)
    {
      Class value = 0;
      objc_setAssociatedObject(*(id *)(a1 + 16), (const void *)qword_100575CE8, 0, (void *)3);
    }
    else
    {
      sub_10006922C(v3, v4);
      Class value = sub_10045BE40().super.isa;
      sub_1000070AC(v3, v4);
      objc_setAssociatedObject(*(id *)(a1 + 16), v7, value, (void *)3);
    }
    sub_1000070AC(v3, v4);
  }
}

uint64_t UIViewController.inheritedPlayActivityRecommendationData(shouldIncludeForwardedRecommendationData:)(char a1)
{
  id v3 = [v1 playActivityRecommendationData];
  if (v3)
  {
    unint64_t v4 = v3;
    uint64_t v5 = sub_10045BE50();
    unint64_t v7 = v6;
  }
  else
  {
    if ((a1 & 1) == 0)
    {
      id Strong = UIViewController.playActivityRecommendationDataSourceViewController.getter();
      uint64_t v5 = 0;
LABEL_8:
      if (!Strong) {
        return v5;
      }
      while (1)
      {
        id v10 = [Strong playActivityRecommendationData];
        if (v10)
        {
          id v11 = v10;
          uint64_t v5 = sub_10045BE50();
          unint64_t v13 = v12;

          goto LABEL_27;
        }
        if ((a1 & 1) == 0) {
          goto LABEL_26;
        }
        uint64_t v14 = qword_100570950;
        id v15 = Strong;
        if (v14 != -1) {
          swift_once();
        }
        if (objc_getAssociatedObject(v15, (const void *)qword_100575CE8))
        {
          sub_100461FF0();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v22 = 0u;
          long long v23 = 0u;
        }
        sub_1000E4750((uint64_t)&v22, (uint64_t)v24);
        if (!v25) {
          break;
        }
        int v16 = swift_dynamicCast();
        if (v16) {
          uint64_t v5 = (uint64_t)v20;
        }
        else {
          uint64_t v5 = 0;
        }
        if (v16) {
          unint64_t v13 = v21;
        }
        else {
          unint64_t v13 = 0xF000000000000000;
        }

LABEL_27:
        uint64_t v17 = qword_100570948;
        id v18 = Strong;
        if (v17 != -1) {
          swift_once();
        }
        if (objc_getAssociatedObject(v18, (const void *)qword_100575CE0))
        {
          sub_100461FF0();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v22 = 0u;
          long long v23 = 0u;
        }
        sub_1000E4750((uint64_t)&v22, (uint64_t)v24);
        if (v25)
        {
          _s27WeakViewControllerReferenceCMa();
          if (swift_dynamicCast())
          {
            id Strong = (id)swift_unknownObjectWeakLoadStrong();

            if (Strong) {
              goto LABEL_38;
            }
          }
        }
        else
        {
          sub_1000CADE4((uint64_t)v24);
        }
        id Strong = [v18 parentViewController];
LABEL_38:

        if (v13 >> 60 != 15) {
          goto LABEL_6;
        }
        if (!Strong) {
          return v5;
        }
      }
      sub_1000CADE4((uint64_t)v24);

LABEL_26:
      uint64_t v5 = 0;
      unint64_t v13 = 0xF000000000000000;
      goto LABEL_27;
    }
    uint64_t v5 = UIViewController.playActivityForwardedRecommendationData.getter();
    unint64_t v7 = v8;
  }
  id Strong = UIViewController.playActivityRecommendationDataSourceViewController.getter();
  if (v7 >> 60 == 15) {
    goto LABEL_8;
  }
LABEL_6:

  return v5;
}

uint64_t UIViewController.playActivityFeatureIdentifier.getter()
{
  id v1 = [v0 playActivityFeatureName];
  sub_100460CB0();

  return _s9MusicCore29PlayActivityFeatureIdentifierO8rawValueACSgSS_tcfC_0();
}

void UIViewController.playActivityFeatureIdentifier.setter(char a1)
{
  if (a1 != 19) {
    PlayActivityFeatureIdentifier.rawValue.getter(a1);
  }
  id v2 = sub_100460C70();
  swift_bridgeObjectRelease();
  [v1 setPlayActivityFeatureName:v2];
}

void (*UIViewController.playActivityFeatureIdentifier.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  id v3 = [v1 playActivityFeatureName];
  sub_100460CB0();

  *(unsigned char *)(a1 + 8) = _s9MusicCore29PlayActivityFeatureIdentifierO8rawValueACSgSS_tcfC_0();
  return sub_10012F98C;
}

void sub_10012F98C(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  if (v2 != 19) {
    PlayActivityFeatureIdentifier.rawValue.getter(v2);
  }
  id v3 = *(void **)a1;
  id v4 = sub_100460C70();
  swift_bridgeObjectRelease();
  [v3 setPlayActivityFeatureName:v4];
}

uint64_t UIViewController.playActivityFeatureNames(sourceChildViewController:)()
{
  sub_100005BFC((uint64_t *)&unk_100575D00);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100466900;
  id v2 = [v0 playActivityFeatureName];
  uint64_t v3 = sub_100460CB0();
  uint64_t v5 = v4;

  *(void *)(v1 + 32) = v3;
  *(void *)(v1 + 40) = v5;
  return v1;
}

uint64_t UIViewController.completePlayActivityFeatureNames.getter()
{
  id v1 = v0;
  id v2 = 0;
  do
  {
    uint64_t v3 = v1;
    id v4 = [v1 playActivityFeatureNamesWithSourceChildViewController:v2];
    uint64_t v5 = sub_1004610A0();

    sub_1000B9708(v5);
    id v1 = [v3 playActivityFeatureNameSourceViewController];
    id v2 = v3;
  }
  while (v1);
  uint64_t v6 = _swiftEmptyArrayStorage[2];
  if (v6)
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = &_swiftEmptyArrayStorage[5];
    do
    {
      uint64_t v12 = *(v7 - 1);
      uint64_t v11 = *v7;
      uint64_t v13 = HIBYTE(*v7) & 0xF;
      if ((*v7 & 0x2000000000000000) == 0) {
        uint64_t v13 = v12 & 0xFFFFFFFFFFFFLL;
      }
      if (v13)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000A01EC(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v9 = _swiftEmptyArrayStorage[2];
        unint64_t v8 = _swiftEmptyArrayStorage[3];
        if (v9 >= v8 >> 1) {
          sub_1000A01EC((char *)(v8 > 1), v9 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v9 + 1;
        id v10 = &_swiftEmptyArrayStorage[2 * v9];
        v10[4] = v12;
        v10[5] = v11;
      }
      v7 += 2;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_10012FD74((uint64_t)_swiftEmptyArrayStorage);

  return v14;
}

uint64_t sub_10012FD74(uint64_t result)
{
  id v1 = (char *)result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  uint64_t v3 = 0;
  unint64_t v4 = 0;
  unint64_t v5 = v2 >> 1;
  unint64_t v6 = v2 - 1;
  uint64_t v7 = 16 * v2 + 16;
  unint64_t v15 = v2 >> 1;
  while (1)
  {
    if (v4 == v6) {
      goto LABEL_4;
    }
    unint64_t v8 = *((void *)v1 + 2);
    if (v4 >= v8) {
      break;
    }
    if (v6 >= v8) {
      goto LABEL_13;
    }
    uint64_t v10 = *(void *)&v1[v3 + 32];
    uint64_t v9 = *(void *)&v1[v3 + 40];
    uint64_t v12 = *(void *)&v1[v7];
    uint64_t v11 = *(void *)&v1[v7 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v1 = sub_100223210((uint64_t)v1);
    }
    uint64_t v13 = &v1[v3];
    uint64_t result = swift_bridgeObjectRelease();
    *((void *)v13 + 4) = v12;
    *((void *)v13 + 5) = v11;
    if (v6 >= *((void *)v1 + 2)) {
      goto LABEL_14;
    }
    uint64_t v14 = &v1[v7];
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v14 = v10;
    *((void *)v14 + 1) = v9;
    unint64_t v5 = v15;
LABEL_4:
    ++v4;
    --v6;
    v7 -= 16;
    v3 += 16;
    if (v5 == v4) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t UIViewController.combinedPlayActivityFeatureName.getter()
{
  id v1 = [v0 completePlayActivityFeatureNames];
  sub_1004610A0();

  sub_100005BFC(&qword_100577430);
  sub_10003F604((unint64_t *)&unk_100575D10, &qword_100577430);
  sub_10000F810();
  uint64_t v2 = sub_100461030();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t Collection<>.playActivityFeatureJoined()()
{
  sub_10000F810();

  return sub_100461030();
}

uint64_t UIViewController.playActivityInformation.getter()
{
  id v1 = [v0 combinedPlayActivityFeatureName];
  uint64_t v2 = sub_100460CB0();

  UIViewController.inheritedPlayActivityRecommendationData(shouldIncludeForwardedRecommendationData:)(1);
  return v2;
}

uint64_t UINavigationController.playActivityFeatureNames(sourceChildViewController:)(void *a1)
{
  id v5 = [(id)v1 viewControllers];
  uint64_t v6 = sub_100009854(0, (unint64_t *)&unk_100575D20);
  unint64_t v7 = sub_1004610A0();

  if (!a1) {
    goto LABEL_22;
  }
  unint64_t v8 = a1;
  sub_10013058C((uint64_t)v8, v7, (unint64_t *)&unk_100575D20);
  if ((v10 & 1) == 0)
  {
    unint64_t v11 = v9;
    if (v9 < 0) {
      goto LABEL_50;
    }
    int64_t v3 = v7 >> 62;
    if (v7 >> 62)
    {
LABEL_51:
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_1004623D0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v2 < 0)
      {
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1004623D0();
      swift_bridgeObjectRelease();
      if (v12 >= (uint64_t)v11)
      {
LABEL_6:
        if ((v7 & 0xC000000000000001) != 0 && v11)
        {
          Swift::Int v13 = 0;
          do
          {
            Swift::Int v14 = v13 + 1;
            sub_100462150(v13);
            Swift::Int v13 = v14;
          }
          while (v11 != v14);
        }
        if (v3)
        {
          swift_bridgeObjectRetain();
          uint64_t v6 = sub_1004623E0();
          uint64_t v2 = v15;
          uint64_t v12 = v16;
          unint64_t v11 = v17;
          swift_bridgeObjectRelease_n();
          if (v11) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v12 = 0;
          uint64_t v6 = v7 & 0xFFFFFFFFFFFFFF8;
          uint64_t v2 = (v7 & 0xFFFFFFFFFFFFFF8) + 32;
          unint64_t v11 = (2 * v11) | 1;
          if (v11)
          {
LABEL_16:
            sub_100462710();
            swift_unknownObjectRetain_n();
            uint64_t v19 = (void *)swift_dynamicCastClass();
            if (!v19)
            {
              swift_unknownObjectRelease();
              uint64_t v19 = _swiftEmptyArrayStorage;
            }
            int64_t v3 = v19[2];
            swift_release();
            if (!__OFSUB__(v11 >> 1, v12))
            {
              if (v3 == (v11 >> 1) - v12)
              {
                unint64_t v7 = swift_dynamicCastClass();

                swift_unknownObjectRelease();
                if (!v7)
                {
                  swift_unknownObjectRelease();
                  unint64_t v7 = (unint64_t)_swiftEmptyArrayStorage;
                }
                goto LABEL_22;
              }
              goto LABEL_55;
            }
LABEL_54:
            __break(1u);
LABEL_55:
            swift_unknownObjectRelease();
          }
        }
        sub_100131230(v6, v2, v12, v11);
        unint64_t v7 = v18;

        swift_unknownObjectRelease();
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v12 >= v9) {
        goto LABEL_6;
      }
    }
    __break(1u);
    goto LABEL_54;
  }

LABEL_22:
  sub_100005BFC((uint64_t *)&unk_100575D00);
  unint64_t v8 = (int64_t *)swift_allocObject();
  *((_OWORD *)v8 + 1) = xmmword_100466900;
  id v20 = [(id)v1 playActivityFeatureName];
  uint64_t v6 = sub_100460CB0();
  unint64_t v11 = v21;

  void v8[4] = v6;
  v8[5] = v11;
  if (v7 >> 62) {
    goto LABEL_47;
  }
  uint64_t v1 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v1)
  {
    if (v1 < 1)
    {
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    uint64_t v6 = 0;
    unint64_t v11 = (unint64_t)&type metadata for String;
    while (1)
    {
      id v22 = (v7 & 0xC000000000000001) != 0 ? (id)sub_100462170() : *(id *)(v7 + 8 * v6 + 32);
      long long v23 = v22;
      id v24 = [v22 playActivityFeatureNamesWithSourceChildViewController:0];
      uint64_t v25 = sub_1004610A0();

      int64_t v3 = *(void *)(v25 + 16);
      int64_t v26 = v8[2];
      int64_t v27 = v26 + v3;
      if (__OFADD__(v26, v3)) {
        break;
      }
      if (v27 > (uint64_t)((unint64_t)v8[3] >> 1))
      {
        if (v26 <= v27) {
          int64_t v31 = v26 + v3;
        }
        else {
          int64_t v31 = v8[2];
        }
        unint64_t v8 = (int64_t *)sub_1000511A8((char *)1, v31, 1, (char *)v8);
        int64_t v26 = v8[2];
        if (*(void *)(v25 + 16))
        {
LABEL_34:
          if ((uint64_t)(((unint64_t)v8[3] >> 1) - v26) < v3) {
            goto LABEL_45;
          }
          swift_arrayInitWithCopy();
          if (v3)
          {
            int64_t v28 = v8[2];
            BOOL v29 = __OFADD__(v28, v3);
            int64_t v30 = v28 + v3;
            if (v29) {
              goto LABEL_46;
            }
            _OWORD v8[2] = v30;
          }
          goto LABEL_27;
        }
      }
      else if (v3)
      {
        goto LABEL_34;
      }
      if (v3) {
        goto LABEL_44;
      }
LABEL_27:
      ++v6;
      swift_bridgeObjectRelease();

      if (v1 == v6) {
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_1004623D0();
    swift_bridgeObjectRelease();
  }
LABEL_48:
  swift_bridgeObjectRelease();
  return (uint64_t)v8;
}

void sub_10013058C(uint64_t a1, unint64_t a2, unint64_t *a3)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v6 = (id)sub_100462170();
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v6 = *(id *)(a2 + 32);
      }
      unint64_t v7 = v6;
      sub_100009854(0, a3);
      char v8 = sub_100461D10();

      if ((v8 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          a3 = (unint64_t *)(i + 1);
          if (__OFADD__(i, 1)) {
            break;
          }
          if (a3 == (unint64_t *)v5) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v10 = (id)sub_100462170();
          }
          else
          {
            if (((unint64_t)a3 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if ((unint64_t)a3 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v10 = *(id *)(a2 + 32 + 8 * (void)a3);
          }
          unint64_t v11 = v10;
          char v12 = sub_100461D10();

          if (v12) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_1004623D0();
        swift_bridgeObjectRelease();
        if (v5) {
          continue;
        }
      }
      return;
    }
  }
}

uint64_t sub_100130728(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a2 + 32;
  uint64_t v5 = a1;
  while (2)
  {
    unint64_t v6 = 0xD000000000000029;
    unint64_t v7 = 0x800000010048D3C0;
    switch(*(unsigned char *)(v4 + v3))
    {
      case 1:
        unint64_t v6 = 0xD000000000000025;
        unint64_t v7 = 0x800000010048D3F0;
        break;
      case 2:
        unint64_t v6 = 0xD000000000000023;
        unint64_t v7 = 0x800000010048D420;
        break;
      case 3:
        unint64_t v6 = 0xD000000000000022;
        unint64_t v7 = 0x800000010048D450;
        break;
      case 4:
        char v8 = "LibraryView.Albums";
        goto LABEL_14;
      case 5:
        unint64_t v6 = 0xD000000000000026;
        unint64_t v7 = 0x800000010048D4B0;
        break;
      case 6:
        unint64_t v6 = 0xD000000000000027;
        unint64_t v7 = 0x800000010048D4E0;
        break;
      case 7:
        unint64_t v6 = 0xD000000000000022;
        unint64_t v7 = 0x800000010048D510;
        break;
      case 8:
        unint64_t v6 = 0xD000000000000028;
        unint64_t v7 = 0x800000010048D540;
        break;
      case 9:
        unint64_t v6 = 0xD000000000000025;
        unint64_t v7 = 0x800000010048D570;
        break;
      case 0xA:
        char v8 = "LibraryView.Composers";
LABEL_14:
        unint64_t v7 = (unint64_t)v8 | 0x8000000000000000;
        unint64_t v6 = 0xD000000000000021;
        break;
      case 0xB:
        unint64_t v6 = 0xD000000000000026;
        unint64_t v7 = 0x800000010048D5D0;
        break;
      case 0xC:
        unint64_t v6 = 0xD000000000000027;
        unint64_t v7 = 0x800000010048D600;
        break;
      default:
        break;
    }
    unint64_t v9 = 0xD000000000000029;
    unint64_t v10 = 0x800000010048D3C0;
    switch(v5)
    {
      case 1:
        unint64_t v11 = 0xD000000000000025;
        char v12 = "LibraryView.RecentlyAdded";
        goto LABEL_27;
      case 2:
        unint64_t v11 = 0xD000000000000023;
        char v12 = "LibraryView.Playlists";
        goto LABEL_27;
      case 3:
        unint64_t v11 = 0xD000000000000022;
        char v12 = "LibraryView.Artists";
        goto LABEL_27;
      case 4:
        Swift::Int v13 = "LibraryView.Albums";
        goto LABEL_30;
      case 5:
        unint64_t v11 = 0xD000000000000026;
        char v12 = "LibraryView.Songs";
        goto LABEL_27;
      case 6:
        unint64_t v11 = 0xD000000000000027;
        char v12 = "LibraryView.MadeForYou";
        goto LABEL_27;
      case 7:
        unint64_t v11 = 0xD000000000000022;
        char v12 = "LibraryView.MusicVideos";
        goto LABEL_27;
      case 8:
        unint64_t v11 = 0xD000000000000028;
        char v12 = "LibraryView.Genres";
        goto LABEL_27;
      case 9:
        unint64_t v11 = 0xD000000000000025;
        char v12 = "LibraryView.Compilations";
LABEL_27:
        unint64_t v10 = (unint64_t)v12 | 0x8000000000000000;
        if (v6 != v11) {
          goto LABEL_35;
        }
        goto LABEL_34;
      case 10:
        Swift::Int v13 = "LibraryView.Composers";
LABEL_30:
        unint64_t v10 = (unint64_t)v13 | 0x8000000000000000;
        if (v6 != 0xD000000000000021) {
          goto LABEL_35;
        }
        goto LABEL_34;
      case 11:
        unint64_t v9 = 0xD000000000000026;
        unint64_t v10 = 0x800000010048D5D0;
        goto LABEL_33;
      case 12:
        unint64_t v10 = 0x800000010048D600;
        if (v6 != 0xD000000000000027) {
          goto LABEL_35;
        }
        goto LABEL_34;
      default:
LABEL_33:
        if (v6 != v9) {
          goto LABEL_35;
        }
LABEL_34:
        if (v7 == v10)
        {
          swift_bridgeObjectRelease_n();
          return v3;
        }
LABEL_35:
        char v14 = sub_1004626E0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v14) {
          return v3;
        }
        if (v2 != ++v3) {
          continue;
        }
        uint64_t v3 = 0;
        break;
    }
    return v3;
  }
}

unint64_t UITab.path.getter()
{
  uint64_t v1 = v0;
  sub_100005BFC(&qword_1005754F0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1004665D0;
  *(void *)(v2 + 32) = v0;
  unint64_t v11 = v2;
  sub_1004610C0();
  unint64_t v3 = v11;
  id v4 = v1;
  id v5 = [v4 parent];

  if (!v5) {
    return v3;
  }
  while (!(v11 >> 62))
  {
    id v6 = v5;
LABEL_4:
    sub_10005368C(0, 0, (uint64_t)v5);

    id v7 = [v5 parent];
    id v5 = v7;
    if (!v7) {
      return v11;
    }
  }
  id v8 = v5;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1004623D0();
  swift_bridgeObjectRelease();
  if ((v9 & 0x8000000000000000) == 0) {
    goto LABEL_4;
  }
  __break(1u);
  return v11;
}

id sub_100130D18(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  NSString v5 = sub_100460C70();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t _sSo5UITabC9MusicCoreE23playActivityFeatureNameSSvg_0()
{
  if (qword_100570938 != -1) {
    swift_once();
  }
  if (objc_getAssociatedObject(v0, (const void *)qword_100575CD0))
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_1000E4750((uint64_t)v3, (uint64_t)v4);
  if (v5)
  {
    if (swift_dynamicCast()) {
      return v2;
    }
  }
  else
  {
    sub_1000CADE4((uint64_t)v4);
  }
  return 0;
}

void _sSo5UITabC9MusicCoreE23playActivityFeatureNameSSvs_0()
{
  if (qword_100570938 != -1) {
    swift_once();
  }
  uint64_t v1 = (const void *)qword_100575CD0;
  id value = sub_100460C70();
  swift_bridgeObjectRelease();
  objc_setAssociatedObject(v0, v1, value, (void *)3);
}

uint64_t UITab.combinedPlayActivityFeatureName.getter()
{
  UITab.playActivityFeatureNames.getter();
  sub_100005BFC(&qword_100577430);
  sub_10003F604((unint64_t *)&unk_100575D10, &qword_100577430);
  sub_10000F810();
  uint64_t v0 = sub_100461030();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t UITab.playActivityFeatureNames.getter()
{
  unint64_t v0 = UITab.path.getter();
  unint64_t v1 = v0;
  if (!(v0 >> 62))
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_20:
    uint64_t v5 = (char *)_swiftEmptyArrayStorage;
LABEL_21:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v5;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1004623D0();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_20;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v6 = (id)sub_100462170();
      }
      else {
        id v6 = *(id *)(v1 + 8 * v4 + 32);
      }
      id v7 = v6;
      id v8 = [v6 playActivityFeatureName];
      uint64_t v9 = sub_100460CB0();
      unint64_t v11 = v10;

      if ((v11 & 0x2000000000000000) != 0) {
        uint64_t v12 = HIBYTE(v11) & 0xF;
      }
      else {
        uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
      }

      if (v12)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_1000511A8(0, *((void *)v5 + 2) + 1, 1, v5);
        }
        unint64_t v14 = *((void *)v5 + 2);
        unint64_t v13 = *((void *)v5 + 3);
        if (v14 >= v13 >> 1) {
          uint64_t v5 = sub_1000511A8((char *)(v13 > 1), v14 + 1, 1, v5);
        }
        *((void *)v5 + 2) = v14 + 1;
        uint64_t v15 = &v5[16 * v14];
        *((void *)v15 + 4) = v9;
        *((void *)v15 + 5) = v11;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_100131230(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (v5)
  {
    if (v5 <= 0)
    {
      if (v4 != a3)
      {
LABEL_7:
        sub_100009854(0, (unint64_t *)&unk_100575D20);
        swift_arrayInitWithCopy();
        return;
      }
    }
    else
    {
      sub_100005BFC(&qword_1005754F0);
      id v7 = (void *)swift_allocObject();
      int64_t v8 = j__malloc_size(v7);
      uint64_t v9 = v8 - 32;
      if (v8 < 32) {
        uint64_t v9 = v8 - 25;
      }
      _OWORD v7[2] = v5;
      void v7[3] = (2 * (v9 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
}

void *sub_100131320(const void *a1, uint64_t a2)
{
  if (!a2) {
    return _swiftEmptyArrayStorage;
  }
  if (a2 <= 0)
  {
    size_t v4 = 8 * a2;
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_100005BFC((uint64_t *)&unk_100575D80);
    size_t v4 = 8 * a2;
    uint64_t v5 = (void *)swift_allocObject();
    int64_t v6 = j__malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 25;
    }
    _OWORD v5[2] = a2;
    v5[3] = 2 * (v7 >> 3);
  }
  memcpy(v5 + 4, a1, v4);
  return v5;
}

void *sub_1001313C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100005BFC(&qword_100575D70);
  unint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  _OWORD v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1001317C0((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1001327C4();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_1001314AC(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      unint64_t v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_100005BFC(&qword_1005754F0);
      unint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      _OWORD v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1001320E0((uint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1004623D0();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

void *sub_1001315A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100005BFC(&qword_100575D78);
  unint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  _OWORD v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  uint64_t v5 = sub_1001319C0((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1001327C4();
  if (v5 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

uint64_t sub_100131698(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  if (a2)
  {
    if (a3)
    {
      if (a3 < 0)
      {
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      if (!v6)
      {
LABEL_20:
        uint64_t v8 = 0;
        goto LABEL_17;
      }
      uint64_t v8 = v6 - 1;
      uint64_t v9 = a4 + 16 * (v6 - 1);
      uint64_t v10 = *(void *)(v9 + 40);
      *a2 = *(void *)(v9 + 32);
      a2[1] = v10;
      if (a3 == 1)
      {
LABEL_15:
        uint64_t v6 = a3;
      }
      else if (v6 != 1)
      {
        uint64_t v11 = 0;
        uint64_t v12 = a3 - 2;
        unint64_t v13 = (uint64_t *)(a4 + 16 * v6 + 8);
        unint64_t v14 = a2 + 3;
        while (v6 + v11 - 1 <= *(void *)(a4 + 16))
        {
          uint64_t v15 = *v13;
          *(v14 - 1) = *(v13 - 1);
          *unint64_t v14 = v15;
          if (!(v12 + v11))
          {
            swift_bridgeObjectRetain();
            uint64_t v8 = v6 + v11 - 2;
            goto LABEL_15;
          }
          swift_bridgeObjectRetain();
          --v11;
          v13 -= 2;
          v14 += 2;
          if (v6 + v11 == 1)
          {
            uint64_t v8 = 0;
            goto LABEL_16;
          }
        }
        __break(1u);
        goto LABEL_19;
      }
LABEL_16:
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v8 = *(void *)(a4 + 16);
      uint64_t v6 = 0;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(a4 + 16);
    uint64_t v6 = 0;
  }
LABEL_17:
  *a1 = a4;
  a1[1] = v8;
  return v6;
}

uint64_t sub_1001317C0(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    _OWORD v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    id v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1001319C0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
LABEL_36:
    *uint64_t v5 = a4;
    v5[1] = v6;
    _OWORD v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v22 = -1 << *(unsigned char *)(a4 + 32);
  while (v9)
  {
    unint64_t v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    uint64_t result = sub_1000CDA70(*(void *)(a4 + 48) + 40 * v16, (uint64_t)v23);
    uint64_t v17 = v24;
    long long v18 = v23[1];
    *(_OWORD *)uint64_t v11 = v23[0];
    *(_OWORD *)(v11 + 16) = v18;
    *(void *)(v11 + 32) = v17;
    v11 += 40;
    if (v13 == a3)
    {
      uint64_t v13 = a3;
LABEL_35:
      uint64_t v7 = v22;
      goto LABEL_36;
    }
  }
  int64_t v19 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v19 >= v14) {
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v19);
  if (v20) {
    goto LABEL_23;
  }
  int64_t v21 = v12 + 2;
  ++v12;
  if (v19 + 1 >= v14) {
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20) {
    goto LABEL_16;
  }
  int64_t v12 = v19 + 1;
  if (v19 + 2 >= v14) {
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v6 + 8 * (v19 + 2));
  if (v20)
  {
    v19 += 2;
    goto LABEL_23;
  }
  int64_t v12 = v19 + 2;
  if (v19 + 3 >= v14) {
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v6 + 8 * (v19 + 3));
  if (v20)
  {
    v19 += 3;
    goto LABEL_23;
  }
  int64_t v21 = v19 + 4;
  int64_t v12 = v19 + 3;
  if (v19 + 4 >= v14)
  {
LABEL_34:
    unint64_t v9 = 0;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
LABEL_16:
    int64_t v19 = v21;
LABEL_23:
    unint64_t v9 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v19 << 6);
    int64_t v12 = v19;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v19 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v19 >= v14)
    {
      int64_t v12 = v14 - 1;
      goto LABEL_34;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t (*sub_100131BCC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000B7B50(v6, a2, a3);
  return sub_100131C34;
}

uint64_t (*sub_100131C38(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000B7BD8(v6, a2, a3);
  return sub_100131C34;
}

uint64_t (*sub_100131CA0(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000B7C60(v6, a2, a3);
  return sub_100131C34;
}

void sub_100131D08(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_100131D50(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1004623D0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1004623D0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_10003F604((unint64_t *)&unk_100575DB0, &qword_100575DA8);
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            sub_100005BFC(&qword_100575DA8);
            uint64_t v10 = sub_100131BCC(v13, i, a3);
            uint64_t v12 = *v11;
            swift_retain();
            ((void (*)(uint64_t (**)(), void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        type metadata accessor for BagProvider.Observer();
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100131F10(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1004623D0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1004623D0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_10003F604(&qword_100575D98, &qword_100575D90);
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            sub_100005BFC(&qword_100575D90);
            uint64_t v10 = sub_100131C38(v13, i, a3);
            id v12 = *v11;
            ((void (*)(void (**)(id *), void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_100009854(0, (unint64_t *)&qword_100578260);
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001320E0(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = result;
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1004623D0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (v5)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1004623D0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v8 <= a2)
      {
        if (v7 >= 1)
        {
          sub_10003F604(&qword_100575D68, &qword_100575D60);
          swift_bridgeObjectRetain();
          for (unint64_t i = 0; i != v7; ++i)
          {
            sub_100005BFC(&qword_100575D60);
            uint64_t v10 = sub_100131CA0(v13, i, a3);
            uint64_t v12 = *v11;
            swift_unknownObjectRetain();
            ((void (*)(uint64_t (**)(), void))v10)(v13, 0);
            *(void *)(v5 + 8 * i) = v12;
          }
          swift_bridgeObjectRelease();
          return a3;
        }
        goto LABEL_16;
      }
    }
    else
    {
      if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
      {
        sub_100005BFC(&qword_100579B20);
        swift_arrayInitWithCopy();
        return a3;
      }
      __break(1u);
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _sSo18UITabBarControllerC9MusicCoreE24playActivityFeatureNames015sourceChildViewC0SaySSGSo06UIViewC0CSg_tF_0()
{
  uint64_t v3 = (uint64_t)v0;
  id v4 = [v0 selectedTab];
  if (!v4)
  {
    sub_100005BFC((uint64_t *)&unk_100575D00);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_100466900;
    id v22 = [(id)v3 playActivityFeatureName];
    uint64_t v23 = sub_100460CB0();
    uint64_t v25 = v24;

    *(void *)(v21 + 32) = v23;
    *(void *)(v21 + 40) = v25;
    return v21;
  }
  uint64_t v5 = v4;
  id v6 = [v4 managingTabGroup];
  if (!v6)
  {
LABEL_17:
    sub_100005BFC((uint64_t *)&unk_100575D00);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_100466900;
    id v26 = [(id)v3 playActivityFeatureName];
    uint64_t v27 = sub_100460CB0();
    uint64_t v29 = v28;

    *(void *)(v21 + 32) = v27;
    *(void *)(v21 + 40) = v29;

    return v21;
  }
  uint64_t v7 = v6;
  id v8 = [v6 managingNavigationController];
  if (!v8)
  {

    goto LABEL_17;
  }
  unint64_t v9 = v8;
  uint64_t v47 = v7;
  unint64_t v10 = UITab.path.getter();
  unint64_t v48 = v10;
  swift_bridgeObjectRetain();
  id v11 = [v9 viewControllers];
  sub_100009854(0, (unint64_t *)&unk_100575D20);
  unint64_t v12 = sub_1004610A0();

  if (!(v12 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13) {
      goto LABEL_6;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1004623D0();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_22;
  }
LABEL_6:
  if ((v12 & 0xC000000000000001) != 0)
  {
    id v14 = (id)sub_100462170();
  }
  else
  {
    if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_41;
    }
    id v14 = *(id *)(v12 + 32);
  }
  uint64_t v1 = (uint64_t)v14;
  swift_bridgeObjectRelease();
  id v15 = [(id)v1 tab];
  if (!v15)
  {

LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v2 = v15;
  uint64_t v13 = (uint64_t)v9;
  swift_bridgeObjectRetain();
  sub_10013058C((uint64_t)v2, v10, (unint64_t *)&qword_100575DA0);
  unint64_t v9 = v16;
  char v18 = v17;
  swift_bridgeObjectRelease();
  if (v18)
  {
    swift_bridgeObjectRelease();

    goto LABEL_20;
  }
  if (v10 >> 62) {
    goto LABEL_42;
  }
  uint64_t v19 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = swift_bridgeObjectRelease();
    if (v19 < (uint64_t)v9) {
      break;
    }
    sub_100053DA0((uint64_t)v9, v19);

    unint64_t v10 = v48;
LABEL_20:
    unint64_t v9 = (void *)v13;
LABEL_24:
    sub_100005BFC((uint64_t *)&unk_100575D00);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_100466900;
    id v30 = [(id)v3 playActivityFeatureName];
    uint64_t v13 = sub_100460CB0();
    uint64_t v32 = v31;

    *(void *)(v1 + 32) = v13;
    *(void *)(v1 + 40) = v32;
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1004623D0();
      if (!v3)
      {
LABEL_36:
        swift_bridgeObjectRelease_n();
LABEL_37:
        swift_bridgeObjectRetain();
        uint64_t v43 = swift_bridgeObjectRetain();
        sub_1000B93E0(v43);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v1;
      }
    }
    else
    {
      uint64_t v3 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v3) {
        goto LABEL_36;
      }
    }
    uint64_t v44 = v1;
    uint64_t v45 = v9;
    uint64_t v46 = v5;
    sub_1000A01EC(0, v3 & ~(v3 >> 63), 0);
    if ((v3 & 0x8000000000000000) == 0)
    {
      uint64_t v33 = 0;
      do
      {
        if ((v10 & 0xC000000000000001) != 0) {
          id v34 = (id)sub_100462170();
        }
        else {
          id v34 = *(id *)(v10 + 8 * v33 + 32);
        }
        uint64_t v35 = v34;
        id v36 = [v34 playActivityFeatureName:v44, v45, v46, v47];
        uint64_t v37 = sub_100460CB0();
        uint64_t v39 = v38;

        unint64_t v41 = _swiftEmptyArrayStorage[2];
        unint64_t v40 = _swiftEmptyArrayStorage[3];
        if (v41 >= v40 >> 1) {
          sub_1000A01EC((char *)(v40 > 1), v41 + 1, 1);
        }
        ++v33;
        _swiftEmptyArrayStorage[2] = v41 + 1;
        uint64_t v42 = &_swiftEmptyArrayStorage[2 * v41];
        unsigned char v42[4] = v37;
        uint64_t v42[5] = v39;
      }
      while (v3 != v33);
      swift_bridgeObjectRelease_n();
      unint64_t v9 = v45;
      uint64_t v5 = v46;
      uint64_t v1 = v44;
      goto LABEL_37;
    }
LABEL_41:
    __break(1u);
LABEL_42:
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1004623D0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001327C4()
{
  return swift_release();
}

uint64_t *NSUserDefaults.mobileiPod.unsafeMutableAddressor()
{
  if (qword_100570958 != -1) {
    swift_once();
  }
  return &static NSUserDefaults.mobileiPod;
}

uint64_t NSUserDefaults.hasUserRequestedSubscriptionHidden.getter()
{
  sub_1000F37C0();
  sub_10000F810();
  NSUserDefaults.subscript.getter(&v2);
  if (v3)
  {
    uint64_t result = swift_dynamicCast();
    if (result) {
      return v1;
    }
  }
  else
  {
    sub_1000CADE4((uint64_t)&v2);
    return 0;
  }
  return result;
}

uint64_t NSUserDefaults.hasUserRequestedSubscriptionHidden.setter(char a1)
{
  id v4 = &type metadata for Bool;
  v3[0] = a1;
  sub_1000F37C0();
  sub_10000F810();
  return NSUserDefaults.subscript.setter((uint64_t)v3, v1, (uint64_t)&type metadata for NSUserDefaults.MobileiPod);
}

void *NSUserDefaults.MobileiPod.suiteName.unsafeMutableAddressor()
{
  return &static NSUserDefaults.MobileiPod.suiteName;
}

void sub_100132908()
{
  id v0 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v1 = sub_100460C70();
  id v2 = [v0 initWithSuiteName:v1];

  static NSUserDefaults.mobileiPod = (uint64_t)v2;
}

uint64_t static NSUserDefaults.mobileiPod.getter()
{
  if (qword_100570958 != -1) {
    swift_once();
  }
  uint64_t v0 = static NSUserDefaults.mobileiPod;
  id v1 = (id)static NSUserDefaults.mobileiPod;
  return v0;
}

unint64_t static NSUserDefaults.MobileiPod.suiteName.getter()
{
  return 0xD000000000000014;
}

BOOL NSUserDefaults.MobileiPod.init(rawValue:)(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_100524798;
  v6._object = a2;
  Swift::Int v4 = sub_100462490(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

unint64_t NSUserDefaults.MobileiPod.rawValue.getter()
{
  return 0xD00000000000001FLL;
}

Swift::Int sub_100132A54()
{
  return sub_100462900();
}

uint64_t sub_100132AAC()
{
  return sub_100460DA0();
}

Swift::Int sub_100132AC8()
{
  return sub_100462900();
}

uint64_t sub_100132B1C@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._uint64_t countAndFlagsBits = *a1;
  Swift::OpaquePointer v3 = (void *)a1[1];
  v4._rawValue = &off_1005247D0;
  v7._object = v3;
  Swift::Int v5 = sub_100462490(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_100132B70(void *a1@<X8>)
{
  *a1 = 0xD00000000000001FLL;
  a1[1] = 0x800000010048DE20;
}

void (*NSUserDefaults.hasUserRequestedSubscriptionHidden.modify(void *a1))(uint64_t a1, uint64_t a2)
{
  Swift::OpaquePointer v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_1000F37C0();
  v3[6] = sub_10000F810();
  NSUserDefaults.subscript.getter(v3);
  if (!v3[3])
  {
    sub_1000CADE4((uint64_t)v3);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v4 = 0;
    goto LABEL_6;
  }
  char v4 = *((unsigned char *)v3 + 57);
LABEL_6:
  *((unsigned char *)v3 + 56) = v4;
  return sub_100132C6C;
}

void sub_100132C6C(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)a1;
  char v3 = *(unsigned char *)(*(void *)a1 + 56);
  Swift::Int v5 = &type metadata for Bool;
  v4[0] = v3;
  NSUserDefaults.subscript.setter((uint64_t)v4, a2, (uint64_t)&type metadata for NSUserDefaults.MobileiPod);

  free(v2);
}

unint64_t sub_100132CD8()
{
  unint64_t result = qword_100575DC0;
  if (!qword_100575DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575DC0);
  }
  return result;
}

unsigned char *_s10MobileiPodOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100132DC8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NSUserDefaults.MobileiPod()
{
  return &type metadata for NSUserDefaults.MobileiPod;
}

id static ICUserIdentity.active.getter()
{
  id v0 = [(id)swift_getObjCClassFromMetadata() activeAccount];

  return v0;
}

id static ICUserIdentityStore.activeAccountDSID.getter()
{
  id v0 = [(id)swift_getObjCClassFromMetadata() defaultIdentityStore];
  id v1 = [self activeAccount];
  id v6 = 0;
  id v2 = [v0 DSIDForUserIdentity:v1 outError:&v6];

  id v3 = v6;
  if (!v2)
  {
    unsigned int v4 = v3;
    sub_10045BC90();

    swift_willThrow();
    swift_errorRelease();
    return 0;
  }
  return v2;
}

uint64_t static ICMusicKitRequestContext.music.getter()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v4[4] = sub_100134348;
  v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  _OWORD v4[2] = sub_100123BF8;
  v4[3] = &unk_10052F740;
  id v1 = _Block_copy(v4);
  id v2 = [v0 initWithBlock:v1];
  _Block_release(v1);
  swift_release();
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0) {
    return (uint64_t)v2;
  }
  __break(1u);
  return result;
}

id static ICURLSessionManager.musicSession.getter()
{
  id v0 = [self highPrioritySession];

  return v0;
}

double ICURLBag.subscript.getter@<D0>(_OWORD *a1@<X8>)
{
  sub_100460CB0();
  NSString v3 = sub_100460C70();
  swift_bridgeObjectRelease();
  id v4 = [v1 valueForBagKey:v3];

  if (v4)
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

{
  void *v1;
  NSString v3;
  id v4;
  double result;
  uint64_t vars8;

  NSString v3 = sub_100460C70();
  id v4 = [v1 valueForBagKey:v3];

  if (v4)
  {
    sub_100461FF0();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t *ICClientInfo.music.unsafeMutableAddressor()
{
  if (qword_100570960 != -1) {
    swift_once();
  }
  return &static ICClientInfo.music;
}

void sub_100133154(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    NSString v3 = (void *)v2;
    id v4 = a1;
    NSString v5 = sub_100460C70();
    NSString v6 = sub_100460C70();
    id v7 = [self clientInfoForMusicKitRequestWithClientIdentifier:v5 clientVersion:v6];

    [v3 setClientInfo:v7];
    id v8 = self;
    id v9 = v4;
    id v10 = [v8 defaultIdentityStore];
    [v3 setIdentityStore:v10];

    id v11 = self;
    id v12 = v9;
    id v13 = [v11 activeAccount];
    [v3 setIdentity:v13];
  }
}

void ICMusicSubscriptionStatusController.performDefaultActiveSubscriptionStatusRequest(completionHandler:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone((Class)ICStoreRequestContext);
  id v15 = sub_10013434C;
  uint64_t v16 = 0;
  id v11 = _NSConcreteStackBlock;
  uint64_t v12 = 1107296256;
  id v13 = sub_100123BF8;
  id v14 = &unk_10052F768;
  NSString v6 = _Block_copy(&v11);
  id v7 = [v5 initWithBlock:v6];
  _Block_release(v6);
  swift_release();
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
  }
  else
  {
    id v8 = [objc_allocWithZone((Class)ICMusicSubscriptionStatusRequest) initWithStoreRequestContext:v7];
    [v8 setShouldReturnLastKnownStatusOnly:1];
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a1;
    *(void *)(v9 + 24) = a2;
    id v15 = sub_1001343A0;
    uint64_t v16 = v9;
    id v11 = _NSConcreteStackBlock;
    uint64_t v12 = 1107296256;
    id v13 = sub_1000E1FE0;
    id v14 = &unk_10052F7B8;
    id v10 = _Block_copy(&v11);
    swift_retain();
    swift_release();
    [v2 performSubscriptionStatusRequest:v8 withCompletionHandler:v10];
    _Block_release(v10);
  }
}

void sub_1001334F4(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    NSString v3 = (void *)v2;
    id v4 = self;
    id v5 = a1;
    id v6 = [v4 defaultIdentityStore];
    [v3 setIdentityStore:v6];

    id v7 = [self activeAccount];
    [v3 setIdentity:v7];

    [v3 setAllowsExpiredBags:1];
    id v8 = objc_allocWithZone((Class)ICURLResponseAuthenticationProvider);
    id v9 = v5;
    id v10 = [v8 initWithUserInteractionLevel:1];
    [v3 setAuthenticationProvider:v10];
  }
}

BOOL ICMusicSubscriptionStatusCapabilities.hasVoiceActivatedCatalogPlaybackOnly.getter(char a1)
{
  return (a1 & 3) == 2;
}

uint64_t static ICStoreRequestContext.default(withConfigurationBlock:)(uint64_t a1, uint64_t a2)
{
  _OWORD v7[2] = a1;
  void v7[3] = a2;
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1001343C8;
  *(void *)(v3 + 24) = v7;
  aBlock[4] = sub_1001289F4;
  aBlock[5] = v3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100123BF8;
  uint64_t aBlock[3] = &unk_10052F808;
  id v4 = _Block_copy(aBlock);
  swift_retain();
  id v5 = [v2 initWithBlock:v4];
  _Block_release(v4);
  swift_release();
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v4 & 1) == 0) {
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

void sub_1001337A0(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = self;
    id v8 = a1;
    id v5 = [v4 defaultIdentityStore];
    [v3 setIdentityStore:v5];

    id v6 = [self activeAccount];
    [v3 setIdentity:v6];

    [v3 setAllowsExpiredBags:1];
    id v7 = [objc_allocWithZone((Class)ICURLResponseAuthenticationProvider) initWithUserInteractionLevel:1];
    [v3 setAuthenticationProvider:v7];

    if (qword_100570968 != -1) {
      swift_once();
    }
    [v3 setClientInfo:static ICClientInfo.storeFlow];
  }
}

void sub_100133934(void *a1, void (*a2)(void *))
{
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    id v5 = (void *)v4;
    id v6 = self;
    id v9 = a1;
    id v7 = [v6 defaultIdentityStore];
    [v5 setIdentityStore:v7];

    id v8 = [self activeAccount];
    [v5 setIdentity:v8];

    a2(v5);
  }
}

id static ICStoreRequestContext.current.getter()
{
  id v0 = [self activeAccount];
  id v1 = [objc_allocWithZone((Class)ICStoreRequestContext) initWithIdentity:v0];

  return v1;
}

uint64_t static ICStoreRequestContext.storeFlow.getter()
{
  id v0 = objc_allocWithZone((Class)ICStoreRequestContext);
  v4[4] = sub_100134344;
  v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  _OWORD v4[2] = sub_100123BF8;
  v4[3] = &unk_10052F830;
  id v1 = _Block_copy(v4);
  id v2 = [v0 initWithBlock:v1];
  _Block_release(v1);
  swift_release();
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if ((result & 1) == 0) {
    return (uint64_t)v2;
  }
  __break(1u);
  return result;
}

uint64_t *ICClientInfo.storeFlow.unsafeMutableAddressor()
{
  if (qword_100570968 != -1) {
    swift_once();
  }
  return &static ICClientInfo.storeFlow;
}

id sub_100133BF4()
{
  id result = [objc_allocWithZone((Class)ICClientInfo) initWithSystemApplicationType:0];
  static ICClientInfo.music = (uint64_t)result;
  return result;
}

id static ICClientInfo.music.getter()
{
  return sub_1000F00D4(&qword_100570960, (void **)&static ICClientInfo.music);
}

void *sub_100133C50()
{
  id result = sub_100133C70();
  static ICClientInfo.storeFlow = (uint64_t)result;
  return result;
}

void *sub_100133C70()
{
  id v0 = [objc_allocWithZone((Class)ICClientInfo) initWithSystemApplicationType:0];
  [v0 mutableCopy];

  sub_100461FF0();
  swift_unknownObjectRelease();
  sub_1001348D0();
  swift_dynamicCast();
  NSString v1 = sub_100460C70();
  [v3 setBagProfileVersion:v1];

  return v3;
}

id static ICClientInfo.storeFlow.getter()
{
  return sub_1000F00D4(&qword_100570968, (void **)&static ICClientInfo.storeFlow);
}

uint64_t ICURLBag.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v4;
  id v6 = v3;
  uint64_t v10 = sub_100461EA0();
  __chkstk_darwin(v10);
  id v13 = (char *)&v44 - v12;
  if (!*(void *)(a1 + 16))
  {
    sub_1001343E0();
    swift_allocError();
    *(_OWORD *)uint64_t v30 = 0u;
    *(_OWORD *)(v30 + 16) = 0u;
    *(void *)(v30 + 32) = 0;
    *(unsigned char *)(v30 + 40) = 2;
    return swift_willThrow();
  }
  uint64_t v52 = v11;
  uint64_t v58 = a1;
  id v14 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  id v15 = v14;
  sub_100053B44(0, 1);
  sub_100460CB0();
  NSString v16 = sub_100460C70();
  swift_bridgeObjectRelease();
  id v17 = [v6 valueForBagKey:v16];

  if (!v17)
  {
    swift_bridgeObjectRelease();
    sub_1001343E0();
    swift_allocError();
    *(void *)uint64_t v31 = v15;
    *(unsigned char *)(v31 + 40) = 0;
    return swift_willThrow();
  }
  uint64_t v46 = v10;
  uint64_t v47 = a3;
  uint64_t v49 = v13;
  uint64_t v50 = a2;
  uint64_t v48 = v5;
  sub_100461FF0();
  swift_unknownObjectRelease();
  sub_1000CD75C(v56, v57);
  sub_100007168((uint64_t)v57, (uint64_t)v56);
  uint64_t v18 = v58;
  uint64_t v19 = *(void *)(v58 + 16);
  id v51 = v15;
  if (v19)
  {
    id v20 = v15;
    uint64_t v21 = 0;
    id v45 = v20;
    id v22 = v20;
    while (1)
    {
      uint64_t v23 = *(void **)(v18 + 8 * v21 + 32);
      sub_100007168((uint64_t)v56, (uint64_t)&v54);
      id v24 = v23;
      sub_100005BFC(&qword_10057A900);
      if (!swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        sub_1001343E0();
        swift_allocError();
        unint64_t v41 = v40;
        void *v40 = v24;
        sub_100007168((uint64_t)v56, (uint64_t)(v40 + 1));
        *((unsigned char *)v41 + 40) = 1;
        goto LABEL_22;
      }
      uint64_t v25 = v53;
      uint64_t v26 = sub_100460CB0();
      if (*(void *)(v25 + 16) && (unint64_t v28 = sub_1000CD178(v26, v27), (v29 & 1) != 0))
      {
        sub_100007168(*(void *)(v25 + 56) + 32 * v28, (uint64_t)&v54);
      }
      else
      {
        long long v54 = 0u;
        long long v55 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*((void *)&v55 + 1)) {
        break;
      }
      ++v21;
      sub_100007118((uint64_t)v56);

      sub_1000CD75C(&v54, v56);
      id v22 = v24;
      if (v19 == v21) {
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
    sub_1000CADE4((uint64_t)&v54);
    sub_1001343E0();
    swift_allocError();
    *(void *)uint64_t v42 = v24;
    *(unsigned char *)(v42 + 40) = 0;
LABEL_22:
    id v43 = v24;
    swift_willThrow();
  }
  else
  {
    id v24 = v15;
LABEL_17:
    swift_bridgeObjectRelease();
    sub_100007168((uint64_t)v56, (uint64_t)&v54);
    id v34 = v49;
    uint64_t v33 = v50;
    char v35 = swift_dynamicCast();
    id v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
    if (v35)
    {
      uint64_t v37 = *(void *)(v33 - 8);
      v36(v34, 0, 1, v33);

      sub_100007118((uint64_t)v56);
      sub_100007118((uint64_t)v57);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v47, v34, v33);
    }
    v36(v34, 1, 1, v33);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v46);
    sub_1001343E0();
    swift_allocError();
    uint64_t v39 = v38;
    *uint64_t v38 = v24;
    sub_100007168((uint64_t)v56, (uint64_t)(v38 + 1));
    *((unsigned char *)v39 + 40) = 1;
    swift_willThrow();
  }
  sub_100007118((uint64_t)v56);
  return sub_100007118((uint64_t)v57);
}

BOOL static ICEnvironmentMonitorThermalPressureLevel.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

BOOL sub_1001342F4(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_100134308(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_10013431C(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_100134330(void *a1, void *a2)
{
  return *a2 < *a1;
}

uint64_t sub_100134350(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100134360()
{
  return swift_release();
}

uint64_t sub_100134368()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001343A0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1001343C8(void *a1)
{
  sub_100133934(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1001343D0()
{
  return swift_deallocObject();
}

unint64_t sub_1001343E0()
{
  unint64_t result = qword_100575DC8;
  if (!qword_100575DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575DC8);
  }
  return result;
}

unint64_t sub_100134438()
{
  unint64_t result = qword_100575DD0;
  if (!qword_100575DD0)
  {
    type metadata accessor for ICEnvironmentMonitorThermalPressureLevel(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575DD0);
  }
  return result;
}

void _s5ErrorOwxx(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 >= 2) {
    unsigned int v2 = *(_DWORD *)a1 + 2;
  }
  if (v2 == 1)
  {

    sub_100007118(a1 + 8);
  }
  else if (!v2)
  {
    id v3 = *(id *)a1;
  }
}

uint64_t _s5ErrorOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    id v6 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v7 = a2 + 8;
    uint64_t v8 = *(void *)(a2 + 32);
    *(void *)(a1 + 32) = v8;
    id v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    id v10 = v6;
    v9(a1 + 8, v7, v8);
    *(unsigned char *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    uint64_t v4 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 0;
    id v5 = v4;
  }
  return a1;
}

uint64_t _s5ErrorOwca(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {

      sub_100007118(a1 + 8);
    }
    else if (!v4)
    {
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v8 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      uint64_t v9 = (uint64_t)a2 + 8;
      uint64_t v10 = *((void *)a2 + 4);
      *(void *)(a1 + 32) = v10;
      long long v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
      id v12 = v8;
      v11(a1 + 8, v9, v10);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      long long v13 = *a2;
      long long v14 = a2[1];
      *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
      *(_OWORD *)a1 = v13;
      *(_OWORD *)(a1 + 16) = v14;
    }
    else
    {
      id v6 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
      id v7 = v6;
    }
  }
  return a1;
}

__n128 _s5ErrorOwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s5ErrorOwta(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {

      sub_100007118(a1 + 8);
    }
    else if (!v4)
    {
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t _s5ErrorOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t _s5ErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10013487C(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_100134898(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ICURLBag.Error()
{
  return &type metadata for ICURLBag.Error;
}

unint64_t sub_1001348D0()
{
  unint64_t result = qword_100575DD8;
  if (!qword_100575DD8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100575DD8);
  }
  return result;
}

unint64_t EnvironmentVariable.rawValue.getter()
{
  return 0xD000000000000013;
}

uint64_t EnvironmentVariable.isEnabled.getter()
{
  uint64_t v0 = _s9MusicCore19EnvironmentVariableO5valueSSSgvg_0();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    if (v0 == 49 && v1 == 0xE100000000000000
      || (sub_1004626E0() & 1) != 0
      || v2 == 1702195828 && v3 == 0xE400000000000000
      || (sub_1004626E0() & 1) != 0
      || v2 == 5457241 && v3 == 0xE300000000000000)
    {
      char v4 = 1;
    }
    else
    {
      char v4 = sub_1004626E0();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

BOOL EnvironmentVariable.init(rawValue:)(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_100524808;
  v6._object = a2;
  Swift::Int v4 = sub_100462490(v3, v6);
  swift_bridgeObjectRelease();
  return v4 != 0;
}

Swift::Int sub_100134A88()
{
  return sub_100462900();
}

uint64_t sub_100134AE0()
{
  return sub_100460DA0();
}

Swift::Int sub_100134AFC()
{
  return sub_100462900();
}

uint64_t sub_100134B50@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._uint64_t countAndFlagsBits = *a1;
  Swift::OpaquePointer v3 = (void *)a1[1];
  v4._rawValue = &off_100524840;
  v7._object = v3;
  Swift::Int v5 = sub_100462490(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_100134BA4(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x800000010048E150;
}

uint64_t _s9MusicCore19EnvironmentVariableO5valueSSSgvg_0()
{
  id v0 = [self processInfo];
  id v1 = [v0 environment];

  uint64_t v2 = sub_100460A90();
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1000CD178(0xD000000000000013, 0x800000010048E150), (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(*(void *)(v2 + 56) + 16 * v3);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = 0;
  }
  swift_bridgeObjectRelease();
  return v5;
}

unint64_t sub_100134CA8()
{
  unint64_t result = qword_100575DE0;
  if (!qword_100575DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575DE0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EnvironmentVariable(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100134D98);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EnvironmentVariable()
{
  return &type metadata for EnvironmentVariable;
}

uint64_t StagedInstall.isInstalled.getter(char a1)
{
  return a1 & 1;
}

uint64_t sub_100134DD8()
{
  uint64_t v0 = sub_10045D310();
  sub_1000096D0(v0, qword_100575DE8);
  sub_100009688(v0, (uint64_t)qword_100575DE8);
  return sub_10045D300();
}

uint64_t static StagedInstall.current()()
{
  uint64_t v0 = sub_100005BFC(&qword_100571720);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v52[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_10045BDE0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  Swift::String v7 = &v52[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = &v52[-v9];
  __chkstk_darwin(v8);
  id v12 = &v52[-v11];
  if (qword_1005710B8 != -1) {
    swift_once();
  }
  if (static DeviceCapabilities.isInternalInstall != 1) {
    return 2;
  }
  uint64_t v55 = v4;
  if (qword_100570970 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_10045D310();
  sub_100009688(v13, (uint64_t)qword_100575DE8);
  long long v14 = sub_10045D2F0();
  os_log_type_t v15 = sub_100461770();
  if (os_log_type_enabled(v14, v15))
  {
    NSString v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Checking for a staged install of Music", v16, 2u);
    swift_slowDealloc();
  }

  sub_10045BD00();
  id v17 = [self defaultManager];
  sub_10045BD90();
  NSString v18 = sub_100460C70();
  swift_bridgeObjectRelease();
  unsigned int v19 = [v17 fileExistsAtPath:v18];

  id v20 = sub_10045D2F0();
  if (!v19)
  {
    os_log_type_t v25 = sub_100461770();
    if (!os_log_type_enabled(v20, v25)) {
      goto LABEL_25;
    }
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    uint64_t v27 = "✅ No staged copy found";
LABEL_24:
    _os_log_impl((void *)&_mh_execute_header, v20, v25, v27, v26, 2u);
    swift_slowDealloc();
LABEL_25:

LABEL_26:
    (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v12, v3);
    return 2;
  }
  os_log_type_t v21 = sub_100461750();
  if (os_log_type_enabled(v20, v21))
  {
    id v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Found Music.app in staged_system_apps", v22, 2u);
    swift_slowDealloc();
  }

  uint64_t v23 = sub_10045BE00();
  unint64_t v28 = v24;
  switch(v24 >> 62)
  {
    case 1uLL:
      uint64_t v36 = (int)v23;
      uint64_t v37 = v23 >> 32;
      goto LABEL_21;
    case 2uLL:
      uint64_t v36 = *(void *)(v23 + 16);
      uint64_t v37 = *(void *)(v23 + 24);
LABEL_21:
      if (v36 == v37) {
        goto LABEL_22;
      }
      goto LABEL_16;
    case 3uLL:
      goto LABEL_22;
    default:
      if ((v24 & 0xFF000000000000) == 0)
      {
LABEL_22:
        sub_1000070C0(v23, v24);
        id v20 = sub_10045D2F0();
        os_log_type_t v25 = sub_100461750();
        if (!os_log_type_enabled(v20, v25)) {
          goto LABEL_25;
        }
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v26 = 0;
        uint64_t v27 = "Unable to read data of staged executable";
        goto LABEL_24;
      }
LABEL_16:
      uint64_t v54 = v23;
      id v29 = [self mainBundle];
      id v30 = [v29 executableURL];

      if (!v30)
      {
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v2, 1, 1, v3);
LABEL_29:
        sub_100010430((uint64_t)v2);
        uint64_t v43 = v54;
LABEL_30:
        uint64_t v39 = sub_10045D2F0();
        os_log_type_t v40 = sub_100461750();
        if (os_log_type_enabled(v39, v40))
        {
          unint64_t v41 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v41 = 0;
          _os_log_impl((void *)&_mh_execute_header, v39, v40, "Unable to read data of running executable", v41, 2u);
          swift_slowDealloc();
        }

        sub_1000070C0(v43, v28);
        goto LABEL_26;
      }
      sub_10045BD80();

      uint64_t v31 = v55;
      uint64_t v32 = v7;
      uint64_t v33 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v55 + 32);
      v33(v2, v32, v3);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v31 + 56))(v2, 0, 1, v3);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v31 + 48))(v2, 1, v3) == 1) {
        goto LABEL_29;
      }
      v33(v10, v2, v3);
      uint64_t v34 = sub_10045BE00();
      unint64_t v42 = v35;
      uint64_t v43 = v54;
      uint64_t v44 = v34;
      switch(v35 >> 62)
      {
        case 1uLL:
          uint64_t v49 = (int)v34;
          uint64_t v50 = v34 >> 32;
          goto LABEL_40;
        case 2uLL:
          uint64_t v49 = *(void *)(v34 + 16);
          uint64_t v50 = *(void *)(v34 + 24);
LABEL_40:
          if (v49 == v50) {
            goto LABEL_41;
          }
          goto LABEL_35;
        case 3uLL:
          goto LABEL_41;
        default:
          if ((v35 & 0xFF000000000000) == 0)
          {
LABEL_41:
            (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v10, v3);
            sub_1000070C0(v44, v42);
            goto LABEL_30;
          }
LABEL_35:
          LODWORD(v45) = sub_100135BBC(v34, v35, v54, v28);
          uint64_t v46 = sub_10045D2F0();
          if (v45)
          {
            os_log_type_t v47 = sub_100461770();
            if (!os_log_type_enabled(v46, v47)) {
              goto LABEL_45;
            }
            int v53 = (int)v45;
            id v45 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v45 = 0;
            uint64_t v48 = "Identical staged copy found";
          }
          else
          {
            os_log_type_t v47 = sub_100461750();
            if (!os_log_type_enabled(v46, v47)) {
              goto LABEL_45;
            }
            int v53 = (int)v45;
            id v45 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v45 = 0;
            uint64_t v48 = "Found different binary in staged applications";
          }
          _os_log_impl((void *)&_mh_execute_header, v46, v47, v48, v45, 2u);
          swift_slowDealloc();
          LOBYTE(v45) = v53;
LABEL_45:

          sub_1000070C0(v44, v42);
          sub_1000070C0(v43, v28);
          id v51 = *(void (**)(unsigned char *, uint64_t))(v55 + 8);
          v51(v10, v3);
          v51(v12, v3);
          uint64_t result = v45 & 1;
          break;
      }
      return result;
  }
}

uint64_t sub_100135660@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  Swift::String v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_10006922C(a2, a3);
      uint64_t v10 = (char *)sub_10045BB00();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_10045BB30();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_10045BB20();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1001358C4);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1000070C0(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      id v17 = (char *)sub_10045BB00();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_10045BB30();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_10045BB20();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1001358D4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_10006922C(a1, a2);
      char v5 = sub_100135B04((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_1000070C0(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_100135B04(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_1000070C0(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_100135660((uint64_t)__s1, a3, a4, &v14);
      sub_1000070C0(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_100135B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_10045BB00();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_10045BB30();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_10045BB20();
  sub_100135660(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_100135BBC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x100135CF8);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_20;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v15 = 1;
            }
            else
            {
              sub_10006922C(a3, a4);
              char v15 = sub_1001358D4(a1, a2, a3, a4);
            }
          }
          else
          {
            char v15 = 0;
          }
          return v15 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_21;
        case 3uLL:
          char v15 = v8 == 0;
          return v15 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_19;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t getEnumTagSinglePayload for StagedInstall(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StagedInstall(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100135E84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StagedInstall()
{
  return &type metadata for StagedInstall;
}

char *sub_100135EBC(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_1004623D0())
  {
    int v3 = (char *)_swiftEmptyArrayStorage;
    uint64_t v4 = 4;
    uint64_t v15 = v2;
    while (1)
    {
      unsigned int v6 = (a1 & 0xC000000000000001) != 0 ? (UIImage *)sub_100462170() : (UIImage *)*(id *)(a1 + 8 * v4);
      BOOL v7 = v6;
      uint64_t v8 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      uint64_t v9 = sub_100136FD0(v4 - 4, v6);
      uint64_t v11 = v10;

      if (v11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int v3 = sub_1000511A8(0, *((void *)v3 + 2) + 1, 1, v3);
        }
        unint64_t v13 = *((void *)v3 + 2);
        unint64_t v12 = *((void *)v3 + 3);
        if (v13 >= v12 >> 1) {
          int v3 = sub_1000511A8((char *)(v12 > 1), v13 + 1, 1, v3);
        }
        *((void *)v3 + 2) = v13 + 1;
        uint64_t v5 = &v3[16 * v13];
        *((void *)v5 + 4) = v9;
        *((void *)v5 + 5) = v11;
        uint64_t v2 = v15;
      }
      ++v4;
      if (v8 == v2) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  int v3 = (char *)_swiftEmptyArrayStorage;
LABEL_18:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_100136034(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v55 = sub_10045BCE0();
  uint64_t v4 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v54 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10045BDE0();
  __chkstk_darwin(v6);
  uint64_t v60 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v48 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v49 = (unint64_t)(v10 + 63) >> 6;
  unsigned int v53 = enum case for URL.DirectoryHint.inferFromPath(_:);
  id v51 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v52 = (void (**)(char *, void, uint64_t))(v4 + 104);
  uint64_t v50 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v56 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  v46[0] = (char *)_swiftEmptyArrayStorage;
  *(void *)&long long v15 = 136446210;
  long long v47 = v15;
  v46[1] = (char *)&type metadata for Any + 8;
  if (!v12) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v57 = (v12 - 1) & v12;
  int64_t v58 = v14;
  for (unint64_t i = __clz(__rbit64(v12)) | (v14 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v18 << 6))
  {
    uint64_t v21 = 16 * i;
    size_t v22 = (uint64_t *)(*(void *)(v56 + 48) + v21);
    uint64_t v23 = *v22;
    char v24 = (void *)v22[1];
    os_log_type_t v25 = (uint64_t *)(*(void *)(v56 + 56) + v21);
    uint64_t v26 = *v25;
    unint64_t v27 = v25[1];
    swift_bridgeObjectRetain();
    sub_10006922C(v26, v27);
    if (qword_100570978 != -1) {
      swift_once();
    }
    uint64_t v28 = v6;
    sub_100009688(v6, (uint64_t)qword_100575E00);
    v61[0] = 47;
    v61[1] = 0xE100000000000000;
    v62._uint64_t countAndFlagsBits = v23;
    uint64_t v59 = v24;
    v62._object = v24;
    sub_100460E50(v62);
    char v30 = v54;
    uint64_t v29 = v55;
    (*v52)(v54, v53, v55);
    sub_10000F810();
    sub_10045BDD0();
    (*v51)(v30, v29);
    swift_bridgeObjectRelease();
    sub_10045BE60();
    unint64_t v31 = v27;
    if (v2)
    {
      if (qword_100570980 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_10045D310();
      sub_100009688(v32, (uint64_t)qword_100575E18);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v33 = sub_10045D2F0();
      os_log_type_t v34 = sub_100461750();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = swift_slowAlloc();
        v61[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = v47;
        v61[3] = v2;
        swift_errorRetain();
        sub_100005BFC((uint64_t *)&unk_100575460);
        uint64_t v36 = sub_100460D40();
        *(void *)(v35 + 4) = sub_10001FCAC(v36, v37, v61);
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "Tap-to-Radar Attachment file write failed with error: %{public}s", (uint8_t *)v35, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
      }
      swift_errorRelease();
      uint64_t v6 = v28;
      (*v50)(v60, v28);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1000070C0(v26, v27);
      uint64_t v2 = 0;
      unint64_t v12 = v57;
      int64_t v14 = v58;
      if (v57) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v38 = v60;
      uint64_t v39 = sub_10045BD90();
      uint64_t v41 = v40;
      (*v50)(v38, v6);
      swift_bridgeObjectRelease();
      sub_1000070C0(v26, v31);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1000511A8(0, *((void *)v46[0] + 2) + 1, 1, v46[0]);
        v46[0] = (char *)result;
      }
      unint64_t v12 = v57;
      int64_t v14 = v58;
      unint64_t v43 = *((void *)v46[0] + 2);
      unint64_t v42 = *((void *)v46[0] + 3);
      if (v43 >= v42 >> 1)
      {
        uint64_t result = (uint64_t)sub_1000511A8((char *)(v42 > 1), v43 + 1, 1, v46[0]);
        v46[0] = (char *)result;
      }
      uint64_t v44 = v46[0];
      *((void *)v46[0] + 2) = v43 + 1;
      id v45 = &v44[16 * v43];
      *((void *)v45 + 4) = v39;
      *((void *)v45 + 5) = v41;
      if (v12) {
        goto LABEL_4;
      }
    }
LABEL_5:
    BOOL v17 = __OFADD__(v14, 1);
    int64_t v18 = v14 + 1;
    if (v17)
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v49) {
      goto LABEL_38;
    }
    unint64_t v19 = *(void *)(v48 + 8 * v18);
    if (!v19) {
      break;
    }
LABEL_17:
    uint64_t v57 = (v19 - 1) & v19;
    int64_t v58 = v18;
  }
  int64_t v20 = v18 + 1;
  if (v18 + 1 >= v49) {
    goto LABEL_38;
  }
  unint64_t v19 = *(void *)(v48 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v18 + 2;
  if (v18 + 2 >= v49) {
    goto LABEL_38;
  }
  unint64_t v19 = *(void *)(v48 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v18 + 3;
  if (v18 + 3 >= v49) {
    goto LABEL_38;
  }
  unint64_t v19 = *(void *)(v48 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v18 + 4;
  if (v18 + 4 >= v49)
  {
LABEL_38:
    swift_release();
    return (uint64_t)v46[0];
  }
  unint64_t v19 = *(void *)(v48 + 8 * v20);
  if (v19)
  {
LABEL_16:
    int64_t v18 = v20;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v18 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v18 >= v49) {
      goto LABEL_38;
    }
    unint64_t v19 = *(void *)(v48 + 8 * v18);
    ++v20;
    if (v19) {
      goto LABEL_17;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1001366FC@<X0>(uint64_t a1@<X3>, unint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, int a5@<W7>, uint64_t a6@<X8>)
{
  int v36 = a5;
  uint64_t v34 = a1;
  uint64_t v35 = a4;
  uint64_t v9 = sub_100005BFC(&qword_100575490);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10045BAD0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  long long v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005710B8 != -1) {
    swift_once();
  }
  if (static DeviceCapabilities.isInternalInstall == 1)
  {
    sub_10045BAB0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
    if (result == 1)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1004623D0();
      swift_bridgeObjectRelease();
      uint64_t v32 = v12;
      uint64_t v33 = a6;
      if (v28) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v32 = v12;
      uint64_t v33 = a6;
      if (v17) {
        goto LABEL_8;
      }
    }
    if (!*(void *)(a3 + 16))
    {
LABEL_15:
      unint64_t v22 = swift_bridgeObjectRetain();
      unint64_t v31 = sub_100135EBC(v22);
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_100136034(a3);
      sub_100005BFC(&qword_100572A60);
      sub_10045BA10();
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1004669C0;
      uint64_t v29 = v24;
      sub_10045B9E0();
      sub_10045B9E0();
      id v25 = [self mainBundle];
      id v26 = [v25 bundleIdentifier];

      uint64_t v30 = v13;
      if (v26)
      {
        sub_100460CB0();
      }
      sub_10045B9E0();
      swift_bridgeObjectRelease();
      unint64_t v27 = v31;
      uint64_t v37 = (uint64_t)v31;
      sub_100005BFC(&qword_100577430);
      sub_100120E60();
      sub_100460B80();
      sub_10045B9E0();
      swift_bridgeObjectRelease();
      uint64_t v37 = v23;
      sub_100460B80();
      sub_10045B9E0();
      swift_bridgeObjectRelease();
      uint64_t v37 = v35;
      sub_100460B80();
      sub_10045B9E0();
      swift_bridgeObjectRelease();
      uint64_t v37 = (uint64_t)v27;
      sub_1000B93E0(v23);
      swift_bridgeObjectRelease();
      sub_10045B9E0();
      swift_bridgeObjectRelease();
      sub_10045B9E0();
      swift_bridgeObjectRelease();
      sub_10045BA30();
      sub_10045BA50();
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v15, v32);
    }
LABEL_8:
    id v18 = [self defaultManager];
    if (qword_100570978 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_10045BDE0();
    sub_100009688(v19, (uint64_t)qword_100575E00);
    NSFileManager.createDirectoryIfNeeded(at:)();

    goto LABEL_15;
  }
  uint64_t v20 = sub_10045BDE0();
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);

  return v21(a6, 1, 1, v20);
}

uint64_t sub_100136DB0()
{
  uint64_t v0 = sub_10045BCE0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100005BFC(&qword_100571720);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10045BDE0();
  sub_1000096D0(v7, qword_100575E00);
  sub_100009688(v7, (uint64_t)qword_100575E00);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for URL.DirectoryHint.inferFromPath(_:), v0);
  return sub_10045BDC0();
}

uint64_t sub_100136F50()
{
  uint64_t v0 = sub_10045D310();
  sub_1000096D0(v0, qword_100575E18);
  sub_100009688(v0, (uint64_t)qword_100575E18);
  return sub_10045D300();
}

uint64_t sub_100136FD0(uint64_t a1, UIImage *a2)
{
  uint64_t v4 = sub_10045BCE0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10045BDE0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v24 - v13;
  if (qword_100570978 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_100009688(v8, (uint64_t)qword_100575E00);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v15, v8);
  unint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  sub_100462120(24);
  swift_bridgeObjectRelease();
  unint64_t v25 = 0xD000000000000012;
  unint64_t v26 = 0x8000000100493120;
  v24[1] = a1;
  v27._uint64_t countAndFlagsBits = sub_100462660();
  sub_100460E50(v27);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 1735420462;
  v28._object = (void *)0xE400000000000000;
  sub_100460E50(v28);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for URL.DirectoryHint.inferFromPath(_:), v4);
  sub_10000F810();
  sub_10045BDD0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  uint64_t v17 = UIImageJPEGRepresentation(a2, 85.0);
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = sub_10045BE50();
    unint64_t v21 = v20;

    sub_10045BE60();
    sub_1000070C0(v19, v21);
  }
  uint64_t v22 = sub_10045BD90();
  v16(v14, v8);
  return v22;
}

uint64_t static CloudLibrary.presentCloudLibraryEnabler(context:presentationSource:style:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  *(unsigned char *)(v3 + 89) = a1;
  *(void *)(v3 + 32) = sub_100461280();
  *(void *)(v3 + 40) = sub_100461270();
  uint64_t v5 = sub_100461200();
  *(void *)(v3 + 48) = v5;
  *(void *)(v3 + 56) = v4;
  return _swift_task_switch(sub_10013754C, v5, v4);
}

uint64_t sub_10013754C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 16);
  char v3 = *(unsigned char *)(v0 + 89);
  uint64_t v4 = sub_100461270();
  *(void *)(v0 + 64) = v4;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  *(unsigned char *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v2;
  *(void *)(v5 + 32) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10013766C;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 88, v4, &protocol witness table for MainActor, 0xD00000000000003DLL, 0x800000010048E630, sub_10013C994, v5, &type metadata for Bool);
}

uint64_t sub_10013766C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_100141710, v3, v2);
}

void sub_1001377CC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_100137838(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100005BFC((uint64_t *)&unk_100576380);
    uint64_t v2 = (void *)sub_100462420();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_100007168(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    void v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1000CD75C(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1000CD75C(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1000CD75C(v36, v37);
    sub_1000CD75C(v37, &v33);
    uint64_t result = sub_1004620A0(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1000CD75C(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1001327C4();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100137C00(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100005BFC((uint64_t *)&unk_100576380);
    uint64_t v2 = (void *)sub_100462420();
  }
  else
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = v17[1];
    *(void *)&v36[0] = *v17;
    *((void *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_1000CD75C(&v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_1000CD75C(v35, v36);
    sub_1000CD75C(v36, &v32);
    uint64_t result = sub_1004620A0(v2[5]);
    uint64_t v19 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~v6[v20 >> 6]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~v6[v20 >> 6])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = v6[v21];
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)((char *)v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_1000CD75C(&v32, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_1001327C4();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t *CloudLibrary.EnablementContext.action.unsafeMutableAddressor()
{
  if (qword_100570988 != -1) {
    swift_once();
  }
  return &static CloudLibrary.EnablementContext.action;
}

uint64_t *CloudLibrary.StatusObserver.shared.unsafeMutableAddressor()
{
  if (qword_100570990 != -1) {
    swift_once();
  }
  return &static CloudLibrary.StatusObserver.shared;
}

uint64_t CloudLibrary.EnablementContext.title.getter()
{
  uint64_t v0 = sub_10045C2A0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100460C60();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  sub_100460BF0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v8 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v9 = sub_100460D20();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

uint64_t CloudLibrary.EnablementContext.message.getter()
{
  uint64_t v0 = sub_10045C2A0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100460C60();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  sub_100460BF0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v8 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v9 = sub_100460D20();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  return v9;
}

void UIView.CompressionResistancePriority.vertical.setter(float a1)
{
  *(float *)(v1 + 4) = a1;
}

CFRange (__swiftcall *UIView.CompressionResistancePriority.vertical.modify())(__C::_NSRange)
{
  return CFRange.init(_:);
}

uint64_t static CloudLibrary.UpdateContext.__derived_struct_equals(_:_:)(int a1, unsigned int a2, float a3, float a4)
{
  return (a3 == a4) & ~(a1 ^ a2);
}

BOOL sub_1001385D0(float *a1, float *a2)
{
  return *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2 && a1[1] == a2[1];
}

unint64_t CloudLibrary.FailureType.rawValue.getter(int a1)
{
  return ~a1 | 0xFFFFFFFFFFFFFF00;
}

Swift::Int sub_10013860C()
{
  uint64_t v1 = *v0;
  sub_1004628B0();
  sub_1004628C0(~v1);
  return sub_100462900();
}

void sub_100138654()
{
  sub_1004628C0(~(unint64_t)*v0);
}

Swift::Int sub_100138684()
{
  uint64_t v1 = *v0;
  sub_1004628B0();
  sub_1004628C0(~v1);
  return sub_100462900();
}

uint64_t sub_1001386C8@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s9MusicCore12CloudLibraryO11FailureTypeO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1001386F4(unint64_t *a1@<X8>)
{
  *a1 = ~(unint64_t)*v1;
}

BOOL CloudLibrary.Status.shouldDisplayBanner.getter(uint64_t a1)
{
  if (qword_100570990 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = sub_100005BFC(&qword_100575E50);
  UserDefault.wrappedValue.getter(v2, (uint64_t)&v4);
  if (v4) {
    return 0;
  }
  if (a1 >> 30 == 1) {
    return a1 & 1;
  }
  return a1 >> 30 != 2 || (unint64_t)(a1 - 0x80000000) >= 3;
}

BOOL CloudLibrary.Status.shouldShowDismissButton.getter(uint64_t a1)
{
  return a1 >> 30 != 1 && (a1 >> 30 != 2 || a1 != 2147483652);
}

uint64_t CloudLibrary.Status.shouldShowActionButton.getter(unint64_t a1)
{
  BOOL v1 = a1 >> 1 == 1073741825;
  if (a1 >> 30 != 2) {
    BOOL v1 = 0;
  }
  return !(a1 >> 30) || v1;
}

void (*CloudLibrary.Status.action.getter(unint64_t a1))()
{
  BOOL v1 = sub_100138898;
  if (a1 >> 30)
  {
    if (a1 >> 30 != 2) {
      return 0;
    }
    BOOL v1 = sub_100138898;
    if (a1 >> 1 != 1073741825) {
      return 0;
    }
  }
  return v1;
}

void sub_100138898()
{
  if (qword_100570990 != -1) {
    swift_once();
  }
  CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(0, 0);
}

BOOL CloudLibrary.Status.shouldShowLoadingView.getter(uint64_t a1)
{
  return a1 >> 30 == 1 || a1 >> 30 == 2 && a1 == 2147483652;
}

unint64_t CloudLibrary.Status.progress.getter(unint64_t a1)
{
  unint64_t v1 = HIDWORD(a1);
  if ((a1 & 0xC0000000) != 0x40000000) {
    unint64_t v1 = 0;
  }
  return v1 | ((unint64_t)((a1 & 0xC0000000) != 0x40000000) << 32);
}

uint64_t CloudLibrary.Status.shouldShowInSidebar.getter(uint64_t a1)
{
  unsigned int v1 = a1 >> 30;
  BOOL v2 = (a1 & 0xFFFFFFFFFFFFFFFELL) == 2147483650;
  if (a1 == 2147483652) {
    BOOL v2 = 1;
  }
  BOOL v3 = v1 >= 2;
  BOOL v4 = v1 == 2 && v2;
  return !v3 || v4;
}

BOOL sub_10013899C(uint64_t *a1, uint64_t *a2)
{
  return _s9MusicCore12CloudLibraryO6StatusO21__derived_enum_equalsySbAE_AEtFZ_0(*a1, *a2);
}

uint64_t sub_1001389A8()
{
  uint64_t v0 = sub_10045C2A0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100460C60();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  unint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v13[-v6];
  sub_100460BF0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 16))(v5, v7, v1);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v8 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v9 = sub_100460D20();
  uint64_t v11 = v10;
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v2 + 8))(v7, v1);
  static CloudLibrary.EnablementContext.action = v9;
  *(void *)algn_100586498 = v11;
  return result;
}

uint64_t static CloudLibrary.EnablementContext.action.getter()
{
  if (qword_100570988 != -1) {
    swift_once();
  }
  uint64_t v0 = static CloudLibrary.EnablementContext.action;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_100138BF4()
{
  type metadata accessor for CloudLibrary.StatusObserver(0);
  swift_allocObject();
  uint64_t result = sub_100138C90();
  static CloudLibrary.StatusObserver.shared = result;
  return result;
}

uint64_t static CloudLibrary.StatusObserver.shared.getter()
{
  if (qword_100570990 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_100138C90()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100005BFC((uint64_t *)&unk_100575E68);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v32 = 2;
  v31[0] = 0xD000000000000014;
  v31[1] = 0x800000010048E3D0;
  id v6 = [self standardUserDefaults];
  sub_10000F810();
  UserDefault.init(wrappedValue:defaults:key:)((uint64_t)&v32, (uint64_t)v6, (uint64_t)v31, (uint64_t)&type metadata for String, (char *)&v33);
  uint64_t v7 = v34;
  char v8 = v35;
  *(_OWORD *)(v1 + 16) = v33;
  *(void *)(v1 + 32) = v7;
  *(unsigned char *)(v1 + 40) = v8;
  *(void *)(v1 + 48) = _swiftEmptyArrayStorage;
  if (qword_100570808 != -1) {
    swift_once();
  }
  *(void *)(v1 + 56) = static ApplicationCapabilities.Controller.shared;
  *(void *)(v1 + 64) = _swiftEmptyArrayStorage;
  *(void *)(v1 + 72) = _swiftEmptyArrayStorage;
  *(void *)(v1 + 80) = 0;
  *(void *)(v1 + 88) = 0;
  uint64_t v9 = v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver__status;
  *(void *)&long long v33 = 0x80000000;
  swift_retain();
  sub_10045D6D0();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v3 + 32))(v9, v5, v2);
  *(void *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext) = 2;
  sub_100005BFC(&qword_100574E60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1004668C0;
  if (qword_100570868 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange;
  v12.CFIndex location = static ApplicationCapabilities.NotificationNames.userSubscriptionStateDidChange;
  v12.length = *(void *)(v1 + 56);
  CFRange v13 = CFRange.init(_:)(v12);
  *(void *)(inited + 56) = &type metadata for NotificationTrigger;
  *(void *)(inited + 64) = &protocol witness table for NotificationTrigger;
  *(CFRange *)(inited + 32) = v13;
  uint64_t v14 = qword_100570888;
  id v15 = v11;
  swift_retain();
  if (v14 != -1) {
    swift_once();
  }
  int64_t v16 = (void *)static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange;
  v17.CFIndex location = static ApplicationCapabilities.NotificationNames.isCloudLibraryEnabledDidChange;
  v17.length = *(void *)(v1 + 56);
  CFRange v18 = CFRange.init(_:)(v17);
  *(void *)(inited + 96) = &type metadata for NotificationTrigger;
  *(void *)(inited + 104) = &protocol witness table for NotificationTrigger;
  *(CFRange *)(inited + 72) = v18;
  uint64_t v19 = (void *)MPCloudControllerCloudLibraryFailureDidChangeNotification;
  CFRange v20 = CFRange.init(_:)((__C::_NSRange)MPCloudControllerCloudLibraryFailureDidChangeNotification);
  *(void *)(inited + 136) = &type metadata for NotificationTrigger;
  *(void *)(inited + 144) = &protocol witness table for NotificationTrigger;
  *(CFRange *)(inited + 112) = v20;
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for Whitetail.Binding();
  swift_allocObject();
  id v22 = v16;
  swift_retain();
  id v23 = v19;
  Whitetail.Binding.init(_:needsInitialConfiguration:configurationBlock:)(inited, 1, (uint64_t)sub_10014145C, v21);
  swift_beginAccess();
  sub_100461070();
  if (*(void *)((*(void *)(v1 + 72) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v1 + 72) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1004610F0();
  sub_100461150();
  sub_1004610C0();
  swift_endAccess();
  BOOL v24 = (void *)MPCloudControllerIsUpdateInProgressDidChangeNotification;
  uint64_t v25 = self;
  id v26 = v24;
  id v27 = [v25 sharedCloudController];
  uint64_t v28 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for NotificationObserver();
  swift_allocObject();
  *(void *)(v1 + 80) = NotificationObserver.init(name:object:dispatchOnMainThread:usesLocalNotificationCenter:handler:)(v26, (uint64_t)v27, 1, 1, (uint64_t)sub_100141464, v28);
  swift_release();
  return v1;
}

uint64_t property wrapper backing initializer of CloudLibrary.StatusObserver.status()
{
  return sub_10045D6D0();
}

void sub_100139168()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v1 = Strong;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  switch(v9)
  {
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    default:
      char v2 = sub_1004626E0();
      swift_bridgeObjectRelease();
      if ((v2 & 1) == 0)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_10045D710();
        swift_release();
        swift_release();
        uint64_t v6 = v7[0];
        swift_getKeyPath();
        swift_getKeyPath();
        v7[0] = 2147483649;
        swift_retain();
        sub_10045D720();
        sub_10013ACF0(v6);
        goto LABEL_9;
      }
LABEL_5:
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_10045D710();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if ((v7[0] & 0x10000) != 0)
      {
LABEL_9:
        swift_release();
        return;
      }
      id v3 = [self sharedCloudController];
      if (!v3)
      {
        __break(1u);
        JUMPOUT(0x100139520);
      }
      uint64_t v4 = v3;
      void v7[4] = sub_10014146C;
      v7[5] = v1;
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 1107296256;
      _OWORD v7[2] = sub_1000E1FE0;
      void v7[3] = &unk_1005300C8;
      unint64_t v5 = _Block_copy(v7);
      swift_retain();
      swift_release();
      [v4 loadLastKnownEnableICMLErrorStatusWithCompletionHander:v5];
      swift_release();
      _Block_release(v5);

      return;
  }
}

uint64_t sub_100139530(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10045F950();
  uint64_t v18 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10045F980();
  uint64_t v9 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009854(0, (unint64_t *)&qword_100576320);
  __C::_NSRange v12 = (void *)sub_1004618F0();
  CFRange v13 = (void *)swift_allocObject();
  void v13[2] = a2;
  void v13[3] = a1;
  v13[4] = a3;
  aBlock[4] = sub_1001414BC;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1000F6CC0;
  uint64_t aBlock[3] = &unk_100530118;
  uint64_t v14 = _Block_copy(aBlock);
  swift_errorRetain();
  id v15 = a1;
  swift_retain();
  swift_release();
  sub_10045F970();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10014131C((unint64_t *)&qword_100576340, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100005BFC(&qword_100574A88);
  sub_10003F604((unint64_t *)&qword_100576350, &qword_100574A88);
  sub_100462020();
  sub_100461900();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v17);
}

void sub_100139830(uint64_t a1, void *a2)
{
  if (!a1 && a2)
  {
    id v2 = a2;
    if ((unint64_t)[v2 integerValue] > 0xFFFFFFFFFFFFFFF9)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10045D710();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_10045D720();
      sub_10013ACF0(v3);

      return;
    }
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10045D720();
  sub_10013ACF0(v3);
}

uint64_t sub_1001399C8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10013B3E8();
    return swift_release();
  }
  return result;
}

BOOL CloudLibrary.StatusObserver.shouldDisplayStatusBanner.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  if (qword_100570990 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = sub_100005BFC(&qword_100575E50);
  UserDefault.wrappedValue.getter(v0, (uint64_t)&v3);
  if (v3) {
    return 0;
  }
  if (v2 >> 30 == 1) {
    return v2 & 1;
  }
  if (v2 >> 30 == 2) {
    return (unint64_t)(v2 - 2147483651) < 0xFFFFFFFFFFFFFFFDLL;
  }
  return 1;
}

uint64_t sub_100139B54()
{
  swift_beginAccess();
  long long v3 = *(_OWORD *)(v0 + 16);
  uint64_t v1 = sub_100005BFC(&qword_100575E50);
  uint64_t result = UserDefault.wrappedValue.getter(v1, (uint64_t)&v4);
  if (v4)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10045D710();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_10045D720();
    return sub_10013ACF0(v3);
  }
  return result;
}

uint64_t CloudLibrary.StatusObserver.hasDisregardedBanner.getter()
{
  swift_beginAccess();
  uint64_t v0 = sub_100005BFC(&qword_100575E50);
  UserDefault.wrappedValue.getter(v0, (uint64_t)&v2);
  return v2;
}

uint64_t CloudLibrary.StatusObserver.hasDisregardedBanner.setter(char a1)
{
  char v3 = a1;
  swift_beginAccess();
  uint64_t v1 = sub_100005BFC(&qword_100575E50);
  UserDefault.wrappedValue.setter((uint64_t)&v3, v1);
  swift_endAccess();
  return sub_100139B54();
}

void (*CloudLibrary.StatusObserver.hasDisregardedBanner.modify(void *a1))(uint64_t *a1)
{
  char v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[7] = v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 32);
  char v5 = *(unsigned char *)(v1 + 40);
  *(_OWORD *)char v3 = *(_OWORD *)(v1 + 16);
  _OWORD v3[2] = v4;
  *((unsigned char *)v3 + 24) = v5;
  uint64_t v6 = sub_100005BFC(&qword_100575E50);
  v3[8] = v6;
  UserDefault.wrappedValue.getter(v6, (uint64_t)v3 + 25);
  return sub_100139DF0;
}

void sub_100139DF0(uint64_t *a1)
{
  uint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void *)(*a1 + 64);
  uint64_t v3 = *a1;
  *(unsigned char *)(*a1 + 26) = *(unsigned char *)(*a1 + 25);
  swift_beginAccess();
  UserDefault.wrappedValue.setter(v3 + 26, v2);
  swift_endAccess();
  sub_100139B54();

  free(v1);
}

void CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    *(void *)(v5 + 24) = a2;
    uint64_t v6 = *(void **)(v2 + 48);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v2 + 48) = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v6 = sub_1000519FC(0, v6[2] + 1, 1, v6);
      *(void *)(v2 + 48) = v6;
    }
    unint64_t v9 = v6[2];
    unint64_t v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      uint64_t v6 = sub_1000519FC((void *)(v8 > 1), v9 + 1, 1, v6);
      *(void *)(v2 + 48) = v6;
    }
    _OWORD v6[2] = v9 + 1;
    uint64_t v10 = &v6[2 * v9];
    v10[4] = sub_10013FE40;
    v10[5] = v5;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  uint64_t v11 = v21[0];
  swift_getKeyPath();
  swift_getKeyPath();
  v21[0] = 2147483652;
  swift_retain();
  sub_10045D720();
  sub_10013ACF0(v11);
  sub_100005BFC(&qword_100575E60);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1004668E0;
  *(void *)(inited + 32) = sub_100460CB0();
  *(void *)(inited + 40) = v13;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = sub_100460CB0();
  *(void *)(inited + 64) = v14;
  *(unsigned char *)(inited + 72) = 1;
  unint64_t v15 = sub_1000CB654(inited);
  id v16 = [self sharedCloudController];
  if (v16)
  {
    uint64_t v17 = v16;
    sub_100137C00(v15);
    swift_bridgeObjectRelease();
    Class isa = sub_100460A70().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v19 = swift_allocObject();
    swift_weakInit();
    v21[4] = sub_10013FDE8;
    v21[5] = v19;
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 1107296256;
    _OWORD v21[2] = sub_1001377CC;
    void v21[3] = &unk_10052FA20;
    CFRange v20 = _Block_copy(v21);
    swift_release();
    [v17 enableCloudLibraryWithOptions:isa completionHandler:v20];
    _Block_release(v20);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10013A18C(unsigned __int8 *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_10013A1B8(uint64_t a1)
{
  uint64_t v2 = sub_10045F950();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10045F980();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain();
    if (qword_100570998 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_10045D310();
    sub_100009688(v9, (uint64_t)qword_100575E30);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v10 = sub_10045D2F0();
    os_log_type_t v11 = sub_100461750();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v24 = v3;
      aBlock[0] = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      void aBlock[6] = a1;
      swift_errorRetain();
      sub_100005BFC((uint64_t *)&unk_100575460);
      uint64_t v14 = sub_100460D40();
      *(void *)(v12 + 4) = sub_10001FCAC(v14, v15, aBlock);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to enable Cloud Library with error=%s", (uint8_t *)v12, 0xCu);
      swift_arrayDestroy();
      uint64_t v3 = v24;
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      goto LABEL_12;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_100570998 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_10045D310();
    sub_100009688(v16, (uint64_t)qword_100575E30);
    uint64_t v10 = sub_10045D2F0();
    os_log_type_t v17 = sub_100461770();
    if (os_log_type_enabled(v10, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v17, "Successfully enabled Cloud Library", v18, 2u);
      swift_slowDealloc();
    }
  }

LABEL_12:
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v20 = result;
    sub_100009854(0, (unint64_t *)&qword_100576320);
    uint64_t v21 = (void *)sub_1004618F0();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v20;
    *(void *)(v22 + 24) = a1;
    aBlock[4] = (uint64_t)sub_100141454;
    aBlock[5] = v22;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_1000F6CC0;
    uint64_t aBlock[3] = (uint64_t)&unk_1005300A0;
    id v23 = _Block_copy(aBlock);
    swift_errorRetain();
    swift_retain();
    swift_release();
    sub_10045F970();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_10014131C((unint64_t *)&qword_100576340, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100005BFC(&qword_100574A88);
    sub_10003F604((unint64_t *)&qword_100576350, &qword_100574A88);
    sub_100462020();
    sub_100461900();
    _Block_release(v23);

    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v8, v26);
  }
  return result;
}

uint64_t sub_10013A718(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    BOOL v4 = a2 == 0;
    swift_bridgeObjectRetain();
    uint64_t v5 = v2 + 40;
    do
    {
      uint64_t v6 = *(void (**)(BOOL *))(v5 - 8);
      BOOL v8 = v4;
      swift_retain();
      v6(&v8);
      swift_release();
      v5 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t CloudLibrary.StatusObserver.add(updateObserver:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (void *)(v3 + 64);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 64);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = v7 + 32;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v11 = Strong;
        swift_unknownObjectRelease();
        if (v11 == a1) {
          return swift_bridgeObjectRelease();
        }
      }
      v9 += 16;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = a2;
  swift_unknownObjectWeakInit();
  uint64_t ObjectType = swift_getObjectType();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  (*(void (**)(void, uint64_t, uint64_t))(a2 + 8))(v18[0], ObjectType, a2);
  sub_10013FE6C((uint64_t)v19, (uint64_t)v18);
  uint64_t v14 = *(void **)(v3 + 64);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 64) = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v14 = sub_100051B28(0, v14[2] + 1, 1, v14);
    *uint64_t v6 = v14;
  }
  unint64_t v17 = v14[2];
  unint64_t v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    uint64_t v14 = sub_100051B28((void *)(v16 > 1), v17 + 1, 1, v14);
    *uint64_t v6 = v14;
  }
  v14[2] = v17 + 1;
  sub_10013FEA8((uint64_t)v18, (uint64_t)&v14[2 * v17 + 4]);
  return sub_10013FEE4((uint64_t)v19);
}

uint64_t CloudLibrary.StatusObserver.remove(updateObserver:)(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v4 + 32;
    swift_bridgeObjectRetain();
    for (unint64_t i = 0; i != v5; ++i)
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v9 = Strong;
        swift_unknownObjectRelease();
        if (v9 == a1)
        {
          swift_bridgeObjectRelease();
          swift_beginAccess();
          sub_10013AA7C(i, (uint64_t)v10);
          sub_10013FEE4((uint64_t)v10);
          return swift_endAccess();
        }
      }
      v6 += 16;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10013AA7C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100223224(v5);
    uint64_t v5 = (void *)result;
  }
  unint64_t v7 = v5[2];
  if (v7 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = v7 - 1;
    sub_10013FEA8((uint64_t)&v5[2 * a1 + 4], a2);
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
    _OWORD v5[2] = v8;
    *uint64_t v2 = v5;
  }
  return result;
}

uint64_t sub_10013AB20(unint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100223238(v3);
    uint64_t v3 = result;
  }
  unint64_t v5 = *(void *)(v3 + 16);
  if (v5 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = v5 - 1;
    uint64_t v7 = *(unsigned __int8 *)(v3 + a1 + 32);
    memmove((void *)(v3 + a1 + 32), (const void *)(v3 + a1 + 33), v5 - 1 - a1);
    *(void *)(v3 + 16) = v6;
    *uint64_t v1 = v3;
    return v7;
  }
  return result;
}

uint64_t sub_10013ABA4@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10013AC24()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10045D720();
  return sub_10013ACF0(v1);
}

uint64_t sub_10013ACF0(uint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  uint64_t result = _s9MusicCore12CloudLibraryO6StatusO21__derived_enum_equalsySbAE_AEtFZ_0(v9, a1);
  if ((result & 1) == 0)
  {
    if (qword_100570998 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_10045D310();
    sub_100009688(v3, (uint64_t)qword_100575E30);
    swift_retain_n();
    uint64_t v4 = sub_10045D2F0();
    os_log_type_t v5 = sub_100461770();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10045D710();
      swift_release();
      swift_release();
      uint64_t v7 = sub_100460D40();
      *(void *)(v6 + 4) = sub_10001FCAC(v7, v8, &v9);
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Status did change: %s", (uint8_t *)v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    return sub_10013C0A4();
  }
  return result;
}

uint64_t CloudLibrary.StatusObserver.status.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10013AF98()
{
  return swift_endAccess();
}

uint64_t sub_10013B000(uint64_t a1)
{
  uint64_t v2 = sub_100005BFC(&qword_100576358);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  swift_beginAccess();
  sub_100005BFC((uint64_t *)&unk_100575E68);
  sub_10045D6F0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t CloudLibrary.StatusObserver.$status.getter()
{
  return swift_endAccess();
}

uint64_t sub_10013B1D8(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext);
  if (result == 2)
  {
    if v2 != 2 && (v2)
    {
LABEL_8:
      swift_getKeyPath();
      swift_getKeyPath();
      sub_10045D710();
      swift_release();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_10045D720();
      return sub_10013ACF0(v3);
    }
  }
  else if (v2 == 2 {
         || ((((result & 1) == 0) ^ v2) & (*((float *)&result + 1) == *((float *)&v2 + 1))) == 0
  }
         && (v2 & 1) != 0)
  {
    goto LABEL_8;
  }
  return result;
}

uint64_t (*sub_10013B384(void *a1))(uint64_t *a1)
{
  uint64_t v2 = OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext;
  a1[1] = v1;
  a1[2] = v2;
  *a1 = *(void *)(v1 + v2);
  return sub_10013B3B8;
}

uint64_t sub_10013B3B8(uint64_t *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v1 = a1[2];
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(v2 + v1);
  *(void *)(v2 + v1) = v3;
  return sub_10013B1D8(v4);
}

void sub_10013B3E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10045F950();
  uint64_t v53 = *(void *)(v2 - 8);
  uint64_t v54 = v2;
  __chkstk_darwin(v2);
  id v51 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10045F980();
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  int64_t v49 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10045F940();
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v46 = (uint64_t *)((char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v44 = (uint64_t *)((char *)&v40 - v8);
  uint64_t v45 = sub_10045F9B0();
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  unint64_t v42 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100461950();
  uint64_t v41 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10045F960();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v17 = self;
  id v18 = [v17 sharedCloudController];
  if (!v18)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v19 = v18;
  unsigned int v20 = [v18 isUpdateInProgress];

  id v21 = [v17 sharedCloudController];
  if (!v21)
  {
LABEL_15:
    __break(1u);
    return;
  }
  uint64_t v22 = v21;
  unsigned int v23 = [v21 isInitialImport];

  uint64_t v24 = *(void *)(v1 + 88);
  if ((v20 & v23) == 1)
  {
    if (!v24)
    {
      uint64_t v25 = *(void *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext);
      *(void *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext) = 1;
      sub_10013B1D8(v25);
      sub_100009854(0, (unint64_t *)&unk_100578240);
      sub_100009854(0, (unint64_t *)&qword_100576320);
      (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchQoS.QoSClass.userInteractive(_:), v13);
      uint64_t v26 = (void *)sub_100461930();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10014131C(&qword_100576328, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
      sub_100005BFC(&qword_100576330);
      sub_10003F604(&qword_100576338, &qword_100576330);
      sub_100462020();
      uint64_t v27 = sub_100461960();

      (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v10);
      swift_getObjectType();
      uint64_t v28 = v42;
      sub_10045F9A0();
      long long v29 = v44;
      *uint64_t v44 = 1;
      uint64_t v31 = v47;
      uint64_t v30 = v48;
      char v32 = *(void (**)(void *, void, uint64_t))(v47 + 104);
      v32(v29, enum case for DispatchTimeInterval.seconds(_:), v48);
      long long v33 = v46;
      void *v46 = 1;
      v32(v33, enum case for DispatchTimeInterval.nanoseconds(_:), v30);
      sub_100461AC0();
      uint64_t v34 = *(void (**)(void *, uint64_t))(v31 + 8);
      v34(v33, v30);
      v34(v29, v30);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v45);
      aBlock[4] = sub_100141364;
      aBlock[5] = v1;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = sub_1000F6CC0;
      uint64_t aBlock[3] = &unk_10052FF10;
      char v35 = _Block_copy(aBlock);
      swift_retain();
      int v36 = v49;
      sub_1001CD41C();
      uint64_t v37 = v51;
      sub_1001CD420();
      sub_100461970();
      _Block_release(v35);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v54);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v52);
      swift_release();
      uint64_t v38 = *(void *)(v1 + 88);
      *(void *)(v1 + 88) = v27;
      swift_unknownObjectRetain_n();
      if (v38)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_100461980();
        swift_unknownObjectRelease_n();
      }
      swift_unknownObjectRelease();
      sub_100461990();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    *(void *)(v1 + 88) = 0;
    if (v24)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_100461980();
      swift_unknownObjectRelease_n();
    }
    uint64_t v39 = *(void *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext);
    *(void *)(v1 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver_updateContext) = 2;
    sub_10013B1D8(v39);
  }
}

void sub_10013BBBC(uint64_t a1)
{
  id v2 = [self sharedCloudController];
  if (v2)
  {
    uint64_t v3 = v2;
    v5[4] = sub_10014136C;
    v5[5] = a1;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 1107296256;
    _OWORD v5[2] = sub_10013C050;
    v5[3] = &unk_10052FF38;
    uint64_t v4 = _Block_copy(v5);
    swift_retain();
    swift_release();
    [v3 loadCloudMusicLibraryUpdateProgressWithCompletionHandler:v4];
    _Block_release(v4);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10013BCB0(float a1)
{
  uint64_t v2 = sub_10045F950();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10045F980();
  uint64_t v6 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009854(0, (unint64_t *)&qword_100576320);
  uint64_t v9 = (void *)sub_1004618F0();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(float *)(v11 + 24) = a1;
  aBlock[4] = sub_1001413AC;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1000F6CC0;
  uint64_t aBlock[3] = &unk_10052FF88;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  sub_10045F970();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10014131C((unint64_t *)&qword_100576340, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100005BFC(&qword_100574A88);
  sub_10003F604((unint64_t *)&qword_100576350, &qword_100574A88);
  sub_100462020();
  sub_100461900();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v15);
}

uint64_t sub_10013BFBC(float a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = sub_10013B384(v5);
    if (*(unsigned char *)v3 != 2) {
      *(float *)(v3 + 4) = a1;
    }
    ((void (*)(void *, void))v4)(v5, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_10013C050(uint64_t a1, float a2)
{
  uint64_t v3 = *(void (**)(uint64_t, float))(a1 + 32);
  uint64_t v4 = swift_retain();
  v3(v4, a2);

  return swift_release();
}

uint64_t sub_10013C0A4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  uint64_t v1 = v10;
  uint64_t result = swift_beginAccess();
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_10013FE6C(v5, (uint64_t)v8);
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v6 = v9;
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(v1, ObjectType, v6);
        swift_unknownObjectRelease();
      }
      sub_10013FEE4((uint64_t)v8);
      v5 += 16;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t CloudLibrary.StatusObserver.deinit()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v2 = v0 + OBJC_IVAR____TtCO9MusicCore12CloudLibrary14StatusObserver__status;
  uint64_t v3 = sub_100005BFC((uint64_t *)&unk_100575E68);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t CloudLibrary.StatusObserver.__deallocating_deinit()
{
  CloudLibrary.StatusObserver.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_10013C2BC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CloudLibrary.StatusObserver(0);
  uint64_t result = sub_10045D6A0();
  *a1 = result;
  return result;
}

uint64_t CloudLibrary.Status.message.getter(uint64_t a1)
{
  uint64_t v2 = sub_10045C2A0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_100460C60();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v13[-v8];
  if (a1 >> 30 > 1 && (unint64_t)(a1 - 0x80000000) < 3) {
    return 0;
  }
  sub_100460BF0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v10 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v11 = sub_100460D20();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  return v11;
}

uint64_t CloudLibrary.Status.actionTitle.getter(uint64_t a1)
{
  uint64_t v2 = sub_10045C2A0();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_100460C60();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v13[-v8];
  if (a1 >> 30)
  {
    uint64_t v10 = 0;
    if (a1 >> 30 == 1) {
      return v10;
    }
    if (a1 != 2147483651) {
      return 0;
    }
  }
  sub_100460BF0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (qword_100570720 != -1) {
    swift_once();
  }
  id v11 = (id)qword_100586110;
  sub_10045C250();
  uint64_t v10 = sub_100460D20();
  (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
  return v10;
}

BOOL static CloudLibrary.PresentationStyle.__derived_enum_equals(_:_:)(void *a1, void *a2)
{
  if (!a1) {
    return !a2;
  }
  if (a1 == (void *)1) {
    return a2 == (void *)1;
  }
  if ((unint64_t)a2 < 2) {
    return 0;
  }
  sub_100009854(0, (unint64_t *)&qword_100575A50);
  sub_10013FF0C(a1);
  sub_10013FF0C(a2);
  char v5 = sub_100461D10();
  sub_10013FF1C(a2);
  sub_10013FF1C(a1);
  return v5 & 1;
}

BOOL sub_10013C83C(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (!*a1) {
    return !v3;
  }
  if (v2 == (void *)1) {
    return v3 == (void *)1;
  }
  if ((unint64_t)v3 < 2) {
    return 0;
  }
  sub_100009854(0, (unint64_t *)&qword_100575A50);
  sub_10013FF0C(v2);
  sub_10013FF0C(v3);
  char v5 = sub_100461D10();
  sub_10013FF1C(v3);
  sub_10013FF1C(v2);
  return v5 & 1;
}

void sub_10013C8F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_100570990 != -1) {
    swift_once();
  }
  CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(a2, a3);
}

uint64_t sub_10013C960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10013CD6C(a1, a2, a3, a4, (uint64_t)&unk_100530150, (uint64_t)sub_1001413BC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_s9MusicCore12CloudLibraryO07presentcD7Enabler7context18presentationSource5style10completionyAC17EnablementContextO_AA012PresentationI0VAC0N5StyleOySbcSgtFZ_0);
}

uint64_t sub_10013C994(uint64_t a1)
{
  return sub_10013CD6C(a1, *(unsigned __int8 *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_100530150, (uint64_t)sub_1001413BC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_s9MusicCore12CloudLibraryO07presentcD7Enabler7context18presentationSource5style10completionyAC17EnablementContextO_AA012PresentationI0VAC0N5StyleOySbcSgtFZ_0);
}

uint64_t static CloudLibrary.presentCloudLibraryEnablerIfNeeded(context:presentationSource:style:)(char a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  *(unsigned char *)(v3 + 89) = a1;
  *(void *)(v3 + 32) = sub_100461280();
  *(void *)(v3 + 40) = sub_100461270();
  uint64_t v5 = sub_100461200();
  *(void *)(v3 + 48) = v5;
  *(void *)(v3 + 56) = v4;
  return _swift_task_switch(sub_10013CA88, v5, v4);
}

uint64_t sub_10013CA88()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 16);
  char v3 = *(unsigned char *)(v0 + 89);
  uint64_t v4 = sub_100461270();
  *(void *)(v0 + 64) = v4;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  *(unsigned char *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v2;
  *(void *)(v5 + 32) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10013CBA8;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 88, v4, &protocol witness table for MainActor, 0xD000000000000045, 0x8000000100493680, sub_100140654, v5, &type metadata for Bool);
}

uint64_t sub_10013CBA8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10013CD08, v3, v2);
}

uint64_t sub_10013CD08()
{
  swift_release();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 88);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10013CD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v19 = a7;
  uint64_t v12 = sub_100005BFC(&qword_100576360);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v16 + v15, (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v19(a2, a3, a4, a6, v16);
  return swift_release();
}

char *sub_10013CECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)&v6[qword_100576098] = 0;
  type metadata accessor for EnableCloudLibraryView.Model(0);
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = v6;
  sub_10004C8E8(a5);
  sub_10013D79C(a1, a2, a3, a4, a5, a6, 1, 0, 0);
  *(void *)&v14[qword_100576090] = v13;
  swift_retain_n();

  sub_10014131C(&qword_100576368, (void (*)(uint64_t))type metadata accessor for EnableCloudLibraryView.Model);
  sub_10045DCA0();
  unint64_t v15 = (char *)sub_10045E550();
  uint64_t v16 = *(void *)&v15[qword_100576090];
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v18 = (void (**)())(v16 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  uint64_t v19 = *(void *)(v16 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  *uint64_t v18 = sub_10014140C;
  v18[1] = (void (*)())v17;
  unsigned int v20 = v15;
  sub_10004CAE0(v19);
  sub_10013D4B4();
  id v21 = [v20 presentingViewController];
  if (v21)
  {
    uint64_t v22 = v21;
    sub_100005BFC((uint64_t *)&unk_100576370);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_100466900;
    *(void *)(v23 + 32) = sub_10045D540();
    *(void *)(v23 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    sub_100461810();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
  }
  id v24 = [v20 presentationController];
  if (v24)
  {
    uint64_t v25 = v24;
    sub_100005BFC((uint64_t *)&unk_100576370);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_100466900;
    *(void *)(v26 + 32) = sub_10045D540();
    *(void *)(v26 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
    sub_100461AD0();
    sub_10004CAE0(a5);
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10004CAE0(a5);
  }
  swift_release();

  return v20;
}

void sub_10013D18C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
}

void sub_10013D1F0(char *a1, uint64_t a2, void *a3)
{
  *(void *)&a1[qword_100576098] = 0;
  id v4 = a3;

  sub_100462350();
  __break(1u);
}

void sub_10013D268(void *a1)
{
  v5.id receiver = a1;
  v5.Class super_class = (Class)type metadata accessor for CloudLibraryViewController(0);
  id v1 = v5.receiver;
  [super viewDidLoad];
  id v2 = [v1 navigationItem];
  uint64_t v3 = sub_10013D330();
  [v2 setRightBarButtonItem:v3];

  id v4 = [v1 navigationItem];
  [v4 setLargeTitleDisplayMode:2];
}

objc_class *sub_10013D330()
{
  uint64_t v1 = qword_100576098;
  id v2 = *(void **)(v0 + qword_100576098);
  if (v2)
  {
    uint64_t v3 = *(objc_class **)(v0 + qword_100576098);
  }
  else
  {
    uint64_t v4 = v0;
    sub_100009854(0, &qword_100576308);
    sub_100009854(0, (unint64_t *)&unk_100576310);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    v9.value.super.super.Class isa = (Class)sub_100461D40();
    v9.is_nil = 0;
    v5.super.super.Class isa = sub_1004617B0(UIBarButtonSystemItemClose, v9, v10).super.super.isa;
    uint64_t v6 = *(void **)(v0 + v1);
    *(UIBarButtonItem *)(v4 + v1) = v5;
    uint64_t v3 = v5.super.super.isa;

    id v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void sub_10013D450()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
}

void sub_10013D4B4()
{
  id v1 = [v0 presentingViewController];
  if (v1
    && (id v2 = v1, v3 = [v1 traitCollection], v2, v3)
    || (id v4 = [v0 presentationController]) != 0
    && (UIBarButtonItem v5 = v4, v3 = [v4 traitCollection], v5, v3))
  {
    swift_retain();
    [v3 horizontalSizeClass];
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10045D720();
  }
}

void sub_10013D5BC(void *a1)
{
  id v1 = a1;
  sub_10013D4B4();
}

void sub_10013D604()
{
  swift_release();
  id v1 = *(void **)(v0 + qword_100576098);
}

id sub_10013D644()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CloudLibraryViewController(0);
  return [super dealloc];
}

void sub_10013D67C(uint64_t a1)
{
  swift_release();
  objc_super v2 = *(void **)(a1 + qword_100576098);
}

uint64_t sub_10013D6C8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  return v1;
}

void sub_10013D73C()
{
}

void sub_10013D76C()
{
}

void *sub_10013D79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12 = (void *)((char *)v9 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  *uint64_t v12 = 0;
  v12[1] = 0;
  long long v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  void v9[6] = a5;
  v9[7] = a6;
  swift_beginAccess();
  sub_10004C8E8(a5);
  type metadata accessor for UIUserInterfaceSizeClass(0);
  sub_10045D6D0();
  swift_endAccess();
  sub_10004CAE0(a5);
  uint64_t v13 = (void *)((char *)v9 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  uint64_t v14 = *(void *)((char *)v9 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  *uint64_t v13 = a8;
  v13[1] = a9;
  sub_10004CAE0(v14);
  return v9;
}

uint64_t sub_10013D87C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10004CAE0(*(void *)(v0 + 48));
  uint64_t v1 = v0 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model__horizontalSizeClass;
  uint64_t v2 = sub_100005BFC(&qword_100576300);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_10004CAE0(*(void *)(v0 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss));

  return swift_deallocClassInstance();
}

uint64_t sub_10013D94C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for EnableCloudLibraryView.Model(0);
  uint64_t result = sub_10045D6A0();
  *a1 = result;
  return result;
}

uint64_t sub_10013D98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a3;
  uint64_t v5 = sub_100005BFC(&qword_100576228);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100005BFC(&qword_100576230);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  id v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100005BFC(&qword_100576238);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned char *v7 = sub_10045EA40();
  uint64_t v16 = sub_100005BFC(&qword_100576240);
  sub_10013DC88(a1, a2, (uint64_t)&v7[*(int *)(v16 + 44)]);
  char v17 = sub_10045EA60();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10045D710();
  swift_release();
  swift_release();
  swift_release();
  sub_10045D840();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  sub_100019ABC((uint64_t)v7, (uint64_t)v11, &qword_100576228);
  uint64_t v26 = &v11[*(int *)(v9 + 44)];
  *uint64_t v26 = v17;
  *((void *)v26 + 1) = v19;
  *((void *)v26 + 2) = v21;
  *((void *)v26 + 3) = v23;
  *((void *)v26 + 4) = v25;
  v26[40] = 0;
  sub_100009790((uint64_t)v7, &qword_100576228);
  char v27 = sub_10045EA90();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10045D710();
  swift_release();
  swift_release();
  swift_release();
  sub_10045D840();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  sub_100019ABC((uint64_t)v11, (uint64_t)v15, &qword_100576230);
  int v36 = &v15[*(int *)(v13 + 44)];
  *int v36 = v27;
  *((void *)v36 + 1) = v29;
  *((void *)v36 + 2) = v31;
  *((void *)v36 + 3) = v33;
  *((void *)v36 + 4) = v35;
  v36[40] = 0;
  sub_100009790((uint64_t)v11, &qword_100576230);
  return sub_100019960((uint64_t)v15, v38, &qword_100576238);
}

uint64_t sub_10013DC88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100005BFC(&qword_100576248);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v29 - v10;
  uint64_t v12 = sub_100005BFC(&qword_100576250);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  unint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  char v17 = (char *)&v29 - v16;
  uint64_t v18 = sub_100005BFC(&qword_100576258);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v29 - v22;
  *(void *)uint64_t v23 = sub_10045E490();
  *((void *)v23 + 1) = 0;
  v23[16] = 1;
  uint64_t v24 = sub_100005BFC(&qword_100576260);
  sub_10013DF74(a1, a2, (uint64_t)&v23[*(int *)(v24 + 44)]);
  *(void *)char v17 = sub_10045E490();
  *((void *)v17 + 1) = 0;
  unsigned char v17[16] = 1;
  uint64_t v25 = sub_100005BFC(&qword_100576268);
  sub_10013E57C(a1, a2, (uint64_t *)&v17[*(int *)(v25 + 44)]);
  *(void *)id v11 = sub_10045E490();
  *((void *)v11 + 1) = 0;
  unsigned char v11[16] = 1;
  uint64_t v26 = sub_100005BFC(&qword_100576270);
  sub_10013EC7C(a1, a2, &v11[*(int *)(v26 + 44)]);
  sub_100019ABC((uint64_t)v23, (uint64_t)v21, &qword_100576258);
  sub_100019ABC((uint64_t)v17, (uint64_t)v15, &qword_100576250);
  sub_100019ABC((uint64_t)v11, (uint64_t)v9, &qword_100576248);
  sub_100019ABC((uint64_t)v21, a3, &qword_100576258);
  uint64_t v27 = sub_100005BFC(&qword_100576278);
  sub_100019ABC((uint64_t)v15, a3 + *(int *)(v27 + 48), &qword_100576250);
  sub_100019ABC((uint64_t)v9, a3 + *(int *)(v27 + 64), &qword_100576248);
  sub_100009790((uint64_t)v11, &qword_100576248);
  sub_100009790((uint64_t)v17, &qword_100576250);
  sub_100009790((uint64_t)v23, &qword_100576258);
  sub_100009790((uint64_t)v9, &qword_100576248);
  sub_100009790((uint64_t)v15, &qword_100576250);
  return sub_100009790((uint64_t)v21, &qword_100576258);
}

uint64_t sub_10013DF74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10045E8E0();
  uint64_t v41 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100005BFC(&qword_100576280);
  uint64_t v40 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100005BFC(&qword_100576288);
  uint64_t v49 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v44 = (char *)&v33 - v16;
  uint64_t v39 = sub_10045E490();
  sub_10013F3DC((uint64_t)v53);
  uint64_t v45 = v53[0];
  uint64_t v33 = v53[1];
  int v46 = v54;
  uint64_t v47 = v55;
  uint64_t v34 = v56;
  int v38 = v57;
  uint64_t v35 = v58;
  uint64_t v52 = v59;
  int v51 = v60;
  uint64_t v48 = v61;
  uint64_t v36 = v62;
  int v37 = v63;
  uint64_t v50 = sub_10045F3D0();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  swift_retain();
  sub_100005BFC(&qword_1005762B0);
  sub_1001415A4(&qword_1005762B8, &qword_1005762B0, (void (*)(void))sub_1001411D4);
  sub_10045F4D0();
  sub_10045E8D0();
  sub_10003F604(&qword_1005762D0, &qword_100576280);
  sub_10014131C(&qword_1005762D8, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  uint64_t v43 = v15;
  sub_10045EE40();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v9);
  uint64_t v18 = v49;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  uint64_t v20 = v44;
  uint64_t v42 = v12;
  v19(v44, v15, v12);
  uint64_t v41 = *(void *)(v18 + 16);
  ((void (*)(char *, char *, uint64_t))v41)(v15, v20, v12);
  *(void *)a3 = v39;
  *(void *)(a3 + 8) = 0x4020000000000000;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v21 = v45;
  uint64_t v22 = v33;
  *(void *)(a3 + 24) = v45;
  *(void *)(a3 + 32) = v22;
  LOBYTE(v15) = v46;
  *(unsigned char *)(a3 + 40) = v46;
  uint64_t v23 = v48;
  uint64_t v24 = v34;
  *(void *)(a3 + 48) = v47;
  *(void *)(a3 + 56) = v24;
  *(unsigned char *)(a3 + 64) = v38;
  uint64_t v25 = v35;
  uint64_t v26 = v52;
  *(void *)(a3 + 72) = v35;
  *(void *)(a3 + 80) = v26;
  *(unsigned char *)(a3 + 88) = v51;
  uint64_t v27 = v36;
  *(void *)(a3 + 96) = v23;
  *(void *)(a3 + 104) = v27;
  *(unsigned char *)(a3 + 112) = v37;
  *(void *)(a3 + 120) = 0;
  *(unsigned char *)(a3 + 128) = 1;
  *(void *)(a3 + 136) = v50;
  *(void *)(a3 + 144) = 0;
  *(unsigned char *)(a3 + 152) = 1;
  uint64_t v28 = sub_100005BFC(&qword_1005762F8);
  ((void (*)(uint64_t, char *, uint64_t))v41)(a3 + *(int *)(v28 + 96), v43, v42);
  sub_10004DD0C(v21, v22, (char)v15);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v29 = v52;
  LOBYTE(v20) = v51;
  sub_10004DD0C(v25, v52, v51);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v49 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v31 = v42;
  v30(v44, v42);
  v30(v43, v31);
  swift_release();
  sub_10004DD1C(v45, v22, v46);
  swift_release();
  swift_bridgeObjectRelease();
  sub_10004DD1C(v25, v29, (char)v20);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10013E57C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v47 = sub_10045E8E0();
  uint64_t v48 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100005BFC(&qword_100576280);
  uint64_t v46 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100005BFC(&qword_100576288);
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  id v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100005BFC(&qword_100576290);
  uint64_t v13 = v12 - 8;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v65 = (uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v45 - v17;
  __chkstk_darwin(v16);
  uint64_t v62 = (uint64_t)&v45 - v19;
  uint64_t v59 = sub_10045E490();
  sub_10013F3DC((uint64_t)v67);
  uint64_t v51 = v67[0];
  uint64_t v50 = v67[1];
  int v49 = v68;
  uint64_t v52 = v69;
  uint64_t v66 = v70;
  int v57 = v71;
  uint64_t v55 = v72;
  uint64_t v54 = v73;
  int v53 = v74;
  uint64_t v63 = v76;
  uint64_t v64 = v75;
  int v56 = v77;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  swift_retain();
  sub_100005BFC(&qword_1005762B0);
  sub_1001415A4(&qword_1005762B8, &qword_1005762B0, (void (*)(void))sub_1001411D4);
  sub_10045F4D0();
  sub_10045E8D0();
  sub_10003F604(&qword_1005762D0, &qword_100576280);
  sub_10014131C(&qword_1005762D8, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  uint64_t v21 = v47;
  sub_10045EE40();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v6, v21);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v9, v7);
  LOBYTE(v9) = sub_10045EA80();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10045D710();
  swift_release();
  swift_release();
  swift_release();
  sub_10045D840();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v30 = v58;
  uint64_t v31 = v60;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v18, v11, v60);
  uint64_t v32 = &v18[*(int *)(v13 + 44)];
  *uint64_t v32 = (char)v9;
  *((void *)v32 + 1) = v23;
  *((void *)v32 + 2) = v25;
  *((void *)v32 + 3) = v27;
  *((void *)v32 + 4) = v29;
  v32[40] = 0;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
  uint64_t v33 = v62;
  sub_100019960((uint64_t)v18, v62, &qword_100576290);
  uint64_t v34 = v65;
  sub_100019ABC(v33, v65, &qword_100576290);
  uint64_t v35 = v61;
  *uint64_t v61 = v59;
  v35[1] = 0x4020000000000000;
  *((unsigned char *)v35 + 16) = 0;
  uint64_t v36 = v51;
  uint64_t v37 = v50;
  void v35[3] = v51;
  v35[4] = v37;
  LOBYTE(v33) = v49;
  *((unsigned char *)v35 + 40) = v49;
  uint64_t v38 = v66;
  v35[6] = v52;
  v35[7] = v38;
  *((unsigned char *)v35 + 64) = v57;
  uint64_t v39 = v55;
  uint64_t v40 = v54;
  v35[9] = v55;
  v35[10] = v40;
  char v41 = v53;
  *((unsigned char *)v35 + 88) = v53;
  uint64_t v42 = v63;
  v35[12] = v64;
  v35[13] = v42;
  *((unsigned char *)v35 + 112) = v56;
  v35[15] = 0;
  *((unsigned char *)v35 + 128) = 1;
  uint64_t v43 = sub_100005BFC(&qword_1005762F0);
  sub_100019ABC(v34, (uint64_t)v35 + *(int *)(v43 + 64), &qword_100576290);
  sub_10004DD0C(v36, v37, v33);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10004DD0C(v39, v40, v41);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100009790(v62, &qword_100576290);
  sub_100009790(v65, &qword_100576290);
  sub_10004DD1C(v36, v37, v33);
  swift_release();
  swift_bridgeObjectRelease();
  sub_10004DD1C(v39, v40, v41);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10013EC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v64 = a3;
  uint64_t v5 = sub_10045E8E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v58 = v5;
  uint64_t v59 = v6;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100005BFC(&qword_100576280);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v54 = v9;
  uint64_t v55 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100005BFC(&qword_100576288);
  uint64_t v61 = *(void *)(v13 - 8);
  uint64_t v62 = v13;
  __chkstk_darwin(v13);
  uint64_t v51 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100005BFC(&qword_100576290) - 8;
  uint64_t v15 = __chkstk_darwin(v57);
  uint64_t v63 = (uint64_t)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v52 = (char *)&v51 - v18;
  __chkstk_darwin(v17);
  uint64_t v60 = (uint64_t)&v51 - v19;
  uint64_t v20 = sub_100005BFC(&qword_100576298);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  int v56 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  int v53 = (char *)&v51 - v24;
  sub_10045EA40();
  uint64_t v65 = a1;
  uint64_t v66 = a2;
  sub_100005BFC(&qword_1005762A0);
  sub_10003F604(&qword_1005762A8, &qword_1005762A0);
  sub_10045D8A0();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a1;
  *(void *)(v25 + 24) = a2;
  swift_retain();
  sub_100005BFC(&qword_1005762B0);
  sub_1001415A4(&qword_1005762B8, &qword_1005762B0, (void (*)(void))sub_1001411D4);
  sub_10045F4D0();
  sub_10045E8D0();
  sub_10003F604(&qword_1005762D0, &qword_100576280);
  sub_10014131C(&qword_1005762D8, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  uint64_t v26 = v51;
  uint64_t v27 = v54;
  uint64_t v28 = v58;
  sub_10045EE40();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v8, v28);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v12, v27);
  LOBYTE(v12) = sub_10045EA80();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_10045D710();
  swift_release();
  swift_release();
  swift_release();
  sub_10045D840();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v61;
  uint64_t v37 = v62;
  uint64_t v39 = (uint64_t)v52;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v52, v26, v62);
  uint64_t v40 = v39 + *(int *)(v57 + 44);
  *(unsigned char *)uint64_t v40 = (_BYTE)v12;
  *(void *)(v40 + 8) = v30;
  *(void *)(v40 + 16) = v32;
  *(void *)(v40 + 24) = v34;
  *(void *)(v40 + 32) = v36;
  *(unsigned char *)(v40 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v37);
  uint64_t v41 = v60;
  sub_100019960(v39, v60, &qword_100576290);
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  uint64_t v43 = v56;
  uint64_t v44 = v53;
  v42(v56, v53, v20);
  uint64_t v45 = v63;
  sub_100019ABC(v41, v63, &qword_100576290);
  uint64_t v46 = v64;
  v42(v64, v43, v20);
  uint64_t v47 = sub_100005BFC((uint64_t *)&unk_1005762E0);
  uint64_t v48 = &v46[*(int *)(v47 + 48)];
  *(void *)uint64_t v48 = 0;
  v48[8] = 1;
  sub_100019ABC(v45, (uint64_t)&v46[*(int *)(v47 + 64)], &qword_100576290);
  sub_100009790(v41, &qword_100576290);
  int v49 = *(void (**)(char *, uint64_t))(v21 + 8);
  v49(v44, v20);
  sub_100009790(v45, &qword_100576290);
  return ((uint64_t (*)(char *, uint64_t))v49)(v43, v20);
}

__n128 sub_10013F340@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10045E490();
  sub_10013F3DC((uint64_t)&v11);
  char v3 = v12;
  char v4 = v14;
  char v5 = v16;
  char v6 = v18;
  __n128 result = v13;
  long long v8 = v17;
  long long v9 = v11;
  long long v10 = v15;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0x4020000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 40) = v3;
  *(__n128 *)(a1 + 48) = result;
  *(unsigned char *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 88) = v5;
  *(_OWORD *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 112) = v6;
  return result;
}

uint64_t sub_10013F3DC@<X0>(uint64_t a1@<X8>)
{
  sub_10000F810();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_10045EDA0();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  sub_10045EB00();
  uint64_t v7 = sub_10045ED30();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  sub_10004DD1C(v2, v4, v6);
  swift_bridgeObjectRelease();
  sub_10045EB50();
  uint64_t v12 = sub_10045ECC0();
  uint64_t v35 = v13;
  uint64_t v36 = v12;
  uint64_t v37 = v14;
  char v34 = v15 & 1;
  sub_10004DD1C(v7, v9, v11 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_10045EDA0();
  uint64_t v18 = v17;
  LOBYTE(v7) = v19 & 1;
  sub_10045EBC0();
  uint64_t v20 = sub_10045ED30();
  uint64_t v22 = v21;
  char v24 = v23;
  swift_release();
  sub_10004DD1C(v16, v18, v7);
  swift_bridgeObjectRelease();
  sub_10045E7B0();
  uint64_t v25 = sub_10045ECD0();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  LOBYTE(v7) = v30 & 1;
  sub_10004DD1C(v20, v22, v24 & 1);
  swift_bridgeObjectRelease();
  uint64_t v31 = swift_getKeyPath();
  *(void *)a1 = v36;
  *(void *)(a1 + 8) = v35;
  *(unsigned char *)(a1 + 16) = v34;
  *(void *)(a1 + 24) = v37;
  *(void *)(a1 + 32) = KeyPath;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v25;
  *(void *)(a1 + 56) = v27;
  *(unsigned char *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v29;
  *(void *)(a1 + 80) = v31;
  *(unsigned char *)(a1 + 88) = 1;
  sub_10004DD0C(v36, v35, v34);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10004DD0C(v25, v27, v7);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10004DD1C(v25, v27, v7);
  swift_release();
  swift_bridgeObjectRelease();
  sub_10004DD1C(v36, v35, v34);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10013F6B0(uint64_t a1, uint64_t a2)
{
  if (qword_100570990 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 56);
  sub_10004C8E8(v3);
  CloudLibrary.StatusObserver.enableCloudLibrary(completion:)(v3, v4);
  uint64_t result = sub_10004CAE0(v3);
  char v6 = *(void (**)(uint64_t))(a2 + OBJC_IVAR____TtCV9MusicCore22EnableCloudLibraryView5Model_dismiss);
  if (v6)
  {
    uint64_t v7 = swift_retain();
    v6(v7);
    return sub_10004CAE0((uint64_t)v6);
  }
  return result;
}

double sub_10013F788@<D0>(_OWORD *a1@<X8>)
{
  if (qword_100570988 != -1) {
    swift_once();
  }
  v25[0] = static CloudLibrary.EnablementContext.action;
  sub_10000F810();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_10045EDA0();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = sub_10045ED20();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  sub_10004DD1C(v2, v4, v6);
  swift_bridgeObjectRelease();
  LOBYTE(v2) = sub_10045EAD0();
  sub_10045D840();
  uint64_t v36 = v7;
  uint64_t v37 = v9;
  char v38 = v13;
  uint64_t v39 = v11;
  char v40 = v2;
  uint64_t v41 = v14;
  uint64_t v42 = v15;
  uint64_t v43 = v16;
  uint64_t v44 = v17;
  char v45 = 0;
  sub_10045F7D0();
  sub_10013F944(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v25, 0.0, 1, 0.0, 1);
  sub_10004DD1C(v7, v9, v13);
  swift_bridgeObjectRelease();
  long long v18 = v33;
  a1[8] = v32;
  a1[9] = v18;
  long long v19 = v35;
  a1[10] = v34;
  a1[11] = v19;
  long long v20 = v29;
  a1[4] = v28;
  a1[5] = v20;
  long long v21 = v31;
  a1[6] = v30;
  a1[7] = v21;
  long long v22 = v25[1];
  *a1 = v25[0];
  a1[1] = v22;
  double result = *(double *)&v26;
  long long v24 = v27;
  a1[2] = v26;
  a1[3] = v24;
  return result;
}

uint64_t sub_10013F944@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_100461760();
    char v23 = (void *)sub_10045EA10();
    sub_10045D1E0();
  }
  sub_10045DF50();
  long long v24 = v13[3];
  a9[2] = v13[2];
  a9[3] = v24;
  *(_OWORD *)((char *)a9 + 57) = *(_OWORD *)((char *)v13 + 57);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  a9[9] = v31;
  a9[10] = v32;
  a9[11] = v33;
  a9[5] = v27;
  a9[6] = v28;
  a9[7] = v29;
  a9[8] = v30;

  return sub_100141248((uint64_t)v13);
}

uint64_t sub_10013FB04@<X0>(uint64_t a1@<X8>)
{
  return sub_10013D98C(*v1, v1[1], a1);
}

uint64_t sub_10013FB0C()
{
  uint64_t v0 = sub_10045D310();
  sub_1000096D0(v0, qword_100575E30);
  sub_100009688(v0, (uint64_t)qword_100575E30);
  return sub_10045D300();
}

uint64_t sub_10013FB8C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10013FC0C()
{
  return sub_10045D720();
}

BOOL _s9MusicCore12CloudLibraryO6StatusO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (a1 >> 30)
  {
    if (a1 >> 30 == 1)
    {
      if ((a2 & 0xC0000000) == 0x40000000) {
        return (((a1 & 1) == 0) ^ a2) & (*((float *)&a1 + 1) == *((float *)&a2 + 1));
      }
      return 0;
    }
    switch(a1)
    {
      case 2147483649:
        if (a2 != 2147483649) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 2147483650:
        if (a2 != 2147483650) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 2147483651:
        if (a2 != 2147483651) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 2147483652:
        if (a2 != 2147483652) {
          return 0;
        }
        BOOL result = 1;
        break;
      default:
        if (a2 != 0x80000000) {
          return 0;
        }
        BOOL result = 1;
        break;
    }
  }
  else
  {
    if ((a2 & 0xC0000000) != 0) {
      return 0;
    }
    return a1 == a2;
  }
  return result;
}

uint64_t _s9MusicCore12CloudLibraryO11FailureTypeO8rawValueAESgSi_tcfC_0(unint64_t a1)
{
  if (a1 > 0xFFFFFFFFFFFFFFF9) {
    return ~a1;
  }
  else {
    return 6;
  }
}

uint64_t sub_10013FDB0()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10013FDE8(uint64_t a1)
{
  return sub_10013A1B8(a1);
}

uint64_t sub_10013FDF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10013FE00()
{
  return swift_release();
}

uint64_t sub_10013FE08()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10013FE40(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_10013FE6C(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  return a2;
}

uint64_t sub_10013FEA8(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  return a2;
}

uint64_t sub_10013FEE4(uint64_t a1)
{
  return a1;
}

id sub_10013FF0C(id result)
{
  if ((unint64_t)result >= 2) {
    return result;
  }
  return result;
}

void sub_10013FF1C(id a1)
{
  if ((unint64_t)a1 >= 2) {
}
  }

void _s9MusicCore12CloudLibraryO07presentcD7Enabler7context18presentationSource5style10completionyAC17EnablementContextO_AA012PresentationI0VAC0N5StyleOySbcSgtFZ_0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = CloudLibrary.EnablementContext.title.getter();
  uint64_t v10 = v9;
  uint64_t v11 = CloudLibrary.EnablementContext.message.getter();
  uint64_t v13 = v12;
  if (a3)
  {
    NSString v14 = sub_100460C70();
    swift_bridgeObjectRelease();
    NSString v15 = sub_100460C70();
    swift_bridgeObjectRelease();
    id v16 = [self alertControllerWithTitle:v14 message:v15 preferredStyle:1];

    if (qword_100571000 != -1) {
      swift_once();
    }
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a4;
    *(void *)(v17 + 24) = a5;
    sub_10004C8E8(a4);
    swift_bridgeObjectRetain();
    NSString v18 = sub_100460C70();
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_1001413CC;
    uint64_t v47 = v17;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    uint64_t v44 = sub_1000C472C;
    char v45 = &unk_100530000;
    long long v19 = _Block_copy(&aBlock);
    swift_release();
    long long v20 = self;
    id v21 = [v20 actionWithTitle:v18 style:1 handler:v19];
    _Block_release(v19);

    [v16 addAction:v21];
    if (qword_100570988 != -1) {
      swift_once();
    }
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a4;
    *(void *)(v22 + 24) = a5;
    sub_10004C8E8(a4);
    swift_bridgeObjectRetain();
    NSString v23 = sub_100460C70();
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_100141404;
    uint64_t v47 = v22;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    uint64_t v44 = sub_1000C472C;
    char v45 = &unk_100530050;
    long long v24 = _Block_copy(&aBlock);
    swift_release();
    id v25 = [v20 actionWithTitle:v23 style:0 handler:v24];
    _Block_release(v24);

    [v16 addAction:v25];
    if ((unint64_t)a3 >= 2)
    {
      id v26 = a3;
      [v16 setPreferredStyle:0];
      id v27 = v26;
      [v27 bounds];
      double v29 = v28;
      double v31 = v30;
      double v33 = v32;
      double v35 = v34;
      id v36 = [v16 popoverPresentationController];
      if (v36)
      {
        uint64_t v37 = v36;
        id v38 = v27;
        [v37 setSourceView:v38];
        [v37 setSourceRect:v29, v31, v33, v35];

        sub_10013FF1C(a3);
        sub_10013FF1C(a3);
      }
      else
      {
        sub_10013FF1C(a3);
        sub_10013FF1C(a3);
      }
    }
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v16, 1, (id)0xF, (void **)((unint64_t)a3 > 1), 0, 0);
  }
  else
  {
    id v39 = objc_allocWithZone((Class)type metadata accessor for CloudLibraryViewController(0));
    sub_10004C8E8(a4);
    char v40 = sub_10013CECC(v8, v10, v11, v13, a4, a5);
    id v41 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v40];
    [v41 setModalPresentationStyle:2];
    [v41 setModalPresentationCapturesStatusBarAppearance:1];
    PresentationSource.present(_:wantsAutomaticModalPresentationStyle:permittedArrowDirections:animated:completion:)(v41, 1, (id)0xF, (void **)1, 0, 0);
  }
}

void _s9MusicCore12CloudLibraryO07presentcD15EnablerIfNeeded7context18presentationSource5style05cloudD17EnabledCompletionyAC17EnablementContextO_AA012PresentationK0VAC0R5StyleOySbcSgtFZ_0(unsigned int a1, uint64_t a2, void *a3, void (*a4)(uint64_t), uint64_t a5)
{
  if (qword_100570808 != -1) {
    swift_once();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v11)
  {
    if (!a4) {
      return;
    }
    uint64_t v7 = 1;
LABEL_9:
    a4(v7);
    return;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10045D710();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if ((v12 & 0x100) == 0)
  {
    if (!a4) {
      return;
    }
    uint64_t v7 = 0;
    goto LABEL_9;
  }
  _s9MusicCore12CloudLibraryO07presentcD7Enabler7context18presentationSource5style10completionyAC17EnablementContextO_AA012PresentationI0VAC0N5StyleOySbcSgtFZ_0(a1, a2, a3, (uint64_t)a4, a5);
}

uint64_t sub_100140654(uint64_t a1)
{
  return sub_10013CD6C(a1, *(unsigned __int8 *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_10052FFC0, (uint64_t)sub_1001413BC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))_s9MusicCore12CloudLibraryO07presentcD15EnablerIfNeeded7context18presentationSource5style05cloudD17EnabledCompletionyAC17EnablementContextO_AA012PresentationK0VAC0R5StyleOySbcSgtFZ_0);
}

unint64_t sub_1001406A8()
{
  unint64_t result = qword_100575E80;
  if (!qword_100575E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575E80);
  }
  return result;
}

unint64_t sub_100140700()
{
  unint64_t result = qword_100575E88;
  if (!qword_100575E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100575E88);
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary()
{
  return &type metadata for CloudLibrary;
}

uint64_t getEnumTagSinglePayload for CloudLibrary.UpdateContext(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[8]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudLibrary.UpdateContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.UpdateContext()
{
  return &type metadata for CloudLibrary.UpdateContext;
}

unsigned char *storeEnumTagSinglePayload for CloudLibrary.FailureType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001408DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.FailureType()
{
  return &type metadata for CloudLibrary.FailureType;
}

uint64_t getEnumTagSinglePayload for CloudLibrary.Status(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x1FFFFFFD && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 536870910);
  }
  if ((((*(_DWORD *)a1 >> 1) & 0x1FFFFFFC | (*(_DWORD *)a1 >> 30)) ^ 0x1FFFFFFFu) >= 0x1FFFFFFD) {
    int v3 = -1;
  }
  else {
    int v3 = ((*(_DWORD *)a1 >> 1) & 0x1FFFFFFC | (*(_DWORD *)a1 >> 30)) ^ 0x1FFFFFFF;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudLibrary.Status(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1FFFFFFD)
  {
    *(void *)unint64_t result = a2 - 536870910;
    if (a3 >= 0x1FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = 8 * ((-a2 >> 2) & 0x7FFFFFF) - (a2 << 30);
    }
  }
  return result;
}

uint64_t sub_1001409D4(void *a1)
{
  if ((int)*a1 >= 0) {
    return *a1 >> 30;
  }
  else {
    return ((*a1 >> 29) & 0xFFFFFFF8 | *a1 & 7) + 2;
  }
}

void *sub_1001409F4(void *result)
{
  *result &= 0xFFFFFFFF3FFFFFFFLL;
  return result;
}

unint64_t *sub_100140A04(unint64_t *result, unsigned int a2)
{
  if (a2 < 2) {
    *unint64_t result = *result & 0xFFFFFFFF00000007 | (a2 << 30);
  }
  else {
    *unint64_t result = ((a2 - 2) | ((unint64_t)(a2 - 2) << 29)) & 0xFFFFFFFF00000007 | 0x80000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.Status()
{
  return &type metadata for CloudLibrary.Status;
}

unsigned char *storeEnumTagSinglePayload for CloudLibrary.EnablementContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100140B14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.EnablementContext()
{
  return &type metadata for CloudLibrary.EnablementContext;
}

uint64_t sub_100140B4C()
{
  return type metadata accessor for CloudLibrary.StatusObserver(0);
}

uint64_t type metadata accessor for CloudLibrary.StatusObserver(uint64_t a1)
{
  return sub_10000A4F0(a1, (uint64_t *)&unk_100575EB8);
}

void sub_100140B74()
{
  sub_100140C44();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100140C44()
{
  if (!qword_100575EC8)
  {
    unint64_t v0 = sub_10045D740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100575EC8);
    }
  }
}

void *_s13InsertCommandV8LocationOwCP(void *a1, void **a2)
{
  int v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void _s13InsertCommandV8LocationOwxx(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **_s13InsertCommandV8LocationOwca(void **a1, void **a2)
{
  int v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void **_s13InsertCommandV8LocationOwta(void **a1, unint64_t *a2)
{
  int v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for CloudLibrary.PresentationStyle(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CloudLibrary.PresentationStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.PresentationStyle()
{
  return &type metadata for CloudLibrary.PresentationStyle;
}

uint64_t type metadata accessor for CloudLibraryViewController(uint64_t a1)
{
  return sub_10000A4F0(a1, (uint64_t *)&unk_1005760B0);
}

uint64_t sub_100140EB8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100140F10()
{
  return type metadata accessor for CloudLibraryViewController(0);
}

uint64_t sub_100140F18()
{
  return type metadata accessor for EnableCloudLibraryView.Model(0);
}

uint64_t type metadata accessor for EnableCloudLibraryView.Model(uint64_t a1)
{
  return sub_10000A4F0(a1, (uint64_t *)&unk_100576130);
}

void sub_100140F40()
{
  sub_100140FE8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100140FE8()
{
  if (!qword_100576140)
  {
    type metadata accessor for UIUserInterfaceSizeClass(255);
    unint64_t v0 = sub_10045D740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100576140);
    }
  }
}

ValueMetadata *type metadata accessor for EnableCloudLibraryView()
{
  return &type metadata for EnableCloudLibraryView;
}

uint64_t initializeWithCopy for CloudLibrary.StatusObserver.InternalObserver(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for CloudLibrary.StatusObserver.InternalObserver(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t initializeWithTake for CloudLibrary.StatusObserver.InternalObserver(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for CloudLibrary.StatusObserver.InternalObserver(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t getEnumTagSinglePayload for CloudLibrary.StatusObserver.InternalObserver(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
    int v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  }
  else {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudLibrary.StatusObserver.InternalObserver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      *(void *)(result + 8) = 1;
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudLibrary.StatusObserver.InternalObserver()
{
  return &type metadata for CloudLibrary.StatusObserver.InternalObserver;
}

uint64_t sub_1001411A0()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1001411C4@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_10013F340(a1).n128_u64[0];
  return result;
}

uint64_t sub_1001411CC()
{
  return sub_10013F6B0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_1001411D4()
{
  unint64_t result = qword_1005762C0;
  if (!qword_1005762C0)
  {
    sub_100005C9C(&qword_1005762C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1005762C0);
  }
  return result;
}

uint64_t sub_100141248(uint64_t a1)
{
  return a1;
}

uint64_t sub_100141288@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10045E180();
  *a1 = result;
  return result;
}

uint64_t sub_1001412B4()
{
  return sub_10045E190();
}

uint64_t sub_1001412DC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100141314()
{
}

uint64_t sub_10014131C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100141364()
{
  sub_10013BBBC(v0);
}

uint64_t sub_10014136C(float a1)
{
  return sub_10013BCB0(a1);
}

uint64_t sub_100141374()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001413AC()
{
  return sub_10013BFBC(*(float *)(v0 + 24));
}

uint64_t sub_1001413CC()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1(0);
  }
  return result;
}

void sub_100141404(uint64_t a1)
{
  sub_10013C8F0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_10014140C()
{
}

uint64_t sub_100141414()
{
  swift_release();
  swift_errorRelease();

  return swift_deallocObject();
}

uint64_t sub_100141454()
{
  return sub_10013A718(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_10014145C()
{
}

uint64_t sub_100141464()
{
  return sub_1001399C8();
}

uint64_t sub_10014146C(void *a1, uint64_t a2)
{
  return sub_100139530(a1, a2, v2);
}

uint64_t sub_100141474()
{
  swift_errorRelease();

  swift_release();

  return swift_deallocObject();
}

void sub_1001414BC()
{
  sub_100139830(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1001414CC()
{
  uint64_t v1 = sub_100005BFC(&qword_100576360);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_100141560()
{
  return sub_1001415A4(&qword_100576390, &qword_100576238, (void (*)(void))sub_100141620);
}

uint64_t sub_1001415A4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005C9C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100141620()
{
  unint64_t result = qword_100576398;
  if (!qword_100576398)
  {
    sub_100005C9C(&qword_100576230);
    sub_10003F604((unint64_t *)&unk_1005763A0, &qword_100576228);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100576398);
  }
  return result;
}

uint64_t sub_100141718(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 288) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 168) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 176) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 184) = v4;
  *(void *)(v3 + 192) = *(void *)(v4 - 8);
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  *(_OWORD *)(v3 + 112) = v2[6];
  long long v6 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v6;
  long long v7 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v7;
  return _swift_task_switch(sub_10014188C, 0, 0);
}

uint64_t sub_10014188C()
{
  uint64_t v85 = v0;
  char v1 = *(unsigned char *)(v0 + 64);
  if (ActionType.isHidden.getter(v1))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v2 = *(void *)(v0 + 232);
      uint64_t v3 = *(void *)(v0 + 184);
      uint64_t v4 = *(void *)(v0 + 192);
      uint64_t v5 = sub_100009688(v3, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      long long v6 = sub_10045D2F0();
      os_log_type_t v7 = sub_100461750();
      BOOL v8 = os_log_type_enabled(v6, v7);
      uint64_t v9 = *(void *)(v0 + 232);
      uint64_t v10 = *(void *)(v0 + 184);
      uint64_t v11 = *(void *)(v0 + 192);
      if (v8)
      {
        uint64_t v71 = *(void *)(v0 + 232);
        uint64_t v12 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136446210;
        uint64_t v13 = ActionType.rawValue.getter(v1);
        *(void *)(v12 + 4) = sub_10001FCAC(v13, v14, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v71, v10);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
    }
    sub_10003DC9C();
    swift_allocError();
    *uint64_t v52 = 0xD000000000000014;
    uint64_t v53 = 0x800000010048EDB0;
LABEL_27:
    v52[1] = v53;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
    return v66();
  }
  if ((*(unsigned char *)(v0 + 288) & 1) == 0)
  {
    NSString v15 = *(uint64_t (**)(void))(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 88);
    long long v18 = *(_OWORD *)(v0 + 32);
    v78[0] = *(_OWORD *)(v0 + 16);
    v78[1] = v18;
    v78[2] = *(_OWORD *)(v0 + 48);
    char v79 = v1;
    uint64_t v80 = v15;
    uint64_t v81 = v16;
    uint64_t v82 = v17;
    long long v19 = *(_OWORD *)(v0 + 112);
    long long v83 = *(_OWORD *)(v0 + 96);
    long long v84 = v19;
    uint64_t v20 = v15(v78);
    if (v21 != 1)
    {
      uint64_t v53 = v21;
      uint64_t v77 = v20;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v55 = *(void *)(v0 + 192);
      uint64_t v54 = *(void *)(v0 + 200);
      uint64_t v56 = *(void *)(v0 + 184);
      uint64_t v57 = sub_100009688(v56, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v54, v57, v56);
      char v68 = *(unsigned char *)(v0 + 64);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v58 = v77;
      sub_10003DC88(v77, v53);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10003DC88(v77, v53);
      uint64_t v59 = sub_10045D2F0();
      os_log_type_t type = sub_100461750();
      BOOL v60 = os_log_type_enabled(v59, type);
      uint64_t v76 = *(void *)(v0 + 192);
      uint64_t v73 = *(void *)(v0 + 184);
      uint64_t v74 = *(void *)(v0 + 200);
      if (v60)
      {
        log = v59;
        uint64_t v61 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 136446466;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v62 = ActionType.rawValue.getter(v68);
        *(void *)(v61 + 4) = sub_10001FCAC(v62, v63, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        *(_WORD *)(v61 + 12) = 2082;
        *(void *)(v0 + 128) = v77;
        *(void *)(v0 + 136) = v53;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v64 = sub_100460D40();
        *(void *)(v61 + 14) = sub_10001FCAC(v64, v65, (uint64_t *)v78);
        uint64_t v58 = v77;
        swift_bridgeObjectRelease();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
        _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v61, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
      }
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v73);
      sub_10003DC9C();
      swift_allocError();
      *uint64_t v52 = v58;
      goto LABEL_27;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 224);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v25 = sub_100009688(v23, (uint64_t)qword_100572290);
  *(void *)(v0 + 240) = v25;
  id v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(void *)(v0 + 248) = v26;
  *(void *)(v0 + 256) = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v26(v22, v25, v23);
  char v72 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v27 = sub_10045D2F0();
  os_log_type_t v28 = sub_100461770();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 224);
  uint64_t v31 = *(void *)(v0 + 184);
  uint64_t v32 = *(void *)(v0 + 192);
  if (v29)
  {
    *(void *)typea = *(void *)(v0 + 224);
    uint64_t v33 = swift_slowAlloc();
    *(void *)&v78[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446210;
    uint64_t v34 = ActionType.rawValue.getter(v72);
    *(void *)(v33 + 4) = sub_10001FCAC(v34, v35, (uint64_t *)v78);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%{public}s: performing…", (uint8_t *)v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(os_log_type_t *, uint64_t))(v32 + 8))(*(os_log_type_t **)typea, v31);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v36 = *(void *)(v0 + 176);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v37 = [self mainRunLoop];
  uint64_t v38 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v36, 1, 1, v38);
  uint64_t v39 = sub_100461CB0();

  sub_100009790(v36, &qword_1005722C0);
  *(void *)(v0 + 144) = v39;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v40 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 152) = v40;
  uint64_t v41 = *(void *)(v0 + 16);
  uint64_t v42 = *(void *)(v0 + 56);
  char v43 = *(unsigned char *)(v0 + 64);
  uint64_t v45 = *(void *)(v0 + 72);
  uint64_t v44 = *(void *)(v0 + 80);
  uint64_t v46 = *(void *)(v0 + 88);
  uint64_t v47 = *(void *)(v0 + 96);
  uint64_t v48 = *(void *)(v0 + 120);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v41;
  *(_OWORD *)(v49 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v49 + 40) = *(_OWORD *)(v0 + 40);
  *(void *)(v49 + 56) = v42;
  *(unsigned char *)(v49 + 64) = v43;
  *(void *)(v49 + 72) = v45;
  *(void *)(v49 + 80) = v44;
  *(void *)(v49 + 88) = v46;
  *(void *)(v49 + 96) = v47;
  *(_OWORD *)(v49 + 104) = *(_OWORD *)(v0 + 104);
  *(void *)(v49 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 264) = sub_10045D7B0();
  swift_release();
  swift_release();
  uint64_t v75 = (uint64_t (*)(void))(*(void *)(v0 + 96) + **(int **)(v0 + 96));
  uint64_t v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v50;
  *uint64_t v50 = v0;
  v50[1] = sub_100142500;
  return v75();
}

uint64_t sub_100142500()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001731C8;
  }
  else {
    uint64_t v2 = sub_100142614;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100142614()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 184);
  sub_10045D660();
  v2(v3, v1, v4);
  char v27 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v5 = sub_10045D2F0();
  os_log_type_t v6 = sub_100461770();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 184);
  if (v7)
  {
    log = v5;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v11 = ActionType.rawValue.getter(v27);
    *(void *)(v10 + 4) = sub_10001FCAC(v11, v12, &v29);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v10 + 12) = 2082;
    *(void *)(v10 + 14) = sub_10001FCAC(0, 0xE000000000000000, &v29);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "%{public}s: perform success%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v14 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = *(void *)(v0 + 16);
  uint64_t v16 = *(void *)(v0 + 56);
  char v17 = *(unsigned char *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 72);
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v21 = *(void *)(v0 + 96);
  uint64_t v22 = *(void *)(v0 + 120);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  *(void *)(v23 + 32) = v15;
  *(_OWORD *)(v23 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v23 + 56) = *(_OWORD *)(v0 + 40);
  *(void *)(v23 + 72) = v16;
  *(unsigned char *)(v23 + 80) = v17;
  *(void *)(v23 + 88) = v19;
  *(void *)(v23 + 96) = v18;
  *(void *)(v23 + 104) = v20;
  *(void *)(v23 + 112) = v21;
  *(_OWORD *)(v23 + 120) = *(_OWORD *)(v0 + 104);
  *(void *)(v23 + 136) = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100039C5C(v13, (uint64_t)&unk_100576648, v23);
  swift_release();
  swift_release();
  sub_100009790(v13, &qword_100574B80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_100142A30(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 288) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 168) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 176) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 184) = v4;
  *(void *)(v3 + 192) = *(void *)(v4 - 8);
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  *(_OWORD *)(v3 + 112) = v2[6];
  long long v6 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v6;
  long long v7 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v7;
  return _swift_task_switch(sub_100142BA4, 0, 0);
}

uint64_t sub_100142BA4()
{
  uint64_t v85 = v0;
  char v1 = *(unsigned char *)(v0 + 64);
  if (ActionType.isHidden.getter(v1))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v2 = *(void *)(v0 + 232);
      uint64_t v3 = *(void *)(v0 + 184);
      uint64_t v4 = *(void *)(v0 + 192);
      uint64_t v5 = sub_100009688(v3, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      long long v6 = sub_10045D2F0();
      os_log_type_t v7 = sub_100461750();
      BOOL v8 = os_log_type_enabled(v6, v7);
      uint64_t v9 = *(void *)(v0 + 232);
      uint64_t v10 = *(void *)(v0 + 184);
      uint64_t v11 = *(void *)(v0 + 192);
      if (v8)
      {
        uint64_t v71 = *(void *)(v0 + 232);
        uint64_t v12 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136446210;
        uint64_t v13 = ActionType.rawValue.getter(v1);
        *(void *)(v12 + 4) = sub_10001FCAC(v13, v14, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v71, v10);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
    }
    sub_10003DC9C();
    swift_allocError();
    *uint64_t v52 = 0xD000000000000014;
    uint64_t v53 = 0x800000010048EDB0;
LABEL_27:
    v52[1] = v53;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
    return v66();
  }
  if ((*(unsigned char *)(v0 + 288) & 1) == 0)
  {
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 88);
    long long v18 = *(_OWORD *)(v0 + 32);
    v78[0] = *(_OWORD *)(v0 + 16);
    v78[1] = v18;
    v78[2] = *(_OWORD *)(v0 + 48);
    char v79 = v1;
    uint64_t v80 = v15;
    uint64_t v81 = v16;
    uint64_t v82 = v17;
    long long v19 = *(_OWORD *)(v0 + 112);
    long long v83 = *(_OWORD *)(v0 + 96);
    long long v84 = v19;
    uint64_t v20 = v15(v78);
    if (v21 != 1)
    {
      uint64_t v53 = v21;
      uint64_t v77 = v20;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v55 = *(void *)(v0 + 192);
      uint64_t v54 = *(void *)(v0 + 200);
      uint64_t v56 = *(void *)(v0 + 184);
      uint64_t v57 = sub_100009688(v56, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v54, v57, v56);
      char v68 = *(unsigned char *)(v0 + 64);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v58 = v77;
      sub_10003DC88(v77, v53);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10003DC88(v77, v53);
      uint64_t v59 = sub_10045D2F0();
      os_log_type_t type = sub_100461750();
      BOOL v60 = os_log_type_enabled(v59, type);
      uint64_t v76 = *(void *)(v0 + 192);
      uint64_t v73 = *(void *)(v0 + 184);
      uint64_t v74 = *(void *)(v0 + 200);
      if (v60)
      {
        log = v59;
        uint64_t v61 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 136446466;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v62 = ActionType.rawValue.getter(v68);
        *(void *)(v61 + 4) = sub_10001FCAC(v62, v63, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        *(_WORD *)(v61 + 12) = 2082;
        *(void *)(v0 + 128) = v77;
        *(void *)(v0 + 136) = v53;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v64 = sub_100460D40();
        *(void *)(v61 + 14) = sub_10001FCAC(v64, v65, (uint64_t *)v78);
        uint64_t v58 = v77;
        swift_bridgeObjectRelease();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
        _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v61, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
      }
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v73);
      sub_10003DC9C();
      swift_allocError();
      *uint64_t v52 = v58;
      goto LABEL_27;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 224);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v25 = sub_100009688(v23, (uint64_t)qword_100572290);
  *(void *)(v0 + 240) = v25;
  id v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(void *)(v0 + 248) = v26;
  *(void *)(v0 + 256) = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v26(v22, v25, v23);
  char v72 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  char v27 = sub_10045D2F0();
  os_log_type_t v28 = sub_100461770();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 224);
  uint64_t v31 = *(void *)(v0 + 184);
  uint64_t v32 = *(void *)(v0 + 192);
  if (v29)
  {
    *(void *)typea = *(void *)(v0 + 224);
    uint64_t v33 = swift_slowAlloc();
    *(void *)&v78[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446210;
    uint64_t v34 = ActionType.rawValue.getter(v72);
    *(void *)(v33 + 4) = sub_10001FCAC(v34, v35, (uint64_t *)v78);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%{public}s: performing…", (uint8_t *)v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(os_log_type_t *, uint64_t))(v32 + 8))(*(os_log_type_t **)typea, v31);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v36 = *(void *)(v0 + 176);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v37 = [self mainRunLoop];
  uint64_t v38 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v36, 1, 1, v38);
  uint64_t v39 = sub_100461CB0();

  sub_100009790(v36, &qword_1005722C0);
  *(void *)(v0 + 144) = v39;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v40 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 152) = v40;
  uint64_t v41 = *(void *)(v0 + 16);
  uint64_t v42 = *(void *)(v0 + 56);
  char v43 = *(unsigned char *)(v0 + 64);
  uint64_t v45 = *(void *)(v0 + 72);
  uint64_t v44 = *(void *)(v0 + 80);
  uint64_t v46 = *(void *)(v0 + 88);
  uint64_t v47 = *(void *)(v0 + 96);
  uint64_t v48 = *(void *)(v0 + 120);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v41;
  *(_OWORD *)(v49 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v49 + 40) = *(_OWORD *)(v0 + 40);
  *(void *)(v49 + 56) = v42;
  *(unsigned char *)(v49 + 64) = v43;
  *(void *)(v49 + 72) = v45;
  *(void *)(v49 + 80) = v44;
  *(void *)(v49 + 88) = v46;
  *(void *)(v49 + 96) = v47;
  *(_OWORD *)(v49 + 104) = *(_OWORD *)(v0 + 104);
  *(void *)(v49 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 264) = sub_10045D7B0();
  swift_release();
  swift_release();
  uint64_t v75 = (uint64_t (*)(void))(*(void *)(v0 + 96) + **(int **)(v0 + 96));
  uint64_t v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v50;
  *uint64_t v50 = v0;
  v50[1] = sub_100143818;
  return v75();
}

uint64_t sub_100143818()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001731C8;
  }
  else {
    uint64_t v2 = sub_10014392C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10014392C()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 184);
  sub_10045D660();
  v2(v3, v1, v4);
  char v27 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v5 = sub_10045D2F0();
  os_log_type_t v6 = sub_100461770();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 184);
  if (v7)
  {
    log = v5;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v11 = ActionType.rawValue.getter(v27);
    *(void *)(v10 + 4) = sub_10001FCAC(v11, v12, &v29);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v10 + 12) = 2082;
    *(void *)(v10 + 14) = sub_10001FCAC(0, 0xE000000000000000, &v29);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "%{public}s: perform success%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v14 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = *(void *)(v0 + 16);
  uint64_t v16 = *(void *)(v0 + 56);
  char v17 = *(unsigned char *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 72);
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v21 = *(void *)(v0 + 96);
  uint64_t v22 = *(void *)(v0 + 120);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  *(void *)(v23 + 32) = v15;
  *(_OWORD *)(v23 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v23 + 56) = *(_OWORD *)(v0 + 40);
  *(void *)(v23 + 72) = v16;
  *(unsigned char *)(v23 + 80) = v17;
  *(void *)(v23 + 88) = v19;
  *(void *)(v23 + 96) = v18;
  *(void *)(v23 + 104) = v20;
  *(void *)(v23 + 112) = v21;
  *(_OWORD *)(v23 + 120) = *(_OWORD *)(v0 + 104);
  *(void *)(v23 + 136) = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100039C5C(v13, (uint64_t)&unk_100576668, v23);
  swift_release();
  swift_release();
  sub_100009790(v13, &qword_100574B80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_100143D48(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 288) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 168) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 176) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 184) = v4;
  *(void *)(v3 + 192) = *(void *)(v4 - 8);
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  *(_OWORD *)(v3 + 112) = v2[6];
  long long v6 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v6;
  long long v7 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v7;
  return _swift_task_switch(sub_100143EBC, 0, 0);
}

uint64_t sub_100143EBC()
{
  uint64_t v85 = v0;
  char v1 = *(unsigned char *)(v0 + 64);
  if (ActionType.isHidden.getter(v1))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v2 = *(void *)(v0 + 232);
      uint64_t v3 = *(void *)(v0 + 184);
      uint64_t v4 = *(void *)(v0 + 192);
      uint64_t v5 = sub_100009688(v3, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      long long v6 = sub_10045D2F0();
      os_log_type_t v7 = sub_100461750();
      BOOL v8 = os_log_type_enabled(v6, v7);
      uint64_t v9 = *(void *)(v0 + 232);
      uint64_t v10 = *(void *)(v0 + 184);
      uint64_t v11 = *(void *)(v0 + 192);
      if (v8)
      {
        uint64_t v71 = *(void *)(v0 + 232);
        uint64_t v12 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136446210;
        uint64_t v13 = ActionType.rawValue.getter(v1);
        *(void *)(v12 + 4) = sub_10001FCAC(v13, v14, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v71, v10);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
    }
    sub_10003DC9C();
    swift_allocError();
    *uint64_t v52 = 0xD000000000000014;
    uint64_t v53 = 0x800000010048EDB0;
LABEL_27:
    v52[1] = v53;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
    return v66();
  }
  if ((*(unsigned char *)(v0 + 288) & 1) == 0)
  {
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 88);
    long long v18 = *(_OWORD *)(v0 + 32);
    v78[0] = *(_OWORD *)(v0 + 16);
    v78[1] = v18;
    v78[2] = *(_OWORD *)(v0 + 48);
    char v79 = v1;
    uint64_t v80 = v15;
    uint64_t v81 = v16;
    uint64_t v82 = v17;
    long long v19 = *(_OWORD *)(v0 + 112);
    long long v83 = *(_OWORD *)(v0 + 96);
    long long v84 = v19;
    uint64_t v20 = v15(v78);
    if (v21 != 1)
    {
      uint64_t v53 = v21;
      uint64_t v77 = v20;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v55 = *(void *)(v0 + 192);
      uint64_t v54 = *(void *)(v0 + 200);
      uint64_t v56 = *(void *)(v0 + 184);
      uint64_t v57 = sub_100009688(v56, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v54, v57, v56);
      char v68 = *(unsigned char *)(v0 + 64);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v58 = v77;
      sub_10003DC88(v77, v53);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10003DC88(v77, v53);
      uint64_t v59 = sub_10045D2F0();
      os_log_type_t type = sub_100461750();
      BOOL v60 = os_log_type_enabled(v59, type);
      uint64_t v76 = *(void *)(v0 + 192);
      uint64_t v73 = *(void *)(v0 + 184);
      uint64_t v74 = *(void *)(v0 + 200);
      if (v60)
      {
        log = v59;
        uint64_t v61 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 136446466;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v62 = ActionType.rawValue.getter(v68);
        *(void *)(v61 + 4) = sub_10001FCAC(v62, v63, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        *(_WORD *)(v61 + 12) = 2082;
        *(void *)(v0 + 128) = v77;
        *(void *)(v0 + 136) = v53;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v64 = sub_100460D40();
        *(void *)(v61 + 14) = sub_10001FCAC(v64, v65, (uint64_t *)v78);
        uint64_t v58 = v77;
        swift_bridgeObjectRelease();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
        _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v61, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
      }
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v73);
      sub_10003DC9C();
      swift_allocError();
      *uint64_t v52 = v58;
      goto LABEL_27;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 224);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v25 = sub_100009688(v23, (uint64_t)qword_100572290);
  *(void *)(v0 + 240) = v25;
  id v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(void *)(v0 + 248) = v26;
  *(void *)(v0 + 256) = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v26(v22, v25, v23);
  char v72 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  char v27 = sub_10045D2F0();
  os_log_type_t v28 = sub_100461770();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 224);
  uint64_t v31 = *(void *)(v0 + 184);
  uint64_t v32 = *(void *)(v0 + 192);
  if (v29)
  {
    *(void *)typea = *(void *)(v0 + 224);
    uint64_t v33 = swift_slowAlloc();
    *(void *)&v78[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446210;
    uint64_t v34 = ActionType.rawValue.getter(v72);
    *(void *)(v33 + 4) = sub_10001FCAC(v34, v35, (uint64_t *)v78);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%{public}s: performing…", (uint8_t *)v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(os_log_type_t *, uint64_t))(v32 + 8))(*(os_log_type_t **)typea, v31);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v36 = *(void *)(v0 + 176);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v37 = [self mainRunLoop];
  uint64_t v38 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v36, 1, 1, v38);
  uint64_t v39 = sub_100461CB0();

  sub_100009790(v36, &qword_1005722C0);
  *(void *)(v0 + 144) = v39;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v40 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 152) = v40;
  uint64_t v41 = *(void *)(v0 + 16);
  uint64_t v42 = *(void *)(v0 + 56);
  char v43 = *(unsigned char *)(v0 + 64);
  uint64_t v45 = *(void *)(v0 + 72);
  uint64_t v44 = *(void *)(v0 + 80);
  uint64_t v46 = *(void *)(v0 + 88);
  uint64_t v47 = *(void *)(v0 + 96);
  uint64_t v48 = *(void *)(v0 + 120);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v41;
  *(_OWORD *)(v49 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v49 + 40) = *(_OWORD *)(v0 + 40);
  *(void *)(v49 + 56) = v42;
  *(unsigned char *)(v49 + 64) = v43;
  *(void *)(v49 + 72) = v45;
  *(void *)(v49 + 80) = v44;
  *(void *)(v49 + 88) = v46;
  *(void *)(v49 + 96) = v47;
  *(_OWORD *)(v49 + 104) = *(_OWORD *)(v0 + 104);
  *(void *)(v49 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 264) = sub_10045D7B0();
  swift_release();
  swift_release();
  uint64_t v75 = (uint64_t (*)(void))(*(void *)(v0 + 96) + **(int **)(v0 + 96));
  uint64_t v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v50;
  *uint64_t v50 = v0;
  v50[1] = sub_100144B30;
  return v75();
}

uint64_t sub_100144B30()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001731C8;
  }
  else {
    uint64_t v2 = sub_100144C44;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100144C44()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 184);
  sub_10045D660();
  v2(v3, v1, v4);
  char v27 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v5 = sub_10045D2F0();
  os_log_type_t v6 = sub_100461770();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 184);
  if (v7)
  {
    log = v5;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v11 = ActionType.rawValue.getter(v27);
    *(void *)(v10 + 4) = sub_10001FCAC(v11, v12, &v29);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v10 + 12) = 2082;
    *(void *)(v10 + 14) = sub_10001FCAC(0, 0xE000000000000000, &v29);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "%{public}s: perform success%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v14 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = *(void *)(v0 + 16);
  uint64_t v16 = *(void *)(v0 + 56);
  char v17 = *(unsigned char *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 72);
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v21 = *(void *)(v0 + 96);
  uint64_t v22 = *(void *)(v0 + 120);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  *(void *)(v23 + 32) = v15;
  *(_OWORD *)(v23 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v23 + 56) = *(_OWORD *)(v0 + 40);
  *(void *)(v23 + 72) = v16;
  *(unsigned char *)(v23 + 80) = v17;
  *(void *)(v23 + 88) = v19;
  *(void *)(v23 + 96) = v18;
  *(void *)(v23 + 104) = v20;
  *(void *)(v23 + 112) = v21;
  *(_OWORD *)(v23 + 120) = *(_OWORD *)(v0 + 104);
  *(void *)(v23 + 136) = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100039C5C(v13, (uint64_t)&unk_1005766E8, v23);
  swift_release();
  swift_release();
  sub_100009790(v13, &qword_100574B80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_100145060(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 1200) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 1080) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 1088) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 1096) = v4;
  *(void *)(v3 + 1104) = *(void *)(v4 - 8);
  *(void *)(v3 + 1112) = swift_task_alloc();
  *(void *)(v3 + 1120) = swift_task_alloc();
  *(void *)(v3 + 1128) = swift_task_alloc();
  *(void *)(v3 + 1136) = swift_task_alloc();
  *(void *)(v3 + 1144) = swift_task_alloc();
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  long long v6 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v6;
  long long v7 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v7;
  long long v8 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v8;
  return _swift_task_switch(sub_1001451D4, 0, 0);
}

uint64_t sub_1001451D4()
{
  uint64_t v96 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 80);
  if (ActionType.isHidden.getter(v2))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v3 = *(void *)(v0 + 1144);
      uint64_t v4 = *(void *)(v0 + 1104);
      uint64_t v5 = *(void *)(v0 + 1096);
      uint64_t v6 = sub_100009688(v5, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
      long long v7 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v0 + 864) = v7;
      long long v8 = *(_OWORD *)(v0 + 128);
      *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v0 + 896) = v8;
      long long v9 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 784) = *v1;
      *(_OWORD *)(v0 + 800) = v9;
      long long v10 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 832) = v10;
      sub_10006E318(v0 + 784);
      uint64_t v11 = sub_10045D2F0();
      os_log_type_t v12 = sub_100461750();
      BOOL v13 = os_log_type_enabled(v11, v12);
      uint64_t v14 = *(void *)(v0 + 1144);
      uint64_t v15 = *(void *)(v0 + 1104);
      uint64_t v16 = *(void *)(v0 + 1096);
      if (v13)
      {
        uint64_t v17 = swift_slowAlloc();
        *(void *)&v89[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136446210;
        uint64_t v18 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 848));
        *(void *)(v17 + 4) = sub_10001FCAC(v18, v19, (uint64_t *)v89);
        swift_bridgeObjectRelease();
        sub_10006DD74(v0 + 784);
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v17, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10006DD74(v0 + 784);
      }

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
    sub_10003DC9C();
    swift_allocError();
    *uint64_t v62 = 0xD000000000000014;
    v62[1] = 0x800000010048EDB0;
LABEL_28:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v85 = *(uint64_t (**)(void))(v0 + 8);
    return v85();
  }
  if ((*(unsigned char *)(v0 + 1200) & 1) == 0)
  {
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 88);
    uint64_t v21 = *(void *)(v0 + 96);
    uint64_t v22 = *(void *)(v0 + 104);
    long long v23 = *(_OWORD *)(v0 + 32);
    v89[0] = *(_OWORD *)(v0 + 16);
    v89[1] = v23;
    long long v24 = *(_OWORD *)(v0 + 64);
    v89[2] = *(_OWORD *)(v0 + 48);
    v89[3] = v24;
    char v90 = v2;
    uint64_t v91 = v20;
    uint64_t v92 = v21;
    uint64_t v93 = v22;
    long long v25 = *(_OWORD *)(v0 + 128);
    long long v94 = *(_OWORD *)(v0 + 112);
    long long v95 = v25;
    uint64_t v26 = v20(v89);
    if (v27 != 1)
    {
      uint64_t v63 = v26;
      uint64_t v64 = v27;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v65 = *(void *)(v0 + 1112);
      uint64_t v66 = *(void *)(v0 + 1104);
      uint64_t v67 = *(void *)(v0 + 1096);
      uint64_t v68 = sub_100009688(v67, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v65, v68, v67);
      long long v69 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v0 + 480) = v69;
      long long v70 = *(_OWORD *)(v0 + 128);
      *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v0 + 512) = v70;
      long long v71 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 400) = *v1;
      *(_OWORD *)(v0 + 416) = v71;
      long long v72 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 448) = v72;
      sub_10006E318(v0 + 400);
      sub_10003DC88(v63, v64);
      sub_10006E318(v0 + 400);
      sub_10003DC88(v63, v64);
      uint64_t v73 = sub_10045D2F0();
      os_log_type_t v74 = sub_100461750();
      BOOL v75 = os_log_type_enabled(v73, v74);
      uint64_t v76 = *(void *)(v0 + 1112);
      uint64_t v77 = *(void *)(v0 + 1104);
      uint64_t v78 = *(void *)(v0 + 1096);
      if (v75)
      {
        uint64_t v88 = *(void *)(v0 + 1112);
        uint64_t v79 = swift_slowAlloc();
        *(void *)&v89[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v79 = 136446466;
        sub_10006DD74(v0 + 400);
        uint64_t v80 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 464));
        *(void *)(v79 + 4) = sub_10001FCAC(v80, v81, (uint64_t *)v89);
        swift_bridgeObjectRelease();
        sub_10006DD74(v0 + 400);
        *(_WORD *)(v79 + 12) = 2082;
        *(void *)(v0 + 1040) = v63;
        *(void *)(v0 + 1048) = v64;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v82 = sub_100460D40();
        *(void *)(v79 + 14) = sub_10001FCAC(v82, v83, (uint64_t *)v89);
        swift_bridgeObjectRelease();
        sub_100018DAC(v63, v64);
        sub_100018DAC(v63, v64);
        _os_log_impl((void *)&_mh_execute_header, v73, v74, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v79, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v88, v78);
      }
      else
      {
        sub_10006DD74(v0 + 400);
        sub_10006DD74(v0 + 400);
        sub_100018DAC(v63, v64);
        sub_100018DAC(v63, v64);

        (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v78);
      }
      sub_10003DC9C();
      swift_allocError();
      *long long v84 = v63;
      v84[1] = v64;
      goto LABEL_28;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v28 = *(void *)(v0 + 1136);
  uint64_t v29 = *(void *)(v0 + 1104);
  uint64_t v30 = *(void *)(v0 + 1096);
  uint64_t v31 = sub_100009688(v30, (uint64_t)qword_100572290);
  *(void *)(v0 + 1152) = v31;
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  *(void *)(v0 + 1160) = v32;
  *(void *)(v0 + 1168) = (v29 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v32(v28, v31, v30);
  long long v33 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 224) = v33;
  long long v34 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 256) = v34;
  long long v35 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 144) = *v1;
  *(_OWORD *)(v0 + 160) = v35;
  long long v36 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 192) = v36;
  sub_10006E318(v0 + 144);
  id v37 = sub_10045D2F0();
  os_log_type_t v38 = sub_100461770();
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v40 = *(void *)(v0 + 1136);
  uint64_t v41 = *(void *)(v0 + 1104);
  uint64_t v42 = *(void *)(v0 + 1096);
  if (v39)
  {
    uint64_t v86 = *(void *)(v0 + 1136);
    uint64_t v43 = swift_slowAlloc();
    *(void *)&v89[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v43 = 136446210;
    uint64_t v44 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 208));
    *(void *)(v43 + 4) = sub_10001FCAC(v44, v45, (uint64_t *)v89);
    swift_bridgeObjectRelease();
    sub_10006DD74(v0 + 144);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "%{public}s: performing…", (uint8_t *)v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v86, v42);
  }
  else
  {
    sub_10006DD74(v0 + 144);

    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
  }
  uint64_t v46 = *(void *)(v0 + 1088);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v47 = [self mainRunLoop];
  uint64_t v48 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v46, 1, 1, v48);
  uint64_t v49 = sub_100461CB0();

  sub_100009790(v46, &qword_1005722C0);
  *(void *)(v0 + 1064) = v49;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v50 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 1056) = v50;
  long long v51 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 352) = v51;
  long long v52 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 384) = v52;
  long long v53 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v53;
  long long v54 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 320) = v54;
  uint64_t v55 = (_OWORD *)swift_allocObject();
  long long v56 = *(_OWORD *)(v0 + 96);
  v55[5] = *(_OWORD *)(v0 + 80);
  v55[6] = v56;
  long long v57 = *(_OWORD *)(v0 + 128);
  v55[7] = *(_OWORD *)(v0 + 112);
  v55[8] = v57;
  long long v58 = *(_OWORD *)(v0 + 32);
  v55[1] = *v1;
  v55[2] = v58;
  long long v59 = *(_OWORD *)(v0 + 64);
  v55[3] = *(_OWORD *)(v0 + 48);
  v55[4] = v59;
  sub_10006E318(v0 + 272);
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 1176) = sub_10045D7B0();
  swift_release();
  swift_release();
  uint64_t v87 = (uint64_t (*)(void))(*(void *)(v0 + 112) + **(int **)(v0 + 112));
  BOOL v60 = (void *)swift_task_alloc();
  *(void *)(v0 + 1184) = v60;
  *BOOL v60 = v0;
  v60[1] = sub_100145C38;
  return v87();
}

uint64_t sub_100145C38()
{
  *(void *)(*(void *)v1 + 1192) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_10014609C;
  }
  else {
    char v2 = sub_100145D4C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100145D4C()
{
  uint64_t v34 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 16);
  char v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1160);
  uint64_t v3 = *(void *)(v0 + 1152);
  uint64_t v4 = *(void *)(v0 + 1128);
  uint64_t v5 = *(void *)(v0 + 1096);
  sub_10045D660();
  v2(v4, v3, v5);
  long long v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 976) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 992) = v6;
  long long v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 1008) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 1024) = v7;
  long long v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 912) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 928) = v8;
  long long v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 944) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 960) = v9;
  sub_10006E318(v0 + 912);
  long long v10 = sub_10045D2F0();
  os_log_type_t v11 = sub_100461770();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 1128);
  uint64_t v14 = *(void *)(v0 + 1104);
  uint64_t v15 = *(void *)(v0 + 1096);
  if (v12)
  {
    uint64_t v32 = *(void *)(v0 + 1128);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v17 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 976));
    *(void *)(v16 + 4) = sub_10001FCAC(v17, v18, &v33);
    swift_bridgeObjectRelease();
    sub_10006DD74(v0 + 912);
    *(_WORD *)(v16 + 12) = 2082;
    *(void *)(v16 + 14) = sub_10001FCAC(0, 0xE000000000000000, &v33);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: perform success%{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v32, v15);
  }
  else
  {
    sub_10006DD74(v0 + 912);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v19 = *(void *)(v0 + 1080);
  uint64_t v20 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  long long v21 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 608) = v21;
  long long v22 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 640) = v22;
  long long v23 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 528) = *v1;
  *(_OWORD *)(v0 + 544) = v23;
  long long v24 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 576) = v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  long long v26 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v25 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v25 + 112) = v26;
  long long v27 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v25 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v25 + 144) = v27;
  long long v28 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v25 + 32) = *v1;
  *(_OWORD *)(v25 + 48) = v28;
  long long v29 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v25 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v25 + 80) = v29;
  sub_10006E318(v0 + 528);
  sub_100039C5C(v19, (uint64_t)&unk_1005766C8, v25);
  swift_release();
  swift_release();
  sub_100009790(v19, &qword_100574B80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_10014609C()
{
  uint64_t v26 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1160);
  uint64_t v2 = *(void *)(v0 + 1152);
  uint64_t v3 = *(void *)(v0 + 1120);
  uint64_t v4 = *(void *)(v0 + 1096);
  swift_release();
  v1(v3, v2, v4);
  long long v5 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 720) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 736) = v5;
  long long v6 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 752) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 768) = v6;
  long long v7 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 672) = v7;
  long long v8 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 688) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 704) = v8;
  sub_10006E318(v0 + 656);
  swift_errorRetain();
  sub_10006E318(v0 + 656);
  swift_errorRetain();
  long long v9 = sub_10045D2F0();
  os_log_type_t v10 = sub_100461750();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = *(void *)(v0 + 1192);
    uint64_t v12 = *(void *)(v0 + 1104);
    uint64_t v23 = *(void *)(v0 + 1096);
    uint64_t v24 = *(void *)(v0 + 1120);
    uint64_t v13 = swift_slowAlloc();
    v25[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    sub_10006DD74(v0 + 656);
    uint64_t v14 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 720));
    *(void *)(v13 + 4) = sub_10001FCAC(v14, v15, v25);
    swift_bridgeObjectRelease();
    sub_10006DD74(v0 + 656);
    *(_WORD *)(v13 + 12) = 2082;
    *(void *)(v0 + 1072) = v11;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v16 = sub_100460D40();
    *(void *)(v13 + 14) = sub_10001FCAC(v16, v17, v25);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s: perform failed: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v24, v23);
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 1120);
    uint64_t v19 = *(void *)(v0 + 1104);
    uint64_t v20 = *(void *)(v0 + 1096);
    sub_10006DD74(v0 + 656);
    sub_10006DD74(v0 + 656);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_10014639C(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 1200) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 1080) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 1088) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 1096) = v4;
  *(void *)(v3 + 1104) = *(void *)(v4 - 8);
  *(void *)(v3 + 1112) = swift_task_alloc();
  *(void *)(v3 + 1120) = swift_task_alloc();
  *(void *)(v3 + 1128) = swift_task_alloc();
  *(void *)(v3 + 1136) = swift_task_alloc();
  *(void *)(v3 + 1144) = swift_task_alloc();
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  long long v6 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v6;
  long long v7 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v7;
  long long v8 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v8;
  return _swift_task_switch(sub_100146510, 0, 0);
}

uint64_t sub_100146510()
{
  uint64_t v99 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 80);
  if (ActionType.isHidden.getter(v2))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v3 = *(void *)(v0 + 1144);
      uint64_t v4 = *(void *)(v0 + 1104);
      uint64_t v5 = *(void *)(v0 + 1096);
      uint64_t v6 = sub_100009688(v5, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
      long long v7 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v0 + 864) = v7;
      long long v8 = *(_OWORD *)(v0 + 128);
      *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v0 + 896) = v8;
      long long v9 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 784) = *v1;
      *(_OWORD *)(v0 + 800) = v9;
      long long v10 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 832) = v10;
      sub_10006DFC0(v0 + 784);
      uint64_t v11 = sub_10045D2F0();
      os_log_type_t v12 = sub_100461750();
      BOOL v13 = os_log_type_enabled(v11, v12);
      uint64_t v14 = *(void *)(v0 + 1144);
      uint64_t v15 = *(void *)(v0 + 1104);
      uint64_t v16 = *(void *)(v0 + 1096);
      if (v13)
      {
        uint64_t v17 = swift_slowAlloc();
        *(void *)&v90[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136446210;
        uint64_t v18 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 848));
        *(void *)(v17 + 4) = sub_10001FCAC(v18, v19, (uint64_t *)v90);
        swift_bridgeObjectRelease();
        sub_10006DE00(v0 + 784, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v17, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10006DE00(v0 + 784, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
      }

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
    sub_10003DC9C();
    swift_allocError();
    *uint64_t v63 = 0xD000000000000014;
    v63[1] = 0x800000010048EDB0;
LABEL_28:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v86 = *(uint64_t (**)(void))(v0 + 8);
    return v86();
  }
  if ((*(unsigned char *)(v0 + 1200) & 1) == 0)
  {
    uint64_t v20 = *(void *)(v0 + 64);
    uint64_t v21 = *(void *)(v0 + 72);
    long long v22 = *(uint64_t (**)(void))(v0 + 88);
    uint64_t v23 = *(void *)(v0 + 96);
    uint64_t v24 = *(void *)(v0 + 104);
    long long v25 = *(_OWORD *)(v0 + 32);
    v90[0] = *(_OWORD *)(v0 + 16);
    v90[1] = v25;
    v90[2] = *(_OWORD *)(v0 + 48);
    uint64_t v91 = v20;
    uint64_t v92 = v21;
    char v93 = v2;
    long long v94 = v22;
    uint64_t v95 = v23;
    uint64_t v96 = v24;
    long long v26 = *(_OWORD *)(v0 + 128);
    long long v97 = *(_OWORD *)(v0 + 112);
    long long v98 = v26;
    uint64_t v27 = v22(v90);
    if (v28 != 1)
    {
      uint64_t v64 = v27;
      uint64_t v65 = v28;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v66 = *(void *)(v0 + 1112);
      uint64_t v67 = *(void *)(v0 + 1104);
      uint64_t v68 = *(void *)(v0 + 1096);
      uint64_t v69 = sub_100009688(v68, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v66, v69, v68);
      long long v70 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v0 + 480) = v70;
      long long v71 = *(_OWORD *)(v0 + 128);
      *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v0 + 512) = v71;
      long long v72 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 400) = *v1;
      *(_OWORD *)(v0 + 416) = v72;
      long long v73 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 448) = v73;
      sub_10006DFC0(v0 + 400);
      sub_10003DC88(v64, v65);
      sub_10006DFC0(v0 + 400);
      sub_10003DC88(v64, v65);
      os_log_type_t v74 = sub_10045D2F0();
      os_log_type_t v75 = sub_100461750();
      BOOL v76 = os_log_type_enabled(v74, v75);
      uint64_t v77 = *(void *)(v0 + 1112);
      uint64_t v78 = *(void *)(v0 + 1104);
      uint64_t v79 = *(void *)(v0 + 1096);
      if (v76)
      {
        uint64_t v89 = *(void *)(v0 + 1096);
        uint64_t v80 = swift_slowAlloc();
        *(void *)&v90[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v80 = 136446466;
        sub_10006DE00(v0 + 400, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
        uint64_t v81 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 464));
        *(void *)(v80 + 4) = sub_10001FCAC(v81, v82, (uint64_t *)v90);
        swift_bridgeObjectRelease();
        sub_10006DE00(v0 + 400, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
        *(_WORD *)(v80 + 12) = 2082;
        *(void *)(v0 + 1040) = v64;
        *(void *)(v0 + 1048) = v65;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v83 = sub_100460D40();
        *(void *)(v80 + 14) = sub_10001FCAC(v83, v84, (uint64_t *)v90);
        swift_bridgeObjectRelease();
        sub_100018DAC(v64, v65);
        sub_100018DAC(v64, v65);
        _os_log_impl((void *)&_mh_execute_header, v74, v75, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v80, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v89);
      }
      else
      {
        sub_10006DE00(v0 + 400, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
        sub_10006DE00(v0 + 400, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
        sub_100018DAC(v64, v65);
        sub_100018DAC(v64, v65);

        (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v79);
      }
      sub_10003DC9C();
      swift_allocError();
      *uint64_t v85 = v64;
      v85[1] = v65;
      goto LABEL_28;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v29 = *(void *)(v0 + 1136);
  uint64_t v30 = *(void *)(v0 + 1104);
  uint64_t v31 = *(void *)(v0 + 1096);
  uint64_t v32 = sub_100009688(v31, (uint64_t)qword_100572290);
  *(void *)(v0 + 1152) = v32;
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
  *(void *)(v0 + 1160) = v33;
  *(void *)(v0 + 1168) = (v30 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v33(v29, v32, v31);
  long long v34 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 224) = v34;
  long long v35 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 256) = v35;
  long long v36 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 144) = *v1;
  *(_OWORD *)(v0 + 160) = v36;
  long long v37 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 192) = v37;
  sub_10006DFC0(v0 + 144);
  os_log_type_t v38 = sub_10045D2F0();
  os_log_type_t v39 = sub_100461770();
  BOOL v40 = os_log_type_enabled(v38, v39);
  uint64_t v41 = *(void *)(v0 + 1136);
  uint64_t v42 = *(void *)(v0 + 1104);
  uint64_t v43 = *(void *)(v0 + 1096);
  if (v40)
  {
    uint64_t v87 = *(void *)(v0 + 1136);
    uint64_t v44 = swift_slowAlloc();
    *(void *)&v90[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 136446210;
    uint64_t v45 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 208));
    *(void *)(v44 + 4) = sub_10001FCAC(v45, v46, (uint64_t *)v90);
    swift_bridgeObjectRelease();
    sub_10006DE00(v0 + 144, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "%{public}s: performing…", (uint8_t *)v44, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v87, v43);
  }
  else
  {
    sub_10006DE00(v0 + 144, (void (*)(uint64_t))&_swift_bridgeObjectRelease);

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v41, v43);
  }
  uint64_t v47 = *(void *)(v0 + 1088);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v48 = [self mainRunLoop];
  uint64_t v49 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v47, 1, 1, v49);
  uint64_t v50 = sub_100461CB0();

  sub_100009790(v47, &qword_1005722C0);
  *(void *)(v0 + 1064) = v50;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v51 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 1056) = v51;
  long long v52 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 352) = v52;
  long long v53 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 384) = v53;
  long long v54 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v54;
  long long v55 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 320) = v55;
  long long v56 = (_OWORD *)swift_allocObject();
  long long v57 = *(_OWORD *)(v0 + 96);
  v56[5] = *(_OWORD *)(v0 + 80);
  v56[6] = v57;
  long long v58 = *(_OWORD *)(v0 + 128);
  v56[7] = *(_OWORD *)(v0 + 112);
  v56[8] = v58;
  long long v59 = *(_OWORD *)(v0 + 32);
  v56[1] = *v1;
  _OWORD v56[2] = v59;
  long long v60 = *(_OWORD *)(v0 + 64);
  v56[3] = *(_OWORD *)(v0 + 48);
  v56[4] = v60;
  sub_10006DFC0(v0 + 272);
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 1176) = sub_10045D7B0();
  swift_release();
  swift_release();
  uint64_t v88 = (uint64_t (*)(void))(*(void *)(v0 + 112) + **(int **)(v0 + 112));
  uint64_t v61 = (void *)swift_task_alloc();
  *(void *)(v0 + 1184) = v61;
  *uint64_t v61 = v0;
  v61[1] = sub_100147008;
  return v88();
}

uint64_t sub_100147008()
{
  *(void *)(*(void *)v1 + 1192) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_100147494;
  }
  else {
    char v2 = sub_10014711C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10014711C()
{
  uint64_t v34 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 16);
  char v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1160);
  uint64_t v3 = *(void *)(v0 + 1152);
  uint64_t v4 = *(void *)(v0 + 1128);
  uint64_t v5 = *(void *)(v0 + 1096);
  sub_10045D660();
  v2(v4, v3, v5);
  long long v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 976) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 992) = v6;
  long long v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 1008) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 1024) = v7;
  long long v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 912) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 928) = v8;
  long long v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 944) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 960) = v9;
  sub_10006DFC0(v0 + 912);
  long long v10 = sub_10045D2F0();
  os_log_type_t v11 = sub_100461770();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 1128);
  uint64_t v14 = *(void *)(v0 + 1104);
  uint64_t v15 = *(void *)(v0 + 1096);
  if (v12)
  {
    uint64_t v32 = *(void *)(v0 + 1128);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v17 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 976));
    *(void *)(v16 + 4) = sub_10001FCAC(v17, v18, &v33);
    swift_bridgeObjectRelease();
    sub_10006DE00(v0 + 912, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(_WORD *)(v16 + 12) = 2082;
    *(void *)(v16 + 14) = sub_10001FCAC(0, 0xE000000000000000, &v33);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: perform success%{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v32, v15);
  }
  else
  {
    sub_10006DE00(v0 + 912, (void (*)(uint64_t))&_swift_bridgeObjectRelease);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v19 = *(void *)(v0 + 1080);
  uint64_t v20 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  long long v21 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 608) = v21;
  long long v22 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 640) = v22;
  long long v23 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 528) = *v1;
  *(_OWORD *)(v0 + 544) = v23;
  long long v24 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 576) = v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  long long v26 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v25 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v25 + 112) = v26;
  long long v27 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v25 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v25 + 144) = v27;
  long long v28 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v25 + 32) = *v1;
  *(_OWORD *)(v25 + 48) = v28;
  long long v29 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v25 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v25 + 80) = v29;
  sub_10006DFC0(v0 + 528);
  sub_100039C5C(v19, (uint64_t)&unk_1005766A8, v25);
  swift_release();
  swift_release();
  sub_100009790(v19, &qword_100574B80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_100147494()
{
  uint64_t v26 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1160);
  uint64_t v2 = *(void *)(v0 + 1152);
  uint64_t v3 = *(void *)(v0 + 1120);
  uint64_t v4 = *(void *)(v0 + 1096);
  swift_release();
  v1(v3, v2, v4);
  long long v5 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 720) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 736) = v5;
  long long v6 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 752) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 768) = v6;
  long long v7 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 672) = v7;
  long long v8 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 688) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 704) = v8;
  sub_10006DFC0(v0 + 656);
  swift_errorRetain();
  sub_10006DFC0(v0 + 656);
  swift_errorRetain();
  long long v9 = sub_10045D2F0();
  os_log_type_t v10 = sub_100461750();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = *(void *)(v0 + 1192);
    uint64_t v24 = *(void *)(v0 + 1120);
    uint64_t v12 = *(void *)(v0 + 1104);
    uint64_t v23 = *(void *)(v0 + 1096);
    uint64_t v13 = swift_slowAlloc();
    v25[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    sub_10006DE00(v0 + 656, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    uint64_t v14 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 720));
    *(void *)(v13 + 4) = sub_10001FCAC(v14, v15, v25);
    swift_bridgeObjectRelease();
    sub_10006DE00(v0 + 656, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    *(_WORD *)(v13 + 12) = 2082;
    *(void *)(v0 + 1072) = v11;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v16 = sub_100460D40();
    *(void *)(v13 + 14) = sub_10001FCAC(v16, v17, v25);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s: perform failed: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v24, v23);
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 1120);
    uint64_t v19 = *(void *)(v0 + 1104);
    uint64_t v20 = *(void *)(v0 + 1096);
    sub_10006DE00(v0 + 656, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    sub_10006DE00(v0 + 656, (void (*)(uint64_t))&_swift_bridgeObjectRelease);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_1001477D0(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 1264) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 1144) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 1152) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 1160) = v4;
  *(void *)(v3 + 1168) = *(void *)(v4 - 8);
  *(void *)(v3 + 1176) = swift_task_alloc();
  *(void *)(v3 + 1184) = swift_task_alloc();
  *(void *)(v3 + 1192) = swift_task_alloc();
  *(void *)(v3 + 1200) = swift_task_alloc();
  *(void *)(v3 + 1208) = swift_task_alloc();
  long long v5 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v3 + 128) = v5;
  *(void *)(v3 + 144) = *(void *)(v2 + 128);
  long long v6 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v3 + 64) = v6;
  long long v7 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v3 + 96) = v7;
  long long v8 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v3 + 32) = v8;
  return _swift_task_switch(sub_10014794C, 0, 0);
}

uint64_t sub_10014794C()
{
  uint64_t v98 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 88);
  if (ActionType.isHidden.getter(v2))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v3 = *(void *)(v0 + 1208);
      uint64_t v4 = *(void *)(v0 + 1168);
      uint64_t v5 = *(void *)(v0 + 1160);
      uint64_t v6 = sub_100009688(v5, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
      long long v7 = *(_OWORD *)(v0 + 128);
      *(_OWORD *)(v0 + 928) = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v0 + 944) = v7;
      *(void *)(v0 + 960) = *(void *)(v0 + 144);
      long long v8 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 864) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 880) = v8;
      long long v9 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 896) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v0 + 912) = v9;
      long long v10 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 832) = *v1;
      *(_OWORD *)(v0 + 848) = v10;
      sub_10006AB10((id *)(v0 + 832));
      uint64_t v11 = sub_10045D2F0();
      os_log_type_t v12 = sub_100461750();
      BOOL v13 = os_log_type_enabled(v11, v12);
      uint64_t v14 = *(void *)(v0 + 1208);
      uint64_t v15 = *(void *)(v0 + 1168);
      uint64_t v16 = *(void *)(v0 + 1160);
      if (v13)
      {
        uint64_t v17 = swift_slowAlloc();
        *(void *)&long long v87 = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136446210;
        uint64_t v18 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 904));
        *(void *)(v17 + 4) = sub_10001FCAC(v18, v19, (uint64_t *)&v87);
        swift_bridgeObjectRelease();
        sub_10006A8E8((id *)(v0 + 832));
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v17, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10006A8E8((id *)(v0 + 832));
      }

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
    sub_10003DC9C();
    swift_allocError();
    *long long v60 = 0xD000000000000014;
    v60[1] = 0x800000010048EDB0;
LABEL_28:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v83 = *(uint64_t (**)(void))(v0 + 8);
    return v83();
  }
  if ((*(unsigned char *)(v0 + 1264) & 1) == 0)
  {
    uint64_t v20 = *(void *)(v0 + 32);
    long long v21 = *(uint64_t (**)(void))(v0 + 96);
    uint64_t v22 = *(void *)(v0 + 104);
    uint64_t v23 = *(void *)(v0 + 112);
    long long v87 = *(_OWORD *)(v0 + 16);
    uint64_t v88 = v20;
    long long v89 = *(_OWORD *)(v0 + 40);
    long long v90 = *(_OWORD *)(v0 + 56);
    long long v91 = *(_OWORD *)(v0 + 72);
    char v92 = v2;
    char v93 = v21;
    uint64_t v94 = v22;
    uint64_t v95 = v23;
    long long v96 = *(_OWORD *)(v0 + 120);
    long long v97 = *(_OWORD *)(v0 + 136);
    uint64_t v24 = v21(&v87);
    if (v25 != 1)
    {
      uint64_t v61 = v24;
      uint64_t v62 = v25;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v63 = *(void *)(v0 + 1176);
      uint64_t v64 = *(void *)(v0 + 1168);
      uint64_t v65 = *(void *)(v0 + 1160);
      uint64_t v66 = sub_100009688(v65, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16))(v63, v66, v65);
      long long v67 = *(_OWORD *)(v0 + 128);
      *(_OWORD *)(v0 + 520) = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v0 + 536) = v67;
      *(void *)(v0 + 552) = *(void *)(v0 + 144);
      long long v68 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 472) = v68;
      long long v69 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 488) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v0 + 504) = v69;
      long long v70 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 424) = *v1;
      *(_OWORD *)(v0 + 440) = v70;
      sub_10006AB10((id *)(v0 + 424));
      sub_10003DC88(v61, v62);
      sub_10006AB10((id *)(v0 + 424));
      sub_10003DC88(v61, v62);
      long long v71 = sub_10045D2F0();
      os_log_type_t v72 = sub_100461750();
      BOOL v73 = os_log_type_enabled(v71, v72);
      uint64_t v74 = *(void *)(v0 + 1176);
      uint64_t v75 = *(void *)(v0 + 1168);
      uint64_t v76 = *(void *)(v0 + 1160);
      if (v73)
      {
        uint64_t v86 = *(void *)(v0 + 1176);
        uint64_t v77 = swift_slowAlloc();
        *(void *)&long long v87 = swift_slowAlloc();
        *(_DWORD *)uint64_t v77 = 136446466;
        sub_10006A8E8((id *)(v0 + 424));
        uint64_t v78 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 496));
        *(void *)(v77 + 4) = sub_10001FCAC(v78, v79, (uint64_t *)&v87);
        swift_bridgeObjectRelease();
        sub_10006A8E8((id *)(v0 + 424));
        *(_WORD *)(v77 + 12) = 2082;
        *(void *)(v0 + 1104) = v61;
        *(void *)(v0 + 1112) = v62;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v80 = sub_100460D40();
        *(void *)(v77 + 14) = sub_10001FCAC(v80, v81, (uint64_t *)&v87);
        swift_bridgeObjectRelease();
        sub_100018DAC(v61, v62);
        sub_100018DAC(v61, v62);
        _os_log_impl((void *)&_mh_execute_header, v71, v72, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v77, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v86, v76);
      }
      else
      {
        sub_10006A8E8((id *)(v0 + 424));
        sub_10006A8E8((id *)(v0 + 424));
        sub_100018DAC(v61, v62);
        sub_100018DAC(v61, v62);

        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
      }
      sub_10003DC9C();
      swift_allocError();
      uint64_t *v82 = v61;
      v82[1] = v62;
      goto LABEL_28;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v26 = *(void *)(v0 + 1200);
  uint64_t v27 = *(void *)(v0 + 1168);
  uint64_t v28 = *(void *)(v0 + 1160);
  uint64_t v29 = sub_100009688(v28, (uint64_t)qword_100572290);
  *(void *)(v0 + 1216) = v29;
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
  *(void *)(v0 + 1224) = v30;
  *(void *)(v0 + 1232) = (v27 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v30(v26, v29, v28);
  long long v31 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 264) = v31;
  *(void *)(v0 + 280) = *(void *)(v0 + 144);
  long long v32 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 200) = v32;
  long long v33 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 232) = v33;
  long long v34 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 152) = *v1;
  *(_OWORD *)(v0 + 168) = v34;
  sub_10006AB10((id *)(v0 + 152));
  uint64_t v35 = sub_10045D2F0();
  os_log_type_t v36 = sub_100461770();
  BOOL v37 = os_log_type_enabled(v35, v36);
  uint64_t v38 = *(void *)(v0 + 1200);
  uint64_t v39 = *(void *)(v0 + 1168);
  uint64_t v40 = *(void *)(v0 + 1160);
  if (v37)
  {
    uint64_t v84 = *(void *)(v0 + 1200);
    uint64_t v41 = swift_slowAlloc();
    *(void *)&long long v87 = swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 136446210;
    uint64_t v42 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 224));
    *(void *)(v41 + 4) = sub_10001FCAC(v42, v43, (uint64_t *)&v87);
    swift_bridgeObjectRelease();
    sub_10006A8E8((id *)(v0 + 152));
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "%{public}s: performing…", (uint8_t *)v41, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v84, v40);
  }
  else
  {
    sub_10006A8E8((id *)(v0 + 152));

    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
  }
  uint64_t v44 = *(void *)(v0 + 1152);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v45 = [self mainRunLoop];
  uint64_t v46 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v44, 1, 1, v46);
  uint64_t v47 = sub_100461CB0();

  sub_100009790(v44, &qword_1005722C0);
  *(void *)(v0 + 1128) = v47;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v48 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 1120) = v48;
  long long v49 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 400) = v49;
  *(void *)(v0 + 416) = *(void *)(v0 + 144);
  long long v50 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 336) = v50;
  long long v51 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 368) = v51;
  long long v52 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 288) = *v1;
  *(_OWORD *)(v0 + 304) = v52;
  uint64_t v53 = swift_allocObject();
  long long v54 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v53 + 112) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v53 + 128) = v54;
  *(void *)(v53 + 144) = *(void *)(v0 + 144);
  long long v55 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v53 + 48) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v53 + 64) = v55;
  long long v56 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v53 + 80) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v53 + 96) = v56;
  long long v57 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v53 + 16) = *v1;
  *(_OWORD *)(v53 + 32) = v57;
  sub_10006AB10((id *)(v0 + 288));
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 1240) = sub_10045D7B0();
  swift_release();
  swift_release();
  uint64_t v85 = (uint64_t (*)(void))(*(void *)(v0 + 120) + **(int **)(v0 + 120));
  long long v58 = (void *)swift_task_alloc();
  *(void *)(v0 + 1248) = v58;
  *long long v58 = v0;
  v58[1] = sub_1001483F8;
  return v85();
}

uint64_t sub_1001483F8()
{
  *(void *)(*(void *)v1 + 1256) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_100148874;
  }
  else {
    char v2 = sub_10014850C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10014850C()
{
  uint64_t v34 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 16);
  char v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1224);
  uint64_t v3 = *(void *)(v0 + 1216);
  uint64_t v4 = *(void *)(v0 + 1192);
  uint64_t v5 = *(void *)(v0 + 1160);
  sub_10045D660();
  v2(v4, v3, v5);
  long long v6 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 1064) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 1080) = v6;
  *(void *)(v0 + 1096) = *(void *)(v0 + 144);
  long long v7 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 1000) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 1016) = v7;
  long long v8 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 1032) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 1048) = v8;
  long long v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 968) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 984) = v9;
  sub_10006AB10((id *)(v0 + 968));
  long long v10 = sub_10045D2F0();
  os_log_type_t v11 = sub_100461770();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 1192);
  uint64_t v14 = *(void *)(v0 + 1168);
  uint64_t v15 = *(void *)(v0 + 1160);
  if (v12)
  {
    uint64_t v32 = *(void *)(v0 + 1192);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v17 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 1040));
    *(void *)(v16 + 4) = sub_10001FCAC(v17, v18, &v33);
    swift_bridgeObjectRelease();
    sub_10006A8E8((id *)(v0 + 968));
    *(_WORD *)(v16 + 12) = 2082;
    *(void *)(v16 + 14) = sub_10001FCAC(0, 0xE000000000000000, &v33);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: perform success%{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v32, v15);
  }
  else
  {
    sub_10006A8E8((id *)(v0 + 968));

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v19 = *(void *)(v0 + 1144);
  uint64_t v20 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  long long v21 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 672) = v21;
  *(void *)(v0 + 688) = *(void *)(v0 + 144);
  long long v22 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 608) = v22;
  long long v23 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 640) = v23;
  long long v24 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 560) = *v1;
  *(_OWORD *)(v0 + 576) = v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  long long v26 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v25 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v25 + 144) = v26;
  *(void *)(v25 + 160) = *(void *)(v0 + 144);
  long long v27 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v25 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v25 + 80) = v27;
  long long v28 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v25 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v25 + 112) = v28;
  long long v29 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v25 + 32) = *v1;
  *(_OWORD *)(v25 + 48) = v29;
  sub_10006AB10((id *)(v0 + 560));
  sub_100039C5C(v19, (uint64_t)&unk_1005765A8, v25);
  swift_release();
  swift_release();
  sub_100009790(v19, &qword_100574B80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_100148874()
{
  uint64_t v26 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1224);
  uint64_t v2 = *(void *)(v0 + 1216);
  uint64_t v3 = *(void *)(v0 + 1184);
  uint64_t v4 = *(void *)(v0 + 1160);
  swift_release();
  v1(v3, v2, v4);
  long long v5 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 792) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 808) = v5;
  *(void *)(v0 + 824) = *(void *)(v0 + 144);
  long long v6 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 728) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 744) = v6;
  long long v7 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 760) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 776) = v7;
  long long v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 696) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 712) = v8;
  sub_10006AB10((id *)(v0 + 696));
  swift_errorRetain();
  sub_10006AB10((id *)(v0 + 696));
  swift_errorRetain();
  long long v9 = sub_10045D2F0();
  os_log_type_t v10 = sub_100461750();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = *(void *)(v0 + 1256);
    uint64_t v12 = *(void *)(v0 + 1168);
    uint64_t v23 = *(void *)(v0 + 1160);
    uint64_t v24 = *(void *)(v0 + 1184);
    uint64_t v13 = swift_slowAlloc();
    v25[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    sub_10006A8E8((id *)(v0 + 696));
    uint64_t v14 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 768));
    *(void *)(v13 + 4) = sub_10001FCAC(v14, v15, v25);
    swift_bridgeObjectRelease();
    sub_10006A8E8((id *)(v0 + 696));
    *(_WORD *)(v13 + 12) = 2082;
    *(void *)(v0 + 1136) = v11;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v16 = sub_100460D40();
    *(void *)(v13 + 14) = sub_10001FCAC(v16, v17, v25);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s: perform failed: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v24, v23);
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 1184);
    uint64_t v19 = *(void *)(v0 + 1168);
    uint64_t v20 = *(void *)(v0 + 1160);
    sub_10006A8E8((id *)(v0 + 696));
    sub_10006A8E8((id *)(v0 + 696));
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_100148B7C(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 288) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 168) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 176) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 184) = v4;
  *(void *)(v3 + 192) = *(void *)(v4 - 8);
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  *(_OWORD *)(v3 + 112) = v2[6];
  long long v6 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v6;
  long long v7 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v7;
  return _swift_task_switch(sub_100148CF0, 0, 0);
}

uint64_t sub_100148CF0()
{
  uint64_t v85 = v0;
  char v1 = *(unsigned char *)(v0 + 64);
  if (ActionType.isHidden.getter(v1))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v2 = *(void *)(v0 + 232);
      uint64_t v3 = *(void *)(v0 + 184);
      uint64_t v4 = *(void *)(v0 + 192);
      uint64_t v5 = sub_100009688(v3, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      long long v6 = sub_10045D2F0();
      os_log_type_t v7 = sub_100461750();
      BOOL v8 = os_log_type_enabled(v6, v7);
      uint64_t v9 = *(void *)(v0 + 232);
      uint64_t v10 = *(void *)(v0 + 184);
      uint64_t v11 = *(void *)(v0 + 192);
      if (v8)
      {
        uint64_t v71 = *(void *)(v0 + 232);
        uint64_t v12 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136446210;
        uint64_t v13 = ActionType.rawValue.getter(v1);
        *(void *)(v12 + 4) = sub_10001FCAC(v13, v14, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v71, v10);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
    }
    sub_10003DC9C();
    swift_allocError();
    *long long v52 = 0xD000000000000014;
    uint64_t v53 = 0x800000010048EDB0;
LABEL_27:
    v52[1] = v53;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
    return v66();
  }
  if ((*(unsigned char *)(v0 + 288) & 1) == 0)
  {
    unint64_t v15 = *(uint64_t (**)(void))(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 88);
    long long v18 = *(_OWORD *)(v0 + 32);
    v78[0] = *(_OWORD *)(v0 + 16);
    v78[1] = v18;
    v78[2] = *(_OWORD *)(v0 + 48);
    char v79 = v1;
    uint64_t v80 = v15;
    uint64_t v81 = v16;
    uint64_t v82 = v17;
    long long v19 = *(_OWORD *)(v0 + 112);
    long long v83 = *(_OWORD *)(v0 + 96);
    long long v84 = v19;
    uint64_t v20 = v15(v78);
    if (v21 != 1)
    {
      uint64_t v53 = v21;
      uint64_t v77 = v20;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v55 = *(void *)(v0 + 192);
      uint64_t v54 = *(void *)(v0 + 200);
      uint64_t v56 = *(void *)(v0 + 184);
      uint64_t v57 = sub_100009688(v56, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v54, v57, v56);
      char v68 = *(unsigned char *)(v0 + 64);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v58 = v77;
      sub_10003DC88(v77, v53);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10003DC88(v77, v53);
      long long v59 = sub_10045D2F0();
      os_log_type_t type = sub_100461750();
      BOOL v60 = os_log_type_enabled(v59, type);
      uint64_t v76 = *(void *)(v0 + 192);
      uint64_t v73 = *(void *)(v0 + 184);
      uint64_t v74 = *(void *)(v0 + 200);
      if (v60)
      {
        log = v59;
        uint64_t v61 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 136446466;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v62 = ActionType.rawValue.getter(v68);
        *(void *)(v61 + 4) = sub_10001FCAC(v62, v63, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        *(_WORD *)(v61 + 12) = 2082;
        *(void *)(v0 + 128) = v77;
        *(void *)(v0 + 136) = v53;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v64 = sub_100460D40();
        *(void *)(v61 + 14) = sub_10001FCAC(v64, v65, (uint64_t *)v78);
        uint64_t v58 = v77;
        swift_bridgeObjectRelease();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
        _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v61, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
      }
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v73);
      sub_10003DC9C();
      swift_allocError();
      *long long v52 = v58;
      goto LABEL_27;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 224);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v25 = sub_100009688(v23, (uint64_t)qword_100572290);
  *(void *)(v0 + 240) = v25;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(void *)(v0 + 248) = v26;
  *(void *)(v0 + 256) = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v26(v22, v25, v23);
  char v72 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v27 = sub_10045D2F0();
  os_log_type_t v28 = sub_100461770();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 224);
  uint64_t v31 = *(void *)(v0 + 184);
  uint64_t v32 = *(void *)(v0 + 192);
  if (v29)
  {
    *(void *)typea = *(void *)(v0 + 224);
    uint64_t v33 = swift_slowAlloc();
    *(void *)&v78[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446210;
    uint64_t v34 = ActionType.rawValue.getter(v72);
    *(void *)(v33 + 4) = sub_10001FCAC(v34, v35, (uint64_t *)v78);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%{public}s: performing…", (uint8_t *)v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(os_log_type_t *, uint64_t))(v32 + 8))(*(os_log_type_t **)typea, v31);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v36 = *(void *)(v0 + 176);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v37 = [self mainRunLoop];
  uint64_t v38 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v36, 1, 1, v38);
  uint64_t v39 = sub_100461CB0();

  sub_100009790(v36, &qword_1005722C0);
  *(void *)(v0 + 144) = v39;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v40 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 152) = v40;
  uint64_t v41 = *(void *)(v0 + 16);
  uint64_t v42 = *(void *)(v0 + 56);
  char v43 = *(unsigned char *)(v0 + 64);
  uint64_t v45 = *(void *)(v0 + 72);
  uint64_t v44 = *(void *)(v0 + 80);
  uint64_t v46 = *(void *)(v0 + 88);
  uint64_t v47 = *(void *)(v0 + 96);
  uint64_t v48 = *(void *)(v0 + 120);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v41;
  *(_OWORD *)(v49 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v49 + 40) = *(_OWORD *)(v0 + 40);
  *(void *)(v49 + 56) = v42;
  *(unsigned char *)(v49 + 64) = v43;
  *(void *)(v49 + 72) = v45;
  *(void *)(v49 + 80) = v44;
  *(void *)(v49 + 88) = v46;
  *(void *)(v49 + 96) = v47;
  *(_OWORD *)(v49 + 104) = *(_OWORD *)(v0 + 104);
  *(void *)(v49 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 264) = sub_10045D7B0();
  swift_release();
  swift_release();
  uint64_t v75 = (uint64_t (*)(void))(*(void *)(v0 + 96) + **(int **)(v0 + 96));
  long long v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v50;
  *long long v50 = v0;
  v50[1] = sub_100149964;
  return v75();
}

uint64_t sub_100149964()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001731C8;
  }
  else {
    uint64_t v2 = sub_100149A78;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100149A78()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 184);
  sub_10045D660();
  v2(v3, v1, v4);
  char v27 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v5 = sub_10045D2F0();
  os_log_type_t v6 = sub_100461770();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 184);
  if (v7)
  {
    log = v5;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v11 = ActionType.rawValue.getter(v27);
    *(void *)(v10 + 4) = sub_10001FCAC(v11, v12, &v29);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v10 + 12) = 2082;
    *(void *)(v10 + 14) = sub_10001FCAC(0, 0xE000000000000000, &v29);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "%{public}s: perform success%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v14 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = *(void *)(v0 + 16);
  uint64_t v16 = *(void *)(v0 + 56);
  char v17 = *(unsigned char *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 72);
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v21 = *(void *)(v0 + 96);
  uint64_t v22 = *(void *)(v0 + 120);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  *(void *)(v23 + 32) = v15;
  *(_OWORD *)(v23 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v23 + 56) = *(_OWORD *)(v0 + 40);
  *(void *)(v23 + 72) = v16;
  *(unsigned char *)(v23 + 80) = v17;
  *(void *)(v23 + 88) = v19;
  *(void *)(v23 + 96) = v18;
  *(void *)(v23 + 104) = v20;
  *(void *)(v23 + 112) = v21;
  *(_OWORD *)(v23 + 120) = *(_OWORD *)(v0 + 104);
  *(void *)(v23 + 136) = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100039C5C(v13, (uint64_t)&unk_100576688, v23);
  swift_release();
  swift_release();
  sub_100009790(v13, &qword_100574B80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_100149E94(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 288) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 168) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 176) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 184) = v4;
  *(void *)(v3 + 192) = *(void *)(v4 - 8);
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  *(_OWORD *)(v3 + 112) = v2[6];
  long long v6 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v6;
  long long v7 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v7;
  return _swift_task_switch(sub_10014A008, 0, 0);
}

uint64_t sub_10014A008()
{
  uint64_t v85 = v0;
  char v1 = *(unsigned char *)(v0 + 64);
  if (ActionType.isHidden.getter(v1))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v2 = *(void *)(v0 + 232);
      uint64_t v3 = *(void *)(v0 + 184);
      uint64_t v4 = *(void *)(v0 + 192);
      uint64_t v5 = sub_100009688(v3, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      long long v6 = sub_10045D2F0();
      os_log_type_t v7 = sub_100461750();
      BOOL v8 = os_log_type_enabled(v6, v7);
      uint64_t v9 = *(void *)(v0 + 232);
      uint64_t v10 = *(void *)(v0 + 184);
      uint64_t v11 = *(void *)(v0 + 192);
      if (v8)
      {
        uint64_t v71 = *(void *)(v0 + 232);
        uint64_t v12 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136446210;
        uint64_t v13 = ActionType.rawValue.getter(v1);
        *(void *)(v12 + 4) = sub_10001FCAC(v13, v14, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v71, v10);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
    }
    sub_10003DC9C();
    swift_allocError();
    *long long v52 = 0xD000000000000014;
    uint64_t v53 = 0x800000010048EDB0;
LABEL_27:
    v52[1] = v53;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
    return v66();
  }
  if ((*(unsigned char *)(v0 + 288) & 1) == 0)
  {
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 88);
    long long v18 = *(_OWORD *)(v0 + 32);
    v78[0] = *(_OWORD *)(v0 + 16);
    v78[1] = v18;
    v78[2] = *(_OWORD *)(v0 + 48);
    char v79 = v1;
    uint64_t v80 = v15;
    uint64_t v81 = v16;
    uint64_t v82 = v17;
    long long v19 = *(_OWORD *)(v0 + 112);
    long long v83 = *(_OWORD *)(v0 + 96);
    long long v84 = v19;
    uint64_t v20 = v15(v78);
    if (v21 != 1)
    {
      uint64_t v53 = v21;
      uint64_t v77 = v20;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v55 = *(void *)(v0 + 192);
      uint64_t v54 = *(void *)(v0 + 200);
      uint64_t v56 = *(void *)(v0 + 184);
      uint64_t v57 = sub_100009688(v56, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v54, v57, v56);
      char v68 = *(unsigned char *)(v0 + 64);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v58 = v77;
      sub_10003DC88(v77, v53);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10003DC88(v77, v53);
      long long v59 = sub_10045D2F0();
      os_log_type_t type = sub_100461750();
      BOOL v60 = os_log_type_enabled(v59, type);
      uint64_t v76 = *(void *)(v0 + 192);
      uint64_t v73 = *(void *)(v0 + 184);
      uint64_t v74 = *(void *)(v0 + 200);
      if (v60)
      {
        log = v59;
        uint64_t v61 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 136446466;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v62 = ActionType.rawValue.getter(v68);
        *(void *)(v61 + 4) = sub_10001FCAC(v62, v63, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        *(_WORD *)(v61 + 12) = 2082;
        *(void *)(v0 + 128) = v77;
        *(void *)(v0 + 136) = v53;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v64 = sub_100460D40();
        *(void *)(v61 + 14) = sub_10001FCAC(v64, v65, (uint64_t *)v78);
        uint64_t v58 = v77;
        swift_bridgeObjectRelease();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
        _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v61, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
      }
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v73);
      sub_10003DC9C();
      swift_allocError();
      *long long v52 = v58;
      goto LABEL_27;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 224);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v25 = sub_100009688(v23, (uint64_t)qword_100572290);
  *(void *)(v0 + 240) = v25;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(void *)(v0 + 248) = v26;
  *(void *)(v0 + 256) = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v26(v22, v25, v23);
  char v72 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  char v27 = sub_10045D2F0();
  os_log_type_t v28 = sub_100461770();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 224);
  uint64_t v31 = *(void *)(v0 + 184);
  uint64_t v32 = *(void *)(v0 + 192);
  if (v29)
  {
    *(void *)typea = *(void *)(v0 + 224);
    uint64_t v33 = swift_slowAlloc();
    *(void *)&v78[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446210;
    uint64_t v34 = ActionType.rawValue.getter(v72);
    *(void *)(v33 + 4) = sub_10001FCAC(v34, v35, (uint64_t *)v78);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%{public}s: performing…", (uint8_t *)v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(os_log_type_t *, uint64_t))(v32 + 8))(*(os_log_type_t **)typea, v31);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v36 = *(void *)(v0 + 176);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v37 = [self mainRunLoop];
  uint64_t v38 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v36, 1, 1, v38);
  uint64_t v39 = sub_100461CB0();

  sub_100009790(v36, &qword_1005722C0);
  *(void *)(v0 + 144) = v39;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v40 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 152) = v40;
  uint64_t v41 = *(void *)(v0 + 16);
  uint64_t v42 = *(void *)(v0 + 56);
  char v43 = *(unsigned char *)(v0 + 64);
  uint64_t v45 = *(void *)(v0 + 72);
  uint64_t v44 = *(void *)(v0 + 80);
  uint64_t v46 = *(void *)(v0 + 88);
  uint64_t v47 = *(void *)(v0 + 96);
  uint64_t v48 = *(void *)(v0 + 120);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v41;
  *(_OWORD *)(v49 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v49 + 40) = *(_OWORD *)(v0 + 40);
  *(void *)(v49 + 56) = v42;
  *(unsigned char *)(v49 + 64) = v43;
  *(void *)(v49 + 72) = v45;
  *(void *)(v49 + 80) = v44;
  *(void *)(v49 + 88) = v46;
  *(void *)(v49 + 96) = v47;
  *(_OWORD *)(v49 + 104) = *(_OWORD *)(v0 + 104);
  *(void *)(v49 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 264) = sub_10045D7B0();
  swift_release();
  swift_release();
  uint64_t v75 = (uint64_t (*)(void))(*(void *)(v0 + 96) + **(int **)(v0 + 96));
  long long v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v50;
  *long long v50 = v0;
  v50[1] = sub_10014AC7C;
  return v75();
}

uint64_t sub_10014AC7C()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001731C8;
  }
  else {
    uint64_t v2 = sub_10014AD90;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10014AD90()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 184);
  sub_10045D660();
  v2(v3, v1, v4);
  char v27 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v5 = sub_10045D2F0();
  os_log_type_t v6 = sub_100461770();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 184);
  if (v7)
  {
    log = v5;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v11 = ActionType.rawValue.getter(v27);
    *(void *)(v10 + 4) = sub_10001FCAC(v11, v12, &v29);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v10 + 12) = 2082;
    *(void *)(v10 + 14) = sub_10001FCAC(0, 0xE000000000000000, &v29);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "%{public}s: perform success%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v14 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = *(void *)(v0 + 16);
  uint64_t v16 = *(void *)(v0 + 56);
  char v17 = *(unsigned char *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 72);
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v21 = *(void *)(v0 + 96);
  uint64_t v22 = *(void *)(v0 + 120);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  *(void *)(v23 + 32) = v15;
  *(_OWORD *)(v23 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v23 + 56) = *(_OWORD *)(v0 + 40);
  *(void *)(v23 + 72) = v16;
  *(unsigned char *)(v23 + 80) = v17;
  *(void *)(v23 + 88) = v19;
  *(void *)(v23 + 96) = v18;
  *(void *)(v23 + 104) = v20;
  *(void *)(v23 + 112) = v21;
  *(_OWORD *)(v23 + 120) = *(_OWORD *)(v0 + 104);
  *(void *)(v23 + 136) = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100039C5C(v13, (uint64_t)&unk_100576608, v23);
  swift_release();
  swift_release();
  sub_100009790(v13, &qword_100574B80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_10014B1AC(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 288) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 168) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 176) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 184) = v4;
  *(void *)(v3 + 192) = *(void *)(v4 - 8);
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  *(_OWORD *)(v3 + 112) = v2[6];
  long long v6 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v6;
  long long v7 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v7;
  return _swift_task_switch(sub_10014B320, 0, 0);
}

uint64_t sub_10014B320()
{
  uint64_t v85 = v0;
  char v1 = *(unsigned char *)(v0 + 64);
  if (ActionType.isHidden.getter(v1))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v2 = *(void *)(v0 + 232);
      uint64_t v3 = *(void *)(v0 + 184);
      uint64_t v4 = *(void *)(v0 + 192);
      uint64_t v5 = sub_100009688(v3, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      long long v6 = sub_10045D2F0();
      os_log_type_t v7 = sub_100461750();
      BOOL v8 = os_log_type_enabled(v6, v7);
      uint64_t v9 = *(void *)(v0 + 232);
      uint64_t v10 = *(void *)(v0 + 184);
      uint64_t v11 = *(void *)(v0 + 192);
      if (v8)
      {
        uint64_t v71 = *(void *)(v0 + 232);
        uint64_t v12 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136446210;
        uint64_t v13 = ActionType.rawValue.getter(v1);
        *(void *)(v12 + 4) = sub_10001FCAC(v13, v14, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v71, v10);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
    }
    sub_10003DC9C();
    swift_allocError();
    *long long v52 = 0xD000000000000014;
    uint64_t v53 = 0x800000010048EDB0;
LABEL_27:
    v52[1] = v53;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
    return v66();
  }
  if ((*(unsigned char *)(v0 + 288) & 1) == 0)
  {
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 88);
    long long v18 = *(_OWORD *)(v0 + 32);
    v78[0] = *(_OWORD *)(v0 + 16);
    v78[1] = v18;
    v78[2] = *(_OWORD *)(v0 + 48);
    char v79 = v1;
    uint64_t v80 = v15;
    uint64_t v81 = v16;
    uint64_t v82 = v17;
    long long v19 = *(_OWORD *)(v0 + 112);
    long long v83 = *(_OWORD *)(v0 + 96);
    long long v84 = v19;
    uint64_t v20 = v15(v78);
    if (v21 != 1)
    {
      uint64_t v53 = v21;
      uint64_t v77 = v20;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v55 = *(void *)(v0 + 192);
      uint64_t v54 = *(void *)(v0 + 200);
      uint64_t v56 = *(void *)(v0 + 184);
      uint64_t v57 = sub_100009688(v56, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v54, v57, v56);
      char v68 = *(unsigned char *)(v0 + 64);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v58 = v77;
      sub_10003DC88(v77, v53);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10003DC88(v77, v53);
      long long v59 = sub_10045D2F0();
      os_log_type_t type = sub_100461750();
      BOOL v60 = os_log_type_enabled(v59, type);
      uint64_t v76 = *(void *)(v0 + 192);
      uint64_t v73 = *(void *)(v0 + 184);
      uint64_t v74 = *(void *)(v0 + 200);
      if (v60)
      {
        log = v59;
        uint64_t v61 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 136446466;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v62 = ActionType.rawValue.getter(v68);
        *(void *)(v61 + 4) = sub_10001FCAC(v62, v63, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        *(_WORD *)(v61 + 12) = 2082;
        *(void *)(v0 + 128) = v77;
        *(void *)(v0 + 136) = v53;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v64 = sub_100460D40();
        *(void *)(v61 + 14) = sub_10001FCAC(v64, v65, (uint64_t *)v78);
        uint64_t v58 = v77;
        swift_bridgeObjectRelease();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
        _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v61, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
      }
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v73);
      sub_10003DC9C();
      swift_allocError();
      *long long v52 = v58;
      goto LABEL_27;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 224);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v25 = sub_100009688(v23, (uint64_t)qword_100572290);
  *(void *)(v0 + 240) = v25;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(void *)(v0 + 248) = v26;
  *(void *)(v0 + 256) = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v26(v22, v25, v23);
  char v72 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  char v27 = sub_10045D2F0();
  os_log_type_t v28 = sub_100461770();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 224);
  uint64_t v31 = *(void *)(v0 + 184);
  uint64_t v32 = *(void *)(v0 + 192);
  if (v29)
  {
    *(void *)typea = *(void *)(v0 + 224);
    uint64_t v33 = swift_slowAlloc();
    *(void *)&v78[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446210;
    uint64_t v34 = ActionType.rawValue.getter(v72);
    *(void *)(v33 + 4) = sub_10001FCAC(v34, v35, (uint64_t *)v78);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%{public}s: performing…", (uint8_t *)v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(os_log_type_t *, uint64_t))(v32 + 8))(*(os_log_type_t **)typea, v31);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v36 = *(void *)(v0 + 176);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v37 = [self mainRunLoop];
  uint64_t v38 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v36, 1, 1, v38);
  uint64_t v39 = sub_100461CB0();

  sub_100009790(v36, &qword_1005722C0);
  *(void *)(v0 + 144) = v39;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v40 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 152) = v40;
  uint64_t v41 = *(void *)(v0 + 16);
  uint64_t v42 = *(void *)(v0 + 56);
  char v43 = *(unsigned char *)(v0 + 64);
  uint64_t v45 = *(void *)(v0 + 72);
  uint64_t v44 = *(void *)(v0 + 80);
  uint64_t v46 = *(void *)(v0 + 88);
  uint64_t v47 = *(void *)(v0 + 96);
  uint64_t v48 = *(void *)(v0 + 120);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v41;
  *(_OWORD *)(v49 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v49 + 40) = *(_OWORD *)(v0 + 40);
  *(void *)(v49 + 56) = v42;
  *(unsigned char *)(v49 + 64) = v43;
  *(void *)(v49 + 72) = v45;
  *(void *)(v49 + 80) = v44;
  *(void *)(v49 + 88) = v46;
  *(void *)(v49 + 96) = v47;
  *(_OWORD *)(v49 + 104) = *(_OWORD *)(v0 + 104);
  *(void *)(v49 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 264) = sub_10045D7B0();
  swift_release();
  swift_release();
  uint64_t v75 = (uint64_t (*)(void))(*(void *)(v0 + 96) + **(int **)(v0 + 96));
  long long v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v50;
  *long long v50 = v0;
  v50[1] = sub_10014BF94;
  return v75();
}

uint64_t sub_10014BF94()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001731C8;
  }
  else {
    uint64_t v2 = sub_10014C0A8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10014C0A8()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 184);
  sub_10045D660();
  v2(v3, v1, v4);
  char v27 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v5 = sub_10045D2F0();
  os_log_type_t v6 = sub_100461770();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 184);
  if (v7)
  {
    log = v5;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v11 = ActionType.rawValue.getter(v27);
    *(void *)(v10 + 4) = sub_10001FCAC(v11, v12, &v29);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v10 + 12) = 2082;
    *(void *)(v10 + 14) = sub_10001FCAC(0, 0xE000000000000000, &v29);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "%{public}s: perform success%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v14 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = *(void *)(v0 + 16);
  uint64_t v16 = *(void *)(v0 + 56);
  char v17 = *(unsigned char *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 72);
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v21 = *(void *)(v0 + 96);
  uint64_t v22 = *(void *)(v0 + 120);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  *(void *)(v23 + 32) = v15;
  *(_OWORD *)(v23 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v23 + 56) = *(_OWORD *)(v0 + 40);
  *(void *)(v23 + 72) = v16;
  *(unsigned char *)(v23 + 80) = v17;
  *(void *)(v23 + 88) = v19;
  *(void *)(v23 + 96) = v18;
  *(void *)(v23 + 104) = v20;
  *(void *)(v23 + 112) = v21;
  *(_OWORD *)(v23 + 120) = *(_OWORD *)(v0 + 104);
  *(void *)(v23 + 136) = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100039C5C(v13, (uint64_t)&unk_1005764D0, v23);
  swift_release();
  swift_release();
  sub_100009790(v13, &qword_100574B80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_10014C4C4(char a1)
{
  *(void *)(v2 + 1456) = v1;
  *(unsigned char *)(v2 + 1586) = a1;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v2 + 1464) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v2 + 1472) = swift_task_alloc();
  uint64_t v3 = sub_10045D310();
  *(void *)(v2 + 1480) = v3;
  *(void *)(v2 + 1488) = *(void *)(v3 - 8);
  *(void *)(v2 + 1496) = swift_task_alloc();
  *(void *)(v2 + 1504) = swift_task_alloc();
  *(void *)(v2 + 1512) = swift_task_alloc();
  *(void *)(v2 + 1520) = swift_task_alloc();
  *(void *)(v2 + 1528) = swift_task_alloc();
  return _swift_task_switch(sub_10014C61C, 0, 0);
}

uint64_t sub_10014C61C()
{
  uint64_t v75 = v0;
  if (ActionType.isHidden.getter(*(unsigned char *)(*(void *)(v0 + 1456) + 137)))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v1 = *(void *)(v0 + 1528);
      uint64_t v2 = *(void *)(v0 + 1488);
      uint64_t v3 = *(void *)(v0 + 1480);
      uint64_t v4 = *(void *)(v0 + 1456);
      uint64_t v5 = sub_100009688(v3, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
      sub_100019ABC(v4, v0 + 1216, &qword_100571F00);
      os_log_type_t v6 = sub_10045D2F0();
      os_log_type_t v7 = sub_100461750();
      BOOL v8 = os_log_type_enabled(v6, v7);
      uint64_t v9 = *(void *)(v0 + 1528);
      uint64_t v10 = *(void *)(v0 + 1488);
      uint64_t v11 = *(void *)(v0 + 1480);
      if (v8)
      {
        uint64_t v12 = swift_slowAlloc();
        v74[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136446210;
        char v13 = *(unsigned char *)(v0 + 1353);
        sub_100009790(v0 + 1216, &qword_100571F00);
        uint64_t v14 = ActionType.rawValue.getter(v13);
        *(void *)(v12 + 4) = sub_10001FCAC(v14, v15, v74);
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100009790(v0 + 1216, &qword_100571F00);
      }

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    }
    sub_10003DC9C();
    swift_allocError();
    *long long v50 = 0xD000000000000014;
    uint64_t v51 = 0x800000010048EDB0;
LABEL_28:
    v50[1] = v51;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v70 = *(uint64_t (**)(void))(v0 + 8);
    return v70();
  }
  if ((*(unsigned char *)(v0 + 1586) & 1) == 0)
  {
    uint64_t v16 = (*(uint64_t (**)(void))(*(void *)(v0 + 1456) + 144))();
    if (v17 != 1)
    {
      uint64_t v52 = v16;
      uint64_t v51 = v17;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v53 = *(void *)(v0 + 1496);
      uint64_t v54 = *(void *)(v0 + 1488);
      uint64_t v55 = *(void *)(v0 + 1480);
      uint64_t v56 = *(void *)(v0 + 1456);
      uint64_t v57 = sub_100009688(v55, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v53, v57, v55);
      sub_100019ABC(v56, v0 + 216, &qword_100571F00);
      sub_10003DC88(v52, v51);
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_10045D2F0();
      os_log_type_t v59 = sub_100461750();
      BOOL v60 = os_log_type_enabled(v58, v59);
      uint64_t v61 = *(void *)(v0 + 1496);
      uint64_t v62 = *(void *)(v0 + 1488);
      uint64_t v63 = *(void *)(v0 + 1480);
      if (v60)
      {
        uint64_t v73 = *(void *)(v0 + 1496);
        uint64_t v64 = swift_slowAlloc();
        v74[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v64 = 136446466;
        uint64_t v71 = v63;
        char v65 = *(unsigned char *)(v0 + 353);
        sub_100009790(v0 + 216, &qword_100571F00);
        uint64_t v66 = ActionType.rawValue.getter(v65);
        *(void *)(v64 + 4) = sub_10001FCAC(v66, v67, v74);
        swift_bridgeObjectRelease();
        *(_WORD *)(v64 + 12) = 2082;
        *(void *)(v0 + 1416) = v52;
        *(void *)(v0 + 1424) = v51;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v68 = sub_100460D40();
        *(void *)(v64 + 14) = sub_10001FCAC(v68, v69, v74);
        swift_bridgeObjectRelease();
        sub_100018DAC(v52, v51);
        sub_100018DAC(v52, v51);
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v64, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v73, v71);
      }
      else
      {
        sub_100009790(v0 + 216, &qword_100571F00);
        sub_100018DAC(v52, v51);
        sub_100018DAC(v52, v51);

        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v61, v63);
      }
      sub_10003DC9C();
      swift_allocError();
      *long long v50 = v52;
      goto LABEL_28;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v18 = *(void *)(v0 + 1520);
  uint64_t v19 = *(void *)(v0 + 1488);
  uint64_t v20 = *(void *)(v0 + 1480);
  uint64_t v21 = *(void *)(v0 + 1456);
  uint64_t v22 = sub_100009688(v20, (uint64_t)qword_100572290);
  *(void *)(v0 + 1536) = v22;
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  *(void *)(v0 + 1544) = v23;
  *(void *)(v0 + 1552) = (v19 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v23(v18, v22, v20);
  sub_100019ABC(v21, v0 + 16, &qword_100571F00);
  uint64_t v24 = sub_10045D2F0();
  os_log_type_t v25 = sub_100461770();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v27 = *(void *)(v0 + 1520);
  uint64_t v28 = *(void *)(v0 + 1488);
  uint64_t v29 = *(void *)(v0 + 1480);
  if (v26)
  {
    uint64_t v30 = swift_slowAlloc();
    v74[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136446210;
    char v31 = *(unsigned char *)(v0 + 153);
    sub_100009790(v0 + 16, &qword_100571F00);
    uint64_t v32 = ActionType.rawValue.getter(v31);
    *(void *)(v30 + 4) = sub_10001FCAC(v32, v33, v74);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "%{public}s: performing…", (uint8_t *)v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100009790(v0 + 16, &qword_100571F00);
  }

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
  uint64_t v34 = *(void *)(v0 + 1472);
  uint64_t v35 = *(void *)(v0 + 1456);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v36 = [self mainRunLoop];
  uint64_t v37 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v34, 1, 1, v37);
  uint64_t v38 = sub_100461CB0();

  sub_100009790(v34, &qword_1005722C0);
  *(void *)(v0 + 1440) = v38;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v39 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 1432) = v39;
  sub_100019ABC(v35, v0 + 616, &qword_100571F00);
  uint64_t v40 = swift_allocObject();
  long long v41 = *(_OWORD *)(v0 + 792);
  *(_OWORD *)(v40 + 176) = *(_OWORD *)(v0 + 776);
  *(_OWORD *)(v40 + 192) = v41;
  *(void *)(v40 + 208) = *(void *)(v0 + 808);
  long long v42 = *(_OWORD *)(v0 + 728);
  *(_OWORD *)(v40 + 112) = *(_OWORD *)(v0 + 712);
  *(_OWORD *)(v40 + 128) = v42;
  long long v43 = *(_OWORD *)(v0 + 760);
  *(_OWORD *)(v40 + 144) = *(_OWORD *)(v0 + 744);
  *(_OWORD *)(v40 + 160) = v43;
  long long v44 = *(_OWORD *)(v0 + 664);
  *(_OWORD *)(v40 + 48) = *(_OWORD *)(v0 + 648);
  *(_OWORD *)(v40 + 64) = v44;
  long long v45 = *(_OWORD *)(v0 + 696);
  *(_OWORD *)(v40 + 80) = *(_OWORD *)(v0 + 680);
  *(_OWORD *)(v40 + 96) = v45;
  long long v46 = *(_OWORD *)(v0 + 632);
  *(_OWORD *)(v40 + 16) = *(_OWORD *)(v0 + 616);
  *(_OWORD *)(v40 + 32) = v46;
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 1560) = sub_10045D7B0();
  swift_release();
  swift_release();
  char v72 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v35 + 168) + **(int **)(v35 + 168));
  uint64_t v47 = (void *)swift_task_alloc();
  *(void *)(v0 + 1568) = v47;
  *uint64_t v47 = v0;
  v47[1] = sub_10014D04C;
  uint64_t v48 = *(void *)(v0 + 1456);
  return v72(v0 + 1584, v48);
}

uint64_t sub_10014D04C()
{
  *(void *)(*(void *)v1 + 1576) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10014D554;
  }
  else {
    uint64_t v2 = sub_10014D160;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10014D160()
{
  uint64_t v34 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1544);
  uint64_t v2 = *(void *)(v0 + 1536);
  uint64_t v3 = *(void *)(v0 + 1512);
  uint64_t v4 = *(void *)(v0 + 1480);
  uint64_t v5 = *(void *)(v0 + 1456);
  sub_10045D660();
  v1(v3, v2, v4);
  sub_100019ABC(v5, v0 + 816, &qword_100571F00);
  char v6 = *(unsigned char *)(v0 + 1584);
  os_log_type_t v7 = sub_10045D2F0();
  os_log_type_t v8 = sub_100461770();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void *)(v0 + 1488);
    uint64_t v30 = *(void *)(v0 + 1480);
    uint64_t v31 = *(void *)(v0 + 1512);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    char v11 = *(unsigned char *)(v0 + 953);
    sub_100009790(v0 + 816, &qword_100571F00);
    uint64_t v12 = ActionType.rawValue.getter(v11);
    *(void *)(v10 + 4) = sub_10001FCAC(v12, v13, &v32);
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    v33[0] = 0;
    v33[1] = 0xE000000000000000;
    sub_100462120(16);
    swift_bridgeObjectRelease();
    strcpy((char *)v33, " with result: ");
    HIBYTE(v33[1]) = -18;
    *(unsigned char *)(v0 + 1585) = v6;
    v36._uint64_t countAndFlagsBits = sub_100460D40();
    sub_100460E50(v36);
    swift_bridgeObjectRelease();
    *(void *)(v10 + 14) = sub_10001FCAC(v33[0], v33[1], &v32);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s: perform success%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v31, v30);
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 1512);
    uint64_t v15 = *(void *)(v0 + 1488);
    uint64_t v16 = *(void *)(v0 + 1480);
    sub_100009790(v0 + 816, &qword_100571F00);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  uint64_t v17 = *(void *)(v0 + 1464);
  uint64_t v18 = *(void *)(v0 + 1456);
  uint64_t v19 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  sub_100019ABC(v18, v0 + 416, &qword_100571F00);
  LOBYTE(v18) = *(unsigned char *)(v0 + 1584);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  long long v21 = *(_OWORD *)(v0 + 592);
  *(_OWORD *)(v20 + 192) = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v20 + 208) = v21;
  *(void *)(v20 + 224) = *(void *)(v0 + 608);
  long long v22 = *(_OWORD *)(v0 + 528);
  *(_OWORD *)(v20 + 128) = *(_OWORD *)(v0 + 512);
  *(_OWORD *)(v20 + 144) = v22;
  long long v23 = *(_OWORD *)(v0 + 560);
  *(_OWORD *)(v20 + 160) = *(_OWORD *)(v0 + 544);
  *(_OWORD *)(v20 + 176) = v23;
  long long v24 = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v20 + 64) = *(_OWORD *)(v0 + 448);
  *(_OWORD *)(v20 + 80) = v24;
  long long v25 = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v20 + 96) = *(_OWORD *)(v0 + 480);
  *(_OWORD *)(v20 + 112) = v25;
  long long v26 = *(_OWORD *)(v0 + 432);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v20 + 48) = v26;
  *(unsigned char *)(v20 + 232) = v18;
  sub_100039C5C(v17, (uint64_t)&unk_1005764E8, v20);
  swift_release();
  swift_release();
  sub_100009790(v17, &qword_100574B80);
  uint64_t v27 = *(unsigned __int8 *)(v0 + 1584);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v28(v27);
}

uint64_t sub_10014D554()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1544);
  uint64_t v2 = *(void *)(v0 + 1536);
  uint64_t v3 = *(void *)(v0 + 1504);
  uint64_t v4 = *(void *)(v0 + 1480);
  uint64_t v5 = *(void *)(v0 + 1456);
  swift_release();
  v1(v3, v2, v4);
  sub_100019ABC(v5, v0 + 1016, &qword_100571F00);
  swift_errorRetain();
  swift_errorRetain();
  char v6 = sub_10045D2F0();
  os_log_type_t v7 = sub_100461750();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = *(void *)(v0 + 1576);
    uint64_t v9 = *(void *)(v0 + 1488);
    uint64_t v21 = *(void *)(v0 + 1480);
    uint64_t v22 = *(void *)(v0 + 1504);
    uint64_t v10 = swift_slowAlloc();
    v23[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    char v11 = *(unsigned char *)(v0 + 1153);
    sub_100009790(v0 + 1016, &qword_100571F00);
    uint64_t v12 = ActionType.rawValue.getter(v11);
    *(void *)(v10 + 4) = sub_10001FCAC(v12, v13, v23);
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    *(void *)(v0 + 1448) = v8;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v14 = sub_100460D40();
    *(void *)(v10 + 14) = sub_10001FCAC(v14, v15, v23);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: perform failed: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v22, v21);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 1504);
    uint64_t v17 = *(void *)(v0 + 1488);
    uint64_t v18 = *(void *)(v0 + 1480);
    sub_100009790(v0 + 1016, &qword_100571F00);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_10014D840(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 1200) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 1080) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 1088) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 1096) = v4;
  *(void *)(v3 + 1104) = *(void *)(v4 - 8);
  *(void *)(v3 + 1112) = swift_task_alloc();
  *(void *)(v3 + 1120) = swift_task_alloc();
  *(void *)(v3 + 1128) = swift_task_alloc();
  *(void *)(v3 + 1136) = swift_task_alloc();
  *(void *)(v3 + 1144) = swift_task_alloc();
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  long long v6 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v6;
  long long v7 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v7;
  long long v8 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v8;
  return _swift_task_switch(sub_10014D9B4, 0, 0);
}

uint64_t sub_10014D9B4()
{
  uint64_t v96 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 80);
  if (ActionType.isHidden.getter(v2))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v3 = *(void *)(v0 + 1144);
      uint64_t v4 = *(void *)(v0 + 1104);
      uint64_t v5 = *(void *)(v0 + 1096);
      uint64_t v6 = sub_100009688(v5, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
      long long v7 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v0 + 864) = v7;
      long long v8 = *(_OWORD *)(v0 + 128);
      *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v0 + 896) = v8;
      long long v9 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 784) = *v1;
      *(_OWORD *)(v0 + 800) = v9;
      long long v10 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 832) = v10;
      sub_10006BE8C(v0 + 784);
      char v11 = sub_10045D2F0();
      os_log_type_t v12 = sub_100461750();
      BOOL v13 = os_log_type_enabled(v11, v12);
      uint64_t v14 = *(void *)(v0 + 1144);
      uint64_t v15 = *(void *)(v0 + 1104);
      uint64_t v16 = *(void *)(v0 + 1096);
      if (v13)
      {
        uint64_t v17 = swift_slowAlloc();
        *(void *)&v89[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136446210;
        uint64_t v18 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 848));
        *(void *)(v17 + 4) = sub_10001FCAC(v18, v19, (uint64_t *)v89);
        swift_bridgeObjectRelease();
        sub_10006DE00(v0 + 784, (void (*)(uint64_t))&_swift_release);
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v17, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10006DE00(v0 + 784, (void (*)(uint64_t))&_swift_release);
      }

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
    sub_10003DC9C();
    swift_allocError();
    *uint64_t v62 = 0xD000000000000014;
    v62[1] = 0x800000010048EDB0;
LABEL_28:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v85 = *(uint64_t (**)(void))(v0 + 8);
    return v85();
  }
  if ((*(unsigned char *)(v0 + 1200) & 1) == 0)
  {
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 88);
    uint64_t v21 = *(void *)(v0 + 96);
    uint64_t v22 = *(void *)(v0 + 104);
    long long v23 = *(_OWORD *)(v0 + 32);
    v89[0] = *(_OWORD *)(v0 + 16);
    v89[1] = v23;
    long long v24 = *(_OWORD *)(v0 + 64);
    v89[2] = *(_OWORD *)(v0 + 48);
    v89[3] = v24;
    char v90 = v2;
    long long v91 = v20;
    uint64_t v92 = v21;
    uint64_t v93 = v22;
    long long v25 = *(_OWORD *)(v0 + 128);
    long long v94 = *(_OWORD *)(v0 + 112);
    long long v95 = v25;
    uint64_t v26 = v20(v89);
    if (v27 != 1)
    {
      uint64_t v63 = v26;
      uint64_t v64 = v27;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v65 = *(void *)(v0 + 1112);
      uint64_t v66 = *(void *)(v0 + 1104);
      uint64_t v67 = *(void *)(v0 + 1096);
      uint64_t v68 = sub_100009688(v67, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v65, v68, v67);
      long long v69 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v0 + 480) = v69;
      long long v70 = *(_OWORD *)(v0 + 128);
      *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v0 + 512) = v70;
      long long v71 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 400) = *v1;
      *(_OWORD *)(v0 + 416) = v71;
      long long v72 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 448) = v72;
      sub_10006BE8C(v0 + 400);
      sub_10003DC88(v63, v64);
      sub_10006BE8C(v0 + 400);
      sub_10003DC88(v63, v64);
      uint64_t v73 = sub_10045D2F0();
      os_log_type_t v74 = sub_100461750();
      BOOL v75 = os_log_type_enabled(v73, v74);
      uint64_t v76 = *(void *)(v0 + 1112);
      uint64_t v77 = *(void *)(v0 + 1104);
      uint64_t v78 = *(void *)(v0 + 1096);
      if (v75)
      {
        uint64_t v88 = *(void *)(v0 + 1096);
        uint64_t v79 = swift_slowAlloc();
        *(void *)&v89[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v79 = 136446466;
        sub_10006DE00(v0 + 400, (void (*)(uint64_t))&_swift_release);
        uint64_t v80 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 464));
        *(void *)(v79 + 4) = sub_10001FCAC(v80, v81, (uint64_t *)v89);
        swift_bridgeObjectRelease();
        sub_10006DE00(v0 + 400, (void (*)(uint64_t))&_swift_release);
        *(_WORD *)(v79 + 12) = 2082;
        *(void *)(v0 + 1040) = v63;
        *(void *)(v0 + 1048) = v64;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v82 = sub_100460D40();
        *(void *)(v79 + 14) = sub_10001FCAC(v82, v83, (uint64_t *)v89);
        swift_bridgeObjectRelease();
        sub_100018DAC(v63, v64);
        sub_100018DAC(v63, v64);
        _os_log_impl((void *)&_mh_execute_header, v73, v74, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v79, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v88);
      }
      else
      {
        sub_10006DE00(v0 + 400, (void (*)(uint64_t))&_swift_release);
        sub_10006DE00(v0 + 400, (void (*)(uint64_t))&_swift_release);
        sub_100018DAC(v63, v64);
        sub_100018DAC(v63, v64);

        (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v78);
      }
      sub_10003DC9C();
      swift_allocError();
      *long long v84 = v63;
      v84[1] = v64;
      goto LABEL_28;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v28 = *(void *)(v0 + 1136);
  uint64_t v29 = *(void *)(v0 + 1104);
  uint64_t v30 = *(void *)(v0 + 1096);
  uint64_t v31 = sub_100009688(v30, (uint64_t)qword_100572290);
  *(void *)(v0 + 1152) = v31;
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  *(void *)(v0 + 1160) = v32;
  *(void *)(v0 + 1168) = (v29 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v32(v28, v31, v30);
  long long v33 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 224) = v33;
  long long v34 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 256) = v34;
  long long v35 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 144) = *v1;
  *(_OWORD *)(v0 + 160) = v35;
  long long v36 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 192) = v36;
  sub_10006BE8C(v0 + 144);
  uint64_t v37 = sub_10045D2F0();
  os_log_type_t v38 = sub_100461770();
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v40 = *(void *)(v0 + 1136);
  uint64_t v41 = *(void *)(v0 + 1104);
  uint64_t v42 = *(void *)(v0 + 1096);
  if (v39)
  {
    uint64_t v86 = *(void *)(v0 + 1136);
    uint64_t v43 = swift_slowAlloc();
    *(void *)&v89[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v43 = 136446210;
    uint64_t v44 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 208));
    *(void *)(v43 + 4) = sub_10001FCAC(v44, v45, (uint64_t *)v89);
    swift_bridgeObjectRelease();
    sub_10006DE00(v0 + 144, (void (*)(uint64_t))&_swift_release);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "%{public}s: performing…", (uint8_t *)v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v86, v42);
  }
  else
  {
    sub_10006DE00(v0 + 144, (void (*)(uint64_t))&_swift_release);

    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
  }
  uint64_t v46 = *(void *)(v0 + 1088);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v47 = [self mainRunLoop];
  uint64_t v48 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v46, 1, 1, v48);
  uint64_t v49 = sub_100461CB0();

  sub_100009790(v46, &qword_1005722C0);
  *(void *)(v0 + 1064) = v49;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v50 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 1056) = v50;
  long long v51 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 352) = v51;
  long long v52 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 384) = v52;
  long long v53 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v53;
  long long v54 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 320) = v54;
  uint64_t v55 = (_OWORD *)swift_allocObject();
  long long v56 = *(_OWORD *)(v0 + 96);
  v55[5] = *(_OWORD *)(v0 + 80);
  v55[6] = v56;
  long long v57 = *(_OWORD *)(v0 + 128);
  v55[7] = *(_OWORD *)(v0 + 112);
  v55[8] = v57;
  long long v58 = *(_OWORD *)(v0 + 32);
  v55[1] = *v1;
  v55[2] = v58;
  long long v59 = *(_OWORD *)(v0 + 64);
  v55[3] = *(_OWORD *)(v0 + 48);
  v55[4] = v59;
  sub_10006BE8C(v0 + 272);
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 1176) = sub_10045D7B0();
  swift_release();
  swift_release();
  long long v87 = (uint64_t (*)(void))(*(void *)(v0 + 112) + **(int **)(v0 + 112));
  BOOL v60 = (void *)swift_task_alloc();
  *(void *)(v0 + 1184) = v60;
  *BOOL v60 = v0;
  v60[1] = sub_10014E4A4;
  return v87();
}

uint64_t sub_10014E4A4()
{
  *(void *)(*(void *)v1 + 1192) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_10014E930;
  }
  else {
    char v2 = sub_10014E5B8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10014E5B8()
{
  uint64_t v34 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 16);
  char v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1160);
  uint64_t v3 = *(void *)(v0 + 1152);
  uint64_t v4 = *(void *)(v0 + 1128);
  uint64_t v5 = *(void *)(v0 + 1096);
  sub_10045D660();
  v2(v4, v3, v5);
  long long v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 976) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 992) = v6;
  long long v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 1008) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 1024) = v7;
  long long v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 912) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 928) = v8;
  long long v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 944) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 960) = v9;
  sub_10006BE8C(v0 + 912);
  long long v10 = sub_10045D2F0();
  os_log_type_t v11 = sub_100461770();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 1128);
  uint64_t v14 = *(void *)(v0 + 1104);
  uint64_t v15 = *(void *)(v0 + 1096);
  if (v12)
  {
    uint64_t v32 = *(void *)(v0 + 1128);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v17 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 976));
    *(void *)(v16 + 4) = sub_10001FCAC(v17, v18, &v33);
    swift_bridgeObjectRelease();
    sub_10006DE00(v0 + 912, (void (*)(uint64_t))&_swift_release);
    *(_WORD *)(v16 + 12) = 2082;
    *(void *)(v16 + 14) = sub_10001FCAC(0, 0xE000000000000000, &v33);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: perform success%{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v32, v15);
  }
  else
  {
    sub_10006DE00(v0 + 912, (void (*)(uint64_t))&_swift_release);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v19 = *(void *)(v0 + 1080);
  uint64_t v20 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  long long v21 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 608) = v21;
  long long v22 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 640) = v22;
  long long v23 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 528) = *v1;
  *(_OWORD *)(v0 + 544) = v23;
  long long v24 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 576) = v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  long long v26 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v25 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v25 + 112) = v26;
  long long v27 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v25 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v25 + 144) = v27;
  long long v28 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v25 + 32) = *v1;
  *(_OWORD *)(v25 + 48) = v28;
  long long v29 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v25 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v25 + 80) = v29;
  sub_10006BE8C(v0 + 528);
  sub_100039C5C(v19, (uint64_t)&unk_1005765C8, v25);
  swift_release();
  swift_release();
  sub_100009790(v19, &qword_100574B80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_10014E930()
{
  uint64_t v26 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1160);
  uint64_t v2 = *(void *)(v0 + 1152);
  uint64_t v3 = *(void *)(v0 + 1120);
  uint64_t v4 = *(void *)(v0 + 1096);
  swift_release();
  v1(v3, v2, v4);
  long long v5 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 720) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 736) = v5;
  long long v6 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 752) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 768) = v6;
  long long v7 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 672) = v7;
  long long v8 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 688) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 704) = v8;
  sub_10006BE8C(v0 + 656);
  swift_errorRetain();
  sub_10006BE8C(v0 + 656);
  swift_errorRetain();
  long long v9 = sub_10045D2F0();
  os_log_type_t v10 = sub_100461750();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = *(void *)(v0 + 1192);
    uint64_t v24 = *(void *)(v0 + 1120);
    uint64_t v12 = *(void *)(v0 + 1104);
    uint64_t v23 = *(void *)(v0 + 1096);
    uint64_t v13 = swift_slowAlloc();
    v25[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    sub_10006DE00(v0 + 656, (void (*)(uint64_t))&_swift_release);
    uint64_t v14 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 720));
    *(void *)(v13 + 4) = sub_10001FCAC(v14, v15, v25);
    swift_bridgeObjectRelease();
    sub_10006DE00(v0 + 656, (void (*)(uint64_t))&_swift_release);
    *(_WORD *)(v13 + 12) = 2082;
    *(void *)(v0 + 1072) = v11;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v16 = sub_100460D40();
    *(void *)(v13 + 14) = sub_10001FCAC(v16, v17, v25);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s: perform failed: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v24, v23);
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 1120);
    uint64_t v19 = *(void *)(v0 + 1104);
    uint64_t v20 = *(void *)(v0 + 1096);
    sub_10006DE00(v0 + 656, (void (*)(uint64_t))&_swift_release);
    sub_10006DE00(v0 + 656, (void (*)(uint64_t))&_swift_release);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_10014EC6C(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 1200) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 1080) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 1088) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 1096) = v4;
  *(void *)(v3 + 1104) = *(void *)(v4 - 8);
  *(void *)(v3 + 1112) = swift_task_alloc();
  *(void *)(v3 + 1120) = swift_task_alloc();
  *(void *)(v3 + 1128) = swift_task_alloc();
  *(void *)(v3 + 1136) = swift_task_alloc();
  *(void *)(v3 + 1144) = swift_task_alloc();
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  long long v6 = v2[7];
  *(_OWORD *)(v3 + 112) = v2[6];
  *(_OWORD *)(v3 + 128) = v6;
  long long v7 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v7;
  long long v8 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v8;
  return _swift_task_switch(sub_10014EDE0, 0, 0);
}

uint64_t sub_10014EDE0()
{
  uint64_t v96 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 80);
  if (ActionType.isHidden.getter(v2))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v3 = *(void *)(v0 + 1144);
      uint64_t v4 = *(void *)(v0 + 1104);
      uint64_t v5 = *(void *)(v0 + 1096);
      uint64_t v6 = sub_100009688(v5, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
      long long v7 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v0 + 864) = v7;
      long long v8 = *(_OWORD *)(v0 + 128);
      *(_OWORD *)(v0 + 880) = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v0 + 896) = v8;
      long long v9 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 784) = *v1;
      *(_OWORD *)(v0 + 800) = v9;
      long long v10 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 832) = v10;
      sub_10006BE8C(v0 + 784);
      uint64_t v11 = sub_10045D2F0();
      os_log_type_t v12 = sub_100461750();
      BOOL v13 = os_log_type_enabled(v11, v12);
      uint64_t v14 = *(void *)(v0 + 1144);
      uint64_t v15 = *(void *)(v0 + 1104);
      uint64_t v16 = *(void *)(v0 + 1096);
      if (v13)
      {
        uint64_t v17 = swift_slowAlloc();
        *(void *)&v89[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136446210;
        uint64_t v18 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 848));
        *(void *)(v17 + 4) = sub_10001FCAC(v18, v19, (uint64_t *)v89);
        swift_bridgeObjectRelease();
        sub_10006DE00(v0 + 784, (void (*)(uint64_t))&_swift_release);
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v17, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10006DE00(v0 + 784, (void (*)(uint64_t))&_swift_release);
      }

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    }
    sub_10003DC9C();
    swift_allocError();
    *uint64_t v62 = 0xD000000000000014;
    v62[1] = 0x800000010048EDB0;
LABEL_28:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v85 = *(uint64_t (**)(void))(v0 + 8);
    return v85();
  }
  if ((*(unsigned char *)(v0 + 1200) & 1) == 0)
  {
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 88);
    uint64_t v21 = *(void *)(v0 + 96);
    uint64_t v22 = *(void *)(v0 + 104);
    long long v23 = *(_OWORD *)(v0 + 32);
    v89[0] = *(_OWORD *)(v0 + 16);
    v89[1] = v23;
    long long v24 = *(_OWORD *)(v0 + 64);
    v89[2] = *(_OWORD *)(v0 + 48);
    v89[3] = v24;
    char v90 = v2;
    long long v91 = v20;
    uint64_t v92 = v21;
    uint64_t v93 = v22;
    long long v25 = *(_OWORD *)(v0 + 128);
    long long v94 = *(_OWORD *)(v0 + 112);
    long long v95 = v25;
    uint64_t v26 = v20(v89);
    if (v27 != 1)
    {
      uint64_t v63 = v26;
      uint64_t v64 = v27;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v65 = *(void *)(v0 + 1112);
      uint64_t v66 = *(void *)(v0 + 1104);
      uint64_t v67 = *(void *)(v0 + 1096);
      uint64_t v68 = sub_100009688(v67, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v65, v68, v67);
      long long v69 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 464) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v0 + 480) = v69;
      long long v70 = *(_OWORD *)(v0 + 128);
      *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v0 + 512) = v70;
      long long v71 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 400) = *v1;
      *(_OWORD *)(v0 + 416) = v71;
      long long v72 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 448) = v72;
      sub_10006BE8C(v0 + 400);
      sub_10003DC88(v63, v64);
      sub_10006BE8C(v0 + 400);
      sub_10003DC88(v63, v64);
      uint64_t v73 = sub_10045D2F0();
      os_log_type_t v74 = sub_100461750();
      BOOL v75 = os_log_type_enabled(v73, v74);
      uint64_t v76 = *(void *)(v0 + 1112);
      uint64_t v77 = *(void *)(v0 + 1104);
      uint64_t v78 = *(void *)(v0 + 1096);
      if (v75)
      {
        uint64_t v88 = *(void *)(v0 + 1096);
        uint64_t v79 = swift_slowAlloc();
        *(void *)&v89[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v79 = 136446466;
        sub_10006DE00(v0 + 400, (void (*)(uint64_t))&_swift_release);
        uint64_t v80 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 464));
        *(void *)(v79 + 4) = sub_10001FCAC(v80, v81, (uint64_t *)v89);
        swift_bridgeObjectRelease();
        sub_10006DE00(v0 + 400, (void (*)(uint64_t))&_swift_release);
        *(_WORD *)(v79 + 12) = 2082;
        *(void *)(v0 + 1040) = v63;
        *(void *)(v0 + 1048) = v64;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v82 = sub_100460D40();
        *(void *)(v79 + 14) = sub_10001FCAC(v82, v83, (uint64_t *)v89);
        swift_bridgeObjectRelease();
        sub_100018DAC(v63, v64);
        sub_100018DAC(v63, v64);
        _os_log_impl((void *)&_mh_execute_header, v73, v74, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v79, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v88);
      }
      else
      {
        sub_10006DE00(v0 + 400, (void (*)(uint64_t))&_swift_release);
        sub_10006DE00(v0 + 400, (void (*)(uint64_t))&_swift_release);
        sub_100018DAC(v63, v64);
        sub_100018DAC(v63, v64);

        (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v78);
      }
      sub_10003DC9C();
      swift_allocError();
      *long long v84 = v63;
      v84[1] = v64;
      goto LABEL_28;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v28 = *(void *)(v0 + 1136);
  uint64_t v29 = *(void *)(v0 + 1104);
  uint64_t v30 = *(void *)(v0 + 1096);
  uint64_t v31 = sub_100009688(v30, (uint64_t)qword_100572290);
  *(void *)(v0 + 1152) = v31;
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  *(void *)(v0 + 1160) = v32;
  *(void *)(v0 + 1168) = (v29 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v32(v28, v31, v30);
  long long v33 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 224) = v33;
  long long v34 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 256) = v34;
  long long v35 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 144) = *v1;
  *(_OWORD *)(v0 + 160) = v35;
  long long v36 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 192) = v36;
  sub_10006BE8C(v0 + 144);
  uint64_t v37 = sub_10045D2F0();
  os_log_type_t v38 = sub_100461770();
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v40 = *(void *)(v0 + 1136);
  uint64_t v41 = *(void *)(v0 + 1104);
  uint64_t v42 = *(void *)(v0 + 1096);
  if (v39)
  {
    uint64_t v86 = *(void *)(v0 + 1136);
    uint64_t v43 = swift_slowAlloc();
    *(void *)&v89[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v43 = 136446210;
    uint64_t v44 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 208));
    *(void *)(v43 + 4) = sub_10001FCAC(v44, v45, (uint64_t *)v89);
    swift_bridgeObjectRelease();
    sub_10006DE00(v0 + 144, (void (*)(uint64_t))&_swift_release);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "%{public}s: performing…", (uint8_t *)v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v86, v42);
  }
  else
  {
    sub_10006DE00(v0 + 144, (void (*)(uint64_t))&_swift_release);

    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v42);
  }
  uint64_t v46 = *(void *)(v0 + 1088);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v47 = [self mainRunLoop];
  uint64_t v48 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v46, 1, 1, v48);
  uint64_t v49 = sub_100461CB0();

  sub_100009790(v46, &qword_1005722C0);
  *(void *)(v0 + 1064) = v49;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v50 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 1056) = v50;
  long long v51 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 352) = v51;
  long long v52 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 384) = v52;
  long long v53 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 272) = *v1;
  *(_OWORD *)(v0 + 288) = v53;
  long long v54 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 320) = v54;
  uint64_t v55 = (_OWORD *)swift_allocObject();
  long long v56 = *(_OWORD *)(v0 + 96);
  v55[5] = *(_OWORD *)(v0 + 80);
  v55[6] = v56;
  long long v57 = *(_OWORD *)(v0 + 128);
  v55[7] = *(_OWORD *)(v0 + 112);
  v55[8] = v57;
  long long v58 = *(_OWORD *)(v0 + 32);
  v55[1] = *v1;
  v55[2] = v58;
  long long v59 = *(_OWORD *)(v0 + 64);
  v55[3] = *(_OWORD *)(v0 + 48);
  v55[4] = v59;
  sub_10006BE8C(v0 + 272);
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 1176) = sub_10045D7B0();
  swift_release();
  swift_release();
  long long v87 = (uint64_t (*)(void))(*(void *)(v0 + 112) + **(int **)(v0 + 112));
  BOOL v60 = (void *)swift_task_alloc();
  *(void *)(v0 + 1184) = v60;
  *BOOL v60 = v0;
  v60[1] = sub_10014F8D0;
  return v87();
}

uint64_t sub_10014F8D0()
{
  *(void *)(*(void *)v1 + 1192) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_1001731F0;
  }
  else {
    char v2 = sub_10014F9E4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10014F9E4()
{
  uint64_t v34 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 16);
  char v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1160);
  uint64_t v3 = *(void *)(v0 + 1152);
  uint64_t v4 = *(void *)(v0 + 1128);
  uint64_t v5 = *(void *)(v0 + 1096);
  sub_10045D660();
  v2(v4, v3, v5);
  long long v6 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 976) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 992) = v6;
  long long v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 1008) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 1024) = v7;
  long long v8 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 912) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 928) = v8;
  long long v9 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 944) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 960) = v9;
  sub_10006BE8C(v0 + 912);
  long long v10 = sub_10045D2F0();
  os_log_type_t v11 = sub_100461770();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void *)(v0 + 1128);
  uint64_t v14 = *(void *)(v0 + 1104);
  uint64_t v15 = *(void *)(v0 + 1096);
  if (v12)
  {
    uint64_t v32 = *(void *)(v0 + 1128);
    uint64_t v16 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v17 = ActionType.rawValue.getter(*(unsigned char *)(v0 + 976));
    *(void *)(v16 + 4) = sub_10001FCAC(v17, v18, &v33);
    swift_bridgeObjectRelease();
    sub_10006DE00(v0 + 912, (void (*)(uint64_t))&_swift_release);
    *(_WORD *)(v16 + 12) = 2082;
    *(void *)(v16 + 14) = sub_10001FCAC(0, 0xE000000000000000, &v33);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s: perform success%{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v32, v15);
  }
  else
  {
    sub_10006DE00(v0 + 912, (void (*)(uint64_t))&_swift_release);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v19 = *(void *)(v0 + 1080);
  uint64_t v20 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  long long v21 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 608) = v21;
  long long v22 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 640) = v22;
  long long v23 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 528) = *v1;
  *(_OWORD *)(v0 + 544) = v23;
  long long v24 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 576) = v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  long long v26 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v25 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v25 + 112) = v26;
  long long v27 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v25 + 128) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v25 + 144) = v27;
  long long v28 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v25 + 32) = *v1;
  *(_OWORD *)(v25 + 48) = v28;
  long long v29 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v25 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v25 + 80) = v29;
  sub_10006BE8C(v0 + 528);
  sub_100039C5C(v19, (uint64_t)&unk_1005765E8, v25);
  swift_release();
  swift_release();
  sub_100009790(v19, &qword_100574B80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_10014FD5C(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 288) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 168) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 176) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 184) = v4;
  *(void *)(v3 + 192) = *(void *)(v4 - 8);
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  *(_OWORD *)(v3 + 112) = v2[6];
  long long v6 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v6;
  long long v7 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v7;
  return _swift_task_switch(sub_10014FED0, 0, 0);
}

uint64_t sub_10014FED0()
{
  uint64_t v85 = v0;
  char v1 = *(unsigned char *)(v0 + 64);
  if (ActionType.isHidden.getter(v1))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v2 = *(void *)(v0 + 232);
      uint64_t v3 = *(void *)(v0 + 184);
      uint64_t v4 = *(void *)(v0 + 192);
      uint64_t v5 = sub_100009688(v3, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      long long v6 = sub_10045D2F0();
      os_log_type_t v7 = sub_100461750();
      BOOL v8 = os_log_type_enabled(v6, v7);
      uint64_t v9 = *(void *)(v0 + 232);
      uint64_t v10 = *(void *)(v0 + 184);
      uint64_t v11 = *(void *)(v0 + 192);
      if (v8)
      {
        uint64_t v71 = *(void *)(v0 + 232);
        uint64_t v12 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136446210;
        uint64_t v13 = ActionType.rawValue.getter(v1);
        *(void *)(v12 + 4) = sub_10001FCAC(v13, v14, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v71, v10);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
    }
    sub_10003DC9C();
    swift_allocError();
    *long long v52 = 0xD000000000000014;
    uint64_t v53 = 0x800000010048EDB0;
LABEL_27:
    v52[1] = v53;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
    return v66();
  }
  if ((*(unsigned char *)(v0 + 288) & 1) == 0)
  {
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 88);
    long long v18 = *(_OWORD *)(v0 + 32);
    v78[0] = *(_OWORD *)(v0 + 16);
    v78[1] = v18;
    v78[2] = *(_OWORD *)(v0 + 48);
    char v79 = v1;
    uint64_t v80 = v15;
    uint64_t v81 = v16;
    uint64_t v82 = v17;
    long long v19 = *(_OWORD *)(v0 + 112);
    long long v83 = *(_OWORD *)(v0 + 96);
    long long v84 = v19;
    uint64_t v20 = v15(v78);
    if (v21 != 1)
    {
      uint64_t v53 = v21;
      uint64_t v77 = v20;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v55 = *(void *)(v0 + 192);
      uint64_t v54 = *(void *)(v0 + 200);
      uint64_t v56 = *(void *)(v0 + 184);
      uint64_t v57 = sub_100009688(v56, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v54, v57, v56);
      char v68 = *(unsigned char *)(v0 + 64);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v58 = v77;
      sub_10003DC88(v77, v53);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10003DC88(v77, v53);
      long long v59 = sub_10045D2F0();
      os_log_type_t type = sub_100461750();
      BOOL v60 = os_log_type_enabled(v59, type);
      uint64_t v76 = *(void *)(v0 + 192);
      uint64_t v73 = *(void *)(v0 + 184);
      uint64_t v74 = *(void *)(v0 + 200);
      if (v60)
      {
        log = v59;
        uint64_t v61 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 136446466;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v62 = ActionType.rawValue.getter(v68);
        *(void *)(v61 + 4) = sub_10001FCAC(v62, v63, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        *(_WORD *)(v61 + 12) = 2082;
        *(void *)(v0 + 128) = v77;
        *(void *)(v0 + 136) = v53;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v64 = sub_100460D40();
        *(void *)(v61 + 14) = sub_10001FCAC(v64, v65, (uint64_t *)v78);
        uint64_t v58 = v77;
        swift_bridgeObjectRelease();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
        _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v61, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
      }
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v73);
      sub_10003DC9C();
      swift_allocError();
      *long long v52 = v58;
      goto LABEL_27;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 224);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v25 = sub_100009688(v23, (uint64_t)qword_100572290);
  *(void *)(v0 + 240) = v25;
  long long v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(void *)(v0 + 248) = v26;
  *(void *)(v0 + 256) = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v26(v22, v25, v23);
  char v72 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  long long v27 = sub_10045D2F0();
  os_log_type_t v28 = sub_100461770();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 224);
  uint64_t v31 = *(void *)(v0 + 184);
  uint64_t v32 = *(void *)(v0 + 192);
  if (v29)
  {
    *(void *)typea = *(void *)(v0 + 224);
    uint64_t v33 = swift_slowAlloc();
    *(void *)&v78[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446210;
    uint64_t v34 = ActionType.rawValue.getter(v72);
    *(void *)(v33 + 4) = sub_10001FCAC(v34, v35, (uint64_t *)v78);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%{public}s: performing…", (uint8_t *)v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(os_log_type_t *, uint64_t))(v32 + 8))(*(os_log_type_t **)typea, v31);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v36 = *(void *)(v0 + 176);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v37 = [self mainRunLoop];
  uint64_t v38 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v36, 1, 1, v38);
  uint64_t v39 = sub_100461CB0();

  sub_100009790(v36, &qword_1005722C0);
  *(void *)(v0 + 144) = v39;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v40 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 152) = v40;
  uint64_t v41 = *(void *)(v0 + 16);
  uint64_t v42 = *(void *)(v0 + 56);
  char v43 = *(unsigned char *)(v0 + 64);
  uint64_t v45 = *(void *)(v0 + 72);
  uint64_t v44 = *(void *)(v0 + 80);
  uint64_t v46 = *(void *)(v0 + 88);
  uint64_t v47 = *(void *)(v0 + 96);
  uint64_t v48 = *(void *)(v0 + 120);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v41;
  *(_OWORD *)(v49 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v49 + 40) = *(_OWORD *)(v0 + 40);
  *(void *)(v49 + 56) = v42;
  *(unsigned char *)(v49 + 64) = v43;
  *(void *)(v49 + 72) = v45;
  *(void *)(v49 + 80) = v44;
  *(void *)(v49 + 88) = v46;
  *(void *)(v49 + 96) = v47;
  *(_OWORD *)(v49 + 104) = *(_OWORD *)(v0 + 104);
  *(void *)(v49 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 264) = sub_10045D7B0();
  swift_release();
  swift_release();
  BOOL v75 = (uint64_t (*)(void))(*(void *)(v0 + 96) + **(int **)(v0 + 96));
  uint64_t v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v50;
  *uint64_t v50 = v0;
  v50[1] = sub_100150B44;
  return v75();
}

uint64_t sub_100150B44()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001731C8;
  }
  else {
    uint64_t v2 = sub_100150C58;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100150C58()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 184);
  sub_10045D660();
  v2(v3, v1, v4);
  char v27 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v5 = sub_10045D2F0();
  os_log_type_t v6 = sub_100461770();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 184);
  if (v7)
  {
    log = v5;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v11 = ActionType.rawValue.getter(v27);
    *(void *)(v10 + 4) = sub_10001FCAC(v11, v12, &v29);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v10 + 12) = 2082;
    *(void *)(v10 + 14) = sub_10001FCAC(0, 0xE000000000000000, &v29);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "%{public}s: perform success%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v14 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = *(void *)(v0 + 16);
  uint64_t v16 = *(void *)(v0 + 56);
  char v17 = *(unsigned char *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 72);
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v21 = *(void *)(v0 + 96);
  uint64_t v22 = *(void *)(v0 + 120);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  *(void *)(v23 + 32) = v15;
  *(_OWORD *)(v23 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v23 + 56) = *(_OWORD *)(v0 + 40);
  *(void *)(v23 + 72) = v16;
  *(unsigned char *)(v23 + 80) = v17;
  *(void *)(v23 + 88) = v19;
  *(void *)(v23 + 96) = v18;
  *(void *)(v23 + 104) = v20;
  *(void *)(v23 + 112) = v21;
  *(_OWORD *)(v23 + 120) = *(_OWORD *)(v0 + 104);
  *(void *)(v23 + 136) = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100039C5C(v13, (uint64_t)&unk_100576628, v23);
  swift_release();
  swift_release();
  sub_100009790(v13, &qword_100574B80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_100151074(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 288) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 168) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 176) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 184) = v4;
  *(void *)(v3 + 192) = *(void *)(v4 - 8);
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  *(_OWORD *)(v3 + 112) = v2[6];
  long long v6 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v6;
  long long v7 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v7;
  return _swift_task_switch(sub_1001511E8, 0, 0);
}

uint64_t sub_1001511E8()
{
  uint64_t v85 = v0;
  char v1 = *(unsigned char *)(v0 + 64);
  if (ActionType.isHidden.getter(v1))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v2 = *(void *)(v0 + 232);
      uint64_t v3 = *(void *)(v0 + 184);
      uint64_t v4 = *(void *)(v0 + 192);
      uint64_t v5 = sub_100009688(v3, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      long long v6 = sub_10045D2F0();
      os_log_type_t v7 = sub_100461750();
      BOOL v8 = os_log_type_enabled(v6, v7);
      uint64_t v9 = *(void *)(v0 + 232);
      uint64_t v10 = *(void *)(v0 + 184);
      uint64_t v11 = *(void *)(v0 + 192);
      if (v8)
      {
        uint64_t v71 = *(void *)(v0 + 232);
        uint64_t v12 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136446210;
        uint64_t v13 = ActionType.rawValue.getter(v1);
        *(void *)(v12 + 4) = sub_10001FCAC(v13, v14, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v71, v10);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
    }
    sub_10003DC9C();
    swift_allocError();
    *long long v52 = 0xD000000000000014;
    uint64_t v53 = 0x800000010048EDB0;
LABEL_27:
    v52[1] = v53;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
    return v66();
  }
  if ((*(unsigned char *)(v0 + 288) & 1) == 0)
  {
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 88);
    long long v18 = *(_OWORD *)(v0 + 32);
    v78[0] = *(_OWORD *)(v0 + 16);
    v78[1] = v18;
    v78[2] = *(_OWORD *)(v0 + 48);
    char v79 = v1;
    uint64_t v80 = v15;
    uint64_t v81 = v16;
    uint64_t v82 = v17;
    long long v19 = *(_OWORD *)(v0 + 112);
    long long v83 = *(_OWORD *)(v0 + 96);
    long long v84 = v19;
    uint64_t v20 = v15(v78);
    if (v21 != 1)
    {
      uint64_t v53 = v21;
      uint64_t v77 = v20;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v55 = *(void *)(v0 + 192);
      uint64_t v54 = *(void *)(v0 + 200);
      uint64_t v56 = *(void *)(v0 + 184);
      uint64_t v57 = sub_100009688(v56, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v54, v57, v56);
      char v68 = *(unsigned char *)(v0 + 64);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v58 = v77;
      sub_10003DC88(v77, v53);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10003DC88(v77, v53);
      long long v59 = sub_10045D2F0();
      os_log_type_t type = sub_100461750();
      BOOL v60 = os_log_type_enabled(v59, type);
      uint64_t v76 = *(void *)(v0 + 192);
      uint64_t v73 = *(void *)(v0 + 184);
      uint64_t v74 = *(void *)(v0 + 200);
      if (v60)
      {
        log = v59;
        uint64_t v61 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 136446466;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v62 = ActionType.rawValue.getter(v68);
        *(void *)(v61 + 4) = sub_10001FCAC(v62, v63, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        *(_WORD *)(v61 + 12) = 2082;
        *(void *)(v0 + 128) = v77;
        *(void *)(v0 + 136) = v53;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v64 = sub_100460D40();
        *(void *)(v61 + 14) = sub_10001FCAC(v64, v65, (uint64_t *)v78);
        uint64_t v58 = v77;
        swift_bridgeObjectRelease();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
        _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v61, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
      }
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v73);
      sub_10003DC9C();
      swift_allocError();
      *long long v52 = v58;
      goto LABEL_27;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 224);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v25 = sub_100009688(v23, (uint64_t)qword_100572290);
  *(void *)(v0 + 240) = v25;
  long long v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(void *)(v0 + 248) = v26;
  *(void *)(v0 + 256) = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v26(v22, v25, v23);
  char v72 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  char v27 = sub_10045D2F0();
  os_log_type_t v28 = sub_100461770();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 224);
  uint64_t v31 = *(void *)(v0 + 184);
  uint64_t v32 = *(void *)(v0 + 192);
  if (v29)
  {
    *(void *)typea = *(void *)(v0 + 224);
    uint64_t v33 = swift_slowAlloc();
    *(void *)&v78[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446210;
    uint64_t v34 = ActionType.rawValue.getter(v72);
    *(void *)(v33 + 4) = sub_10001FCAC(v34, v35, (uint64_t *)v78);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%{public}s: performing…", (uint8_t *)v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(os_log_type_t *, uint64_t))(v32 + 8))(*(os_log_type_t **)typea, v31);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v36 = *(void *)(v0 + 176);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v37 = [self mainRunLoop];
  uint64_t v38 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v36, 1, 1, v38);
  uint64_t v39 = sub_100461CB0();

  sub_100009790(v36, &qword_1005722C0);
  *(void *)(v0 + 144) = v39;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v40 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 152) = v40;
  uint64_t v41 = *(void *)(v0 + 16);
  uint64_t v42 = *(void *)(v0 + 56);
  char v43 = *(unsigned char *)(v0 + 64);
  uint64_t v45 = *(void *)(v0 + 72);
  uint64_t v44 = *(void *)(v0 + 80);
  uint64_t v46 = *(void *)(v0 + 88);
  uint64_t v47 = *(void *)(v0 + 96);
  uint64_t v48 = *(void *)(v0 + 120);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v41;
  *(_OWORD *)(v49 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v49 + 40) = *(_OWORD *)(v0 + 40);
  *(void *)(v49 + 56) = v42;
  *(unsigned char *)(v49 + 64) = v43;
  *(void *)(v49 + 72) = v45;
  *(void *)(v49 + 80) = v44;
  *(void *)(v49 + 88) = v46;
  *(void *)(v49 + 96) = v47;
  *(_OWORD *)(v49 + 104) = *(_OWORD *)(v0 + 104);
  *(void *)(v49 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 264) = sub_10045D7B0();
  swift_release();
  swift_release();
  BOOL v75 = (uint64_t (*)(void))(*(void *)(v0 + 96) + **(int **)(v0 + 96));
  uint64_t v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v50;
  *uint64_t v50 = v0;
  v50[1] = sub_100151E5C;
  return v75();
}

uint64_t sub_100151E5C()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001731C8;
  }
  else {
    uint64_t v2 = sub_100151F70;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100151F70()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 184);
  sub_10045D660();
  v2(v3, v1, v4);
  char v27 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v5 = sub_10045D2F0();
  os_log_type_t v6 = sub_100461770();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 184);
  if (v7)
  {
    log = v5;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v11 = ActionType.rawValue.getter(v27);
    *(void *)(v10 + 4) = sub_10001FCAC(v11, v12, &v29);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v10 + 12) = 2082;
    *(void *)(v10 + 14) = sub_10001FCAC(0, 0xE000000000000000, &v29);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "%{public}s: perform success%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v14 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = *(void *)(v0 + 16);
  uint64_t v16 = *(void *)(v0 + 56);
  char v17 = *(unsigned char *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 72);
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v21 = *(void *)(v0 + 96);
  uint64_t v22 = *(void *)(v0 + 120);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  *(void *)(v23 + 32) = v15;
  *(_OWORD *)(v23 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v23 + 56) = *(_OWORD *)(v0 + 40);
  *(void *)(v23 + 72) = v16;
  *(unsigned char *)(v23 + 80) = v17;
  *(void *)(v23 + 88) = v19;
  *(void *)(v23 + 96) = v18;
  *(void *)(v23 + 104) = v20;
  *(void *)(v23 + 112) = v21;
  *(_OWORD *)(v23 + 120) = *(_OWORD *)(v0 + 104);
  *(void *)(v23 + 136) = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100039C5C(v13, (uint64_t)&unk_100576528, v23);
  swift_release();
  swift_release();
  sub_100009790(v13, &qword_100574B80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_10015238C(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 288) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 168) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 176) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 184) = v4;
  *(void *)(v3 + 192) = *(void *)(v4 - 8);
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  *(_OWORD *)(v3 + 112) = v2[6];
  long long v6 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v6;
  long long v7 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v7;
  return _swift_task_switch(sub_100152500, 0, 0);
}

uint64_t sub_100152500()
{
  uint64_t v85 = v0;
  char v1 = *(unsigned char *)(v0 + 64);
  if (ActionType.isHidden.getter(v1))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v2 = *(void *)(v0 + 232);
      uint64_t v3 = *(void *)(v0 + 184);
      uint64_t v4 = *(void *)(v0 + 192);
      uint64_t v5 = sub_100009688(v3, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      long long v6 = sub_10045D2F0();
      os_log_type_t v7 = sub_100461750();
      BOOL v8 = os_log_type_enabled(v6, v7);
      uint64_t v9 = *(void *)(v0 + 232);
      uint64_t v10 = *(void *)(v0 + 184);
      uint64_t v11 = *(void *)(v0 + 192);
      if (v8)
      {
        uint64_t v71 = *(void *)(v0 + 232);
        uint64_t v12 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136446210;
        uint64_t v13 = ActionType.rawValue.getter(v1);
        *(void *)(v12 + 4) = sub_10001FCAC(v13, v14, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v71, v10);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
    }
    sub_10003DC9C();
    swift_allocError();
    *long long v52 = 0xD000000000000014;
    uint64_t v53 = 0x800000010048EDB0;
LABEL_27:
    v52[1] = v53;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
    return v66();
  }
  if ((*(unsigned char *)(v0 + 288) & 1) == 0)
  {
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 88);
    long long v18 = *(_OWORD *)(v0 + 32);
    v78[0] = *(_OWORD *)(v0 + 16);
    v78[1] = v18;
    v78[2] = *(_OWORD *)(v0 + 48);
    char v79 = v1;
    uint64_t v80 = v15;
    uint64_t v81 = v16;
    uint64_t v82 = v17;
    long long v19 = *(_OWORD *)(v0 + 112);
    long long v83 = *(_OWORD *)(v0 + 96);
    long long v84 = v19;
    uint64_t v20 = v15(v78);
    if (v21 != 1)
    {
      uint64_t v53 = v21;
      uint64_t v77 = v20;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v55 = *(void *)(v0 + 192);
      uint64_t v54 = *(void *)(v0 + 200);
      uint64_t v56 = *(void *)(v0 + 184);
      uint64_t v57 = sub_100009688(v56, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v54, v57, v56);
      char v68 = *(unsigned char *)(v0 + 64);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v58 = v77;
      sub_10003DC88(v77, v53);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10003DC88(v77, v53);
      long long v59 = sub_10045D2F0();
      os_log_type_t type = sub_100461750();
      BOOL v60 = os_log_type_enabled(v59, type);
      uint64_t v76 = *(void *)(v0 + 192);
      uint64_t v73 = *(void *)(v0 + 184);
      uint64_t v74 = *(void *)(v0 + 200);
      if (v60)
      {
        log = v59;
        uint64_t v61 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 136446466;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v62 = ActionType.rawValue.getter(v68);
        *(void *)(v61 + 4) = sub_10001FCAC(v62, v63, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        *(_WORD *)(v61 + 12) = 2082;
        *(void *)(v0 + 128) = v77;
        *(void *)(v0 + 136) = v53;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v64 = sub_100460D40();
        *(void *)(v61 + 14) = sub_10001FCAC(v64, v65, (uint64_t *)v78);
        uint64_t v58 = v77;
        swift_bridgeObjectRelease();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
        _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v61, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
      }
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v73);
      sub_10003DC9C();
      swift_allocError();
      *long long v52 = v58;
      goto LABEL_27;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 224);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v25 = sub_100009688(v23, (uint64_t)qword_100572290);
  *(void *)(v0 + 240) = v25;
  long long v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(void *)(v0 + 248) = v26;
  *(void *)(v0 + 256) = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v26(v22, v25, v23);
  char v72 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  char v27 = sub_10045D2F0();
  os_log_type_t v28 = sub_100461770();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 224);
  uint64_t v31 = *(void *)(v0 + 184);
  uint64_t v32 = *(void *)(v0 + 192);
  if (v29)
  {
    *(void *)typea = *(void *)(v0 + 224);
    uint64_t v33 = swift_slowAlloc();
    *(void *)&v78[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446210;
    uint64_t v34 = ActionType.rawValue.getter(v72);
    *(void *)(v33 + 4) = sub_10001FCAC(v34, v35, (uint64_t *)v78);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%{public}s: performing…", (uint8_t *)v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(os_log_type_t *, uint64_t))(v32 + 8))(*(os_log_type_t **)typea, v31);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v36 = *(void *)(v0 + 176);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v37 = [self mainRunLoop];
  uint64_t v38 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v36, 1, 1, v38);
  uint64_t v39 = sub_100461CB0();

  sub_100009790(v36, &qword_1005722C0);
  *(void *)(v0 + 144) = v39;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v40 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 152) = v40;
  uint64_t v41 = *(void *)(v0 + 16);
  uint64_t v42 = *(void *)(v0 + 56);
  char v43 = *(unsigned char *)(v0 + 64);
  uint64_t v45 = *(void *)(v0 + 72);
  uint64_t v44 = *(void *)(v0 + 80);
  uint64_t v46 = *(void *)(v0 + 88);
  uint64_t v47 = *(void *)(v0 + 96);
  uint64_t v48 = *(void *)(v0 + 120);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v41;
  *(_OWORD *)(v49 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v49 + 40) = *(_OWORD *)(v0 + 40);
  *(void *)(v49 + 56) = v42;
  *(unsigned char *)(v49 + 64) = v43;
  *(void *)(v49 + 72) = v45;
  *(void *)(v49 + 80) = v44;
  *(void *)(v49 + 88) = v46;
  *(void *)(v49 + 96) = v47;
  *(_OWORD *)(v49 + 104) = *(_OWORD *)(v0 + 104);
  *(void *)(v49 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 264) = sub_10045D7B0();
  swift_release();
  swift_release();
  BOOL v75 = (uint64_t (*)(void))(*(void *)(v0 + 96) + **(int **)(v0 + 96));
  uint64_t v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v50;
  *uint64_t v50 = v0;
  v50[1] = sub_100153174;
  return v75();
}

uint64_t sub_100153174()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001536A4;
  }
  else {
    uint64_t v2 = sub_100153288;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100153288()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 184);
  sub_10045D660();
  v2(v3, v1, v4);
  char v27 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v5 = sub_10045D2F0();
  os_log_type_t v6 = sub_100461770();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 184);
  if (v7)
  {
    log = v5;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v11 = ActionType.rawValue.getter(v27);
    *(void *)(v10 + 4) = sub_10001FCAC(v11, v12, &v29);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v10 + 12) = 2082;
    *(void *)(v10 + 14) = sub_10001FCAC(0, 0xE000000000000000, &v29);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "%{public}s: perform success%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v14 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = *(void *)(v0 + 16);
  uint64_t v16 = *(void *)(v0 + 56);
  char v17 = *(unsigned char *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 72);
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v21 = *(void *)(v0 + 96);
  uint64_t v22 = *(void *)(v0 + 120);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  *(void *)(v23 + 32) = v15;
  *(_OWORD *)(v23 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v23 + 56) = *(_OWORD *)(v0 + 40);
  *(void *)(v23 + 72) = v16;
  *(unsigned char *)(v23 + 80) = v17;
  *(void *)(v23 + 88) = v19;
  *(void *)(v23 + 96) = v18;
  *(void *)(v23 + 104) = v20;
  *(void *)(v23 + 112) = v21;
  *(_OWORD *)(v23 + 120) = *(_OWORD *)(v0 + 104);
  *(void *)(v23 + 136) = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100039C5C(v13, (uint64_t)&unk_100576548, v23);
  swift_release();
  swift_release();
  sub_100009790(v13, &qword_100574B80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1001536A4()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 184);
  swift_release();
  v2(v3, v1, v4);
  char v5 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_errorRetain();
  os_log_type_t v6 = sub_10045D2F0();
  os_log_type_t v7 = sub_100461750();
  log = v6;
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = *(void *)(v0 + 280);
    uint64_t v19 = *(void *)(v0 + 192);
    uint64_t v20 = *(void *)(v0 + 184);
    uint64_t v21 = *(void *)(v0 + 208);
    os_log_type_t type = v7;
    uint64_t v9 = swift_slowAlloc();
    v24[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446466;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v10 = ActionType.rawValue.getter(v5);
    *(void *)(v9 + 4) = sub_10001FCAC(v10, v11, v24);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v9 + 12) = 2082;
    *(void *)(v0 + 160) = v8;
    swift_errorRetain();
    sub_100005BFC((uint64_t *)&unk_100575460);
    uint64_t v12 = sub_100460D40();
    *(void *)(v9 + 14) = sub_10001FCAC(v12, v13, v24);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: perform failed: %{public}s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 208);
    uint64_t v15 = *(void *)(v0 + 184);
    uint64_t v14 = *(void *)(v0 + 192);
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v22, v15);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_100153A7C(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 288) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 168) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 176) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 184) = v4;
  *(void *)(v3 + 192) = *(void *)(v4 - 8);
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  *(_OWORD *)(v3 + 112) = v2[6];
  long long v6 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v6;
  long long v7 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v7;
  return _swift_task_switch(sub_100153BF0, 0, 0);
}

uint64_t sub_100153BF0()
{
  uint64_t v85 = v0;
  char v1 = *(unsigned char *)(v0 + 64);
  if (ActionType.isHidden.getter(v1))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v2 = *(void *)(v0 + 232);
      uint64_t v3 = *(void *)(v0 + 184);
      uint64_t v4 = *(void *)(v0 + 192);
      uint64_t v5 = sub_100009688(v3, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      long long v6 = sub_10045D2F0();
      os_log_type_t v7 = sub_100461750();
      BOOL v8 = os_log_type_enabled(v6, v7);
      uint64_t v9 = *(void *)(v0 + 232);
      uint64_t v10 = *(void *)(v0 + 184);
      uint64_t v11 = *(void *)(v0 + 192);
      if (v8)
      {
        uint64_t v71 = *(void *)(v0 + 232);
        uint64_t v12 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136446210;
        uint64_t v13 = ActionType.rawValue.getter(v1);
        *(void *)(v12 + 4) = sub_10001FCAC(v13, v14, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v71, v10);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
    }
    sub_10003DC9C();
    swift_allocError();
    *long long v52 = 0xD000000000000014;
    uint64_t v53 = 0x800000010048EDB0;
LABEL_27:
    v52[1] = v53;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
    return v66();
  }
  if ((*(unsigned char *)(v0 + 288) & 1) == 0)
  {
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 88);
    long long v18 = *(_OWORD *)(v0 + 32);
    v78[0] = *(_OWORD *)(v0 + 16);
    v78[1] = v18;
    v78[2] = *(_OWORD *)(v0 + 48);
    char v79 = v1;
    uint64_t v80 = v15;
    uint64_t v81 = v16;
    uint64_t v82 = v17;
    long long v19 = *(_OWORD *)(v0 + 112);
    long long v83 = *(_OWORD *)(v0 + 96);
    long long v84 = v19;
    uint64_t v20 = v15(v78);
    if (v21 != 1)
    {
      uint64_t v53 = v21;
      uint64_t v77 = v20;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v55 = *(void *)(v0 + 192);
      uint64_t v54 = *(void *)(v0 + 200);
      uint64_t v56 = *(void *)(v0 + 184);
      uint64_t v57 = sub_100009688(v56, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v54, v57, v56);
      char v68 = *(unsigned char *)(v0 + 64);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v58 = v77;
      sub_10003DC88(v77, v53);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10003DC88(v77, v53);
      long long v59 = sub_10045D2F0();
      os_log_type_t type = sub_100461750();
      BOOL v60 = os_log_type_enabled(v59, type);
      uint64_t v76 = *(void *)(v0 + 192);
      uint64_t v73 = *(void *)(v0 + 184);
      uint64_t v74 = *(void *)(v0 + 200);
      if (v60)
      {
        log = v59;
        uint64_t v61 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 136446466;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v62 = ActionType.rawValue.getter(v68);
        *(void *)(v61 + 4) = sub_10001FCAC(v62, v63, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        *(_WORD *)(v61 + 12) = 2082;
        *(void *)(v0 + 128) = v77;
        *(void *)(v0 + 136) = v53;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v64 = sub_100460D40();
        *(void *)(v61 + 14) = sub_10001FCAC(v64, v65, (uint64_t *)v78);
        uint64_t v58 = v77;
        swift_bridgeObjectRelease();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
        _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v61, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
      }
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v73);
      sub_10003DC9C();
      swift_allocError();
      *long long v52 = v58;
      goto LABEL_27;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 224);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v25 = sub_100009688(v23, (uint64_t)qword_100572290);
  *(void *)(v0 + 240) = v25;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(void *)(v0 + 248) = v26;
  *(void *)(v0 + 256) = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v26(v22, v25, v23);
  char v72 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  char v27 = sub_10045D2F0();
  os_log_type_t v28 = sub_100461770();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 224);
  uint64_t v31 = *(void *)(v0 + 184);
  uint64_t v32 = *(void *)(v0 + 192);
  if (v29)
  {
    *(void *)typea = *(void *)(v0 + 224);
    uint64_t v33 = swift_slowAlloc();
    *(void *)&v78[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446210;
    uint64_t v34 = ActionType.rawValue.getter(v72);
    *(void *)(v33 + 4) = sub_10001FCAC(v34, v35, (uint64_t *)v78);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%{public}s: performing…", (uint8_t *)v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(os_log_type_t *, uint64_t))(v32 + 8))(*(os_log_type_t **)typea, v31);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v36 = *(void *)(v0 + 176);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v37 = [self mainRunLoop];
  uint64_t v38 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v36, 1, 1, v38);
  uint64_t v39 = sub_100461CB0();

  sub_100009790(v36, &qword_1005722C0);
  *(void *)(v0 + 144) = v39;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v40 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 152) = v40;
  uint64_t v41 = *(void *)(v0 + 16);
  uint64_t v42 = *(void *)(v0 + 56);
  char v43 = *(unsigned char *)(v0 + 64);
  uint64_t v45 = *(void *)(v0 + 72);
  uint64_t v44 = *(void *)(v0 + 80);
  uint64_t v46 = *(void *)(v0 + 88);
  uint64_t v47 = *(void *)(v0 + 96);
  uint64_t v48 = *(void *)(v0 + 120);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v41;
  *(_OWORD *)(v49 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v49 + 40) = *(_OWORD *)(v0 + 40);
  *(void *)(v49 + 56) = v42;
  *(unsigned char *)(v49 + 64) = v43;
  *(void *)(v49 + 72) = v45;
  *(void *)(v49 + 80) = v44;
  *(void *)(v49 + 88) = v46;
  *(void *)(v49 + 96) = v47;
  *(_OWORD *)(v49 + 104) = *(_OWORD *)(v0 + 104);
  *(void *)(v49 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 264) = sub_10045D7B0();
  swift_release();
  swift_release();
  BOOL v75 = (uint64_t (*)(void))(*(void *)(v0 + 96) + **(int **)(v0 + 96));
  uint64_t v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v50;
  *uint64_t v50 = v0;
  v50[1] = sub_100154864;
  return v75();
}

uint64_t sub_100154864()
{
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1001731C8;
  }
  else {
    uint64_t v2 = sub_100154978;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100154978()
{
  uint64_t v30 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 184);
  sub_10045D660();
  v2(v3, v1, v4);
  char v27 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v5 = sub_10045D2F0();
  os_log_type_t v6 = sub_100461770();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 184);
  if (v7)
  {
    log = v5;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    uint64_t v11 = ActionType.rawValue.getter(v27);
    *(void *)(v10 + 4) = sub_10001FCAC(v11, v12, &v29);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    *(_WORD *)(v10 + 12) = 2082;
    *(void *)(v10 + 14) = sub_10001FCAC(0, 0xE000000000000000, &v29);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "%{public}s: perform success%{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v28);
  }
  uint64_t v13 = *(void *)(v0 + 168);
  uint64_t v14 = sub_1004612C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = *(void *)(v0 + 16);
  uint64_t v16 = *(void *)(v0 + 56);
  char v17 = *(unsigned char *)(v0 + 64);
  uint64_t v19 = *(void *)(v0 + 72);
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v20 = *(void *)(v0 + 88);
  uint64_t v21 = *(void *)(v0 + 96);
  uint64_t v22 = *(void *)(v0 + 120);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  *(void *)(v23 + 32) = v15;
  *(_OWORD *)(v23 + 40) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v23 + 56) = *(_OWORD *)(v0 + 40);
  *(void *)(v23 + 72) = v16;
  *(unsigned char *)(v23 + 80) = v17;
  *(void *)(v23 + 88) = v19;
  *(void *)(v23 + 96) = v18;
  *(void *)(v23 + 104) = v20;
  *(void *)(v23 + 112) = v21;
  *(_OWORD *)(v23 + 120) = *(_OWORD *)(v0 + 104);
  *(void *)(v23 + 136) = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100039C5C(v13, (uint64_t)&unk_100576568, v23);
  swift_release();
  swift_release();
  sub_100009790(v13, &qword_100574B80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_100154D94(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 288) = a2;
  sub_100005BFC(&qword_100574B80);
  *(void *)(v3 + 168) = swift_task_alloc();
  sub_100005BFC(&qword_1005722C0);
  *(void *)(v3 + 176) = swift_task_alloc();
  uint64_t v4 = sub_10045D310();
  *(void *)(v3 + 184) = v4;
  *(void *)(v3 + 192) = *(void *)(v4 - 8);
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  long long v5 = v2[5];
  *(_OWORD *)(v3 + 80) = v2[4];
  *(_OWORD *)(v3 + 96) = v5;
  *(_OWORD *)(v3 + 112) = v2[6];
  long long v6 = v2[1];
  *(_OWORD *)(v3 + 16) = *v2;
  *(_OWORD *)(v3 + 32) = v6;
  long long v7 = v2[3];
  *(_OWORD *)(v3 + 48) = v2[2];
  *(_OWORD *)(v3 + 64) = v7;
  return _swift_task_switch(sub_100154F08, 0, 0);
}

uint64_t sub_100154F08()
{
  uint64_t v85 = v0;
  char v1 = *(unsigned char *)(v0 + 64);
  if (ActionType.isHidden.getter(v1))
  {
    if (qword_1005710B8 != -1) {
      swift_once();
    }
    if (static DeviceCapabilities.isInternalInstall)
    {
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v2 = *(void *)(v0 + 232);
      uint64_t v3 = *(void *)(v0 + 184);
      uint64_t v4 = *(void *)(v0 + 192);
      uint64_t v5 = sub_100009688(v3, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      long long v6 = sub_10045D2F0();
      os_log_type_t v7 = sub_100461750();
      BOOL v8 = os_log_type_enabled(v6, v7);
      uint64_t v9 = *(void *)(v0 + 232);
      uint64_t v10 = *(void *)(v0 + 184);
      uint64_t v11 = *(void *)(v0 + 192);
      if (v8)
      {
        uint64_t v71 = *(void *)(v0 + 232);
        uint64_t v12 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136446210;
        uint64_t v13 = ActionType.rawValue.getter(v1);
        *(void *)(v12 + 4) = sub_10001FCAC(v13, v14, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s: attempted to execute but identifier is hidden", (uint8_t *)v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v71, v10);
      }
      else
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      }
    }
    sub_10003DC9C();
    swift_allocError();
    *long long v52 = 0xD000000000000014;
    uint64_t v53 = 0x800000010048EDB0;
LABEL_27:
    v52[1] = v53;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = *(uint64_t (**)(void))(v0 + 8);
    return v66();
  }
  if ((*(unsigned char *)(v0 + 288) & 1) == 0)
  {
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 88);
    long long v18 = *(_OWORD *)(v0 + 32);
    v78[0] = *(_OWORD *)(v0 + 16);
    v78[1] = v18;
    v78[2] = *(_OWORD *)(v0 + 48);
    char v79 = v1;
    uint64_t v80 = v15;
    uint64_t v81 = v16;
    uint64_t v82 = v17;
    long long v19 = *(_OWORD *)(v0 + 112);
    long long v83 = *(_OWORD *)(v0 + 96);
    long long v84 = v19;
    uint64_t v20 = v15(v78);
    if (v21 != 1)
    {
      uint64_t v53 = v21;
      uint64_t v77 = v20;
      if (qword_100570728 != -1) {
        swift_once();
      }
      uint64_t v55 = *(void *)(v0 + 192);
      uint64_t v54 = *(void *)(v0 + 200);
      uint64_t v56 = *(void *)(v0 + 184);
      uint64_t v57 = sub_100009688(v56, (uint64_t)qword_100572290);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v54, v57, v56);
      char v68 = *(unsigned char *)(v0 + 64);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v58 = v77;
      sub_10003DC88(v77, v53);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_10003DC88(v77, v53);
      long long v59 = sub_10045D2F0();
      os_log_type_t type = sub_100461750();
      BOOL v60 = os_log_type_enabled(v59, type);
      uint64_t v76 = *(void *)(v0 + 192);
      uint64_t v73 = *(void *)(v0 + 184);
      uint64_t v74 = *(void *)(v0 + 200);
      if (v60)
      {
        log = v59;
        uint64_t v61 = swift_slowAlloc();
        *(void *)&v78[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v61 = 136446466;
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v62 = ActionType.rawValue.getter(v68);
        *(void *)(v61 + 4) = sub_10001FCAC(v62, v63, (uint64_t *)v78);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        *(_WORD *)(v61 + 12) = 2082;
        *(void *)(v0 + 128) = v77;
        *(void *)(v0 + 136) = v53;
        swift_bridgeObjectRetain();
        sub_100005BFC((uint64_t *)&unk_100577400);
        uint64_t v64 = sub_100460D40();
        *(void *)(v61 + 14) = sub_10001FCAC(v64, v65, (uint64_t *)v78);
        uint64_t v58 = v77;
        swift_bridgeObjectRelease();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
        _os_log_impl((void *)&_mh_execute_header, log, type, "%{public}s: attempted to execute but was unsupported for reason: %{public}s", (uint8_t *)v61, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        sub_100018DAC(v77, v53);
        sub_100018DAC(v77, v53);
      }
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v73);
      sub_10003DC9C();
      swift_allocError();
      *long long v52 = v58;
      goto LABEL_27;
    }
  }
  if (qword_100570728 != -1) {
    swift_once();
  }
  uint64_t v22 = *(void *)(v0 + 224);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v25 = sub_100009688(v23, (uint64_t)qword_100572290);
  *(void *)(v0 + 240) = v25;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  *(void *)(v0 + 248) = v26;
  *(void *)(v0 + 256) = (v24 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v26(v22, v25, v23);
  char v72 = *(unsigned char *)(v0 + 64);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  char v27 = sub_10045D2F0();
  os_log_type_t v28 = sub_100461770();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 224);
  uint64_t v31 = *(void *)(v0 + 184);
  uint64_t v32 = *(void *)(v0 + 192);
  if (v29)
  {
    *(void *)typea = *(void *)(v0 + 224);
    uint64_t v33 = swift_slowAlloc();
    *(void *)&v78[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136446210;
    uint64_t v34 = ActionType.rawValue.getter(v72);
    *(void *)(v33 + 4) = sub_10001FCAC(v34, v35, (uint64_t *)v78);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%{public}s: performing…", (uint8_t *)v33, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(os_log_type_t *, uint64_t))(v32 + 8))(*(os_log_type_t **)typea, v31);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  uint64_t v36 = *(void *)(v0 + 176);
  sub_100009854(0, (unint64_t *)&qword_1005722C8);
  id v37 = [self mainRunLoop];
  uint64_t v38 = sub_100461E20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v36, 1, 1, v38);
  uint64_t v39 = sub_100461CB0();

  sub_100009790(v36, &qword_1005722C0);
  *(void *)(v0 + 144) = v39;
  sub_100461CA0();
  sub_100171A18((unint64_t *)&qword_1005722D0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v40 = sub_10045D6B0();
  swift_release();
  *(void *)(v0 + 152) = v40;
  uint64_t v41 = *(void *)(v0 + 16);
  uint64_t v42 = *(void *)(v0 + 56);
  char v43 = *(unsigned char *)(v0 + 64);
  uint64_t v45 = *(void *)(v0 + 72);
  uint64_t v44 = *(void *)(v0 + 80);
  uint64_t v46 = *(void *)(v0 + 88);
  uint64_t v47 = *(void *)(v0 + 96);
  uint64_t v48 = *(void *)(v0 + 120);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v41;
  *(_OWORD *)(v49 + 24) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v49 + 40) = *(_OWORD *)(v0 + 40);
  *(void *)(v49 + 56) = v42;
  *(unsigned char *)(v49 + 64) = v43;
  *(void *)(v49 + 72) = v45;
  *(void *)(v49 + 80) = v44;
  *(void *)(v49 + 88) = v46;
  *(void *)(v49 + 96) = v47;
  *(_OWORD *)(v49 + 104) = *(_OWORD *)(v0 + 104);
  *(void *)(v49 + 120) = v48;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100005BFC(&qword_1005722D8);
  sub_10003F604(&qword_1005722E0, &qword_1005722D8);
  *(void *)(v0 + 264) = sub_10045D7B0();
  swift_release();
  swift_release();
  BOOL v75 = (uint64_t (*)(void))(*(void *)(v0 + 96) + **(int **)(v0 + 96));
  uint64_t v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v50;
  *uint64_t v50 = v0;
  v50[1] = sub_100155B7C;
  return v75();
}